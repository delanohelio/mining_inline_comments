{"pr_number": 25838, "pr_title": "Add ordered-list for diagnostics to BLangPackage", "pr_createdAt": "2020-09-16T06:06:49Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTE3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381179", "bodyText": "Theres another usage of dlog in the same class. Can we remove that too and completely remove the dlog from this class?", "author": "SupunS", "createdAt": "2020-09-16T11:59:58Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "diffHunk": "@@ -358,7 +358,7 @@ private boolean stopCompilation(BLangPackage pkgNode, CompilerPhase nextPhase) {\n         if (compilerPhase.compareTo(nextPhase) < 0) {\n             return true;\n         }\n-        return (checkNextPhase(nextPhase) && dlog.errorCount() > 0);\n+        return (checkNextPhase(nextPhase) && pkgNode.getErrorCount() > 0);", "originalCommit": "b4386ea9073454496f18056898765b4953aaf29a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTI0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381243", "bodyText": "Let use the constructor that accepts a comparator. Then we can avoid the diagnostic related classes from having to implement Comparable<T>", "author": "SupunS", "createdAt": "2020-09-16T12:00:03Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangPackage.java", "diffHunk": "@@ -99,7 +100,7 @@ public BLangPackage() {\n         this.completedPhases = EnumSet.noneOf(CompilerPhase.class);\n         this.testablePkgs = new ArrayList<>();\n         this.flagSet = EnumSet.noneOf(Flag.class);\n-        this.diagnostics = new ArrayList<>();\n+        this.diagnostics = new TreeSet<>();", "originalCommit": "b4386ea9073454496f18056898765b4953aaf29a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTY5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381694", "bodyText": "Let's remove all usages of dlog from this class", "author": "SupunS", "createdAt": "2020-09-16T12:00:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/Compiler.java", "diffHunk": "@@ -97,7 +97,7 @@ public BLangPackage build(String sourcePackage) {\n         }\n         this.outStream.println(\"Compiling source\");\n         BLangPackage bLangPackage = compile(sourcePackage, true);\n-        if (this.dlog.errorCount() > 0) {\n+        if (bLangPackage.getErrorCount() > 0) {", "originalCommit": "b4386ea9073454496f18056898765b4953aaf29a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MjAwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489382002", "bodyText": "extract otherLineRange.startLine.line() to a variable", "author": "SupunS", "createdAt": "2020-09-16T12:01:35Z", "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java", "diffHunk": "@@ -73,4 +73,14 @@ public int hashCode() {\n     public String toString() {\n         return \"(\" + startLine + \",\" + endLine + \")\";\n     }\n+\n+    @Override\n+    public int compareTo(LineRange otherLineRange) {\n+        if (startLine.line() < otherLineRange.startLine.line()) {\n+            return -1;\n+        } else if (startLine.line() > otherLineRange.startLine.line()) {", "originalCommit": "b4386ea9073454496f18056898765b4953aaf29a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "714208c31b08f706f37145030babefe0ba1be377", "chunk": "diff --git a/compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java b/compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java\nindex b92cc962d99..2623f7ab6c7 100644\n--- a/compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java\n+++ b/compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java\n\n@@ -74,13 +74,4 @@ public class LineRange implements Comparable<LineRange> {\n         return \"(\" + startLine + \",\" + endLine + \")\";\n     }\n \n-    @Override\n-    public int compareTo(LineRange otherLineRange) {\n-        if (startLine.line() < otherLineRange.startLine.line()) {\n-            return -1;\n-        } else if (startLine.line() > otherLineRange.startLine.line()) {\n-            return 1;\n-        }\n-        return 0;\n-    }\n }\n"}}, {"oid": "6d92253335147d1e4ad4fd568d5da50058b4322b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d92253335147d1e4ad4fd568d5da50058b4322b", "message": "Add ordered-list for diagnostics to BLangPackage", "committedDate": "2020-09-17T03:31:31Z", "type": "commit"}, {"oid": "4e26e13c218ea1673afd9f117387b64a6ecd6a09", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4e26e13c218ea1673afd9f117387b64a6ecd6a09", "message": "Change diagnostic-location constructor", "committedDate": "2020-09-17T03:31:32Z", "type": "commit"}, {"oid": "714208c31b08f706f37145030babefe0ba1be377", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/714208c31b08f706f37145030babefe0ba1be377", "message": "Remove comparable", "committedDate": "2020-09-17T03:31:32Z", "type": "forcePushed"}, {"oid": "bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "message": "Improve ordering diagnostics", "committedDate": "2020-09-17T03:37:56Z", "type": "commit"}, {"oid": "bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "message": "Improve ordering diagnostics", "committedDate": "2020-09-17T03:37:56Z", "type": "forcePushed"}]}