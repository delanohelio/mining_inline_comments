{"pr_number": 22145, "pr_title": "Add Avro key serialization / deserialization support for Kafka module", "pr_createdAt": "2020-03-24T11:27:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145", "timeline": [{"oid": "97208163c8b0bea9da7d1f8302b0eed02ea5be71", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97208163c8b0bea9da7d1f8302b0eed02ea5be71", "message": "Add API documentation for AvroRecord", "committedDate": "2020-03-23T07:52:05Z", "type": "commit"}, {"oid": "246d0f3bc7adf0f587bbb4fbac688815dbce2fd0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/246d0f3bc7adf0f587bbb4fbac688815dbce2fd0", "message": "Arrange send functions into separtate classes byte value type", "committedDate": "2020-03-23T09:00:42Z", "type": "commit"}, {"oid": "916fd81de473a138d493805f625caa67efb80dfb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/916fd81de473a138d493805f625caa67efb80dfb", "message": "Add Avro key serialization support", "committedDate": "2020-03-23T17:17:09Z", "type": "commit"}, {"oid": "49cc493d547c5405aa2526ee1d333c52f9085a8b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49cc493d547c5405aa2526ee1d333c52f9085a8b", "message": "Add invalid serializer tests", "committedDate": "2020-03-23T18:14:51Z", "type": "commit"}, {"oid": "573e7f0300ce682d3e6c58a9ec6146baf7a1d06e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/573e7f0300ce682d3e6c58a9ec6146baf7a1d06e", "message": "Add avro key deserialization to consumers", "committedDate": "2020-03-24T12:46:43Z", "type": "commit"}, {"oid": "0be0da117cfddd6edc0b077440d385df7f2b6e93", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0be0da117cfddd6edc0b077440d385df7f2b6e93", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into kafka-1.2.1-fixes", "committedDate": "2020-03-24T18:49:51Z", "type": "commit"}, {"oid": "491168770e91ce92b6fa170d4d6721785321559e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/491168770e91ce92b6fa170d4d6721785321559e", "message": "Separate avro dependencies from the others", "committedDate": "2020-03-25T05:53:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397686421", "bodyText": "Shall we try to return ErrorValue here?", "author": "wggihan", "createdAt": "2020-03-25T08:43:48Z", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ *  Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.messaging.kafka.utils;\n+\n+import org.apache.avro.Schema;\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.avro.util.Utf8;\n+import org.ballerinalang.jvm.util.exceptions.BLangRuntimeException;\n+import org.ballerinalang.jvm.values.MapValue;\n+\n+import java.util.List;\n+\n+import static org.ballerinalang.messaging.kafka.utils.KafkaUtils.getAvroGenericRecord;\n+\n+/**\n+ * Utility functions to handle kafka avro operations.\n+ */\n+public class AvroUtils {\n+    /*\n+     * This is separated from the other classes since we don't pack avro dependencies  with the distribution.\n+     */\n+    private AvroUtils(){}\n+\n+    protected static void populateBallerinaGenericAvroRecord(MapValue<String, Object> genericAvroRecord,\n+                                                             GenericRecord record) {\n+        List<Schema.Field> fields = record.getSchema().getFields();\n+        for (Schema.Field field : fields) {\n+            if (record.get(field.name()) instanceof Utf8) {\n+                genericAvroRecord.put(field.name(), record.get(field.name()).toString());\n+            } else if (record.get(field.name()) instanceof GenericRecord) {\n+                populateBallerinaGenericAvroRecord(genericAvroRecord, (GenericRecord) record.get(field.name()));\n+            } else {\n+                genericAvroRecord.put(field.name(), record.get(field.name()));\n+            }\n+        }\n+    }\n+\n+    protected static MapValue<String, Object> handleAvroConsumer(Object value) {\n+        if (value instanceof GenericRecord) {\n+            MapValue<String, Object> genericAvroRecord = getAvroGenericRecord();\n+            populateBallerinaGenericAvroRecord(genericAvroRecord, (GenericRecord) value);\n+            return genericAvroRecord;\n+        } else {\n+            throw new BLangRuntimeException(\"Invalid type - expected: AvroGenericRecord\");", "originalCommit": "491168770e91ce92b6fa170d4d6721785321559e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg3NzE5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397877199", "bodyText": "This method is to just populate the consumer record. Ideally, this line of code shouldn't be reached. Also, this is called inside a resource invocation. Hence, I think throwing this is appropriate.", "author": "ThisaruGuruge", "createdAt": "2020-03-25T14:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDk0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397884947", "bodyText": "Both are extending from RuntimeException. But behaviour is different.  What is the behaviour getting if this throws this?", "author": "wggihan", "createdAt": "2020-03-25T14:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4Njg5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397886892", "bodyText": "This method is called from both the poll() function and the resource. If this line is hit when the poll is called, this will panic. If this is hit through the resource, this will log the error, and will continue.\nBut as I said, ideally, this wouldn't be reached until a user provides an incorrect configuration.\nI will change this to ErrorValue anyways.", "author": "ThisaruGuruge", "createdAt": "2020-03-25T14:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzMTg1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397931859", "bodyText": "Sometimes back there was a discussion about this throwing error whether it ErrorValue or BRuntime*. I couldn't remember now. @hasithaa @pubudu91 Any comment about what to use here?", "author": "wggihan", "createdAt": "2020-03-25T15:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODk0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397938945", "bodyText": "Updated", "author": "ThisaruGuruge", "createdAt": "2020-03-25T15:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e949becbaa3bc5b7ff4b16e2393c49c1dcef286d", "chunk": "diff --git a/stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java b/stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java\nindex d778bddc077..5a998328e30 100644\n--- a/stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java\n+++ b/stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java\n\n@@ -21,11 +21,12 @@ package org.ballerinalang.messaging.kafka.utils;\n import org.apache.avro.Schema;\n import org.apache.avro.generic.GenericRecord;\n import org.apache.avro.util.Utf8;\n-import org.ballerinalang.jvm.util.exceptions.BLangRuntimeException;\n import org.ballerinalang.jvm.values.MapValue;\n \n import java.util.List;\n \n+import static org.ballerinalang.messaging.kafka.utils.KafkaConstants.AVRO_ERROR;\n+import static org.ballerinalang.messaging.kafka.utils.KafkaUtils.createKafkaError;\n import static org.ballerinalang.messaging.kafka.utils.KafkaUtils.getAvroGenericRecord;\n \n /**\n"}}, {"oid": "29ea23e03734ecdca6b4fdc7fc58b65324570820", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29ea23e03734ecdca6b4fdc7fc58b65324570820", "message": "Update function names to increase readability", "committedDate": "2020-03-25T15:17:13Z", "type": "commit"}, {"oid": "e949becbaa3bc5b7ff4b16e2393c49c1dcef286d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e949becbaa3bc5b7ff4b16e2393c49c1dcef286d", "message": "Throw ErrorValue instead of BLangRuntimeException", "committedDate": "2020-03-25T15:17:46Z", "type": "commit"}]}