{"pr_number": 22277, "pr_title": "[1.2.x] Add support for map -> record assignment", "pr_createdAt": "2020-03-27T19:59:34Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22277", "timeline": [{"oid": "23d55624485a3c98e6f3c9c2059ef2bfbee26fd7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23d55624485a3c98e6f3c9c2059ef2bfbee26fd7", "message": "Remove redundant condition for map -> record type checking", "committedDate": "2020-03-26T08:06:18Z", "type": "commit"}, {"oid": "7e1dff90bcf6cf092e9c70792e33efb04e76781e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7e1dff90bcf6cf092e9c70792e33efb04e76781e", "message": "Add support for assigning map -> record", "committedDate": "2020-03-29T17:53:46Z", "type": "commit"}, {"oid": "7e1dff90bcf6cf092e9c70792e33efb04e76781e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7e1dff90bcf6cf092e9c70792e33efb04e76781e", "message": "Add support for assigning map -> record", "committedDate": "2020-03-29T17:53:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjY2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22277#discussion_r399922669", "bodyText": "Shouldn't this be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                !isAssignable(targetRecType.restFieldType, field.type)) {\n          \n          \n            \n                                !isAssignable(sourceMapType.constraint, field.type)) {", "author": "MaryamZi", "createdAt": "2020-03-30T04:36:49Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -631,6 +627,21 @@ private boolean recordFieldsAssignableToMap(BRecordType recordType, BMapType tar\n         return recordType.fields.stream().allMatch(field -> isAssignable(field.type, targetMapType.constraint));\n     }\n \n+    private boolean isAssignableMapType(BMapType sourceMapType, BRecordType targetRecType) {\n+        if (targetRecType.sealed) {\n+            return false;\n+        }\n+\n+        for (BField field : targetRecType.fields) {\n+            if (!Symbols.isFlagOn(field.symbol.flags, Flags.OPTIONAL) ||\n+                    !isAssignable(targetRecType.restFieldType, field.type)) {", "originalCommit": "7e1dff90bcf6cf092e9c70792e33efb04e76781e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "909ed747fd297ae330d5a28641af9dd68c0fc290", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\nindex 5df3d727015..1d3d0e83ed8 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n\n@@ -633,8 +633,8 @@ public class Types {\n         }\n \n         for (BField field : targetRecType.fields) {\n-            if (!Symbols.isFlagOn(field.symbol.flags, Flags.OPTIONAL) ||\n-                    !isAssignable(targetRecType.restFieldType, field.type)) {\n+            if (!(Symbols.isFlagOn(field.symbol.flags, Flags.OPTIONAL) &&\n+                    isAssignable(sourceMapType.constraint, field.type))) {\n                 return false;\n             }\n         }\n"}}, {"oid": "909ed747fd297ae330d5a28641af9dd68c0fc290", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/909ed747fd297ae330d5a28641af9dd68c0fc290", "message": "Address comments from the reviews", "committedDate": "2020-03-30T12:20:47Z", "type": "commit"}]}