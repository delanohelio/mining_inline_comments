{"pr_number": 27005, "pr_title": "Add an API to get type inclusions of record/object types", "pr_createdAt": "2020-11-18T19:27:59Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27005", "timeline": [{"oid": "b7b6d9fd88b745d39860efb5acdc5ae22cdbcdc5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7b6d9fd88b745d39860efb5acdc5ae22cdbcdc5", "message": "Add test cases for type inclusions", "committedDate": "2020-11-19T19:23:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM4ODUxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27005#discussion_r527388514", "bodyText": "Do we also have to persist this in BIR and read for symbols coming from a compiled package?", "author": "SupunS", "createdAt": "2020-11-20T04:26:15Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -2027,6 +2027,13 @@ private void resolveFields(BStructureType structureType, BLangStructureTypeNode\n                 .map(field -> new BField(names.fromIdNode(field.name), field.pos, field.symbol))\n                 .collect(getFieldCollector());\n \n+        List<BType> list = new ArrayList<>();\n+        for (BLangType tRef : structureTypeNode.typeRefs) {\n+            BType type = tRef.type;\n+            list.add(type);\n+        }\n+        structureType.typeInclusions = list;\n+", "originalCommit": "b7b6d9fd88b745d39860efb5acdc5ae22cdbcdc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3Njk3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27005#discussion_r527476976", "bodyText": "Yeah, good point. Need to persist. Will add it.", "author": "pubudu91", "createdAt": "2020-11-20T06:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM4ODUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1NTE5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27005#discussion_r527555194", "bodyText": "Added with 2b15df7. Created #27035 to track adding test cases related to this.", "author": "pubudu91", "createdAt": "2020-11-20T09:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM4ODUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "732219bc9d3e5d56595603c944c19d94d429a140", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\nindex 5e884b07994..0762ae01527 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\n\n@@ -2027,13 +2027,6 @@ public class SymbolEnter extends BLangNodeVisitor {\n                 .map(field -> new BField(names.fromIdNode(field.name), field.pos, field.symbol))\n                 .collect(getFieldCollector());\n \n-        List<BType> list = new ArrayList<>();\n-        for (BLangType tRef : structureTypeNode.typeRefs) {\n-            BType type = tRef.type;\n-            list.add(type);\n-        }\n-        structureType.typeInclusions = list;\n-\n         // Resolve and add the fields of the referenced types to this object.\n         resolveReferencedFields(structureTypeNode, typeDefEnv);\n \n"}}, {"oid": "2b15df70cd9166a73fd4634919766766b1d7d121", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b15df70cd9166a73fd4634919766766b1d7d121", "message": "Persist included type info in the BIR", "committedDate": "2020-11-20T09:10:09Z", "type": "forcePushed"}, {"oid": "0e05d687dab7c5e04643c9f41182f945fd745528", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e05d687dab7c5e04643c9f41182f945fd745528", "message": "Persist included type info in the BIR", "committedDate": "2020-11-20T09:21:46Z", "type": "forcePushed"}, {"oid": "732219bc9d3e5d56595603c944c19d94d429a140", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/732219bc9d3e5d56595603c944c19d94d429a140", "message": "Add an API for getting type inclusions from a record type", "committedDate": "2020-11-20T17:47:50Z", "type": "commit"}, {"oid": "a414541c648bf9be417aed32508434ac7c9fb58f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a414541c648bf9be417aed32508434ac7c9fb58f", "message": "Add type inclusions to BStructureType", "committedDate": "2020-11-20T17:47:50Z", "type": "commit"}, {"oid": "4fe0d64877e30363876712f4ac55a0a417a918a8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fe0d64877e30363876712f4ac55a0a417a918a8", "message": "Implement typeInclusions() for record type symbol", "committedDate": "2020-11-20T17:47:50Z", "type": "commit"}, {"oid": "704bb6d3715e8ac61be972195a0f8a8ee6c7382c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/704bb6d3715e8ac61be972195a0f8a8ee6c7382c", "message": "Implement typeInclusions() API for object types and classes", "committedDate": "2020-11-20T17:47:50Z", "type": "commit"}, {"oid": "724df7ed12593fdc38770bb98e50d30602d43b73", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/724df7ed12593fdc38770bb98e50d30602d43b73", "message": "Add test cases for type inclusions", "committedDate": "2020-11-20T17:47:50Z", "type": "commit"}, {"oid": "5fd455255a423f2595395d697aaa17df3eac54ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5fd455255a423f2595395d697aaa17df3eac54ef", "message": "Persist included type info in the BIR", "committedDate": "2020-11-20T17:47:51Z", "type": "commit"}, {"oid": "5fd455255a423f2595395d697aaa17df3eac54ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5fd455255a423f2595395d697aaa17df3eac54ef", "message": "Persist included type info in the BIR", "committedDate": "2020-11-20T17:47:51Z", "type": "forcePushed"}]}