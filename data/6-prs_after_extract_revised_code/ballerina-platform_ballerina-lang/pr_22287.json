{"pr_number": 22287, "pr_title": "[1.2.x] Add deprecation support", "pr_createdAt": "2020-03-28T17:50:21Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287", "timeline": [{"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4625fbaa458d45ab0b1e8d3984acba4da18b694c", "message": "Add deprecation support", "committedDate": "2020-03-29T14:08:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjkyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399832928", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDeprecatedParametersAttributeNode() {\n          \n          \n            \n                public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDownDeprecatedParametersAttributeNode() {", "author": "MaryamZi", "createdAt": "2020-03-29T18:10:37Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java", "diffHunk": "@@ -654,6 +656,10 @@ public static MarkDownDocumentationDeprecationAttributeNode createMarkDownDeprec\n         return new BLangMarkDownDeprecationDocumentation();\n     }\n \n+    public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDeprecatedParametersAttributeNode() {", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzI4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297286", "bodyText": "done", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java\nindex 6583a5196e6..bd31ef92f46 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java\n\n@@ -656,7 +656,8 @@ public class TreeBuilder {\n         return new BLangMarkDownDeprecationDocumentation();\n     }\n \n-    public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDeprecatedParametersAttributeNode() {\n+    public static MarkDownDocumentationDeprecatedParametersAttributeNode\n+                                                                createMarkDownDeprecatedParametersAttributeNode() {\n         return new BLangMarkDownDeprecatedParametersDocumentation();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjk3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399832973", "bodyText": "Incorrect version.", "author": "MaryamZi", "createdAt": "2020-03-29T18:11:17Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.model.tree.expressions;\n+\n+import org.wso2.ballerinalang.compiler.tree.expressions.BLangMarkdownParameterDocumentation;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents attributes in deprecated parameters documentation.\n+ *\n+ * @since 1.2.0", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzI2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297269", "bodyText": "done", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java\nindex fc290423fa3..1d59afac5ff 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java\n\n@@ -24,7 +24,7 @@ import java.util.LinkedList;\n /**\n  * Represents attributes in deprecated parameters documentation.\n  *\n- * @since 1.2.0\n+ * @since 1.2.1\n  */\n public interface MarkDownDocumentationDeprecatedParametersAttributeNode extends ExpressionNode {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDM3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399834374", "bodyText": "Shall we introduce a new one or use an existing NodeKind for this instead of returning null?", "author": "MaryamZi", "createdAt": "2020-03-29T18:23:41Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public String deprecationLine;\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void addDeprecatedParametersLine(String text) {\n+        deprecationLine = text;\n+        if (deprecationLine.equals(\"# # Deprecated parameters\")) {\n+            isCorrectDeprecationLine = true;\n+        }\n+    }\n+\n+    @Override\n+    public void accept(BLangNodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public NodeKind getKind() {\n+        return null;", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzI0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297242", "bodyText": "done", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:45:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDM3NA=="}], "type": "inlineReview", "revised_code": {"commit": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\nindex ac39ca7e818..575c88ffedb 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n\n@@ -26,7 +26,7 @@ import java.util.LinkedList;\n /**\n  * Represents deprecated parameters documentation node.\n  *\n- * @since 1.2.0\n+ * @since 1.2.1\n  */\n public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n         implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDQ3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399834475", "bodyText": "Incorrect version.", "author": "MaryamZi", "createdAt": "2020-03-29T18:24:23Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.0", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzIyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297224", "bodyText": "done", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\nindex ac39ca7e818..575c88ffedb 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n\n@@ -26,7 +26,7 @@ import java.util.LinkedList;\n /**\n  * Represents deprecated parameters documentation node.\n  *\n- * @since 1.2.0\n+ * @since 1.2.1\n  */\n public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n         implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNzE5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399837198", "bodyText": "Shall we call analyzeNode instead?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    conversionExpr.annAttachments.forEach(annotationAttachment -> annotationAttachment.accept(this));\n          \n          \n            \n                    conversionExpr.annAttachments.forEach(annotationAttachment -> analyzeNode(annotationAttachment, env));", "author": "MaryamZi", "createdAt": "2020-03-29T18:48:11Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -2211,6 +2255,7 @@ public void visit(BLangTypedescExpr accessExpr) {\n \n     public void visit(BLangTypeConversionExpr conversionExpr) {\n         analyzeExpr(conversionExpr.expr);\n+        conversionExpr.annAttachments.forEach(annotationAttachment -> annotationAttachment.accept(this));", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzE3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297170", "bodyText": "done", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNzE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\nindex 43ff8726f85..fd3c7a1dc4c 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n\n@@ -2255,7 +2248,7 @@ public class CodeAnalyzer extends BLangNodeVisitor {\n \n     public void visit(BLangTypeConversionExpr conversionExpr) {\n         analyzeExpr(conversionExpr.expr);\n-        conversionExpr.annAttachments.forEach(annotationAttachment -> annotationAttachment.accept(this));\n+        conversionExpr.annAttachments.forEach(annotationAttachment -> analyzeNode(annotationAttachment, env));\n     }\n \n     public void visit(BLangXMLQName xmlQName) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399912198", "bodyText": "Can this be null here?", "author": "MaryamZi", "createdAt": "2020-03-30T03:44:59Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -3401,6 +3401,16 @@ public void exitDeprecateAnnotationDescriptionLine(BallerinaParser.DeprecateAnno\n         this.pkgBuilder.endDeprecateAnnotationDocumentationDescription(getWS(ctx), description);\n     }\n \n+    @Override\n+    public void exitDeprecatedParametersDocumentation(BallerinaParser.DeprecatedParametersDocumentationContext ctx) {\n+        if (isInErrorState) {\n+            return;\n+        }\n+        String str = ctx.DeprecatedParametersDocumentation() != null ?", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzEzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297137", "bodyText": "Yes, because the markdown documentation can be available without deprecated parameter documentation.", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:45:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401047490", "bodyText": "But does exitDeprecatedParametersDocumentation() get invoked then?", "author": "MaryamZi", "createdAt": "2020-03-31T16:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0MTUwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401141503", "bodyText": "It does not get invoked when the deprecated params doc is not available. So null check is removed", "author": "KavinduZoysa", "createdAt": "2020-03-31T18:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\nindex 5718bafbf4e..b441186a223 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\n\n@@ -3406,9 +3406,7 @@ public class BLangParserListener extends BallerinaParserBaseListener {\n         if (isInErrorState) {\n             return;\n         }\n-        String str = ctx.DeprecatedParametersDocumentation() != null ?\n-                ctx.DeprecatedParametersDocumentation().getText() : \"\";\n-        this.pkgBuilder.endDeprecatedParametersDocumentation(getCurrentPos(ctx.getParent()), getWS(ctx), str);\n+        this.pkgBuilder.endDeprecatedParametersDocumentation(getCurrentPos(ctx.getParent()), getWS(ctx));\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399912368", "bodyText": "What about the return type?", "author": "MaryamZi", "createdAt": "2020-03-30T03:45:49Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -356,6 +358,9 @@ public void visit(BLangFunction funcNode) {\n         if (isLambda) {\n             return;\n         }\n+\n+        validateParams(funcNode);", "originalCommit": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5NzExOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400297119", "bodyText": "Here the purpose of validating params is to check the status of deprecation of each parameter. The return type is not checked here because we don't want to check the deprecation for the return type.", "author": "KavinduZoysa", "createdAt": "2020-03-30T15:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4NDQ5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400384499", "bodyText": "Got is, so if I have a function that returns Foo and Foo is deprecated I'll get a warning when returning a value, but not for the return type in the function signature?", "author": "MaryamZi", "createdAt": "2020-03-30T17:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzMjA3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400632070", "bodyText": "const string CONST3 = \"CONST3\";\nconst string CONST4 = \"CONST4\";\n\n@deprecated\npublic type T1 CONST3|CONST4;\n\npublic function func() returns T1 {\n}\n\nThat means since the T1 is deprecated, the warning should be printed in returns T1?", "author": "KavinduZoysa", "createdAt": "2020-03-31T04:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzNzQ4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400637488", "bodyText": "IMO, logging a warning for returns T1 will be useful.\nWDYT? Looping in @hasithaa too.", "author": "MaryamZi", "createdAt": "2020-03-31T04:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY1NzY1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400657653", "bodyText": "Logging a warning for return type is more useful for API developers.", "author": "hasithaa", "createdAt": "2020-03-31T05:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY3NjgwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r400676807", "bodyText": "Fix it here 7dfcccc", "author": "KavinduZoysa", "createdAt": "2020-03-31T06:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "message": "Identify the deprecation for return type", "committedDate": "2020-03-31T11:56:24Z", "type": "forcePushed"}, {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91d80a8b98e813523512899300cdb6b9f405bfc7", "message": "Identify the deprecation for return type", "committedDate": "2020-03-31T11:59:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NDIyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401054220", "bodyText": "Do we need to maintain this text? Can't we just maintain isCorrectDeprecationLine?", "author": "MaryamZi", "createdAt": "2020-03-31T16:35:06Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.1\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public String deprecationLine;\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void addDeprecatedParametersLine(String text) {\n+        deprecationLine = text;", "originalCommit": "91d80a8b98e813523512899300cdb6b9f405bfc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTgyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401139828", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-03-31T18:52:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NDIyMA=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\nindex 575c88ffedb..f318c893282 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n\n@@ -31,8 +31,6 @@ import java.util.LinkedList;\n public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n         implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n \n-    public String deprecationLine;\n-    public boolean isCorrectDeprecationLine = false;\n     public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n \n     public BLangMarkDownDeprecatedParametersDocumentation() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NTcyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401055723", "bodyText": "Shall we use a plain old foreach instead?", "author": "MaryamZi", "createdAt": "2020-03-31T16:37:29Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -380,6 +385,14 @@ public void visit(BLangFunction funcNode) {\n         } finally {\n             this.finalizeCurrentWorkerActionSystem();\n         }\n+        funcNode.annAttachments.forEach(annotationAttachment -> analyzeNode(annotationAttachment, env));\n+    }\n+\n+    private void validateParams(BLangFunction funcNode) {\n+        funcNode.requiredParams.forEach(param -> analyzeNode(param, env));", "originalCommit": "91d80a8b98e813523512899300cdb6b9f405bfc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTgwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401139800", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-03-31T18:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NTcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\nindex fd3c7a1dc4c..56f97b94005 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n\n@@ -389,7 +389,9 @@ public class CodeAnalyzer extends BLangNodeVisitor {\n     }\n \n     private void validateParams(BLangFunction funcNode) {\n-        funcNode.requiredParams.forEach(param -> analyzeNode(param, env));\n+        for (BLangSimpleVariable parameter : funcNode.requiredParams) {\n+            analyzeNode(parameter, env);\n+        }\n         if (funcNode.restParam != null) {\n             analyzeNode(funcNode.restParam, env);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NjU3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401056573", "bodyText": "Why do we need this change?", "author": "MaryamZi", "createdAt": "2020-03-31T16:38:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -207,9 +209,11 @@ public void visit(BLangService serviceNode) {\n     public void visit(BLangTypeDefinition typeDefinition) {\n         BLangType typeNode = typeDefinition.getTypeNode();\n         if (typeDefinition.typeNode.getKind() == NodeKind.OBJECT_TYPE) {\n-            List<? extends SimpleVariableNode> fields = ((BLangObjectTypeNode) typeNode).getFields();\n+            List<BLangSimpleVariable> fields = ((BLangObjectTypeNode) typeNode).fields;", "originalCommit": "91d80a8b98e813523512899300cdb6b9f405bfc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTc4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401139782", "bodyText": "The reason to assign fields into a list of BLangSimpleVariable is that in the method validateDeprecatedParameter we need parameter as BLangSimpleVariable instead of SimpleVariableNode.", "author": "KavinduZoysa", "createdAt": "2020-03-31T18:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NjU3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 52d4fcd2088..6e52d62ffb5 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -212,12 +212,13 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n             List<BLangSimpleVariable> fields = ((BLangObjectTypeNode) typeNode).fields;\n             validateParameters(typeDefinition, fields, null, DiagnosticCode.UNDOCUMENTED_FIELD,\n                     DiagnosticCode.NO_SUCH_DOCUMENTABLE_FIELD, DiagnosticCode.FIELD_ALREADY_DOCUMENTED);\n-            validateDeprecatedParameters(typeDefinition, fields, null,\n-                    DiagnosticCode.FIELD_ALREADY_DOCUMENTED, DiagnosticCode.NO_SUCH_DOCUMENTABLE_PARAMETER);\n             validateReturnParameter(typeDefinition, null, false);\n             validateReferences(typeDefinition);\n             for (SimpleVariableNode field : fields) {\n                 validateReferences(field);\n+                validateDeprecationDocumentation(field.getMarkdownDocumentationAttachment(),\n+                        Symbols.isFlagOn(((BLangSimpleVariable) field).symbol.flags, Flags.DEPRECATED),\n+                        (DiagnosticPos) field.getPosition());\n             }\n \n             ((BLangObjectTypeNode) typeDefinition.getTypeNode()).getFunctions().forEach(this::analyzeNode);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NzQwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401057400", "bodyText": "We may have to deprecate this instead.", "author": "MaryamZi", "createdAt": "2020-03-31T16:40:11Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -404,14 +404,6 @@ public BSymbol resolveObjectMethod(DiagnosticPos pos, SymbolEnv env, Name fieldN\n         return lookupMemberSymbol(pos, objectSymbol.methodScope, env, fieldName, SymTag.VARIABLE);\n     }\n \n-    public BType resolveTypeNodeWithDeprecationCheck(BLangType typeNode, SymbolEnv env) {", "originalCommit": "91d80a8b98e813523512899300cdb6b9f405bfc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzNzEyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401337129", "bodyText": "This was added recently and it had only one usage. I think it is better to delete it.", "author": "KavinduZoysa", "createdAt": "2020-04-01T03:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NzQwMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA2MTgwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401061805", "bodyText": "Can't we just return here if documentation.deprecatedParametersDocumentation != null? Will remove the nesting and the initialization to empty map at L565.", "author": "MaryamZi", "createdAt": "2020-03-31T16:46:49Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -534,4 +518,82 @@ private void validateReturnParameter(DocumentableNode documentableNode, BLangNod\n             returnParameter.setReturnType(((BLangFunction) node).getReturnTypeNode().type);\n         }\n     }\n+\n+    // List that holds fields that are documented at field level.\n+    private List<String> getDocumentedFields(List<? extends SimpleVariableNode> actualParameters) {\n+        List<String> fieldsDocumentedAtFieldLevel = new ArrayList<>();\n+        for (SimpleVariableNode field : actualParameters) {\n+            if (field.getMarkdownDocumentationAttachment() == null) {\n+                continue;\n+            }\n+            fieldsDocumentedAtFieldLevel.add(field.getName().getValue());\n+        }\n+        return fieldsDocumentedAtFieldLevel;\n+    }\n+\n+    private Map<String, BLangMarkdownParameterDocumentation> getDocumentedParameters(\n+            LinkedList<BLangMarkdownParameterDocumentation> deprecatedParameters,\n+            List<String> fieldsDocumentedFields,\n+            DiagnosticCode parameterAlreadyDefined) {\n+        Map<String, BLangMarkdownParameterDocumentation> documentedDeprecatedParameterMap = new HashMap<>();\n+\n+        for (BLangMarkdownParameterDocumentation parameter : deprecatedParameters) {\n+            String parameterName = parameter.getParameterName().getValue();\n+            // Check for parameters which are documented multiple times.\n+            if (documentedDeprecatedParameterMap.containsKey(parameterName) ||\n+                    fieldsDocumentedFields.contains(parameterName)) {\n+                dlog.warning(parameter.pos, parameterAlreadyDefined, parameterName);\n+                continue;\n+            }\n+            documentedDeprecatedParameterMap.put(parameterName, parameter);\n+        }\n+        return documentedDeprecatedParameterMap;\n+    }\n+\n+    private void validateDeprecatedParameters(DocumentableNode documentableNode,\n+                                             List<BLangSimpleVariable> actualParameters,\n+                                             BLangSimpleVariable restParam,\n+                                             DiagnosticCode parameterAlreadyDefined,\n+                                             DiagnosticCode noSuchParameter) {\n+        BLangMarkdownDocumentation documentation = documentableNode.getMarkdownDocumentationAttachment();\n+        if (documentation == null) {\n+            return;\n+        }\n+\n+        List<String> fieldsDocumentedAtFieldLevel = getDocumentedFields(actualParameters);\n+\n+        Map<String, BLangMarkdownParameterDocumentation> documentedDeprecatedParameterMap = new HashMap<>();\n+        if (documentation.deprecatedParametersDocumentation != null) {", "originalCommit": "91d80a8b98e813523512899300cdb6b9f405bfc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTc0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401139747", "bodyText": "When the markdown doc is available and deprecation doc is not available(an error scenario), we need to pass this map to compare with actual params. See L573", "author": "KavinduZoysa", "createdAt": "2020-03-31T18:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA2MTgwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 52d4fcd2088..6e52d62ffb5 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -560,13 +567,11 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n             return;\n         }\n \n-        List<String> fieldsDocumentedAtFieldLevel = getDocumentedFields(actualParameters);\n-\n         Map<String, BLangMarkdownParameterDocumentation> documentedDeprecatedParameterMap = new HashMap<>();\n         if (documentation.deprecatedParametersDocumentation != null) {\n             documentedDeprecatedParameterMap =\n                     getDocumentedParameters(documentation.deprecatedParametersDocumentation.parameters,\n-                            fieldsDocumentedAtFieldLevel, parameterAlreadyDefined);\n+                            new ArrayList<>(), parameterAlreadyDefined);\n         }\n \n         for (BLangSimpleVariable parameter : actualParameters) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDUzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401344538", "bodyText": "If this method is called, text.equals(\"# # Deprecated parameters\") always evaluates to true right? I think we have to just have a method setCorrectDeprecationLine", "author": "MaryamZi", "createdAt": "2020-04-01T04:06:58Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.1\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void setCorrectDeprecationLine(String text) {\n+        if (text.equals(\"# # Deprecated parameters\")) {", "originalCommit": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDg2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401344866", "bodyText": "Accordingly we may not need to pass the description at https://github.com/ballerina-platform/ballerina-lang/pull/22287/files#diff-87627a1d9b0a3201b74c0067bc4bdcbbR3410", "author": "MaryamZi", "createdAt": "2020-04-01T04:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTY0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401401643", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-04-01T07:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\nindex 72ef2939267..f318c893282 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java\n\n@@ -31,7 +31,6 @@ import java.util.LinkedList;\n public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n         implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n \n-    public boolean isCorrectDeprecationLine = false;\n     public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n \n     public BLangMarkDownDeprecatedParametersDocumentation() {\n"}}, {"oid": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7cd428c5f8fd75768a13e92113a86f9b56615a70", "message": "Handle null in deprecation documentation", "committedDate": "2020-04-01T08:02:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyODY2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401428667", "bodyText": "This still wouldn't detect scenarios like the following right?\n# Docs for `i`\n# \n# # Deprecated parameters\n# + i - deprecated i\nint i = 1;\nWe need to check all places where documentation is allowed.\nShall we work on a separate PR to fix this?", "author": "MaryamZi", "createdAt": "2020-04-01T08:06:16Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -228,7 +233,13 @@ public void visit(BLangTypeDefinition typeDefinition) {\n                 validateReferences(field);\n             }\n         }\n-        validateDeprecationDocumentation(typeDefinition.markdownDocumentationAttachment,\n+\n+        BLangMarkdownDocumentation documentation = typeDefinition.markdownDocumentationAttachment;\n+        if (documentation != null && documentation.deprecatedParametersDocumentation != null) {\n+            dlog.error(typeDefinition.pos, DiagnosticCode.DEPRECATED_PARAMETERS_DOCUMENTATION_NOT_ALLOWED);", "originalCommit": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMTg0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401431846", "bodyText": "+1", "author": "KavinduZoysa", "createdAt": "2020-04-01T08:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyODY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNTk3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401535974", "bodyText": "@KavinduZoysa can you push the change for this too?", "author": "MaryamZi", "createdAt": "2020-04-01T11:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyODY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzMTg3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401631870", "bodyText": "This change is done", "author": "KavinduZoysa", "createdAt": "2020-04-01T13:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyODY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1f8a0d416256f005583728b81594bc10fdfb13e3", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 6e52d62ffb5..27f0954280e 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -234,13 +241,9 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n             }\n         }\n \n-        BLangMarkdownDocumentation documentation = typeDefinition.markdownDocumentationAttachment;\n-        if (documentation != null && documentation.deprecatedParametersDocumentation != null) {\n-            dlog.error(typeDefinition.pos, DiagnosticCode.DEPRECATED_PARAMETERS_DOCUMENTATION_NOT_ALLOWED);\n-        }\n-\n-        validateDeprecationDocumentation(documentation,\n-                Symbols.isFlagOn(typeDefinition.symbol.flags, Flags.DEPRECATED), typeDefinition.pos);\n+        validateDeprecationDocumentation(typeDefinition.markdownDocumentationAttachment,\n+                Symbols.isFlagOn(typeDefinition.symbol.flags, Flags.DEPRECATED), typeDefinition.pos, true);\n+        validateDeprecatedParametersDocumentation(typeDefinition.markdownDocumentationAttachment, typeDefinition.pos);\n     }\n \n     @Override\n"}}, {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f8a0d416256f005583728b81594bc10fdfb13e3", "message": "Validate the deprecation for not supported constructs", "committedDate": "2020-04-01T13:45:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODI2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401668264", "bodyText": "There is a validation below to check if the deprecation annotation is available right? And the annotation specifies on what kind of constructs it can be used.\nSo, IMO we don't need this check. Since it'll fail below anyway.", "author": "MaryamZi", "createdAt": "2020-04-01T14:40:37Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n+        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n-                                                  boolean isDeprecationAnnotationAvailable, DiagnosticPos pos) {\n+                                                  boolean isDeprecationAnnotationAvailable,\n+                                                  DiagnosticPos pos, boolean isExpected) {\n         if (documentation == null) {\n             return;\n         }\n \n+        BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n+                documentation.getDeprecationDocumentation();\n+        if (!isExpected && deprecationDocumentation != null) {\n+            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);", "originalCommit": "1f8a0d416256f005583728b81594bc10fdfb13e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5ODkyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401698924", "bodyText": "Yes, that validation is there and it says invalid documentation: ''Deprecated'' documentation is only allowed on constructs annotated as ''@deprecated''\n# This is a test service\n#\n# # Deprecated parameters\n# + x - deprecated x\n# # Deprecated\nservice s on new Listener() {\n\n} \n\nBut in this example, without the above validation, it says invalid documentation: ''Deprecated'' documentation is only allowed on constructs annotated as ''@deprecated'', with the above validation it says ''Deprecated'' documentation is not allowed here.", "author": "KavinduZoysa", "createdAt": "2020-04-01T15:20:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNTc1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401705750", "bodyText": "The issue IMO is that we have two point to validate.\nWe are trying to do manually part of the validation that is based on the annotation.", "author": "MaryamZi", "createdAt": "2020-04-01T15:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "f9337256782dbf330254a536ade6c1d632451e78", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 27f0954280e..20647372c90 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -255,27 +255,20 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n-        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n-        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n                                                   boolean isDeprecationAnnotationAvailable,\n-                                                  DiagnosticPos pos, boolean isExpected) {\n+                                                  DiagnosticPos pos) {\n         if (documentation == null) {\n             return;\n         }\n \n         BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n                 documentation.getDeprecationDocumentation();\n-        if (!isExpected && deprecationDocumentation != null) {\n-            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);\n-            return;\n-        }\n \n         boolean isDeprecationDocumentationAvailable = false;\n-        if (documentation.deprecationDocumentation != null &&\n-                documentation.deprecationDocumentation.isCorrectDeprecationLine) {\n+        if (deprecationDocumentation != null && deprecationDocumentation.isCorrectDeprecationLine) {\n             isDeprecationDocumentationAvailable = true;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2OTU5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401669591", "bodyText": "Why are we passing false for isDeprecationAnnotationAvailable and isExpected?\nA resource is a function (resource function) so the annotation is allowed.", "author": "MaryamZi", "createdAt": "2020-04-01T14:42:27Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);", "originalCommit": "1f8a0d416256f005583728b81594bc10fdfb13e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3OTMyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401679326", "bodyText": "for resource, deprecation is not supported.", "author": "KavinduZoysa", "createdAt": "2020-04-01T14:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2OTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwMzY1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401703658", "bodyText": "The following builds for me on 1.2.0. Was it disallowed later?\nimport ballerina/http;\n\nservice serviceName on new http:Listener(8080) {\n\n    @deprecated\n    resource function newResource(http:Caller caller, http:Request request) {\n        \n    }\n}", "author": "MaryamZi", "createdAt": "2020-04-01T15:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2OTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMzYyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401713627", "bodyText": "It is still working. Yes, I misunderstood. That validation is not needed.", "author": "KavinduZoysa", "createdAt": "2020-04-01T15:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2OTU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9337256782dbf330254a536ade6c1d632451e78", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 27f0954280e..20647372c90 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -255,27 +255,20 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n-        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n-        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n                                                   boolean isDeprecationAnnotationAvailable,\n-                                                  DiagnosticPos pos, boolean isExpected) {\n+                                                  DiagnosticPos pos) {\n         if (documentation == null) {\n             return;\n         }\n \n         BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n                 documentation.getDeprecationDocumentation();\n-        if (!isExpected && deprecationDocumentation != null) {\n-            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);\n-            return;\n-        }\n \n         boolean isDeprecationDocumentationAvailable = false;\n-        if (documentation.deprecationDocumentation != null &&\n-                documentation.deprecationDocumentation.isCorrectDeprecationLine) {\n+        if (deprecationDocumentation != null && deprecationDocumentation.isCorrectDeprecationLine) {\n             isDeprecationDocumentationAvailable = true;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDY0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401674642", "bodyText": "Can't we use the deprecationDocumentation variable?", "author": "MaryamZi", "createdAt": "2020-04-01T14:48:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n+        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n-                                                  boolean isDeprecationAnnotationAvailable, DiagnosticPos pos) {\n+                                                  boolean isDeprecationAnnotationAvailable,\n+                                                  DiagnosticPos pos, boolean isExpected) {\n         if (documentation == null) {\n             return;\n         }\n \n+        BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n+                documentation.getDeprecationDocumentation();\n+        if (!isExpected && deprecationDocumentation != null) {\n+            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);\n+            return;\n+        }\n+\n         boolean isDeprecationDocumentationAvailable = false;\n         if (documentation.deprecationDocumentation != null &&", "originalCommit": "1f8a0d416256f005583728b81594bc10fdfb13e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcyNjY3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401726671", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-04-01T15:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f9337256782dbf330254a536ade6c1d632451e78", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\nindex 27f0954280e..20647372c90 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java\n\n@@ -255,27 +255,20 @@ public class DocumentationAnalyzer extends BLangNodeVisitor {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n-        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n-        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n                                                   boolean isDeprecationAnnotationAvailable,\n-                                                  DiagnosticPos pos, boolean isExpected) {\n+                                                  DiagnosticPos pos) {\n         if (documentation == null) {\n             return;\n         }\n \n         BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n                 documentation.getDeprecationDocumentation();\n-        if (!isExpected && deprecationDocumentation != null) {\n-            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);\n-            return;\n-        }\n \n         boolean isDeprecationDocumentationAvailable = false;\n-        if (documentation.deprecationDocumentation != null &&\n-                documentation.deprecationDocumentation.isCorrectDeprecationLine) {\n+        if (deprecationDocumentation != null && deprecationDocumentation.isCorrectDeprecationLine) {\n             isDeprecationDocumentationAvailable = true;\n         }\n \n"}}, {"oid": "f9337256782dbf330254a536ade6c1d632451e78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9337256782dbf330254a536ade6c1d632451e78", "message": "Validate the deprecation for not supported constructs", "committedDate": "2020-04-01T15:57:10Z", "type": "forcePushed"}, {"oid": "0fdf42e08f1c1ca4a00c954df15aea557edf93a9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0fdf42e08f1c1ca4a00c954df15aea557edf93a9", "message": "Add deprecation support", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "c1ad2abccea5941476b022ecdd0ee99c40d7454d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1ad2abccea5941476b022ecdd0ee99c40d7454d", "message": "Fix the suggested changes", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "c5d2a671eca8ac1e15fc038ce3dad4f4df16b635", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5d2a671eca8ac1e15fc038ce3dad4f4df16b635", "message": "Identify the deprecation for return type", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "440769cee2e53d01286bef97db276f2384ebc59b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/440769cee2e53d01286bef97db276f2384ebc59b", "message": "Fix suggested changes", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "db6af4a4e64b7b15fb7c8faf13b1c166794aca2d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db6af4a4e64b7b15fb7c8faf13b1c166794aca2d", "message": "Handle object field deprecation", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "6fbbd67c7ec58a092e8ffb684e459613519be014", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6fbbd67c7ec58a092e8ffb684e459613519be014", "message": "Add tests", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "53bd68ecd641cb2f3c8e1c03e8d87464d55fae98", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/53bd68ecd641cb2f3c8e1c03e8d87464d55fae98", "message": "Handle null in deprecation documentation", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "message": "Validate the deprecation for not supported constructs", "committedDate": "2020-04-01T17:46:05Z", "type": "commit"}, {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "message": "Validate the deprecation for not supported constructs", "committedDate": "2020-04-01T17:46:05Z", "type": "forcePushed"}]}