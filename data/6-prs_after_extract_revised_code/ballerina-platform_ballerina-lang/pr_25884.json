{"pr_number": 25884, "pr_title": "Fix issue in recognizing overloaded instance method", "pr_createdAt": "2020-09-17T12:37:38Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884", "timeline": [{"oid": "271e240d2b8a619f2a7fc01d614afe512efa56a3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/271e240d2b8a619f2a7fc01d614afe512efa56a3", "message": "Fix issue in recognizing overloaded instance method\n\nFailure is when there's an overloaded instance and static methods with parameters differing by one.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/22858", "committedDate": "2020-09-17T16:53:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDM4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884#discussion_r490714383", "bodyText": "do we have to check for static here?", "author": "Kishanthan", "createdAt": "2020-09-18T05:42:03Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -138,29 +137,30 @@ JMethod resolve(JMethodRequest jMethodRequest) {\n                 .collect(Collectors.toList());\n     }\n \n-    private List<JMethod> resolveByParamCount(List<JMethod> jMethods, int expectedCount, BType receiverType) {\n-        return jMethods.stream().filter(jMethod -> {\n-            int count = jMethod.getParamTypes().length;\n-            if (count == expectedCount) {\n+    private List<JMethod> resolveByParamCount(List<JMethod> jMethods, JMethodRequest jMethodRequest) {\n+        return jMethods.stream()\n+                .filter(jMethod -> hasEqualParamCounts(jMethodRequest, jMethod))\n+                .collect(Collectors.toList());\n+    }\n+\n+    private boolean hasEqualParamCounts(JMethodRequest jMethodRequest, JMethod jMethod) {\n+        int expectedCount = getBFuncParamCount(jMethodRequest, jMethod);\n+        int count = jMethod.getParamTypes().length;\n+        if (count == expectedCount) {\n+            return true;\n+        } else if (count == expectedCount + 1) {\n+            // This is for object interop functions when self is passed as a parameter\n+            if (jMethodRequest.receiverType != null) {\n+                jMethod.setReceiverType(jMethodRequest.receiverType);\n                 return true;\n-            } else {\n-                boolean hasOneExtraParam = count == expectedCount + 1;\n-                if (hasOneExtraParam) {\n-                    boolean hasReceiver = receiverType != null;\n-                    if (hasReceiver) {\n-                        jMethod.setReceiverType(receiverType);\n-                        return true;\n-                    } else if (jMethod.isBalEnvAcceptingMethod()) {\n-                        return true;\n-                    }\n-                }\n+            } else if (jMethod.isStatic()) {", "originalCommit": "271e240d2b8a619f2a7fc01d614afe512efa56a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNTg5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884#discussion_r490715894", "bodyText": "Yes, haven't tested BalEnv with instance methods yet. Will need a small change to make it work.", "author": "manuranga", "createdAt": "2020-09-18T05:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDM4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMzQ4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884#discussion_r490733487", "bodyText": "Shall we include the message \"more than one method found\" or something related here?", "author": "Kishanthan", "createdAt": "2020-09-18T06:40:08Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -184,18 +184,22 @@ private JMethod resolve(JMethodRequest jMethodRequest, List<JMethod> jMethods) {\n     }\n \n     private Optional<JMethod> findCovariantReturnTypeMethod(List<JMethod> jMethods) {\n-\n         for (int i = 0; i < jMethods.size(); i++) {\n-            for (int k = i; k < jMethods.size(); k++) {\n-                if (i == k) {\n-                    continue;\n-                }\n-\n+            for (int k = i + 1; k < jMethods.size(); k++) {\n                 JMethod ithMethod = jMethods.get(i);\n                 JMethod kthMethod = jMethods.get(k);\n \n                 if (ithMethod.getReturnType().isAssignableFrom(kthMethod.getReturnType()) ||\n                         kthMethod.getReturnType().isAssignableFrom(ithMethod.getReturnType())) {\n+                    if (ithMethod.getParamTypes().length != kthMethod.getParamTypes().length) {\n+                        // This occurs when there are static methods and instance methods and the static method\n+                        // has one more parameter than the instance method. Also this occurs when an interop\n+                        // method in an object maps to instance methods of which one accepting self and another\n+                        // that doesn't.\n+                        throw new JInteropException(OVERLOADED_METHODS,\n+                                                    \"Please specify the parameterTypes for each parameter in \" +", "originalCommit": "271e240d2b8a619f2a7fc01d614afe512efa56a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNDA2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884#discussion_r490734063", "bodyText": "I thought the overloaded methods error code gives that idea.", "author": "riyafa", "createdAt": "2020-09-18T06:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMzQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0MjM3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25884#discussion_r490742378", "bodyText": "Fixed", "author": "riyafa", "createdAt": "2020-09-18T07:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMzQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "657bff158bc5f86aa1f0b03fc847b41d9418270a", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java\nindex f67056f510f..eb86afd336c 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java\n\n@@ -196,9 +196,9 @@ class JMethodResolver {\n                         // has one more parameter than the instance method. Also this occurs when an interop\n                         // method in an object maps to instance methods of which one accepting self and another\n                         // that doesn't.\n-                        throw new JInteropException(OVERLOADED_METHODS,\n-                                                    \"Please specify the parameterTypes for each parameter in \" +\n-                                                            \"'paramTypes' field in the annotation\");\n+                        throw new JInteropException(\n+                                OVERLOADED_METHODS, \"Overloaded methods cannot be differentiated. Please specify the \" +\n+                                \"parameterTypes for each parameter in 'paramTypes' field in the annotation\");\n                     }\n                     return Optional.of(ithMethod);\n                 }\n"}}, {"oid": "657bff158bc5f86aa1f0b03fc847b41d9418270a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/657bff158bc5f86aa1f0b03fc847b41d9418270a", "message": "Fix failing javaDoc task", "committedDate": "2020-09-18T06:50:32Z", "type": "forcePushed"}, {"oid": "c31428427045544709d7e0599d7cb74791528b5c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c31428427045544709d7e0599d7cb74791528b5c", "message": "Fix issue in recognizing overloaded instance method\n\nFailure is when there's an overloaded instance and static methods with parameters differing by one.\nResolve https://github.com/ballerina-platform/ballerina-lang/issues/22858", "committedDate": "2020-09-18T06:59:09Z", "type": "commit"}, {"oid": "03f318e733df3a9e358d17d86b9b356e8dd788cb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/03f318e733df3a9e358d17d86b9b356e8dd788cb", "message": "Fix failing javaDoc task", "committedDate": "2020-09-18T06:59:24Z", "type": "commit"}, {"oid": "03f318e733df3a9e358d17d86b9b356e8dd788cb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/03f318e733df3a9e358d17d86b9b356e8dd788cb", "message": "Fix failing javaDoc task", "committedDate": "2020-09-18T06:59:24Z", "type": "forcePushed"}]}