{"pr_number": 26358, "pr_title": "[Formatter] Implement the missing node transform methods in NewFormattingTreeModifier and fix some failing formatter related tests", "pr_createdAt": "2020-10-14T19:16:26Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358", "timeline": [{"oid": "ae429ee061a0d78b3a8e602a0e9ebeb4aedea4d1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae429ee061a0d78b3a8e602a0e9ebeb4aedea4d1", "message": "Implement ClassDefinitionDeclarationNode transformation in formatter", "committedDate": "2020-10-14T18:41:55Z", "type": "commit"}, {"oid": "5cb2a3abbc1c30fd28c81fdfbb52e78a0c5dddd6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5cb2a3abbc1c30fd28c81fdfbb52e78a0c5dddd6", "message": "Merge remote-tracking branch 'upstream/formatter-change' into formatter-change", "committedDate": "2020-10-14T18:42:28Z", "type": "commit"}, {"oid": "958a52af3000462489c674f7cb758ba6c64cc1e5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/958a52af3000462489c674f7cb758ba6c64cc1e5", "message": "Implement the formatter transformation method of NamedWorkerDeclarator", "committedDate": "2020-10-14T19:59:50Z", "type": "commit"}, {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7099baf642e19dd1b3404ce867ef1264384b1e7", "message": "Fix some failing formatter tests", "committedDate": "2020-10-14T21:51:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505133990", "bodyText": "We don't need to do that check, that information would be ideally passed by the parent.", "author": "SupunS", "createdAt": "2020-10-15T02:53:11Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,13 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode;\n+        if (functionDefinitionNode.parent().kind() == SyntaxKind.CLASS_DEFINITION) {", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM1MDU2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505350562", "bodyText": "But will it be possible to obtain this kind of formatting?\nclass Person {\n    *A;\n    public int age = 10;\n    function foo() returns int {\n\n        int a = 12345;\n        return a;\n    }\n\n    public string name = \"sample name\";\n    int year = 50;\n    function bar() returns string {\n\n        string b = \"bar\";\n        return b;\n    }\n\n    string month = \"february\";\n}\n\nThe following implementation also is using this approach as well.\n\n  \n    \n      ballerina-lang/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n    \n    \n         Line 536\n      in\n      5167380\n    \n    \n    \n    \n\n        \n          \n           if (recordTypeDesc.parent().kind() != SyntaxKind.TYPE_DEFINITION) {", "author": "sanjana", "createdAt": "2020-10-15T08:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -323,13 +323,7 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode;\n-        if (functionDefinitionNode.parent().kind() == SyntaxKind.CLASS_DEFINITION) {\n-            functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                    this.trailingWS, 2);\n-        } else {\n-            functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);\n-        }\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);\n \n         return functionDefinitionNode.modify()\n                 .withFunctionKeyword(functionKeyword)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDMxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134318", "bodyText": "IMO we should keep only one newline in both of these cases", "author": "SupunS", "createdAt": "2020-10-15T02:54:31Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3424,39 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n \n-        return super.transform(classDefinitionNode);\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace;\n+        if (classDefinitionNode.members().isEmpty()) {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 2);\n+        } else {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        }", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -3437,12 +3421,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n         NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n         Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n         Token className = formatToken(classDefinitionNode.className(), 1, 0);\n-        Token openBrace;\n-        if (classDefinitionNode.members().isEmpty()) {\n-            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 2);\n-        } else {\n-            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n-        }\n+        Token openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        this.preserveNewlines = true;\n \n         indent();\n         NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDg3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134870", "bodyText": "Similarly, we should keep only one newline here", "author": "SupunS", "createdAt": "2020-10-15T02:56:36Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -386,7 +391,13 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n \n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n-        Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (functionBodyBlockNode.statements().isEmpty() && functionBodyBlockNode.namedWorkerDeclarator().isEmpty()) {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        }", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -391,13 +385,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n \n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n-        Token openBrace;\n-        if (functionBodyBlockNode.statements().isEmpty() && functionBodyBlockNode.namedWorkerDeclarator().isEmpty()) {\n-            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 2);\n-        } else {\n-            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n-        }\n-\n+        Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;\n         indent(); // increase indentation for the statements to follow.\n         NodeList<StatementNode> statements = formatNodeList(functionBodyBlockNode.statements(), 0, 1, 0, 1, true);\n         if (functionBodyBlockNode.namedWorkerDeclarator().isPresent()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDkzNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134936", "bodyText": "Same here", "author": "SupunS", "createdAt": "2020-10-15T02:56:47Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -502,7 +513,13 @@ public ElseBlockNode transform(ElseBlockNode elseBlockNode) {\n \n     @Override\n     public BlockStatementNode transform(BlockStatementNode blockStatementNode) {\n-        Token openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (blockStatementNode.statements().isEmpty()) {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        }", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -513,13 +502,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n \n     @Override\n     public BlockStatementNode transform(BlockStatementNode blockStatementNode) {\n-        Token openBrace;\n-        if (blockStatementNode.statements().isEmpty()) {\n-            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 2);\n-        } else {\n-            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n-        }\n-\n+        Token openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        this.preserveNewlines = true;\n         indent(); // start an indentation\n         NodeList<StatementNode> statements = formatNodeList(blockStatementNode.statements(), 0, 1, 0, 1, true);\n         unindent(); // end the indentation\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTM5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505135393", "bodyText": "Worker init statements should have a newline to follow, rather than a whitespace.\nAlso we should honour user added newline.\nRefer to how we have done for child-statements in the block-statement.", "author": "SupunS", "createdAt": "2020-10-15T02:58:28Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -3495,8 +3475,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n \n     @Override\n     public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n-        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n-                , 0, 1, 0);\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 0,\n+                1, 0, 1, true);\n         NodeList<NamedWorkerDeclarationNode> namedWorkerDeclarations =\n                 formatNodeList(namedWorkerDeclarator.namedWorkerDeclarations(), 0, 2, 0, 1);\n         return namedWorkerDeclarator.modify()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjE4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505136184", "bodyText": "This should be same as the statements within the block-statement.", "author": "SupunS", "createdAt": "2020-10-15T03:01:31Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);\n+        NodeList<NamedWorkerDeclarationNode> namedWorkerDeclarations =\n+                formatNodeList(namedWorkerDeclarator.namedWorkerDeclarations(), 0, 2, 0, 1);", "originalCommit": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c71d1291a03e3166b1926bb059ecce1346ab5891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 87e8f4093ac..dea356bf55e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -3495,8 +3475,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n \n     @Override\n     public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n-        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n-                , 0, 1, 0);\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 0,\n+                1, 0, 1, true);\n         NodeList<NamedWorkerDeclarationNode> namedWorkerDeclarations =\n                 formatNodeList(namedWorkerDeclarator.namedWorkerDeclarations(), 0, 2, 0, 1);\n         return namedWorkerDeclarator.modify()\n"}}, {"oid": "c71d1291a03e3166b1926bb059ecce1346ab5891", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c71d1291a03e3166b1926bb059ecce1346ab5891", "message": "Fix review suggestions", "committedDate": "2020-10-15T08:53:59Z", "type": "commit"}, {"oid": "8acd85bfcd79daa8cfc0c8206f4456d4dfcf26e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8acd85bfcd79daa8cfc0c8206f4456d4dfcf26e7", "message": "Review and enable class definition declaration related tests", "committedDate": "2020-10-15T09:04:09Z", "type": "commit"}, {"oid": "cbde4a50eee5c7bd5d787f9c4b6bb2a1aa6e0853", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbde4a50eee5c7bd5d787f9c4b6bb2a1aa6e0853", "message": "Merge remote-tracking branch 'upstream/formatter-change' into formatter-change", "committedDate": "2020-10-15T09:04:53Z", "type": "commit"}, {"oid": "ce930b83f1bb09184100293c44077269ca2c0310", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce930b83f1bb09184100293c44077269ca2c0310", "message": "Reformat module-level record related test files", "committedDate": "2020-10-15T09:21:55Z", "type": "commit"}, {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "message": "Restructure worker declarators in new formatting tree modifier", "committedDate": "2020-10-15T09:28:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTY5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505415695", "bodyText": "Shall we remove this comment?", "author": "IrushiL", "createdAt": "2020-10-15T09:56:50Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "originalCommit": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 86f8d20203d..4feb6fa15b5 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -387,7 +388,6 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n-//        this.preserveNewlines = true;\n         indent(); // increase indentation for the statements to follow.\n         NodeList<StatementNode> statements = formatNodeList(functionBodyBlockNode.statements(), 0, 1, 0, 1, true);\n         if (functionBodyBlockNode.namedWorkerDeclarator().isPresent()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODI4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408284", "bodyText": "Each member also should preserve newlines. So we need to pass the flag", "author": "SupunS", "createdAt": "2020-10-15T09:46:31Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3409,35 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n+\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        this.preserveNewlines = true;\n+\n+        indent();\n+        NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1);", "originalCommit": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 86f8d20203d..4feb6fa15b5 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -3426,7 +3426,7 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n         this.preserveNewlines = true;\n \n         indent();\n-        NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1);\n+        NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1, true);\n         unindent();\n         Token closeBrace = formatToken(classDefinitionNode.closeBrace(), this.trailingWS, this.trailingNL);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODUwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408503", "bodyText": "Lets remove this commented out line", "author": "SupunS", "createdAt": "2020-10-15T09:46:47Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "originalCommit": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 86f8d20203d..4feb6fa15b5 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -387,7 +388,6 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n-//        this.preserveNewlines = true;\n         indent(); // increase indentation for the statements to follow.\n         NodeList<StatementNode> statements = formatNodeList(functionBodyBlockNode.statements(), 0, 1, 0, 1, true);\n         if (functionBodyBlockNode.namedWorkerDeclarator().isPresent()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTEwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505409105", "bodyText": "This line might be longer than 120", "author": "SupunS", "createdAt": "2020-10-15T09:47:31Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "originalCommit": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 86f8d20203d..4feb6fa15b5 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -324,7 +324,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n         //TODO: Fix formatting issue when the function is within a class definition declaration.\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS,\n+                this.trailingNL);\n \n         return functionDefinitionNode.modify()\n                 .withFunctionKeyword(functionKeyword)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNjYwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505416609", "bodyText": "This line seems to be exceeding the line limit.", "author": "IrushiL", "createdAt": "2020-10-15T09:58:16Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "originalCommit": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\nindex 86f8d20203d..4feb6fa15b5 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n\n@@ -324,7 +324,8 @@ public class NewFormattingTreeModifier extends FormattingTreeModifier {\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n         //TODO: Fix formatting issue when the function is within a class definition declaration.\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS,\n+                this.trailingNL);\n \n         return functionDefinitionNode.modify()\n                 .withFunctionKeyword(functionKeyword)\n"}}, {"oid": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "message": "Fix review suggestions", "committedDate": "2020-10-15T11:03:34Z", "type": "commit"}]}