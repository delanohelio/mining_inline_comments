{"pr_number": 27290, "pr_title": "Make ListenerDeclarationNode's type optional in syntax API", "pr_createdAt": "2020-12-02T08:29:20Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27290", "timeline": [{"oid": "b0627d7849e15a8186eee35112b068a390ea186e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0627d7849e15a8186eee35112b068a390ea186e", "message": "Make ListenerDeclarationNode's type optional in syntax API", "committedDate": "2020-12-02T06:43:24Z", "type": "commit"}, {"oid": "b0f111126f02216752b5cffae3454cdef9846c1e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0f111126f02216752b5cffae3454cdef9846c1e", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into task-listner", "committedDate": "2020-12-03T07:38:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI5OTAxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27290#discussion_r543299015", "bodyText": "Should we directly extract ((ListenerDeclarationNode) node.parent()).typeDescriptor() instead?", "author": "MaryamZi", "createdAt": "2020-12-15T12:25:35Z", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java", "diffHunk": "@@ -70,7 +70,11 @@ public ImplicitNewExpressionNodeContext() {\n \n         switch (node.parent().kind()) {\n             case LISTENER_DECLARATION:\n-                typeDescriptor = ((ListenerDeclarationNode) node.parent()).typeDescriptor();\n+                ListenerDeclarationNode listenerDeclarationNode = (ListenerDeclarationNode) node.parent();", "originalCommit": "b0f111126f02216752b5cffae3454cdef9846c1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2a548d8369a1aed3f7584bb59ab1186e229d92c9", "chunk": "diff --git a/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java b/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java\nindex a3cec60b6dd..2b3240b1b3a 100644\n--- a/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java\n+++ b/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java\n\n@@ -58,23 +58,19 @@ public class ImplicitNewExpressionNodeContext extends AbstractCompletionProvider\n         Supports the following\n         (1) lhs = new <cursor>\n         */\n-        Optional<ObjectTypeSymbol> objectTypeSymbol = getObjectTypeDescriptor(context, node);\n+        Optional<ClassSymbol> classSymbol = getClassSymbol(context, node);\n         List<LSCompletionItem> completionItems = new ArrayList<>(this.getModuleCompletionItems(context));\n-        objectTypeSymbol.ifPresent(bSymbol -> completionItems.add(this.getExplicitNewCompletionItem(bSymbol, context)));\n+        classSymbol.ifPresent(symbol -> completionItems.add(this.getExplicitNewCompletionItem(symbol, context)));\n \n         return completionItems;\n     }\n \n-    private Optional<ObjectTypeSymbol> getObjectTypeDescriptor(CompletionContext context, Node node) {\n+    private Optional<ClassSymbol> getClassSymbol(CompletionContext context, Node node) {\n         Node typeDescriptor;\n \n         switch (node.parent().kind()) {\n             case LISTENER_DECLARATION:\n-                ListenerDeclarationNode listenerDeclarationNode = (ListenerDeclarationNode) node.parent();\n-                if (listenerDeclarationNode.typeDescriptor().isEmpty()) {\n-                    return Optional.empty();\n-                }\n-                typeDescriptor = listenerDeclarationNode.typeDescriptor().get();\n+                typeDescriptor = ((ListenerDeclarationNode) node.parent()).typeDescriptor().orElse(null);\n                 break;\n             case LOCAL_VAR_DECL:\n                 typeDescriptor = ((VariableDeclarationNode) node.parent()).typedBindingPattern().typeDescriptor();\n"}}, {"oid": "2a548d8369a1aed3f7584bb59ab1186e229d92c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a548d8369a1aed3f7584bb59ab1186e229d92c9", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into task-listner\n\n\u0001 Conflicts:\n\u0001\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ListenerDeclarationNodeContext.java", "committedDate": "2020-12-16T04:19:59Z", "type": "commit"}, {"oid": "93a911454762cab3c718b35c0d2972d330404979", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93a911454762cab3c718b35c0d2972d330404979", "message": "Add parser test for listener-decl with no type", "committedDate": "2020-12-16T04:27:20Z", "type": "commit"}]}