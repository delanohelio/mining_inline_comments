{"pr_number": 26931, "pr_title": "Refactor Interop validation into separate phase", "pr_createdAt": "2020-11-15T09:12:48Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931", "timeline": [{"oid": "3ec0df4104d78d20e72b37424c43bda3871e04b9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ec0df4104d78d20e72b37424c43bda3871e04b9", "message": "Add bir emit and interop validate compile phases", "committedDate": "2020-11-15T09:11:01Z", "type": "commit"}, {"oid": "c62eb9544baea87843ef35d94d0840299d9bd6dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c62eb9544baea87843ef35d94d0840299d9bd6dd", "message": "Merge branch master", "committedDate": "2020-11-15T09:13:38Z", "type": "commit"}, {"oid": "3c23f9fdca1dc313b880ef93e2e139db326386d2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c23f9fdca1dc313b880ef93e2e139db326386d2", "message": "Add interop validation to test modules", "committedDate": "2020-11-15T13:38:07Z", "type": "commit"}, {"oid": "30b02740b1b21aea4b26288d7f8c8a7f817254de", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30b02740b1b21aea4b26288d7f8c8a7f817254de", "message": "Merge master branch and fix conflicts", "committedDate": "2020-12-10T10:18:26Z", "type": "commit"}, {"oid": "b54f4622dece6d232d1fa108738d54f275ed8355", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b54f4622dece6d232d1fa108738d54f275ed8355", "message": "Remove interop compiler phase", "committedDate": "2020-12-10T10:33:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA2MTEwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r540061101", "bodyText": "Do we need interopvalidate here. Codegen function is empty with new changes.", "author": "warunalakshitha", "createdAt": "2020-12-10T10:39:57Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "diffHunk": "@@ -389,6 +403,6 @@ private BPackageSymbol getLangModuleFromSource(PackageID modID) {\n             return null;\n         }\n \n-        return codeGen(birGen(desugar(pkg))).symbol;\n+        return codeGen(birEmit(birGen(desugar(pkg)))).symbol;", "originalCommit": "b54f4622dece6d232d1fa108738d54f275ed8355", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d22a72c3c75af5987cac06de519e5df06496b1fd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d22a72c3c75af5987cac06de519e5df06496b1fd", "message": "Fix checkstyle issues", "committedDate": "2020-12-11T06:54:12Z", "type": "commit"}, {"oid": "cb77e35579ac257bc04bc2797a6651e3d6766f7f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cb77e35579ac257bc04bc2797a6651e3d6766f7f", "message": "Merge branch master", "committedDate": "2020-12-11T10:07:47Z", "type": "commit"}, {"oid": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4f2eded42ac3b291bb1ff90923b71df5e303aa3", "message": "Merge master branch and fix conflicts", "committedDate": "2020-12-14T07:02:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4Nzc1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r542287756", "bodyText": "Can we check whether pkgName and orgName would be same values that can be used from BIRPackage module here?", "author": "Kishanthan", "createdAt": "2020-12-14T10:48:30Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -596,9 +591,7 @@ private void linkGlobalVars(BIRPackage module, String pkgName, String initClass,\n         globalVarClassMap.put(pkgName + LOCK_STORE_VAR_NAME, initClass);\n     }\n \n-    private void linkTypeDefinitions(BIRPackage module, String pkgName,\n-                                     InteropValidator interopValidator,\n-                                     boolean isEntry, String orgName,\n+    private void linkTypeDefinitions(BIRPackage module, String pkgName, boolean isEntry, String orgName,", "originalCommit": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3a05ff29d23c70b4a0942bce1586d8907c95f99", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\nindex 25d3c10b895..435dba22c29 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\n\n@@ -591,9 +588,8 @@ public class JvmPackageGen {\n         globalVarClassMap.put(pkgName + LOCK_STORE_VAR_NAME, initClass);\n     }\n \n-    private void linkTypeDefinitions(BIRPackage module, String pkgName, boolean isEntry, String orgName,\n-                                     String moduleName, String version) {\n \n+    private void linkTypeDefinitions(BIRPackage module, boolean isEntry) {\n         List<BIRTypeDefinition> typeDefs = module.typeDefs;\n \n         for (BIRTypeDefinition optionalTypeDef : typeDefs) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODgwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r542288807", "bodyText": "Any way we could check and see whether we can get rid of this flag isEntry and have separate functions.? That given better readability IMO.", "author": "Kishanthan", "createdAt": "2020-12-14T10:49:59Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -545,13 +543,10 @@ private boolean listenerDeclarationFound(List<BIRGlobalVariableDcl> variableDcls\n      *\n      * @param module           bir module\n      * @param initClass        module init class name\n-     * @param interopValidator interop validator instance\n      * @param isEntry          is entry module flag\n      * @return The map of javaClass records on given source file name\n      */\n-    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass,\n-                                                            InteropValidator interopValidator,\n-                                                            boolean isEntry) {\n+    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass, boolean isEntry) {", "originalCommit": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzMzM0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r544533348", "bodyText": "isEntry is passed from generate module to each function generation. This is only used for add default Boolean params to function signature. So code will be duplicate and much complex code if try to separate them to functions. IMO correct thing is to move all desugar code (including encodes, record inits) from codegen to another class which needs to be done separately.", "author": "warunalakshitha", "createdAt": "2020-12-16T18:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "b3a05ff29d23c70b4a0942bce1586d8907c95f99", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\nindex 25d3c10b895..435dba22c29 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java\n\n@@ -548,32 +547,29 @@ public class JvmPackageGen {\n      */\n     private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass, boolean isEntry) {\n \n-        String orgName = module.org.value;\n-        String moduleName = module.name.value;\n-        String version = module.version.value;\n         Map<String, JavaClass> jvmClassMap = new HashMap<>();\n-        String pkgName = JvmCodeGenUtil.getPackageName(module);\n \n         // link global variables with class names\n-        linkGlobalVars(module, pkgName, initClass, isEntry);\n+        linkGlobalVars(module, initClass, isEntry);\n \n         // link module functions with class names\n-        linkModuleFunctions(module, pkgName, initClass, isEntry, orgName, moduleName, version,\n-                jvmClassMap);\n+\n+        linkModuleFunctions(module, initClass, isEntry, jvmClassMap);\n+\n \n         // link module init function that will be generated\n-        linkModuleInitFunction(pkgName, initClass, orgName, moduleName, version);\n+        linkModuleFunction(module.packageID, initClass, CURRENT_MODULE_INIT);\n \n         // link module stop function that will be generated\n-        linkModuleStopFunction(pkgName, initClass, orgName, moduleName, version);\n+        linkModuleFunction(module.packageID, initClass, MODULE_STOP);\n \n         // link typedef - object attached native functions\n-        linkTypeDefinitions(module, pkgName, isEntry, orgName, moduleName, version);\n+        linkTypeDefinitions(module, isEntry);\n \n         return jvmClassMap;\n     }\n \n-    private void linkGlobalVars(BIRPackage module, String pkgName, String initClass, boolean isEntry) {\n+    private void linkGlobalVars(BIRPackage module, String initClass, boolean isEntry) {\n \n         if (isEntry) {\n             for (BIRNode.BIRConstant constant : module.constants) {\n"}}, {"oid": "b3a05ff29d23c70b4a0942bce1586d8907c95f99", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3a05ff29d23c70b4a0942bce1586d8907c95f99", "message": "Merge master branch changes", "committedDate": "2020-12-16T11:00:56Z", "type": "commit"}, {"oid": "720e28afd7aacb3badde9435841f3633bec5a361", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/720e28afd7aacb3badde9435841f3633bec5a361", "message": "Fix kaitai build issue", "committedDate": "2020-12-16T15:16:53Z", "type": "commit"}, {"oid": "877674d87fbbf61456d6af267ae94bedbdcc2268", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/877674d87fbbf61456d6af267ae94bedbdcc2268", "message": "Enable dump bir and dump file file options", "committedDate": "2020-12-16T15:17:51Z", "type": "commit"}, {"oid": "b0cc1e2c1d2650a7e4f5e61e9e4d5153f4f05615", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0cc1e2c1d2650a7e4f5e61e9e4d5153f4f05615", "message": "Fix checkstyle issues", "committedDate": "2020-12-17T04:30:35Z", "type": "commit"}]}