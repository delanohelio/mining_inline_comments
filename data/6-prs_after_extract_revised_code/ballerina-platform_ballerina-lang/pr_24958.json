{"pr_number": 24958, "pr_title": "Fix parser error recovery", "pr_createdAt": "2020-07-27T11:11:59Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958", "timeline": [{"oid": "6cb8fb0cbf9447d8f5d3f80af641a222231d8d8e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cb8fb0cbf9447d8f5d3f80af641a222231d8d8e", "message": "Fix parser error recovery\n\nAdd rules for tuple-type-desc-or-list-cont-member and\nlist-bp-or-list-cons-member contexts, also added missing positions in\nBLangNodeTransformer for ListBindingPatternNode and TupleDestructureStatement.", "committedDate": "2020-07-27T11:07:21Z", "type": "commit"}, {"oid": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc8f8e6faab2e9b255f828d18e0d2a007ef41e79", "message": "Add parser unit tests\n\nAdd tests to check the issues fixed, 24891 and 24890", "committedDate": "2020-07-27T11:42:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Njk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461296951", "bodyText": "we haven't used peek() inside the resumeParsing method. Let's stick to a single pattern.", "author": "SupunS", "createdAt": "2020-07-28T03:34:09Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -618,12 +618,15 @@ public STNode resumeParsing(ParserRuleContext context, Object... args) {\n                 return parseArgsBindingPatternEnd();\n             case TABLE_ROW_END:\n                 return parseTableRowEnd();\n+            case LIST_BP_OR_LIST_CONSTRUCTOR_MEMBER:\n+                return parseListBindingPatternOrListConstructorMember(peek().kind);\n+            case TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER:\n+                return parseTupleTypeDescOrListConstructorMember(peek().kind, (STNode) args[0]);", "originalCommit": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzMDA2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461330066", "bodyText": "alright", "author": "m36dot", "createdAt": "2020-07-28T05:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Njk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "82cec27646687e8123709eb1e6772bd1ce8b759e", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\nindex a01979af116..26d3243b484 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\n@@ -619,9 +619,9 @@ public class BallerinaParser extends AbstractParser {\n             case TABLE_ROW_END:\n                 return parseTableRowEnd();\n             case LIST_BP_OR_LIST_CONSTRUCTOR_MEMBER:\n-                return parseListBindingPatternOrListConstructorMember(peek().kind);\n+                return parseListBindingPatternOrListConstructorMember();\n             case TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER:\n-                return parseTupleTypeDescOrListConstructorMember(peek().kind, (STNode) args[0]);\n+                return parseTupleTypeDescOrListConstructorMember((STNode) args[0]);\n             // case RECORD_BODY_END:\n             // case OBJECT_MEMBER_WITHOUT_METADATA:\n             // case REMOTE_CALL_OR_ASYNC_SEND_END:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzYzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461297630", "bodyText": "Not related to your PR.. the method-called for re-parse the same rule after inserting a token seems wrong.", "author": "SupunS", "createdAt": "2020-07-28T03:36:56Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15671,7 +15674,8 @@ private STNode parseTupleTypeDescOrListConstructorMember(SyntaxKind nextTokenKin\n                     return parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TUPLE);\n                 }\n \n-                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER);\n+                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER,\n+                        annots);", "originalCommit": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1Mjc5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461452799", "bodyText": "fixed", "author": "m36dot", "createdAt": "2020-07-28T09:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzYzMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "82cec27646687e8123709eb1e6772bd1ce8b759e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82cec27646687e8123709eb1e6772bd1ce8b759e", "message": "Fix using peek inside resumeParsing\n\nRefactor the code to not use peek inside resumeparsing\nby introducing an intermediate method to do the peek.", "committedDate": "2020-07-28T05:41:54Z", "type": "commit"}, {"oid": "8003e1ae37f9bbb26d29d4012e4eb239b7cb3501", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8003e1ae37f9bbb26d29d4012e4eb239b7cb3501", "message": "Fix how parseTupleTypeDescOrListConstructorMember is recovered", "committedDate": "2020-07-28T09:37:01Z", "type": "commit"}]}