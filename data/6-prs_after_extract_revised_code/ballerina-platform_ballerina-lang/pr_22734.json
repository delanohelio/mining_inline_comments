{"pr_number": 22734, "pr_title": "Refactor record, tuple and error var desugar logic", "pr_createdAt": "2020-04-17T13:02:40Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22734", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5OTk1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22734#discussion_r412699955", "bodyText": "Not introduced by this PR, but shouldn't we be using different names, starting with $?", "author": "MaryamZi", "createdAt": "2020-04-22T06:18:24Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -1184,17 +1184,76 @@ public void visit(BLangLetExpression letExpression) {\n \n     @Override\n     public void visit(BLangTupleVariable varNode) {\n-        result = varNode;\n+        //  case 1:\n+        //  (string, int) (a, b) = (tuple)\n+        //\n+        //  any[] x = (tuple);\n+        //  string a = x[0];\n+        //  int b = x[1];\n+        //\n+        //  case 2:\n+        //  ((string, float) int)) ((a, b), c)) = (tuple)\n+        //\n+        //  any[] x = (tuple);\n+        //  string a = x[0][0];\n+        //  float b = x[0][1];\n+        //  int c = x[1];\n+\n+        //create tuple destruct block stmt\n+        final BLangBlockStmt blockStmt = ASTBuilderUtil.createBlockStmt(varNode.pos);\n+\n+        //create a simple var for the array 'any[] x = (tuple)' based on the dimension for x\n+        String name = \"tuple\";", "originalCommit": "3261aeb30b9842563d102de7407ce086ad98facc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg2NDQ4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22734#discussion_r412864488", "bodyText": "you mean unique names? yeah, have noticed the use of same name in some places in desugar. will change and see if it breaks anything", "author": "pubudu91", "createdAt": "2020-04-22T10:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5OTk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0Njg2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22734#discussion_r413546864", "bodyText": "Changed to $tuple$", "author": "pubudu91", "createdAt": "2020-04-23T06:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5OTk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d8a5d3a265f32defb8b17447e4967b2048a98726", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\nindex a9961dd860a..9814a863ee1 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n\n@@ -1185,25 +1185,25 @@ public class Desugar extends BLangNodeVisitor {\n     @Override\n     public void visit(BLangTupleVariable varNode) {\n         //  case 1:\n-        //  (string, int) (a, b) = (tuple)\n+        //  [string, int] (a, b) = (tuple)\n         //\n         //  any[] x = (tuple);\n         //  string a = x[0];\n         //  int b = x[1];\n         //\n         //  case 2:\n-        //  ((string, float) int)) ((a, b), c)) = (tuple)\n+        //  [[string, float], int] [[a, b], c] = (tuple)\n         //\n         //  any[] x = (tuple);\n         //  string a = x[0][0];\n         //  float b = x[0][1];\n         //  int c = x[1];\n \n-        //create tuple destruct block stmt\n+        // Create tuple destruct block stmt\n         final BLangBlockStmt blockStmt = ASTBuilderUtil.createBlockStmt(varNode.pos);\n \n-        //create a simple var for the array 'any[] x = (tuple)' based on the dimension for x\n-        String name = \"tuple\";\n+        // Create a simple var for the array 'any[] x = (tuple)' based on the dimension for x\n+        String name = \"$tuple$\";\n         final BLangSimpleVariable tuple =\n                 ASTBuilderUtil.createVariable(varNode.pos, name, symTable.arrayAllType, null,\n                                               new BVarSymbol(0, names.fromString(name), this.env.scope.owner.pkgID,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMDE0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22734#discussion_r412700142", "bodyText": "Shall we refactor in all the moved code?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //create tuple destruct block stmt\n          \n          \n            \n                    // Create tuple destruct block stmt", "author": "MaryamZi", "createdAt": "2020-04-22T06:18:48Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -1184,17 +1184,76 @@ public void visit(BLangLetExpression letExpression) {\n \n     @Override\n     public void visit(BLangTupleVariable varNode) {\n-        result = varNode;\n+        //  case 1:\n+        //  (string, int) (a, b) = (tuple)\n+        //\n+        //  any[] x = (tuple);\n+        //  string a = x[0];\n+        //  int b = x[1];\n+        //\n+        //  case 2:\n+        //  ((string, float) int)) ((a, b), c)) = (tuple)\n+        //\n+        //  any[] x = (tuple);\n+        //  string a = x[0][0];\n+        //  float b = x[0][1];\n+        //  int c = x[1];\n+\n+        //create tuple destruct block stmt", "originalCommit": "3261aeb30b9842563d102de7407ce086ad98facc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d8a5d3a265f32defb8b17447e4967b2048a98726", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\nindex a9961dd860a..9814a863ee1 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n\n@@ -1185,25 +1185,25 @@ public class Desugar extends BLangNodeVisitor {\n     @Override\n     public void visit(BLangTupleVariable varNode) {\n         //  case 1:\n-        //  (string, int) (a, b) = (tuple)\n+        //  [string, int] (a, b) = (tuple)\n         //\n         //  any[] x = (tuple);\n         //  string a = x[0];\n         //  int b = x[1];\n         //\n         //  case 2:\n-        //  ((string, float) int)) ((a, b), c)) = (tuple)\n+        //  [[string, float], int] [[a, b], c] = (tuple)\n         //\n         //  any[] x = (tuple);\n         //  string a = x[0][0];\n         //  float b = x[0][1];\n         //  int c = x[1];\n \n-        //create tuple destruct block stmt\n+        // Create tuple destruct block stmt\n         final BLangBlockStmt blockStmt = ASTBuilderUtil.createBlockStmt(varNode.pos);\n \n-        //create a simple var for the array 'any[] x = (tuple)' based on the dimension for x\n-        String name = \"tuple\";\n+        // Create a simple var for the array 'any[] x = (tuple)' based on the dimension for x\n+        String name = \"$tuple$\";\n         final BLangSimpleVariable tuple =\n                 ASTBuilderUtil.createVariable(varNode.pos, name, symTable.arrayAllType, null,\n                                               new BVarSymbol(0, names.fromString(name), this.env.scope.owner.pkgID,\n"}}, {"oid": "d8a5d3a265f32defb8b17447e4967b2048a98726", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8a5d3a265f32defb8b17447e4967b2048a98726", "message": "Address suggestions from the review", "committedDate": "2020-04-23T06:35:23Z", "type": "forcePushed"}, {"oid": "6e34babacb8304937b33c3f96e82546846b118fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6e34babacb8304937b33c3f96e82546846b118fc", "message": "Refactor record, tuple and error var desugar logic", "committedDate": "2020-04-27T05:49:48Z", "type": "commit"}, {"oid": "10ac7bea49c9cada9355b77aa164bc288aee4d65", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10ac7bea49c9cada9355b77aa164bc288aee4d65", "message": "Address suggestions from the review", "committedDate": "2020-04-27T05:49:52Z", "type": "commit"}, {"oid": "10ac7bea49c9cada9355b77aa164bc288aee4d65", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10ac7bea49c9cada9355b77aa164bc288aee4d65", "message": "Address suggestions from the review", "committedDate": "2020-04-27T05:49:52Z", "type": "forcePushed"}]}