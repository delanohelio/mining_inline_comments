{"pr_number": 23560, "pr_title": "Add exclude tags and operations attributes to openapi annotation [1.2.x]", "pr_createdAt": "2020-05-28T04:38:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560", "timeline": [{"oid": "5452221b35413c860ac965d2c2714f809b7b757f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5452221b35413c860ac965d2c2714f809b7b757f", "message": "Fix tag filter issue", "committedDate": "2020-05-27T05:15:56Z", "type": "commit"}, {"oid": "f96a30ec2c7ccc999dc31b7ab493b9b13f60312a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f96a30ec2c7ccc999dc31b7ab493b9b13f60312a", "message": "Add exclude attribute", "committedDate": "2020-05-27T05:42:30Z", "type": "commit"}, {"oid": "8a7b668b5f03383ba99c6d105f1de271b4b8ea3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a7b668b5f03383ba99c6d105f1de271b4b8ea3e", "message": "Fix suggestions", "committedDate": "2020-05-28T04:08:29Z", "type": "commit"}, {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8907d319c06b161cf0107bfa9c8f786edbdd3954", "message": "Remove Comments", "committedDate": "2020-05-28T04:23:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxOTYzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433619631", "bodyText": "@lnash94 We can avoid this additional line", "author": "keizer619", "createdAt": "2020-06-02T04:55:17Z", "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java", "diffHunk": "@@ -23,11 +23,12 @@\n import io.swagger.v3.oas.models.media.Schema;\n import io.swagger.v3.oas.models.parameters.Parameter;\n \n+", "originalCommit": "8907d319c06b161cf0107bfa9c8f786edbdd3954", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7de83c293751ce3cb45be044b2fed2fd93a38f04", "chunk": "diff --git a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java\nindex 380ac4ff90b..d961bfbf5cf 100644\n--- a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java\n+++ b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java\n\n@@ -23,7 +23,6 @@ import io.swagger.v3.oas.models.media.MediaType;\n import io.swagger.v3.oas.models.media.Schema;\n import io.swagger.v3.oas.models.parameters.Parameter;\n \n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDM0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433620344", "bodyText": "Just wondering where we made these access modifiers as default intentionally?\nUsually it has to be public.", "author": "keizer619", "createdAt": "2020-06-02T04:58:34Z", "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java", "diffHunk": "@@ -40,4 +40,6 @@\n     static final String OPERATIONS = \"operations\";\n     static final String BODY = \"body\";\n     static final String FAILONERRORS = \"failOnErrors\";\n+    static final String EXCLUDETAGS = \"excludeTags\";", "originalCommit": "8907d319c06b161cf0107bfa9c8f786edbdd3954", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0ODYyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433648621", "bodyText": "not intensional i think... we can make them public as it cause no harm", "author": "NipunaMarcus", "createdAt": "2020-06-02T06:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0OTAxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433649014", "bodyText": "@lnash94 can you make these public.... follow the below example\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static final String EXCLUDETAGS = \"excludeTags\";\n          \n          \n            \n                public static final String EXCLUDETAGS = \"excludeTags\";", "author": "NipunaMarcus", "createdAt": "2020-06-02T06:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "chunk": "diff --git a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java\nindex ad11861ccc2..be3eb7e254d 100644\n--- a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java\n+++ b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java\n\n@@ -21,25 +21,25 @@ package org.ballerinalang.openapi.validator;\n  * Container for Constants used in validator plugin.\n  */\n public class Constants {\n-    static final String PACKAGE = \"openapi\";\n-    static final String ANNOTATION_NAME = \"ServiceInfo\";\n-    static final String CONTRACT = \"contract\";\n-    static final String HTTP = \"http\";\n-    static final String RESOURCE_CONFIG = \"ResourceConfig\";\n-    static final String PATH = \"path\";\n-    static final String METHODS = \"methods\";\n-    static final String GET = \"get\";\n-    static final String POST = \"post\";\n-    static final String PUT = \"put\";\n-    static final String DELETE = \"delete\";\n-    static final String HEAD = \"head\";\n-    static final String PATCH = \"patch\";\n-    static final String OPTIONS = \"options\";\n-    static final String TRACE = \"trace\";\n-    static final String TAGS = \"tags\";\n-    static final String OPERATIONS = \"operations\";\n-    static final String BODY = \"body\";\n-    static final String FAILONERRORS = \"failOnErrors\";\n-    static final String EXCLUDETAGS = \"excludeTags\";\n-    static final String EXCLUDEOPERATIONS = \"excludeOperations\";\n+    public static final String PACKAGE = \"openapi\";\n+    public static final String ANNOTATION_NAME = \"ServiceInfo\";\n+    public static final String CONTRACT = \"contract\";\n+    public static final String HTTP = \"http\";\n+    public static final String RESOURCE_CONFIG = \"ResourceConfig\";\n+    public static final String PATH = \"path\";\n+    public static final String METHODS = \"methods\";\n+    public static final String GET = \"get\";\n+    public static final String POST = \"post\";\n+    public static final String PUT = \"put\";\n+    public static final String DELETE = \"delete\";\n+    public static final String HEAD = \"head\";\n+    public static final String PATCH = \"patch\";\n+    public static final String OPTIONS = \"options\";\n+    public static final String TRACE = \"trace\";\n+    public static final String TAGS = \"tags\";\n+    public static final String OPERATIONS = \"operations\";\n+    public static final String BODY = \"body\";\n+    public static final String FAILONERRORS = \"failOnErrors\";\n+    public static final String EXCLUDETAGS = \"excludeTags\";\n+    public static final String EXCLUDEOPERATIONS = \"excludeOperations\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDQ2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433620465", "bodyText": "We can avoid these extra line", "author": "keizer619", "createdAt": "2020-06-02T04:59:09Z", "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java", "diffHunk": "@@ -700,4 +793,54 @@ private static String convertOpenAPITypeToBallerina(String type) {\n     private static Diagnostic.DiagnosticPosition getServiceNamePosition(ServiceNode serviceNode) {\n         return serviceNode.getName().getPosition();\n     }\n+\n+    private static void tagsFilter (ServiceNode serviceNode,\n+                                    OpenAPIPathSummary openApiSummary,\n+                                    List<String> tags,\n+                                    Diagnostic.Kind kind,\n+                                    Diagnostic.Kind kind1,\n+                                    Diagnostic.Kind kind2,\n+                                    DiagnosticLog dLog) {\n+        for (String method : openApiSummary.getAvailableOperations()) {\n+            if (openApiSummary.hasTags(tags, method)) {\n+                kind = kind1;\n+                break;\n+            } else {\n+                kind = kind2;\n+            }\n+        }\n+        dLog.logDiagnostic(kind, getServiceNamePosition(serviceNode),\n+                ErrorMessages.unimplementedOpenAPIPath(openApiSummary.getPath()));\n+    }\n+    //for Operation Filter\n+    private static void operationsFilter (ServiceNode serviceNode,\n+                                          OpenAPIPathSummary openApiSummary,\n+                                          List<String> operations,\n+                                          Diagnostic.Kind kind,\n+                                          Diagnostic.Kind kind1,\n+                                          Diagnostic.Kind kind2,\n+                                          DiagnosticLog dLog) {\n+        for (String method : openApiSummary.getAvailableOperations()) {\n+            if (openApiSummary.hasOperations(operations, method)) {\n+                kind = kind1;\n+                break;\n+            } else {\n+                kind = kind2;\n+            }\n+        }\n+        dLog.logDiagnostic(kind, getServiceNamePosition(serviceNode),\n+                ErrorMessages.unimplementedOpenAPIPath(openApiSummary.getPath()));\n+", "originalCommit": "8907d319c06b161cf0107bfa9c8f786edbdd3954", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "chunk": "diff --git a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java\nindex e5f4472341d..71149ac6c56 100644\n--- a/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java\n+++ b/misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java\n\n@@ -830,11 +830,8 @@ class ValidatorUtil {\n         }\n         dLog.logDiagnostic(kind, getServiceNamePosition(serviceNode),\n                 ErrorMessages.unimplementedOpenAPIPath(openApiSummary.getPath()));\n-\n-\n     }\n \n-\n     private static void validateUnmatchedMethods(List<String> unmatchedMethods, ServiceNode serviceNode,\n                                                  Diagnostic.Kind kind, OpenAPIPathSummary openApiSummary,\n                                                  DiagnosticLog dLog) {\n"}}, {"oid": "7de83c293751ce3cb45be044b2fed2fd93a38f04", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7de83c293751ce3cb45be044b2fed2fd93a38f04", "message": "Fix review suggestion", "committedDate": "2020-06-02T05:22:51Z", "type": "commit"}, {"oid": "a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "message": "Fix review suggestions", "committedDate": "2020-06-02T06:46:03Z", "type": "commit"}, {"oid": "5023d0fc7c31617c45b823e1b78e347a428283ec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5023d0fc7c31617c45b823e1b78e347a428283ec", "message": "Fix review suggestions", "committedDate": "2020-06-02T12:38:34Z", "type": "commit"}, {"oid": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22", "message": "Fix checkstyle error", "committedDate": "2020-06-02T13:55:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3MzU0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r434373546", "bodyText": "these can be moved into the error messages class I think... it will be much clear then....", "author": "NipunaMarcus", "createdAt": "2020-06-03T07:47:56Z", "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIValidatorPlugin.java", "diffHunk": "@@ -136,54 +139,30 @@ public void process(ServiceNode serviceNode, List<AnnotationAttachmentNode> anno\n                                     }\n                                 } else {\n                                     dLog.logDiagnostic(Diagnostic.Kind.ERROR, annotation.getPosition(),\n-                                                       \"Contract path should be applied as a string value\");\n+                                            \"Contract path should be applied as a string value\");", "originalCommit": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}