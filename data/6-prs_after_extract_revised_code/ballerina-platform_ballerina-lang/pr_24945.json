{"pr_number": 24945, "pr_title": "Add Function mocking rest param compatibility", "pr_createdAt": "2020-07-26T16:41:51Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MTg4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461341889", "bodyText": "Shall we make these comments more meaningful? e.g. // This would return the ballerina equivalent <type> MockHandler(<mockFnObj>, args)", "author": "azinneera", "createdAt": "2020-07-28T06:14:23Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/MockDesugar.java", "diffHunk": "@@ -346,6 +341,7 @@ private BLangLiteral generateRHSExpr(String val) {\n         return bLangLiteral;\n     }\n \n+    // Return: <type> MockHandler(<mockFnObj>, args)", "originalCommit": "7a526d3abeffe2051805157961d930a1d026a298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MTk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461341990", "bodyText": "Applies to other similar places", "author": "azinneera", "createdAt": "2020-07-28T06:14:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MTg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4OTMzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461389332", "bodyText": "Changed the comments in the MockDesugar class", "author": "Ibaqu", "createdAt": "2020-07-28T07:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MTg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "fcf61b773675003516c6b6c7723cc94183cfb631", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/MockDesugar.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/MockDesugar.java\nindex 3ab842e887a..656b82b0651 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/MockDesugar.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/MockDesugar.java\n\n@@ -341,7 +354,7 @@ public class MockDesugar {\n         return bLangLiteral;\n     }\n \n-    // Return: <type> MockHandler(<mockFnObj>, args)\n+    // This function synthesizes the Ballerina equivalent of : `Return: <type> MockHandler(<mockFnObj>, args)`\n     private BLangTypeConversionExpr generateTypeConversionExpression() {\n         BLangInvocation bLangInvocation = generateBLangInvocation();\n         BType target = generateType();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NDQ3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461354472", "bodyText": "Can you check the formatting here? Seems this is not formatted correctly.", "author": "Dilhasha", "createdAt": "2020-07-28T06:45:49Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java", "diffHunk": "@@ -185,6 +187,8 @@ public void notifyFailure(ErrorValue error) {\n             return double.class;\n         } else if (paramValue instanceof Float) {\n             return double.class;\n+        } else  if (paramValue instanceof ArrayValueImpl) {", "originalCommit": "7a526d3abeffe2051805157961d930a1d026a298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4OTE2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461389165", "bodyText": "Corrected the formatting for the Executor class", "author": "Ibaqu", "createdAt": "2020-07-28T07:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NDQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fcf61b773675003516c6b6c7723cc94183cfb631", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\nindex 084554385c8..d36139b0530 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\n\n@@ -187,14 +190,11 @@ public class Executor {\n             return double.class;\n         } else if (paramValue instanceof Float) {\n             return double.class;\n-        } else  if (paramValue instanceof ArrayValueImpl) {\n+        } else if (paramValue instanceof ArrayValueImpl) {\n             return ArrayValue.class;\n         } else {\n             // This is done temporarily, until blocks are added here for all possible cases.\n             throw new RuntimeException(\"unknown param type: \" + paramValue.getClass());\n         }\n     }\n-\n-    private Executor() {\n-    }\n }\n"}}, {"oid": "80a90fdd286b8ba2fbaf18d521cd8e07a3baf56b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80a90fdd286b8ba2fbaf18d521cd8e07a3baf56b", "message": "Add RestParam compatibility for Function mocking", "committedDate": "2020-07-28T07:17:51Z", "type": "commit"}, {"oid": "e1c86c772de56caf002e83aa75c7c38eb09b3ee0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e1c86c772de56caf002e83aa75c7c38eb09b3ee0", "message": "Add Mock Function varargs tests", "committedDate": "2020-07-28T07:17:51Z", "type": "commit"}, {"oid": "fcf61b773675003516c6b6c7723cc94183cfb631", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fcf61b773675003516c6b6c7723cc94183cfb631", "message": "Refactor Mock Functionality", "committedDate": "2020-07-28T07:52:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzMTQxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461431413", "bodyText": "Not formatted properly", "author": "anupama-pathirage", "createdAt": "2020-07-28T09:05:59Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java", "diffHunk": "@@ -50,9 +52,12 @@\n  */\n public class Executor {\n \n-    private static final BUnionType OPTIONAL_ERROR_TYPE = new BUnionType(\n-            new BType[] { BTypes.typeError, BTypes.typeNull },\n-            TypeFlags.asMask(TypeFlags.NILABLE, TypeFlags.PURETYPE));\n+    private static final BUnionType OPTIONAL_ERROR_TYPE = new BUnionType(new BType[]{BTypes.typeError, BTypes.typeNull},\n+                                                                         TypeFlags.asMask(TypeFlags.NILABLE,\n+                                                                                          TypeFlags.PURETYPE));", "originalCommit": "fcf61b773675003516c6b6c7723cc94183cfb631", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU3NDM1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24945#discussion_r461574351", "bodyText": "Added formatting.", "author": "Ibaqu", "createdAt": "2020-07-28T13:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzMTQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "296db47607cfb4037a199692eed89082dbf48f48", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\nindex d36139b0530..dea91b0e853 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/Executor.java\n\n@@ -52,9 +52,9 @@ import java.util.function.Function;\n  */\n public class Executor {\n \n-    private static final BUnionType OPTIONAL_ERROR_TYPE = new BUnionType(new BType[]{BTypes.typeError, BTypes.typeNull},\n-                                                                         TypeFlags.asMask(TypeFlags.NILABLE,\n-                                                                                          TypeFlags.PURETYPE));\n+    private static final BUnionType OPTIONAL_ERROR_TYPE = new BUnionType(\n+            new BType[]{BTypes.typeError, BTypes.typeNull},\n+            TypeFlags.asMask(TypeFlags.NILABLE, TypeFlags.PURETYPE));\n \n     private Executor() {\n     }\n"}}, {"oid": "296db47607cfb4037a199692eed89082dbf48f48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/296db47607cfb4037a199692eed89082dbf48f48", "message": "Refactor Mock Functionality", "committedDate": "2020-07-28T09:37:09Z", "type": "commit"}, {"oid": "296db47607cfb4037a199692eed89082dbf48f48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/296db47607cfb4037a199692eed89082dbf48f48", "message": "Refactor Mock Functionality", "committedDate": "2020-07-28T09:37:09Z", "type": "forcePushed"}]}