{"pr_number": 22833, "pr_title": "Update grammar of simple-const-expr according to 2020R1 specification", "pr_createdAt": "2020-04-22T08:32:06Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833", "timeline": [{"oid": "b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "message": "Update grammar of simple-const-expr", "committedDate": "2020-04-22T08:07:51Z", "type": "commit"}, {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80be3d975f2f043f4d165078494327eee8a2cc80", "message": "Add unit tests", "committedDate": "2020-04-22T08:07:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r412933990", "bodyText": "We usually try to do the testing on ballerina itself. And panic if not the intended result of the test.", "author": "dulvinw", "createdAt": "2020-04-22T12:23:27Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "originalCommit": "80be3d975f2f043f4d165078494327eee8a2cc80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMDUyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413100529", "bodyText": "+1", "author": "dulajdilshan", "createdAt": "2020-04-22T15:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5MTQ3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414091476", "bodyText": "Done", "author": "chiranSachintha", "createdAt": "2020-04-23T20:11:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\nindex 054ef64d893..1ae3a59beb7 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n\n@@ -367,21 +367,14 @@ public class FiniteTypeTest {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n-    @Test()\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveIntegers() {\n         BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertNotNull(returns[0]);\n-        Assert.assertTrue(returns[0] instanceof BInteger);\n-        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n     }\n-    @Test()\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveFloats() {\n         BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertNotNull(returns[0]);\n-        Assert.assertTrue(returns[0] instanceof BFloat);\n-        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n     }\n-\n }\n"}}, {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "message": "Fix review suggestions", "committedDate": "2020-04-22T20:07:55Z", "type": "commit"}, {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "message": "Fix review suggestions", "committedDate": "2020-04-22T20:07:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODIyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:55:34Z", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "578c324fe775986125b42455243dcb706a306715", "chunk": "diff --git a/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java b/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\nindex ff10f0ec4df..72f73ee2277 100644\n--- a/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n+++ b/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n\n@@ -370,11 +370,11 @@ public class FiniteTypeTest {\n \n     @Test(description = \"Test finite type where integer literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveIntegers() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n     }\n \n     @Test(description = \"Test finite type where float literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveFloats() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODMzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508339", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:55:58Z", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "578c324fe775986125b42455243dcb706a306715", "chunk": "diff --git a/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java b/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\nindex ff10f0ec4df..72f73ee2277 100644\n--- a/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n+++ b/tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n\n@@ -370,11 +370,11 @@ public class FiniteTypeTest {\n \n     @Test(description = \"Test finite type where integer literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveIntegers() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n     }\n \n     @Test(description = \"Test finite type where float literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveFloats() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODYxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508614", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:56:42Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "578c324fe775986125b42455243dcb706a306715", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\nindex 1ae3a59beb7..23a1d526488 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n\n@@ -370,11 +370,11 @@ public class FiniteTypeTest {\n \n     @Test(description = \"Test finite type where integer literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveIntegers() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n     }\n \n     @Test(description = \"Test finite type where float literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveFloats() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODcwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508702", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:56:57Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "578c324fe775986125b42455243dcb706a306715", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\nindex 1ae3a59beb7..23a1d526488 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java\n\n@@ -370,11 +370,11 @@ public class FiniteTypeTest {\n \n     @Test(description = \"Test finite type where integer literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveIntegers() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n     }\n \n     @Test(description = \"Test finite type where float literals with positive sign as members\")\n     public void testFiniteTypesWithPositiveFloats() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n     }\n }\n"}}, {"oid": "578c324fe775986125b42455243dcb706a306715", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "message": "Fix review suggestions", "committedDate": "2020-04-23T19:53:49Z", "type": "commit"}, {"oid": "578c324fe775986125b42455243dcb706a306715", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "message": "Fix review suggestions", "committedDate": "2020-04-23T19:53:49Z", "type": "forcePushed"}]}