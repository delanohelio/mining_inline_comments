{"pr_number": 22708, "pr_title": "Fix for 'BArrayType' referencing error for multidimensional array", "pr_createdAt": "2020-04-17T06:19:21Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMTE4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410021184", "bodyText": "Licence header should be 2020", "author": "warunalakshitha", "createdAt": "2020-04-17T06:41:28Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -1,20 +1,20 @@\n /*\n-*   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "4ab1b4665e644f2e1627943bed8776cd4f970bb8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzY0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410027640", "bodyText": "Changed it in commit 52879ba", "author": "HindujaB", "createdAt": "2020-04-17T06:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMTE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA1MTE1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410051158", "bodyText": "We change license header only in new files? why is this requested here?", "author": "riyafa", "createdAt": "2020-04-17T07:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMTE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA1Mjk4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410052989", "bodyText": "I initially thought this was new file and just realize this is a just formatting. Yes correct. 2019 should be ok. Sorry for that. :)", "author": "warunalakshitha", "createdAt": "2020-04-17T07:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMTE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "3d4beca94d2dbf0eab20ba87bfd09db7ffebef9e", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 0e9c9ae95ef..2fd9660ce70 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -1,5 +1,5 @@\n /*\n- *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n  *\n  *  WSO2 Inc. licenses this file to you under the Apache License,\n  *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0OTE0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410049148", "bodyText": "We change year only in newly created files, not in old files.", "author": "riyafa", "createdAt": "2020-04-17T07:44:41Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -1,20 +1,20 @@\n /*\n-*   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "52879ba833b656e946a3650bcd6a2ef5b9d0683e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c93df82f4a65e741f1ef0aa41bf2d59c11312c1", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 2fd9660ce70..0e9c9ae95ef 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -1,5 +1,5 @@\n /*\n- *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n  *\n  *  WSO2 Inc. licenses this file to you under the Apache License,\n  *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"oid": "8c93df82f4a65e741f1ef0aa41bf2d59c11312c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c93df82f4a65e741f1ef0aa41bf2d59c11312c1", "message": "Add test cases and revert the commit of unnecessary files", "committedDate": "2020-04-17T09:44:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI4NDM1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r410284352", "bodyText": "Shall we remove this formatting as it is not necessary?", "author": "riyafa", "createdAt": "2020-04-17T15:05:28Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -1,20 +1,20 @@\n /*\n-*   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */", "originalCommit": "8c93df82f4a65e741f1ef0aa41bf2d59c11312c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d4beca94d2dbf0eab20ba87bfd09db7ffebef9e", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 0e9c9ae95ef..2fd9660ce70 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -1,5 +1,5 @@\n /*\n- *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n  *\n  *  WSO2 Inc. licenses this file to you under the Apache License,\n  *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"oid": "59c6a14a1d1212d5aa2adfb41dce4fe2d5b3c9cc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59c6a14a1d1212d5aa2adfb41dce4fe2d5b3c9cc", "message": "Modify the string concat() usage in toString() function", "committedDate": "2020-04-20T10:44:23Z", "type": "forcePushed"}, {"oid": "5bbca472e72ad5e4e0cd58d63b96473396e3bc44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5bbca472e72ad5e4e0cd58d63b96473396e3bc44", "message": "Remove unused imports to fix checkstyle error", "committedDate": "2020-04-20T11:56:36Z", "type": "forcePushed"}, {"oid": "122d8385f4b861558e324f45e5334784ff3c29c8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/122d8385f4b861558e324f45e5334784ff3c29c8", "message": "Change the logic of toString function\n\nThis commit relates to the issue #21556", "committedDate": "2020-04-25T12:54:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxMTA1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415511054", "bodyText": "This cast can be moved to a variable as there are three casts happening for the same.", "author": "Kishanthan", "createdAt": "2020-04-27T05:00:01Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -128,8 +128,32 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n-        StringBuilder sb = new StringBuilder(elementType.toString());\n-        return size != -1 ? sb.append(\"[\").append(size).append(\"]\").toString() : sb.append(\"[]\").toString();\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(getTypeName());\n+        sb.append(getSizeString());\n+        BType element = elementType;\n+        while (element instanceof BArrayType) {\n+            sb.append(((BArrayType) element).getSizeString());", "originalCommit": "122d8385f4b861558e324f45e5334784ff3c29c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyNDk2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415524960", "bodyText": "Yes. changed into a variable in a9602ad", "author": "HindujaB", "createdAt": "2020-04-27T05:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxMTA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "bb556716f940f13eaf2400c2efa2442a5eb18dda", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex e331221e299..e0a00f5e8fe 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -133,11 +133,9 @@ public class BArrayType extends BType {\n         sb.append(getSizeString());\n         BType element = elementType;\n         while (element instanceof BArrayType) {\n-            sb.append(((BArrayType) element).getSizeString());\n-            if (!(((BArrayType) element).elementType instanceof BArrayType)) {\n-                break;\n-            }\n-            element = ((BArrayType) element).elementType;\n+            BArrayType arrayElement = (BArrayType) element;\n+            sb.append(arrayElement.getSizeString());\n+            element = arrayElement.elementType;\n         }\n         return sb.toString();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxOTI3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415519278", "bodyText": "I don't think we need this line, since already checked in the while.", "author": "manuranga", "createdAt": "2020-04-27T05:24:32Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -128,8 +128,32 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n-        StringBuilder sb = new StringBuilder(elementType.toString());\n-        return size != -1 ? sb.append(\"[\").append(size).append(\"]\").toString() : sb.append(\"[]\").toString();\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(getTypeName());\n+        sb.append(getSizeString());\n+        BType element = elementType;\n+        while (element instanceof BArrayType) {\n+            sb.append(((BArrayType) element).getSizeString());\n+            if (!(((BArrayType) element).elementType instanceof BArrayType)) {", "originalCommit": "122d8385f4b861558e324f45e5334784ff3c29c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyMTk5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415521993", "bodyText": "No. we are here checking the element type of the element which is previously checked in while. Those are different checks.", "author": "HindujaB", "createdAt": "2020-04-27T05:32:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxOTI3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyODY4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415528683", "bodyText": "it will be checked in the beginning of the next loop, won't it?", "author": "manuranga", "createdAt": "2020-04-27T05:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxOTI3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTk2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r415535963", "bodyText": "Yes. Removed them in this.", "author": "HindujaB", "createdAt": "2020-04-27T06:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxOTI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "bb556716f940f13eaf2400c2efa2442a5eb18dda", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex e331221e299..e0a00f5e8fe 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -133,11 +133,9 @@ public class BArrayType extends BType {\n         sb.append(getSizeString());\n         BType element = elementType;\n         while (element instanceof BArrayType) {\n-            sb.append(((BArrayType) element).getSizeString());\n-            if (!(((BArrayType) element).elementType instanceof BArrayType)) {\n-                break;\n-            }\n-            element = ((BArrayType) element).elementType;\n+            BArrayType arrayElement = (BArrayType) element;\n+            sb.append(arrayElement.getSizeString());\n+            element = arrayElement.elementType;\n         }\n         return sb.toString();\n     }\n"}}, {"oid": "bb556716f940f13eaf2400c2efa2442a5eb18dda", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb556716f940f13eaf2400c2efa2442a5eb18dda", "message": "Remove unwanted lines", "committedDate": "2020-04-27T06:06:47Z", "type": "forcePushed"}, {"oid": "738e478ac89ca01e785e85624f19f8b8cb4ad8db", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/738e478ac89ca01e785e85624f19f8b8cb4ad8db", "message": "Get rid of getType() in toString method", "committedDate": "2020-04-27T11:40:40Z", "type": "forcePushed"}, {"oid": "9277821411e1c42a4a49b48589efd35b05a9502e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9277821411e1c42a4a49b48589efd35b05a9502e", "message": "Get rid of getType() in toString method", "committedDate": "2020-04-28T03:34:54Z", "type": "forcePushed"}, {"oid": "07b18a564e5435e50421d62e4b33f0d8761a8436", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07b18a564e5435e50421d62e4b33f0d8761a8436", "message": "Get rid of getType() in toString method", "committedDate": "2020-04-28T05:55:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3ODExOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416478118", "bodyText": "why is this check moved outside of while loop's condition?", "author": "manuranga", "createdAt": "2020-04-28T09:45:09Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -128,8 +128,23 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n-        StringBuilder sb = new StringBuilder(elementType.toString());\n-        return size != -1 ? sb.append(\"[\").append(size).append(\"]\").toString() : sb.append(\"[]\").toString();\n+        StringBuilder sb = new StringBuilder();\n+        BType element = elementType;\n+        sb.append(getSizeString());\n+        while (true) {\n+            if (!(element instanceof BArrayType)) {", "originalCommit": "07b18a564e5435e50421d62e4b33f0d8761a8436", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5MTUyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416491525", "bodyText": "Both methods works fine. But I used this as I thought this code is more clear to look at.", "author": "HindujaB", "createdAt": "2020-04-28T10:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3ODExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5NDUwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416494504", "bodyText": "while (true) {\n    if (!(element instanceof BArrayType)) {\n        break;\n     }\n    ...\n}\nvs\nwhile (element instanceof BArrayType) {\n    ...\n}\nI think the second one is much clearer.", "author": "manuranga", "createdAt": "2020-04-28T10:11:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3ODExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5ODA4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416498084", "bodyText": "changed it in latest commit", "author": "HindujaB", "createdAt": "2020-04-28T10:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3ODExOA=="}], "type": "inlineReview", "revised_code": {"commit": "1d36132fbe4080bd76afdef3bba901ea3a9078b5", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 466d22aabdb..90e9a1c1347 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -129,17 +129,14 @@ public class BArrayType extends BType {\n     @Override\n     public String toString() {\n         StringBuilder sb = new StringBuilder();\n-        BType element = elementType;\n+        BType tempElementType = elementType;\n         sb.append(getSizeString());\n-        while (true) {\n-            if (!(element instanceof BArrayType)) {\n-                break;\n-            }\n-            BArrayType arrayElement = (BArrayType) element;\n+        while (tempElementType.getTag() == TypeTags.ARRAY_TAG) {\n+            BArrayType arrayElement = (BArrayType) tempElementType;\n             sb.append(arrayElement.getSizeString());\n-            element = arrayElement.elementType;\n+            tempElementType = arrayElement.elementType;\n         }\n-        sb.insert(0, element.toString());\n+        sb.insert(0, tempElementType.toString());\n         return sb.toString();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3OTcwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416479703", "bodyText": "insert is less efficient than append, can we move this above sb.append(getSizeString()); and use append ?", "author": "manuranga", "createdAt": "2020-04-28T09:47:41Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -128,8 +128,23 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n-        StringBuilder sb = new StringBuilder(elementType.toString());\n-        return size != -1 ? sb.append(\"[\").append(size).append(\"]\").toString() : sb.append(\"[]\").toString();\n+        StringBuilder sb = new StringBuilder();\n+        BType element = elementType;\n+        sb.append(getSizeString());\n+        while (true) {\n+            if (!(element instanceof BArrayType)) {\n+                break;\n+            }\n+            BArrayType arrayElement = (BArrayType) element;\n+            sb.append(arrayElement.getSizeString());\n+            element = arrayElement.elementType;\n+        }\n+        sb.insert(0, element.toString());", "originalCommit": "07b18a564e5435e50421d62e4b33f0d8761a8436", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ4MTk5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r416481993", "bodyText": "No. The element getting changed in the loop. So, it must be added at last.", "author": "HindujaB", "createdAt": "2020-04-28T09:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3OTcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "1d36132fbe4080bd76afdef3bba901ea3a9078b5", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 466d22aabdb..90e9a1c1347 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -129,17 +129,14 @@ public class BArrayType extends BType {\n     @Override\n     public String toString() {\n         StringBuilder sb = new StringBuilder();\n-        BType element = elementType;\n+        BType tempElementType = elementType;\n         sb.append(getSizeString());\n-        while (true) {\n-            if (!(element instanceof BArrayType)) {\n-                break;\n-            }\n-            BArrayType arrayElement = (BArrayType) element;\n+        while (tempElementType.getTag() == TypeTags.ARRAY_TAG) {\n+            BArrayType arrayElement = (BArrayType) tempElementType;\n             sb.append(arrayElement.getSizeString());\n-            element = arrayElement.elementType;\n+            tempElementType = arrayElement.elementType;\n         }\n-        sb.insert(0, element.toString());\n+        sb.insert(0, tempElementType.toString());\n         return sb.toString();\n     }\n \n"}}, {"oid": "1d36132fbe4080bd76afdef3bba901ea3a9078b5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d36132fbe4080bd76afdef3bba901ea3a9078b5", "message": "Modify union type toString method\n\nThis commit resolves the ambiguity in toString of union types. Eg.: (int|string[][4])[3] is clearer than int|string[][4][3]", "committedDate": "2020-04-29T15:39:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MjAwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r417152000", "bodyText": "can we please change this to match the style of the repo, using tag to check the sub class type.\nbType.tag == TypeTags.ARRAY", "author": "manuranga", "createdAt": "2020-04-29T08:34:21Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java", "diffHunk": "@@ -128,8 +128,20 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n-        StringBuilder sb = new StringBuilder(elementType.toString());\n-        return size != -1 ? sb.append(\"[\").append(size).append(\"]\").toString() : sb.append(\"[]\").toString();\n+        StringBuilder sb = new StringBuilder();\n+        BType element = elementType;\n+        sb.append(getSizeString());\n+        while (element instanceof BArrayType) {", "originalCommit": "d937100ddcb7e5a1d8bb26f6fba57e7ff64a9571", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1d36132fbe4080bd76afdef3bba901ea3a9078b5", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\nindex 12e0db25143..90e9a1c1347 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BArrayType.java\n\n@@ -129,14 +129,14 @@ public class BArrayType extends BType {\n     @Override\n     public String toString() {\n         StringBuilder sb = new StringBuilder();\n-        BType element = elementType;\n+        BType tempElementType = elementType;\n         sb.append(getSizeString());\n-        while (element instanceof BArrayType) {\n-            BArrayType arrayElement = (BArrayType) element;\n+        while (tempElementType.getTag() == TypeTags.ARRAY_TAG) {\n+            BArrayType arrayElement = (BArrayType) tempElementType;\n             sb.append(arrayElement.getSizeString());\n-            element = arrayElement.elementType;\n+            tempElementType = arrayElement.elementType;\n         }\n-        sb.insert(0, element.toString());\n+        sb.insert(0, tempElementType.toString());\n         return sb.toString();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc2NjE0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22708#discussion_r417766140", "bodyText": "This was correct the way it was, typedesc map<int|string>\nnew format is redundant typedesc map<(int|string)>.\nOnly advance case like (int|boolean[6][4])[2][3] needs brackets", "author": "manuranga", "createdAt": "2020-04-30T05:45:19Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java", "diffHunk": "@@ -120,7 +120,7 @@ public String toString() {\n                     sb.append(PIPE);\n                 }\n             }\n-            cachedToString = sb.toString();\n+            cachedToString = sb.append(\")\").toString();", "originalCommit": "1d36132fbe4080bd76afdef3bba901ea3a9078b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ac30498b351f60c7c5232a3fade7b4fc75bf1b2", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java\nindex dae4aee7eb0..20f09e57551 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java\n\n@@ -120,7 +120,7 @@ public class BUnionType extends BType {\n                     sb.append(PIPE);\n                 }\n             }\n-            cachedToString = sb.append(\")\").toString();\n+            cachedToString = sb.toString();\n \n         }\n         return cachedToString;\n"}}, {"oid": "3ac30498b351f60c7c5232a3fade7b4fc75bf1b2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ac30498b351f60c7c5232a3fade7b4fc75bf1b2", "message": "Add necessary test case for array of tuples", "committedDate": "2020-04-30T08:00:37Z", "type": "forcePushed"}, {"oid": "f5b769366a2d22453d56d375db79fa738e432f3f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5b769366a2d22453d56d375db79fa738e432f3f", "message": "Fix for reverse referencing in toString method", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "0d6d46060e01928db87c58ad1c6f9b916a278e29", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d6d46060e01928db87c58ad1c6f9b916a278e29", "message": "Rename variables in toString function", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "54e03a4281b535c743649f02a441d76ce68159ab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54e03a4281b535c743649f02a441d76ce68159ab", "message": "Fix the getType method for Array of BMapType and BArrayType\n\nThis commit fixes the returning element type method related to issue #21556", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "3d4beca94d2dbf0eab20ba87bfd09db7ffebef9e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d4beca94d2dbf0eab20ba87bfd09db7ffebef9e", "message": "Change year into 2020 in license section", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "124dce91604773a746dd29b1cdc3ba4054242415", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/124dce91604773a746dd29b1cdc3ba4054242415", "message": "Add test cases and revert the commit of unnecessary files", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "aa5c400461923f7b52a1684c155e6172d1b3a31f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa5c400461923f7b52a1684c155e6172d1b3a31f", "message": "Modify tests cases by adding assertion inside .bal file", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "1ce0b6ceaa76967694da7083d01d54c6d4d3cba8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ce0b6ceaa76967694da7083d01d54c6d4d3cba8", "message": "Modify the string concat() usage in toString() function", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "0fdcc7b6cbda4eca344307c1895c3ea0e3396ddf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0fdcc7b6cbda4eca344307c1895c3ea0e3396ddf", "message": "Remove unused imports to fix checkstyle error", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "4792472cbdf6a336db92e1136e862137b786d0eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4792472cbdf6a336db92e1136e862137b786d0eb", "message": "Change the logic of toString function\n\nThis commit relates to the issue #21556", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "fd4cdf31ccdb75517b531d91505787585d50cb51", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd4cdf31ccdb75517b531d91505787585d50cb51", "message": "Add a variable for repeating type casts\n\nThis commit relates to the issue #21556", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "70c94823f3d06069787c69e46f8459ad9d85fa74", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/70c94823f3d06069787c69e46f8459ad9d85fa74", "message": "Remove unwanted lines", "committedDate": "2020-04-30T12:07:49Z", "type": "commit"}, {"oid": "4712ceaf280d3dd5e3950790a42b2c52882e1300", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4712ceaf280d3dd5e3950790a42b2c52882e1300", "message": "Get rid of getType() in toString method", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "75508dc2047d61c5d32a2b9775ce95547fa71675", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/75508dc2047d61c5d32a2b9775ce95547fa71675", "message": "Remove unnecessary checks", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "0c5439a6d126bce93489c8e52499a6a369b3624b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c5439a6d126bce93489c8e52499a6a369b3624b", "message": "Change instance of check into tag check", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "e91f5a9155b7a85f6fedda8a8233f16f9fbded2d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e91f5a9155b7a85f6fedda8a8233f16f9fbded2d", "message": "Add test case for union type arrays", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "19433f03fc054f6a72a026d9cc6403a1fca7b869", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19433f03fc054f6a72a026d9cc6403a1fca7b869", "message": "Modify union type toString method\n\nThis commit resolves the ambiguity in toString of union types. Eg.: (int|string[][4])[3] is clearer than int|string[][4][3]", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "bdc55370d8060ad4de437fa8c8b3f9b70125bad6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bdc55370d8060ad4de437fa8c8b3f9b70125bad6", "message": "Revert \"Modify union type toString method\"\n\nThis reverts commit 1d36132f", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "a40691434f55b5d27e83b7a00ea09bbb84fb70ee", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a40691434f55b5d27e83b7a00ea09bbb84fb70ee", "message": "Modify union type toString method\n\nThis commit resolves the ambiguity in toString of array union types. Eg.: (int|string[][4])[3] is clearer than int|string[][4][3]", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "224b02b27a596c33e843dfb4ad66b31b263a2140", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/224b02b27a596c33e843dfb4ad66b31b263a2140", "message": "Add necessary test case for array of tuples", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "1b78854689a3e68c6dad786ac8f60bd7fccb5718", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b78854689a3e68c6dad786ac8f60bd7fccb5718", "message": "Modify error messages that reference union type arrays", "committedDate": "2020-04-30T12:07:50Z", "type": "commit"}, {"oid": "1b78854689a3e68c6dad786ac8f60bd7fccb5718", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b78854689a3e68c6dad786ac8f60bd7fccb5718", "message": "Modify error messages that reference union type arrays", "committedDate": "2020-04-30T12:07:50Z", "type": "forcePushed"}]}