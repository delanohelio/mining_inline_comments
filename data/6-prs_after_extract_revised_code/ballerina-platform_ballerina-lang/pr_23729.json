{"pr_number": 23729, "pr_title": "Fix filepath module errors", "pr_createdAt": "2020-06-04T09:22:05Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729", "timeline": [{"oid": "def32df69ba894d9e66c410789828c8bed511db2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/def32df69ba894d9e66c410789828c8bed511db2", "message": "Fix filepath module errors", "committedDate": "2020-06-04T09:15:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MTAyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729#discussion_r435151027", "bodyText": "I doubt this will fail in windows build. shall we remove the file path from the assert", "author": "daneshk", "createdAt": "2020-06-04T10:25:17Z", "path": "stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java", "diffHunk": "@@ -386,8 +385,9 @@ public void testResolveNotLinkPath() {\n         assertEquals(returns.length, 1);\n         assertTrue(returns[0] instanceof BError);\n         BError resolveError = (BError) returns[0];\n-        assertEquals(resolveError.getReason(), Constants.NOT_LINK_ERROR);\n-        log.info(\"Ballerina error: \" + resolveError.getDetails().stringValue());\n+        assertEquals(resolveError.getMessage(),\n+                     \"Path is not a symbolic link src/test/resources/data-files/test_nolink.txt\");", "originalCommit": "def32df69ba894d9e66c410789828c8bed511db2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2OTA2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729#discussion_r435969065", "bodyText": "Fixed in 6f0cd9f", "author": "aashikam", "createdAt": "2020-06-05T14:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MTAyNw=="}], "type": "inlineReview", "revised_code": {"commit": "6f0cd9f3156126d3a221e576cc91061d5656b530", "chunk": "diff --git a/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java b/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\nindex bc7077607f7..6a0bcbf3a6c 100644\n--- a/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\n+++ b/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\n\n@@ -385,8 +385,7 @@ public class PathTest {\n         assertEquals(returns.length, 1);\n         assertTrue(returns[0] instanceof BError);\n         BError resolveError = (BError) returns[0];\n-        assertEquals(resolveError.getMessage(),\n-                     \"Path is not a symbolic link src/test/resources/data-files/test_nolink.txt\");\n+        assertTrue(resolveError.getMessage().contains(\"Path is not a symbolic link\"));\n         log.info(\"Ballerina error: \" + resolveError.getMessage());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MTQyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729#discussion_r435151426", "bodyText": "Same as above. shall we remove the file path and check only the first part", "author": "daneshk", "createdAt": "2020-06-04T10:26:05Z", "path": "stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java", "diffHunk": "@@ -399,8 +399,9 @@ public void testResolveNonExistencePath() {\n         assertEquals(returns.length, 1);\n         assertTrue(returns[0] instanceof BError);\n         BError resolveError = (BError) returns[0];\n-        assertEquals(resolveError.getReason(), Constants.FILE_NOT_FOUND_ERROR);\n-        log.info(\"Ballerina error: \" + resolveError.getDetails().stringValue());\n+        assertEquals(resolveError.getMessage(),\n+                     \"File does not exist at src/test/resources/data-files/test_nonexist.txt\");", "originalCommit": "def32df69ba894d9e66c410789828c8bed511db2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2ODkzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729#discussion_r435968932", "bodyText": "Fixed in 6f0cd9f", "author": "aashikam", "createdAt": "2020-06-05T14:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MTQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "6f0cd9f3156126d3a221e576cc91061d5656b530", "chunk": "diff --git a/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java b/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\nindex bc7077607f7..6a0bcbf3a6c 100644\n--- a/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\n+++ b/stdlib/filepath/src/test/java/org/ballerinalang/stdlib/filepath/nativeimpl/PathTest.java\n\n@@ -399,8 +398,7 @@ public class PathTest {\n         assertEquals(returns.length, 1);\n         assertTrue(returns[0] instanceof BError);\n         BError resolveError = (BError) returns[0];\n-        assertEquals(resolveError.getMessage(),\n-                     \"File does not exist at src/test/resources/data-files/test_nonexist.txt\");\n+        assertTrue(resolveError.getMessage().contains(\"File does not exist at\"));\n         log.info(\"Ballerina error: \" + resolveError.getMessage());\n     }\n \n"}}, {"oid": "6f0cd9f3156126d3a221e576cc91061d5656b530", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6f0cd9f3156126d3a221e576cc91061d5656b530", "message": "Add changes from code review", "committedDate": "2020-06-05T14:41:58Z", "type": "commit"}, {"oid": "22483090b76482944de04af140dab0a12c547427", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22483090b76482944de04af140dab0a12c547427", "message": "Merge branch '23283-add-distinct-type' of https://github.com/ballerina-platform/ballerina-lang into filepath-errors", "committedDate": "2020-06-05T14:42:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0OTQyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23729#discussion_r436249422", "bodyText": "Shall we rename this reason as well? and the docs\nWe can user errorType", "author": "chamil321", "createdAt": "2020-06-06T08:07:06Z", "path": "stdlib/filepath/src/main/java/org/ballerinalang/stdlib/filepath/Utils.java", "diffHunk": "@@ -49,7 +49,7 @@ public static ErrorValue getPathError(String reason, String details) {\n         if (details == null) {\n             details = UNKNOWN_MESSAGE;\n         }\n-        return BallerinaErrors.createError(reason, details);\n+        return BallerinaErrors.createDistinctError(reason, Constants.PACKAGE_ID, details);", "originalCommit": "22483090b76482944de04af140dab0a12c547427", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}