{"pr_number": 25214, "pr_title": "Add auto completion fixes", "pr_createdAt": "2020-08-11T16:50:05Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214", "timeline": [{"oid": "993f09de0cac950bcf19a2087ee7927ff37a846f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/993f09de0cac950bcf19a2087ee7927ff37a846f", "message": "fix failing test cases and filter public langlib entries", "committedDate": "2020-08-11T16:42:46Z", "type": "commit"}, {"oid": "c5484042051875542992ec1c561dc1cd734f6174", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5484042051875542992ec1c561dc1cd734f6174", "message": "revamp assignment context completions", "committedDate": "2020-08-11T16:42:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzNDIxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214#discussion_r469034212", "bodyText": "this local variable seems to be redundant. can we add merge  ifPresent logic in https://github.com/ballerina-platform/ballerina-lang/pull/25214/files#diff-3fef1a396b3d9462c79c38bf09b51ca3R108 into https://github.com/ballerina-platform/ballerina-lang/pull/25214/files#diff-3fef1a396b3d9462c79c38bf09b51ca3R103. And else block can be safely removed. WDYT?", "author": "rasika", "createdAt": "2020-08-12T06:32:54Z", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/AssignmentStatementNodeContext.java", "diffHunk": "@@ -41,13 +57,57 @@ public AssignmentStatementNodeContext() {\n     public List<LSCompletionItem> getCompletions(LSContext context, AssignmentStatementNode node)\n             throws LSCompletionException {\n         List<LSCompletionItem> completionItems = new ArrayList<>();\n-        completionItems.addAll(this.actionKWCompletions(context));\n-        completionItems.addAll(this.expressionCompletions(context));\n+        if (this.onQualifiedNameIdentifier(context, node.expression())) {\n+            /*\n+            Captures the following cases\n+            (1) [module:]TypeName c = module:<cursor>\n+            (2) [module:]TypeName c = module:a<cursor>\n+             */\n+            QualifiedNameReferenceNode qNameRef = (QualifiedNameReferenceNode) node.expression();\n+            Predicate<Scope.ScopeEntry> filter = scopeEntry -> {\n+                BSymbol symbol = scopeEntry.symbol;\n+                return symbol instanceof BVarSymbol && (symbol.flags & Flags.PUBLIC) == Flags.PUBLIC;\n+            };\n+            List<Scope.ScopeEntry> moduleContent = QNameReferenceUtil.getModuleContent(context, qNameRef, filter);\n+            completionItems.addAll(this.getCompletionItemList(moduleContent, context));\n+        } else {\n+            /*\n+            Captures the following cases\n+            (1) [module:]TypeName c = <cursor>\n+            (2) [module:]TypeName c = a<cursor>\n+             */\n+            completionItems.addAll(this.actionKWCompletions(context));\n+            completionItems.addAll(this.expressionCompletions(context));\n+            completionItems.addAll(this.getNewExprCompletionItems(context, node));\n+            completionItems.add(new SnippetCompletionItem(context, Snippet.KW_IS.get()));\n+        }\n         return completionItems;\n     }\n \n     @Override\n     public boolean onPreValidation(AssignmentStatementNode node) {\n         return !node.equalsToken().isMissing();\n     }\n+\n+    private List<LSCompletionItem> getNewExprCompletionItems(LSContext context, AssignmentStatementNode node) {\n+        List<LSCompletionItem> completionItems = new ArrayList<>();\n+        ArrayList<Scope.ScopeEntry> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n+        Optional<BObjectTypeSymbol> objectType;", "originalCommit": "c5484042051875542992ec1c561dc1cd734f6174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzNjQwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214#discussion_r469036406", "bodyText": "+1\nSending this in next commit.", "author": "nadeeshaan", "createdAt": "2020-08-12T06:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzNDIxMg=="}], "type": "inlineReview", "revised_code": null}]}