{"pr_number": 21520, "pr_title": "Add func pointer as defaultable param", "pr_createdAt": "2020-03-07T03:57:28Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520", "timeline": [{"oid": "c7b5c59f9d46b0fe0c3538f9cf3372641f2ed95b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7b5c59f9d46b0fe0c3538f9cf3372641f2ed95b", "message": "Add cachedEnv to lambda function", "committedDate": "2020-03-07T03:21:07Z", "type": "commit"}, {"oid": "f7d7c94628b70bdc9dc1b3b3b73b39cbb5b451ca", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f7d7c94628b70bdc9dc1b3b3b73b39cbb5b451ca", "message": "Add function pointer test", "committedDate": "2020-03-07T03:21:07Z", "type": "commit"}, {"oid": "cfc54734ecc2e7b69b428668d443728b9bd54d6c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cfc54734ecc2e7b69b428668d443728b9bd54d6c", "message": "Add object init tests", "committedDate": "2020-03-07T03:21:07Z", "type": "commit"}, {"oid": "76d1105cd068dc326b2a3446c4901536534ba197", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76d1105cd068dc326b2a3446c4901536534ba197", "message": "Handle object init", "committedDate": "2020-03-07T03:21:07Z", "type": "commit"}, {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f87f1d864823139afcfb04cd949412a5a3e12e59", "message": "Refactor the closure env name", "committedDate": "2020-03-07T03:49:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0MjgzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r389342834", "bodyText": "what about Lambda functions. ?", "author": "hasithaa", "createdAt": "2020-03-08T07:22:59Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -440,6 +438,21 @@ private void addRequiredParamsToGeneratedInitFunction(BLangFunction initFunction\n         }\n     }\n \n+    private BLangExpression createRequiredParamExpr(BLangExpression expr) {\n+        if (expr == null) {\n+            return null;\n+        }\n+        // Since the expression of the requiredParam of both init functions refer to same object,\n+        // expression should be cloned.\n+        BLangExpression expression = this.nodeCloner.clone(expr);\n+        if (expression.getKind() == NodeKind.ARROW_EXPR) {", "originalCommit": "f87f1d864823139afcfb04cd949412a5a3e12e59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMjg2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390102864", "bodyText": "Checked it locally, this fix is not working for lambda functions.", "author": "pubudu91", "createdAt": "2020-03-10T05:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0MjgzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MDM4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390780385", "bodyText": "Fixed with commit 30718c3", "author": "KavinduZoysa", "createdAt": "2020-03-11T07:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0MjgzNA=="}], "type": "inlineReview", "revised_code": {"commit": "30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\nindex 1c6c85ba144..2dac46a388d 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n\n@@ -442,6 +442,10 @@ public class Desugar extends BLangNodeVisitor {\n         if (expr == null) {\n             return null;\n         }\n+        if (expr.getKind() == NodeKind.LAMBDA) {\n+            BLangFunction func = ((BLangLambdaFunction) expr).function;\n+            return createLambdaFunction(func.pos, func.name.value, func.requiredParams, func.returnTypeNode, func.body);\n+        }\n         // Since the expression of the requiredParam of both init functions refer to same object,\n         // expression should be cloned.\n         BLangExpression expression = this.nodeCloner.clone(expr);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5ODIxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390098218", "bodyText": "Shall we add a comment here explaining why we're simply assigning env instead of a clone?", "author": "pubudu91", "createdAt": "2020-03-10T05:11:42Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -4134,6 +4147,7 @@ public void visit(BLangArrowFunction bLangArrowFunction) {\n \n         lambdaFunction.function.pos = bLangArrowFunction.pos;\n         lambdaFunction.function.body.pos = bLangArrowFunction.pos;\n+        lambdaFunction.capturedClosureEnv = env;", "originalCommit": "f87f1d864823139afcfb04cd949412a5a3e12e59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5ODYzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390098631", "bodyText": "The reasoning is by the time desugar phase runs, the program is guaranteed to be semantically correct. Which means in the lambda function, there are no references to out of scope symbols. Therefore, we can simply consider the enclosing env as the captured closure env as well.", "author": "pubudu91", "createdAt": "2020-03-10T05:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5ODIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MDE3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390780171", "bodyText": "Added a comment", "author": "KavinduZoysa", "createdAt": "2020-03-11T07:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5ODIxOA=="}], "type": "inlineReview", "revised_code": {"commit": "30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\nindex 1c6c85ba144..2dac46a388d 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n\n@@ -4147,6 +4151,7 @@ public class Desugar extends BLangNodeVisitor {\n \n         lambdaFunction.function.pos = bLangArrowFunction.pos;\n         lambdaFunction.function.body.pos = bLangArrowFunction.pos;\n+        // At this phase lambda function is semantically correct. Therefore simply env can be assigned.\n         lambdaFunction.capturedClosureEnv = env;\n         rewrite(lambdaFunction.function, env);\n         env.enclPkg.addFunction(lambdaFunction.function);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMDg1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390100855", "bodyText": "I think we don't need to clone the env here as well. But let's verify that later. Created #21547 to track this.", "author": "pubudu91", "createdAt": "2020-03-10T05:23:10Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -1043,9 +1056,9 @@ private BLangFunction desugarParticipantFunction(BLangFunction funcNode,\n         BLangLambdaFunction trxMainFunc\n                 = createLambdaFunction(funcNode.pos, \"$anonTrxParticipantFunc$\", Collections.emptyList(),\n                                        trxReturnNode, trxMainBody);\n-        trxMainWrapperFunc.cachedEnv = trxMainFunc.function.clonedEnv;\n-        commitFunc.cachedEnv = env.createClone();\n-        abortFunc.cachedEnv = env.createClone();\n+        trxMainWrapperFunc.capturedClosureEnv = trxMainFunc.function.clonedEnv;\n+        commitFunc.capturedClosureEnv = env.createClone();\n+        abortFunc.capturedClosureEnv = env.createClone();", "originalCommit": "f87f1d864823139afcfb04cd949412a5a3e12e59", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "message": "Support for lambda functions", "committedDate": "2020-03-11T07:13:42Z", "type": "commit"}]}