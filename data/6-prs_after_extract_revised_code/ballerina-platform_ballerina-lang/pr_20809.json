{"pr_number": 20809, "pr_title": "Create single global lock, program wide, for the phase one of lock stabilisation.", "pr_createdAt": "2020-01-31T06:04:31Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809", "timeline": [{"oid": "cde74c9407bf1ef44cb5285612e60f37f84baa89", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cde74c9407bf1ef44cb5285612e60f37f84baa89", "message": "Single global lock as the phase 1 for locks stabilization.", "committedDate": "2020-01-31T08:28:36Z", "type": "forcePushed"}, {"oid": "8bca537d65d4f62ca612f84179d63eb9cb1c95d4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8bca537d65d4f62ca612f84179d63eb9cb1c95d4", "message": "Introduce lock manager to query locks", "committedDate": "2020-02-06T11:29:54Z", "type": "forcePushed"}, {"oid": "d4edc1521d24191d8e1c5224673dd933040113e5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d4edc1521d24191d8e1c5224673dd933040113e5", "message": "Introduce lock manager to query locks", "committedDate": "2020-02-06T11:43:03Z", "type": "forcePushed"}, {"oid": "6a7086c6687040ec891c55546ed88331a06a6cd1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a7086c6687040ec891c55546ed88331a06a6cd1", "message": "Introduce lock manager to query locks", "committedDate": "2020-02-06T12:38:39Z", "type": "forcePushed"}, {"oid": "f6d37a8d05a1b585c645883f99e2c1992cb4ca12", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f6d37a8d05a1b585c645883f99e2c1992cb4ca12", "message": "Fix issue in method definition in jvm-old backend", "committedDate": "2020-02-10T08:58:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjAxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379942019", "bodyText": "I think we can use a concurrent hashmap here, and get rid of manual synchronization.\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html", "author": "rdhananjaya", "createdAt": "2020-02-16T23:10:55Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private static Map<String, BLock> globalLockMap;\n+\n+    static {\n+        globalLockMap = new HashMap<>();", "originalCommit": "cadb789f9c0e9796ee673f4f76a61464e47d3384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4Mzg0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r380183845", "bodyText": "+1", "author": "dulvinw", "createdAt": "2020-02-17T13:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjAxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4344c2bf7e964b80e6ab6068d513a708bdb91dfc", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java\ndeleted file mode 100644\nindex 20447333259..00000000000\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- *\n- *   WSO2 Inc. licenses this file to you under the Apache License,\n- *   Version 2.0 (the \"License\"); you may not use this file except\n- *   in compliance with the License.\n- *   You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *   Unless required by applicable law or agreed to in writing,\n- *   software distributed under the License is distributed on an\n- *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *   KIND, either express or implied.  See the License for the\n- *   specific language governing permissions and limitations\n- *   under the License.\n- */\n-\n-package org.ballerinalang.jvm;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- *\n- * @since 1.2.0\n- */\n-public class BLockManager {\n-\n-    /**\n-     * The map of locks inferred.\n-     */\n-    private static Map<String, BLock> globalLockMap;\n-\n-    static {\n-        globalLockMap = new HashMap<>();\n-    }\n-\n-    public static void addLockToMap(String lockName) {\n-        globalLockMap.put(lockName, new BLock());\n-    }\n-\n-    public static synchronized BLock getLockFromMap(String lockName) {\n-        BLock lock = globalLockMap.get(lockName);\n-\n-        if (lock == null) {\n-            lock = new BLock();\n-            globalLockMap.put(lockName, lock);\n-        }\n-\n-        return lock;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379942118", "bodyText": "This looks more like a lock store/registry, shall we add a proper name reflecting the expected behavior.", "author": "rdhananjaya", "createdAt": "2020-02-16T23:12:32Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {", "originalCommit": "cadb789f9c0e9796ee673f4f76a61464e47d3384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5Mzk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379993951", "bodyText": "Sure. Is BLockStore a better name?", "author": "dulvinw", "createdAt": "2020-02-17T05:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5NTIwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379995204", "bodyText": "+1", "author": "rdhananjaya", "createdAt": "2020-02-17T05:50:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA=="}], "type": "inlineReview", "revised_code": {"commit": "4344c2bf7e964b80e6ab6068d513a708bdb91dfc", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java\ndeleted file mode 100644\nindex 20447333259..00000000000\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- *\n- *   WSO2 Inc. licenses this file to you under the Apache License,\n- *   Version 2.0 (the \"License\"); you may not use this file except\n- *   in compliance with the License.\n- *   You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *   Unless required by applicable law or agreed to in writing,\n- *   software distributed under the License is distributed on an\n- *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *   KIND, either express or implied.  See the License for the\n- *   specific language governing permissions and limitations\n- *   under the License.\n- */\n-\n-package org.ballerinalang.jvm;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- *\n- * @since 1.2.0\n- */\n-public class BLockManager {\n-\n-    /**\n-     * The map of locks inferred.\n-     */\n-    private static Map<String, BLock> globalLockMap;\n-\n-    static {\n-        globalLockMap = new HashMap<>();\n-    }\n-\n-    public static void addLockToMap(String lockName) {\n-        globalLockMap.put(lockName, new BLock());\n-    }\n-\n-    public static synchronized BLock getLockFromMap(String lockName) {\n-        BLock lock = globalLockMap.get(lockName);\n-\n-        if (lock == null) {\n-            lock = new BLock();\n-            globalLockMap.put(lockName, lock);\n-        }\n-\n-        return lock;\n-    }\n-}\n"}}, {"oid": "4344c2bf7e964b80e6ab6068d513a708bdb91dfc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4344c2bf7e964b80e6ab6068d513a708bdb91dfc", "message": "Single global lock as the phase 1 for locks stabilization.", "committedDate": "2020-02-18T10:10:37Z", "type": "commit"}, {"oid": "3d002b4d4dd2c547d49d98859c1d38b21e758ff8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d002b4d4dd2c547d49d98859c1d38b21e758ff8", "message": "Introduce lock manager to query locks", "committedDate": "2020-02-18T10:10:38Z", "type": "commit"}, {"oid": "ecf1d756e6679bb8ae79481487558b1b7f99e899", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ecf1d756e6679bb8ae79481487558b1b7f99e899", "message": "Fix issue in method definition in jvm-old backend", "committedDate": "2020-02-18T10:10:38Z", "type": "commit"}, {"oid": "d76fad4dc10ed3dd12b91cfb7fb3084ca17dbdc7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d76fad4dc10ed3dd12b91cfb7fb3084ca17dbdc7", "message": "Fix issue where unlocks are not generated with continue and break inside\na lock.", "committedDate": "2020-02-18T10:10:38Z", "type": "commit"}, {"oid": "c110871e7907af01190cc744ce87d4072f120e1c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c110871e7907af01190cc744ce87d4072f120e1c", "message": "Synchronize lock manager", "committedDate": "2020-02-18T10:10:38Z", "type": "commit"}, {"oid": "75edf16fa64d1d088c89b646ab9627ab20e2b6e8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/75edf16fa64d1d088c89b646ab9627ab20e2b6e8", "message": "Desugar comment", "committedDate": "2020-02-18T10:10:38Z", "type": "commit"}, {"oid": "75edf16fa64d1d088c89b646ab9627ab20e2b6e8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/75edf16fa64d1d088c89b646ab9627ab20e2b6e8", "message": "Desugar comment", "committedDate": "2020-02-18T10:10:38Z", "type": "forcePushed"}, {"oid": "140f8c689366890f0ff915caf368d7e10a34ff62", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/140f8c689366890f0ff915caf368d7e10a34ff62", "message": "Change hhtpCoockieStore", "committedDate": "2020-02-19T03:47:56Z", "type": "commit"}, {"oid": "5ba1ad00442bad470d4f794025e7a7f92ba5d614", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ba1ad00442bad470d4f794025e7a7f92ba5d614", "message": "Revert \"Change hhtpCoockieStore\"\n\nThis reverts commit 140f8c68", "committedDate": "2020-02-19T03:54:10Z", "type": "commit"}, {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10af188b245d8faa97a82137be618ae2f2cb109a", "message": "Fix review suggestions", "committedDate": "2020-02-20T18:32:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r382880908", "bodyText": "I think synchronized does not support your intention here. computeIfAbsent is atomic according to docs.\nIf the only getter we have is creating a lock too maybe we can remove addLockToMap function", "author": "KRVPerera", "createdAt": "2020-02-22T03:09:29Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();\n+    }\n+\n+    public void addLockToMap(String lockName) {\n+        globalLockMap.put(lockName, new BLock());\n+    }\n+\n+    public synchronized BLock getLockFromMap(String lockName) {", "originalCommit": "10af188b245d8faa97a82137be618ae2f2cb109a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4NDY1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383084651", "bodyText": "Yes, should remove this.", "author": "dulvinw", "createdAt": "2020-02-24T04:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkwOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r382880930", "bodyText": "Shouldn't this be a thread sage singleton", "author": "KRVPerera", "createdAt": "2020-02-22T03:09:50Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();", "originalCommit": "10af188b245d8faa97a82137be618ae2f2cb109a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4NDYxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383084611", "bodyText": "This class is accessed only once per program, using the init class in jbal", "author": "dulvinw", "createdAt": "2020-02-24T04:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwMzUzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383103538", "bodyText": "this is an unused variable.", "author": "hasithaa", "createdAt": "2020-02-24T06:46:57Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangLock.java", "diffHunk": "@@ -43,10 +32,6 @@\n \n     public BLangBlockStmt body;\n \n-    public Set<BVarSymbol> lockVariables = new HashSet<>();\n-\n-    public Map<BVarSymbol, Set<BLangStructFieldAccessExpr>> fieldVariables = new HashMap<>();\n-\n     public String uuid;", "originalCommit": "10af188b245d8faa97a82137be618ae2f2cb109a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}