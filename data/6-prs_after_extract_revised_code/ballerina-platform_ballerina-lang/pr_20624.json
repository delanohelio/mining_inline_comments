{"pr_number": 20624, "pr_title": "Fix intermittent WebSocketMetricsTestCase failure", "pr_createdAt": "2020-01-16T06:30:07Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4ODU3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367288579", "bodyText": "Please add a new line at the end of the file", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-01-16T08:35:26Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -171,4 +179,4 @@ private String generateNewKey(String metric, String[] tags) {\n         key = key + \"}\";\n         return key;\n     }\n-}\n+}", "originalCommit": "c4284a59030c2bbc804391c0b11c26ba0bdae0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3be2e74bdb95c350404af171543fc4e780315054", "chunk": "diff --git a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\nindex 1f6c7ef7967..ee3bf027cef 100644\n--- a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n+++ b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n\n@@ -173,10 +171,10 @@ public class WebSocketMetricsTestCase extends BaseTest {\n \n     private String generateNewKey(String metric, String[] tags) {\n         String key = metric + \"{\";\n-        for (String tag: tags) {\n+        for (String tag : tags) {\n             key = key + tag;\n         }\n         key = key + \"}\";\n         return key;\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI5ODI1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367298256", "bodyText": "Why we can't use setCountDownLatch()  instead of this?", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-01-16T08:58:22Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -82,24 +84,30 @@ private void setup() throws Exception {\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        WebSocketTestClient client = new WebSocketTestClient(\"ws://localhost:9090/basic/ws\");\n-        client.handshake();\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendPing(SENDING_BYTE_BUFFER);\n-        client.sendPong(SENDING_BYTE_BUFFER);\n-        client.sendBinary(SENDING_BYTE_BUFFER);\n-        client.sendText(CLOSE_MESSAGE);\n+        // Test Service\n+        final WebSocketTestClient[] client = new WebSocketTestClient[1];\n+        await().atMost(20, TimeUnit.SECONDS)", "originalCommit": "c4284a59030c2bbc804391c0b11c26ba0bdae0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3be2e74bdb95c350404af171543fc4e780315054", "chunk": "diff --git a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\nindex 1f6c7ef7967..ee3bf027cef 100644\n--- a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n+++ b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n\n@@ -71,41 +72,38 @@ public class WebSocketMetricsTestCase extends BaseTest {\n         List<String> args = new ArrayList<>();\n         args.add(\"--\" + ObservabilityConstants.CONFIG_METRICS_ENABLED + \"=true\");\n         args.add(\"--b7a.log.console.loglevel=INFO\");\n-        serverInstance.startServer(balFile, null, args.toArray(new String[args.size()]), new int[] { 9090 });\n+        serverInstance.startServer(balFile, null, args.toArray(new String[args.size()]), new int[]{ PORT });\n         addMetrics();\n     }\n+\n     /**\n      * Creates a new WebSocket client and connects to the server. Sends 5 text messages, 1 ping, 1 ping, 1 binary, 1\n      * close message and then closes the connection.\n-     *\n+     * <p>\n      * Checks whether the published metrics are the same as the expected metrics.\n      *\n      * @throws Exception Error when executing the commands.\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        // Test Service\n-        final WebSocketTestClient[] client = new WebSocketTestClient[1];\n-        await().atMost(20, TimeUnit.SECONDS)\n-                .ignoreExceptions().until(() -> {\n-            client[0] = new WebSocketTestClient(\"ws://localhost:9090/basic/ws\");\n-            client[0].handshake();\n-            return client[0].isOpen();\n-        });\n-        client[0].sendText(MESSAGE);\n-        client[0].sendText(MESSAGE);\n-        client[0].sendText(MESSAGE);\n-        client[0].sendText(MESSAGE);\n-        client[0].sendText(MESSAGE);\n-        client[0].sendPing(SENDING_BYTE_BUFFER);\n-        client[0].sendPong(SENDING_BYTE_BUFFER);\n-        client[0].sendBinary(SENDING_BYTE_BUFFER);\n-        client[0].sendText(CLOSE_MESSAGE);\n+        WebSocketTestClient client = new WebSocketTestClient(SERVER_URL);\n         CountDownLatch countDownLatch = new CountDownLatch(1);\n         countDownLatch.await(10, TimeUnit.SECONDS);\n-        client[0].shutDown();\n+        client.handshake();\n+        client.sendText(MESSAGE);\n+        client.sendText(MESSAGE);\n+        client.sendText(MESSAGE);\n+        client.sendText(MESSAGE);\n+        client.sendText(MESSAGE);\n+        client.sendPing(SENDING_BYTE_BUFFER);\n+        client.sendPong(SENDING_BYTE_BUFFER);\n+        client.sendBinary(SENDING_BYTE_BUFFER);\n+        client.sendText(CLOSE_MESSAGE);\n+        client.shutDown();\n+        countDownLatch = new CountDownLatch(1);\n+        countDownLatch.await(10, TimeUnit.SECONDS);\n \n-        URL metricsEndPoint = new URL(\"http://localhost:9797/metrics\");\n+        URL metricsEndPoint = new URL(METRICS_URL);\n         BufferedReader reader = new BufferedReader(new InputStreamReader(metricsEndPoint.openConnection()\n                                                                                  .getInputStream()));\n         List<String> metricsList = reader.lines().filter(s -> !s.startsWith(\"#\")).collect(Collectors.toList());\n"}}, {"oid": "3be2e74bdb95c350404af171543fc4e780315054", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3be2e74bdb95c350404af171543fc4e780315054", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-16T13:29:17Z", "type": "forcePushed"}, {"oid": "2bb3f3efa07509435c7e81926fe46effd752fd6b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2bb3f3efa07509435c7e81926fe46effd752fd6b", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-17T04:27:00Z", "type": "forcePushed"}, {"oid": "97da8af470cd7483c222c25498602076c745909f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97da8af470cd7483c222c25498602076c745909f", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-17T04:27:48Z", "type": "forcePushed"}, {"oid": "a422f9fc9852361e7373ec38abb3aa093cfa8100", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a422f9fc9852361e7373ec38abb3aa093cfa8100", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-17T04:50:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MTI4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367771280", "bodyText": "No need to create the countDownLatch to handshake because we already set it in the implementation. Please refer the test.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-01-17T05:08:25Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -82,7 +86,9 @@ private void setup() throws Exception {\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        WebSocketTestClient client = new WebSocketTestClient(\"ws://localhost:9090/basic/ws\");\n+        WebSocketTestClient client = new WebSocketTestClient(SERVER_URL);\n+        CountDownLatch countDownLatch = new CountDownLatch(1);\n+        countDownLatch.await(10, TimeUnit.SECONDS);", "originalCommit": "a422f9fc9852361e7373ec38abb3aa093cfa8100", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7024a2e0b11047d8e7a3e11c5efa32f51a21da2c", "chunk": "diff --git a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\nindex af587a83919..08ace6f8b97 100644\n--- a/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n+++ b/tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java\n\n@@ -72,36 +74,40 @@ public class WebSocketMetricsTestCase extends BaseTest {\n         List<String> args = new ArrayList<>();\n         args.add(\"--\" + ObservabilityConstants.CONFIG_METRICS_ENABLED + \"=true\");\n         args.add(\"--b7a.log.console.loglevel=INFO\");\n-        serverInstance.startServer(balFile, null, args.toArray(new String[args.size()]), new int[]{ PORT });\n+        serverInstance.startServer(balFile, null, args.toArray(new String[args.size()]), new int[]{PORT});\n         addMetrics();\n     }\n \n     /**\n      * Creates a new WebSocket client and connects to the server. Sends 5 text messages, 1 ping, 1 ping, 1 binary, 1\n      * close message and then closes the connection.\n-     *\n+     * <p>\n      * Checks whether the published metrics are the same as the expected metrics.\n      *\n      * @throws Exception Error when executing the commands.\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        WebSocketTestClient client = new WebSocketTestClient(SERVER_URL);\n+        final WebSocketTestClient[] client = new WebSocketTestClient[1];\n+        await().atMost(200, TimeUnit.SECONDS)\n+                .ignoreExceptions().until(() -> {\n+            client[0] = new WebSocketTestClient(SERVER_URL);\n+            client[0].handshake();\n+            return client[0].isOpen();\n+        });\n+        client[0].sendText(MESSAGE);\n+        client[0].sendText(MESSAGE);\n+        client[0].sendText(MESSAGE);\n+        client[0].sendText(MESSAGE);\n+        client[0].sendText(MESSAGE);\n+        client[0].sendPing(SENDING_BYTE_BUFFER);\n+        client[0].sendPong(SENDING_BYTE_BUFFER);\n+        client[0].sendBinary(SENDING_BYTE_BUFFER);\n         CountDownLatch countDownLatch = new CountDownLatch(1);\n-        countDownLatch.await(10, TimeUnit.SECONDS);\n-        client.handshake();\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendPing(SENDING_BYTE_BUFFER);\n-        client.sendPong(SENDING_BYTE_BUFFER);\n-        client.sendBinary(SENDING_BYTE_BUFFER);\n-        client.sendText(CLOSE_MESSAGE);\n-        client.shutDown();\n-        countDownLatch = new CountDownLatch(1);\n-        countDownLatch.await(10, TimeUnit.SECONDS);\n+        client[0].setCountDownLatch(countDownLatch);\n+        client[0].sendText(CLOSE_MESSAGE);\n+        client[0].shutDown();\n+        countDownLatch.await(200, TimeUnit.SECONDS);\n \n         URL metricsEndPoint = new URL(METRICS_URL);\n         BufferedReader reader = new BufferedReader(new InputStreamReader(metricsEndPoint.openConnection()\n"}}, {"oid": "7024a2e0b11047d8e7a3e11c5efa32f51a21da2c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7024a2e0b11047d8e7a3e11c5efa32f51a21da2c", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-20T07:44:48Z", "type": "commit"}, {"oid": "7024a2e0b11047d8e7a3e11c5efa32f51a21da2c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7024a2e0b11047d8e7a3e11c5efa32f51a21da2c", "message": "Fix intermittent WebSocketMetricsTestCase failure", "committedDate": "2020-01-20T07:44:48Z", "type": "forcePushed"}]}