{"pr_number": 22511, "pr_title": "Fix direct return of byte binary operation in a lambda", "pr_createdAt": "2020-04-08T06:42:16Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511", "timeline": [{"oid": "7631c8ead4ae0d81adce9ae6f22c34235950a2e5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7631c8ead4ae0d81adce9ae6f22c34235950a2e5", "message": "Use expected type of binary expr in byte convertion", "committedDate": "2020-04-08T06:38:42Z", "type": "commit"}, {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/521ce0acae6cca0eb2e1dbf79b3f0baa84788078", "message": "Add unit tests to cover #22168", "committedDate": "2020-04-08T06:39:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405334107", "bodyText": "With new lang tests we've tried writing the tests in Ballerina itself as much as possible.\nFor example https://github.com/ballerina-platform/ballerina-lang/blob/master/tests/jballerina-unit-test/src/test/resources/test-src/expressions/listconstructor/list_constructor_infer_type.bal#L55\nWe can rewrite these tests similarly right?", "author": "MaryamZi", "createdAt": "2020-04-08T08:05:35Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "originalCommit": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMjUyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405402527", "bodyText": "looks like you have to repeat the assertEquality method for each new test bal file?", "author": "Kishanthan", "createdAt": "2020-04-08T09:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMzY1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405403651", "bodyText": "And yes, we can write that in the new style. The thing is all the other methods are written in the old way. May be we have to add a new bal test file with these new tests.", "author": "Kishanthan", "createdAt": "2020-04-08T09:56:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwNTA0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405405041", "bodyText": "For the time-being yes, the assertEquality function has to be repeated in each test file. But once the compiler test suite is done we can directly switch to calling a similar (most-likely the same) function in that particular module.", "author": "MaryamZi", "createdAt": "2020-04-08T09:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxMTEyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405411123", "bodyText": "Yeah, there is some inconsistency when adding tests to an existing file. But even then, IMO it's kinda OK given that we usually add new tests at the end?\nI'm OK with either approach.", "author": "MaryamZi", "createdAt": "2020-04-08T10:08:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNTU1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405415550", "bodyText": "Updated the tests :)", "author": "Kishanthan", "createdAt": "2020-04-08T10:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxODc4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405418781", "bodyText": "Great, thanks!", "author": "MaryamZi", "createdAt": "2020-04-08T10:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "a2bd13eb7b6482fce12e6a5d52f1ae0a87767292", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java\nindex 43813bdaa0e..df5020436b3 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java\n\n@@ -793,33 +793,10 @@ public class BByteValueTest {\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n \n-    @Test(description = \"Test byte value return as int in lambda 1\")\n-    public void testByteReturnAsIntInLambda1() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertSame(returns[0].getClass(), BInteger.class);\n-        BInteger intValue = (BInteger) returns[0];\n-        Assert.assertEquals(intValue.intValue(), 0, \"Invalid int value returned.\");\n-    }\n-\n-    @Test(description = \"Test byte value return as int in lambda 2\")\n-    public void testByteReturnAsIntInLambda2() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda2\");\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertSame(returns[0].getClass(), BBoolean.class);\n-        BBoolean booleanVal = (BBoolean) returns[0];\n-        Assert.assertTrue(booleanVal.booleanValue());\n-    }\n-\n-    @Test(description = \"Test byte value return as int in lambda 3\")\n-    public void testByteReturnAsIntInLambda3() {\n-        long a = 233;\n-        long b = 245;\n-        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda3\", new BValue[]{new BByte(a),\n-                new BByte(b)});\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertSame(returns[0].getClass(), BInteger.class);\n-        BInteger intValue = (BInteger) returns[0];\n-        Assert.assertEquals(intValue.intValue(), (a - b), \"Invalid int value returned.\");\n+    @Test(description = \"Test byte value return as int in lambda\")\n+    public void testByteReturnAsIntInLambda() {\n+        BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");\n+        BRunUtil.invoke(result, \"testByteReturnAsIntInLambda2\");\n+        BRunUtil.invoke(result, \"testByteReturnAsIntInLambda3\");\n     }\n }\n"}}, {"oid": "a2bd13eb7b6482fce12e6a5d52f1ae0a87767292", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a2bd13eb7b6482fce12e6a5d52f1ae0a87767292", "message": "Assert test results in Ballerina itself", "committedDate": "2020-04-08T10:15:24Z", "type": "commit"}]}