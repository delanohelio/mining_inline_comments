{"pr_number": 26976, "pr_title": "Implement find all references API ", "pr_createdAt": "2020-11-17T09:29:15Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976", "timeline": [{"oid": "342a47a2f33aeb7f5c15fe4e172f69135d5a5f9e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/342a47a2f33aeb7f5c15fe4e172f69135d5a5f9e", "message": "Make project root path system-independent", "committedDate": "2020-11-17T14:18:03Z", "type": "forcePushed"}, {"oid": "65dbad7389cacf594955971bbd02e2b9b2857655", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65dbad7389cacf594955971bbd02e2b9b2857655", "message": "Make project root path system-independent", "committedDate": "2020-11-17T15:04:27Z", "type": "forcePushed"}, {"oid": "8acd13358cf2566f6915db57b9edc272a82a81c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8acd13358cf2566f6915db57b9edc272a82a81c5", "message": "Make project root path system-independent", "committedDate": "2020-11-17T18:22:45Z", "type": "forcePushed"}, {"oid": "ed48b8497468f7b8280396f45555374d935091b5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed48b8497468f7b8280396f45555374d935091b5", "message": "Make project root path system-independent", "committedDate": "2020-11-17T18:49:22Z", "type": "forcePushed"}, {"oid": "23ae2c18c3b45b1f6f5c76528d0f5e50a970211e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23ae2c18c3b45b1f6f5c76528d0f5e50a970211e", "message": "Make project root path system-independent", "committedDate": "2020-11-17T19:41:38Z", "type": "forcePushed"}, {"oid": "6df933a636ff707ffb6195d6331964f4bc04e150", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6df933a636ff707ffb6195d6331964f4bc04e150", "message": "Use a different module for module prefix test", "committedDate": "2020-11-18T05:28:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc3NDM2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r525774362", "bodyText": "shall we rename the API to references ?", "author": "nadeeshaan", "createdAt": "2020-11-18T04:12:46Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java", "diffHunk": "@@ -58,6 +59,16 @@\n      */\n     List<Symbol> moduleLevelSymbols();\n \n+    /**\n+     * If there's an identifier associated with a symbol at the specified cursor position, finds all the references of\n+     * the specified symbol within the relevant scope.\n+     *\n+     * @param fileName name of the file in which to look up the specified position\n+     * @param position a cursor position in the source\n+     * @return A {@link List} of line ranges of all the references\n+     */\n+    List<Location> allReferences(String fileName, LinePosition position);", "originalCommit": "23ae2c18c3b45b1f6f5c76528d0f5e50a970211e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "089cbfe097f2b6c634be23a0627e650227db01ef", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\nindex 9326f4f7f3d..a09007b8c6f 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n\n@@ -67,7 +67,7 @@ public interface SemanticModel {\n      * @param position a cursor position in the source\n      * @return A {@link List} of line ranges of all the references\n      */\n-    List<Location> allReferences(String fileName, LinePosition position);\n+    List<Location> references(String fileName, LinePosition position);\n \n     /**\n      * Retrieves the type of the expression in the specified text range. If it's not a valid expression, returns an\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NTA0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r526685043", "bodyText": "Use of references across the modules is a common case. Have we thought of how user would query such references across modules? How one could query a single symbol across multiple semantic models of the modules. Is it possible to allow query references() through a Symbol as input?", "author": "rasika", "createdAt": "2020-11-19T08:44:58Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -149,6 +151,25 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n         return compiledSymbols;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<Location> references(String fileName, LinePosition position) {", "originalCommit": "87a60f97177101ae991bca821ba1bc3edf222839", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3MDg5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r526770894", "bodyText": "I think @rasika 's concern is a valid requirement. There is a catch though, which is the performance. With the symbol being an input then we query the symbol API and then again query the references API.", "author": "nadeeshaan", "createdAt": "2020-11-19T10:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NTA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxOTM4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r526819380", "bodyText": "This is what we talked about having an integration layer between the project API and the semantic API for right? Can definitely add another API which accepts a symbol as the input. In fact, I tried that approach first, and then reverted to position. From a performance POV, I don't think it'll be an issue since we don't need to query the symbol API again.", "author": "pubudu91", "createdAt": "2020-11-19T12:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NTA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ5NjEwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r528496104", "bodyText": "Since now we allow Symbol as input, i think rest of the query can be possible with the introduction of the integration layer.", "author": "rasika", "createdAt": "2020-11-23T06:49:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NTA0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c97b10ce0fc61cd12c7da686d75a00a177ac3579", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\nindex 8f0afe438a6..0e9d688f02e 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n\n@@ -151,6 +154,24 @@ public class BallerinaSemanticModel implements SemanticModel {\n         return compiledSymbols;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<Location> references(String fileName, Symbol symbol) {\n+        Location symbolLocation = symbol.location();\n+\n+        // Assumption is that the location will be null for regular type symbols\n+        if (symbolLocation == null) {\n+            return Collections.unmodifiableList(new ArrayList<>());\n+        }\n+\n+        BLangNode node = new NodeFinder().lookupEnclosingContainer(this.bLangPackage, symbolLocation.lineRange());\n+\n+        ReferenceFinder refFinder = new ReferenceFinder();\n+        return refFinder.findReferences(node, getInternalSymbol(symbol));\n+    }\n+\n     /**\n      * {@inheritDoc}\n      */\n"}}, {"oid": "089cbfe097f2b6c634be23a0627e650227db01ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/089cbfe097f2b6c634be23a0627e650227db01ef", "message": "Add new API to get the semantic model of the specified module", "committedDate": "2020-11-19T20:36:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTQzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r527391434", "bodyText": "We could use symTag to check for BPackageSymbol and BAnnotationSymbol", "author": "SupunS", "createdAt": "2020-11-20T04:32:26Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -235,7 +256,8 @@ private BLangCompilationUnit getCompilationUnit(String srcFile) {\n     }\n \n     private boolean isTypeSymbol(BSymbol symbol) {\n-        return symbol instanceof BTypeSymbol && !(symbol instanceof BPackageSymbol);\n+        return symbol instanceof BTypeSymbol && !(symbol instanceof BPackageSymbol)\n+                && !(symbol instanceof BAnnotationSymbol);", "originalCommit": "089cbfe097f2b6c634be23a0627e650227db01ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c97b10ce0fc61cd12c7da686d75a00a177ac3579", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\nindex 8f0afe438a6..0e9d688f02e 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n\n@@ -256,8 +277,16 @@ public class BallerinaSemanticModel implements SemanticModel {\n     }\n \n     private boolean isTypeSymbol(BSymbol symbol) {\n-        return symbol instanceof BTypeSymbol && !(symbol instanceof BPackageSymbol)\n-                && !(symbol instanceof BAnnotationSymbol);\n+        return symbol instanceof BTypeSymbol && !Symbols.isTagOn(symbol, PACKAGE)\n+                && !Symbols.isTagOn(symbol, ANNOTATION);\n+    }\n+\n+    private BSymbol getInternalSymbol(Symbol symbol) {\n+        if (symbol.kind() == TYPE) {\n+            return ((AbstractTypeSymbol) symbol).getBType().tsymbol;\n+        }\n+\n+        return ((BallerinaSymbol) symbol).getInternalSymbol();\n     }\n \n     private boolean withinRange(LineRange range, LineRange specifiedRange) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTk3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r527391971", "bodyText": "I feel accepting a symbol as a parameter would make more sense in-terms of the API's perspective..\nThen it reads as \"give me the references of this symbol\"", "author": "SupunS", "createdAt": "2020-11-20T04:34:51Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java", "diffHunk": "@@ -58,6 +59,16 @@\n      */\n     List<Symbol> moduleLevelSymbols();\n \n+    /**\n+     * If there's an identifier associated with a symbol at the specified cursor position, finds all the references of\n+     * the specified symbol within the relevant scope.\n+     *\n+     * @param fileName name of the file in which to look up the specified position\n+     * @param position a cursor position in the source\n+     * @return A {@link List} of line ranges of all the references\n+     */\n+    List<Location> references(String fileName, LinePosition position);", "originalCommit": "089cbfe097f2b6c634be23a0627e650227db01ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0MDQ3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r527740470", "bodyText": "Added an overloaded version of this which takes a Symbol.", "author": "pubudu91", "createdAt": "2020-11-20T14:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTk3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c97b10ce0fc61cd12c7da686d75a00a177ac3579", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\nindex a09007b8c6f..5ef492bc428 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n\n@@ -59,6 +59,15 @@ public interface SemanticModel {\n      */\n     List<Symbol> moduleLevelSymbols();\n \n+    /**\n+     * Finds all the references of the specified symbol within the relevant scope.\n+     *\n+     * @param fileName name of the file in which to look up the specified position\n+     * @param symbol   a {@link Symbol} insance\n+     * @return A {@link List} of line ranges of all the references\n+     */\n+    List<Location> references(String fileName, Symbol symbol);\n+\n     /**\n      * If there's an identifier associated with a symbol at the specified cursor position, finds all the references of\n      * the specified symbol within the relevant scope.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MjY2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r527392668", "bodyText": "unused method?", "author": "SupunS", "createdAt": "2020-11-20T04:37:32Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaSymbol.java", "diffHunk": "@@ -108,6 +110,10 @@ public boolean isLangLib() {\n         return isLangLib;\n     }\n \n+    public BSymbol getInternalSymbol() {", "originalCommit": "089cbfe097f2b6c634be23a0627e650227db01ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0MDcxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r527740716", "bodyText": "In use, after the addition of the above mentioned API.", "author": "pubudu91", "createdAt": "2020-11-20T14:47:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MjY2OA=="}], "type": "inlineReview", "revised_code": {"commit": "c97b10ce0fc61cd12c7da686d75a00a177ac3579", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaSymbol.java\nindex 5dd034d85ea..05d9dac4b16 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaSymbol.java\n\n@@ -101,15 +101,6 @@ public class BallerinaSymbol implements Symbol {\n         return this.position;\n     }\n \n-    /**\n-     * Whether the symbol is a langlib symbol.\n-     *\n-     * @return {@link Boolean} whether langlib or not\n-     */\n-    public boolean isLangLib() {\n-        return isLangLib;\n-    }\n-\n     public BSymbol getInternalSymbol() {\n         return this.internalSymbol;\n     }\n"}}, {"oid": "c97b10ce0fc61cd12c7da686d75a00a177ac3579", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c97b10ce0fc61cd12c7da686d75a00a177ac3579", "message": "Run the same test suite for the references() API which takes a symbol", "committedDate": "2020-11-20T14:43:12Z", "type": "forcePushed"}, {"oid": "653f898c0be348e9b4d5c0c9f0bd31c1fbba5165", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/653f898c0be348e9b4d5c0c9f0bd31c1fbba5165", "message": "Run the same test suite for the references() API which takes a symbol", "committedDate": "2020-11-20T15:48:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3Mzg5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r528473899", "bodyText": "Do we need the file name here?", "author": "SupunS", "createdAt": "2020-11-23T05:07:10Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java", "diffHunk": "@@ -58,6 +59,25 @@\n      */\n     List<Symbol> moduleLevelSymbols();\n \n+    /**\n+     * Finds all the references of the specified symbol within the relevant scope.\n+     *\n+     * @param fileName name of the file in which to look up the specified position\n+     * @param symbol   a {@link Symbol} insance\n+     * @return A {@link List} of line ranges of all the references\n+     */\n+    List<Location> references(String fileName, Symbol symbol);", "originalCommit": "653f898c0be348e9b4d5c0c9f0bd31c1fbba5165", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4MDQ0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26976#discussion_r528480448", "bodyText": "Don't need it. Removed with 345a9e0", "author": "pubudu91", "createdAt": "2020-11-23T05:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3Mzg5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "345a9e03f53b08bc234664e72bd5b79f27c073e7", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\nindex 5ef492bc428..9043e1cf9e1 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java\n\n@@ -62,11 +62,10 @@ public interface SemanticModel {\n     /**\n      * Finds all the references of the specified symbol within the relevant scope.\n      *\n-     * @param fileName name of the file in which to look up the specified position\n-     * @param symbol   a {@link Symbol} insance\n+     * @param symbol a {@link Symbol} insance\n      * @return A {@link List} of line ranges of all the references\n      */\n-    List<Location> references(String fileName, Symbol symbol);\n+    List<Location> references(Symbol symbol);\n \n     /**\n      * If there's an identifier associated with a symbol at the specified cursor position, finds all the references of\n"}}, {"oid": "345a9e03f53b08bc234664e72bd5b79f27c073e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/345a9e03f53b08bc234664e72bd5b79f27c073e7", "message": "Remove unnecessary param from the references() API", "committedDate": "2020-11-23T05:39:42Z", "type": "forcePushed"}, {"oid": "25f59338929a407156633bd7586fe209c3577fc7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/25f59338929a407156633bd7586fe209c3577fc7", "message": "Remove unnecessary param from the references() API", "committedDate": "2020-11-23T06:03:20Z", "type": "forcePushed"}, {"oid": "72e73ca2e2913b811199782e923367195c0dedf5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/72e73ca2e2913b811199782e923367195c0dedf5", "message": "Add API for getting all references of a symbol", "committedDate": "2020-11-23T09:07:57Z", "type": "commit"}, {"oid": "2133f175a25aeda2fc8db97557b49c2a2292b226", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2133f175a25aeda2fc8db97557b49c2a2292b226", "message": "Add initial impl of reference finding visitor", "committedDate": "2020-11-23T09:08:02Z", "type": "commit"}, {"oid": "38bb3ed07f61b545be3fe6cc5c674ed16fb13d86", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/38bb3ed07f61b545be3fe6cc5c674ed16fb13d86", "message": "Add an API to NodeFinder to lookup the scoping AST node", "committedDate": "2020-11-23T09:08:02Z", "type": "commit"}, {"oid": "e63ff2aaff28a504867e8bf44a6c982b24608e6a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e63ff2aaff28a504867e8bf44a6c982b24608e6a", "message": "Implement allReferences()", "committedDate": "2020-11-23T09:08:02Z", "type": "commit"}, {"oid": "37e4d7cffca5c7edd001c66cbd49f43e5d89a9f3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/37e4d7cffca5c7edd001c66cbd49f43e5d89a9f3", "message": "Move the find all ref test to a separate package", "committedDate": "2020-11-23T09:08:03Z", "type": "commit"}, {"oid": "097f59d984045a502592f1593fea5645a17128df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/097f59d984045a502592f1593fea5645a17128df", "message": "Separate the find ref test and separate the tests by data provider", "committedDate": "2020-11-23T09:08:03Z", "type": "commit"}, {"oid": "47ae9a6ddbf5478c91dfb42aaa289deeb5ee1994", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47ae9a6ddbf5478c91dfb42aaa289deeb5ee1994", "message": "Fix issues in module prefix searching and add tests", "committedDate": "2020-11-23T09:08:03Z", "type": "commit"}, {"oid": "7a58089a81402387ba1e69682a49544f45624d47", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a58089a81402387ba1e69682a49544f45624d47", "message": "Fix issue in module prefix finding logic", "committedDate": "2020-11-23T09:08:04Z", "type": "commit"}, {"oid": "6b50d98d0c7ac61cff38ca258374ea8143538f53", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b50d98d0c7ac61cff38ca258374ea8143538f53", "message": "Add tests for function and action calls", "committedDate": "2020-11-23T09:08:04Z", "type": "commit"}, {"oid": "22cb97bab292a438d805937a9343b48c789cd6c8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22cb97bab292a438d805937a9343b48c789cd6c8", "message": "Fix issue in lang lib invocations and add more tests for exprs", "committedDate": "2020-11-23T09:08:04Z", "type": "commit"}, {"oid": "5eb0c1bba57397a31417e102d16fe9b6f02a1943", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5eb0c1bba57397a31417e102d16fe9b6f02a1943", "message": "Fix position issues in anon functions", "committedDate": "2020-11-23T09:08:05Z", "type": "commit"}, {"oid": "535133f1da875e5c97f604e60e28246b756e8bec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/535133f1da875e5c97f604e60e28246b756e8bec", "message": "Add tests for find all refs with lambda functions", "committedDate": "2020-11-23T09:08:05Z", "type": "commit"}, {"oid": "e9bc7b3d2b9b3cd27091423b80dd9aaeec91dc86", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e9bc7b3d2b9b3cd27091423b80dd9aaeec91dc86", "message": "Fix issues in worker actions and add tests for worker related ref lookup", "committedDate": "2020-11-23T09:08:05Z", "type": "commit"}, {"oid": "2a7da183fb3743891f0c2214ad6644cc8cc81745", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a7da183fb3743891f0c2214ad6644cc8cc81745", "message": "Fix issues in XML related ref lookup and add tests", "committedDate": "2020-11-23T09:08:06Z", "type": "commit"}, {"oid": "a2bbec83916896186981dabe5585cb8460ccccea", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a2bbec83916896186981dabe5585cb8460ccccea", "message": "Fix symbol issue in NS-prefixed field access", "committedDate": "2020-11-23T09:08:06Z", "type": "commit"}, {"oid": "43efb3b254c00d3d406f0038950b5bc107aaedea", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/43efb3b254c00d3d406f0038950b5bc107aaedea", "message": "Update spotbugs exclude", "committedDate": "2020-11-23T09:08:06Z", "type": "commit"}, {"oid": "609f8051ba15635c6a9772e42d68761341ec26a5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/609f8051ba15635c6a9772e42d68761341ec26a5", "message": "Fix issues in annot attachments and add tests", "committedDate": "2020-11-23T09:08:07Z", "type": "commit"}, {"oid": "c9bc092793f9f3126a636f0c02af1cf0f3d17d1d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9bc092793f9f3126a636f0c02af1cf0f3d17d1d", "message": "Fix issue in looking up symbols from annot tag references", "committedDate": "2020-11-23T09:08:07Z", "type": "commit"}, {"oid": "ebac00c0e1c042251637bf751f8c57fe823c6f03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ebac00c0e1c042251637bf751f8c57fe823c6f03", "message": "Use a different module for module prefix test", "committedDate": "2020-11-23T09:08:07Z", "type": "commit"}, {"oid": "d9d6b64d64c66ea32bac177d79e09631ebe5a126", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9d6b64d64c66ea32bac177d79e09631ebe5a126", "message": "Modify references API to support looking up across files", "committedDate": "2020-11-23T09:08:07Z", "type": "commit"}, {"oid": "352f4cc28ed28a225cf2639abcb38b6d4f5f5d02", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/352f4cc28ed28a225cf2639abcb38b6d4f5f5d02", "message": "Add test cases for looking up references across files", "committedDate": "2020-11-23T09:08:08Z", "type": "commit"}, {"oid": "506838cacc92dc2bd9ba045b0cc3b177855e07c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/506838cacc92dc2bd9ba045b0cc3b177855e07c5", "message": "Rename allReferences() -> references()", "committedDate": "2020-11-23T09:08:08Z", "type": "commit"}, {"oid": "7b3a9a6a1410b0f1d3389e989ff5a3662294b495", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b3a9a6a1410b0f1d3389e989ff5a3662294b495", "message": "Update the project structure of the test project", "committedDate": "2020-11-23T09:08:09Z", "type": "commit"}, {"oid": "44d50124a0b74d855af8221649ce4a77da1aeb0c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44d50124a0b74d855af8221649ce4a77da1aeb0c", "message": "Update Ballerina.toml of the test project", "committedDate": "2020-11-23T09:08:09Z", "type": "commit"}, {"oid": "d9f9ecc7a5f7e6b0ae433b616e94b0a82b63fe5a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9f9ecc7a5f7e6b0ae433b616e94b0a82b63fe5a", "message": "Update the find ref test setup logic to use the project API", "committedDate": "2020-11-23T09:08:09Z", "type": "commit"}, {"oid": "fb14252f8da29390ff823244687b581bf4d1a22b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb14252f8da29390ff823244687b581bf4d1a22b", "message": "Add new API to get the semantic model of the specified module", "committedDate": "2020-11-23T09:08:09Z", "type": "commit"}, {"oid": "76f3510f7247cde2edf8bdda550f8bfad112f403", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76f3510f7247cde2edf8bdda550f8bfad112f403", "message": "Add an API to find all references given a symbol", "committedDate": "2020-11-23T09:08:10Z", "type": "commit"}, {"oid": "e0d0c54892e08808476f5505910925dd9cf4c4a4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0d0c54892e08808476f5505910925dd9cf4c4a4", "message": "Run the same test suite for the references() API which takes a symbol", "committedDate": "2020-11-23T09:08:10Z", "type": "commit"}, {"oid": "07eb8cc540ab38a52fb48687097e2d85791d3fa8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07eb8cc540ab38a52fb48687097e2d85791d3fa8", "message": "Remove unnecessary param from the references() API", "committedDate": "2020-11-23T09:08:10Z", "type": "commit"}, {"oid": "07eb8cc540ab38a52fb48687097e2d85791d3fa8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07eb8cc540ab38a52fb48687097e2d85791d3fa8", "message": "Remove unnecessary param from the references() API", "committedDate": "2020-11-23T09:08:10Z", "type": "forcePushed"}]}