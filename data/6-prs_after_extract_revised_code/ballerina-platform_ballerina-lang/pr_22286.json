{"pr_number": 22286, "pr_title": "Fix taint analyze bad-sad issue 21259", "pr_createdAt": "2020-03-28T15:06:41Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22286", "timeline": [{"oid": "c74814bd9d2c06f8dc269c5df160b71a2d5dc069", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c74814bd9d2c06f8dc269c5df160b71a2d5dc069", "message": "Improve taint analyzing named args", "committedDate": "2020-03-28T03:51:40Z", "type": "commit"}, {"oid": "136af4c42b07cfc662edfc6b9dd5a9c54c3ba3a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/136af4c42b07cfc662edfc6b9dd5a9c54c3ba3a2", "message": "Refactor analyzeInvocation method", "committedDate": "2020-03-28T15:02:46Z", "type": "commit"}, {"oid": "eed8730e359a2b394fcf0dadb33bd8cbe4e28695", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eed8730e359a2b394fcf0dadb33bd8cbe4e28695", "message": "Fix failing integration test", "committedDate": "2020-03-29T03:48:23Z", "type": "commit"}, {"oid": "091e88fb4b5d61a111b0f4399ff7a2a244eb2440", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/091e88fb4b5d61a111b0f4399ff7a2a244eb2440", "message": "Fix lambda functions skipping taint errors", "committedDate": "2020-03-29T09:04:59Z", "type": "commit"}, {"oid": "1162af60876eb546e5367a1b84828d811e1331fb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1162af60876eb546e5367a1b84828d811e1331fb", "message": "Reset lambda function fix done for #21823", "committedDate": "2020-03-30T06:55:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDgyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22286#discussion_r400774823", "bodyText": "Shall we replace this with a normal loop?", "author": "pubudu91", "createdAt": "2020-03-31T09:37:01Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2280,111 +2281,110 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n                 }\n             }\n         }\n+\n         // Check tainted status of each argument. If argument is tainted, get the taint table when the given parameter\n         // is tainted and use it to update \"allParamsUntaintedRecord\". Do same for all parameters to identify the\n         // complete taint outcome of the current function.\n-        if (invocationExpr.argExprs != null) {\n-            int requiredParamCount = invokableSymbol.params.size();\n+        int requiredParamCount = invokableSymbol.params.size();\n \n-            int namedArgsCount = (int) invocationExpr.requiredArgs.stream()\n-                    .filter(a -> a.getKind() == NodeKind.NAMED_ARGS_EXPR).count();\n-            int requiredArgsCount = invocationExpr.requiredArgs.size() - namedArgsCount;\n-            int restArgsCount = invocationExpr.restArgs.size();\n+        int namedArgsCount = (int) invocationExpr.requiredArgs.stream()\n+                .filter(a -> a.getKind() == NodeKind.NAMED_ARGS_EXPR).count();", "originalCommit": "1162af60876eb546e5367a1b84828d811e1331fb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3804655cf7d2ebab97831e506680091aed577c95", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java\nindex 26b954b1515..49f3e059d0e 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java\n\n@@ -2287,8 +2287,7 @@ public class TaintAnalyzer extends BLangNodeVisitor {\n         // complete taint outcome of the current function.\n         int requiredParamCount = invokableSymbol.params.size();\n \n-        int namedArgsCount = (int) invocationExpr.requiredArgs.stream()\n-                .filter(a -> a.getKind() == NodeKind.NAMED_ARGS_EXPR).count();\n+        int namedArgsCount = countNamedArgs(invocationExpr);\n         int requiredArgsCount = invocationExpr.requiredArgs.size() - namedArgsCount;\n         int restArgsCount = invocationExpr.restArgs.size();\n \n"}}, {"oid": "3804655cf7d2ebab97831e506680091aed577c95", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3804655cf7d2ebab97831e506680091aed577c95", "message": "Replace java stream with a foreach loop", "committedDate": "2020-03-31T09:47:29Z", "type": "commit"}]}