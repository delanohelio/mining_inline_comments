{"pr_number": 23390, "pr_title": "Add tuple type descriptor support to new parser", "pr_createdAt": "2020-05-20T10:20:18Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390", "timeline": [{"oid": "efe4a29bbc4c68ef42adc568070f8dad991944f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/efe4a29bbc4c68ef42adc568070f8dad991944f9", "message": "Rest parameter support to tuple type desc.", "committedDate": "2020-05-20T06:47:35Z", "type": "commit"}, {"oid": "18db2d82c3806f8d8cd0995454f2d8a2884cb112", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18db2d82c3806f8d8cd0995454f2d8a2884cb112", "message": "Added test cases for the tuple type desc.", "committedDate": "2020-05-20T10:15:25Z", "type": "commit"}, {"oid": "1a56c504715239a37db8adfe491eba46faf8eda9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1a56c504715239a37db8adfe491eba46faf8eda9", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into tuple-type", "committedDate": "2020-05-20T10:16:01Z", "type": "commit"}, {"oid": "6d00e33b1aabc0f9113dfa6cc13d4aa97c9ee69d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d00e33b1aabc0f9113dfa6cc13d4aa97c9ee69d", "message": "Added some missing files", "committedDate": "2020-05-20T10:16:44Z", "type": "commit"}, {"oid": "930c9a226032996f2c8e043f41bbdf609e7592e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/930c9a226032996f2c8e043f41bbdf609e7592e7", "message": "Changed the type of memberTypeDescriptors to Node.", "committedDate": "2020-05-20T10:38:00Z", "type": "commit"}, {"oid": "10d6f65cb6e5368dd5ca511bfc1f16cdccaa6614", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10d6f65cb6e5368dd5ca511bfc1f16cdccaa6614", "message": "Revert \"Changed the type of memberTypeDescriptors to Node.\"\n\nThis reverts commit 930c9a226032996f2c8e043f41bbdf609e7592e7.", "committedDate": "2020-05-20T13:05:55Z", "type": "commit"}, {"oid": "10d6f65cb6e5368dd5ca511bfc1f16cdccaa6614", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10d6f65cb6e5368dd5ca511bfc1f16cdccaa6614", "message": "Revert \"Changed the type of memberTypeDescriptors to Node.\"\n\nThis reverts commit 930c9a226032996f2c8e043f41bbdf609e7592e7.", "committedDate": "2020-05-20T13:05:55Z", "type": "forcePushed"}, {"oid": "6b386a7e5827ed8420a24560873c3692ad0721dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b386a7e5827ed8420a24560873c3692ad0721dd", "message": "Changed tye type of memberTypeDesc to Node.", "committedDate": "2020-05-20T13:15:42Z", "type": "commit"}, {"oid": "a56b8a7cfc7e70143494fe3defe372b7af7d36d1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a56b8a7cfc7e70143494fe3defe372b7af7d36d1", "message": "Changed restParam of tuple type.", "committedDate": "2020-05-20T14:40:59Z", "type": "commit"}, {"oid": "5d24e3e1a9970b14126a35f2538f4af53010d193", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d24e3e1a9970b14126a35f2538f4af53010d193", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into tuple-type", "committedDate": "2020-05-20T15:26:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMTI1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428411259", "bodyText": "Here types.get(i) will give you a RestDescriptorNode.I think you'l have to get the typeDescriptor field of it, to pass to createTypeNode() method.", "author": "SupunS", "createdAt": "2020-05-21T02:28:32Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -393,9 +392,14 @@ public BLangNode transform(ParenthesisedTypeDescriptorNode parenthesisedTypeDesc\n     public BLangNode transform(TupleTypeDescriptorNode tupleTypeDescriptorNode) {\n         // TODO: Fully implement after tuple-type-desc is completed.\n         BLangTupleTypeNode tupleTypeNode = (BLangTupleTypeNode) TreeBuilder.createTupleTypeNode();\n-        SeparatedNodeList<TypeDescriptorNode> types = tupleTypeDescriptorNode.memberTypeDesc();\n+        SeparatedNodeList<Node> types = tupleTypeDescriptorNode.memberTypeDesc();\n         for (int i = 0; i < types.size(); i++) {\n-            tupleTypeNode.memberTypeNodes.add(createTypeNode(types.get(i)));\n+            Node node = types.get(i);\n+            if (node.kind() == SyntaxKind.REST_TYPE) {\n+                tupleTypeNode.restParamType = createTypeNode(types.get(i));", "originalCommit": "5d24e3e1a9970b14126a35f2538f4af53010d193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3OTM0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428479341", "bodyText": "Changed.", "author": "rdulmina", "createdAt": "2020-05-21T06:57:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMTI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "aec4d1d9602a780940c01d60cd10261b9bba80b3", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex 545bab63939..58d92317811 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -390,15 +391,15 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n \n     @Override\n     public BLangNode transform(TupleTypeDescriptorNode tupleTypeDescriptorNode) {\n-        // TODO: Fully implement after tuple-type-desc is completed.\n         BLangTupleTypeNode tupleTypeNode = (BLangTupleTypeNode) TreeBuilder.createTupleTypeNode();\n         SeparatedNodeList<Node> types = tupleTypeDescriptorNode.memberTypeDesc();\n         for (int i = 0; i < types.size(); i++) {\n             Node node = types.get(i);\n             if (node.kind() == SyntaxKind.REST_TYPE) {\n-                tupleTypeNode.restParamType = createTypeNode(types.get(i));\n+                RestDescriptorNode restDescriptor = (RestDescriptorNode) node;\n+                tupleTypeNode.restParamType = createTypeNode(restDescriptor.typeDescriptor());\n             } else {\n-                tupleTypeNode.memberTypeNodes.add(createTypeNode(types.get(i)));\n+                tupleTypeNode.memberTypeNodes.add(createTypeNode(node));\n             }\n         }\n         tupleTypeNode.pos = getPosition(tupleTypeDescriptorNode);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMTYzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428411632", "bodyText": "can replace types.get(i) with node.", "author": "SupunS", "createdAt": "2020-05-21T02:30:15Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -393,9 +392,14 @@ public BLangNode transform(ParenthesisedTypeDescriptorNode parenthesisedTypeDesc\n     public BLangNode transform(TupleTypeDescriptorNode tupleTypeDescriptorNode) {\n         // TODO: Fully implement after tuple-type-desc is completed.\n         BLangTupleTypeNode tupleTypeNode = (BLangTupleTypeNode) TreeBuilder.createTupleTypeNode();\n-        SeparatedNodeList<TypeDescriptorNode> types = tupleTypeDescriptorNode.memberTypeDesc();\n+        SeparatedNodeList<Node> types = tupleTypeDescriptorNode.memberTypeDesc();\n         for (int i = 0; i < types.size(); i++) {\n-            tupleTypeNode.memberTypeNodes.add(createTypeNode(types.get(i)));\n+            Node node = types.get(i);\n+            if (node.kind() == SyntaxKind.REST_TYPE) {\n+                tupleTypeNode.restParamType = createTypeNode(types.get(i));\n+            } else {\n+                tupleTypeNode.memberTypeNodes.add(createTypeNode(types.get(i)));", "originalCommit": "5d24e3e1a9970b14126a35f2538f4af53010d193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3OTMxMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428479310", "bodyText": "Changed.", "author": "rdulmina", "createdAt": "2020-05-21T06:57:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMTYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "aec4d1d9602a780940c01d60cd10261b9bba80b3", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex 545bab63939..58d92317811 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -390,15 +391,15 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n \n     @Override\n     public BLangNode transform(TupleTypeDescriptorNode tupleTypeDescriptorNode) {\n-        // TODO: Fully implement after tuple-type-desc is completed.\n         BLangTupleTypeNode tupleTypeNode = (BLangTupleTypeNode) TreeBuilder.createTupleTypeNode();\n         SeparatedNodeList<Node> types = tupleTypeDescriptorNode.memberTypeDesc();\n         for (int i = 0; i < types.size(); i++) {\n             Node node = types.get(i);\n             if (node.kind() == SyntaxKind.REST_TYPE) {\n-                tupleTypeNode.restParamType = createTypeNode(types.get(i));\n+                RestDescriptorNode restDescriptor = (RestDescriptorNode) node;\n+                tupleTypeNode.restParamType = createTypeNode(restDescriptor.typeDescriptor());\n             } else {\n-                tupleTypeNode.memberTypeNodes.add(createTypeNode(types.get(i)));\n+                tupleTypeNode.memberTypeNodes.add(createTypeNode(node));\n             }\n         }\n         tupleTypeNode.pos = getPosition(tupleTypeDescriptorNode);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMjQ4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428412480", "bodyText": "Without removing and adding, can we do this check and create the RestDescriptorNode, before add it to the list.\nMay be introduce a new method like parseTupleMember() and do it inside that method. Then here instead of calling parseTypeDescriptorInternalwe can call that method. WDYT?", "author": "SupunS", "createdAt": "2020-05-21T02:34:03Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -9050,7 +9049,12 @@ private STNode parseTupleMemberTypeDescList() {\n             if (tupleMemberRhs == null) {\n                 break;\n             }\n-\n+            if (tupleMemberRhs.kind == SyntaxKind.ELLIPSIS_TOKEN) {\n+                typeDesc = typeDescList.remove(typeDescList.size() - 1);\n+                typeDesc = STNodeFactory.createRestDescriptorNode(typeDesc, tupleMemberRhs);\n+                typeDescList.add(typeDesc);\n+                break;", "originalCommit": "5d24e3e1a9970b14126a35f2538f4af53010d193", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3OTI2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23390#discussion_r428479269", "bodyText": "Changed.", "author": "rdulmina", "createdAt": "2020-05-21T06:57:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMjQ4MA=="}], "type": "inlineReview", "revised_code": {"commit": "aec4d1d9602a780940c01d60cd10261b9bba80b3", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\nindex 635ef2426dd..75fa5e4077c 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\n@@ -9050,17 +9049,17 @@ public class BallerinaParser extends AbstractParser {\n                 break;\n             }\n             if (tupleMemberRhs.kind == SyntaxKind.ELLIPSIS_TOKEN) {\n-                typeDesc = typeDescList.remove(typeDescList.size() - 1);\n                 typeDesc = STNodeFactory.createRestDescriptorNode(typeDesc, tupleMemberRhs);\n-                typeDescList.add(typeDesc);\n                 break;\n             }\n+            typeDescList.add(typeDesc);\n             typeDescList.add(tupleMemberRhs);\n             typeDesc = parseTypeDescriptorInternal(ParserRuleContext.TYPE_DESC_IN_TUPLE);\n-            typeDescList.add(typeDesc);\n             nextToken = peek();\n         }\n \n+        typeDescList.add(typeDesc);\n+\n         return STNodeFactory.createNodeList(typeDescList);\n     }\n \n"}}, {"oid": "aec4d1d9602a780940c01d60cd10261b9bba80b3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aec4d1d9602a780940c01d60cd10261b9bba80b3", "message": "Changed the parsing logic of tuple type.", "committedDate": "2020-05-21T06:53:52Z", "type": "commit"}, {"oid": "72665d63f3e5dbb424c96224a888d1a8f2ab76c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/72665d63f3e5dbb424c96224a888d1a8f2ab76c3", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into tuple-type", "committedDate": "2020-05-21T06:56:02Z", "type": "commit"}, {"oid": "ccfcb980d85b6346ecb6e4a4dcbb9b243c733305", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ccfcb980d85b6346ecb6e4a4dcbb9b243c733305", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into tuple-type", "committedDate": "2020-05-21T09:19:45Z", "type": "commit"}]}