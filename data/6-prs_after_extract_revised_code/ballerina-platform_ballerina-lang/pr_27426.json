{"pr_number": 27426, "pr_title": "[Formatter] Align Formatter with Service Changes", "pr_createdAt": "2020-12-10T04:42:11Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426", "timeline": [{"oid": "02173aedf016d7b0c8ee52a057c1fe22325b06d2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02173aedf016d7b0c8ee52a057c1fe22325b06d2", "message": "Fix ServiceDeclarationNode in formatting tree modifier", "committedDate": "2020-12-04T05:10:11Z", "type": "commit"}, {"oid": "0ae32a92374417c6b7b0d68b151dab0c2612de2a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ae32a92374417c6b7b0d68b151dab0c2612de2a", "message": "Merge remote-tracking branch 'upstream/service-typing' into service-typing-anjanasi", "committedDate": "2020-12-04T05:15:05Z", "type": "commit"}, {"oid": "238f70dcc1e50b04a0fd59950a278a20e68484e6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/238f70dcc1e50b04a0fd59950a278a20e68484e6", "message": "Enable Service listener declarations test", "committedDate": "2020-12-04T05:21:49Z", "type": "commit"}, {"oid": "fa97c6a016246f017627074cb01f5e98b9f28089", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fa97c6a016246f017627074cb01f5e98b9f28089", "message": "Fix ObjectFieldNode formatting tree modifier", "committedDate": "2020-12-09T11:02:29Z", "type": "commit"}, {"oid": "57d2d76d7b1facfb37028ecc17920af0e65a06b6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57d2d76d7b1facfb37028ecc17920af0e65a06b6", "message": "Merge remote-tracking branch 'upstream/master' into service-typing-anjanasi", "committedDate": "2020-12-10T00:37:01Z", "type": "commit"}, {"oid": "e0d7215eaa0c4c1492a44fc6b1d96c52759ce130", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0d7215eaa0c4c1492a44fc6b1d96c52759ce130", "message": "Fix AnnotationAttachPointNode in formatting tree modifier", "committedDate": "2020-12-10T01:17:47Z", "type": "commit"}, {"oid": "ce16b32b671d0911077c6dd9b8df91df740179e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce16b32b671d0911077c6dd9b8df91df740179e9", "message": "Remove public keyword form class remote function formatter test", "committedDate": "2020-12-10T04:26:17Z", "type": "commit"}, {"oid": "230106045dfab81f5ff7892c5c85d0ee9fd09539", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/230106045dfab81f5ff7892c5c85d0ee9fd09539", "message": "Merge remote-tracking branch 'upstream/master' into service-typing-anjanasi", "committedDate": "2020-12-10T04:29:11Z", "type": "commit"}, {"oid": "6fa2a6713f6e5f2c7b5ed571d34b7bd6d82ad106", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6fa2a6713f6e5f2c7b5ed571d34b7bd6d82ad106", "message": "Fix and enable class definition declaration formatter tests", "committedDate": "2020-12-10T04:37:37Z", "type": "commit"}, {"oid": "c24a332e68e9d37b250bdf2262004ad365c09458", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c24a332e68e9d37b250bdf2262004ad365c09458", "message": "Implent the ResourcePathParameterNode in formatting tree modifier", "committedDate": "2020-12-10T14:54:44Z", "type": "commit"}, {"oid": "1087bdaba11e12a7715173eab75a6155c9074f91", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1087bdaba11e12a7715173eab75a6155c9074f91", "message": "Skip service related recovery test cases in parser formatting tests", "committedDate": "2020-12-11T02:20:41Z", "type": "commit"}, {"oid": "99eed9906d3f321902a4b487b696850e31fedc03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/99eed9906d3f321902a4b487b696850e31fedc03", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into service-typing-anjanasi", "committedDate": "2020-12-11T02:21:33Z", "type": "commit"}, {"oid": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2f80d2adb1a384e322a2de04e04a190f30546a2", "message": "Fix checkstyle issue in FormattingTreeModifier", "committedDate": "2020-12-11T02:31:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4OTg5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542089894", "bodyText": "Do we need to check the empty-ness?", "author": "SupunS", "createdAt": "2020-12-14T03:37:17Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -596,19 +630,30 @@ public ImportPrefixNode transform(ImportPrefixNode importPrefixNode) {\n     public ServiceDeclarationNode transform(ServiceDeclarationNode serviceDeclarationNode) {\n         MetadataNode metadata = formatNode(serviceDeclarationNode.metadata().orElse(null), 0, 1);\n         Token serviceKeyword = formatToken(serviceDeclarationNode.serviceKeyword(), 1, 0);\n-        //IdentifierToken serviceName = formatToken(serviceDeclarationNode.serviceName().orElse(null), 1, 0);\n+        TypeDescriptorNode typeDescriptor = formatNode(serviceDeclarationNode.typeDescriptor().orElse(null), 1, 0);\n+        NodeList<Node> absoluteResourcePath = formatNodeList(serviceDeclarationNode.absoluteResourcePath(), 0, 0, 1, 0);\n         Token onKeyword = formatToken(serviceDeclarationNode.onKeyword(), 1, 0);\n         SeparatedNodeList<ExpressionNode> expressions =\n                 formatSeparatedNodeList(serviceDeclarationNode.expressions(), 0, 0, 1, 0);\n-        //Node serviceBody = formatNode(serviceDeclarationNode.serviceBody(), env.trailingWS, env.trailingNL);\n+        Token openBrace = formatToken(serviceDeclarationNode.openBraceToken(), 0, 1);\n+        indent(); // increase the indentation of the following statements.\n+        NodeList<Node> members = formatNodeList(serviceDeclarationNode.members(), 0, 1, 0, 1, true);\n+        unindent(); // reset the indentation.\n+        if (serviceDeclarationNode.members().isEmpty()) {\n+            env.preserveNewlines = true;\n+        }", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyODk3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542128973", "bodyText": "Since a similar behavior is implemented here in FunctionBodyBlockNode, the newline preservation was added here as well.\n\n  \n    \n      ballerina-lang/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n    \n    \n         Line 361\n      in\n      7289b5b\n    \n    \n    \n    \n\n        \n          \n           env.preserveNewlines = true; \n        \n    \n  \n\n\nOtherwise, the following parser-tests seems to be failing as well.\nhttps://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-parser/src/test/resources/declarations/service-decl/service_decl_source_18.bal\nhttps://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-parser/src/test/resources/declarations/service-decl/service_decl_source_19.bal", "author": "sanjana", "createdAt": "2020-12-14T05:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4OTg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTI0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542131249", "bodyText": "Preserving the newline is fine. But do we need to check for the empty-ness?\nAs in, are we not preserving the newlines if the list is not empty?", "author": "SupunS", "createdAt": "2020-12-14T05:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4OTg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNTI4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543305282", "bodyText": "Fixed in FunctionBodyBlockNode and ServiceDeclarationNode.", "author": "sanjana", "createdAt": "2020-12-15T12:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4OTg5NA=="}], "type": "inlineReview", "revised_code": {"commit": "27418faa6f61ad9de98bad8412892deda2311bcd", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..e886bf19faa 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -629,6 +625,7 @@ public class FormattingTreeModifier extends TreeModifier {\n     @Override\n     public ServiceDeclarationNode transform(ServiceDeclarationNode serviceDeclarationNode) {\n         MetadataNode metadata = formatNode(serviceDeclarationNode.metadata().orElse(null), 0, 1);\n+        NodeList<Token> qualifiers = formatNodeList(serviceDeclarationNode.qualifiers(), 1, 0, 1, 0);\n         Token serviceKeyword = formatToken(serviceDeclarationNode.serviceKeyword(), 1, 0);\n         TypeDescriptorNode typeDescriptor = formatNode(serviceDeclarationNode.typeDescriptor().orElse(null), 1, 0);\n         NodeList<Node> absoluteResourcePath = formatNodeList(serviceDeclarationNode.absoluteResourcePath(), 0, 0, 1, 0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MjM3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542092379", "bodyText": "No changes required to the MethodDeclarationNode?", "author": "SupunS", "createdAt": "2020-12-14T03:47:00Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -281,7 +282,14 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         MetadataNode metadata = formatNode(functionDefinitionNode.metadata().orElse(null), 0, 1);", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExMzc5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542113796", "bodyText": "This [1] seems to be added in the MethodDeclarationNode.\n[1] \n  \n    \n      ballerina-lang/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/TreeModifier.java\n    \n    \n         Line 2257\n      in\n      f919b1d\n    \n    \n    \n    \n\n        \n          \n           NodeList<Node> relativeResourcePath =", "author": "IrushiL", "createdAt": "2020-12-14T05:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MjM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0MjA0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542142047", "bodyText": "Fixed it here:\n\n  \n    \n      ballerina-lang/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n    \n    \n         Line 2744\n      in\n      28c7bca\n    \n    \n    \n    \n\n        \n          \n           NodeList<Node> relativeResourcePath = formatNodeList(methodDeclarationNode.relativeResourcePath(), 0, 0, 0, 0);", "author": "sanjana", "createdAt": "2020-12-14T06:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MjM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "27418faa6f61ad9de98bad8412892deda2311bcd", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..e886bf19faa 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -283,8 +283,7 @@ public class FormattingTreeModifier extends TreeModifier {\n         NodeList<Token> qualifierList = formatNodeList(functionDefinitionNode.qualifierList(), 1, 0, 1, 0);\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName;\n-        if (functionDefinitionNode.relativeResourcePath().isEmpty() ||\n-                functionDefinitionNode.relativeResourcePath().get(0).isMissing()) {\n+        if (functionDefinitionNode.relativeResourcePath().isEmpty()) {\n             functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         } else {\n             functionName = formatToken(functionDefinitionNode.functionName(), 1, 0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5Mjc5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542092794", "bodyText": "Why are we not keeping a space for func-name, if the first component of relative path is missing?", "author": "SupunS", "createdAt": "2020-12-14T03:48:30Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -281,7 +282,14 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         MetadataNode metadata = formatNode(functionDefinitionNode.metadata().orElse(null), 0, 1);\n         NodeList<Token> qualifierList = formatNodeList(functionDefinitionNode.qualifierList(), 1, 0, 1, 0);\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n-        IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n+        IdentifierToken functionName;\n+        if (functionDefinitionNode.relativeResourcePath().isEmpty() ||\n+                functionDefinitionNode.relativeResourcePath().get(0).isMissing()) {", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNDk3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543304970", "bodyText": "Fixed.", "author": "sanjana", "createdAt": "2020-12-15T12:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5Mjc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "27418faa6f61ad9de98bad8412892deda2311bcd", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..e886bf19faa 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -283,8 +283,7 @@ public class FormattingTreeModifier extends TreeModifier {\n         NodeList<Token> qualifierList = formatNodeList(functionDefinitionNode.qualifierList(), 1, 0, 1, 0);\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName;\n-        if (functionDefinitionNode.relativeResourcePath().isEmpty() ||\n-                functionDefinitionNode.relativeResourcePath().get(0).isMissing()) {\n+        if (functionDefinitionNode.relativeResourcePath().isEmpty()) {\n             functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         } else {\n             functionName = formatToken(functionDefinitionNode.functionName(), 1, 0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5NDgyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542094824", "bodyText": "Why do we have to skip these tests?", "author": "SupunS", "createdAt": "2020-12-14T03:55:22Z", "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/ParserTestFormatter.java", "diffHunk": "@@ -88,6 +88,8 @@ public void test(String fileName, String path) throws IOException {\n                 \"typed_binding_patterns_source_16.bal\", // parser issue for binding patterns #26421\n                 \"error_binding_pattern_source_02.bal\", // issue #26376\n \n+                \"service_decl_source_02.bal\", \"service_decl_source_05.bal\", \"service_decl_source_17.bal\",\n+", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNDg2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543304867", "bodyText": "Will be addressed at #27490", "author": "sanjana", "createdAt": "2020-12-15T12:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5NDgyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODgxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542108818", "bodyText": "The qualifiers [1] need to be formatted here as well right?\n[1] \n  \n    \n      ballerina-lang/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/TreeModifier.java\n    \n    \n         Line 157\n      in\n      f919b1d\n    \n    \n    \n    \n\n        \n          \n           NodeList<Token> qualifiers =", "author": "IrushiL", "createdAt": "2020-12-14T04:46:19Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -596,19 +630,30 @@ public ImportPrefixNode transform(ImportPrefixNode importPrefixNode) {\n     public ServiceDeclarationNode transform(ServiceDeclarationNode serviceDeclarationNode) {\n         MetadataNode metadata = formatNode(serviceDeclarationNode.metadata().orElse(null), 0, 1);\n         Token serviceKeyword = formatToken(serviceDeclarationNode.serviceKeyword(), 1, 0);", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNDc3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543304771", "bodyText": "Fixed.", "author": "sanjana", "createdAt": "2020-12-15T12:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "27418faa6f61ad9de98bad8412892deda2311bcd", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..e886bf19faa 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -629,6 +625,7 @@ public class FormattingTreeModifier extends TreeModifier {\n     @Override\n     public ServiceDeclarationNode transform(ServiceDeclarationNode serviceDeclarationNode) {\n         MetadataNode metadata = formatNode(serviceDeclarationNode.metadata().orElse(null), 0, 1);\n+        NodeList<Token> qualifiers = formatNodeList(serviceDeclarationNode.qualifiers(), 1, 0, 1, 0);\n         Token serviceKeyword = formatToken(serviceDeclarationNode.serviceKeyword(), 1, 0);\n         TypeDescriptorNode typeDescriptor = formatNode(serviceDeclarationNode.typeDescriptor().orElse(null), 1, 0);\n         NodeList<Node> absoluteResourcePath = formatNodeList(serviceDeclarationNode.absoluteResourcePath(), 0, 0, 1, 0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExNjc4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542116782", "bodyText": "Shall we implement the RequiredExpressionNode [1] as well in this PR? Seems to be a new node.\n[1] \n  \n    \n      ballerina-lang/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/TreeModifier.java\n    \n    \n         Line 3157\n      in\n      f919b1d\n    \n    \n    \n    \n\n        \n          \n           public RequiredExpressionNode transform(", "author": "IrushiL", "createdAt": "2020-12-14T05:14:37Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -160,6 +160,7 @@\n import io.ballerina.compiler.syntax.tree.RecordTypeDescriptorNode;", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNDcwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543304706", "bodyText": "Implemented.", "author": "sanjana", "createdAt": "2020-12-15T12:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExNjc4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7a891c9dc5d35f413ee626f222edda1d5cbcb436", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..241bbf9269e 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -159,6 +159,7 @@ import io.ballerina.compiler.syntax.tree.RecordFieldWithDefaultValueNode;\n import io.ballerina.compiler.syntax.tree.RecordRestDescriptorNode;\n import io.ballerina.compiler.syntax.tree.RecordTypeDescriptorNode;\n import io.ballerina.compiler.syntax.tree.RemoteMethodCallActionNode;\n+import io.ballerina.compiler.syntax.tree.RequiredExpressionNode;\n import io.ballerina.compiler.syntax.tree.RequiredParameterNode;\n import io.ballerina.compiler.syntax.tree.ResourcePathParameterNode;\n import io.ballerina.compiler.syntax.tree.RestArgumentNode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyMTE5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r542121194", "bodyText": "Can we change this to the following?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    NodeList<Token> identifiers = formatNodeList(annotationAttachPointNode.identifiers(), 1, 0, 0, 0);\n          \n          \n            \n                    NodeList<Token> identifiers = formatNodeList(annotationAttachPointNode.identifiers(), 1, 0, env.trailingWS, env.trailingNL);", "author": "IrushiL", "createdAt": "2020-12-14T05:28:48Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -2307,19 +2352,10 @@ public AnnotationDeclarationNode transform(AnnotationDeclarationNode annotationD\n     @Override\n     public AnnotationAttachPointNode transform(AnnotationAttachPointNode annotationAttachPointNode) {\n         Token sourceKeyword = formatToken(annotationAttachPointNode.sourceKeyword().orElse(null), 1, 0);\n-//        Token firstIdent;\n-//        if (annotationAttachPointNode.secondIdent().isPresent()) {\n-//            firstIdent = formatToken(annotationAttachPointNode.firstIdent(), 1, 0);\n-//        } else {\n-//            firstIdent = formatToken(annotationAttachPointNode.firstIdent(), env.trailingWS, env.trailingNL);\n-//        }\n-//\n-//        Token secondIdent = formatToken(annotationAttachPointNode.secondIdent().orElse(null), env.trailingWS,\n-//                env.trailingNL);\n+        NodeList<Token> identifiers = formatNodeList(annotationAttachPointNode.identifiers(), 1, 0, 0, 0);", "originalCommit": "b2f80d2adb1a384e322a2de04e04a190f30546a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNDY0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543304640", "bodyText": "Fixed.", "author": "sanjana", "createdAt": "2020-12-15T12:35:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyMTE5NA=="}], "type": "inlineReview", "revised_code": {"commit": "27418faa6f61ad9de98bad8412892deda2311bcd", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 043749e941e..e886bf19faa 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -2352,7 +2348,8 @@ public class FormattingTreeModifier extends TreeModifier {\n     @Override\n     public AnnotationAttachPointNode transform(AnnotationAttachPointNode annotationAttachPointNode) {\n         Token sourceKeyword = formatToken(annotationAttachPointNode.sourceKeyword().orElse(null), 1, 0);\n-        NodeList<Token> identifiers = formatNodeList(annotationAttachPointNode.identifiers(), 1, 0, 0, 0);\n+        NodeList<Token> identifiers = formatNodeList(annotationAttachPointNode.identifiers(), 1, 0, env.trailingWS,\n+                env.trailingNL);\n         return annotationAttachPointNode.modify()\n                 .withSourceKeyword(sourceKeyword)\n                 .withIdentifiers(identifiers)\n"}}, {"oid": "ed17e1dc573311bec9438ed6f95de353477a6c9b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed17e1dc573311bec9438ed6f95de353477a6c9b", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into service-typing-anjanasi", "committedDate": "2020-12-14T05:43:14Z", "type": "commit"}, {"oid": "28c7bcab80ae1b8988019c7beee6053d04290524", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/28c7bcab80ae1b8988019c7beee6053d04290524", "message": "Format relativeResourcePath in MethodDeclarationNode", "committedDate": "2020-12-14T06:24:01Z", "type": "commit"}, {"oid": "27418faa6f61ad9de98bad8412892deda2311bcd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27418faa6f61ad9de98bad8412892deda2311bcd", "message": "Preserve newlines in block statements of formatter", "committedDate": "2020-12-14T11:50:23Z", "type": "commit"}, {"oid": "7ff022ab14c7af4c60baac1f57304f37b5deaa0a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7ff022ab14c7af4c60baac1f57304f37b5deaa0a", "message": "Fix service listener resource function test case formatting", "committedDate": "2020-12-14T12:06:11Z", "type": "commit"}, {"oid": "46c9be62880d57e3a0e4ae3f2e1fd033a43a800d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46c9be62880d57e3a0e4ae3f2e1fd033a43a800d", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into service-typing-anjanasi", "committedDate": "2020-12-15T12:12:12Z", "type": "commit"}, {"oid": "7a891c9dc5d35f413ee626f222edda1d5cbcb436", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a891c9dc5d35f413ee626f222edda1d5cbcb436", "message": "Implement RequiredExpressionNode in formatter", "committedDate": "2020-12-15T08:43:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMzQyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543313423", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Token questionMarkToken = formatToken(requiredExpressionNode.questionMarkToken(), 0, 0);\n          \n          \n            \n                    Token questionMarkToken = formatToken(requiredExpressionNode.questionMarkToken(), env.trailingWS, env.trailingNL);", "author": "IrushiL", "createdAt": "2020-12-15T12:48:36Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -595,20 +626,39 @@ public ImportPrefixNode transform(ImportPrefixNode importPrefixNode) {\n     @Override\n     public ServiceDeclarationNode transform(ServiceDeclarationNode serviceDeclarationNode) {\n         MetadataNode metadata = formatNode(serviceDeclarationNode.metadata().orElse(null), 0, 1);\n+        NodeList<Token> qualifiers = formatNodeList(serviceDeclarationNode.qualifiers(), 1, 0, 1, 0);\n         Token serviceKeyword = formatToken(serviceDeclarationNode.serviceKeyword(), 1, 0);\n-        //IdentifierToken serviceName = formatToken(serviceDeclarationNode.serviceName().orElse(null), 1, 0);\n+        TypeDescriptorNode typeDescriptor = formatNode(serviceDeclarationNode.typeDescriptor().orElse(null), 1, 0);\n+        NodeList<Node> absoluteResourcePath = formatNodeList(serviceDeclarationNode.absoluteResourcePath(), 0, 0, 1, 0);\n         Token onKeyword = formatToken(serviceDeclarationNode.onKeyword(), 1, 0);\n         SeparatedNodeList<ExpressionNode> expressions =\n                 formatSeparatedNodeList(serviceDeclarationNode.expressions(), 0, 0, 1, 0);\n-        //Node serviceBody = formatNode(serviceDeclarationNode.serviceBody(), env.trailingWS, env.trailingNL);\n+        Token openBrace = formatToken(serviceDeclarationNode.openBraceToken(), 0, 1);\n+        indent(); // increase the indentation of the following statements.\n+        NodeList<Node> members = formatNodeList(serviceDeclarationNode.members(), 0, 1, 0, 1, true);\n+        unindent(); // reset the indentation.\n+        env.preserveNewlines = true;\n+        Token closeBrace = formatToken(serviceDeclarationNode.closeBraceToken(), env.trailingWS, env.trailingNL);\n \n         return serviceDeclarationNode.modify()\n                 .withMetadata(metadata)\n+                .withQualifiers(qualifiers)\n                 .withServiceKeyword(serviceKeyword)\n-                //.withServiceName(serviceName)\n+                .withTypeDescriptor(typeDescriptor)\n+                .withAbsoluteResourcePath(absoluteResourcePath)\n                 .withOnKeyword(onKeyword)\n                 .withExpressions(expressions)\n-                //.withServiceBody(serviceBody)\n+                .withOpenBraceToken(openBrace)\n+                .withMembers(members)\n+                .withCloseBraceToken(closeBrace)\n+                .apply();\n+    }\n+\n+    @Override\n+    public RequiredExpressionNode transform(RequiredExpressionNode requiredExpressionNode) {\n+        Token questionMarkToken = formatToken(requiredExpressionNode.questionMarkToken(), 0, 0);", "originalCommit": "7a891c9dc5d35f413ee626f222edda1d5cbcb436", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMyMDAwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27426#discussion_r543320004", "bodyText": "@IrushiL Thanks for pointing this out. \ud83d\udc4d\nFixed.", "author": "sanjana", "createdAt": "2020-12-15T12:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMzQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "bfa094895c2e599af95eb7de406aab231bc7b891", "chunk": "diff --git a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\nindex 241bbf9269e..e83e447a73a 100644\n--- a/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n+++ b/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java\n\n@@ -656,7 +656,8 @@ public class FormattingTreeModifier extends TreeModifier {\n \n     @Override\n     public RequiredExpressionNode transform(RequiredExpressionNode requiredExpressionNode) {\n-        Token questionMarkToken = formatToken(requiredExpressionNode.questionMarkToken(), 0, 0);\n+        Token questionMarkToken = formatToken(requiredExpressionNode.questionMarkToken(), env.trailingWS,\n+                env.trailingNL);\n         return requiredExpressionNode.modify()\n                 .withQuestionMarkToken(questionMarkToken)\n                 .apply();\n"}}, {"oid": "bfa094895c2e599af95eb7de406aab231bc7b891", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bfa094895c2e599af95eb7de406aab231bc7b891", "message": "Use env newlines and whitespaces in RequiredExpressionNode", "committedDate": "2020-12-15T12:55:47Z", "type": "commit"}]}