{"pr_number": 23843, "pr_title": "Add transformer method for annotation access expression node", "pr_createdAt": "2020-06-09T10:15:30Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23843", "timeline": [{"oid": "52d0039a3655d62140635afd0c9313fad3640185", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/52d0039a3655d62140635afd0c9313fad3640185", "message": "Transformer method for annotation access expression.\nAdded transformer method for annotation access expression and changed the type of annotTagReference to NameReferenceNode.", "committedDate": "2020-06-09T06:47:58Z", "type": "commit"}, {"oid": "a10ad60c0d6f26686c980e33003a0aa9735b1109", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a10ad60c0d6f26686c980e33003a0aa9735b1109", "message": "Enabled BStringAnnotationTest test class.", "committedDate": "2020-06-09T09:44:35Z", "type": "commit"}, {"oid": "4146d067d4d2d621c402007006d21826026b7f74", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4146d067d4d2d621c402007006d21826026b7f74", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into AnnotAccessExpressionNode", "committedDate": "2020-06-09T09:46:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NjM4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23843#discussion_r437446388", "bodyText": "lets get rid of the type cast and replace with a check on kind", "author": "manuranga", "createdAt": "2020-06-09T14:01:34Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1240,6 +1242,25 @@ public BLangNode transform(AnnotationDeclarationNode annotationDeclarationNode)\n         return annotationDecl;\n     }\n \n+    @Override\n+    public BLangNode transform(AnnotAccessExpressionNode annotAccessExpressionNode) {\n+        BLangAnnotAccessExpr annotAccessExpr = (BLangAnnotAccessExpr) TreeBuilder.createAnnotAccessExpressionNode();\n+\n+        try {", "originalCommit": "4146d067d4d2d621c402007006d21826026b7f74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyNTQ3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23843#discussion_r437525474", "bodyText": "Done", "author": "rdulmina", "createdAt": "2020-06-09T15:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NjM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "881153d01dc1c6cd99eeb2b3f5c7a398bdcc1ce3", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex adfec05b8ce..82d3ed61b15 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -1246,13 +1246,14 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n     public BLangNode transform(AnnotAccessExpressionNode annotAccessExpressionNode) {\n         BLangAnnotAccessExpr annotAccessExpr = (BLangAnnotAccessExpr) TreeBuilder.createAnnotAccessExpressionNode();\n \n-        try {\n-            SimpleNameReferenceNode annotName = (SimpleNameReferenceNode) annotAccessExpressionNode.annotTagReference();\n+        Node annotTagReference = annotAccessExpressionNode.annotTagReference();\n+        if (annotAccessExpressionNode.annotTagReference().kind() == SyntaxKind.SIMPLE_NAME_REFERENCE) {\n+            SimpleNameReferenceNode annotName = (SimpleNameReferenceNode) annotTagReference;\n             annotAccessExpr.pkgAlias = (BLangIdentifier) TreeBuilder.createIdentifierNode();\n             annotAccessExpr.annotationName = createIdentifier(annotName.name());\n-        } catch (Exception e) {\n+        } else {\n             QualifiedNameReferenceNode qulifiedName =\n-                    (QualifiedNameReferenceNode) annotAccessExpressionNode.annotTagReference();\n+                    (QualifiedNameReferenceNode) annotTagReference;\n             annotAccessExpr.pkgAlias = createIdentifier(qulifiedName.modulePrefix());\n             annotAccessExpr.annotationName = createIdentifier(qulifiedName.identifier());\n         }\n"}}, {"oid": "881153d01dc1c6cd99eeb2b3f5c7a398bdcc1ce3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/881153d01dc1c6cd99eeb2b3f5c7a398bdcc1ce3", "message": "Removed try catch.", "committedDate": "2020-06-09T14:27:58Z", "type": "commit"}]}