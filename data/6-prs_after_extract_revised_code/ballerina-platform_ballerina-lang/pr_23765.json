{"pr_number": 23765, "pr_title": "Update file module to new error syntax", "pr_createdAt": "2020-06-07T04:47:46Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765", "timeline": [{"oid": "4ec83fe29a5f85fcb8e341c64b8f76a14a728996", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ec83fe29a5f85fcb8e341c64b8f76a14a728996", "message": "Update file module to new error syntax", "committedDate": "2020-06-07T04:44:47Z", "type": "commit"}, {"oid": "57017e3bfe5bb98cf4e29c31fb6da8ae3ba0b2c6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57017e3bfe5bb98cf4e29c31fb6da8ae3ba0b2c6", "message": "Merge branch '23283-add-distinct-type' of https://github.com/ballerina-lang/ballerina into file-distinct", "committedDate": "2020-06-08T01:50:18Z", "type": "commit"}, {"oid": "457118c9c94bbd5221b21244e0ea6232e79c895d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/457118c9c94bbd5221b21244e0ea6232e79c895d", "message": "Migrate ldap to new error syntax", "committedDate": "2020-06-08T02:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0OTc3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436449774", "bodyText": "I think we can get rid of populateSystemErrorRecord() method as well. We only need to pass a record to createDistinctError method only if the detail record has are fields other than message and cause. So since we pass the message field to the populateSystemErrorRecord(), we can simply pass only the message.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, error, populateSystemErrorRecord(details));\n          \n          \n            \n                    return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, details != null ? details : UNKNOWN_MESSAGE);", "author": "chamil321", "createdAt": "2020-06-08T04:17:32Z", "path": "stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java", "diffHunk": "@@ -71,7 +71,7 @@ public static ErrorValue getBallerinaError(String error, Throwable ex) {\n      * @return Ballerina error object.\n      */\n     public static ErrorValue getBallerinaError(String error, String details) {\n-        return BallerinaErrors.createError(error, populateSystemErrorRecord(details));\n+        return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, error, populateSystemErrorRecord(details));", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1MDE5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436450191", "bodyText": "Also, shall we change the param name from details to message. And the docs as well", "author": "chamil321", "createdAt": "2020-06-08T04:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0OTc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "df7be2805decbd7456e9e07167e48ec58e9f5523", "chunk": "diff --git a/stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java b/stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java\nindex 401afe080e2..5581b548655 100644\n--- a/stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java\n+++ b/stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java\n\n@@ -66,22 +64,11 @@ public class FileUtils {\n      * Error type is generic ballerina error type. This utility to construct error object from message.\n      *\n      * @param error   The specific error type.\n-     * @param details Java throwable object to capture description of error struct. If throwable object is null,\n-     *                \"Unknown Error\" is set to message by default.\n+     * @param message Error message. \"Unknown Error\" is set to message by default.\n      * @return Ballerina error object.\n      */\n-    public static ErrorValue getBallerinaError(String error, String details) {\n-        return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, error, populateSystemErrorRecord(details));\n-    }\n-\n-    private static MapValue populateSystemErrorRecord(String message) {\n-        Map<String, Object> valueMap = new HashMap<>();\n-        if (message != null) {\n-            valueMap.put(FileConstants.ERROR_MESSAGE, message);\n-        } else {\n-            valueMap.put(FileConstants.ERROR_MESSAGE, UNKNOWN_MESSAGE);\n-        }\n-        return BallerinaValues.createRecordValue(FILE_PACKAGE_ID, FileConstants.ERROR_DETAILS, valueMap);\n+    public static ErrorValue getBallerinaError(String error, String message) {\n+        return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, message != null ? message : UNKNOWN_MESSAGE);\n     }\n \n     public static ObjectValue getFileInfo(File inputFile) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1MDc1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436450757", "bodyText": "Ideally FileConstants.INVALID_OPERATION_ERROR should not be retrieved as the error message. The message should be File already exists in the new path", "author": "chamil321", "createdAt": "2020-06-08T04:23:31Z", "path": "stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java", "diffHunk": "@@ -121,7 +121,7 @@ public void testFileRenameWithInvalidPath() throws IOException {\n             BValue[] returns = BRunUtil.invoke(compileResult, \"testRename\", args);\n             assertTrue(returns[0] instanceof BError);\n             BError error = (BError) returns[0];\n-            assertEquals(error.getReason(), FileConstants.INVALID_OPERATION_ERROR);\n+            assertEquals(error.getMessage(), FileConstants.INVALID_OPERATION_ERROR);", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7be2805decbd7456e9e07167e48ec58e9f5523", "chunk": "diff --git a/stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java b/stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java\nindex b181cf7a44c..1b0d33d4397 100644\n--- a/stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java\n+++ b/stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java\n\n@@ -121,9 +120,7 @@ public class FileTest {\n             BValue[] returns = BRunUtil.invoke(compileResult, \"testRename\", args);\n             assertTrue(returns[0] instanceof BError);\n             BError error = (BError) returns[0];\n-            assertEquals(error.getMessage(), FileConstants.INVALID_OPERATION_ERROR);\n-            assertTrue(((BMap) error.getDetails()).get(\"message\").stringValue()\n-                    .contains(\"File already exists in the new path \"));\n+            assertTrue(error.getMessage().contains(\"File already exists in the new path \"));\n         } finally {\n             Files.deleteIfExists(tempSourcePath);\n             Files.deleteIfExists(tempDestPath);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3MjE5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436472193", "bodyText": "Can we remove the static import?", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-06-08T06:02:06Z", "path": "stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java", "diffHunk": "@@ -36,6 +36,8 @@\n import javax.naming.directory.SearchControls;\n import javax.naming.directory.SearchResult;\n \n+import static org.ballerinalang.stdlib.ldap.LdapConstants.LDAP_PACKAGE_ID;", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEwODg0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r437108846", "bodyText": "These static imports do not damage the code and it improves the readability. Hence resolving", "author": "chamil321", "createdAt": "2020-06-09T02:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3MjE5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "df7be2805decbd7456e9e07167e48ec58e9f5523", "chunk": "diff --git a/stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java b/stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java\nindex df9829c50e9..f3292e0eff4 100644\n--- a/stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java\n+++ b/stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java\n\n@@ -36,6 +35,7 @@ import javax.naming.directory.DirContext;\n import javax.naming.directory.SearchControls;\n import javax.naming.directory.SearchResult;\n \n+import static org.ballerinalang.stdlib.ldap.LdapConstants.LDAP_ERROR_TYPE;\n import static org.ballerinalang.stdlib.ldap.LdapConstants.LDAP_PACKAGE_ID;\n \n /**\n"}}, {"oid": "df7be2805decbd7456e9e07167e48ec58e9f5523", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df7be2805decbd7456e9e07167e48ec58e9f5523", "message": "Address review suggestions", "committedDate": "2020-06-08T10:10:20Z", "type": "commit"}]}