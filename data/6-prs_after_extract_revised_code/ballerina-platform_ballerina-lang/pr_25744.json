{"pr_number": 25744, "pr_title": "Refactor BRuntime to have only public apis", "pr_createdAt": "2020-09-11T12:09:38Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25744", "timeline": [{"oid": "fdaef9dcba677f61bd3bece28c6c78170e488eac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fdaef9dcba677f61bd3bece28c6c78170e488eac", "message": "Fix failing javaDocs task", "committedDate": "2020-09-11T12:11:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDc1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25744#discussion_r487130756", "bodyText": "Shall we refactor the getSyncMethodInvokeResult method as well.", "author": "warunalakshitha", "createdAt": "2020-09-11T15:43:01Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BRuntime.java", "diffHunk": "@@ -275,66 +179,4 @@ public void notifyFailure(ErrorValue error) {\n     }\n \n \n-    private void scheduleNextFunction(FPValue<?, ?> func, Strand strand, String strandName,", "originalCommit": "fdaef9dcba677f61bd3bece28c6c78170e488eac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY1MTI0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25744#discussion_r487651246", "bodyText": "By refactor do you mean that I should remove the function? Or to simplify code by reusing? This function is already used in Kafka", "author": "riyafa", "createdAt": "2020-09-14T04:55:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDc1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cbd3019c461c85a3aedd01b9abc01eb2ddb3fb2c", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BRuntime.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BRuntime.java\nindex 1823e872d2f..83d5eb8b83f 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BRuntime.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BRuntime.java\n\n@@ -98,85 +95,4 @@ public class BRuntime {\n         };\n         scheduler.schedule(new Object[1], func, null, callback, properties, BTypes.typeNull, strandName, metadata);\n     }\n-\n-    /**\n-     * Invoke Object method synchronously. This will block the thread.\n-     *\n-     * @param object     Object Value.\n-     * @param methodName Name of the method.\n-     * @param strandName Name for newly creating strand which is used to execute the function pointer. This is\n-     *                   optional and can be null.\n-     * @param metadata   Meta data of new strand.\n-     * @param args       Ballerina function arguments.\n-     */\n-    public void invokeMethodSync(ObjectValue object, String methodName, String strandName,\n-                                 StrandMetadata metadata, Object... args) {\n-        Function<?, ?> func = o -> object.call((Strand) (((Object[]) o)[0]), methodName, args);\n-        Semaphore semaphore = new Semaphore(0);\n-        final ErrorValue[] errorValue = new ErrorValue[1];\n-        scheduler.schedule(new Object[1], func, null, new CallableUnitCallback() {\n-            @Override\n-            public void notifySuccess() {\n-                semaphore.release();\n-            }\n-\n-            @Override\n-            public void notifyFailure(ErrorValue error) {\n-                errorValue[0] = error;\n-                semaphore.release();\n-            }\n-        }, strandName, metadata);\n-        try {\n-            semaphore.acquire();\n-        } catch (InterruptedException e) {\n-            // Ignore\n-        }\n-        if (errorValue[0] != null) {\n-            throw errorValue[0];\n-        }\n-    }\n-\n-    /**\n-     * Invoke Ballerina function and get the result.\n-     *\n-     * @param object     Ballerina object in which the function is defined.\n-     * @param methodName Ballerina function name, to invoke.\n-     * @param strandName Name for newly creating strand which is used to execute the function pointer. This is\n-     *                   optional and can be null.\n-     * @param metadata   Meta data of new strand.\n-     * @param timeout    Timeout in milliseconds to wait until acquiring the semaphore.\n-     * @param args       Ballerina function arguments.\n-     * @return Ballerina function invoke result.\n-     */\n-    public Object getSyncMethodInvokeResult(ObjectValue object, String methodName, String strandName,\n-                                            StrandMetadata metadata, int timeout, Object... args) {\n-        Function<?, ?> func = o -> object.call((Strand) (((Object[]) o)[0]), methodName, args);\n-        Semaphore semaphore = new Semaphore(0);\n-        final ErrorValue[] errorValue = new ErrorValue[1];\n-        // Add 1 more element to keep null for add the strand later.\n-        Object[] params = new Object[]{null, args};\n-        FutureValue futureValue = scheduler.schedule(params, func, null, new CallableUnitCallback() {\n-            @Override\n-            public void notifySuccess() {\n-                semaphore.release();\n-            }\n-\n-            @Override\n-            public void notifyFailure(ErrorValue error) {\n-                errorValue[0] = error;\n-                semaphore.release();\n-            }\n-        }, strandName, metadata);\n-        try {\n-            semaphore.tryAcquire(timeout, TimeUnit.MILLISECONDS);\n-        } catch (InterruptedException e) {\n-            // Ignore\n-        }\n-        if (errorValue[0] != null) {\n-            throw errorValue[0];\n-        }\n-        return futureValue.result;\n-    }\n-\n-\n }\n"}}, {"oid": "cbd3019c461c85a3aedd01b9abc01eb2ddb3fb2c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbd3019c461c85a3aedd01b9abc01eb2ddb3fb2c", "message": "Refactor BRuntime to have only public apis\n\nThe BRuntime api is refactored to have only public apis used on other\nprojects like stdlibs. AsyncUtils have methods used only in the langlib\nprojects.", "committedDate": "2020-09-14T09:50:57Z", "type": "commit"}, {"oid": "cbd3019c461c85a3aedd01b9abc01eb2ddb3fb2c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbd3019c461c85a3aedd01b9abc01eb2ddb3fb2c", "message": "Refactor BRuntime to have only public apis\n\nThe BRuntime api is refactored to have only public apis used on other\nprojects like stdlibs. AsyncUtils have methods used only in the langlib\nprojects.", "committedDate": "2020-09-14T09:50:57Z", "type": "forcePushed"}]}