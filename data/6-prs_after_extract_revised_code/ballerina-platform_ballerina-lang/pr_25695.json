{"pr_number": 25695, "pr_title": "Save global var dependencies in BIRFunction", "pr_createdAt": "2020-09-09T17:18:56Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMDk4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r486130982", "bodyText": "Order is wrong here. you have to first write the size to the buffer and then write individual elements. And when reading, you read in the same order.", "author": "Kishanthan", "createdAt": "2020-09-10T07:41:33Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java", "diffHunk": "@@ -296,6 +299,20 @@ private void writeFunction(ByteBuf buf, BIRTypeWriter typeWriter, BIRInstruction\n         buf.writeBytes(birbuf.nioBuffer().array(), 0, length);\n     }\n \n+    private void writeFunctionsGlobalVarDependency(ByteBuf buf, BIRNode.BIRFunction birFunction) {\n+        List<Integer> globalVarBuf = new LinkedList<>();\n+\n+        for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n+            if (var == null) {\n+                continue;\n+            }\n+            globalVarBuf.add(addStringCPEntry(var.name.value));\n+        }\n+\n+        buf.writeLong(globalVarBuf.size());", "originalCommit": "19d8f27632336e25766a0e08590bea8e236044c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMTU1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r486131557", "bodyText": "I think I have read it wrong. This looks correct.", "author": "Kishanthan", "createdAt": "2020-09-10T07:42:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMDk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4252c1a1d97dd10e8f6136ff00d0d94fb28ab112", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\nindex 492982e44de..6f2dc681842 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n\n@@ -317,9 +323,11 @@ public class BIRBinaryWriter {\n         ByteBuf birbuf = Unpooled.buffer();\n         birbuf.writeShort(taintTable.rowCount);\n         birbuf.writeShort(taintTable.columnCount);\n+        birbuf.writeInt(taintTable.taintTable.size());\n         for (Integer paramIndex : taintTable.taintTable.keySet()) {\n             birbuf.writeShort(paramIndex);\n             List<Byte> taintRecord = taintTable.taintTable.get(paramIndex);\n+            birbuf.writeInt(taintRecord.size());\n             for (Byte taintStatus : taintRecord) {\n                 birbuf.writeByte(taintStatus);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMzQ5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r486133496", "bodyText": "Btw, we can use writeInt here, than writing Long", "author": "Kishanthan", "createdAt": "2020-09-10T07:45:53Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java", "diffHunk": "@@ -296,6 +299,20 @@ private void writeFunction(ByteBuf buf, BIRTypeWriter typeWriter, BIRInstruction\n         buf.writeBytes(birbuf.nioBuffer().array(), 0, length);\n     }\n \n+    private void writeFunctionsGlobalVarDependency(ByteBuf buf, BIRNode.BIRFunction birFunction) {\n+        List<Integer> globalVarBuf = new LinkedList<>();\n+\n+        for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n+            if (var == null) {\n+                continue;\n+            }\n+            globalVarBuf.add(addStringCPEntry(var.name.value));\n+        }\n+\n+        buf.writeLong(globalVarBuf.size());", "originalCommit": "19d8f27632336e25766a0e08590bea8e236044c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MDkzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r486790931", "bodyText": "Fixed", "author": "dulvinw", "createdAt": "2020-09-11T05:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMzQ5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4252c1a1d97dd10e8f6136ff00d0d94fb28ab112", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\nindex 492982e44de..6f2dc681842 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n\n@@ -317,9 +323,11 @@ public class BIRBinaryWriter {\n         ByteBuf birbuf = Unpooled.buffer();\n         birbuf.writeShort(taintTable.rowCount);\n         birbuf.writeShort(taintTable.columnCount);\n+        birbuf.writeInt(taintTable.taintTable.size());\n         for (Integer paramIndex : taintTable.taintTable.keySet()) {\n             birbuf.writeShort(paramIndex);\n             List<Byte> taintRecord = taintTable.taintTable.get(paramIndex);\n+            birbuf.writeInt(taintRecord.size());\n             for (Byte taintStatus : taintRecord) {\n                 birbuf.writeByte(taintStatus);\n             }\n"}}, {"oid": "4252c1a1d97dd10e8f6136ff00d0d94fb28ab112", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4252c1a1d97dd10e8f6136ff00d0d94fb28ab112", "message": "Save global var dependencies in BIRFunction", "committedDate": "2020-09-11T04:53:58Z", "type": "commit"}, {"oid": "c1ddb12c64e6b821ceb8aee76dc891f24bc2ddf4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1ddb12c64e6b821ceb8aee76dc891f24bc2ddf4", "message": "Fix review suggestion.\nAdd bir.ksy entry", "committedDate": "2020-09-11T05:58:57Z", "type": "commit"}, {"oid": "c1ddb12c64e6b821ceb8aee76dc891f24bc2ddf4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1ddb12c64e6b821ceb8aee76dc891f24bc2ddf4", "message": "Fix review suggestion.\nAdd bir.ksy entry", "committedDate": "2020-09-11T05:58:57Z", "type": "forcePushed"}, {"oid": "b1385288f600913065f68aa5351d8a4f7b138297", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b1385288f600913065f68aa5351d8a4f7b138297", "message": "Fix review suggestions", "committedDate": "2020-09-14T06:44:14Z", "type": "commit"}, {"oid": "b1385288f600913065f68aa5351d8a4f7b138297", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b1385288f600913065f68aa5351d8a4f7b138297", "message": "Fix review suggestions", "committedDate": "2020-09-14T06:44:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTM1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r487789356", "bodyText": "can this arg be moved to the above line? or did it exceed the 120 space?", "author": "Kishanthan", "createdAt": "2020-09-14T09:52:26Z", "path": "docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java", "diffHunk": "@@ -144,12 +144,30 @@ private static void assertFunctions(BIRNode.BIRPackage expectedBIR, Bir.Module b\n             Assert.assertEquals(actualFunctionBody.argsCount(), expectedFunction.argsCount);\n             Assert.assertEquals(actualFunctionBody.defaultParameterCount(), expectedFunction.parameters.size());\n \n+            // assert dependent global variables\n+            assertDepGlobalVar(actualFunction, expectedFunction.dependentGlobalVars.toArray(), constantPoolEntries);\n+\n             // assert basic blocks\n             assertBasicBlocks(actualFunctionBody.functionBasicBlocksInfo(), expectedFunction.basicBlocks,\n                     constantPoolEntries);\n         }\n     }\n \n+    private static void assertDepGlobalVar(Bir.Function actualFunction,\n+            Object[] dependentGlobalVars,", "originalCommit": "b1385288f600913065f68aa5351d8a4f7b138297", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTk3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r487789975", "bodyText": "btw, is is the formatted correctly ?", "author": "Kishanthan", "createdAt": "2020-09-14T09:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "chunk": "diff --git a/docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java b/docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java\nindex cbd49b60792..6fa11c14ef8 100644\n--- a/docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java\n+++ b/docs/bir-spec/src/test/java/org/ballerinalang/birspec/BIRTestUtils.java\n\n@@ -153,14 +153,12 @@ class BIRTestUtils {\n         }\n     }\n \n-    private static void assertDepGlobalVar(Bir.Function actualFunction,\n-            Object[] dependentGlobalVars,\n+    private static void assertDepGlobalVar(Bir.Function actualFunction, Object[] dependentGlobalVars,\n             ArrayList<Bir.ConstantPoolEntry> constantPoolEntries) {\n \n         ArrayList<Integer> dependentGlobalVarsCPEntries = actualFunction.dependentGlobalVarCpEntry();\n         Assert.assertEquals(dependentGlobalVarsCPEntries.size(), dependentGlobalVars.length);\n \n-\n         for (int i = 0; i < dependentGlobalVarsCPEntries.size(); i++) {\n             Bir.ConstantPoolEntry constantPoolEntry = constantPoolEntries.get(dependentGlobalVarsCPEntries.get(i));\n             String expectedName = ((BIRNode.BIRGlobalVariableDcl) dependentGlobalVars[i]).name.value;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0NzE4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r487847189", "bodyText": "can this be null at any point?", "author": "Kishanthan", "createdAt": "2020-09-14T11:41:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java", "diffHunk": "@@ -302,6 +305,20 @@ private void writeFunction(ByteBuf buf, BIRTypeWriter typeWriter, BIRInstruction\n         buf.writeBytes(birbuf.nioBuffer().array(), 0, length);\n     }\n \n+    private void writeFunctionsGlobalVarDependency(ByteBuf buf, BIRNode.BIRFunction birFunction) {\n+        List<Integer> globalVarBuf = new LinkedList<>();\n+\n+        for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n+            if (var == null) {", "originalCommit": "b1385288f600913065f68aa5351d8a4f7b138297", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMTQ0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r488011441", "bodyText": "Earlier there was another bug collecting constants as well. I also fixed that issue along with this but forgot to remove it here. Fixed it.", "author": "dulvinw", "createdAt": "2020-09-14T15:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0NzE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\nindex c8120fee7f0..9d3de4260d9 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n\n@@ -309,9 +309,6 @@ public class BIRBinaryWriter {\n         List<Integer> globalVarBuf = new LinkedList<>();\n \n         for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n-            if (var == null) {\n-                continue;\n-            }\n             globalVarBuf.add(addStringCPEntry(var.name.value));\n         }\n \n"}}, {"oid": "a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "message": "Formatting issue", "committedDate": "2020-09-14T15:13:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNjkzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r488126935", "bodyText": "what is the reason to remove the condition on CONSTANT here?", "author": "Kishanthan", "createdAt": "2020-09-14T18:10:14Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/cyclefind/GlobalVariableRefAnalyzer.java", "diffHunk": "@@ -192,9 +192,7 @@ private boolean isGlobalVarSymbol(BSymbol symbol) {\n             return false;\n         }\n \n-        return ((symbol.tag & SymTag.VARIABLE) == SymTag.VARIABLE) ||\n-                ((symbol.tag & SymTag.CONSTANT) == SymTag.CONSTANT);", "originalCommit": "a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NzI5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r488367290", "bodyText": "A lock doesnt have to depend on a constant.", "author": "dulvinw", "createdAt": "2020-09-15T03:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNjkzNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNzg2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25695#discussion_r488127864", "bodyText": "this can be simplified now right? you don't need an intermediate list, but we can start writing to the buf directly from the loop?", "author": "Kishanthan", "createdAt": "2020-09-14T18:11:48Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java", "diffHunk": "@@ -302,6 +305,17 @@ private void writeFunction(ByteBuf buf, BIRTypeWriter typeWriter, BIRInstruction\n         buf.writeBytes(birbuf.nioBuffer().array(), 0, length);\n     }\n \n+    private void writeFunctionsGlobalVarDependency(ByteBuf buf, BIRNode.BIRFunction birFunction) {\n+        List<Integer> globalVarBuf = new LinkedList<>();\n+\n+        for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n+            globalVarBuf.add(addStringCPEntry(var.name.value));\n+        }\n+\n+        buf.writeInt(globalVarBuf.size());\n+        globalVarBuf.forEach(buf::writeInt);", "originalCommit": "a85dc64c9d9c02cef95163b4c776402d0d1ca3c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cccced30368d5108450a1e8c5fb1ebf82a316996", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\nindex 9d3de4260d9..7aaa7f544d2 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRBinaryWriter.java\n\n@@ -306,14 +306,11 @@ public class BIRBinaryWriter {\n     }\n \n     private void writeFunctionsGlobalVarDependency(ByteBuf buf, BIRNode.BIRFunction birFunction) {\n-        List<Integer> globalVarBuf = new LinkedList<>();\n+        buf.writeInt(birFunction.dependentGlobalVars.size());\n \n         for (BIRNode.BIRVariableDcl var : birFunction.dependentGlobalVars) {\n-            globalVarBuf.add(addStringCPEntry(var.name.value));\n+            buf.writeInt(addStringCPEntry(var.name.value));\n         }\n-\n-        buf.writeInt(globalVarBuf.size());\n-        globalVarBuf.forEach(buf::writeInt);\n     }\n \n     private void writeTaintTable(ByteBuf buf, TaintTable taintTable) {\n"}}, {"oid": "cccced30368d5108450a1e8c5fb1ebf82a316996", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cccced30368d5108450a1e8c5fb1ebf82a316996", "message": "Review suggestions", "committedDate": "2020-09-15T04:07:46Z", "type": "forcePushed"}, {"oid": "1b81022599383f744e38babb03c91ea50bd4ebb0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b81022599383f744e38babb03c91ea50bd4ebb0", "message": "Review suggestions", "committedDate": "2020-09-15T04:29:43Z", "type": "commit"}, {"oid": "1b81022599383f744e38babb03c91ea50bd4ebb0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b81022599383f744e38babb03c91ea50bd4ebb0", "message": "Review suggestions", "committedDate": "2020-09-15T04:29:43Z", "type": "forcePushed"}]}