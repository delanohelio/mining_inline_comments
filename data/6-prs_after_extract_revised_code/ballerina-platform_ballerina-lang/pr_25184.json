{"pr_number": 25184, "pr_title": "Fix scoping issue with type narrowed symbols for arrow expressions", "pr_createdAt": "2020-08-10T04:00:12Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184", "timeline": [{"oid": "781b3f195433e65c1e0f786a3b114d0811693c03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/781b3f195433e65c1e0f786a3b114d0811693c03", "message": "Skip type narrowed symbols for arrow function scope\n\nWe should skip type narrowed symbols in the scope for arrow expr\nand the same it is done for lambda functions as well.", "committedDate": "2020-08-10T03:51:17Z", "type": "commit"}, {"oid": "bc8432fb8aff3d7733f9e8dec722924d87997a7c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc8432fb8aff3d7733f9e8dec722924d87997a7c", "message": "Add test cases covering arrow expr type narrowing", "committedDate": "2020-08-10T03:53:47Z", "type": "commit"}, {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/179a968ac6a61817b90bda742d1e3d8bf944e168", "message": "Merge branch 'master' of into fix-24956", "committedDate": "2020-08-10T03:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MzMyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#discussion_r468363323", "bodyText": "Should we try and extract this logic out to a separate method, since it seems to be used across multiple methods?", "author": "MaryamZi", "createdAt": "2020-08-11T06:51:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java", "diffHunk": "@@ -181,8 +181,14 @@ public static SymbolEnv createResourceActionSymbolEnv(BLangInvokableNode node, S\n     }\n \n     public static SymbolEnv createArrowFunctionSymbolEnv(BLangArrowFunction node, SymbolEnv env) {\n-        SymbolEnv symbolEnv = new SymbolEnv(node, new Scope(env.scope.owner));\n-        symbolEnv.enclEnv = env;\n+        Scope scope = new Scope(env.scope.owner);\n+        env.scope.entries.entrySet().stream()\n+                // skip the type narrowed symbols when taking the snapshot for closures.\n+                .filter(entry -> (entry.getValue().symbol.tag & SymTag.VARIABLE) != SymTag.VARIABLE ||\n+                        ((BVarSymbol) entry.getValue().symbol).originalSymbol == null)\n+                .forEach(entry -> scope.entries.put(entry.getKey(), entry.getValue()));", "originalCommit": "179a968ac6a61817b90bda742d1e3d8bf944e168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxMTY4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#discussion_r468511680", "bodyText": "Yes, we should do it. Let me check.", "author": "Kishanthan", "createdAt": "2020-08-11T11:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MzMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "0c76a4d4fc951a76c65935598df211545dfb3deb", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java\nindex 476a14a0e64..18a66bf6669 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java\n\n@@ -181,13 +181,7 @@ public class SymbolEnv {\n     }\n \n     public static SymbolEnv createArrowFunctionSymbolEnv(BLangArrowFunction node, SymbolEnv env) {\n-        Scope scope = new Scope(env.scope.owner);\n-        env.scope.entries.entrySet().stream()\n-                // skip the type narrowed symbols when taking the snapshot for closures.\n-                .filter(entry -> (entry.getValue().symbol.tag & SymTag.VARIABLE) != SymTag.VARIABLE ||\n-                        ((BVarSymbol) entry.getValue().symbol).originalSymbol == null)\n-                .forEach(entry -> scope.entries.put(entry.getKey(), entry.getValue()));\n-        SymbolEnv symbolEnv = new SymbolEnv(node, scope);\n+        SymbolEnv symbolEnv = cloneSymbolEnvForClosure(node, env);\n         symbolEnv.enclEnv = env.enclEnv != null ? env.enclEnv.createClone() : null;\n         symbolEnv.enclPkg = env.enclPkg;\n         return symbolEnv;\n"}}, {"oid": "0c76a4d4fc951a76c65935598df211545dfb3deb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c76a4d4fc951a76c65935598df211545dfb3deb", "message": "Refactor closure env cloning logic to seperate method", "committedDate": "2020-08-11T11:33:11Z", "type": "commit"}]}