{"pr_number": 21795, "pr_title": "Fix empty space print for error with empty details", "pr_createdAt": "2020-03-16T07:01:57Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21795", "timeline": [{"oid": "304204dbb5a3ddbf5b5e658a44a45dd9123a6408", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/304204dbb5a3ddbf5b5e658a44a45dd9123a6408", "message": "Does not print a 'space' if error detail is empty\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T08:58:29Z", "type": "forcePushed"}, {"oid": "fb69aa006abfe5d407c5d7a4ccb670242996ce80", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb69aa006abfe5d407c5d7a4ccb670242996ce80", "message": "Remove extra space in existing test cases\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T10:05:19Z", "type": "forcePushed"}, {"oid": "c0e53a4cd75cbb38b0fafd8007584b0a86da0c0c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0e53a4cd75cbb38b0fafd8007584b0a86da0c0c", "message": "Does not print a 'space' if error detail is empty\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T10:06:46Z", "type": "commit"}, {"oid": "7fc3b8b12f85ca0cca36240f6bf3378b083194ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7fc3b8b12f85ca0cca36240f6bf3378b083194ed", "message": "Remove extra space in existing test cases\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T10:06:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk5NTI1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21795#discussion_r392995254", "bodyText": "Do we need this conditional check? The details will be null if the user hasn't specified any details right?", "author": "pubudu91", "createdAt": "2020-03-16T12:43:30Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java", "diffHunk": "@@ -88,16 +88,31 @@ public ErrorValue(BType type, BString reason, Object details) {\n     @Override\n     @Deprecated\n     public String stringValue() {\n-        return \"error \" + reason.getValue() +\n-                Optional.ofNullable(details).map(\n-                        details -> \" \" + org.ballerinalang.jvm.values.utils.StringUtils.getStringValue(details)).orElse(\n-                        \"\");\n+        String detailsString;\n+        if (details == null) {\n+            detailsString = \"\";\n+        } else {\n+            detailsString = org.ballerinalang.jvm.values.utils.StringUtils.getStringValue(details);\n+        }\n+        if (detailsString.trim().isEmpty()) {\n+            return \"error \" + reason.getValue();", "originalCommit": "7fc3b8b12f85ca0cca36240f6bf3378b083194ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f43b4ea6ce937998cb2a936fdbcb0457872cac9c", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java\nindex f9e58465294..7633dd7f7fd 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java\n\n@@ -88,31 +88,20 @@ public class ErrorValue extends BError implements RefValue {\n     @Override\n     @Deprecated\n     public String stringValue() {\n-        String detailsString;\n         if (details == null) {\n-            detailsString = \"\";\n-        } else {\n-            detailsString = org.ballerinalang.jvm.values.utils.StringUtils.getStringValue(details);\n-        }\n-        if (detailsString.trim().isEmpty()) {\n             return \"error \" + reason.getValue();\n         }\n-        return \"error \" + reason.getValue() + \" \" + detailsString;\n+        return \"error \" + reason.getValue() + \" \" + org.ballerinalang.jvm.values.utils.StringUtils.getStringValue(\n+                details);\n     }\n \n     @Override\n     public BString bStringValue() {\n-        BString detailsString;\n         if (details == null) {\n-            detailsString = StringUtils.fromString(\"\");\n-        } else {\n-            detailsString = org.ballerinalang.jvm.values.utils.StringUtils.getBStringValue(details);\n-        }\n-        if (detailsString.toString().trim().isEmpty()) {\n             return StringUtils.fromString(\"error \").concat(reason);\n         }\n         return StringUtils.fromString(\"error \").concat(reason).concat(StringUtils.fromString(\" \")).concat(\n-                detailsString);\n+                org.ballerinalang.jvm.values.utils.StringUtils.getBStringValue(details));\n     }\n \n     @Override\n"}}, {"oid": "7fc3b8b12f85ca0cca36240f6bf3378b083194ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7fc3b8b12f85ca0cca36240f6bf3378b083194ed", "message": "Remove extra space in existing test cases\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T10:06:46Z", "type": "forcePushed"}, {"oid": "f43b4ea6ce937998cb2a936fdbcb0457872cac9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f43b4ea6ce937998cb2a936fdbcb0457872cac9c", "message": "Refactor ErrorValue stringValue method\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T16:11:53Z", "type": "commit"}, {"oid": "f43b4ea6ce937998cb2a936fdbcb0457872cac9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f43b4ea6ce937998cb2a936fdbcb0457872cac9c", "message": "Refactor ErrorValue stringValue method\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>", "committedDate": "2020-03-16T16:11:53Z", "type": "forcePushed"}]}