{"pr_number": 22874, "pr_title": "New Table implementation", "pr_createdAt": "2020-04-24T08:20:25Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874", "timeline": [{"oid": "00105eb25afa254948807acae801cb7ca348eeba", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/00105eb25afa254948807acae801cb7ca348eeba", "message": "Add tuple type to hash method", "committedDate": "2020-04-21T18:43:23Z", "type": "commit"}, {"oid": "9d2029f29cc62d8a7ac9ad7eec92c11e1c94f9f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9d2029f29cc62d8a7ac9ad7eec92c11e1c94f9f9", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-22T04:44:14Z", "type": "commit"}, {"oid": "16c5cf8baa113ba591969f24c911c371e8c19f5a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16c5cf8baa113ba591969f24c911c371e8c19f5a", "message": "Fix checkstyle issue", "committedDate": "2020-04-22T05:04:17Z", "type": "commit"}, {"oid": "e73f16fb44184e72e0f78d6881b66b6a70840391", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e73f16fb44184e72e0f78d6881b66b6a70840391", "message": "Add testcases for table member access expressions", "committedDate": "2020-04-22T07:02:10Z", "type": "commit"}, {"oid": "4ad432d704295f46aeeb51f6809065516725b908", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ad432d704295f46aeeb51f6809065516725b908", "message": "Enable disabled tests", "committedDate": "2020-04-22T07:24:55Z", "type": "commit"}, {"oid": "c1ea98d3ef50a9ddeb2248cf1a4c062705c4cb0f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1ea98d3ef50a9ddeb2248cf1a4c062705c4cb0f", "message": "Add a descriptive representation for table.toString()", "committedDate": "2020-04-22T07:24:55Z", "type": "commit"}, {"oid": "5d3e0fde3090bb05f4a4615ca0720602ae455c8a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d3e0fde3090bb05f4a4615ca0720602ae455c8a", "message": "Add initial negative test cases", "committedDate": "2020-04-22T07:24:55Z", "type": "commit"}, {"oid": "5c202767a4318b37abed1e34370f87cd439e2055", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5c202767a4318b37abed1e34370f87cd439e2055", "message": "Add tests for compilation checks", "committedDate": "2020-04-22T07:24:55Z", "type": "commit"}, {"oid": "a304ddbfcce284d794086a60e8f1e1b9029894f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a304ddbfcce284d794086a60e8f1e1b9029894f8", "message": "Add nextKey() function and tests", "committedDate": "2020-04-22T07:26:43Z", "type": "commit"}, {"oid": "35036c843b94a828137954d8906a6cf97afa4319", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/35036c843b94a828137954d8906a6cf97afa4319", "message": "Update expectedExceptionsMessageRegExp in runtime error assertions", "committedDate": "2020-04-22T07:26:43Z", "type": "commit"}, {"oid": "84c089965bdf5cd4574693462452db178d57247b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/84c089965bdf5cd4574693462452db178d57247b", "message": "Use anyToInt() for numeric conversion", "committedDate": "2020-04-22T07:36:34Z", "type": "commit"}, {"oid": "3312fb4978dbf6a67c3bbe65ee58a66da763a556", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3312fb4978dbf6a67c3bbe65ee58a66da763a556", "message": "Remove unnecessary new lines", "committedDate": "2020-04-22T07:42:36Z", "type": "commit"}, {"oid": "f5e5a7bdfc4355bf13f52cc45f0856b21e2779b2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5e5a7bdfc4355bf13f52cc45f0856b21e2779b2", "message": "Add member access runtime negative test cases", "committedDate": "2020-04-22T08:05:39Z", "type": "commit"}, {"oid": "8b75ee1b1e28a47a7aa26d5bd4ccbf6d8ff216fd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8b75ee1b1e28a47a7aa26d5bd4ccbf6d8ff216fd", "message": "Support nextKey() for Map constrained tables", "committedDate": "2020-04-22T08:37:45Z", "type": "commit"}, {"oid": "f908abadb5318f6c7e6e8f83a821541ff5362c8c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f908abadb5318f6c7e6e8f83a821541ff5362c8c", "message": "Fix checkstyle issues", "committedDate": "2020-04-22T09:13:38Z", "type": "commit"}, {"oid": "7207611a5304426410cd19a9473dd94fefa73ecd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7207611a5304426410cd19a9473dd94fefa73ecd", "message": "Add testcase for constant expr validation", "committedDate": "2020-04-22T12:17:57Z", "type": "commit"}, {"oid": "8742a354a5e6e6bcc234d69a658d13c7af1b2f37", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8742a354a5e6e6bcc234d69a658d13c7af1b2f37", "message": "Merge pull request #22832 from mohanvive/new-table-impl\n\nAdd negative test cases and type checking validations", "committedDate": "2020-04-22T13:50:16Z", "type": "commit"}, {"oid": "8cc9220f327ee5261eec7d64e704a47fb1a7b90f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8cc9220f327ee5261eec7d64e704a47fb1a7b90f", "message": "Disable nextKey support for composite key specifiers", "committedDate": "2020-04-22T15:47:25Z", "type": "commit"}, {"oid": "1e6a56e89f35aabb5795b2f59748e25778213c3f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e6a56e89f35aabb5795b2f59748e25778213c3f", "message": "Fix language server core testcase failures", "committedDate": "2020-04-22T16:03:16Z", "type": "commit"}, {"oid": "5362c88cbc98b8c45baacc99aafa2d4555c4a2fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5362c88cbc98b8c45baacc99aafa2d4555c4a2fe", "message": "Merge branch 'new-table-impl' of https://github.com/pcnfernando/ballerina-lang into chiran-new-table-impl", "committedDate": "2020-04-22T16:04:07Z", "type": "commit"}, {"oid": "627d88e22e0a5c624b1df8093d9a031949e5b2f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/627d88e22e0a5c624b1df8093d9a031949e5b2f8", "message": "Merge pull request #22830 from pcnfernando/new-table-impl\n\nImprove lang lib table tests", "committedDate": "2020-04-23T07:08:33Z", "type": "commit"}, {"oid": "cc73a8101f85e0aa769c65b5c27d42883ce36165", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc73a8101f85e0aa769c65b5c27d42883ce36165", "message": "Fix doc gen throwing NPE in keys() function", "committedDate": "2020-04-23T07:44:41Z", "type": "commit"}, {"oid": "98c8d91bf166c107568f624d684b271b5ff0f486", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/98c8d91bf166c107568f624d684b271b5ff0f486", "message": "Use keys.size() check for maxIntKey initialization", "committedDate": "2020-04-23T07:44:41Z", "type": "commit"}, {"oid": "b01c688825c108e6ed4765742ddb647eeae1bfc4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b01c688825c108e6ed4765742ddb647eeae1bfc4", "message": "Add table testcases with var type", "committedDate": "2020-04-23T08:25:31Z", "type": "commit"}, {"oid": "defb4b588da735beedc50164b25d7f5f175e5405", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/defb4b588da735beedc50164b25d7f5f175e5405", "message": "Add negative test cases", "committedDate": "2020-04-23T09:05:21Z", "type": "commit"}, {"oid": "9788e9a51b48c91ca62b394ef5c193f1811e1094", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9788e9a51b48c91ca62b394ef5c193f1811e1094", "message": "Merge pull request #22853 from pcnfernando/new-table-impl\n\nResolve KeyType tsymbol for docerina", "committedDate": "2020-04-23T09:59:07Z", "type": "commit"}, {"oid": "4b9b742378af6ee4375c37ae3a312db5cf90eecc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b9b742378af6ee4375c37ae3a312db5cf90eecc", "message": "Merge pull request #22857 from mohanvive/new-table-impl\n\nAdd table testcases without contextually expected type", "committedDate": "2020-04-23T11:03:37Z", "type": "commit"}, {"oid": "abcda5a909e52e0d016acd9ad5b8d2de186cbef2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/abcda5a909e52e0d016acd9ad5b8d2de186cbef2", "message": "Add hash function to compile time for table constructor literals", "committedDate": "2020-04-23T12:06:47Z", "type": "commit"}, {"oid": "b1e69a99088faebfc003744d44ab455eeb5590df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b1e69a99088faebfc003744d44ab455eeb5590df", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-23T13:25:01Z", "type": "commit"}, {"oid": "c26d59fc717704e8777678d21a0867c5f6b03f1d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c26d59fc717704e8777678d21a0867c5f6b03f1d", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-23T14:14:23Z", "type": "commit"}, {"oid": "9f5ab6df46e0c6caafdb9d82f530fe6792f38a8d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9f5ab6df46e0c6caafdb9d82f530fe6792f38a8d", "message": "Merge pull request #22863 from mohanvive/new-table-impl\n\nSync master with new-table-impl branch", "committedDate": "2020-04-23T19:18:59Z", "type": "commit"}, {"oid": "79b71fd715d8b0d2155abca55876e60696ed5e48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79b71fd715d8b0d2155abca55876e60696ed5e48", "message": "Check for duplicate keys in compile time in table constructor expr", "committedDate": "2020-04-24T07:14:01Z", "type": "commit"}, {"oid": "9b370be952ca1ca2e22b3826ecc9fd1881dfd3e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b370be952ca1ca2e22b3826ecc9fd1881dfd3e9", "message": "Sync new-table-impl branch with master", "committedDate": "2020-04-24T13:11:21Z", "type": "commit"}, {"oid": "e0dd0c05a6daaf4a61eab3d2cc9f1d726491c2cc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0dd0c05a6daaf4a61eab3d2cc9f1d726491c2cc", "message": "Merge pull request #22878 from gimantha/new-table-impl\n\nReturn Compile time error when duplicate keys are found in table constructor expression", "committedDate": "2020-04-24T13:29:26Z", "type": "commit"}, {"oid": "34a9566daaaba6f08848d1d0c369dcbe26d08ffb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34a9566daaaba6f08848d1d0c369dcbe26d08ffb", "message": "Improve type checker validation for table constraint", "committedDate": "2020-04-24T14:30:00Z", "type": "commit"}, {"oid": "265a8aa4c1db1540b166dc89abc7e1b9f57ef2a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/265a8aa4c1db1540b166dc89abc7e1b9f57ef2a0", "message": "Fix key positions for negative test cases", "committedDate": "2020-04-24T15:12:03Z", "type": "commit"}, {"oid": "043de0a74863d38f3ebfefca92c38b23b03de822", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/043de0a74863d38f3ebfefca92c38b23b03de822", "message": "Merge pull request #22891 from pcnfernando/new-table-impl\n\nSync with upstream master", "committedDate": "2020-04-24T15:25:25Z", "type": "commit"}, {"oid": "e5273822b8cf0489002c6dc555403092c1182d12", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e5273822b8cf0489002c6dc555403092c1182d12", "message": "Merge pull request #22892 from mohanvive/new-table-impl-2\n\nTypechecker validation improvements", "committedDate": "2020-04-24T17:15:17Z", "type": "commit"}, {"oid": "787f779403ab1bc936ceee3327fc50fd6f8fb102", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/787f779403ab1bc936ceee3327fc50fd6f8fb102", "message": "Refactor Code", "committedDate": "2020-04-27T09:06:09Z", "type": "commit"}, {"oid": "7a9d8a6c7fc037d87c8bb4e6cc3ef285586bbf75", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a9d8a6c7fc037d87c8bb4e6cc3ef285586bbf75", "message": "Add logic for toString methods", "committedDate": "2020-04-27T09:09:38Z", "type": "commit"}, {"oid": "254055dc22cba8658106ddc26e59518d53162b3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/254055dc22cba8658106ddc26e59518d53162b3e", "message": "Always keep key specifier in LHS type", "committedDate": "2020-04-27T11:36:33Z", "type": "commit"}, {"oid": "14030744785053ea368f9b4909ea371e975c4c97", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/14030744785053ea368f9b4909ea371e975c4c97", "message": "Refactor code", "committedDate": "2020-04-27T11:46:16Z", "type": "commit"}, {"oid": "a21b9331dc825063bd7f0a3846a960ce5ec65e70", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a21b9331dc825063bd7f0a3846a960ce5ec65e70", "message": "Merge pull request #22912 from mohanvive/new-table-impl-2\n\nAdd logic for toString methods", "committedDate": "2020-04-27T12:46:04Z", "type": "commit"}, {"oid": "6c183c6dfa022538f59c54917599d84677f1bc39", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c183c6dfa022538f59c54917599d84677f1bc39", "message": "Fix javadoc issue", "committedDate": "2020-04-27T13:06:44Z", "type": "commit"}, {"oid": "3efabb3267851f64b9c3333f4c4498ba1353f5ab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3efabb3267851f64b9c3333f4c4498ba1353f5ab", "message": "Improve typechecker validation for table", "committedDate": "2020-04-27T15:49:31Z", "type": "commit"}, {"oid": "55a4bf572d71b1079bd2574529244a331d1addc6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/55a4bf572d71b1079bd2574529244a331d1addc6", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl-2\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/resources/compiler.properties", "committedDate": "2020-04-27T16:01:41Z", "type": "commit"}, {"oid": "7b244f976b29a0d3ab2067c71e1482c9accb076d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b244f976b29a0d3ab2067c71e1482c9accb076d", "message": "Merge pull request #22919 from gimantha/new-table-impl\n\nStore the key specifiers always in LHS table type when table is created using Table Constructor Expr", "committedDate": "2020-04-27T18:26:37Z", "type": "commit"}, {"oid": "12a2f9f375bf3b2aa0f549e5e6c6097ab6cea65f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/12a2f9f375bf3b2aa0f549e5e6c6097ab6cea65f", "message": "Fix testcases due to addition of table type", "committedDate": "2020-04-27T18:28:41Z", "type": "commit"}, {"oid": "e76b1f7550aabd6136fdabe8d4c63f42dd12c757", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e76b1f7550aabd6136fdabe8d4c63f42dd12c757", "message": "Fix test failure", "committedDate": "2020-04-28T04:05:40Z", "type": "commit"}, {"oid": "a31921ebdfa399c251c7a0c110e9ab183a2d75c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a31921ebdfa399c251c7a0c110e9ab183a2d75c5", "message": "Fix test failure", "committedDate": "2020-04-28T04:07:12Z", "type": "commit"}, {"oid": "485595caac5912c6c81f43cae6ba34bd09dd5951", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/485595caac5912c6c81f43cae6ba34bd09dd5951", "message": "Merge pull request #22923 from mohanvive/new-table-impl-2\n\nSync master with new-table-impl branch", "committedDate": "2020-04-28T05:29:03Z", "type": "commit"}, {"oid": "b35d970c3b002fb47efaee3949dcfe3f2d8ad3cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b35d970c3b002fb47efaee3949dcfe3f2d8ad3cd", "message": "Improve isAssignable logic of table", "committedDate": "2020-04-28T07:18:41Z", "type": "commit"}, {"oid": "9b3638779b7807aedc4a0db314cc062bbb1269b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b3638779b7807aedc4a0db314cc062bbb1269b7", "message": "Disable the testcase since JDBC impl is removed", "committedDate": "2020-04-28T07:19:04Z", "type": "commit"}, {"oid": "f776625d0bc66875fbe82dd274b658e1f89c7570", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f776625d0bc66875fbe82dd274b658e1f89c7570", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into gima-new-table-impl", "committedDate": "2020-04-28T07:19:22Z", "type": "commit"}, {"oid": "8194a0c60669e9862fda26fa72b15697d5709280", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8194a0c60669e9862fda26fa72b15697d5709280", "message": "Add testcase for Table isAssignable check", "committedDate": "2020-04-28T07:33:01Z", "type": "commit"}, {"oid": "972ae6dcd919914817f3ea2ef8f838b8bd897d12", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/972ae6dcd919914817f3ea2ef8f838b8bd897d12", "message": "Fix typechecker validations for table", "committedDate": "2020-04-28T10:25:12Z", "type": "commit"}, {"oid": "92abb205980441ff58660c043d7944d0f9e07f20", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/92abb205980441ff58660c043d7944d0f9e07f20", "message": "Fix type param issue in table key type", "committedDate": "2020-04-28T11:52:12Z", "type": "commit"}, {"oid": "fc37129219057a952b8c2042bd115b4ef3d06cc2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc37129219057a952b8c2042bd115b4ef3d06cc2", "message": "Refactor imports", "committedDate": "2020-04-28T11:52:43Z", "type": "commit"}, {"oid": "4e26ceafaa6f90bc865f7222a7a6f0298ca039e3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4e26ceafaa6f90bc865f7222a7a6f0298ca039e3", "message": "Merge branch 'new-table-impl-2' of git://github.com/mohanvive/ballerina-lang into mohanvive-new-table-impl-2\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "committedDate": "2020-04-28T12:26:18Z", "type": "commit"}, {"oid": "6b339f6db0b628e443699ce398f5ecb5ada50d3d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b339f6db0b628e443699ce398f5ecb5ada50d3d", "message": "Merge pull request #3 from gimantha/mohanvive-new-table-impl-2\n\nFix type param issue", "committedDate": "2020-04-28T12:29:18Z", "type": "commit"}, {"oid": "a2e0cd20ccc527db7b2031b7b8e99694fa3048b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a2e0cd20ccc527db7b2031b7b8e99694fa3048b0", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl-2", "committedDate": "2020-04-28T13:58:14Z", "type": "commit"}, {"oid": "ed235bab6856dd1fa6292070809c614b60ed4008", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed235bab6856dd1fa6292070809c614b60ed4008", "message": "Disable JDBC testcase due to removal of table", "committedDate": "2020-04-28T15:41:35Z", "type": "commit"}, {"oid": "3d6b5a7d129d96603c63ea0b7be837fdf5f000f0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d6b5a7d129d96603c63ea0b7be837fdf5f000f0", "message": "Merge pull request #22928 from mohanvive/new-table-impl-2\n\nImprove Table isAssignable check", "committedDate": "2020-04-28T17:47:56Z", "type": "commit"}, {"oid": "156c958ce5edb532d612d9914cb9fd8b8c2fe906", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/156c958ce5edb532d612d9914cb9fd8b8c2fe906", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl-2", "committedDate": "2020-04-29T03:51:42Z", "type": "commit"}, {"oid": "d41da4f793c2febd0c36fe27124b5e4ba2aa50b9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d41da4f793c2febd0c36fe27124b5e4ba2aa50b9", "message": "Add table module to compiler unit test", "committedDate": "2020-04-29T04:01:35Z", "type": "commit"}, {"oid": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aebf529a98ea18a5a6813dcf3b09f542172950c2", "message": "Merge pull request #22951 from mohanvive/new-table-impl-2\n\nSync master with new-table-impl branch", "committedDate": "2020-04-29T05:28:28Z", "type": "commit"}, {"oid": "8d6dc7596def77e0f7f746ac1741271b78c366d4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d6dc7596def77e0f7f746ac1741271b78c366d4", "message": "Add negative testcases for table functions", "committedDate": "2020-04-29T07:14:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNjI1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417116257", "bodyText": "in runtime, we have to check the key specifiers, not the key type @pcnfernando", "author": "gimantha", "createdAt": "2020-04-29T07:26:17Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -745,6 +748,19 @@ private static boolean checkIsStreamType(BType sourceType, BStreamType targetTyp\n                                unresolvedTypes);\n     }\n \n+    private static boolean checkIsTableType(BType sourceType, BTableType targetType, List<TypePair> unresolvedTypes) {\n+        if (sourceType.getTag() != TypeTags.TABLE_TAG) {\n+            return false;\n+        }\n+        boolean isTableType = checkContraints(((BTableType) sourceType).getConstrainedType(),\n+                targetType.getConstrainedType(), unresolvedTypes);\n+        if (isTableType && ((BTableType) sourceType).getKeyType() != null) {", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNDQyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417204429", "bodyText": "@gimantha", "author": "pcnfernando", "createdAt": "2020-04-29T10:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNjI1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "dce77c0dd1152995eb01c405370d9e82d4560f4b", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java\nindex f19b9eec532..4b43ed4d9cb 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java\n\n@@ -744,7 +744,7 @@ public class TypeChecker {\n         if (sourceType.getTag() != TypeTags.STREAM_TAG) {\n             return false;\n         }\n-        return checkContraints(((BStreamType) sourceType).getConstrainedType(), targetType.getConstrainedType(),\n+        return checkConstraints(((BStreamType) sourceType).getConstrainedType(), targetType.getConstrainedType(),\n                                unresolvedTypes);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMDUxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417120519", "bodyText": "Implement copy and frozenCopy methods.. @gimantha", "author": "mohanvive", "createdAt": "2020-04-29T07:35:01Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java", "diffHunk": "@@ -0,0 +1,438 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.jvm.values;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.IteratorUtils;\n+import org.ballerinalang.jvm.TableUtils;\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.types.BField;\n+import org.ballerinalang.jvm.types.BMapType;\n+import org.ballerinalang.jvm.types.BRecordType;\n+import org.ballerinalang.jvm.types.BTableType;\n+import org.ballerinalang.jvm.types.BTupleType;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.TypeTags;\n+import org.ballerinalang.jvm.values.api.BIterator;\n+import org.ballerinalang.jvm.values.api.BValueCreator;\n+import org.ballerinalang.jvm.values.freeze.FreezeUtils;\n+import org.ballerinalang.jvm.values.freeze.State;\n+import org.ballerinalang.jvm.values.freeze.Status;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.StringJoiner;\n+import java.util.UUID;\n+\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.OPERATION_NOT_SUPPORTED_IDENTIFIER;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.TABLE_HAS_A_VALUE_FOR_KEY_ERROR;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.TABLE_KEY_NOT_FOUND_ERROR;\n+\n+/**\n+ * The runtime representation of table.\n+ *\n+ * @param <K> the type of keys maintained by this map\n+ * @param <V> the type of mapped values\n+ *\n+ * @since 1.3.0\n+ */\n+public class TableValueImpl<K, V> implements TableValue<K, V> {\n+\n+    private BTableType type;\n+    private volatile Status freezeStatus = new Status(State.UNFROZEN);\n+    private BType iteratorNextReturnType;\n+    private LinkedHashMap<Integer, Map.Entry<K, V>> entries;\n+    private LinkedHashMap<Integer, V> values;\n+    private LinkedHashMap<Integer, K> keys;\n+    private String[] fieldNames = null;\n+    private ValueHolder valueHolder;\n+    private int maxIntKey = 0;\n+    private boolean nextKeySupported;\n+\n+    public TableValueImpl(BTableType type) {\n+        this.type = type;\n+        this.entries = new LinkedHashMap<>();\n+        this.keys = new LinkedHashMap<>();\n+        this.values = new LinkedHashMap<>();\n+        this.fieldNames = type.getFieldNames();\n+        if (type.getFieldNames() != null) {\n+            this.valueHolder = new KeyHashValueHolder();\n+        } else {\n+            this.valueHolder = new ValueHolder();\n+        }\n+    }\n+\n+    public TableValueImpl(BTableType type, ArrayValue data, ArrayValue fieldNames) {\n+        this(type);\n+        if (this.fieldNames == null) {\n+            this.fieldNames = fieldNames.getStringArray();\n+        }\n+\n+        addData(data);\n+    }\n+\n+    private void addData(ArrayValue data) {\n+        BIterator itr = data.getIterator();\n+        while (itr.hasNext()) {\n+            Object next = itr.next();\n+            valueHolder.addData((V) next);\n+        }\n+    }\n+\n+\n+    @Override\n+    public IteratorValue getIterator() {\n+        return new TableIterator<K, V>(entries.values().iterator());\n+    }\n+\n+    @Override\n+    public Object copy(Map<Object, Object> refs) {\n+        return null;\n+    }\n+\n+    @Override\n+    public Object frozenCopy(Map<Object, Object> refs) {\n+        return null;\n+    }", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc2NDExNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417764115", "bodyText": "created an issue for this. #23006", "author": "gimantha", "createdAt": "2020-04-30T05:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMDUxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "398df1977ee7898d384e05fc0aa82636b1b3bd98", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\nindex 4672a5d0557..8bdaa6e5a20 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\n\n@@ -103,7 +103,6 @@ public class TableValueImpl<K, V> implements TableValue<K, V> {\n         }\n     }\n \n-\n     @Override\n     public IteratorValue getIterator() {\n         return new TableIterator<K, V>(entries.values().iterator());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODA5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417128099", "bodyText": "@pcnfernando can you please check this method for map as constraint type.", "author": "mohanvive", "createdAt": "2020-04-29T07:49:43Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java", "diffHunk": "@@ -0,0 +1,438 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.jvm.values;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.IteratorUtils;\n+import org.ballerinalang.jvm.TableUtils;\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.types.BField;\n+import org.ballerinalang.jvm.types.BMapType;\n+import org.ballerinalang.jvm.types.BRecordType;\n+import org.ballerinalang.jvm.types.BTableType;\n+import org.ballerinalang.jvm.types.BTupleType;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.TypeTags;\n+import org.ballerinalang.jvm.values.api.BIterator;\n+import org.ballerinalang.jvm.values.api.BValueCreator;\n+import org.ballerinalang.jvm.values.freeze.FreezeUtils;\n+import org.ballerinalang.jvm.values.freeze.State;\n+import org.ballerinalang.jvm.values.freeze.Status;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.StringJoiner;\n+import java.util.UUID;\n+\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.OPERATION_NOT_SUPPORTED_IDENTIFIER;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.TABLE_HAS_A_VALUE_FOR_KEY_ERROR;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.TABLE_KEY_NOT_FOUND_ERROR;\n+\n+/**\n+ * The runtime representation of table.\n+ *\n+ * @param <K> the type of keys maintained by this map\n+ * @param <V> the type of mapped values\n+ *\n+ * @since 1.3.0\n+ */\n+public class TableValueImpl<K, V> implements TableValue<K, V> {\n+\n+    private BTableType type;\n+    private volatile Status freezeStatus = new Status(State.UNFROZEN);\n+    private BType iteratorNextReturnType;\n+    private LinkedHashMap<Integer, Map.Entry<K, V>> entries;\n+    private LinkedHashMap<Integer, V> values;\n+    private LinkedHashMap<Integer, K> keys;\n+    private String[] fieldNames = null;\n+    private ValueHolder valueHolder;\n+    private int maxIntKey = 0;\n+    private boolean nextKeySupported;\n+\n+    public TableValueImpl(BTableType type) {\n+        this.type = type;\n+        this.entries = new LinkedHashMap<>();\n+        this.keys = new LinkedHashMap<>();\n+        this.values = new LinkedHashMap<>();\n+        this.fieldNames = type.getFieldNames();\n+        if (type.getFieldNames() != null) {\n+            this.valueHolder = new KeyHashValueHolder();\n+        } else {\n+            this.valueHolder = new ValueHolder();\n+        }\n+    }\n+\n+    public TableValueImpl(BTableType type, ArrayValue data, ArrayValue fieldNames) {\n+        this(type);\n+        if (this.fieldNames == null) {\n+            this.fieldNames = fieldNames.getStringArray();\n+        }\n+\n+        addData(data);\n+    }\n+\n+    private void addData(ArrayValue data) {\n+        BIterator itr = data.getIterator();\n+        while (itr.hasNext()) {\n+            Object next = itr.next();\n+            valueHolder.addData((V) next);\n+        }\n+    }\n+\n+\n+    @Override\n+    public IteratorValue getIterator() {\n+        return new TableIterator<K, V>(entries.values().iterator());\n+    }\n+\n+    @Override\n+    public Object copy(Map<Object, Object> refs) {\n+        return null;\n+    }\n+\n+    @Override\n+    public Object frozenCopy(Map<Object, Object> refs) {\n+        return null;\n+    }\n+\n+    @Override\n+    public V get(Object key) {\n+        return valueHolder.getData((K) key);\n+    }\n+\n+    @Override\n+    public V put(K key, V value) {\n+        return valueHolder.putData(key, value);\n+    }\n+\n+    @Override\n+    public void add(V data) {\n+        valueHolder.addData(data);\n+    }\n+\n+    @Override\n+    public V remove(Object key) {\n+        return valueHolder.remove((K) key);\n+    }\n+\n+    @Override\n+    public boolean containsKey(Object key) {\n+        return valueHolder.containsKey((K) key);\n+    }\n+\n+    @Override\n+    public Set<Map.Entry<K, V>> entrySet() {\n+        return new LinkedHashSet<>(entries.values());\n+    }\n+\n+    @Override\n+    public Collection<V> values() {\n+        return values.values();\n+    }\n+\n+    @Override\n+    public void clear() {\n+        entries.clear();\n+        keys.clear();\n+        values.clear();\n+    }\n+\n+    @Override\n+    public V getOrThrow(Object key) {\n+        if (!containsKey(key)) {\n+            throw BallerinaErrors.createError(TABLE_KEY_NOT_FOUND_ERROR, \"cannot find key '\" + key + \"'\");\n+        }\n+        return this.get(key);\n+    }\n+\n+    public V removeOrThrow(Object key) {\n+        if (!containsKey(key)) {\n+            throw BallerinaErrors.createError(TABLE_KEY_NOT_FOUND_ERROR, \"cannot find key '\" + key + \"'\");\n+        }\n+        return this.remove(key);\n+    }\n+\n+    public int getNextKey() {\n+        if (!nextKeySupported) {\n+            throw BallerinaErrors.createError(OPERATION_NOT_SUPPORTED_IDENTIFIER,\n+                    \"Defined key sequence is not supported with nextKey(). \"\n+                            + \"The key sequence should only have an Integer field.\");\n+        }\n+        return keys.size() == 0 ? 0 : (this.maxIntKey + 1);\n+    }\n+\n+    @Override\n+    public V fillAndGet(Object key) {\n+        return null;\n+    }\n+\n+    @Override\n+    public K[] getKeys() {\n+        return (K[]) keys.values().toArray(new Object[]{});\n+    }\n+\n+    @Override\n+    public int size() {\n+        return entries.size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return entries.isEmpty();\n+    }\n+\n+    @Override\n+    public boolean isFrozen() {\n+        return freezeStatus.isFrozen();\n+    }\n+\n+    @Override\n+    public void attemptFreeze(Status freezeStatus) {\n+        if (FreezeUtils.isOpenForFreeze(this.freezeStatus, freezeStatus)) {\n+            this.freezeStatus = freezeStatus;\n+            this.values().forEach(val -> {\n+                if (val instanceof RefValue) {\n+                    ((RefValue) val).attemptFreeze(freezeStatus);\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void freezeDirect() {\n+        if (isFrozen()) {\n+            return;\n+        }\n+\n+        this.freezeStatus.setFrozen();\n+        this.values().forEach(val -> {\n+            if (val instanceof RefValue) {\n+                ((RefValue) val).freezeDirect();\n+            }\n+        });\n+    }\n+\n+    public String stringValue() {\n+        Iterator<Map.Entry<Integer, Map.Entry<K, V>>> itr = entries.entrySet().iterator();\n+        return createStringValueDataEntry(itr);\n+    }\n+\n+    private String createStringValueDataEntry(Iterator<Map.Entry<Integer, Map.Entry<K, V>>> itr) {\n+        StringJoiner sj = new StringJoiner(\"\\n\");\n+        while (itr.hasNext()) {\n+            Map.Entry<Integer, Map.Entry<K, V>> struct = itr.next();\n+            sj.add(struct.getValue().getValue().toString());\n+        }\n+        return sj.toString();\n+    }\n+\n+    private BType getTableConstraintField(BType constraintType, String fieldName) {\n+        if (constraintType.getTag() == TypeTags.RECORD_TYPE_TAG) {\n+            Map<String, BField> fieldList = ((BRecordType) constraintType).getFields();\n+            return fieldList.get(fieldName).getFieldType();\n+        } else if (constraintType.getTag() == TypeTags.MAP_TAG) {\n+            return ((BMapType) constraintType).getConstrainedType();\n+        }", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc2NDIwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417764205", "bodyText": "created an issue for this.\n#23006", "author": "gimantha", "createdAt": "2020-04-30T05:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODA5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "398df1977ee7898d384e05fc0aa82636b1b3bd98", "chunk": "diff --git a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\nindex 4672a5d0557..8bdaa6e5a20 100644\n--- a/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\n+++ b/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TableValueImpl.java\n\n@@ -103,7 +103,6 @@ public class TableValueImpl<K, V> implements TableValue<K, V> {\n         }\n     }\n \n-\n     @Override\n     public IteratorValue getIterator() {\n         return new TableIterator<K, V>(entries.values().iterator());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNTM1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417135358", "bodyText": "Validate whether we need another variable for MultiKeyExpression. @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:03:21Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/IndexBasedAccessNode.java", "diffHunk": "@@ -27,4 +27,6 @@\n     ExpressionNode getExpression();\n \n     ExpressionNode getIndex();\n+\n+    TableMultiKeyExpressionNode getMultiKeyExpr();", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzMzI0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417233247", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNTM1OA=="}], "type": "inlineReview", "revised_code": {"commit": "398df1977ee7898d384e05fc0aa82636b1b3bd98", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/IndexBasedAccessNode.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/IndexBasedAccessNode.java\nindex e056acb63cf..0c916834bf7 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/IndexBasedAccessNode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/IndexBasedAccessNode.java\n\n@@ -27,6 +27,4 @@ public interface IndexBasedAccessNode extends VariableReferenceNode {\n     ExpressionNode getExpression();\n \n     ExpressionNode getIndex();\n-\n-    TableMultiKeyExpressionNode getMultiKeyExpr();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjExMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417136112", "bodyText": "Add description for table node.\nChange it to 1.3.0 @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:04:49Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/types/TableTypeNode.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.model.tree.types;\n+\n+import org.ballerinalang.model.tree.TableKeySpecifierNode;\n+import org.ballerinalang.model.tree.TableKeyTypeConstraintNode;\n+\n+/**\n+ * table&lt;Person&gt; key(...);.\n+ *\n+ * @since 1.2.0", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzMzM1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417233356", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjExMg=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/types/TableTypeNode.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/types/TableTypeNode.java\nindex c7ba653cdf9..d010396a421 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/types/TableTypeNode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/types/TableTypeNode.java\n\n@@ -21,9 +21,9 @@ import org.ballerinalang.model.tree.TableKeySpecifierNode;\n import org.ballerinalang.model.tree.TableKeyTypeConstraintNode;\n \n /**\n- * table&lt;Person&gt; key(...);.\n+ * {@code TableTypeNode} represents a table type node in Ballerina.\n  *\n- * @since 1.2.0\n+ * @since 1.3.0\n  */\n public interface TableTypeNode extends TypeNode {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjMwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417136306", "bodyText": "Fix the year. @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:05:10Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/types/TableType.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzMzQ1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417233453", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/types/TableType.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/types/TableType.java\nindex e375f4aac00..a34e2fae2bf 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/types/TableType.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/model/types/TableType.java\n\n@@ -1,5 +1,5 @@\n /*\n- *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n  *\n  *  WSO2 Inc. licenses this file to you under the Apache License,\n  *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNzM4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417137380", "bodyText": "Rename the diagnostic code @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:07:11Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java", "diffHunk": "@@ -411,6 +405,20 @@\n     ERROR_TYPE_EXPECTED(\"error.type.expected\"),\n     MISSING_REQUIRED_METHOD_NEXT(\"missing.required.method.next\"),\n \n+    // Table related codes\n+    TABLE_CONSTRAINT_INVALID_SUBTYPE(\"invalid.stream.constraint.subtype\"),", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzMzUxMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417233510", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNzM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java b/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\nindex 976642746f9..7200ecd057c 100644\n--- a/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticCode.java\n\n@@ -406,7 +406,7 @@ public enum DiagnosticCode {\n     MISSING_REQUIRED_METHOD_NEXT(\"missing.required.method.next\"),\n \n     // Table related codes\n-    TABLE_CONSTRAINT_INVALID_SUBTYPE(\"invalid.stream.constraint.subtype\"),\n+    TABLE_CONSTRAINT_INVALID_SUBTYPE(\"invalid.table.constraint.subtype\"),\n     TABLE_KEY_SPECIFIER_MISMATCH(\"table.key.specifier.mismatch\"),\n     KEY_SPECIFIER_SIZE_MISMATCH_WITH_KEY_CONSTRAINT(\"key.specifier.size.mismatch.with.key.constraint\"),\n     KEY_SPECIFIER_MISMATCH_WITH_KEY_CONSTRAINT(\"key.specifier.mismatch.with.key.constraint\"),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MjM3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417152371", "bodyText": "Remove this Todo. @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:35:00Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -546,6 +547,11 @@ private boolean isAssignable(BType source, BType target, Set<TypePair> unresolve\n                     unresolvedTypes);\n         }\n \n+        //TODO Need to check the key specifier", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNDc4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417234783", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MjM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "76842f7d324f9939e98bce6dc1cefa15fe0eb6ed", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\nindex 53a98cabdbb..f40f901599c 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n\n@@ -547,7 +547,6 @@ public class Types {\n                     unresolvedTypes);\n         }\n \n-        //TODO Need to check the key specifier\n         if (targetTag == TypeTags.TABLE && sourceTag == TypeTags.TABLE) {\n             return isAssignableTableType((BTableType) source, (BTableType) target);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MzQxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417153415", "bodyText": "Add description @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:36:51Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableConstructorExpr.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.TableKeySpecifierNode;\n+import org.ballerinalang.model.tree.expressions.RecordLiteralNode;\n+import org.ballerinalang.model.tree.expressions.TableConstructorExprNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+import org.wso2.ballerinalang.compiler.tree.BLangTableKeySpecifier;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * BLangTableConstructorExpr class.", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNDg5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417234897", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MzQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableConstructorExpr.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableConstructorExpr.java\nindex a4c64d69c8c..8fc97cb316b 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableConstructorExpr.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableConstructorExpr.java\n\n@@ -28,9 +28,8 @@ import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * BLangTableConstructorExpr class.\n+ * Implementation of Table constructor expression.\n  *\n- * @see BLangTableConstructorExpr\n  * @since 1.3.0\n  */\n public class BLangTableConstructorExpr extends BLangExpression implements TableConstructorExprNode {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1Mzc3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417153772", "bodyText": "Add descriptio. @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:37:28Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableMultiKeyExpr.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.TableMultiKeyExpressionNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNDg0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417234841", "bodyText": "Fixed..", "author": "mohanvive", "createdAt": "2020-04-29T11:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1Mzc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableMultiKeyExpr.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableMultiKeyExpr.java\nindex 0e2f25471b4..1a9581b2b86 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableMultiKeyExpr.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangTableMultiKeyExpr.java\n\n@@ -25,6 +25,8 @@ import java.util.ArrayList;\n import java.util.List;\n \n /**\n+ * Represents an expression which can hold expressions related to table member access.\n+ *\n  * @since 1.3.0\n  */\n public class BLangTableMultiKeyExpr extends BLangAccessExpression implements TableMultiKeyExpressionNode {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MzkxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417153918", "bodyText": "Add description @mohanvive", "author": "mohanvive", "createdAt": "2020-04-29T08:37:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/types/BLangTableTypeNode.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.types;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.TableKeySpecifierNode;\n+import org.ballerinalang.model.tree.TableKeyTypeConstraintNode;\n+import org.ballerinalang.model.tree.types.TableTypeNode;\n+import org.ballerinalang.model.tree.types.TypeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+import org.wso2.ballerinalang.compiler.tree.BLangTableKeySpecifier;\n+import org.wso2.ballerinalang.compiler.tree.BLangTableKeyTypeConstraint;\n+\n+/**", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNTM5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417235395", "bodyText": "Fixed.", "author": "mohanvive", "createdAt": "2020-04-29T11:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MzkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/types/BLangTableTypeNode.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/types/BLangTableTypeNode.java\nindex c96ab68812e..c0d11abd80d 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/types/BLangTableTypeNode.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/types/BLangTableTypeNode.java\n\n@@ -27,6 +27,8 @@ import org.wso2.ballerinalang.compiler.tree.BLangTableKeySpecifier;\n import org.wso2.ballerinalang.compiler.tree.BLangTableKeyTypeConstraint;\n \n /**\n+ * {@code BLangTableTypeNode} represents a table type node in Ballerina.\n+ *\n  * @since 1.3.0\n  */\n public class BLangTableTypeNode extends BLangType implements TableTypeNode {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3ODE4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417178189", "bodyText": "Check keyType being created from Key Specifier", "author": "pcnfernando", "createdAt": "2020-04-29T09:20:08Z", "path": "langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/GetKeys.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.table;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.types.BArrayType;\n+import org.ballerinalang.jvm.types.BTableType;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.BTypes;\n+import org.ballerinalang.jvm.values.ArrayValue;\n+import org.ballerinalang.jvm.values.ArrayValueImpl;\n+import org.ballerinalang.jvm.values.TableValueImpl;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+/**\n+ * Extern function to get key arrays from the table.\n+ * ballerina.model.table:keys()\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.table\",\n+        functionName = \"keys\",\n+        args = {@Argument(name = \"tbl\", type = TypeKind.TABLE)},\n+        returnType = {@ReturnType(type = TypeKind.ARRAY, elementType = TypeKind.ANYDATA)},\n+        isPublic = true\n+)\n+public class GetKeys {\n+\n+    public static ArrayValue keys(Strand strand, TableValueImpl tbl) {\n+        BType tableKeyType = ((BTableType) tbl.getType()).getKeyType();", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwMTk5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417201997", "bodyText": "@gimantha", "author": "pcnfernando", "createdAt": "2020-04-29T10:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3ODE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a27f2e0e62201be1d0bd571af5c3613ec2b400d9", "chunk": "diff --git a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/GetKeys.java b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/GetKeys.java\nindex 6f719458753..b7d8e46da6f 100644\n--- a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/GetKeys.java\n+++ b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/GetKeys.java\n\n@@ -34,6 +34,8 @@ import org.ballerinalang.natives.annotations.ReturnType;\n /**\n  * Extern function to get key arrays from the table.\n  * ballerina.model.table:keys()\n+ *\n+ * @since 1.3.0\n  */\n @BallerinaFunction(\n         orgName = \"ballerina\", packageName = \"lang.table\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3OTg5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417179890", "bodyText": "add @SInCE version", "author": "pcnfernando", "createdAt": "2020-04-29T09:23:06Z", "path": "langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/HasKey.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.table;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.TableValueImpl;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+/**\n+ * Extern function to check existence of key.\n+ * ballerina.model.table:hasKey(KeyType)\n+ */", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a27f2e0e62201be1d0bd571af5c3613ec2b400d9", "chunk": "diff --git a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/HasKey.java b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/HasKey.java\nindex 2eafd1c117a..bd03c82a1ce 100644\n--- a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/HasKey.java\n+++ b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/HasKey.java\n\n@@ -28,6 +28,8 @@ import org.ballerinalang.natives.annotations.ReturnType;\n /**\n  * Extern function to check existence of key.\n  * ballerina.model.table:hasKey(KeyType)\n+ *\n+ * @since 1.3.0\n  */\n @BallerinaFunction(\n         orgName = \"ballerina\", packageName = \"lang.table\", functionName = \"hasKey\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NDg0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22874#discussion_r417194847", "bodyText": "Remove single columns", "author": "pcnfernando", "createdAt": "2020-04-29T09:50:05Z", "path": "langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/ToArray.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.table;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.types.BArrayType;\n+import org.ballerinalang.jvm.types.BTableType;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.TypeTags;\n+import org.ballerinalang.jvm.values.ArrayValue;\n+import org.ballerinalang.jvm.values.ArrayValueImpl;\n+import org.ballerinalang.jvm.values.TableValueImpl;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Function for returning the values of the table as an array. T[] vals = tbl.toArray();\n+ *\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.table\",\n+        functionName = \"toArray\",\n+        args = {@Argument(name = \"tbl\", type = TypeKind.TABLE)},\n+        returnType = {@ReturnType(type = TypeKind.ARRAY, elementType = TypeKind.ANYDATA)},\n+        isPublic = true\n+)\n+public class ToArray {\n+\n+    public static ArrayValue toArray(Strand strand, TableValueImpl tbl) {\n+        BType constrainedType = ((BTableType) tbl.getType()).getConstrainedType();\n+\n+        Collection values = tbl.values();\n+        int size = values.size();\n+        int i = 0;\n+        switch (constrainedType.getTag()) {\n+            case TypeTags.INT_TAG:", "originalCommit": "aebf529a98ea18a5a6813dcf3b09f542172950c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a27f2e0e62201be1d0bd571af5c3613ec2b400d9", "chunk": "diff --git a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/ToArray.java b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/ToArray.java\nindex 5c56cc3d5a7..7be64f2b4dc 100644\n--- a/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/ToArray.java\n+++ b/langlib/lang.table/src/main/java/org/ballerinalang/langlib/table/ToArray.java\n\n@@ -22,7 +22,6 @@ import org.ballerinalang.jvm.scheduling.Strand;\n import org.ballerinalang.jvm.types.BArrayType;\n import org.ballerinalang.jvm.types.BTableType;\n import org.ballerinalang.jvm.types.BType;\n-import org.ballerinalang.jvm.types.TypeTags;\n import org.ballerinalang.jvm.values.ArrayValue;\n import org.ballerinalang.jvm.values.ArrayValueImpl;\n import org.ballerinalang.jvm.values.TableValueImpl;\n"}}, {"oid": "a27f2e0e62201be1d0bd571af5c3613ec2b400d9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a27f2e0e62201be1d0bd571af5c3613ec2b400d9", "message": "Add table function introduced version as a comment", "committedDate": "2020-04-29T10:09:52Z", "type": "commit"}, {"oid": "398df1977ee7898d384e05fc0aa82636b1b3bd98", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/398df1977ee7898d384e05fc0aa82636b1b3bd98", "message": "Refactor IndexBasedAccess node as per review feedback", "committedDate": "2020-04-29T10:49:47Z", "type": "commit"}, {"oid": "9439a3dcf4b000902323e8228b2c45d0cac121fa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9439a3dcf4b000902323e8228b2c45d0cac121fa", "message": "Add modifications as per review comments", "committedDate": "2020-04-29T10:58:31Z", "type": "commit"}, {"oid": "06f3cb2ab0067824a937bafed01c9616b419b8f6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06f3cb2ab0067824a937bafed01c9616b419b8f6", "message": "Merge pull request #22967 from mohanvive/new-table-impl-2\n\nAdd modifications as per review comments", "committedDate": "2020-04-29T11:03:45Z", "type": "commit"}, {"oid": "76842f7d324f9939e98bce6dc1cefa15fe0eb6ed", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76842f7d324f9939e98bce6dc1cefa15fe0eb6ed", "message": "Remove invalida todo flag", "committedDate": "2020-04-29T11:06:28Z", "type": "commit"}, {"oid": "79200c88a5b29f33e0d1ea69851c691e17d08d3f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79200c88a5b29f33e0d1ea69851c691e17d08d3f", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl-2", "committedDate": "2020-04-29T11:07:28Z", "type": "commit"}, {"oid": "dce77c0dd1152995eb01c405370d9e82d4560f4b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dce77c0dd1152995eb01c405370d9e82d4560f4b", "message": "Fix code review changes", "committedDate": "2020-04-29T14:10:06Z", "type": "commit"}, {"oid": "f3bdaa46d7076322bf4e8c9fd9bbd250ee3c99ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3bdaa46d7076322bf4e8c9fd9bbd250ee3c99ac", "message": "Merge pull request #22978 from gimantha/new-table-impl\n\nDo code review fixes", "committedDate": "2020-04-29T17:18:43Z", "type": "commit"}, {"oid": "34ff65fa8358f09efb3c39e1ebdbec0f2074046d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34ff65fa8358f09efb3c39e1ebdbec0f2074046d", "message": "Add initial table type compiler side implementation", "committedDate": "2020-04-08T05:37:42Z", "type": "commit"}, {"oid": "c2bfcb19f907444a4ab9f8a7ecd4cc6a8f0be75f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c2bfcb19f907444a4ab9f8a7ecd4cc6a8f0be75f", "message": "Merge pull request #22510 from mohanvive/new-table-impl\n\nAdd initial table type compiler side implementation", "committedDate": "2020-04-08T05:42:45Z", "type": "commit"}, {"oid": "51a311e1e1cd4043cd13e9a42f8bbb679456a892", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/51a311e1e1cd4043cd13e9a42f8bbb679456a892", "message": "Add initial version of runtime classes related to tables", "committedDate": "2020-04-08T10:46:44Z", "type": "commit"}, {"oid": "e93450a1be3bd31e3b931103dc04acef498683c4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e93450a1be3bd31e3b931103dc04acef498683c4", "message": "Add table constructor initial implementation", "committedDate": "2020-04-08T15:01:01Z", "type": "commit"}, {"oid": "860ae067c37dd4b437a32e6edf20ebc735fc0736", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/860ae067c37dd4b437a32e6edf20ebc735fc0736", "message": "Merge pull request #22526 from mohanvive/new-table-impl\n\nAdd table constructor initial implementation", "committedDate": "2020-04-09T04:27:22Z", "type": "commit"}, {"oid": "d6433b3250b991c06d5a6675e876a142954e03e2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6433b3250b991c06d5a6675e876a142954e03e2", "message": "Add table type to JVMGen", "committedDate": "2020-04-09T04:37:07Z", "type": "commit"}, {"oid": "5458ddfc424b4afb267e6d75c655c21ffaaf0759", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5458ddfc424b4afb267e6d75c655c21ffaaf0759", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-09T04:37:39Z", "type": "commit"}, {"oid": "68cbc2bef4b5236bdb698f87b2711f8f38a82a10", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/68cbc2bef4b5236bdb698f87b2711f8f38a82a10", "message": "Add constructorExpr logic to runtime", "committedDate": "2020-04-09T13:22:25Z", "type": "commit"}, {"oid": "b19886d096b0c75cffbcf74c563cd98bd1090634", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b19886d096b0c75cffbcf74c563cd98bd1090634", "message": "Add a simple test", "committedDate": "2020-04-09T13:41:08Z", "type": "commit"}, {"oid": "0c46fd873cead21eb9a35cd83719385cb4399d91", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c46fd873cead21eb9a35cd83719385cb4399d91", "message": "Make key-constraint as optional", "committedDate": "2020-04-09T14:01:07Z", "type": "commit"}, {"oid": "a3923b63dd3b1397cc0e722bac382484c6e1b3c8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3923b63dd3b1397cc0e722bac382484c6e1b3c8", "message": "Merge pull request #22552 from mohanvive/new-table-impl\n\n[Table type] Make key-constraint as optional", "committedDate": "2020-04-09T14:42:56Z", "type": "commit"}, {"oid": "d454aedb6863ec22078eb0739f5e29d1d11a1b77", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d454aedb6863ec22078eb0739f5e29d1d11a1b77", "message": "Fix NPE when key specifier is not available", "committedDate": "2020-04-10T07:29:02Z", "type": "commit"}, {"oid": "dde124f7239229c7cf0a262660e7b79a4913fafe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dde124f7239229c7cf0a262660e7b79a4913fafe", "message": "Add typechecker improvements and negative test cases", "committedDate": "2020-04-10T18:26:28Z", "type": "commit"}, {"oid": "bb707c4a2f78fc6c4be54949472be67ac69573e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb707c4a2f78fc6c4be54949472be67ac69573e7", "message": "Add improvements related to table access expression", "committedDate": "2020-04-14T11:45:06Z", "type": "commit"}, {"oid": "ba0556c9020e8fb0bcbbebcc176e8c159bff0c24", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba0556c9020e8fb0bcbbebcc176e8c159bff0c24", "message": "Merge pull request #22623 from mohanvive/new-table-impl\n\nAdd improvements related to table access expression", "committedDate": "2020-04-15T06:47:25Z", "type": "commit"}, {"oid": "9ee4c0015faddfecb00a383e3a87cb436f9e84b2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ee4c0015faddfecb00a383e3a87cb436f9e84b2", "message": "Add additional type checker compile time validations", "committedDate": "2020-04-15T09:38:10Z", "type": "commit"}, {"oid": "0a9fe8005d15e044ea6e775d80cab6ae499f264a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0a9fe8005d15e044ea6e775d80cab6ae499f264a", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-15T09:38:37Z", "type": "commit"}, {"oid": "560eaf65ab797215c07d6fba42670f05cc8d717d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/560eaf65ab797215c07d6fba42670f05cc8d717d", "message": "Fix Key hashing issue in TableValue", "committedDate": "2020-04-15T13:00:01Z", "type": "commit"}, {"oid": "3d5581f3126f409e0e2d12411d6c845ca37e34d2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d5581f3126f409e0e2d12411d6c845ca37e34d2", "message": "Add multikey member access support for tables", "committedDate": "2020-04-15T14:55:03Z", "type": "commit"}, {"oid": "3d093249fe2843cc815fe6b8e76ff2ebd32c4d5d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d093249fe2843cc815fe6b8e76ff2ebd32c4d5d", "message": "Fix testcase failures", "committedDate": "2020-04-15T16:36:15Z", "type": "commit"}, {"oid": "06c13fcca6ad85078ec8419623151588deeb2410", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06c13fcca6ad85078ec8419623151588deeb2410", "message": "Fix testcase failures", "committedDate": "2020-04-15T16:44:40Z", "type": "commit"}, {"oid": "467458392deee1c6a9ae33a227d208522c0c4d36", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/467458392deee1c6a9ae33a227d208522c0c4d36", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-build-fix\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmTypeGen.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.tokens\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.tokens\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java\n#\tcompiler/ballerina-lang/src/main/resources/grammar/BallerinaLexer.g4", "committedDate": "2020-04-15T17:10:41Z", "type": "commit"}, {"oid": "5f860c371923a819aa5d9e307b67bb21967031c7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5f860c371923a819aa5d9e307b67bb21967031c7", "message": "Disable SQL testcase which depends on JDBC module", "committedDate": "2020-04-15T18:15:07Z", "type": "commit"}, {"oid": "2aadec367cfb1b5d1d57f766305c486163b33a27", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2aadec367cfb1b5d1d57f766305c486163b33a27", "message": "Revert temp fix provided by maryam", "committedDate": "2020-04-15T18:15:49Z", "type": "commit"}, {"oid": "629c2c04f4fc837ef8dc65f02a6caaa288f948ea", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/629c2c04f4fc837ef8dc65f02a6caaa288f948ea", "message": "Revert temp fix provided by maryam", "committedDate": "2020-04-15T18:43:10Z", "type": "commit"}, {"oid": "19fabeee4bb9faa2f0d7b21af2619649515c5455", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19fabeee4bb9faa2f0d7b21af2619649515c5455", "message": "Disable SQL testcase which depends on JDBC module", "committedDate": "2020-04-15T18:43:26Z", "type": "commit"}, {"oid": "baff6003f2691f1aaaef59a8baee3d73b3a67a72", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/baff6003f2691f1aaaef59a8baee3d73b3a67a72", "message": "Merge pull request #22653 from mohanvive/new-table-impl\n\nMultikey index support for table + Test case fixes", "committedDate": "2020-04-15T18:44:40Z", "type": "commit"}, {"oid": "e69efa4afdafb20d3ee64e7a4149b5c1274454da", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e69efa4afdafb20d3ee64e7a4149b5c1274454da", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-build-fix", "committedDate": "2020-04-16T03:23:49Z", "type": "commit"}, {"oid": "e4f53fbb3cbc4992c548a4ddf003513da660ad08", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4f53fbb3cbc4992c548a4ddf003513da660ad08", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-build-fix", "committedDate": "2020-04-16T03:24:19Z", "type": "commit"}, {"oid": "4304239d23bdb99f7b5319f6b2166f65c74f1fe4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4304239d23bdb99f7b5319f6b2166f65c74f1fe4", "message": "Fix the checktyle and javadoc issues", "committedDate": "2020-04-16T04:38:09Z", "type": "commit"}, {"oid": "4867b5559d14e3ac601c08996b0433485817f918", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4867b5559d14e3ac601c08996b0433485817f918", "message": "Merge pull request #22659 from mohanvive/new-table-impl\n\nFix the checktsyle and javadoc issues", "committedDate": "2020-04-16T04:43:34Z", "type": "commit"}, {"oid": "9063cd1bb05297d9ddc9fbc35c85ecccee4545c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9063cd1bb05297d9ddc9fbc35c85ecccee4545c1", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-build-fix", "committedDate": "2020-04-16T04:46:45Z", "type": "commit"}, {"oid": "ef2b7047146916eb368bd57d54395d29ded66b6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef2b7047146916eb368bd57d54395d29ded66b6e", "message": "Fix conflicts", "committedDate": "2020-04-16T07:36:11Z", "type": "commit"}, {"oid": "4d9a19bdb3630847b2bb7c0a3ff251c1a5448e7c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4d9a19bdb3630847b2bb7c0a3ff251c1a5448e7c", "message": "Fix checkstyle issues", "committedDate": "2020-04-16T08:17:04Z", "type": "commit"}, {"oid": "2564dac9e0a6011c48cd510bbc0aeb6821d590fd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2564dac9e0a6011c48cd510bbc0aeb6821d590fd", "message": "Return 0 for null values for hashcodes", "committedDate": "2020-04-16T08:35:41Z", "type": "commit"}, {"oid": "4cf4676c703f49185fed5b5a3e7dde56daf238ce", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4cf4676c703f49185fed5b5a3e7dde56daf238ce", "message": "Merge pull request #22645 from gimantha/new-table-impl\n\nFix Key hashing issue in TableValue", "committedDate": "2020-04-16T08:40:00Z", "type": "commit"}, {"oid": "a12477b25d23c4f331566cf5b7e0b34a5b9b7113", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a12477b25d23c4f331566cf5b7e0b34a5b9b7113", "message": "Merge pull request #22652 from mohanvive/new-table-build-fix\n\nMultikey index support for table + merge master", "committedDate": "2020-04-16T11:06:48Z", "type": "commit"}, {"oid": "ebc97dad4863ade537ec45d7823947bae8348011", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ebc97dad4863ade537ec45d7823947bae8348011", "message": "Add negative testcase for invalid constraint type", "committedDate": "2020-04-16T11:07:50Z", "type": "commit"}, {"oid": "62dcddb0efe5416b3a6f4241f03fb4dd97dc9c82", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/62dcddb0efe5416b3a6f4241f03fb4dd97dc9c82", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-16T11:08:18Z", "type": "commit"}, {"oid": "8792040b66ede911a78add4fdc5e7d74ec9360c8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8792040b66ede911a78add4fdc5e7d74ec9360c8", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-16T11:09:10Z", "type": "commit"}, {"oid": "401bb4c59f24340b717afde5932974635defe34e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/401bb4c59f24340b717afde5932974635defe34e", "message": "Add initial impl of table store and table load", "committedDate": "2020-04-16T14:12:54Z", "type": "commit"}, {"oid": "3e1f8be223c9ee0106d9a303d773f98415909c57", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3e1f8be223c9ee0106d9a303d773f98415909c57", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-16T14:13:08Z", "type": "commit"}, {"oid": "79ff4df0e7b8a82e98804d740f9924beb5d4bdfd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79ff4df0e7b8a82e98804d740f9924beb5d4bdfd", "message": "Revert \"Fix Key hashing issue in TableValue\"", "committedDate": "2020-04-16T14:43:03Z", "type": "commit"}, {"oid": "36c008feb0002e8f37fef3d235f8436cb552b9df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36c008feb0002e8f37fef3d235f8436cb552b9df", "message": "Merge pull request #22685 from ballerina-platform/revert-22645-new-table-impl\n\nRevert \"Fix Key hashing issue in TableValue\"", "committedDate": "2020-04-16T14:47:31Z", "type": "commit"}, {"oid": "dbbf01f538c933f5330b7a043aff101f4183b7c0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbbf01f538c933f5330b7a043aff101f4183b7c0", "message": "Merge pull request #22677 from mohanvive/new-table-impl\n\nsync with master", "committedDate": "2020-04-16T14:48:40Z", "type": "commit"}, {"oid": "bfadc71ddb339c44e47b3b5abfb17fc604bbce30", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bfadc71ddb339c44e47b3b5abfb17fc604bbce30", "message": "Fix hashing issue", "committedDate": "2020-04-17T12:04:47Z", "type": "commit"}, {"oid": "4853802c7dd3735373b5c0c7fa9f07942f3e1355", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4853802c7dd3735373b5c0c7fa9f07942f3e1355", "message": "Fix documentation issues", "committedDate": "2020-04-17T12:09:04Z", "type": "commit"}, {"oid": "6937981f79fea00a4f4a81adcfb6950ac12084ca", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6937981f79fea00a4f4a81adcfb6950ac12084ca", "message": "Resolve conflicts", "committedDate": "2020-04-17T12:11:03Z", "type": "commit"}, {"oid": "f3a9c95361a985bb3469895868457c0329e59bb6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3a9c95361a985bb3469895868457c0329e59bb6", "message": "Add positive and negative testcases for table type", "committedDate": "2020-04-17T12:35:24Z", "type": "commit"}, {"oid": "9e5170ae2a08a87fb55064dda18dc6d61e1623c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e5170ae2a08a87fb55064dda18dc6d61e1623c9", "message": "Remove unused diagnostic codes", "committedDate": "2020-04-17T12:36:03Z", "type": "commit"}, {"oid": "19edce5ed876ffebe71b516b11802428b2718b19", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19edce5ed876ffebe71b516b11802428b2718b19", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl\n\n# Conflicts:\n#\ttests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/table/BTableValueTest.java\n#\ttests/jballerina-unit-test/src/test/resources/test-src/types/table/table-value.bal", "committedDate": "2020-04-17T13:01:24Z", "type": "commit"}, {"oid": "cd8a69c25138fabcca5489cf68a971f063f8bcef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd8a69c25138fabcca5489cf68a971f063f8bcef", "message": "Merge pull request #22735 from mohanvive/new-table-impl\n\nAdd positive and negative testcases for table type", "committedDate": "2020-04-17T13:03:35Z", "type": "commit"}, {"oid": "ceda6802608e0c94d0f77a01f4f39edfcb28d7d2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ceda6802608e0c94d0f77a01f4f39edfcb28d7d2", "message": "Improve BTableValue test cases", "committedDate": "2020-04-17T13:35:30Z", "type": "commit"}, {"oid": "c579aa12488b3b9d2da847e6927fc1c092feffb5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c579aa12488b3b9d2da847e6927fc1c092feffb5", "message": "Merge pull request #22736 from mohanvive/new-table-impl\n\nImprove BTableValue test cases", "committedDate": "2020-04-17T13:36:45Z", "type": "commit"}, {"oid": "80cdfb6af14d078aa5c7e2430ddc1d8f87bb1c38", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80cdfb6af14d078aa5c7e2430ddc1d8f87bb1c38", "message": "Fix tests", "committedDate": "2020-04-17T14:14:36Z", "type": "commit"}, {"oid": "6cc2feb8bb5ac61fcae58cc7a90ca6bfa4157181", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cc2feb8bb5ac61fcae58cc7a90ca6bfa4157181", "message": "Resolve conflicts", "committedDate": "2020-04-17T14:29:43Z", "type": "commit"}, {"oid": "b127cba938bf1f272c48def31c00e560a88944bd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b127cba938bf1f272c48def31c00e560a88944bd", "message": "Add initial langlib table function impl", "committedDate": "2020-04-17T14:59:56Z", "type": "commit"}, {"oid": "a5104d64cbcf5f1c0919da0ae6990b0da640c998", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5104d64cbcf5f1c0919da0ae6990b0da640c998", "message": "Add intial lang lib table bal resources", "committedDate": "2020-04-17T14:59:56Z", "type": "commit"}, {"oid": "401148d4f6f3793738d9967431cba8d159e04647", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/401148d4f6f3793738d9967431cba8d159e04647", "message": "Introduce table forEach and Map functions", "committedDate": "2020-04-17T15:05:50Z", "type": "commit"}, {"oid": "7c9856f531ea29eda798c045e7590a8afae56c80", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c9856f531ea29eda798c045e7590a8afae56c80", "message": "Add getkeys, haskey, reducem remove, removeall and toarray functions", "committedDate": "2020-04-17T15:05:50Z", "type": "commit"}, {"oid": "ffb6c83e3d533c3f820512e484fd2d9ceb8e09ae", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ffb6c83e3d533c3f820512e484fd2d9ceb8e09ae", "message": "Enable travis for new-table-impl branch temporally", "committedDate": "2020-04-17T15:11:15Z", "type": "commit"}, {"oid": "ac7d4f927a04ecd0278722632cbd7d1bd395aea9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac7d4f927a04ecd0278722632cbd7d1bd395aea9", "message": "Fix checkstyle issue found", "committedDate": "2020-04-17T16:43:27Z", "type": "commit"}, {"oid": "8abc879841cd0a562f935b948a311845c7f934d0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8abc879841cd0a562f935b948a311845c7f934d0", "message": "Fix the language server test cases", "committedDate": "2020-04-18T06:14:25Z", "type": "commit"}, {"oid": "2571a6f35e71e06e76fbf90a422708ce6f976ac0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2571a6f35e71e06e76fbf90a422708ce6f976ac0", "message": "Reformat language server json files", "committedDate": "2020-04-18T07:50:08Z", "type": "commit"}, {"oid": "2425c78ac05961092f08b1a40a6b48c6395640f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2425c78ac05961092f08b1a40a6b48c6395640f9", "message": "Merge pull request #22739 from gimantha/new-table-impl\n\nFix Key hashing issue in Table implementation", "committedDate": "2020-04-18T10:50:47Z", "type": "commit"}, {"oid": "46cd9ecd258d40fdc1a8eba059490037bce0c247", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46cd9ecd258d40fdc1a8eba059490037bce0c247", "message": "Improve type checker validation logic", "committedDate": "2020-04-18T13:51:54Z", "type": "commit"}, {"oid": "ccf509d7afc482db7d1cedfe4e4116e383fee639", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ccf509d7afc482db7d1cedfe4e4116e383fee639", "message": "Improve lang lib table tests", "committedDate": "2020-04-18T18:54:19Z", "type": "commit"}, {"oid": "71441f9de96e288988adf8c377ee50e105f2cc8a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71441f9de96e288988adf8c377ee50e105f2cc8a", "message": "Fix checkstyle errors", "committedDate": "2020-04-19T08:35:20Z", "type": "commit"}, {"oid": "efb3e8ac91e698e0d1aecd40d925a4f5726d3817", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/efb3e8ac91e698e0d1aecd40d925a4f5726d3817", "message": "Remove unused methods", "committedDate": "2020-04-19T09:17:39Z", "type": "commit"}, {"oid": "fbdf12b496144573fae0e4e79672fe52512c9c9e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fbdf12b496144573fae0e4e79672fe52512c9c9e", "message": "Revert formatting changes on untouched code", "committedDate": "2020-04-19T09:29:11Z", "type": "commit"}, {"oid": "6a6fd4657fbba8fd4b5e7e846beb436948a27c2c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a6fd4657fbba8fd4b5e7e846beb436948a27c2c", "message": "Add comments to langlib table functions", "committedDate": "2020-04-19T11:03:28Z", "type": "commit"}, {"oid": "bb7944f6b669c0d1a1a02fc80bdba5dc16cc993f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb7944f6b669c0d1a1a02fc80bdba5dc16cc993f", "message": "Merge branch 'new-table-impl' of git://github.com/pcnfernando/ballerina-lang into pcnfernando-new-table-impl", "committedDate": "2020-04-20T05:50:48Z", "type": "commit"}, {"oid": "7d36c3ebe14b985e886d039bf5e2379fd8463f78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d36c3ebe14b985e886d039bf5e2379fd8463f78", "message": "Merge with langlib changes", "committedDate": "2020-04-20T06:42:10Z", "type": "commit"}, {"oid": "1e719cb4c82d6955781abc5c1d48aa8b0442d742", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e719cb4c82d6955781abc5c1d48aa8b0442d742", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRInstructionWriter.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/writer/BIRTypeWriter.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.java", "committedDate": "2020-04-20T07:01:01Z", "type": "commit"}, {"oid": "005a1f7795e01fd9a08e62b238e46cfcf1607d3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/005a1f7795e01fd9a08e62b238e46cfcf1607d3e", "message": "Fix lang server tests", "committedDate": "2020-04-20T07:01:56Z", "type": "commit"}, {"oid": "cd9ae5fa502e134d83baa6d7b0c09a9bc812e522", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd9ae5fa502e134d83baa6d7b0c09a9bc812e522", "message": "Merge pull request #22774 from gimantha/test\n\nFix lang server tests", "committedDate": "2020-04-20T08:44:33Z", "type": "commit"}, {"oid": "28332e2398ce9fcb7a65dd5afb8e40baa4c7e56e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/28332e2398ce9fcb7a65dd5afb8e40baa4c7e56e", "message": "Avoid overriding tsybol when it's not null", "committedDate": "2020-04-20T09:52:28Z", "type": "commit"}, {"oid": "31cad9eb059015e85fdb673fb9175e7c85fdc4b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/31cad9eb059015e85fdb673fb9175e7c85fdc4b0", "message": "Merge pull request #22773 from mohanvive/new-table-impl\n\nSync new-table-impl branch with master", "committedDate": "2020-04-20T10:10:13Z", "type": "commit"}, {"oid": "1bd7e3b263867623a8ca140c58e9769929ec17c2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1bd7e3b263867623a8ca140c58e9769929ec17c2", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.java", "committedDate": "2020-04-20T10:53:11Z", "type": "commit"}, {"oid": "e9b0c1efeec4bd736b53a6fdf864ae34f8d64217", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e9b0c1efeec4bd736b53a6fdf864ae34f8d64217", "message": "Merge pull request #22762 from pcnfernando/new-table-impl\n\nAdd langlib functions for lang.table", "committedDate": "2020-04-20T13:47:00Z", "type": "commit"}, {"oid": "45784041f4f7c4425b431ab292f1077627f82c5c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/45784041f4f7c4425b431ab292f1077627f82c5c", "message": "Fix member access functionality in table implementation", "committedDate": "2020-04-20T14:49:26Z", "type": "commit"}, {"oid": "11fbaa3ad50e52ab146582dc0bed886e02f6d610", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/11fbaa3ad50e52ab146582dc0bed886e02f6d610", "message": "Improve type checker to validate readonly fields", "committedDate": "2020-04-20T14:53:56Z", "type": "commit"}, {"oid": "9e183698b064f57e17834811df3f1971b11d5ad1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e183698b064f57e17834811df3f1971b11d5ad1", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-20T14:54:21Z", "type": "commit"}, {"oid": "4555357d322e497a9a0a4211bff89889d6bc8d76", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4555357d322e497a9a0a4211bff89889d6bc8d76", "message": "Merge with upstream", "committedDate": "2020-04-20T14:59:52Z", "type": "commit"}, {"oid": "36cb41d074d879e8e7b7047ae0f5c1549f6a8bd1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36cb41d074d879e8e7b7047ae0f5c1549f6a8bd1", "message": "Revert changes", "committedDate": "2020-04-20T15:05:34Z", "type": "commit"}, {"oid": "29626604e7f985fa534eb6ff5a177e1b779f0e70", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29626604e7f985fa534eb6ff5a177e1b779f0e70", "message": "Update Table langlib test cases", "committedDate": "2020-04-20T15:23:06Z", "type": "commit"}, {"oid": "872a7fcff9fcf289aaa930c663aef83d436f18ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/872a7fcff9fcf289aaa930c663aef83d436f18ac", "message": "Add table langlib to distribution gradle", "committedDate": "2020-04-20T17:34:26Z", "type": "commit"}, {"oid": "61b65f889f6050d2bcc1f1a4be19dd877e1c67ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/61b65f889f6050d2bcc1f1a4be19dd877e1c67ac", "message": "Merge pull request #22792 from mohanvive/new-table-impl\n\nSync master + readonly related type checking improvements", "committedDate": "2020-04-21T04:51:43Z", "type": "commit"}, {"oid": "1b3071eba62078ca2ee00d192b27c78d946ec28a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b3071eba62078ca2ee00d192b27c78d946ec28a", "message": "Fix langlib table tests", "committedDate": "2020-04-21T07:30:51Z", "type": "commit"}, {"oid": "c25a0e356ccea01818fb9fa7108c035736553bc3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c25a0e356ccea01818fb9fa7108c035736553bc3", "message": "Fix checkstyle issues", "committedDate": "2020-04-21T09:22:20Z", "type": "commit"}, {"oid": "c365c2bbc65a4f248295f68f32cf6e358cd85f3b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c365c2bbc65a4f248295f68f32cf6e358cd85f3b", "message": "Fix language server core test cases", "committedDate": "2020-04-21T09:51:16Z", "type": "commit"}, {"oid": "d0acee114e01c8f6140de4a46ec6c4378af19410", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0acee114e01c8f6140de4a46ec6c4378af19410", "message": "Merge pull request #22814 from mohanvive/new-table-impl\n\nFix language server core test cases", "committedDate": "2020-04-21T12:14:29Z", "type": "commit"}, {"oid": "3bb71996859d34f4ca9e1c74da5c92dc6c6504f0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bb71996859d34f4ca9e1c74da5c92dc6c6504f0", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into pcnfernando-new-table-impl", "committedDate": "2020-04-21T12:43:54Z", "type": "commit"}, {"oid": "04264229a7026b3e8b68be28e73be2c94b45fe85", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04264229a7026b3e8b68be28e73be2c94b45fe85", "message": "Comment test until readonly fully supported", "committedDate": "2020-04-21T13:01:29Z", "type": "commit"}, {"oid": "4947c826c6e5d708d75e648ca78d16adb8ecae64", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4947c826c6e5d708d75e648ca78d16adb8ecae64", "message": "Merge pull request #22803 from gimantha/new-table-impl\n\nFix Table Key hashing issue and Implement table member access in runtime", "committedDate": "2020-04-21T14:28:14Z", "type": "commit"}, {"oid": "ff2349541747dfb0a23c7ffb5fa0dcbb3c2e55ad", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff2349541747dfb0a23c7ffb5fa0dcbb3c2e55ad", "message": "Add type checking validations and negative test cases", "committedDate": "2020-04-21T14:45:16Z", "type": "commit"}, {"oid": "3dfd1c1bad86a4c5a9d89f50c608c27ec073d615", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3dfd1c1bad86a4c5a9d89f50c608c27ec073d615", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-21T14:45:41Z", "type": "commit"}, {"oid": "f4429a9ac95888e26b168e4286b29f27c0790dc4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4429a9ac95888e26b168e4286b29f27c0790dc4", "message": "Add cast instruction for primitive keys", "committedDate": "2020-04-21T16:09:01Z", "type": "commit"}, {"oid": "c3676ee836abce52174d4408d479323026f1d800", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3676ee836abce52174d4408d479323026f1d800", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into pcnfernando-new-table-impl", "committedDate": "2020-04-21T16:10:32Z", "type": "commit"}, {"oid": "9d2e0e9bc19571b2138bfda9eca35257a075a43a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9d2e0e9bc19571b2138bfda9eca35257a075a43a", "message": "Merge branch 'new-table-impl' of https://github.com/ballerina-platform/ballerina-lang into new-table-impl", "committedDate": "2020-04-21T16:12:58Z", "type": "commit"}]}