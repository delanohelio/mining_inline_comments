{"pr_number": 26703, "pr_title": "Add support for Class symbols", "pr_createdAt": "2020-11-02T13:05:16Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703", "timeline": [{"oid": "549ad49353ca295f37afe5705eecea5f0089198b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/549ad49353ca295f37afe5705eecea5f0089198b", "message": "Remove initMethod() from object type", "committedDate": "2020-11-02T13:16:26Z", "type": "forcePushed"}, {"oid": "ef4e621c614b6001ac578e04debc8fe70d764e69", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef4e621c614b6001ac578e04debc8fe70d764e69", "message": "Add test cases for class symbols", "committedDate": "2020-11-03T12:46:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2OTA3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517069071", "bodyText": "Shall we minimize the two returns to a single return statement?", "author": "nadeeshaan", "createdAt": "2020-11-04T02:50:20Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/types/BallerinaFieldSymbol.java", "diffHunk": "@@ -71,7 +73,12 @@ public boolean hasDefaultValue() {\n      */\n     @Override\n     public TypeSymbol typeDescriptor() {\n-        return TypesFactory.getTypeDescriptor(this.bField.getType());\n+        if (this.typeDescriptor != null) {", "originalCommit": "77d182f244c5d6a0ed2d26935f121de16ef20b86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "33cf44f48f36dcc75a2d85d70a1cb41966f8adbd", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/types/BallerinaFieldSymbol.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/types/BallerinaFieldSymbol.java\nindex aee8418251f..d4f1c743645 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/types/BallerinaFieldSymbol.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/types/BallerinaFieldSymbol.java\n\n@@ -73,11 +73,10 @@ public class BallerinaFieldSymbol extends BallerinaSymbol implements FieldSymbol\n      */\n     @Override\n     public TypeSymbol typeDescriptor() {\n-        if (this.typeDescriptor != null) {\n-            return this.typeDescriptor;\n+        if (this.typeDescriptor == null) {\n+            this.typeDescriptor = TypesFactory.getTypeDescriptor(this.bField.getType());\n         }\n \n-        this.typeDescriptor = TypesFactory.getTypeDescriptor(this.bField.getType());\n         return this.typeDescriptor;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3MTE3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517071171", "bodyText": "Shall we merge this with the wrapping if condition?", "author": "nadeeshaan", "createdAt": "2020-11-04T02:58:56Z", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/builder/FunctionCompletionItemBuilder.java", "diffHunk": "@@ -94,7 +96,12 @@ public static CompletionItem build(FunctionSymbol functionSymbol, LSContext cont\n     }\n \n     public static CompletionItem build(ObjectTypeSymbol typeDesc, InitializerBuildMode mode, LSContext ctx) {\n-        MethodSymbol initMethod = typeDesc.initMethod().isEmpty() ? null : typeDesc.initMethod().get();\n+        MethodSymbol initMethod = null;\n+        if (typeDesc.kind() == SymbolKind.CLASS) {\n+            ClassSymbol classSymbol = (ClassSymbol) typeDesc;\n+            initMethod = classSymbol.initMethod().isPresent() ? classSymbol.initMethod().get() : null;", "originalCommit": "77d182f244c5d6a0ed2d26935f121de16ef20b86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "33cf44f48f36dcc75a2d85d70a1cb41966f8adbd", "chunk": "diff --git a/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/builder/FunctionCompletionItemBuilder.java b/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/builder/FunctionCompletionItemBuilder.java\nindex 5f50253b35c..56f022f8a8d 100644\n--- a/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/builder/FunctionCompletionItemBuilder.java\n+++ b/language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/builder/FunctionCompletionItemBuilder.java\n\n@@ -97,9 +97,8 @@ public final class FunctionCompletionItemBuilder {\n \n     public static CompletionItem build(ObjectTypeSymbol typeDesc, InitializerBuildMode mode, LSContext ctx) {\n         MethodSymbol initMethod = null;\n-        if (typeDesc.kind() == SymbolKind.CLASS) {\n-            ClassSymbol classSymbol = (ClassSymbol) typeDesc;\n-            initMethod = classSymbol.initMethod().isPresent() ? classSymbol.initMethod().get() : null;\n+        if (typeDesc.kind() == SymbolKind.CLASS && ((ClassSymbol) typeDesc).initMethod().isPresent()) {\n+            initMethod = ((ClassSymbol) typeDesc).initMethod().get();\n         }\n \n         CompletionItem item = new CompletionItem();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3NDk5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517074996", "bodyText": "Should this be a part of the SymbolFinder?", "author": "SupunS", "createdAt": "2020-11-04T03:14:29Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -111,7 +115,14 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n             return Optional.empty();\n         }\n \n+        if (isTypeSymbol(symbolAtCursor) && !PositionUtil.withinBlock(position, symbolAtCursor.pos)) {\n+            ModuleID moduleID = new BallerinaModuleID(symbolAtCursor.pkgID);\n+            return Optional.of(new BallerinaTypeReferenceTypeSymbol(moduleID, symbolAtCursor.type,\n+                                                                    symbolAtCursor.getName().getValue()));\n+        }\n+", "originalCommit": "77d182f244c5d6a0ed2d26935f121de16ef20b86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEzMzY5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517133695", "bodyText": "Can't really do that right? What's being checked here is the following case:\ntype Person record {|\n    string name;\n|};\n\nfunction bar() {\n    <cursor>Person p = { name: \"Pubudu\" };\n}\nIn this case, I want to return a TypeReferenceTypeSymbol instance, not a TypeDefinitionSymbol. To check which one to return, have to check the BSymbol's position against the user provided position.", "author": "pubudu91", "createdAt": "2020-11-04T07:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3NDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2MTU1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517261553", "bodyText": "In the AST we would know its a type-reference right?\nfor e.g.: in public void visit(BLangSimpleVariable varNode) {} method, we know what we need to return is a TypeReferenceTypeSymbol", "author": "SupunS", "createdAt": "2020-11-04T10:58:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3NDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5NTEyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26703#discussion_r517295124", "bodyText": "Yeah, but the thing is, we return a BSymbol from the SymbolFinder, not the node.", "author": "pubudu91", "createdAt": "2020-11-04T12:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3NDk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "58b72974ffa2a5e6897af4a7823c8feb757fde44", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\nindex 931d9ca3bd1..3db1f100d75 100644\n--- a/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n+++ b/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n\n@@ -115,14 +115,7 @@ public class BallerinaSemanticModel implements SemanticModel {\n             return Optional.empty();\n         }\n \n-        if (isTypeSymbol(symbolAtCursor) && !PositionUtil.withinBlock(position, symbolAtCursor.pos)) {\n-            ModuleID moduleID = new BallerinaModuleID(symbolAtCursor.pkgID);\n-            return Optional.of(new BallerinaTypeReferenceTypeSymbol(moduleID, symbolAtCursor.type,\n-                                                                    symbolAtCursor.getName().getValue()));\n-        }\n-\n-        return Optional.ofNullable(SymbolFactory.getBCompiledSymbol(symbolAtCursor, symbolAtCursor.name.value));\n-\n+        return Optional.ofNullable(symbolFactory.getBCompiledSymbol(symbolAtCursor, symbolAtCursor.name.value));\n     }\n \n     /**\n"}}, {"oid": "33cf44f48f36dcc75a2d85d70a1cb41966f8adbd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33cf44f48f36dcc75a2d85d70a1cb41966f8adbd", "message": "Address review suggestions", "committedDate": "2020-11-04T07:09:29Z", "type": "forcePushed"}, {"oid": "81b20c67088bfee4aed24f8bb95914c8ebdbb219", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81b20c67088bfee4aed24f8bb95914c8ebdbb219", "message": "Resolve conflicts", "committedDate": "2020-11-04T12:30:16Z", "type": "forcePushed"}, {"oid": "58b72974ffa2a5e6897af4a7823c8feb757fde44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/58b72974ffa2a5e6897af4a7823c8feb757fde44", "message": "Introduce class symbols for classes", "committedDate": "2020-11-05T09:13:48Z", "type": "commit"}, {"oid": "d7fd792d683e3bc22a352859268158518d7e8667", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d7fd792d683e3bc22a352859268158518d7e8667", "message": "Remove initMethod() from object type", "committedDate": "2020-11-05T09:14:46Z", "type": "commit"}, {"oid": "9dc876c5a8d4d573cef3251ae07bba2e1317ea8b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9dc876c5a8d4d573cef3251ae07bba2e1317ea8b", "message": "Fix initMethod() usages in lang server", "committedDate": "2020-11-05T09:14:46Z", "type": "commit"}, {"oid": "3535efe0cd55b3f51431ae68639aee5256d32067", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3535efe0cd55b3f51431ae68639aee5256d32067", "message": "Add an API to get classes from module symbol", "committedDate": "2020-11-05T09:14:46Z", "type": "commit"}, {"oid": "9a841096d5810fc4f23e6ab06b137faecb977c03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9a841096d5810fc4f23e6ab06b137faecb977c03", "message": "Create class type symbols for classes when coming from BIR", "committedDate": "2020-11-05T09:14:47Z", "type": "commit"}, {"oid": "ee99f499b449980155f9aa2b0b90bc697294bbfc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee99f499b449980155f9aa2b0b90bc697294bbfc", "message": "Set origin of classes of services to VIRTUAL", "committedDate": "2020-11-05T09:14:47Z", "type": "commit"}, {"oid": "c4b4fe3de70411762bc3bbcb7e5a1549f8530bd1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4b4fe3de70411762bc3bbcb7e5a1549f8530bd1", "message": "Fix completions for type init", "committedDate": "2020-11-05T09:14:47Z", "type": "commit"}, {"oid": "2e0f732f43de1b7108273d19a615b2a0ea823b24", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2e0f732f43de1b7108273d19a615b2a0ea823b24", "message": "Avoid setting ref type in class symbol's type desc", "committedDate": "2020-11-05T09:17:50Z", "type": "commit"}, {"oid": "18cd7a54a01b60b6e3a226c7eeb39b8759abe9cb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18cd7a54a01b60b6e3a226c7eeb39b8759abe9cb", "message": "Print the shape for anon types", "committedDate": "2020-11-05T09:17:51Z", "type": "commit"}, {"oid": "173bf3070b86ee218fc85da51942bafa1fd59684", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/173bf3070b86ee218fc85da51942bafa1fd59684", "message": "Change new expr ctx tests to use classes", "committedDate": "2020-11-05T09:17:51Z", "type": "commit"}, {"oid": "427f3c3abc9850044e66dd6c3d69ad34bb450dbb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/427f3c3abc9850044e66dd6c3d69ad34bb450dbb", "message": "Modify lang server to use new class symbols", "committedDate": "2020-11-05T09:17:51Z", "type": "commit"}, {"oid": "b0ea46b0ef0de5ba4ee7974ba62516069d035009", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0ea46b0ef0de5ba4ee7974ba62516069d035009", "message": "Extend field symbol from Symbol", "committedDate": "2020-11-05T09:25:57Z", "type": "commit"}, {"oid": "3502d8f2b33fb96e9f07061d7c27d3733894e842", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3502d8f2b33fb96e9f07061d7c27d3733894e842", "message": "Return a type reference symbol for type references", "committedDate": "2020-11-05T09:27:09Z", "type": "commit"}, {"oid": "6b19d00c383a13228b9e6a2a9bcc59946a5c92cc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b19d00c383a13228b9e6a2a9bcc59946a5c92cc", "message": "Add test cases for class symbols", "committedDate": "2020-11-05T09:27:10Z", "type": "commit"}, {"oid": "9e4ca53aa40a5e83b68503b473bbec3e239e4aa8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e4ca53aa40a5e83b68503b473bbec3e239e4aa8", "message": "Improve symbol at cursor behaviour for type init", "committedDate": "2020-11-05T09:27:10Z", "type": "commit"}, {"oid": "084711ed87d9e3f829d2720341c2718c5270df3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/084711ed87d9e3f829d2720341c2718c5270df3e", "message": "Address review suggestions", "committedDate": "2020-11-05T09:28:13Z", "type": "commit"}, {"oid": "7bd65f94fbe065a0ca8de2e764c57e0e2ef29d00", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bd65f94fbe065a0ca8de2e764c57e0e2ef29d00", "message": "Resolve conflicts", "committedDate": "2020-11-05T09:28:14Z", "type": "commit"}, {"oid": "eff28e30e23af8d87e6a9bf27fa1a4bf581954eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eff28e30e23af8d87e6a9bf27fa1a4bf581954eb", "message": "Refactor class symbol to accept a compiler context", "committedDate": "2020-11-05T10:03:50Z", "type": "commit"}, {"oid": "eff28e30e23af8d87e6a9bf27fa1a4bf581954eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eff28e30e23af8d87e6a9bf27fa1a4bf581954eb", "message": "Refactor class symbol to accept a compiler context", "committedDate": "2020-11-05T10:03:50Z", "type": "forcePushed"}]}