{"pr_number": 24917, "pr_title": "Fix StringLiteral as expression lhs", "pr_createdAt": "2020-07-23T10:29:17Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24917", "timeline": [{"oid": "50d05b69a02e41016340833ad80aa38c47cbb354", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/50d05b69a02e41016340833ad80aa38c47cbb354", "message": "Fix parseStringLiteral\n\nWrapped the stringliteral token with basicliteraltoken", "committedDate": "2020-07-23T08:35:54Z", "type": "commit"}, {"oid": "3f2a144b796be447c03371947cdd025568e64e0e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f2a144b796be447c03371947cdd025568e64e0e", "message": "Fix parseStringLiteral\n\nChanged StringLiteral being returned as a token.\nwrapped it with basicLiteralNode for expressionlhs\n and added tests.", "committedDate": "2020-07-23T10:24:20Z", "type": "commit"}, {"oid": "c9e7d99583746c96a130063ce640b5d8186fe940", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9e7d99583746c96a130063ce640b5d8186fe940", "message": "Fix checkStyle", "committedDate": "2020-07-23T10:42:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MjkyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24917#discussion_r459852925", "bodyText": "This can break things. Inside the below if-condition,  a SpecificFieldNode is created. But for that, key is expected to be a token.", "author": "SupunS", "createdAt": "2020-07-24T05:02:22Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15870,6 +15872,7 @@ private STNode parseStatementStartingBracedListFirstMember() {\n                 return parseIdentifierRhsInStmtStartingBrace(readonlyKeyword);\n             case STRING_LITERAL:\n                 STNode key = parseStringLiteral();\n+                key = parseBasicLiteral((STToken) key);", "originalCommit": "c9e7d99583746c96a130063ce640b5d8186fe940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MzYwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24917#discussion_r459853607", "bodyText": "Let's add a test case for that as well.", "author": "SupunS", "createdAt": "2020-07-24T05:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MjkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "bef534797fb69d8d4368d5a70b1c4a2424a1a3c1", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\nindex be53350657f..b181f5fd635 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\n@@ -15872,13 +15870,13 @@ public class BallerinaParser extends AbstractParser {\n                 return parseIdentifierRhsInStmtStartingBrace(readonlyKeyword);\n             case STRING_LITERAL:\n                 STNode key = parseStringLiteral();\n-                key = parseBasicLiteral((STToken) key);\n                 if (peek().kind == SyntaxKind.COLON_TOKEN) {\n                     readonlyKeyword = STNodeFactory.createEmptyNode();\n                     STNode colon = parseColon();\n                     STNode valueExpr = parseExpression();\n                     return STNodeFactory.createSpecificFieldNode(readonlyKeyword, key, colon, valueExpr);\n                 }\n+                key = STNodeFactory.createBasicLiteralNode(key.kind, key);\n                 switchContext(ParserRuleContext.BLOCK_STMT);\n                 startContext(ParserRuleContext.AMBIGUOUS_STMT);\n                 STNode expr = parseExpressionRhs(DEFAULT_OP_PRECEDENCE, key, false, true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MzUyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24917#discussion_r459853521", "bodyText": "Having a method for a single line of code sounds not correct. It also adds a runtime over-head of an additional function call.\nSince this is the most prominent usage, shall we keep this as is, and only change the place where the change is needed?", "author": "SupunS", "createdAt": "2020-07-24T05:05:30Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4936,13 +4936,15 @@ private boolean isEndOfExpression(SyntaxKind tokenKind, boolean isRhsExpr, boole\n         }\n     }\n \n+    private STNode parseBasicLiteral() {\n+        return parseBasicLiteral(consume());", "originalCommit": "c9e7d99583746c96a130063ce640b5d8186fe940", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bef534797fb69d8d4368d5a70b1c4a2424a1a3c1", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\nindex be53350657f..b181f5fd635 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\n@@ -4936,15 +4936,13 @@ public class BallerinaParser extends AbstractParser {\n         }\n     }\n \n-    private STNode parseBasicLiteral() {\n-        return parseBasicLiteral(consume());\n-    }\n     /**\n      * Parse basic literals. It is assumed that we come here after validation.\n      *\n      * @return Parsed node\n      */\n-    private STNode parseBasicLiteral(STToken literalToken) {\n+    private STNode parseBasicLiteral() {\n+        STToken literalToken = consume();\n         return STNodeFactory.createBasicLiteralNode(literalToken.kind, literalToken);\n     }\n \n"}}, {"oid": "bef534797fb69d8d4368d5a70b1c4a2424a1a3c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bef534797fb69d8d4368d5a70b1c4a2424a1a3c1", "message": "Add test for callstmt\n\nAdd tests for call stmt with method call. Also changed\nwhere the string literal gets wrapped by basicliteral", "committedDate": "2020-07-24T06:16:17Z", "type": "commit"}]}