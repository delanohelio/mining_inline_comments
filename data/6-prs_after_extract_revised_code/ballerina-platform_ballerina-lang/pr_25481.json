{"pr_number": 25481, "pr_title": "Split testerina BasicCasesTest", "pr_createdAt": "2020-08-27T19:45:38Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25481", "timeline": [{"oid": "5357ae88f5d4279f906fde183ac7ce815871c046", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5357ae88f5d4279f906fde183ac7ce815871c046", "message": "Split testerina BasicCasesTest", "committedDate": "2020-08-27T19:42:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2NDc5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25481#discussion_r478864798", "bodyText": "Assertions are used in all tests. So the order of test execution should be as follows:\n\ntestAssertTrue\ntestAssertions (the assertions other than assertTrue)\nrest of the tests\n\nTherefore, this and the rest of the tests should depend on testAssertions", "author": "azinneera", "createdAt": "2020-08-28T06:47:43Z", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "diffHunk": "@@ -55,31 +55,68 @@ public void testJavaInterops() throws BallerinaTestException {\n         clientLeecher.waitForText(20000);\n     }\n \n+    @Test()\n+    public void testAnnotationAccess() throws BallerinaTestException {\n+        String msg = \"3 passing\";\n+        LogLeecher clientLeecher = new LogLeecher(msg);\n+        balClient.runMain(\"test\", new String[]{\"annotation-access\"}, null,\n+                new String[]{}, new LogLeecher[]{clientLeecher}, projectPath);\n+        clientLeecher.waitForText(40000);\n+    }\n+\n+    @Test()\n+    public void testAnnotations() throws BallerinaTestException {\n+        String msg = \"15 passing\";\n+        LogLeecher clientLeecher = new LogLeecher(msg);\n+        balClient.runMain(\"test\", new String[]{\"annotations\"}, null,\n+                new String[]{}, new LogLeecher[]{clientLeecher}, projectPath);\n+        clientLeecher.waitForText(40000);\n+    }\n+\n     @Test(dependsOnMethods = \"testAssertTrue\")\n-    public void testAllExceptAssertTrue() throws BallerinaTestException {\n-        String msg1 = \"15 passing\";\n-        String msg2 = \"1 passing\";\n-        String msg3 = \"87 passing\";\n-        String msg4 = \"3 passing\";\n-        String msg5 = \"2 passing\";\n-        String msg6 = \"3 passing\";\n-        String msg7 = \"8 passing\";\n-        LogLeecher clientLeecher1 = new LogLeecher(msg1);\n-        LogLeecher clientLeecher2 = new LogLeecher(msg2);\n-        LogLeecher clientLeecher3 = new LogLeecher(msg3);\n-        LogLeecher clientLeecher4 = new LogLeecher(msg4);\n-        LogLeecher clientLeecher5 = new LogLeecher(msg5);\n-        LogLeecher clientLeecher6 = new LogLeecher(msg6);\n-        LogLeecher clientLeecher7 = new LogLeecher(msg7);\n-        balClient.runMain(\"test\", new String[]{\"--disable-groups\", \"p1\", \"--all\", \"--\", \"--user.name=waruna\"}, null,\n-                          new String[]{}, new LogLeecher[]{clientLeecher1, clientLeecher2, clientLeecher3,\n-                        clientLeecher4, clientLeecher5, clientLeecher6, clientLeecher7}, projectPath);\n-        clientLeecher1.waitForText(400000);\n-        clientLeecher2.waitForText(400000);\n-        clientLeecher3.waitForText(400000);\n-        clientLeecher4.waitForText(400000);\n-        clientLeecher5.waitForText(400000);\n-        clientLeecher6.waitForText(400000);\n-        clientLeecher7.waitForText(400000);\n+    public void testAssertions() throws BallerinaTestException {\n+        String msg = \"87 passing\";\n+        LogLeecher clientLeecher = new LogLeecher(msg);\n+        balClient.runMain(\"test\", new String[]{\"--disable-groups\", \"p1\", \"assertions\", \"--user.name=waruna\"}, null,\n+                new String[]{}, new LogLeecher[]{clientLeecher}, projectPath);\n+        clientLeecher.waitForText(40000);\n+    }\n+\n+    @Test()\n+    public void testBeforeAfter() throws BallerinaTestException {", "originalCommit": "5357ae88f5d4279f906fde183ac7ce815871c046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5NjQ4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25481#discussion_r478896481", "bodyText": "+1\n@Ibaqu\nAlso,\nannotations test cases use \"before\", \"dependsOn\" annotations. Likewise, shall we order the test execution accordingly?", "author": "Dilhasha", "createdAt": "2020-08-28T07:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2NDc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MTExOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25481#discussion_r479071119", "bodyText": "Addressed requested changes.", "author": "Ibaqu", "createdAt": "2020-08-28T10:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2NDc5OA=="}], "type": "inlineReview", "revised_code": {"commit": "6af61443471e9e617f846756c67811fc1ec194d9", "chunk": "diff --git a/tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java b/tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java\nindex 68b8d5f80c2..4bcfec55c54 100644\n--- a/tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java\n+++ b/tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java\n\n@@ -47,15 +47,15 @@ public class BasicCasesTest extends BaseTestCase {\n     }\n \n     @Test(dependsOnMethods = \"testAssertTrue\")\n-    public void testJavaInterops() throws BallerinaTestException {\n-        String msg = \"1 passing\";\n+    public void testAssertions() throws BallerinaTestException {\n+        String msg = \"87 passing\";\n         LogLeecher clientLeecher = new LogLeecher(msg);\n-        balClient.runMain(\"test\", new String[]{\"interops\"}, null, new String[]{}, new LogLeecher[]{clientLeecher},\n-                          projectPath);\n-        clientLeecher.waitForText(20000);\n+        balClient.runMain(\"test\", new String[]{\"--disable-groups\", \"p1\", \"assertions\", \"--user.name=waruna\"}, null,\n+                new String[]{}, new LogLeecher[]{clientLeecher}, projectPath);\n+        clientLeecher.waitForText(40000);\n     }\n \n-    @Test()\n+    @Test(dependsOnMethods = \"testAssertions\")\n     public void testAnnotationAccess() throws BallerinaTestException {\n         String msg = \"3 passing\";\n         LogLeecher clientLeecher = new LogLeecher(msg);\n"}}, {"oid": "6af61443471e9e617f846756c67811fc1ec194d9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6af61443471e9e617f846756c67811fc1ec194d9", "message": "Address PR comments", "committedDate": "2020-08-28T09:59:40Z", "type": "commit"}]}