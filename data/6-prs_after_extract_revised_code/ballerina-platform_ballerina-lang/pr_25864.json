{"pr_number": 25864, "pr_title": "Fix remote qualifier validation in func type desc", "pr_createdAt": "2020-09-17T06:12:00Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25864", "timeline": [{"oid": "bfd1a74f606aa2698140127d9029aa896c57acc2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bfd1a74f606aa2698140127d9029aa896c57acc2", "message": "Fix remote qualifier validation in func type desc", "committedDate": "2020-09-17T06:10:53Z", "type": "commit"}, {"oid": "316234f309feb33eecc3e8920d5519ecb6fe839a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/316234f309feb33eecc3e8920d5519ecb6fe839a", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into Fixes-1", "committedDate": "2020-09-17T11:44:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0Mjc0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25864#discussion_r490242743", "bodyText": "do we need a else block? i.e: when the qualifier is neither a visibility qualifier nor REMOTE_KEYWORD", "author": "SupunS", "createdAt": "2020-09-17T13:26:05Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1021,15 +1021,19 @@ private STNode parseVarDeclWithFunctionType(STNode functionKeyword, STNode funcS\n         STNode visibilityQualifier = STNodeFactory.createEmptyNode();\n         List<STNode> validatedQualifierList = new ArrayList<>();\n         // qualifiers are only allowed in the following cases for func type desc.\n-        // isolated and transactional qualifiers allowed.\n-        // public or private qualifier allowed in object field.\n+        // isolated and transactional qualifiers are allowed.\n+        // public, private and remote qualifiers are allowed in object field.\n         for (int position = 0; position < qualifierList.size(); position++) {\n             STNode qualifier = qualifierList.get(position);\n             if (qualifier.kind == SyntaxKind.ISOLATED_KEYWORD || qualifier.kind == SyntaxKind.TRANSACTIONAL_KEYWORD) {\n                 validatedQualifierList.add(qualifier);\n-            } else if (isObjectMember && isVisibilityQualifier(qualifier)) {\n-                // public or private qualifier allowed in object field.\n-                visibilityQualifier = qualifier;\n+            } else if (isObjectMember) {\n+                if (isVisibilityQualifier(qualifier)) {\n+                    // public or private qualifier allowed in object field.\n+                    visibilityQualifier = qualifier;\n+                } else if (qualifier.kind == SyntaxKind.REMOTE_KEYWORD) {\n+                    validatedQualifierList.add(qualifier);\n+                }", "originalCommit": "316234f309feb33eecc3e8920d5519ecb6fe839a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0MjU0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25864#discussion_r490342544", "bodyText": "oops!", "author": "lochana-chathura", "createdAt": "2020-09-17T15:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0Mjc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b8bc988b7c0782c465005115cc7a23c362e7b474", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\nindex 291f19b710c..b54f867848c 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\n@@ -1020,24 +1020,31 @@ public class BallerinaParser extends AbstractParser {\n         STNodeList qualifierList = (STNodeList) qualifiers;\n         STNode visibilityQualifier = STNodeFactory.createEmptyNode();\n         List<STNode> validatedQualifierList = new ArrayList<>();\n+\n         // qualifiers are only allowed in the following cases for func type desc.\n         // isolated and transactional qualifiers are allowed.\n         // public, private and remote qualifiers are allowed in object field.\n         for (int position = 0; position < qualifierList.size(); position++) {\n             STNode qualifier = qualifierList.get(position);\n+\n             if (qualifier.kind == SyntaxKind.ISOLATED_KEYWORD || qualifier.kind == SyntaxKind.TRANSACTIONAL_KEYWORD) {\n                 validatedQualifierList.add(qualifier);\n-            } else if (isObjectMember) {\n+                continue;\n+            }\n+\n+            if (isObjectMember) {\n                 if (isVisibilityQualifier(qualifier)) {\n                     // public or private qualifier allowed in object field.\n                     visibilityQualifier = qualifier;\n+                    continue;\n                 } else if (qualifier.kind == SyntaxKind.REMOTE_KEYWORD) {\n                     validatedQualifierList.add(qualifier);\n+                    continue;\n                 }\n-            } else {\n-                functionKeyword = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(functionKeyword, qualifier,\n-                        DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED, ((STToken) qualifier).text());\n             }\n+\n+            functionKeyword = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(functionKeyword, qualifier,\n+                    DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED, ((STToken) qualifier).text());\n         }\n \n         qualifiers = STNodeFactory.createNodeList(validatedQualifierList);\n"}}, {"oid": "b8bc988b7c0782c465005115cc7a23c362e7b474", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8bc988b7c0782c465005115cc7a23c362e7b474", "message": "Fix function type qualifier validation", "committedDate": "2020-09-17T15:30:50Z", "type": "commit"}]}