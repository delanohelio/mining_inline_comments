{"pr_number": 26098, "pr_title": "Add distinct type support to object type defn", "pr_createdAt": "2020-09-25T09:54:07Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098", "timeline": [{"oid": "a900fe40900cf1f7f3a262d815eb9e419e33c3a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a900fe40900cf1f7f3a262d815eb9e419e33c3a1", "message": "Add distinct support for object type def", "committedDate": "2020-09-25T09:52:37Z", "type": "commit"}, {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac7c7056f4cb60fa30df88b018568717f843facd", "message": "Fix failing test cases", "committedDate": "2020-09-25T11:43:48Z", "type": "commit"}, {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac7c7056f4cb60fa30df88b018568717f843facd", "message": "Fix failing test cases", "committedDate": "2020-09-25T11:43:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNzU4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499327589", "bodyText": "Can we collapse this if statement with the next line's return statement?", "author": "nadeeshaan", "createdAt": "2020-10-05T03:08:56Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -5030,6 +5030,9 @@ private boolean isPresent(Node node) {\n \n     private boolean checkIfAnonymous(Node node) {\n         Node parent = node.parent();\n+        if (parent.kind() == SyntaxKind.DISTINCT_TYPE_DESC) {", "originalCommit": "ac7c7056f4cb60fa30df88b018568717f843facd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NTc2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499345761", "bodyText": "fixed", "author": "rdhananjaya", "createdAt": "2020-10-05T04:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNzU4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex 40ddcf6f2ed..c370e702bf7 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -5029,11 +5036,8 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n     }\n \n     private boolean checkIfAnonymous(Node node) {\n-        Node parent = node.parent();\n-        if (parent.kind() == SyntaxKind.DISTINCT_TYPE_DESC) {\n-            return false;\n-        }\n-        return parent.kind() != SyntaxKind.TYPE_DEFINITION;\n+        SyntaxKind parentKind = node.parent().kind();\n+        return parentKind != SyntaxKind.DISTINCT_TYPE_DESC && parentKind != SyntaxKind.TYPE_DEFINITION;\n     }\n \n     private boolean ifInLocalContext(Node parent) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTQ4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499331486", "bodyText": "Shall we chain this constructor to the one with the most arguments (line 44)?", "author": "nadeeshaan", "createdAt": "2020-10-05T03:32:13Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java", "diffHunk": "@@ -43,7 +43,12 @@ public BTypeIdSet(Set<BTypeId> primary, Set<BTypeId> secondary) {\n \n     public BTypeIdSet(Set<BTypeId> primary) {\n         this.primary = primary;\n-        this.secondary = emptySet;\n+        this.secondary = new HashSet<>();\n+    }\n+\n+    public BTypeIdSet() {", "originalCommit": "ac7c7056f4cb60fa30df88b018568717f843facd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NTczNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499345734", "bodyText": "fixed", "author": "rdhananjaya", "createdAt": "2020-10-05T04:56:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTQ4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java\nindex 2483d57f486..d5555e16e35 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java\n\n@@ -42,13 +42,11 @@ public class BTypeIdSet {\n     }\n \n     public BTypeIdSet(Set<BTypeId> primary) {\n-        this.primary = primary;\n-        this.secondary = new HashSet<>();\n+        this(primary, new HashSet<>());\n     }\n \n     public BTypeIdSet() {\n-        this.primary = new HashSet<>();\n-        this.secondary = new HashSet<>();\n+        this(new HashSet<>(), new HashSet<>());\n     }\n \n     public static BTypeIdSet from(PackageID packageID, String typeId, boolean publicId) {\n"}}, {"oid": "13603735852e0985f49f5d9640bd015ff217b33c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13603735852e0985f49f5d9640bd015ff217b33c", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into distinct_object_type", "committedDate": "2020-10-05T04:22:47Z", "type": "commit"}, {"oid": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34", "message": "Apply review suggestions", "committedDate": "2020-10-05T04:55:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NTY3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r508785671", "bodyText": "Shall we add runtime test cases as well?", "author": "hasithaa", "createdAt": "2020-10-20T19:30:46Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/DistinctObjectTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.object;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+/**\n+ * Test cases for distinct object type definitions.\n+ *\n+ * @since 2.0\n+ */\n+public class DistinctObjectTest {", "originalCommit": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA0Njc1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r509046754", "bodyText": "Added in a7e2849", "author": "rdhananjaya", "createdAt": "2020-10-21T07:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NTY3MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cfcfe2ce9a1eb0242bf40f64495235e48ba9a5f3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cfcfe2ce9a1eb0242bf40f64495235e48ba9a5f3", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into distinct_object_type", "committedDate": "2020-10-21T05:59:56Z", "type": "commit"}, {"oid": "a7e2849c8dc4a7b749f591b59979b504a6612168", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a7e2849c8dc4a7b749f591b59979b504a6612168", "message": "Add parent type-ids to child classes\n\neven when the child is not specified as distinct", "committedDate": "2020-10-21T07:22:00Z", "type": "commit"}]}