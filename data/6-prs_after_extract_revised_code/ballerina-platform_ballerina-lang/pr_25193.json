{"pr_number": 25193, "pr_title": "Add Procedure call support for sql connector", "pr_createdAt": "2020-08-10T22:12:16Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25193", "timeline": [{"oid": "f17ad777ef8b8b4b4e3e0100905ca197550beaf4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f17ad777ef8b8b4b4e3e0100905ca197550beaf4", "message": "Ignore mysql test generated files", "committedDate": "2020-08-10T13:38:23Z", "type": "commit"}, {"oid": "a8e1d09171a0d13245d97673a81c9c0ccd8ad7fd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8e1d09171a0d13245d97673a81c9c0ccd8ad7fd", "message": "Reformat", "committedDate": "2020-08-10T13:38:23Z", "type": "commit"}, {"oid": "a26c266d595913a60c13bbec3033544fb1c68cc1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a26c266d595913a60c13bbec3033544fb1c68cc1", "message": "Add basic framework for call api", "committedDate": "2020-08-10T13:38:24Z", "type": "commit"}, {"oid": "7c451ecb9317b3ee745126b45e70e6cb63460e42", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c451ecb9317b3ee745126b45e70e6cb63460e42", "message": "Fix visibility of ProcedureCallResult object", "committedDate": "2020-08-10T13:38:24Z", "type": "commit"}, {"oid": "9b4440a4c9420f6c40e1bd5909e41f1d9be02db0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b4440a4c9420f6c40e1bd5909e41f1d9be02db0", "message": "Accept empty array instead of null", "committedDate": "2020-08-10T13:38:24Z", "type": "commit"}, {"oid": "46ef511445b22d9706c5ab6979e70389f42c0d11", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46ef511445b22d9706c5ab6979e70389f42c0d11", "message": "Fix doc comment", "committedDate": "2020-08-10T13:38:25Z", "type": "commit"}, {"oid": "3b52b2971ce3a9696d100fa515681865e9dba0b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b52b2971ce3a9696d100fa515681865e9dba0b7", "message": "Fix return for the getNextQueryResult function", "committedDate": "2020-08-10T13:38:25Z", "type": "commit"}, {"oid": "c97392a21207c305dcc9a2c9c039e6823bbbcd88", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c97392a21207c305dcc9a2c9c039e6823bbbcd88", "message": "Refactor", "committedDate": "2020-08-10T13:38:25Z", "type": "commit"}, {"oid": "b234ef7d40de248f5b5739e5bb5ccbf46533297a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b234ef7d40de248f5b5739e5bb5ccbf46533297a", "message": "Reformat", "committedDate": "2020-08-10T13:38:25Z", "type": "commit"}, {"oid": "6a90f60328e1bb4d7e2a2d3dbffe65d48a53298b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a90f60328e1bb4d7e2a2d3dbffe65d48a53298b", "message": "Fix test cases", "committedDate": "2020-08-10T13:38:26Z", "type": "commit"}, {"oid": "5e71cb382073b0cfd4eeeacd7a7e078a2e0113ad", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5e71cb382073b0cfd4eeeacd7a7e078a2e0113ad", "message": "Support InParameter object", "committedDate": "2020-08-10T13:38:26Z", "type": "commit"}, {"oid": "2397404f63bd04e084f2e65db6644ad581f2a251", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2397404f63bd04e084f2e65db6644ad581f2a251", "message": "Remove InParameter definition", "committedDate": "2020-08-10T13:38:26Z", "type": "commit"}, {"oid": "8a5a0e82797d2361132eb3956f488148351ed199", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a5a0e82797d2361132eb3956f488148351ed199", "message": "Add basic framework for Inout & Out parameter", "committedDate": "2020-08-10T13:38:26Z", "type": "commit"}, {"oid": "6714eaebd27ebe42928b52fa535c5edc12765d21", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6714eaebd27ebe42928b52fa535c5edc12765d21", "message": "Add support for inout parameter", "committedDate": "2020-08-10T18:51:39Z", "type": "commit"}, {"oid": "77b30ecedea29be288ddd7ace655c348c42deeab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77b30ecedea29be288ddd7ace655c348c42deeab", "message": "Add support for out parameter", "committedDate": "2020-08-10T22:05:23Z", "type": "commit"}, {"oid": "0c13c50d731d78b06b6f7eff1297e808fb58df4e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c13c50d731d78b06b6f7eff1297e808fb58df4e", "message": "Add documentation", "committedDate": "2020-08-11T06:22:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzM3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25193#discussion_r469053377", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                return ErrorGenerator.getSQLApplicationError(\"Unsupported sql type \" + sqlType);\n          \n          \n            \n                                return ErrorGenerator.getSQLApplicationError(\"Unsupported SQL type \" + sqlType);", "author": "anupama-pathirage", "createdAt": "2020-08-12T07:15:45Z", "path": "stdlib/database/sql/src/main/java/org/ballerinalang/sql/utils/OutParameterUtils.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.sql.utils;\n+\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.TypeTags;\n+import org.ballerinalang.jvm.values.ObjectValue;\n+import org.ballerinalang.jvm.values.api.BTypedesc;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.sql.exception.ApplicationError;\n+\n+import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.nio.charset.Charset;\n+import java.sql.Array;\n+import java.sql.Blob;\n+import java.sql.Clob;\n+import java.sql.Date;\n+import java.sql.JDBCType;\n+import java.sql.NClob;\n+import java.sql.RowId;\n+import java.sql.SQLException;\n+import java.sql.SQLXML;\n+import java.sql.Struct;\n+import java.sql.Time;\n+import java.sql.Timestamp;\n+import java.sql.Types;\n+\n+import static org.ballerinalang.sql.utils.Utils.convert;\n+import static org.ballerinalang.sql.utils.Utils.getString;\n+\n+/**\n+ * Util class to process InOut/Out parameters of procedure calls.\n+ */\n+public class OutParameterUtils {\n+\n+    public static Object get(ObjectValue result, BTypedesc typeDesc) {\n+        int sqlType = (int) result.getNativeData(Constants.ParameterObject.SQL_TYPE_NATIVE_DATA);\n+        Object value = result.getNativeData(Constants.ParameterObject.VALUE_NATIVE_DATA);\n+\n+        BType ballerinaType = typeDesc.getDescribingType();\n+        try {\n+            switch (sqlType) {\n+                case Types.CHAR:\n+                case Types.VARCHAR:\n+                case Types.LONGVARCHAR:\n+                case Types.NCHAR:\n+                case Types.NVARCHAR:\n+                case Types.LONGNVARCHAR:\n+                    return convert((String) value, sqlType, ballerinaType);\n+                case Types.BINARY:\n+                case Types.VARBINARY:\n+                case Types.LONGVARBINARY:\n+                    if (ballerinaType.getTag() == TypeTags.STRING_TAG) {\n+                        return convert((String) value, sqlType, ballerinaType);\n+                    } else {\n+                        return convert(((String) value).getBytes(Charset.defaultCharset()), sqlType, ballerinaType,\n+                                JDBCType.valueOf(sqlType).getName());\n+                    }\n+                case Types.ARRAY:\n+                    return convert((Array) value, sqlType, ballerinaType);\n+                case Types.BLOB:\n+                    return convert((Blob) value, sqlType, ballerinaType);\n+                case Types.CLOB:\n+                    String clobValue = getString((Clob) value);\n+                    return convert(clobValue, sqlType, ballerinaType);\n+                case Types.NCLOB:\n+                    String nClobValue = getString((NClob) value);\n+                    return convert(nClobValue, sqlType, ballerinaType);\n+                case Types.DATE:\n+                    return convert((Date) value, sqlType, ballerinaType);\n+                case Types.TIME:\n+                case Types.TIME_WITH_TIMEZONE:\n+                    return convert((Time) value, sqlType, ballerinaType);\n+                case Types.TIMESTAMP:\n+                case Types.TIMESTAMP_WITH_TIMEZONE:\n+                    return convert((Timestamp) value, sqlType, ballerinaType);\n+                case Types.ROWID:\n+                    return convert(((RowId) value).getBytes(), sqlType, ballerinaType, \"SQL RowID\");\n+                case Types.TINYINT:\n+                case Types.SMALLINT:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((int) value, sqlType, ballerinaType, false);\n+                case Types.INTEGER:\n+                case Types.BIGINT:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((long) value, sqlType, ballerinaType, false);\n+                case Types.REAL:\n+                case Types.FLOAT:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((float) value, sqlType, ballerinaType, false);\n+                case Types.DOUBLE:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((double) value, sqlType, ballerinaType, false);\n+                case Types.NUMERIC:\n+                case Types.DECIMAL:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((BigDecimal) value, sqlType, ballerinaType, false);\n+                case Types.BIT:\n+                case Types.BOOLEAN:\n+                    if (value == null) {\n+                        return null;\n+                    }\n+                    return convert((boolean) value, sqlType, ballerinaType, false);\n+                case Types.REF:\n+                case Types.STRUCT:\n+                    return convert((Struct) value, sqlType, ballerinaType);\n+                case Types.SQLXML:\n+                    return convert((SQLXML) value, sqlType, ballerinaType);\n+                default:\n+                    // Cannot reach to Default\n+                    return ErrorGenerator.getSQLApplicationError(\"Unsupported sql type \" + sqlType);", "originalCommit": "0c13c50d731d78b06b6f7eff1297e808fb58df4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMDI4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25193#discussion_r469100284", "bodyText": "Fixed in f56de73", "author": "niveathika", "createdAt": "2020-08-12T08:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzM3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f56de73c037b93fd5e8101d2ed59e50f34eeaeef", "chunk": "diff --git a/stdlib/database/sql/src/main/java/org/ballerinalang/sql/utils/OutParameterUtils.java b/stdlib/database/sql/src/main/java/org/ballerinalang/sql/utils/OutParameterUtils.java\nindex 1e951b6aa4b..7cb7a91b083 100644\n--- a/stdlib/database/sql/src/main/java/org/ballerinalang/sql/utils/OutParameterUtils.java\n+++ b/stdlib/database/sql/src/main/java/org/ballerinalang/sql/utils/OutParameterUtils.java\n\n@@ -135,7 +135,7 @@ public class OutParameterUtils {\n                     return convert((SQLXML) value, sqlType, ballerinaType);\n                 default:\n                     // Cannot reach to Default\n-                    return ErrorGenerator.getSQLApplicationError(\"Unsupported sql type \" + sqlType);\n+                    return ErrorGenerator.getSQLApplicationError(\"Unsupported SQL type \" + sqlType);\n             }\n         } catch (ApplicationError | IOException applicationError) {\n             return ErrorGenerator.getSQLApplicationError(applicationError.getMessage());\n"}}, {"oid": "cf1e8e2b43615ce1972aaec542efdd5677b8718a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf1e8e2b43615ce1972aaec542efdd5677b8718a", "message": "Improve call api to support string sqlQuery param", "committedDate": "2020-08-12T08:14:15Z", "type": "commit"}, {"oid": "bc5fe546804b504056bf7ef1bdb6fa3e51a64026", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc5fe546804b504056bf7ef1bdb6fa3e51a64026", "message": "Add test cases", "committedDate": "2020-08-12T08:20:03Z", "type": "commit"}, {"oid": "c8978fdc24a2c7d79c6ad6c4a90bae4d8e612f30", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c8978fdc24a2c7d79c6ad6c4a90bae4d8e612f30", "message": "Fix docs", "committedDate": "2020-08-12T08:26:40Z", "type": "commit"}, {"oid": "f56de73c037b93fd5e8101d2ed59e50f34eeaeef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f56de73c037b93fd5e8101d2ed59e50f34eeaeef", "message": "Fix error messages", "committedDate": "2020-08-12T08:36:45Z", "type": "commit"}, {"oid": "b21f0dbc5fe3b1d9b726a4543092821a64761e31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b21f0dbc5fe3b1d9b726a4543092821a64761e31", "message": "Fix parameter description", "committedDate": "2020-08-12T08:41:23Z", "type": "commit"}, {"oid": "87e22104dc37caf25438ab6703681b56c26cea83", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/87e22104dc37caf25438ab6703681b56c26cea83", "message": "Fix sample\n\nCo-authored-by: Danesh Kuruppu <daneshk@users.noreply.github.com>", "committedDate": "2020-08-12T10:10:54Z", "type": "commit"}, {"oid": "d253d68720e73c6113aae44b656ca7a9379dbf57", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d253d68720e73c6113aae44b656ca7a9379dbf57", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into procedure-call", "committedDate": "2020-08-12T12:53:36Z", "type": "commit"}]}