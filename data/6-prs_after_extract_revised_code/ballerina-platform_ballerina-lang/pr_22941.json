{"pr_number": 22941, "pr_title": "Add test case for default value initialization", "pr_createdAt": "2020-04-28T12:22:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22941", "timeline": [{"oid": "07071b13dc1c8a63fbc775a77cbbe7b589c816b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/07071b13dc1c8a63fbc775a77cbbe7b589c816b0", "message": "Add license", "committedDate": "2020-04-28T15:22:40Z", "type": "forcePushed"}, {"oid": "2dc6f6e2e3f57d118475d0f64cd914837a921c99", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2dc6f6e2e3f57d118475d0f64cd914837a921c99", "message": "Add license", "committedDate": "2020-04-28T18:34:00Z", "type": "forcePushed"}, {"oid": "5a46ee5ab30bf434c8c92f987059a6072a7ed9c0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a46ee5ab30bf434c8c92f987059a6072a7ed9c0", "message": "Add license", "committedDate": "2020-04-29T04:51:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEyNzc2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22941#discussion_r419127762", "bodyText": "Shall we rename this class? Something like ObjectFieldDefaultValueTest", "author": "pramodya1994", "createdAt": "2020-05-03T16:36:22Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*", "originalCommit": "5a46ee5ab30bf434c8c92f987059a6072a7ed9c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8486528b9354d35f9d0011d25b489caf9056f094", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nsimilarity index 70%\nrename from tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\nrename to tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nindex a080bf72e55..82fe2af150a 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\n\n@@ -45,8 +45,9 @@ import java.util.Map;\n /**\n  * Test cases to check default value initialization for objects in docs.\n  */\n-public class DefaultValueInitializationObjects {\n+public class ObjectFieldDefaultValueTest {\n     private Module testModule;\n+    List<Object> objects;\n \n     @BeforeClass\n     public void setup() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEyNzg3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22941#discussion_r419127870", "bodyText": "These values have never used", "author": "pramodya1994", "createdAt": "2020-05-03T16:37:03Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.DefaultableVariable;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Object;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases to check default value initialization for objects in docs.\n+ */\n+public class DefaultValueInitializationObjects {\n+    private Module testModule;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot =\n+                \"test-src\" + File.separator + \"documentation\" + File.separator + \"default_value_initialization\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"test_module\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocs(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);\n+        List<ModuleDoc> moduleDocList = new ArrayList<>(docsMap.values());\n+        moduleDocList.sort(Comparator.comparing(pkg -> pkg.bLangPackage.packageID.toString()));\n+        Map<String, List<Path>> resources = new HashMap<>();\n+\n+        Project project = BallerinaDocGenerator.getDocsGenModel(moduleDocList, resources);\n+        testModule = project.modules.get(0);\n+    }\n+\n+    @Test(description = \"Test default value init\")\n+    public void testDefValInit() {\n+        List<Object> objects = testModule.objects;\n+        Object foo, bar, student;", "originalCommit": "5a46ee5ab30bf434c8c92f987059a6072a7ed9c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8486528b9354d35f9d0011d25b489caf9056f094", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nsimilarity index 70%\nrename from tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\nrename to tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nindex a080bf72e55..82fe2af150a 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\n\n@@ -45,8 +45,9 @@ import java.util.Map;\n /**\n  * Test cases to check default value initialization for objects in docs.\n  */\n-public class DefaultValueInitializationObjects {\n+public class ObjectFieldDefaultValueTest {\n     private Module testModule;\n+    List<Object> objects;\n \n     @BeforeClass\n     public void setup() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEyODM4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22941#discussion_r419128381", "bodyText": "I think its better if we can write 3 test cases to check Different values. Like to test int value, string value, and object value.", "author": "pramodya1994", "createdAt": "2020-05-03T16:41:36Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.DefaultableVariable;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Object;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases to check default value initialization for objects in docs.\n+ */\n+public class DefaultValueInitializationObjects {\n+    private Module testModule;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot =\n+                \"test-src\" + File.separator + \"documentation\" + File.separator + \"default_value_initialization\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"test_module\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocs(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);\n+        List<ModuleDoc> moduleDocList = new ArrayList<>(docsMap.values());\n+        moduleDocList.sort(Comparator.comparing(pkg -> pkg.bLangPackage.packageID.toString()));\n+        Map<String, List<Path>> resources = new HashMap<>();\n+\n+        Project project = BallerinaDocGenerator.getDocsGenModel(moduleDocList, resources);\n+        testModule = project.modules.get(0);\n+    }\n+\n+    @Test(description = \"Test default value init\")\n+    public void testDefValInit() {\n+        List<Object> objects = testModule.objects;\n+        Object foo, bar, student;\n+        for (Object object : objects) {\n+            for (DefaultableVariable variable : object.fields) {\n+                if (object.name.equals(\"Foo\")) {\n+                    if (variable.name.equals(\"i\")) {\n+                        Assert.assertEquals(variable.defaultValue, \"1\");\n+                    }\n+                } else if (object.name.equals(\"Bar\")) {\n+                    if (variable.name.equals(\"i\")) {\n+                        Assert.assertEquals(variable.defaultValue, \"1\");", "originalCommit": "5a46ee5ab30bf434c8c92f987059a6072a7ed9c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8486528b9354d35f9d0011d25b489caf9056f094", "chunk": "diff --git a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nsimilarity index 70%\nrename from tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\nrename to tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\nindex a080bf72e55..82fe2af150a 100644\n--- a/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/DefaultValueInitializationObjects.java\n+++ b/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ObjectFieldDefaultValueTest.java\n\n@@ -45,8 +45,9 @@ import java.util.Map;\n /**\n  * Test cases to check default value initialization for objects in docs.\n  */\n-public class DefaultValueInitializationObjects {\n+public class ObjectFieldDefaultValueTest {\n     private Module testModule;\n+    List<Object> objects;\n \n     @BeforeClass\n     public void setup() throws IOException {\n"}}, {"oid": "8486528b9354d35f9d0011d25b489caf9056f094", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8486528b9354d35f9d0011d25b489caf9056f094", "message": "Add test cases for default value initialization", "committedDate": "2020-05-04T08:27:48Z", "type": "forcePushed"}, {"oid": "820d8fa9b3f06cb9b823dac94ef5d9690eced7b5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/820d8fa9b3f06cb9b823dac94ef5d9690eced7b5", "message": "Add test cases for default value initialization", "committedDate": "2020-05-05T04:58:43Z", "type": "forcePushed"}, {"oid": "c29f1cc754283d632894df20ccf7f8861a7d76b2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c29f1cc754283d632894df20ccf7f8861a7d76b2", "message": "Add test cases for default value initialization", "committedDate": "2020-05-05T08:55:46Z", "type": "forcePushed"}, {"oid": "228ef7c3918f0930f72079ce023ee0bc190fbfab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/228ef7c3918f0930f72079ce023ee0bc190fbfab", "message": "Add test cases for default value initialization", "committedDate": "2020-05-05T19:29:23Z", "type": "forcePushed"}, {"oid": "7593518fa8894c7c2eb4571fda3c7d994d9c02bf", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7593518fa8894c7c2eb4571fda3c7d994d9c02bf", "message": "Add test case for default value initialization", "committedDate": "2020-05-11T05:43:44Z", "type": "commit"}, {"oid": "c75c6c71aa3964ddde4af1730876442ac11d89df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c75c6c71aa3964ddde4af1730876442ac11d89df", "message": "Add test case for default value initialization", "committedDate": "2020-05-11T05:43:44Z", "type": "commit"}, {"oid": "8b85cad96f3d1c6dc7e077631c2ce8c16b1c3940", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8b85cad96f3d1c6dc7e077631c2ce8c16b1c3940", "message": "Add license", "committedDate": "2020-05-11T05:43:44Z", "type": "commit"}, {"oid": "2d6ca3faecac53c9f8874d84ce2f8926e0fae1f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d6ca3faecac53c9f8874d84ce2f8926e0fae1f8", "message": "Add test cases for default value initialization", "committedDate": "2020-05-11T05:43:44Z", "type": "commit"}, {"oid": "2d6ca3faecac53c9f8874d84ce2f8926e0fae1f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d6ca3faecac53c9f8874d84ce2f8926e0fae1f8", "message": "Add test cases for default value initialization", "committedDate": "2020-05-11T05:43:44Z", "type": "forcePushed"}]}