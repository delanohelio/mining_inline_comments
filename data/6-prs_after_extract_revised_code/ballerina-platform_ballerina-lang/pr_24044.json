{"pr_number": 24044, "pr_title": "Fix xml literal issues", "pr_createdAt": "2020-06-12T18:44:46Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYxMTExNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044#discussion_r439611115", "bodyText": "why are the test changed?", "author": "manuranga", "createdAt": "2020-06-12T19:44:25Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/xml/XMLLiteralTest.java", "diffHunk": "@@ -156,13 +155,13 @@ public void testXMLPILiteral() {\n         Assert.assertEquals(returns[1].stringValue(), \"<?foo 11?>\");\n \n         Assert.assertTrue(returns[2] instanceof BXML);\n-        Assert.assertEquals(returns[2].stringValue(), \"<?foo  aaa11bbb22ccc?>\");", "originalCommit": "3718f74c4498719452ad5f7758bf914bc9e4fffd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NzM3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044#discussion_r439697375", "bodyText": "This is a bug in the old xml-parser, where ws is captured as part of the xml-pi char* section. This is fixed in the new parser, now any ws is capture as ws.\nNow we are hitting a different bug which is there in BLangNodes, where ws is not propagated to runtime - BLandNodes ignore ws when creating XMLs. @KavinduZoysa  shall we create an issue for this?", "author": "SupunS", "createdAt": "2020-06-13T01:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYxMTExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0Mjk4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044#discussion_r439742985", "bodyText": "Created an issue #24065", "author": "KavinduZoysa", "createdAt": "2020-06-13T14:26:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYxMTExNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NjY5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044#discussion_r439696697", "bodyText": "shouldn't we use createExpression() method?", "author": "SupunS", "createdAt": "2020-06-13T01:29:37Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1805,7 +1805,16 @@ public BLangNode transform(TemplateExpressionNode expressionNode) {\n         SyntaxKind kind = expressionNode.kind();\n         switch (kind) {\n             case XML_TEMPLATE_EXPRESSION:\n-                return expressionNode.content().get(0).apply(this);\n+                SyntaxKind contentKind = expressionNode.content().get(0).kind();\n+                switch (contentKind) {\n+                    case XML_COMMENT:\n+                    case XML_PI:\n+                    case XML_ELEMENT:\n+                    case XML_EMPTY_ELEMENT:\n+                        return expressionNode.content().get(0).apply(this);", "originalCommit": "3718f74c4498719452ad5f7758bf914bc9e4fffd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NDMzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24044#discussion_r439744337", "bodyText": "We need to use that method, so changed it", "author": "KavinduZoysa", "createdAt": "2020-06-13T14:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NjY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b3d582bf56ebc5665630e11998aa9b2451f09506", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex 3165ee5f977..a291981f290 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -1811,7 +1816,7 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n                     case XML_PI:\n                     case XML_ELEMENT:\n                     case XML_EMPTY_ELEMENT:\n-                        return expressionNode.content().get(0).apply(this);\n+                        return createExpression(expressionNode.content().get(0));\n                     default:\n                         return createXMLLiteral(expressionNode);\n                 }\n"}}, {"oid": "b3d582bf56ebc5665630e11998aa9b2451f09506", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3d582bf56ebc5665630e11998aa9b2451f09506", "message": "Replace with createExpression method", "committedDate": "2020-06-13T14:51:11Z", "type": "forcePushed"}, {"oid": "648ae1031fcfb82c109c5c0ebdca5738cc179eaa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/648ae1031fcfb82c109c5c0ebdca5738cc179eaa", "message": "Fix issues in xml", "committedDate": "2020-06-14T04:16:37Z", "type": "commit"}, {"oid": "ca18c230c20a185573638fd13a7e234a2e4c1f9f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca18c230c20a185573638fd13a7e234a2e4c1f9f", "message": "Replace with createExpression method", "committedDate": "2020-06-14T04:16:37Z", "type": "commit"}, {"oid": "ca18c230c20a185573638fd13a7e234a2e4c1f9f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca18c230c20a185573638fd13a7e234a2e4c1f9f", "message": "Replace with createExpression method", "committedDate": "2020-06-14T04:16:37Z", "type": "forcePushed"}]}