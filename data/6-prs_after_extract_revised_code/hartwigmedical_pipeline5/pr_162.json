{"pr_number": 162, "pr_title": "Dev 1201", "pr_createdAt": "2020-06-10T05:46:48Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/162", "timeline": [{"oid": "40cc95eb132fc42276d398d01173defabf9cc7ca", "url": "https://github.com/hartwigmedical/pipeline5/commit/40cc95eb132fc42276d398d01173defabf9cc7ca", "message": "DEV-1201: Keep all samples in output", "committedDate": "2020-05-25T23:57:53Z", "type": "commit"}, {"oid": "731566db0e3942a27856ac43c1b7589840c2b488", "url": "https://github.com/hartwigmedical/pipeline5/commit/731566db0e3942a27856ac43c1b7589840c2b488", "message": "DEV-1201: More flexibility around sage samples", "committedDate": "2020-06-01T23:42:27Z", "type": "commit"}, {"oid": "747fed2a7d6d284cb98269d98e8074796ddfc324", "url": "https://github.com/hartwigmedical/pipeline5/commit/747fed2a7d6d284cb98269d98e8074796ddfc324", "message": "DEV-1201: Change scope of classes to they can be used in bulk operations", "committedDate": "2020-06-01T23:42:36Z", "type": "commit"}, {"oid": "82b523323ec7f07a2db1bfc1e5903d1e8c91bc14", "url": "https://github.com/hartwigmedical/pipeline5/commit/82b523323ec7f07a2db1bfc1e5903d1e8c91bc14", "message": "DEV-1201: Ability to check if parameter is passed", "committedDate": "2020-06-01T23:42:51Z", "type": "commit"}, {"oid": "8c4f24f8a392ceb73b1243ba0be9694e5d88a067", "url": "https://github.com/hartwigmedical/pipeline5/commit/8c4f24f8a392ceb73b1243ba0be9694e5d88a067", "message": "DEV-1201: Add new assembly parameter to sage", "committedDate": "2020-06-01T23:43:06Z", "type": "commit"}, {"oid": "82ec82dc4b5996117db52c2c264300f3e2279b8a", "url": "https://github.com/hartwigmedical/pipeline5/commit/82ec82dc4b5996117db52c2c264300f3e2279b8a", "message": "DEV-1201: Update PON filtering to include PON_MAX", "committedDate": "2020-06-01T23:43:07Z", "type": "commit"}, {"oid": "c402fba44ab141b088822497ca5b4aef1193e990", "url": "https://github.com/hartwigmedical/pipeline5/commit/c402fba44ab141b088822497ca5b4aef1193e990", "message": "DEV-1201: Batch Sage", "committedDate": "2020-06-01T23:43:07Z", "type": "commit"}, {"oid": "a6822ff7bef49e8e641d24146b3b4f450cbbad9d", "url": "https://github.com/hartwigmedical/pipeline5/commit/a6822ff7bef49e8e641d24146b3b4f450cbbad9d", "message": "DEV-1201: Remove COSMIC annotation", "committedDate": "2020-06-01T23:43:07Z", "type": "commit"}, {"oid": "b9321d54dd255b7a73caced4ffd9f5b9c509b499", "url": "https://github.com/hartwigmedical/pipeline5/commit/b9321d54dd255b7a73caced4ffd9f5b9c509b499", "message": "DEV-1201: Make bcftools 1.9 executable", "committedDate": "2020-06-01T23:43:07Z", "type": "commit"}, {"oid": "9c2a1a208311d2f7c6c05faca0d6ee4ca7400f79", "url": "https://github.com/hartwigmedical/pipeline5/commit/9c2a1a208311d2f7c6c05faca0d6ee4ca7400f79", "message": "DEV-1201: Add support for germline mode", "committedDate": "2020-06-02T00:10:17Z", "type": "commit"}, {"oid": "a7ee851831a8447984780474b48a2b92e900f924", "url": "https://github.com/hartwigmedical/pipeline5/commit/a7ee851831a8447984780474b48a2b92e900f924", "message": "DEV-1201: improved batch pon", "committedDate": "2020-06-10T04:53:34Z", "type": "commit"}, {"oid": "c8af3695bde85e68876366f4461f4b77f281e60f", "url": "https://github.com/hartwigmedical/pipeline5/commit/c8af3695bde85e68876366f4461f4b77f281e60f", "message": "DEV-1293: Use updated PON file", "committedDate": "2020-06-10T05:10:24Z", "type": "commit"}, {"oid": "938216e4ff820612d328eb5f88ca937702cafb0d", "url": "https://github.com/hartwigmedical/pipeline5/commit/938216e4ff820612d328eb5f88ca937702cafb0d", "message": "DEV-1201: Keep all samples in output", "committedDate": "2020-06-10T05:12:16Z", "type": "commit"}, {"oid": "e2143f8ad6b8f2904c05cfac90236f4176209672", "url": "https://github.com/hartwigmedical/pipeline5/commit/e2143f8ad6b8f2904c05cfac90236f4176209672", "message": "DEV-1201: More flexibility around sage samples", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "5b75858673ec27a98e2774abfcec19f877fe7b8f", "url": "https://github.com/hartwigmedical/pipeline5/commit/5b75858673ec27a98e2774abfcec19f877fe7b8f", "message": "DEV-1201: Change scope of classes to they can be used in bulk operations", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "108fec0a5835cb043c95ec05646d1b4074dbdfd2", "url": "https://github.com/hartwigmedical/pipeline5/commit/108fec0a5835cb043c95ec05646d1b4074dbdfd2", "message": "DEV-1201: Ability to check if parameter is passed", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "28eca3b5e9deae7d4896846fdaea9b54c9fc3c11", "url": "https://github.com/hartwigmedical/pipeline5/commit/28eca3b5e9deae7d4896846fdaea9b54c9fc3c11", "message": "DEV-1201: Add new assembly parameter to sage", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "e89e1ea0b858742fe87f6a8d0cc8e08bbd37e4af", "url": "https://github.com/hartwigmedical/pipeline5/commit/e89e1ea0b858742fe87f6a8d0cc8e08bbd37e4af", "message": "DEV-1201: Update PON filtering to include PON_MAX", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "646354d0c13de8a6405632ab905ed241e05e127c", "url": "https://github.com/hartwigmedical/pipeline5/commit/646354d0c13de8a6405632ab905ed241e05e127c", "message": "DEV-1201: Batch Sage", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "b9203ecbf23166d05a1e1e4a956c5ab358e0a959", "url": "https://github.com/hartwigmedical/pipeline5/commit/b9203ecbf23166d05a1e1e4a956c5ab358e0a959", "message": "DEV-1201: Remove COSMIC annotation", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "88e5ccda6ca446c5278340953f5fbb1760312403", "url": "https://github.com/hartwigmedical/pipeline5/commit/88e5ccda6ca446c5278340953f5fbb1760312403", "message": "DEV-1201: Make bcftools 1.9 executable", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "dd69c9b39eca341deabf8a0df20724e09bc64aab", "url": "https://github.com/hartwigmedical/pipeline5/commit/dd69c9b39eca341deabf8a0df20724e09bc64aab", "message": "DEV-1201: Add support for germline mode", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "c532fa3786bcd9364273cdc3c588e3d4992e647f", "url": "https://github.com/hartwigmedical/pipeline5/commit/c532fa3786bcd9364273cdc3c588e3d4992e647f", "message": "DEV-1201: improved batch pon", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "cd41e321620ddf80da44c6e0bec539a8c2a309fc", "url": "https://github.com/hartwigmedical/pipeline5/commit/cd41e321620ddf80da44c6e0bec539a8c2a309fc", "message": "DEV-1293: Use updated PON file", "committedDate": "2020-06-10T05:18:08Z", "type": "commit"}, {"oid": "5022a66109fe11a652db0ea6e2f836d667d60079", "url": "https://github.com/hartwigmedical/pipeline5/commit/5022a66109fe11a652db0ea6e2f836d667d60079", "message": "Merge branch 'DEV-1201' of github.com:hartwigmedical/pipeline5 into DEV-1201", "committedDate": "2020-06-10T05:18:50Z", "type": "commit"}, {"oid": "1b0edd2e6e812f8212302dd442f7d7af6b7e49ab", "url": "https://github.com/hartwigmedical/pipeline5/commit/1b0edd2e6e812f8212302dd442f7d7af6b7e49ab", "message": "Revert \"DEV-1201: Make bcftools 1.9 executable\"\n\nThis reverts commit 88e5ccda", "committedDate": "2020-06-10T05:45:34Z", "type": "commit"}, {"oid": "340cb81191e41cd1a13a27fa712b15a70ab522b8", "url": "https://github.com/hartwigmedical/pipeline5/commit/340cb81191e41cd1a13a27fa712b15a70ab522b8", "message": "DEV-1201: Fix tests", "committedDate": "2020-06-10T05:45:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0ODk1OA==", "url": "https://github.com/hartwigmedical/pipeline5/pull/162#discussion_r438348958", "bodyText": "Feels like the command builder could always be built externally (for instance in the validation) which would negate the need to expose all these public methods and have two constructors. Would that work?", "author": "pauldwolfe", "createdAt": "2020-06-10T19:09:29Z", "path": "cluster/src/main/java/com/hartwig/pipeline/calling/somatic/SageV2Application.java", "diffHunk": "@@ -6,41 +6,42 @@\n import com.hartwig.pipeline.calling.SubStage;\n import com.hartwig.pipeline.execution.vm.BashCommand;\n import com.hartwig.pipeline.execution.vm.OutputFile;\n+import com.hartwig.pipeline.resource.ResourceFiles;\n \n-class SageV2Application extends SubStage {\n+public class SageV2Application extends SubStage {\n \n-    private final String hotspotsVcf;\n-    private final String panelBed;\n-    private final String highConfidenceBed;\n-    private final String referenceGenomePath;\n-    private final String tumorBamPath;\n-    private final String referenceBamPath;\n-    private final String tumorSampleName;\n-    private final String referenceSampleName;\n+    private final SageCommandBuilder sageCommandBuilder;\n \n-    SageV2Application(final String hotspotsVcf, final String panelBed, final String highConfidenceBed, final String referenceGenomePath,\n-            final String tumorBamPath, final String referenceBamPath, final String tumorSampleName, final String referenceSampleName) {\n+    public SageV2Application(final ResourceFiles resourceFiles) {\n         super(\"sage.somatic\", OutputFile.GZIPPED_VCF);\n-        this.hotspotsVcf = hotspotsVcf;\n-        this.panelBed = panelBed;\n-        this.highConfidenceBed = highConfidenceBed;\n-        this.referenceGenomePath = referenceGenomePath;\n-        this.tumorBamPath = tumorBamPath;\n-        this.referenceBamPath = referenceBamPath;\n-        this.tumorSampleName = tumorSampleName;\n-        this.referenceSampleName = referenceSampleName;\n+        sageCommandBuilder = new SageCommandBuilder(resourceFiles);\n+    }\n+\n+    public SageV2Application(final ResourceFiles resourceFiles, final String tumorBamPath, final String referenceBamPath,\n+            final String tumorSampleName, final String referenceSampleName) {\n+        this(resourceFiles);\n+        sageCommandBuilder.addReference(referenceSampleName, referenceBamPath).addTumor(tumorSampleName, tumorBamPath);\n+    }\n+\n+    public void panelOnly() {", "originalCommit": "340cb81191e41cd1a13a27fa712b15a70ab522b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ0MzIxMw==", "url": "https://github.com/hartwigmedical/pipeline5/pull/162#discussion_r438443213", "bodyText": "Good idea", "author": "jonbaber", "createdAt": "2020-06-10T22:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0ODk1OA=="}], "type": "inlineReview", "revised_code": {"commit": "f04602ab8e96a48cac57d36e240c4729d4eedf2e", "chunk": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/calling/somatic/SageV2Application.java b/cluster/src/main/java/com/hartwig/pipeline/calling/somatic/SageV2Application.java\nindex d1e9051d..8de65be1 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/calling/somatic/SageV2Application.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/calling/somatic/SageV2Application.java\n\n@@ -20,18 +20,14 @@ public class SageV2Application extends SubStage {\n     public SageV2Application(final ResourceFiles resourceFiles, final String tumorBamPath, final String referenceBamPath,\n             final String tumorSampleName, final String referenceSampleName) {\n         this(resourceFiles);\n-        sageCommandBuilder.addReference(referenceSampleName, referenceBamPath).addTumor(tumorSampleName, tumorBamPath);\n+        addReference(referenceSampleName, referenceBamPath);\n+        addTumor(tumorSampleName, tumorBamPath);\n     }\n \n     public void panelOnly() {\n         sageCommandBuilder.panelOnly();\n     }\n \n-    public SageV2Application germlineMode(String sample, String bamFile) {\n-        sageCommandBuilder.addTumor(sample, bamFile).germlineMode();\n-        return this;\n-    }\n-\n     public void addTumor(String sample, String bamFile) {\n         sageCommandBuilder.addTumor(sample, bamFile);\n     }\n"}}, {"oid": "b604ba026d43645e92c2a7343dc8cf25aa447ce9", "url": "https://github.com/hartwigmedical/pipeline5/commit/b604ba026d43645e92c2a7343dc8cf25aa447ce9", "message": "DEV-1331: Bump BCFTools to 1.9", "committedDate": "2020-06-10T22:16:53Z", "type": "commit"}, {"oid": "f04602ab8e96a48cac57d36e240c4729d4eedf2e", "url": "https://github.com/hartwigmedical/pipeline5/commit/f04602ab8e96a48cac57d36e240c4729d4eedf2e", "message": "DEV-1201: More flexibility around sage samples", "committedDate": "2020-06-10T22:17:10Z", "type": "commit"}, {"oid": "7cfa73ad30942dac2facff5d1e82bf007ad2424a", "url": "https://github.com/hartwigmedical/pipeline5/commit/7cfa73ad30942dac2facff5d1e82bf007ad2424a", "message": "DEV-1201: Add new assembly parameter to sage", "committedDate": "2020-06-10T22:17:10Z", "type": "commit"}, {"oid": "399b8ae8a159b6605b75c70d93d89248468318ad", "url": "https://github.com/hartwigmedical/pipeline5/commit/399b8ae8a159b6605b75c70d93d89248468318ad", "message": "DEV-1201: Update PON filtering to include PON_MAX", "committedDate": "2020-06-10T22:17:19Z", "type": "commit"}, {"oid": "c5b24eb70005e9f4734a542611cb956cfeeada09", "url": "https://github.com/hartwigmedical/pipeline5/commit/c5b24eb70005e9f4734a542611cb956cfeeada09", "message": "DEV-1201: Merge in changes", "committedDate": "2020-06-10T22:17:19Z", "type": "commit"}, {"oid": "174c1ff1dc4d34b27078b6e4d18eb366de1caa70", "url": "https://github.com/hartwigmedical/pipeline5/commit/174c1ff1dc4d34b27078b6e4d18eb366de1caa70", "message": "DEV-1201: Keep sage command builder logic out of SageV2Application", "committedDate": "2020-06-10T22:17:27Z", "type": "commit"}, {"oid": "19ae38a53b03db8efcedd704b7491db2f1fcebd2", "url": "https://github.com/hartwigmedical/pipeline5/commit/19ae38a53b03db8efcedd704b7491db2f1fcebd2", "message": "DEV-1201: Fix another merge", "committedDate": "2020-06-10T22:25:01Z", "type": "commit"}, {"oid": "2dc7bf98b92a19cbfab890b7f133ab80ba3cc606", "url": "https://github.com/hartwigmedical/pipeline5/commit/2dc7bf98b92a19cbfab890b7f133ab80ba3cc606", "message": "Merge branch 'master' into DEV-1201", "committedDate": "2020-06-10T22:33:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzcwOQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/162#discussion_r438657709", "bodyText": "If the JAR version is stable at this point it's preferable to make an image containing it. Appreciate that during development this would be more expedient but if this code is going to stick around I'd rather it's more \"official\".", "author": "nedleitch", "createdAt": "2020-06-11T09:26:10Z", "path": "batch/src/main/java/com/hartwig/batch/operations/SageGermline.java", "diffHunk": "@@ -2,132 +2,110 @@\n \n import static java.lang.String.format;\n \n+import java.io.File;\n import java.util.List;\n-import java.util.stream.Collectors;\n \n+import com.google.common.collect.Lists;\n import com.hartwig.batch.BatchOperation;\n+import com.hartwig.batch.input.ImmutableInputFileDescriptor;\n import com.hartwig.batch.input.InputBundle;\n import com.hartwig.batch.input.InputFileDescriptor;\n import com.hartwig.pipeline.ResultsDirectory;\n+import com.hartwig.pipeline.calling.SubStageInputOutput;\n+import com.hartwig.pipeline.calling.command.VersionedToolCommand;\n+import com.hartwig.pipeline.calling.somatic.SageCommandBuilder;\n+import com.hartwig.pipeline.calling.somatic.SageV2Application;\n import com.hartwig.pipeline.execution.vm.Bash;\n import com.hartwig.pipeline.execution.vm.BashCommand;\n import com.hartwig.pipeline.execution.vm.BashStartupScript;\n-import com.hartwig.pipeline.execution.vm.JavaClassCommand;\n import com.hartwig.pipeline.execution.vm.OutputUpload;\n import com.hartwig.pipeline.execution.vm.RuntimeFiles;\n import com.hartwig.pipeline.execution.vm.VirtualMachineJobDefinition;\n-import com.hartwig.pipeline.execution.vm.VirtualMachinePerformanceProfile;\n import com.hartwig.pipeline.execution.vm.VmDirectories;\n-import com.hartwig.pipeline.resource.Hg37ResourceFiles;\n+import com.hartwig.pipeline.resource.RefGenomeVersion;\n import com.hartwig.pipeline.resource.ResourceFiles;\n+import com.hartwig.pipeline.resource.ResourceFilesFactory;\n import com.hartwig.pipeline.storage.GoogleStorageLocation;\n import com.hartwig.pipeline.storage.RuntimeBucket;\n+import com.hartwig.pipeline.tools.Versions;\n \n public class SageGermline implements BatchOperation {\n+\n+    private static String localFilename(InputFileDescriptor remote) {\n+        return format(\"%s/%s\", VmDirectories.INPUT, new File(remote.remoteFilename()).getName());\n+    }\n+\n+    private static InputFileDescriptor cramIndex(InputFileDescriptor bam) {\n+        return ImmutableInputFileDescriptor.builder().from(bam).remoteFilename(bam.remoteFilename() + \".crai\").build();\n+    }\n+\n+    private static InputFileDescriptor bamIndex(InputFileDescriptor bam) {\n+        return ImmutableInputFileDescriptor.builder().from(bam).remoteFilename(bam.remoteFilename() + \".bai\").build();\n+    }\n+\n     @Override\n     public VirtualMachineJobDefinition execute(final InputBundle inputs, final RuntimeBucket runtimeBucket,\n-                                               final BashStartupScript startupScript, final RuntimeFiles executionFlags) {\n-        String bucket = inputs.get(\"bucket\").remoteFilename();\n-        String set = inputs.get(\"set\").remoteFilename();\n-        String tumorSampleName = inputs.get(\"tumorSample\").remoteFilename();\n-        String referenceSampleName = inputs.get(\"referenceSample\").remoteFilename();\n-\n-        // 2017\n-//        String locationFormat = \"gs://%s/%s/%s/mapping/%s\";\n-//        String fileFormat = \"_dedup.realigned.bam\";\n-\n-        // ??? Some other random format\n-        String locationFormat = \"gs://%s/%s/%s/mapping/%s\";\n-        String fileFormat = \".realigned.bam\";\n-\n-        // 2019\n-//        String locationFormat = \"gs://%s/%s/%s/aligner/%s\";\n-//        String fileFormat = \".bam\";\n-\n-        String tumorBamFile = tumorSampleName + fileFormat;\n-        String referenceBamFile = referenceSampleName + fileFormat;\n-        String gcTumorBamFile = String.format(locationFormat, bucket, set, tumorSampleName, tumorBamFile);\n-        String gcReferenceBamFile = String.format(locationFormat, bucket, set, referenceSampleName, referenceBamFile);\n-\n-        String localTumorBamFile = String.format(\"%s/%s\", VmDirectories.INPUT, tumorBamFile);\n-        String localReferenceBamFile = String.format(\"%s/%s\", VmDirectories.INPUT, referenceBamFile);\n-\n-        final String output = String.format(\"%s/%s.sage.germline.vcf.gz\", VmDirectories.OUTPUT, tumorSampleName);\n-        final String panelBed = \"/opt/resources/sage/hg37/ActionableCodingPanel.hg19.bed.gz\";\n-        final String hotspots = \"/opt/resources/sage/hg37/KnownHotspots.hg19.vcf.gz\";\n-        final String highConfidenceBed = \"/opt/resources/sage/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz\";\n-\n-        final Hg37ResourceFiles resourceFiles = new Hg37ResourceFiles();\n-\n-        final BashCommand sageCommand = new JavaClassCommand(\"sage\",\n-                \"pilot\",\n-                \"sage.jar\",\n-                \"com.hartwig.hmftools.sage.SageApplication\",\n-                \"100G\",\n-                \"-reference\",\n-                referenceSampleName,\n-                \"-reference_bam\",\n-                localReferenceBamFile,\n-                \"-tumor\",\n-                tumorSampleName,\n-                \"-tumor_bam\",\n-                localTumorBamFile,\n-                \"-germline -hard_filter -hard_min_tumor_qual 0 -hard_min_tumor_raw_alt_support 3 -hard_min_tumor_raw_base_quality 30\",\n-                \"-panel_bed\",\n-                panelBed,\n-                \"-high_confidence_bed\",\n-                highConfidenceBed,\n-                \"-hotspots\",\n-                hotspots,\n-                \"-ref_genome\",\n-                resourceFiles.refGenomeFile(),\n-                \"-out\",\n-                output,\n-                \"-threads\",\n-                Bash.allCpus());\n+            final BashStartupScript startupScript, final RuntimeFiles executionFlags) {\n+\n+        final ResourceFiles resourceFiles = ResourceFilesFactory.buildResourceFiles(RefGenomeVersion.HG37);\n \n-        // Download required resources\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/sage.jar\", \"/opt/tools/sage/pilot/sage.jar\"));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/ActionableCodingPanel.hg19.bed.gz\", panelBed));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/KnownHotspots.hg19.vcf.gz\", hotspots));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz\", highConfidenceBed));\n+        final InputFileDescriptor remoteReferenceFile = inputs.get(\"reference\");\n+        final InputFileDescriptor remoteReferenceIndex = cramIndex(remoteReferenceFile);\n+        final String localReferenceFile = localFilename(remoteReferenceFile);\n+        final String localReferenceBam = localReferenceFile.replace(\"cram\", \"bam\");\n+        final String referenceSampleName = inputs.get(\"referenceSample\").remoteFilename();\n \n-        // Download bams (in parallel)\n-        startupScript.addCommand(() -> \"touch /data/input/files.list\");\n-        startupScript.addCommand(() -> format(\"echo %s | tee -a  /data/input/files.list\", gcTumorBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s.bai | tee -a /data/input/files.list\", gcTumorBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s | tee -a /data/input/files.list\", gcReferenceBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s.bai | tee -a /data/input/files.list\", gcReferenceBamFile));\n-        startupScript.addCommand(() -> format(\"cat /data/input/files.list | gsutil -m -u hmf-crunch cp -I %s\", \"/data/input/\"));\n+        // Download latest jar file\n+        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\",\n+                \"gs://batch-sage-validation/resources/sage.jar\",\n+                \"/opt/tools/sage/\" + Versions.SAGE + \"/sage.jar\"));", "originalCommit": "2dc7bf98b92a19cbfab890b7f133ab80ba3cc606", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2Mjk3MA==", "url": "https://github.com/hartwigmedical/pipeline5/pull/162#discussion_r438662970", "bodyText": "You might consider re-using the existing batch commands that we used for the batch conversion, to help simplify this batch. With that approach you'd work out which BAMs need to be converted up-front, run a batch, then remove the conditional logic here.\nThe existing code also does some validation. See SamtoolsBamToCram if interested.", "author": "nedleitch", "createdAt": "2020-06-11T09:35:42Z", "path": "batch/src/main/java/com/hartwig/batch/operations/SageGermline.java", "diffHunk": "@@ -2,132 +2,110 @@\n \n import static java.lang.String.format;\n \n+import java.io.File;\n import java.util.List;\n-import java.util.stream.Collectors;\n \n+import com.google.common.collect.Lists;\n import com.hartwig.batch.BatchOperation;\n+import com.hartwig.batch.input.ImmutableInputFileDescriptor;\n import com.hartwig.batch.input.InputBundle;\n import com.hartwig.batch.input.InputFileDescriptor;\n import com.hartwig.pipeline.ResultsDirectory;\n+import com.hartwig.pipeline.calling.SubStageInputOutput;\n+import com.hartwig.pipeline.calling.command.VersionedToolCommand;\n+import com.hartwig.pipeline.calling.somatic.SageCommandBuilder;\n+import com.hartwig.pipeline.calling.somatic.SageV2Application;\n import com.hartwig.pipeline.execution.vm.Bash;\n import com.hartwig.pipeline.execution.vm.BashCommand;\n import com.hartwig.pipeline.execution.vm.BashStartupScript;\n-import com.hartwig.pipeline.execution.vm.JavaClassCommand;\n import com.hartwig.pipeline.execution.vm.OutputUpload;\n import com.hartwig.pipeline.execution.vm.RuntimeFiles;\n import com.hartwig.pipeline.execution.vm.VirtualMachineJobDefinition;\n-import com.hartwig.pipeline.execution.vm.VirtualMachinePerformanceProfile;\n import com.hartwig.pipeline.execution.vm.VmDirectories;\n-import com.hartwig.pipeline.resource.Hg37ResourceFiles;\n+import com.hartwig.pipeline.resource.RefGenomeVersion;\n import com.hartwig.pipeline.resource.ResourceFiles;\n+import com.hartwig.pipeline.resource.ResourceFilesFactory;\n import com.hartwig.pipeline.storage.GoogleStorageLocation;\n import com.hartwig.pipeline.storage.RuntimeBucket;\n+import com.hartwig.pipeline.tools.Versions;\n \n public class SageGermline implements BatchOperation {\n+\n+    private static String localFilename(InputFileDescriptor remote) {\n+        return format(\"%s/%s\", VmDirectories.INPUT, new File(remote.remoteFilename()).getName());\n+    }\n+\n+    private static InputFileDescriptor cramIndex(InputFileDescriptor bam) {\n+        return ImmutableInputFileDescriptor.builder().from(bam).remoteFilename(bam.remoteFilename() + \".crai\").build();\n+    }\n+\n+    private static InputFileDescriptor bamIndex(InputFileDescriptor bam) {\n+        return ImmutableInputFileDescriptor.builder().from(bam).remoteFilename(bam.remoteFilename() + \".bai\").build();\n+    }\n+\n     @Override\n     public VirtualMachineJobDefinition execute(final InputBundle inputs, final RuntimeBucket runtimeBucket,\n-                                               final BashStartupScript startupScript, final RuntimeFiles executionFlags) {\n-        String bucket = inputs.get(\"bucket\").remoteFilename();\n-        String set = inputs.get(\"set\").remoteFilename();\n-        String tumorSampleName = inputs.get(\"tumorSample\").remoteFilename();\n-        String referenceSampleName = inputs.get(\"referenceSample\").remoteFilename();\n-\n-        // 2017\n-//        String locationFormat = \"gs://%s/%s/%s/mapping/%s\";\n-//        String fileFormat = \"_dedup.realigned.bam\";\n-\n-        // ??? Some other random format\n-        String locationFormat = \"gs://%s/%s/%s/mapping/%s\";\n-        String fileFormat = \".realigned.bam\";\n-\n-        // 2019\n-//        String locationFormat = \"gs://%s/%s/%s/aligner/%s\";\n-//        String fileFormat = \".bam\";\n-\n-        String tumorBamFile = tumorSampleName + fileFormat;\n-        String referenceBamFile = referenceSampleName + fileFormat;\n-        String gcTumorBamFile = String.format(locationFormat, bucket, set, tumorSampleName, tumorBamFile);\n-        String gcReferenceBamFile = String.format(locationFormat, bucket, set, referenceSampleName, referenceBamFile);\n-\n-        String localTumorBamFile = String.format(\"%s/%s\", VmDirectories.INPUT, tumorBamFile);\n-        String localReferenceBamFile = String.format(\"%s/%s\", VmDirectories.INPUT, referenceBamFile);\n-\n-        final String output = String.format(\"%s/%s.sage.germline.vcf.gz\", VmDirectories.OUTPUT, tumorSampleName);\n-        final String panelBed = \"/opt/resources/sage/hg37/ActionableCodingPanel.hg19.bed.gz\";\n-        final String hotspots = \"/opt/resources/sage/hg37/KnownHotspots.hg19.vcf.gz\";\n-        final String highConfidenceBed = \"/opt/resources/sage/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz\";\n-\n-        final Hg37ResourceFiles resourceFiles = new Hg37ResourceFiles();\n-\n-        final BashCommand sageCommand = new JavaClassCommand(\"sage\",\n-                \"pilot\",\n-                \"sage.jar\",\n-                \"com.hartwig.hmftools.sage.SageApplication\",\n-                \"100G\",\n-                \"-reference\",\n-                referenceSampleName,\n-                \"-reference_bam\",\n-                localReferenceBamFile,\n-                \"-tumor\",\n-                tumorSampleName,\n-                \"-tumor_bam\",\n-                localTumorBamFile,\n-                \"-germline -hard_filter -hard_min_tumor_qual 0 -hard_min_tumor_raw_alt_support 3 -hard_min_tumor_raw_base_quality 30\",\n-                \"-panel_bed\",\n-                panelBed,\n-                \"-high_confidence_bed\",\n-                highConfidenceBed,\n-                \"-hotspots\",\n-                hotspots,\n-                \"-ref_genome\",\n-                resourceFiles.refGenomeFile(),\n-                \"-out\",\n-                output,\n-                \"-threads\",\n-                Bash.allCpus());\n+            final BashStartupScript startupScript, final RuntimeFiles executionFlags) {\n+\n+        final ResourceFiles resourceFiles = ResourceFilesFactory.buildResourceFiles(RefGenomeVersion.HG37);\n \n-        // Download required resources\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/sage.jar\", \"/opt/tools/sage/pilot/sage.jar\"));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/ActionableCodingPanel.hg19.bed.gz\", panelBed));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/KnownHotspots.hg19.vcf.gz\", hotspots));\n-        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", \"gs://batch-sage/resources/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz\", highConfidenceBed));\n+        final InputFileDescriptor remoteReferenceFile = inputs.get(\"reference\");\n+        final InputFileDescriptor remoteReferenceIndex = cramIndex(remoteReferenceFile);\n+        final String localReferenceFile = localFilename(remoteReferenceFile);\n+        final String localReferenceBam = localReferenceFile.replace(\"cram\", \"bam\");\n+        final String referenceSampleName = inputs.get(\"referenceSample\").remoteFilename();\n \n-        // Download bams (in parallel)\n-        startupScript.addCommand(() -> \"touch /data/input/files.list\");\n-        startupScript.addCommand(() -> format(\"echo %s | tee -a  /data/input/files.list\", gcTumorBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s.bai | tee -a /data/input/files.list\", gcTumorBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s | tee -a /data/input/files.list\", gcReferenceBamFile));\n-        startupScript.addCommand(() -> format(\"echo %s.bai | tee -a /data/input/files.list\", gcReferenceBamFile));\n-        startupScript.addCommand(() -> format(\"cat /data/input/files.list | gsutil -m -u hmf-crunch cp -I %s\", \"/data/input/\"));\n+        // Download latest jar file\n+        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\",\n+                \"gs://batch-sage-validation/resources/sage.jar\",\n+                \"/opt/tools/sage/\" + Versions.SAGE + \"/sage.jar\"));\n \n-        // Prevent errors about index being older than bam\n-        startupScript.addCommand(() -> format(\"touch %s.bai\", localTumorBamFile));\n-        startupScript.addCommand(() -> format(\"touch %s.bai\", localReferenceBamFile));\n+        // Download normal\n+        startupScript.addCommand(() -> remoteReferenceFile.toCommandForm(localReferenceFile));\n+        startupScript.addCommand(() -> remoteReferenceIndex.toCommandForm(localFilename(remoteReferenceIndex)));\n \n+        final SageCommandBuilder sageCommandBuilder =\n+                new SageCommandBuilder(resourceFiles).germlineMode(referenceSampleName, localReferenceBam);\n+        final SageV2Application sageV2Application = new SageV2Application(sageCommandBuilder);\n \n-        //        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", gcTumorBamFile, localTumorBamFile + \".bai\"));\n-        //        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", gcTumorBamFile + \".bai\", localTumorBamFile + \".bai\"));\n-        //        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", gcReferenceBamFile, localReferenceBamFile));\n-        //        startupScript.addCommand(() -> format(\"gsutil -u hmf-crunch cp %s %s\", gcReferenceBamFile + \".bai\", localReferenceBamFile + \".bai\"));\n+        // Convert to bam if necessary\n+        if (!localReferenceFile.equals(localReferenceBam)) {\n+            startupScript.addCommands(cramToBam(localReferenceFile));\n+        }", "originalCommit": "2dc7bf98b92a19cbfab890b7f133ab80ba3cc606", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}