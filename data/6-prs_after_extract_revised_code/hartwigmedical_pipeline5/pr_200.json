{"pr_number": 200, "pr_title": "DEV-1525 Publish datatypes for all files used in re-runs", "pr_createdAt": "2020-09-22T21:22:38Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/200", "timeline": [{"oid": "fa13f31810c4bd2e28c4e548c3288de1b4d939a2", "url": "https://github.com/hartwigmedical/pipeline5/commit/fa13f31810c4bd2e28c4e548c3288de1b4d939a2", "message": "DEV-1525 Publish datatypes for all files used in re-runs\n\nGenerally follows the pattern laid out for crams, with a few changes.\n\nLinking to sample is combined with datatype linking, we always need a sample to look it up.\n\nPath construction done in the AddDatatypeToFile class to prevent mistakes and duplication.\n\nTest added, still WIP.", "committedDate": "2020-09-22T21:22:11Z", "type": "commit"}, {"oid": "1c64233646f54d2ce9d98d29f4e9357700d298fd", "url": "https://github.com/hartwigmedical/pipeline5/commit/1c64233646f54d2ce9d98d29f4e9357700d298fd", "message": "DEV-1525 Add tests for further operations\n\nAdds a simple check for whether a stages operations match the expected.\n\nStill not possible for stages with state (germline, structural, sage).", "committedDate": "2020-09-23T15:13:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcwNTUzNQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/200#discussion_r493705535", "bodyText": "This is an opportunity to loosen the allowable response codes so we can make the API return a more standard response.", "author": "nedleitch", "createdAt": "2020-09-23T15:54:28Z", "path": "cluster/src/main/java/com/hartwig/pipeline/sbpapi/SbpRestApi.java", "diffHunk": "@@ -113,10 +115,19 @@ public AddFileApiResponse postFile(final SbpFileMetadata metaData) {\n         }\n     }\n \n-    public void linkFileToSample(final int id, final int sampleId) {\n-        Map<String, Integer> request = new HashMap<>();\n-        request.put(\"sample_id\", sampleId);\n-        submitJson(POST, api().path(format(\"%s/%d/sample\", FILES, id)), request, Response.Status.CREATED);\n+    public void linkFileToSample(final int id, final String barcode) {\n+        try {\n+            SbpSample sample = ObjectMappers.get().<List<SbpSample>>readValue(returnOrThrow(api().path(SAMPLES)\n+                    .queryParam(\"barcode\", barcode)\n+                    .request()\n+                    .get()), new TypeReference<List<SbpSample>>() {\n+            }).stream().findFirst().orElseThrow();\n+            Map<String, Integer> request = new HashMap<>();\n+            request.put(\"sample_id\", sample.id());\n+            returnOrThrow(submitJson(POST, api().path(FILES).path(String.valueOf(id)).path(\"sample\"), request, Response.Status.CREATED));", "originalCommit": "1c64233646f54d2ce9d98d29f4e9357700d298fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}