{"pr_number": 8811, "pr_title": "Server Integration Tests", "pr_createdAt": "2020-10-26T17:45:23Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8811", "timeline": [{"oid": "100a4f9e4642f42375302b33e7676d8969f5c643", "url": "https://github.com/infinispan/infinispan/commit/100a4f9e4642f42375302b33e7676d8969f5c643", "message": "Server Integration Tests", "committedDate": "2020-10-26T17:46:09Z", "type": "forcePushed"}, {"oid": "e94aaf49edaad538929a588f6ecb4775cd46570d", "url": "https://github.com/infinispan/infinispan/commit/e94aaf49edaad538929a588f6ecb4775cd46570d", "message": "Server Integration Tests", "committedDate": "2020-10-26T19:10:53Z", "type": "forcePushed"}, {"oid": "76e3cc0d372840f02ddbc00cf97fd189c0d63070", "url": "https://github.com/infinispan/infinispan/commit/76e3cc0d372840f02ddbc00cf97fd189c0d63070", "message": "Server Integration Tests", "committedDate": "2020-10-27T14:28:42Z", "type": "forcePushed"}, {"oid": "66739283b6ed35ca676f0863a7dbbcc936d01536", "url": "https://github.com/infinispan/infinispan/commit/66739283b6ed35ca676f0863a7dbbcc936d01536", "message": "Server Integration Tests", "committedDate": "2020-10-28T14:04:16Z", "type": "forcePushed"}, {"oid": "110f167662a2dca1000520c3fa6a8368884991c9", "url": "https://github.com/infinispan/infinispan/commit/110f167662a2dca1000520c3fa6a8368884991c9", "message": "Server Integration Tests", "committedDate": "2020-10-28T17:02:03Z", "type": "forcePushed"}, {"oid": "a8c079c332909490d1170f0fe5bb3f3b33ee2807", "url": "https://github.com/infinispan/infinispan/commit/a8c079c332909490d1170f0fe5bb3f3b33ee2807", "message": "Server Integration Tests", "committedDate": "2020-10-30T11:33:38Z", "type": "forcePushed"}, {"oid": "c49b3ea982cbd508490e3e338b6c673bd418bc04", "url": "https://github.com/infinispan/infinispan/commit/c49b3ea982cbd508490e3e338b6c673bd418bc04", "message": "Server Integration Tests", "committedDate": "2020-11-18T19:33:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzNjg4Ng==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557336886", "bodyText": "Never used.", "author": "ryanemerson", "createdAt": "2021-01-14T11:46:09Z", "path": "integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.infinispan.test.integration.util;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class ITestUtils {\n+\n+   public static void sleepForSecs(long numSecs) {\n+      // give the elements time to be evicted\n+      try {\n+         Thread.sleep(numSecs * 1000);\n+      } catch (InterruptedException e) {\n+      }\n+   }\n+\n+   public static void eventually(Condition ec, long timeout) {", "originalCommit": "c49b3ea982cbd508490e3e338b6c673bd418bc04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "chunk": "diff --git a/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java b/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\nindex a37229e9c2..5b2bb194c3 100644\n--- a/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\n+++ b/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\n\n@@ -12,10 +12,6 @@ public static void sleepForSecs(long numSecs) {\n       }\n    }\n \n-   public static void eventually(Condition ec, long timeout) {\n-      eventually(ec, timeout, 10);\n-   }\n-\n    public static void eventually(Condition ec, long timeout, int loops) {\n       if (loops <= 0) {\n          throw new IllegalArgumentException(\"Number of loops must be positive\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzNzAzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557337035", "bodyText": "public is redundant.", "author": "ryanemerson", "createdAt": "2021-01-14T11:46:27Z", "path": "integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.infinispan.test.integration.util;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class ITestUtils {\n+\n+   public static void sleepForSecs(long numSecs) {\n+      // give the elements time to be evicted\n+      try {\n+         Thread.sleep(numSecs * 1000);\n+      } catch (InterruptedException e) {\n+      }\n+   }\n+\n+   public static void eventually(Condition ec, long timeout) {\n+      eventually(ec, timeout, 10);\n+   }\n+\n+   public static void eventually(Condition ec, long timeout, int loops) {\n+      if (loops <= 0) {\n+         throw new IllegalArgumentException(\"Number of loops must be positive\");\n+      }\n+      long sleepDuration = timeout / loops;\n+      if (sleepDuration == 0) {\n+         sleepDuration = 1;\n+      }\n+      try {\n+         for (int i = 0; i < loops; i++) {\n+\n+            if (ec.isSatisfied())\n+               return;\n+            Thread.sleep(sleepDuration);\n+         }\n+         assertTrue(ec.isSatisfied());\n+      } catch (Exception e) {\n+         throw new RuntimeException(\"Unexpected!\", e);\n+      }\n+   }\n+\n+   public interface Condition {\n+      public boolean isSatisfied() throws Exception;", "originalCommit": "c49b3ea982cbd508490e3e338b6c673bd418bc04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "chunk": "diff --git a/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java b/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\nindex a37229e9c2..5b2bb194c3 100644\n--- a/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\n+++ b/integrationtests/server-integration/server-integration-commons/src/test/java/org/infinispan/test/integration/util/ITestUtils.java\n\n@@ -12,10 +12,6 @@ public static void sleepForSecs(long numSecs) {\n       }\n    }\n \n-   public static void eventually(Condition ec, long timeout) {\n-      eventually(ec, timeout, 10);\n-   }\n-\n    public static void eventually(Condition ec, long timeout, int loops) {\n       if (loops <= 0) {\n          throw new IllegalArgumentException(\"Number of loops must be positive\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzODkwMA==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557338900", "bodyText": "Do we need the equivalent of this test for wildfly-modules?", "author": "ryanemerson", "createdAt": "2021-01-14T11:49:44Z", "path": "integrationtests/server-integration/third-party-server/src/test/java/org/infinispan/test/integration/thirdparty/remote/MemcachedClientIT.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.infinispan.test.integration.thirdparty.remote;\n+\n+import static org.infinispan.test.integration.thirdparty.DeploymentHelper.addLibrary;\n+\n+import org.infinispan.test.integration.thirdparty.DeploymentHelper;\n+import org.infinispan.test.integration.remote.AbstractMemcacheClientIT;\n+import org.infinispan.test.integration.memcached.SimpleMemcachedClient;\n+import org.infinispan.test.integration.util.ITestUtils;\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(Arquillian.class)\n+public class MemcachedClientIT extends AbstractMemcacheClientIT {", "originalCommit": "c49b3ea982cbd508490e3e338b6c673bd418bc04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM4MTE0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557381141", "bodyText": "We can add it together with the CDI Tests.", "author": "diegolovison", "createdAt": "2021-01-14T13:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzODkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQyMTM2MQ==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557421361", "bodyText": "Ok np. Can you create a Jira for this, or add it the CDI test issue.", "author": "ryanemerson", "createdAt": "2021-01-14T14:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzODkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQyODE5NA==", "url": "https://github.com/infinispan/infinispan/pull/8811#discussion_r557428194", "bodyText": "https://issues.redhat.com/browse/ISPN-12623\nhttps://issues.redhat.com/browse/ISPN-12624", "author": "diegolovison", "createdAt": "2021-01-14T14:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMzODkwMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "url": "https://github.com/infinispan/infinispan/commit/4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "message": "Server Integration Tests", "committedDate": "2021-01-14T13:07:22Z", "type": "commit"}, {"oid": "4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "url": "https://github.com/infinispan/infinispan/commit/4c6e2115b4e0f6ec6ef1094168a0aadc5c661114", "message": "Server Integration Tests", "committedDate": "2021-01-14T13:07:22Z", "type": "forcePushed"}]}