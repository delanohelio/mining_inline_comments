{"pr_number": 8821, "pr_title": "ISPN-12444 Stream K/V endpoint", "pr_createdAt": "2020-10-28T21:48:07Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8821", "timeline": [{"oid": "0445675470eabc2c03361db59c9147ee6e162f31", "url": "https://github.com/infinispan/infinispan/commit/0445675470eabc2c03361db59c9147ee6e162f31", "message": "ISPN-12444 Stream K/V endpoint\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-28T21:54:13Z", "type": "forcePushed"}, {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "url": "https://github.com/infinispan/infinispan/commit/dac872a989fc2b7f9d1987796d7295c8eb5335ae", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-28T22:00:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NDI0Ng==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514184246", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Stream all keys\n          \n          \n            \n                * Retrieve all keys", "author": "gustavonalle", "createdAt": "2020-10-29T11:21:58Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NDc0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514184749", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @return Response with all keys streamed\n          \n          \n            \n                * @return Response with inputStream to get all the keys", "author": "gustavonalle", "createdAt": "2020-10-29T11:22:57Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTM0Mw==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Stream keys putting a limit\n          \n          \n            \n                * Retrieve keys limited by count", "author": "gustavonalle", "createdAt": "2020-10-29T11:24:12Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTU3OQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185579", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @param limit, limit the response\n          \n          \n            \n                * @param limit The maximum number of keys to retrieve", "author": "gustavonalle", "createdAt": "2020-10-29T11:24:35Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTkzOQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185939", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @return Response with the limited amount of keys streamed\n          \n          \n            \n                * @return Response with InputStream to get the keys", "author": "gustavonalle", "createdAt": "2020-10-29T11:25:13Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NjU3OA==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514186578", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Retrieves entries without metadata\n          \n          \n            \n                * Retrieves entries without metadata\n          \n          \n            \n                @return Response with InputStream to get the entries", "author": "gustavonalle", "createdAt": "2020-10-29T11:26:26Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzExOA==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187118", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Retrieves entries\n          \n          \n            \n                * Retrieves entries limited by count", "author": "gustavonalle", "createdAt": "2020-10-29T11:27:29Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzQwOQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187409", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Limit -1 : all entries\n          \n          \n            \n                * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all", "author": "gustavonalle", "createdAt": "2020-10-29T11:28:04Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzY0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187641", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Limit -1 : all entries\n          \n          \n            \n                * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all", "author": "gustavonalle", "createdAt": "2020-10-29T11:28:34Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries\n+    */\n+   CompletionStage<RestResponse> entries(int limit);\n+\n+   /**\n+    * Retrieves entries with limit and metadata\n+    * Limit -1 : all entries", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzgwMw==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187803", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Metadata true: includes the metadata for each entry\n          \n          \n            \n                * @param metadata: if true, includes the metadata for each entry", "author": "gustavonalle", "createdAt": "2020-10-29T11:28:56Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries\n+    */\n+   CompletionStage<RestResponse> entries(int limit);\n+\n+   /**\n+    * Retrieves entries with limit and metadata\n+    * Limit -1 : all entries\n+    * Metadata true: includes the metadata for each entry", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5MzQxMA==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514193410", "bodyText": "I'd rather apply the limit in the stream itself instead of the adaptor:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n          \n          \n            \n                      CacheStream<?> stream = cache.keySet().stream();\n          \n          \n            \n                      if(limit > 0) stream = cache.keySet().stream().limit(limit);\n          \n          \n            \n                      responseBuilder.entity(new CacheKeyInputStream(stream, batch));\n          \n      \n    \n    \n  \n\nAnd CacheKeyInputStream does not need to change its internal logic", "author": "gustavonalle", "createdAt": "2020-10-29T11:39:43Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzMzI3Mg==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514333272", "bodyText": "ok", "author": "karesti", "createdAt": "2020-10-29T15:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5MzQxMA=="}], "type": "inlineReview", "revised_code": {"commit": "c2a43fa04fffc6fff24e727965be2f38d7a5d455", "chunk": "diff --git a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\nindex 3cf86511f5..a1ec7f277a 100644\n--- a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n+++ b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n\n@@ -191,7 +193,11 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+         CacheStream<?> stream = cache.keySet().stream();\n+         if (limit > -1) {\n+            stream = stream.limit(limit);\n+         }\n+         responseBuilder.entity(new CacheKeyInputStream(stream, batch));\n \n          responseBuilder.contentType(APPLICATION_JSON_TYPE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDIxNQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514194215", "bodyText": "The default should be unlimited, like the keys", "author": "gustavonalle", "createdAt": "2020-10-29T11:41:16Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+\n+         responseBuilder.contentType(APPLICATION_JSON_TYPE);\n+\n+         return responseBuilder.build();\n+      }, invocationHelper.getExecutor());\n+   }\n+\n+   private CompletionStage<RestResponse> streamEntries(RestRequest request) {\n+      String cacheName = request.variables().get(\"cacheName\");\n+      String limitParam = request.getParameter(\"limit\");\n+      String metadataParam = request.getParameter(\"metadata\");\n+      String batchParam = request.getParameter(\"batch\");\n+      int limit = limitParam == null ? 100 : Integer.parseInt(limitParam);", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzMjY4Ng==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514332686", "bodyText": "yep, this is something I forgot", "author": "karesti", "createdAt": "2020-10-29T15:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c2a43fa04fffc6fff24e727965be2f38d7a5d455", "chunk": "diff --git a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\nindex 3cf86511f5..a1ec7f277a 100644\n--- a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n+++ b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n\n@@ -191,7 +193,11 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+         CacheStream<?> stream = cache.keySet().stream();\n+         if (limit > -1) {\n+            stream = stream.limit(limit);\n+         }\n+         responseBuilder.entity(new CacheKeyInputStream(stream, batch));\n \n          responseBuilder.contentType(APPLICATION_JSON_TYPE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NjE1NQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514196155", "bodyText": "Same as the comment before, I'd rather apply the limit in the stream itself", "author": "gustavonalle", "createdAt": "2020-10-29T11:44:58Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+\n+         responseBuilder.contentType(APPLICATION_JSON_TYPE);\n+\n+         return responseBuilder.build();\n+      }, invocationHelper.getExecutor());\n+   }\n+\n+   private CompletionStage<RestResponse> streamEntries(RestRequest request) {\n+      String cacheName = request.variables().get(\"cacheName\");\n+      String limitParam = request.getParameter(\"limit\");\n+      String metadataParam = request.getParameter(\"metadata\");\n+      String batchParam = request.getParameter(\"batch\");\n+      int limit = limitParam == null ? 100 : Integer.parseInt(limitParam);\n+      boolean metadata = metadataParam == null ? false : Boolean.parseBoolean(metadataParam);\n+      int batch = batchParam == null ? STREAM_BATCH_SIZE : Integer.parseInt(batchParam);\n+\n+      Cache<?, ?> cache = invocationHelper.getRestCacheManager().getCache(cacheName, APPLICATION_JSON, APPLICATION_JSON, request);\n+      if (cache == null)\n+         return notFoundResponseFuture();\n+\n+      // Streaming over the cache is blocking\n+      return CompletableFuture.supplyAsync(() -> {\n+         NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n+         responseBuilder.entity(new CacheEntryInputStream(cache.entrySet().stream(), batch, limit, metadata));", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzMzA2NQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514333065", "bodyText": "ok", "author": "karesti", "createdAt": "2020-10-29T15:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NjE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c2a43fa04fffc6fff24e727965be2f38d7a5d455", "chunk": "diff --git a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\nindex 3cf86511f5..a1ec7f277a 100644\n--- a/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n+++ b/server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java\n\n@@ -191,7 +193,11 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+         CacheStream<?> stream = cache.keySet().stream();\n+         if (limit > -1) {\n+            stream = stream.limit(limit);\n+         }\n+         responseBuilder.entity(new CacheKeyInputStream(stream, batch));\n \n          responseBuilder.contentType(APPLICATION_JSON_TYPE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0ODgzMQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514248831", "bodyText": "Please see my comments review below @oraNod. I think it'd be more clear to use retrieve instead of stream in the API docs, clarifying the response contains an InputStream to consume the result", "author": "gustavonalle", "createdAt": "2020-10-29T13:15:45Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit", "originalCommit": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1MDc0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514250749", "bodyText": "@gustavonalle ack. I'll edit my review.", "author": "oraNod", "createdAt": "2020-10-29T13:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0ODgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\nindex e387150b9f..e44bcc34df 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\n@@ -17,35 +17,36 @@\n    String name();\n \n    /**\n-    * Stream all keys\n+    * Retrieve all keys\n     *\n-    * @return Response with all keys streamed\n+    * @return Response with inputStream to get all the keys\n     */\n    CompletionStage<RestResponse> keys();\n \n    /**\n-    * Stream keys putting a limit\n+    * Retrieve keys limited by count\n     *\n-    * @param limit, limit the response\n-    * @return Response with the limited amount of keys streamed\n+    * @param limit The maximum number of keys to retrieve\n+    * @return Response with InputStream to get the keys\n     */\n    CompletionStage<RestResponse> keys(int limit);\n \n    /**\n     * Retrieves entries without metadata\n+    @return Response with InputStream to get the entries\n     */\n    CompletionStage<RestResponse> entries();\n \n    /**\n-    * Retrieves entries\n-    * Limit -1 : all entries\n+    * Retrieves entries limited by count\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n     */\n    CompletionStage<RestResponse> entries(int limit);\n \n    /**\n     * Retrieves entries with limit and metadata\n-    * Limit -1 : all entries\n-    * Metadata true: includes the metadata for each entry\n+    * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all\n+    * @param metadata: if true, includes the metadata for each entry\n     */\n    CompletionStage<RestResponse> entries(int limit, boolean metadata);\n \n"}}, {"oid": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "url": "https://github.com/infinispan/infinispan/commit/ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-29T15:11:14Z", "type": "forcePushed"}, {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455", "url": "https://github.com/infinispan/infinispan/commit/c2a43fa04fffc6fff24e727965be2f38d7a5d455", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-29T15:19:55Z", "type": "forcePushed"}, {"oid": "d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "url": "https://github.com/infinispan/infinispan/commit/d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-30T16:28:16Z", "type": "commit"}, {"oid": "d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "url": "https://github.com/infinispan/infinispan/commit/d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming", "committedDate": "2020-10-30T16:28:16Z", "type": "forcePushed"}]}