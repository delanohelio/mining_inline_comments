{"pr_number": 8353, "pr_title": "ISPN-11721 CLI Migrate command", "pr_createdAt": "2020-05-20T08:00:03Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8353", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg1MzYxMw==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427853613", "bodyText": "The migrator utilises the current Infinispan version to write to the target store, so this isn't really configurable, it will just be the Infinispan version associated with the CLI.", "author": "ryanemerson", "createdAt": "2020-05-20T09:02:30Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,261 @@\n+package org.infinispan.cli.commands;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Paths;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.impl.completer.FileOptionCompleter;\n+import org.aesh.command.option.Option;\n+import org.aesh.command.option.OptionGroup;\n+import org.aesh.io.Resource;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.completers.MigrateStoreFileTypeCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.infinispan.commons.util.Version;\n+import org.infinispan.tools.store.migrator.StoreMigrator;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class, Migrate.Store.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         throw new UnsupportedOperationException();\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterDisconnect.CMD, description = \"Disconnects from a source cluster\")\n+   public static class ClusterDisconnect extends CliCommand {\n+\n+      public static final String CMD = \"disconnect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, ClusterDisconnect.CMD)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterSynchronize.CMD, description = \"Synchronizes data from a source to a target cluster\")\n+   public static class ClusterSynchronize extends CliCommand {\n+      public static final String CMD = \"synchronize\";\n+      public static final String READ_BATCH = \"read-batch\";\n+      public static final String THREADS = \"threads\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Option(shortName = 'b', description = \"The amount of entries to process in a batch\")\n+      Integer readBatch;\n+\n+      @Option(shortName = 't', description = \"The number of threads to use. Defaults to the number of cores on the server\")\n+      Integer threads;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, Migrate.ClusterSynchronize.CMD)\n+               .option(READ_BATCH, readBatch)\n+               .option(THREADS, threads)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Store.CMD, description = \"Performs store migration\", groupCommands = {Migrate.StoreFile.class}, activator = DisabledActivator.class)\n+   public class Store extends CliCommand {\n+\n+      public static final String CMD = \"store\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.StoreFile.CMD, description = \"Migrates a file store\")\n+   public static class StoreFile extends CliCommand {\n+      public static final String CMD = \"file\";\n+\n+      @Option(completer = FileOptionCompleter.class, name = \"source-location\", required = true, description = \"The location of the source file store.\")\n+      Resource sourceLocation;\n+\n+      @Option(completer = FileOptionCompleter.class, name = \"target-location\", required = true, description = \"The location of the target file store.\")\n+      Resource targetLocation;\n+\n+      @Option(name = \"source-version\", required = true, description = \"The source version.\")\n+      String sourceVersion;\n+\n+      @Option(name = \"target-version\", description = \"The target version. Defaults to the version of this CLI.\")\n+      String targetVersion;", "originalCommit": "edfde57239832cfc6386a6d9a8c03f11f824004a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\nindex 03f2d34ee4..dce4bc21cb 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n\n@@ -1,31 +1,15 @@\n package org.infinispan.cli.commands;\n \n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.nio.file.Paths;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n-\n import org.aesh.command.Command;\n import org.aesh.command.CommandDefinition;\n import org.aesh.command.CommandException;\n import org.aesh.command.CommandResult;\n import org.aesh.command.GroupCommandDefinition;\n-import org.aesh.command.impl.completer.FileOptionCompleter;\n import org.aesh.command.option.Option;\n-import org.aesh.command.option.OptionGroup;\n-import org.aesh.io.Resource;\n import org.infinispan.cli.activators.ConnectionActivator;\n import org.infinispan.cli.activators.DisabledActivator;\n import org.infinispan.cli.completers.CacheCompleter;\n-import org.infinispan.cli.completers.MigrateStoreFileTypeCompleter;\n import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n-import org.infinispan.commons.util.Version;\n-import org.infinispan.tools.store.migrator.StoreMigrator;\n import org.kohsuke.MetaInfServices;\n \n /**\n"}}, {"oid": "d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "url": "https://github.com/infinispan/infinispan/commit/d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "message": "Migrate CLI", "committedDate": "2020-05-20T09:57:18Z", "type": "forcePushed"}, {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784", "url": "https://github.com/infinispan/infinispan/commit/31a6897b98dca3a92d282d67ce7437b847c72784", "message": "ISPN-11721 CLI Migrate command", "committedDate": "2020-05-20T09:58:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzQ3NA==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427897474", "bodyText": "If this going to be the home of migrate configuration etc, the description should probably be just \"Migration operations\" similar to the Patch command.", "author": "ryanemerson", "createdAt": "2020-05-20T10:14:35Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\nindex dce4bc21cb..8434a72631 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n\n@@ -9,6 +9,7 @@\n import org.infinispan.cli.activators.ConnectionActivator;\n import org.infinispan.cli.activators.DisabledActivator;\n import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.converters.NullableIntegerConverter;\n import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n import org.kohsuke.MetaInfServices;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODIyMg==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427898222", "bodyText": "Needs removing.", "author": "ryanemerson", "createdAt": "2020-05-20T10:15:58Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.infinispan.cli.completers;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.infinispan.cli.Context;\n+import org.infinispan.tools.store.migrator.StoreType;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+public class MigrateStoreFileTypeCompleter extends ListCompleter {", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java b/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java\ndeleted file mode 100644\nindex 4d8857dddf..0000000000\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java\n+++ /dev/null\n\n@@ -1,26 +0,0 @@\n-package org.infinispan.cli.completers;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.List;\n-\n-import org.infinispan.cli.Context;\n-import org.infinispan.tools.store.migrator.StoreType;\n-\n-/**\n- * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n- * @since 11.0\n- **/\n-public class MigrateStoreFileTypeCompleter extends ListCompleter {\n-   private static final List<String> FILE_STORE_TYPES = Arrays.asList(\n-         StoreType.SINGLE_FILE_STORE.name(),\n-         StoreType.SOFT_INDEX_FILE_STORE.name(),\n-         StoreType.ROCKSDB.name(),\n-         StoreType.LEVELDB.name()\n-   );\n-\n-   @Override\n-   Collection<String> getAvailableItems(Context context) {\n-      return FILE_STORE_TYPES;\n-   }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDA0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427900041", "bodyText": "Don't forget \ud83d\ude42", "author": "ryanemerson", "createdAt": "2020-05-20T10:19:29Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java", "diffHunk": "@@ -565,6 +545,28 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                }\n                break;\n             }\n+            case Migrate.CMD: {\n+               RestCacheClient cache = getRestCacheClient(command.option(CliCommand.CACHE));\n+               switch (command.arg(Migrate.TYPE)) {\n+                  case Migrate.Cluster.CMD: {\n+                     switch (command.arg(Migrate.SUBTYPE)) {\n+                        case Migrate.ClusterConnect.CMD:\n+                           //TODO", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java b/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\nindex 16437d5fc8..64db43ce61 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\n\n@@ -551,7 +551,7 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                   case Migrate.Cluster.CMD: {\n                      switch (command.arg(Migrate.SUBTYPE)) {\n                         case Migrate.ClusterConnect.CMD:\n-                           //TODO\n+                           // TODO: ISPN-11701\n                            break;\n                         case Migrate.ClusterSynchronize.CMD: {\n                            response = cache.synchronizeData(command.intOption(Migrate.ClusterSynchronize.READ_BATCH), command.intOption(Migrate.ClusterSynchronize.THREADS));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTM0Mw==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427901343", "bodyText": "nitpick: shouldn't the string concatenation be avoided with StringBuilder?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     sb.append(\"&read-batch=\" + readBatch);\n          \n          \n            \n                     sb.append(\"&read-batch=\").append(readBatch);\n          \n      \n    \n    \n  \n\nsame below... and above...", "author": "pruivo", "createdAt": "2020-05-20T10:21:49Z", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java", "diffHunk": "@@ -53,12 +53,24 @@ public String name() {\n    }\n \n    @Override\n-   public CompletionStage<RestResponse> synchronizeData() {\n+   public CompletionStage<RestResponse> synchronizeData(Integer readBatch, Integer threads) {\n       Request.Builder builder = new Request.Builder();\n-      builder.url(cacheUrl + \"?action=sync-data\").get();\n+      StringBuilder sb = new StringBuilder(cacheUrl + \"?action=sync-data\");\n+      if (readBatch != null) {\n+         sb.append(\"&read-batch=\" + readBatch);", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java b/client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java\nindex 77c1f710c0..9a8f2c4d26 100644\n--- a/client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java\n+++ b/client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java\n\n@@ -57,10 +57,10 @@ public String name() {\n       Request.Builder builder = new Request.Builder();\n       StringBuilder sb = new StringBuilder(cacheUrl + \"?action=sync-data\");\n       if (readBatch != null) {\n-         sb.append(\"&read-batch=\" + readBatch);\n+         sb.append(\"&read-batch=\").append(readBatch);\n       }\n       if (threads != null) {\n-         sb.append(\"&threads=\" + threads);\n+         sb.append(\"&threads=\").append(threads);\n       }\n       builder.url(sb.toString()).get();\n       return client.execute(builder);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjQyMg==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427902422", "bodyText": "shouldn't be migrate cluster disconnect... ?", "author": "pruivo", "createdAt": "2020-05-20T10:23:47Z", "path": "server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.infinispan.server.functional;\n+\n+import org.infinispan.cli.commands.CLI;\n+import org.infinispan.cli.impl.AeshDelegatingShell;\n+import org.infinispan.client.rest.RestClient;\n+import org.infinispan.server.test.core.AeshTestConnection;\n+\n+/**\n+ * @since 11.0\n+ */\n+public class RollingUpgradeCliIT extends RollingUpgradeIT {\n+\n+   protected void disconnectSource(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java b/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\nindex f24e5eceff..123700a32e 100644\n--- a/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\n+++ b/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\n\n@@ -16,7 +16,7 @@ protected void disconnectSource(RestClient client) {\n          terminal.readln(\"connect\");\n          terminal.assertContains(\"//containers/default]>\");\n          terminal.clear();\n-         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);\n+         terminal.readln(\"migrate cluster disconnect --cache=\" + CACHE_NAME);\n       }\n    }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjUzMQ==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427902531", "bodyText": "shouldn't be migrate cluster syncrhonize... ?", "author": "pruivo", "createdAt": "2020-05-20T10:23:59Z", "path": "server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.infinispan.server.functional;\n+\n+import org.infinispan.cli.commands.CLI;\n+import org.infinispan.cli.impl.AeshDelegatingShell;\n+import org.infinispan.client.rest.RestClient;\n+import org.infinispan.server.test.core.AeshTestConnection;\n+\n+/**\n+ * @since 11.0\n+ */\n+public class RollingUpgradeCliIT extends RollingUpgradeIT {\n+\n+   protected void disconnectSource(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);\n+      }\n+   }\n+\n+   protected void doRollingUpgrade(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate synchronize --cache=\" + CACHE_NAME);", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java b/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\nindex f24e5eceff..123700a32e 100644\n--- a/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\n+++ b/server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java\n\n@@ -16,7 +16,7 @@ protected void disconnectSource(RestClient client) {\n          terminal.readln(\"connect\");\n          terminal.assertContains(\"//containers/default]>\");\n          terminal.clear();\n-         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);\n+         terminal.readln(\"migrate cluster disconnect --cache=\" + CACHE_NAME);\n       }\n    }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDk0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427904949", "bodyText": "can be removed...", "author": "pruivo", "createdAt": "2020-05-20T10:28:08Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.infinispan.cli.completers;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.infinispan.cli.Context;\n+import org.infinispan.tools.store.migrator.StoreType;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+public class MigrateStoreFileTypeCompleter extends ListCompleter {", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java b/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java\ndeleted file mode 100644\nindex 4d8857dddf..0000000000\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java\n+++ /dev/null\n\n@@ -1,26 +0,0 @@\n-package org.infinispan.cli.completers;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.List;\n-\n-import org.infinispan.cli.Context;\n-import org.infinispan.tools.store.migrator.StoreType;\n-\n-/**\n- * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n- * @since 11.0\n- **/\n-public class MigrateStoreFileTypeCompleter extends ListCompleter {\n-   private static final List<String> FILE_STORE_TYPES = Arrays.asList(\n-         StoreType.SINGLE_FILE_STORE.name(),\n-         StoreType.SOFT_INDEX_FILE_STORE.name(),\n-         StoreType.ROCKSDB.name(),\n-         StoreType.LEVELDB.name()\n-   );\n-\n-   @Override\n-   Collection<String> getAvailableItems(Context context) {\n-      return FILE_STORE_TYPES;\n-   }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwOTIyMw==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427909223", "bodyText": "description missing", "author": "pruivo", "createdAt": "2020-05-20T10:36:10Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\nindex dce4bc21cb..8434a72631 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n\n@@ -9,6 +9,7 @@\n import org.infinispan.cli.activators.ConnectionActivator;\n import org.infinispan.cli.activators.DisabledActivator;\n import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.converters.NullableIntegerConverter;\n import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n import org.kohsuke.MetaInfServices;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkzNTI0Mg==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427935242", "bodyText": "is there a way to disable the auto-completion for threads and readBatch?\nIf I do double-tab, I got the following exception:\n[pedro-laptop-3-56000@cluster//containers/default]> migrate cluster synchronize --threads=May 20, 2020 12:21:36 PM org.aesh.command.impl.AeshCommandRuntime doSimpleComplete\nSEVERE: Runtime exception when completing: Buffer: migrate cluster synchronize --threads=, Cursor:38, Offset:0, IgnoreOffset:false, Append separator: true, Candidates:[]\njava.lang.NumberFormatException: For input string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:662)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:770)\n\tat org.aesh.command.impl.converter.IntegerConverter.convert(IntegerConverter.java:31)\n\tat org.aesh.command.impl.converter.IntegerConverter.convert(IntegerConverter.java:28)\n\tat org.aesh.command.impl.internal.ProcessedOption.doConvert(ProcessedOption.java:362)\n\tat org.aesh.command.impl.internal.ProcessedOption.injectValueIntoField(ProcessedOption.java:393)\n\tat org.aesh.command.impl.populator.AeshCommandPopulator.populateObject(AeshCommandPopulator.java:64)\n\tat org.aesh.command.impl.parser.AeshCommandLineCompletionParser.doInjectValues(AeshCommandLineCompletionParser.java:356)\n\tat org.aesh.command.impl.parser.AeshCommandLineCompletionParser.injectValuesAndComplete(AeshCommandLineCompletionParser.java:58)\n\tat org.aesh.command.impl.parser.AeshCommandLineParser.complete(AeshCommandLineParser.java:126)\n\tat org.aesh.command.impl.AeshCommandRuntime.doSimpleComplete(AeshCommandRuntime.java:332)\n\tat org.aesh.command.impl.AeshCommandRuntime.completeWithOperators(AeshCommandRuntime.java:278)\n\tat org.aesh.command.impl.AeshCommandRuntime.complete(AeshCommandRuntime.java:262)\n\tat org.aesh.readline.ReadlineConsole$AeshCompletion.complete(ReadlineConsole.java:409)\n\tat org.aesh.readline.ReadlineConsole$AeshCompletion.complete(ReadlineConsole.java:406)\n\tat org.aesh.readline.completion.CompletionHandler.createCompletionList(CompletionHandler.java:134)\n\tat org.aesh.readline.completion.CompletionHandler.complete(CompletionHandler.java:102)\n\tat org.aesh.readline.action.mappings.Complete.accept(Complete.java:62)\n\tat org.aesh.readline.Readline$AeshInputProcessor.parse(Readline.java:235)\n\tat org.aesh.readline.Readline$AeshInputProcessor.access$100(Readline.java:174)\n\tat org.aesh.readline.Readline.readInput(Readline.java:95)\n\tat org.aesh.readline.Readline.access$1000(Readline.java:57)\n\tat org.aesh.readline.Readline$AeshInputProcessor.lambda$start$1(Readline.java:324)\n\tat org.aesh.terminal.EventDecoder.accept(EventDecoder.java:118)\n\tat org.aesh.terminal.EventDecoder.accept(EventDecoder.java:31)\n\tat org.aesh.terminal.io.Decoder.write(Decoder.java:133)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.openBlocking(TerminalConnection.java:216)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.openBlocking(TerminalConnection.java:203)\n\tat org.aesh.readline.ReadlineConsole.accept(ReadlineConsole.java:243)\n\tat org.aesh.readline.ReadlineConsole.accept(ReadlineConsole.java:87)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.init(TerminalConnection.java:153)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.<init>(TerminalConnection.java:86)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.<init>(TerminalConnection.java:96)\n\tat org.aesh.readline.ReadlineConsole.start(ReadlineConsole.java:183)\n\tat org.infinispan.cli.commands.CLI.interactive(CLI.java:203)\n\tat org.infinispan.cli.commands.CLI.exec(CLI.java:152)\n\tat org.infinispan.cli.commands.CliCommand.execute(CliCommand.java:32)\n\tat org.infinispan.cli.commands.CliCommand.execute(CliCommand.java:14)\n\tat org.aesh.command.impl.operator.EndOperator.execute(EndOperator.java:41)\n\tat org.aesh.command.impl.Executions$ExecutionImpl.execute(Executions.java:213)\n\tat org.aesh.command.impl.AeshCommandRuntime.executeCommand(AeshCommandRuntime.java:161)\n\tat org.aesh.AeshRuntimeRunner.execute(AeshRuntimeRunner.java:118)\n\tat org.infinispan.cli.commands.CLI.main(CLI.java:252)\n\nThe only way I found to \"fix\" it was to create a converter:\n   public Integer convert(ConverterInvocation converterInvocation) {\n      String value = converterInvocation.getInput();\n      if (value == null || value.isEmpty()) {\n         return null;\n      }\n      return Integer.parseInt(value);\n   }", "author": "pruivo", "createdAt": "2020-05-20T11:27:05Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         throw new UnsupportedOperationException();\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterDisconnect.CMD, description = \"Disconnects from a source cluster\")\n+   public static class ClusterDisconnect extends CliCommand {\n+\n+      public static final String CMD = \"disconnect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, ClusterDisconnect.CMD)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterSynchronize.CMD, description = \"Synchronizes data from a source to a target cluster\")\n+   public static class ClusterSynchronize extends CliCommand {\n+      public static final String CMD = \"synchronize\";\n+      public static final String READ_BATCH = \"read-batch\";\n+      public static final String THREADS = \"threads\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Option(shortName = 'b', description = \"The amount of entries to process in a batch\")\n+      Integer readBatch;\n+\n+      @Option(shortName = 't', description = \"The number of threads to use. Defaults to the number of cores on the server\")\n+      Integer threads;", "originalCommit": "31a6897b98dca3a92d282d67ce7437b847c72784", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0NTQ5OA==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427945498", "bodyText": "Added a NullableIntegerConverter", "author": "tristantarrant", "createdAt": "2020-05-20T11:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkzNTI0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\nindex dce4bc21cb..8434a72631 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n\n@@ -9,6 +9,7 @@\n import org.infinispan.cli.activators.ConnectionActivator;\n import org.infinispan.cli.activators.DisabledActivator;\n import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.converters.NullableIntegerConverter;\n import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n import org.kohsuke.MetaInfServices;\n \n"}}, {"oid": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "url": "https://github.com/infinispan/infinispan/commit/a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "message": "ISPN-11721 CLI Migrate command", "committedDate": "2020-05-20T11:42:07Z", "type": "forcePushed"}, {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d", "url": "https://github.com/infinispan/infinispan/commit/a72e54cd5678b896f23dc9ba3128b420e413a18d", "message": "ISPN-11721 CLI Migrate command", "committedDate": "2020-05-20T11:59:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTY4MQ==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r428031681", "bodyText": "This is the Jira ID for adding the store migrator to the CLI.", "author": "ryanemerson", "createdAt": "2020-05-20T13:55:49Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.converters.NullableIntegerConverter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Migration operations\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c', description = \"The name of the cache.\")\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         // TODO: ISPN-11701", "originalCommit": "a72e54cd5678b896f23dc9ba3128b420e413a18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\nindex 373c94713f..b82c3e0aa5 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java\n\n@@ -82,7 +82,7 @@ public boolean isHelp() {\n \n       @Override\n       protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n-         // TODO: ISPN-11701\n+         // TODO: ISPN-11870\n          throw new UnsupportedOperationException();\n       }\n    }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTg3Mg==", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r428031872", "bodyText": "This is the Jira ID for adding the store migrator to the CLI.", "author": "ryanemerson", "createdAt": "2020-05-20T13:56:01Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java", "diffHunk": "@@ -565,6 +545,28 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                }\n                break;\n             }\n+            case Migrate.CMD: {\n+               RestCacheClient cache = getRestCacheClient(command.option(CliCommand.CACHE));\n+               switch (command.arg(Migrate.TYPE)) {\n+                  case Migrate.Cluster.CMD: {\n+                     switch (command.arg(Migrate.SUBTYPE)) {\n+                        case Migrate.ClusterConnect.CMD:\n+                           // TODO: ISPN-11701", "originalCommit": "a72e54cd5678b896f23dc9ba3128b420e413a18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "chunk": "diff --git a/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java b/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\nindex 64db43ce61..c356087d8a 100644\n--- a/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\n+++ b/cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java\n\n@@ -551,7 +551,7 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                   case Migrate.Cluster.CMD: {\n                      switch (command.arg(Migrate.SUBTYPE)) {\n                         case Migrate.ClusterConnect.CMD:\n-                           // TODO: ISPN-11701\n+                           // TODO: ISPN-11870\n                            break;\n                         case Migrate.ClusterSynchronize.CMD: {\n                            response = cache.synchronizeData(command.intOption(Migrate.ClusterSynchronize.READ_BATCH), command.intOption(Migrate.ClusterSynchronize.THREADS));\n"}}, {"oid": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "url": "https://github.com/infinispan/infinispan/commit/c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "message": "ISPN-11721 CLI Migrate command", "committedDate": "2020-05-20T15:32:13Z", "type": "commit"}, {"oid": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "url": "https://github.com/infinispan/infinispan/commit/c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "message": "ISPN-11721 CLI Migrate command", "committedDate": "2020-05-20T15:32:13Z", "type": "forcePushed"}]}