{"pr_number": 8615, "pr_title": "ISPN-11005 HotRod decoder small performance improvements", "pr_createdAt": "2020-08-10T15:46:19Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8615", "timeline": [{"oid": "8d83f2c4e38b3733f1dd6162bda2f4a3ac2e6cae", "url": "https://github.com/infinispan/infinispan/commit/8d83f2c4e38b3733f1dd6162bda2f4a3ac2e6cae", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Avoid new byte[] instance when reading cache name\n* Improve parsing and matching of media types\n* Simplify copying of collections\n* Avoid new array instance in withFlags(Flag)\n* Avoid new lambda instance when stage is completed successfully\n* Use HopscotchHashMap for GlobalMarshaller primitive ids\n* Simplify ExtendedByteBufJava.readMaybeVInt() logic\n* Call withFlags() only once in HotRodHeader.getOptimizedCache()\n* Don't include key media type parameters in knownCaches key in\n  RestCacheManager.getCache()", "committedDate": "2020-08-14T09:33:28Z", "type": "forcePushed"}, {"oid": "c981229a91170142374d9db568b8ce53a2a41dad", "url": "https://github.com/infinispan/infinispan/commit/c981229a91170142374d9db568b8ce53a2a41dad", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Avoid new byte[] instance when reading cache name\n* Improve parsing and matching of media types\n* Simplify copying of collections\n* Avoid new array instance in withFlags(Flag)\n* Avoid new lambda instance when stage is completed successfully\n* Use HopscotchHashMap for GlobalMarshaller primitive ids\n* Simplify ExtendedByteBufJava.readMaybeVInt() logic\n* Call withFlags() only once in HotRodHeader.getOptimizedCache()\n* Don't include key media type parameters in knownCaches key in\n  RestCacheManager.getCache()", "committedDate": "2020-08-18T00:16:00Z", "type": "forcePushed"}, {"oid": "fecb12b44783dae38bd9bf02ceb8982fb6f42283", "url": "https://github.com/infinispan/infinispan/commit/fecb12b44783dae38bd9bf02ceb8982fb6f42283", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Allow space and tab between media type subtype and parameters\n* Don't allow spaces between type and subtype,\n  or between parameter name and parameter value", "committedDate": "2020-09-06T13:30:22Z", "type": "forcePushed"}, {"oid": "269c74933c407c2fa0aa1237fe831cf72d89f863", "url": "https://github.com/infinispan/infinispan/commit/269c74933c407c2fa0aa1237fe831cf72d89f863", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Allow space and tab between media type subtype and parameters\n* Don't allow spaces between type and subtype,\n  or between parameter name and parameter value\n* Unescape and remove quotes from quoted parameter values", "committedDate": "2020-09-07T08:46:45Z", "type": "forcePushed"}, {"oid": "3985266a1e0803cecd2e38537e43ab03bc95341b", "url": "https://github.com/infinispan/infinispan/commit/3985266a1e0803cecd2e38537e43ab03bc95341b", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Do not remove quotes or backlashes from quoted parameter values", "committedDate": "2020-09-07T09:09:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxMDAyMw==", "url": "https://github.com/infinispan/infinispan/pull/8615#discussion_r484310023", "bodyText": "Is this faster than the current code on master?", "author": "gustavonalle", "createdAt": "2020-09-07T09:28:34Z", "path": "commons/all/src/main/java/org/infinispan/commons/dataconversion/MediaType.java", "diffHunk": "@@ -33,6 +36,22 @@\n @ProtoTypeId(ProtoStreamTypeIds.MEDIA_TYPE)\n @SerializeWith(value = MediaType.MediaTypeExternalizer.class)\n public final class MediaType {\n+   private static final Pattern TREE_PATTERN;\n+   private static final Pattern PARAMETER_PATTERN;\n+\n+   static {\n+      // Adapted from https://stackoverflow.com/a/48046041/55870\n+      // Extended to support \"*\" as a media type (as used by java.net.HttpURLConnection)\n+      // More details at https://bugs.openjdk.java.net/browse/JDK-8163921\n+      // and https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n+      String ows = \"[ \\t]*\";\n+      String token = \"[0-9A-Za-z!#$%&'*+.^_`|~-]+\";\n+      String quotedString = \"\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"\";\n+      String tree = ows + \"((\" + token + \")/\" + token + \"|\\\\*)\" + ows;\n+      String parameter = \";\" + ows + \"(\" + token + \")=(\" + token + \"|\" + quotedString + \")\" + ows;\n+      TREE_PATTERN = Pattern.compile(tree);\n+      PARAMETER_PATTERN = Pattern.compile(parameter);\n+   }", "originalCommit": "3985266a1e0803cecd2e38537e43ab03bc95341b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzODc5Ng==", "url": "https://github.com/infinispan/infinispan/pull/8615#discussion_r484338796", "bodyText": "I haven't ran any performance test after adding the regular expressions, but I expect it to be faster because it goes over the input string only one time and it does fewer allocations: the code on master allocates new strings with substring(), split(), and toCharArray().\nBut it shouldn't matter for performance IMO, as most performance-sensitive applications should be using the id of application/x-protostream instead of a textual media type. The regex change was motivated mostly by the fact that I wanted something that follows the RFCs as close as possible, and I found an answer on StackOverflow doing it with regular expressions :)", "author": "danberindei", "createdAt": "2020-09-07T10:19:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxMDAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0NjY0Ng==", "url": "https://github.com/infinispan/infinispan/pull/8615#discussion_r484346646", "bodyText": "Parsing of MediaType does impact performance, as every REST call will send a text for every request.\nIf the regex make it slower, I don't think the extra complexity is worth it.", "author": "gustavonalle", "createdAt": "2020-09-07T10:35:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxMDAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0NzgxOA==", "url": "https://github.com/infinispan/infinispan/pull/8615#discussion_r484347818", "bodyText": "The regex change was motivated mostly by the fact that I wanted something that follows the RFCs as close as possible\n\nUnderstood, but this PR is for small performance improvements, and if we don't know if it will improve, I suggest separating the MediaType changes to another JIRA", "author": "gustavonalle", "createdAt": "2020-09-07T10:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxMDAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjExMDA5Nw==", "url": "https://github.com/infinispan/infinispan/pull/8615#discussion_r486110097", "bodyText": "You were right @gustavonalle, I wrote a JMH benchmark and the regular expression parsing was a bit slower than master:\n\n\n\nBranch\nBenchmark\nMode\nCnt\nScore\nError\nUnits\n\n\n\n\nmaster\nMediaTypeParsingBenchmark.State.parseList\navgt\n30\n38.041\n\u00b1 0.299\nns/op\n\n\nISPN-11005\nMediaTypeParsingBenchmark.State.parseList\navgt\n30\n56.855\n\u00b1 0.492\nns/op\n\n\n\nI was able to make it faster (although a bit uglier because I had to expand the character ranges), but then I realized it's too big a change and it needs its own PR. I only left the matchesAll field that speeds up comparisons in this PR.", "author": "danberindei", "createdAt": "2020-09-10T07:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxMDAyMw=="}], "type": "inlineReview", "revised_code": {"commit": "fa24ff8612268582320b9eb07602acb9738f2820", "chunk": "diff --git a/commons/all/src/main/java/org/infinispan/commons/dataconversion/MediaType.java b/commons/all/src/main/java/org/infinispan/commons/dataconversion/MediaType.java\nindex 9c1a6a0dea..1dcfe15196 100644\n--- a/commons/all/src/main/java/org/infinispan/commons/dataconversion/MediaType.java\n+++ b/commons/all/src/main/java/org/infinispan/commons/dataconversion/MediaType.java\n\n@@ -36,22 +33,6 @@\n @ProtoTypeId(ProtoStreamTypeIds.MEDIA_TYPE)\n @SerializeWith(value = MediaType.MediaTypeExternalizer.class)\n public final class MediaType {\n-   private static final Pattern TREE_PATTERN;\n-   private static final Pattern PARAMETER_PATTERN;\n-\n-   static {\n-      // Adapted from https://stackoverflow.com/a/48046041/55870\n-      // Extended to support \"*\" as a media type (as used by java.net.HttpURLConnection)\n-      // More details at https://bugs.openjdk.java.net/browse/JDK-8163921\n-      // and https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n-      String ows = \"[ \\t]*\";\n-      String token = \"[0-9A-Za-z!#$%&'*+.^_`|~-]+\";\n-      String quotedString = \"\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"\";\n-      String tree = ows + \"((\" + token + \")/\" + token + \"|\\\\*)\" + ows;\n-      String parameter = \";\" + ows + \"(\" + token + \")=(\" + token + \"|\" + quotedString + \")\" + ows;\n-      TREE_PATTERN = Pattern.compile(tree);\n-      PARAMETER_PATTERN = Pattern.compile(parameter);\n-   }\n \n    // OpenMetrics aka Prometheus content type\n    public static final String APPLICATION_OPENMETRICS_TYPE = \"application/openmetrics-text\";\n"}}, {"oid": "6bc818f69c58bcaecabba589f9b74a76771f1d49", "url": "https://github.com/infinispan/infinispan/commit/6bc818f69c58bcaecabba589f9b74a76771f1d49", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Do not remove quotes or backlashes from quoted parameter values", "committedDate": "2020-09-07T10:02:11Z", "type": "forcePushed"}, {"oid": "fa24ff8612268582320b9eb07602acb9738f2820", "url": "https://github.com/infinispan/infinispan/commit/fa24ff8612268582320b9eb07602acb9738f2820", "message": "ISPN-11005 HotRod decoder small performance improvements\n\n* Avoid new byte[] instance when reading cache name\n* Simplify matching of media types\n* Simplify copying of collections\n* Avoid new array instance in withFlags(Flag)\n* Avoid new lambda instance when stage is completed successfully\n* Use HopscotchHashMap for GlobalMarshaller primitive ids\n* Simplify ExtendedByteBufJava.readMaybeVInt() logic\n* Call withFlags() only once in HotRodHeader.getOptimizedCache()\n* Don't include key media type parameters in knownCaches key in\n  RestCacheManager.getCache()", "committedDate": "2020-09-09T19:51:56Z", "type": "commit"}, {"oid": "841723fa994f5628ce2e26ce7a2655faccd451cc", "url": "https://github.com/infinispan/infinispan/commit/841723fa994f5628ce2e26ce7a2655faccd451cc", "message": "ISPN-11005 Set server name in Hot Rod client tests", "committedDate": "2020-09-09T19:57:14Z", "type": "commit"}, {"oid": "841723fa994f5628ce2e26ce7a2655faccd451cc", "url": "https://github.com/infinispan/infinispan/commit/841723fa994f5628ce2e26ce7a2655faccd451cc", "message": "ISPN-11005 Set server name in Hot Rod client tests", "committedDate": "2020-09-09T19:57:14Z", "type": "forcePushed"}]}