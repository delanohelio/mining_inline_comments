{"pr_number": 8512, "pr_title": "ISPN-12043 Shared stores should not have (add|remove)Segments methods\u2026", "pr_createdAt": "2020-06-26T14:46:56Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8512", "timeline": [{"oid": "a6603ee642c0c2ea5af5fd5047bba2a52aec631f", "url": "https://github.com/infinispan/infinispan/commit/a6603ee642c0c2ea5af5fd5047bba2a52aec631f", "message": "ISPN-12043 Shared stores should not have (add|remove)Segments methods invoked", "committedDate": "2020-06-26T14:54:50Z", "type": "forcePushed"}, {"oid": "0ab55c9b0bf6e15aee67d06661c6542e1882549c", "url": "https://github.com/infinispan/infinispan/commit/0ab55c9b0bf6e15aee67d06661c6542e1882549c", "message": "ISPN-12043 Shared stores should not have (add|remove)Segments methods invoked", "committedDate": "2020-06-26T14:55:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MzE1MA==", "url": "https://github.com/infinispan/infinispan/pull/8512#discussion_r446253150", "bodyText": "This seems wrong, just because a store is segmentable and shareable it doesn't mean in the config it's actually segmented or shared (as the method name implies).", "author": "danberindei", "createdAt": "2020-06-26T15:27:31Z", "path": "core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java", "diffHunk": "@@ -219,16 +221,24 @@ public void start() {\n                availabilityTask = nonBlockingManager.scheduleWithFixedDelay(this::pollStoreAvailability, interval, interval, MILLISECONDS));\n          }\n \n-         storeStartup.doOnComplete(() -> lock.unlockWrite(stamp))\n-               // Blocks here waiting for stores and availability task to start if needed\n-               .blockingAwait();\n+         // Blocks here waiting for stores and availability task to start if needed\n+         storeStartup.blockingAwait();\n+         allSegmentedOrShared = allStoresSegmentedOrShared();\n       } catch (Throwable t) {\n          lock.unlockWrite(stamp);\n          log.debug(\"PersistenceManagerImpl encountered an exception during startup of stores\", t);\n          throw t;\n+      } finally {\n+         lock.unlockWrite(stamp);\n       }\n    }\n \n+   @GuardedBy(\"lock\")\n+   private boolean allStoresSegmentedOrShared() {\n+      return getStoreLocked(storeStatus -> !storeStatus.characteristics.contains(Characteristic.SEGMENTABLE) ||\n+            !storeStatus.characteristics.contains(Characteristic.SHAREABLE)) != null;", "originalCommit": "0ab55c9b0bf6e15aee67d06661c6542e1882549c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1NTAwOQ==", "url": "https://github.com/infinispan/infinispan/pull/8512#discussion_r446255009", "bodyText": "At this point the store status has already been changed by updateCharacteristics which will remove the characteristic based on the configuration. So it does mean that.", "author": "wburns", "createdAt": "2020-06-26T15:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MzE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMzU2Mg==", "url": "https://github.com/infinispan/infinispan/pull/8512#discussion_r446303562", "bodyText": "I would have never guessed that... wouldn't it have been simpler to check the configuration instead of changing the meaning of the enum values (e.g. SHAREABLE -> SHARED)?", "author": "danberindei", "createdAt": "2020-06-26T17:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MzE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNzQ2NA==", "url": "https://github.com/infinispan/infinispan/pull/8512#discussion_r446307464", "bodyText": "Yes, I agree. I noticed this a while back as I had been changing things, but I wanted to try to limit changes for now. I am all for changing this later though.", "author": "wburns", "createdAt": "2020-06-26T17:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MzE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzNzk0OA==", "url": "https://github.com/infinispan/infinispan/pull/8512#discussion_r446337948", "bodyText": "\ud83d\udc4d for later :)", "author": "danberindei", "createdAt": "2020-06-26T18:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MzE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "bd1bb66a6957c21c80c42d45eac37255fc663413", "chunk": "diff --git a/core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java b/core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java\nindex a33eecff73..bb758d01cd 100644\n--- a/core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java\n+++ b/core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java\n\n@@ -225,7 +225,6 @@ public void start() {\n          storeStartup.blockingAwait();\n          allSegmentedOrShared = allStoresSegmentedOrShared();\n       } catch (Throwable t) {\n-         lock.unlockWrite(stamp);\n          log.debug(\"PersistenceManagerImpl encountered an exception during startup of stores\", t);\n          throw t;\n       } finally {\n"}}, {"oid": "bd1bb66a6957c21c80c42d45eac37255fc663413", "url": "https://github.com/infinispan/infinispan/commit/bd1bb66a6957c21c80c42d45eac37255fc663413", "message": "ISPN-12043 Shared stores should not have (add|remove)Segments methods invoked", "committedDate": "2020-06-26T17:12:29Z", "type": "commit"}, {"oid": "bd1bb66a6957c21c80c42d45eac37255fc663413", "url": "https://github.com/infinispan/infinispan/commit/bd1bb66a6957c21c80c42d45eac37255fc663413", "message": "ISPN-12043 Shared stores should not have (add|remove)Segments methods invoked", "committedDate": "2020-06-26T17:12:29Z", "type": "forcePushed"}]}