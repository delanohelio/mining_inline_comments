{"pr_number": 8654, "pr_title": "ISPN-12260 Don't use JMX to compute global server connection stats", "pr_createdAt": "2020-08-27T07:08:30Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8654", "timeline": [{"oid": "4fb78d718579bef147c60f3d30f2ac46f09d20b4", "url": "https://github.com/infinispan/infinispan/commit/4fb78d718579bef147c60f3d30f2ac46f09d20b4", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-08-27T07:16:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNTE5NQ==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r478215195", "bodyText": "I don't think using getQualifiedName() is ok, because the javadoc of ProtocolServerConfigurationBuilder.name() says\n    * Specifies a custom name for this server in order to easily distinguish it from other servers, e.g. via JMX. Defaults to the empty string.\n\nand at least some of our tests have interpreted that as \"set a different name on each node\".", "author": "danberindei", "createdAt": "2020-08-27T07:32:24Z", "path": "server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java", "diffHunk": "@@ -100,6 +100,8 @@ public void start(C configuration, EmbeddedCacheManager cacheManager) {\n          throw new IllegalStateException(\"CacheIgnoreManager is a required component\");\n       }\n \n+      bcr.registerComponent(getQualifiedName(), this, false);", "originalCommit": "4fb78d718579bef147c60f3d30f2ac46f09d20b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5NzQ4Mw==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r478897483", "bodyText": "The test then needs to be fixed: the original jmx code uses getQualifiedName() as well.\nThe intention of name() is to give different endpoints of the same type on the same instance a unique name. I'll add a note specifying that it needs to be the same across the cluster.", "author": "tristantarrant", "createdAt": "2020-08-28T07:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwMTgzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r478901835", "bodyText": "@danberindei are you referring to \n  \n    \n      infinispan/client/hotrod-client/src/test/java/org/infinispan/client/hotrod/xsite/AbstractHotRodSiteFailoverTest.java\n    \n    \n         Line 114\n      in\n      a6e618b\n    \n    \n    \n    \n\n        \n          \n           .map(port -> HotRodClientTestingUtil.startHotRodServer(cm, port, new HotRodServerConfigurationBuilder().name(cm.getCacheManagerConfiguration().transport().nodeName()))) \n        \n    \n  \n\n ?", "author": "tristantarrant", "createdAt": "2020-08-28T07:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA0OTQ4Nw==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r481049487", "bodyText": "@tristantarrant it's not the only one, e.g.\n\n  \n    \n      infinispan/server/rest/src/test/java/org/infinispan/rest/resources/AbstractRestResourceTest.java\n    \n    \n         Line 138\n      in\n      485e561\n    \n    \n    \n    \n\n        \n          \n           restServerHelper.start(TestResourceTracker.getCurrentTestShortName() + \"-\" + cm.getAddress()); \n        \n    \n  \n\n\n\n  \n    \n      infinispan/server/rest/src/test/java/org/infinispan/rest/search/BaseRestSearchTest.java\n    \n    \n         Line 86\n      in\n      b05ee36\n    \n    \n    \n    \n\n        \n          \n           restServer.start(TestResourceTracker.getCurrentTestShortName() + \"-\" + cm.getAddress()); \n        \n    \n  \n\n\n\n  \n    \n      infinispan/server/rest/src/test/java/org/infinispan/rest/resources/XSiteResourceTest.java\n    \n    \n         Line 75\n      in\n      aad7cba\n    \n    \n    \n    \n\n        \n          \n           restServerHelper.start(TestResourceTracker.getCurrentTestShortName() + \"-\" + cm.getAddress()); \n        \n    \n  \n\n\nWould you like to include fixing those tests in this PR as well?", "author": "danberindei", "createdAt": "2020-09-01T10:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMjczMA==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r484432730", "bodyText": "Oops, I didn't see an answer here and I assumed you didn't change the tests", "author": "danberindei", "createdAt": "2020-09-07T13:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNTE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f2e5e4bde6fabbdeb96fbe75ac35c62ccb89758a", "chunk": "diff --git a/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java b/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\nindex 5b6dcae920..364bfa5ad6 100644\n--- a/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\n+++ b/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\n\n@@ -100,7 +100,7 @@ public void start(C configuration, EmbeddedCacheManager cacheManager) {\n          throw new IllegalStateException(\"CacheIgnoreManager is a required component\");\n       }\n \n-      bcr.registerComponent(getQualifiedName(), this, false);\n+      bcr.replaceComponent(getQualifiedName(), this, false);\n \n       executor = bcr.getComponent(KnownComponentNames.BLOCKING_EXECUTOR, ExecutorService.class).running();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxODk2MA==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r478218960", "bodyText": "I don't see how this could be false, at the very least it shouldn't be named isGlobalStatsEnabled unless it uses GlobalConfiguration.statistics().enabled()", "author": "danberindei", "createdAt": "2020-08-27T07:39:26Z", "path": "server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java", "diffHunk": "@@ -31,7 +27,7 @@\n \n    public NettyTransportConnectionStats(EmbeddedCacheManager cacheManager, ChannelGroup acceptedChannels, String threadNamePrefix) {\n       this.cacheManager = cacheManager;\n-      this.isGlobalStatsEnabled = cacheManager != null && SecurityActions.getCacheManagerConfiguration(cacheManager).jmx().enabled();\n+      this.isGlobalStatsEnabled = cacheManager != null;", "originalCommit": "4fb78d718579bef147c60f3d30f2ac46f09d20b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2ODIxMw==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r481068213", "bodyText": "Oops, looks like the cache manager can be null, at least the way we start the server in our JCache remote TCK module:\n2020-08-28 04:50:13,970 FATAL (main) [org.infinispan.SERVER] ISPN080028: Infinispan Server failed to start java.util.concurrent.ExecutionException: java.lang.NullPointerException\n\tat java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)\n\tat java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1999)\n\tat org.infinispan.server.Bootstrap.runInternal(Bootstrap.java:140)\n\tat org.infinispan.server.tool.Main.run(Main.java:98)\n\tat org.infinispan.server.Bootstrap.main(Bootstrap.java:40)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.infinispan.server.loader.Loader.run(Loader.java:76)\n\tat org.infinispan.server.loader.Loader.main(Loader.java:39)\nCaused by: java.lang.NullPointerException\n\tat org.infinispan.server.core.transport.NettyTransportConnectionStats.<init>(NettyTransportConnectionStats.java:32)\n\tat org.infinispan.server.core.transport.NettyTransport.<init>(NettyTransport.java:76)\n\tat org.infinispan.server.router.router.impl.singleport.SinglePortEndpointRouter.start(SinglePortEndpointRouter.java:44)\n\tat org.infinispan.server.Server.run(Server.java:383)\n\t... 9 more\n\nhttps://ci.infinispan.org/job/Infinispan/job/PR-8654/3/", "author": "danberindei", "createdAt": "2020-09-01T11:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxODk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI1NDA0Mg==", "url": "https://github.com/infinispan/infinispan/pull/8654#discussion_r481254042", "bodyText": "reinstated", "author": "tristantarrant", "createdAt": "2020-09-01T16:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxODk2MA=="}], "type": "inlineReview", "revised_code": {"commit": "57f5f80137a028eea9a54d67b2125cdc7138d540", "chunk": "diff --git a/server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java b/server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java\nindex a518f9f13f..7450e31113 100644\n--- a/server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java\n+++ b/server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java\n\n@@ -27,9 +27,9 @@\n \n    public NettyTransportConnectionStats(EmbeddedCacheManager cacheManager, ChannelGroup acceptedChannels, String threadNamePrefix) {\n       this.cacheManager = cacheManager;\n-      this.isGlobalStatsEnabled = cacheManager != null;\n       this.acceptedChannels = acceptedChannels;\n       this.threadNamePrefix = threadNamePrefix;\n+      this.isGlobalStatsEnabled = cacheManager.getCacheManagerConfiguration().statistics();\n    }\n \n    private void increment(AtomicLong base, long bytes) {\n"}}, {"oid": "57f5f80137a028eea9a54d67b2125cdc7138d540", "url": "https://github.com/infinispan/infinispan/commit/57f5f80137a028eea9a54d67b2125cdc7138d540", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-08-28T07:56:31Z", "type": "forcePushed"}, {"oid": "f2e5e4bde6fabbdeb96fbe75ac35c62ccb89758a", "url": "https://github.com/infinispan/infinispan/commit/f2e5e4bde6fabbdeb96fbe75ac35c62ccb89758a", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-09-01T15:42:36Z", "type": "forcePushed"}, {"oid": "56920e1e0a3973dd82e3224db7b98463ffb6a2df", "url": "https://github.com/infinispan/infinispan/commit/56920e1e0a3973dd82e3224db7b98463ffb6a2df", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-09-01T15:58:48Z", "type": "forcePushed"}, {"oid": "add80f2a4e0bfe750c8fa213666f5f5c13f32265", "url": "https://github.com/infinispan/infinispan/commit/add80f2a4e0bfe750c8fa213666f5f5c13f32265", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-09-02T09:51:26Z", "type": "commit"}, {"oid": "add80f2a4e0bfe750c8fa213666f5f5c13f32265", "url": "https://github.com/infinispan/infinispan/commit/add80f2a4e0bfe750c8fa213666f5f5c13f32265", "message": "ISPN-12260 Don't use JMX to compute global server connection stats", "committedDate": "2020-09-02T09:51:26Z", "type": "forcePushed"}]}