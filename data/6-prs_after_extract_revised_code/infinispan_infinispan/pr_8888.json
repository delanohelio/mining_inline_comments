{"pr_number": 8888, "pr_title": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "pr_createdAt": "2020-11-26T14:01:09Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8888", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA1NzExOQ==", "url": "https://github.com/infinispan/infinispan/pull/8888#discussion_r531057119", "bodyText": "How about CacheConfigParser or CacheParser?", "author": "ryanemerson", "createdAt": "2020-11-26T14:15:44Z", "path": "core/src/main/java/org/infinispan/configuration/parsing/FragmentParser.java", "diffHunk": "@@ -0,0 +1,1911 @@\n+package org.infinispan.configuration.parsing;\n+\n+import static org.infinispan.configuration.parsing.ParseUtils.ignoreAttribute;\n+import static org.infinispan.configuration.parsing.ParseUtils.ignoreElement;\n+import static org.infinispan.configuration.parsing.Parser.NAMESPACE;\n+import static org.infinispan.util.logging.Log.CONFIG;\n+\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.xml.stream.XMLStreamConstants;\n+import javax.xml.stream.XMLStreamException;\n+\n+import org.infinispan.commons.configuration.BuiltBy;\n+import org.infinispan.commons.configuration.ConfiguredBy;\n+import org.infinispan.commons.dataconversion.MediaType;\n+import org.infinispan.commons.util.GlobUtils;\n+import org.infinispan.commons.util.Util;\n+import org.infinispan.configuration.cache.AbstractStoreConfigurationBuilder;\n+import org.infinispan.configuration.cache.AsyncStoreConfigurationBuilder;\n+import org.infinispan.configuration.cache.AuthorizationConfigurationBuilder;\n+import org.infinispan.configuration.cache.BackupConfiguration;\n+import org.infinispan.configuration.cache.BackupConfigurationBuilder;\n+import org.infinispan.configuration.cache.BackupFailurePolicy;\n+import org.infinispan.configuration.cache.BiasAcquisition;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.ClusterLoaderConfigurationBuilder;\n+import org.infinispan.configuration.cache.ClusteringConfigurationBuilder;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.cache.ContentTypeConfigurationBuilder;\n+import org.infinispan.configuration.cache.CustomStoreConfigurationBuilder;\n+import org.infinispan.configuration.cache.EncodingConfigurationBuilder;\n+import org.infinispan.configuration.cache.Index;\n+import org.infinispan.configuration.cache.InterceptorConfiguration;\n+import org.infinispan.configuration.cache.InterceptorConfigurationBuilder;\n+import org.infinispan.configuration.cache.MemoryConfigurationBuilder;\n+import org.infinispan.configuration.cache.PartitionHandlingConfigurationBuilder;\n+import org.infinispan.configuration.cache.SecurityConfigurationBuilder;\n+import org.infinispan.configuration.cache.SingleFileStoreConfigurationBuilder;\n+import org.infinispan.configuration.cache.StorageType;\n+import org.infinispan.configuration.cache.StoreConfigurationBuilder;\n+import org.infinispan.configuration.cache.TransactionConfiguration;\n+import org.infinispan.conflict.MergePolicy;\n+import org.infinispan.eviction.EvictionStrategy;\n+import org.infinispan.eviction.EvictionType;\n+import org.infinispan.partitionhandling.PartitionHandling;\n+import org.infinispan.persistence.cluster.ClusterLoader;\n+import org.infinispan.persistence.file.SingleFileStore;\n+import org.infinispan.transaction.LockingMode;\n+import org.infinispan.util.concurrent.IsolationLevel;\n+import org.infinispan.xsite.spi.XSiteMergePolicy;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * This class implements the parser for Infinispan/AS7/EAP/JDG schema files\n+ *\n+ * @author Tristan Tarrant\n+ * @author Galder Zamarre\u00f1o\n+ * @since 12.0\n+ */\n+@MetaInfServices(ConfigurationParser.class)\n+@Namespace(root = \"local-cache\")\n+@Namespace(root = \"distributed-cache\")\n+@Namespace(root = \"replicated-cache\")\n+@Namespace(root = \"scattered-cache\")\n+@Namespace(uri = NAMESPACE + \"*\", root = \"local-cache\")\n+@Namespace(uri = NAMESPACE + \"*\", root = \"distributed-cache\")\n+@Namespace(uri = NAMESPACE + \"*\", root = \"replicated-cache\")\n+@Namespace(uri = NAMESPACE + \"*\", root = \"scattered-cache\")\n+public class FragmentParser implements ConfigurationParser {", "originalCommit": "7f5bf2e89da28dbf806863fbfe7e9ce87f7c889c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0MDgyMA==", "url": "https://github.com/infinispan/infinispan/pull/8888#discussion_r531540820", "bodyText": "CacheParser it is. Updated.", "author": "tristantarrant", "createdAt": "2020-11-27T11:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA1NzExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "61ac7d06d57a9ba9bb81abad0509fb0b014d12bc", "chunk": "diff --git a/core/src/main/java/org/infinispan/configuration/parsing/FragmentParser.java b/core/src/main/java/org/infinispan/configuration/parsing/CacheParser.java\nsimilarity index 99%\nrename from core/src/main/java/org/infinispan/configuration/parsing/FragmentParser.java\nrename to core/src/main/java/org/infinispan/configuration/parsing/CacheParser.java\nindex b72534971d..01d749f157 100644\n--- a/core/src/main/java/org/infinispan/configuration/parsing/FragmentParser.java\n+++ b/core/src/main/java/org/infinispan/configuration/parsing/CacheParser.java\n\n@@ -69,10 +69,10 @@\n @Namespace(uri = NAMESPACE + \"*\", root = \"distributed-cache\")\n @Namespace(uri = NAMESPACE + \"*\", root = \"replicated-cache\")\n @Namespace(uri = NAMESPACE + \"*\", root = \"scattered-cache\")\n-public class FragmentParser implements ConfigurationParser {\n+public class CacheParser implements ConfigurationParser {\n    public static final String NAMESPACE = \"urn:infinispan:config:\";\n \n-   public FragmentParser() {\n+   public CacheParser() {\n    }\n \n    @Override\n"}}, {"oid": "61ac7d06d57a9ba9bb81abad0509fb0b014d12bc", "url": "https://github.com/infinispan/infinispan/commit/61ac7d06d57a9ba9bb81abad0509fb0b014d12bc", "message": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "committedDate": "2020-11-27T11:18:04Z", "type": "forcePushed"}, {"oid": "08c043784af0c239bdc97fe4eb7eeed90b9ae8dd", "url": "https://github.com/infinispan/infinispan/commit/08c043784af0c239bdc97fe4eb7eeed90b9ae8dd", "message": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "committedDate": "2020-11-27T15:21:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MTUyOQ==", "url": "https://github.com/infinispan/infinispan/pull/8888#discussion_r533241529", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                *                      by the server. The XML may be limited to just the cache configuration fragment.\n          \n          \n            \n                *                      by the server. A cache configuration fragment on its own is valid XML.", "author": "oraNod", "createdAt": "2020-12-01T09:46:59Z", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java", "diffHunk": "@@ -41,7 +41,7 @@\n     * @param name the name of the cache to create\n     * @param configuration a concrete configuration that will be sent to the server. The XML representation of this\n     *                      configuration must use the Infinispan embedded configuration schema in a version supported\n-    *                      by the server.\n+    *                      by the server. The XML may be limited to just the cache configuration fragment.", "originalCommit": "08c043784af0c239bdc97fe4eb7eeed90b9ae8dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8fcc6423faa1f9863b5df958fa1eb7e3221a272e", "chunk": "diff --git a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\nindex cf286024d2..d2e6298b9b 100644\n--- a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\n+++ b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\n\n@@ -41,7 +41,7 @@\n     * @param name the name of the cache to create\n     * @param configuration a concrete configuration that will be sent to the server. The XML representation of this\n     *                      configuration must use the Infinispan embedded configuration schema in a version supported\n-    *                      by the server. The XML may be limited to just the cache configuration fragment.\n+    *                      by the server. A cache configuration fragment on its own is valid XML.\n     * @return the cache\n     * @throws HotRodClientException\n     */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MTkzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8888#discussion_r533241935", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                *                      by the server. The XML may be limited to just the cache configuration fragment.\n          \n          \n            \n                *                      by the server. A cache configuration fragment on its own is valid XML.", "author": "oraNod", "createdAt": "2020-12-01T09:47:17Z", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java", "diffHunk": "@@ -79,7 +79,7 @@\n     * @param name the name of the cache to create\n     * @param configuration a concrete configuration that will be sent to the server. The XML representation of this\n     *                      configuration must use the Infinispan embedded configuration schema in a version supported\n-    *                      by the server.\n+    *                      by the server. The XML may be limited to just the cache configuration fragment.", "originalCommit": "08c043784af0c239bdc97fe4eb7eeed90b9ae8dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8fcc6423faa1f9863b5df958fa1eb7e3221a272e", "chunk": "diff --git a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\nindex cf286024d2..d2e6298b9b 100644\n--- a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\n+++ b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java\n\n@@ -79,7 +79,7 @@\n     * @param name the name of the cache to create\n     * @param configuration a concrete configuration that will be sent to the server. The XML representation of this\n     *                      configuration must use the Infinispan embedded configuration schema in a version supported\n-    *                      by the server. The XML may be limited to just the cache configuration fragment.\n+    *                      by the server. A cache configuration fragment on its own is valid XML.\n     * @return the cache\n     * @throws HotRodClientException\n     */\n"}}, {"oid": "8fcc6423faa1f9863b5df958fa1eb7e3221a272e", "url": "https://github.com/infinispan/infinispan/commit/8fcc6423faa1f9863b5df958fa1eb7e3221a272e", "message": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "committedDate": "2020-12-17T07:28:40Z", "type": "forcePushed"}, {"oid": "615d916d98ad5ecf53a74c4e2f088eb1caf86f57", "url": "https://github.com/infinispan/infinispan/commit/615d916d98ad5ecf53a74c4e2f088eb1caf86f57", "message": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "committedDate": "2020-12-17T10:43:13Z", "type": "commit"}, {"oid": "615d916d98ad5ecf53a74c4e2f088eb1caf86f57", "url": "https://github.com/infinispan/infinispan/commit/615d916d98ad5ecf53a74c4e2f088eb1caf86f57", "message": "ISPN-12133 Support XML Fragments in CacheContainerAdmin", "committedDate": "2020-12-17T10:43:13Z", "type": "forcePushed"}]}