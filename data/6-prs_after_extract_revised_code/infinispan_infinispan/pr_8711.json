{"pr_number": 8711, "pr_title": "ISPN-12221 Add zero-capacity-node support for Replicated caches ", "pr_createdAt": "2020-09-24T09:54:43Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8711", "timeline": [{"oid": "c6ff5f344e56f7217174194da6f01b91c3cb1ba6", "url": "https://github.com/infinispan/infinispan/commit/c6ff5f344e56f7217174194da6f01b91c3cb1ba6", "message": "ISPN-12221 Add zero-capacity-node support for Replicated caches\n\n* Extend ZeroCapacityNodeTest to cover replicated\n  and scattered caches\n* Add a list of members without state and a capacity\n  factors map to ReplicatedConsistentHash\n* Ignore nodes with zero capacity when computing backups\n* Change [Sync]ReplicatedConsistentHashFactory.\n  updateMembers() no not assign new members as backups", "committedDate": "2020-09-24T09:53:59Z", "type": "commit"}, {"oid": "af2fc8a252c0eaa7d787c7942ee24742c633ce99", "url": "https://github.com/infinispan/infinispan/commit/af2fc8a252c0eaa7d787c7942ee24742c633ce99", "message": "ISPN-12351 ImmutableListCopy makes too many copies\n\n* Make no-argument constructor create a valid instance\n* Avoid copying the elements array when possible\n* Use Arrays methods for copying\n* Mark fields final\n* Remove unnecessary type parameters and casts", "committedDate": "2020-09-24T09:54:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2NzgxMw==", "url": "https://github.com/infinispan/infinispan/pull/8711#discussion_r494267813", "bodyText": "@tristantarrant drink! \ud83c\udf7b", "author": "alanfx", "createdAt": "2020-09-24T12:18:51Z", "path": "core/src/main/java/org/infinispan/distribution/ch/impl/ReplicatedConsistentHashFactory.java", "diffHunk": "@@ -50,6 +60,15 @@ public ReplicatedConsistentHash updateMembers(ReplicatedConsistentHash baseCH, L\n       if (newMembers.equals(baseCH.getMembers()))\n          return baseCH;\n \n+      return updateCH(baseCH, newMembers, actualCapacityFactors, false);\n+   }\n+\n+   private ReplicatedConsistentHash updateCH(ReplicatedConsistentHash baseCH, List<Address> newMembers,\n+                                             Map<Address, Float> actualCapacityFactors, boolean rebalance) {\n+      // New members missing from the old CH or with capacity factor 0 should not become primary or backup owners", "originalCommit": "af2fc8a252c0eaa7d787c7942ee24742c633ce99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}