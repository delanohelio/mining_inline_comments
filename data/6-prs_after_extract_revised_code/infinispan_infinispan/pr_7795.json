{"pr_number": 7795, "pr_title": "[9.4] ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "pr_createdAt": "2020-01-28T22:44:50Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7795", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3NTgzMQ==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r372975831", "bodyText": "the changes in this class aren't required.", "author": "pruivo", "createdAt": "2020-01-30T14:22:15Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "diffHunk": "@@ -88,6 +88,7 @@\n    private String serverContextName;\n    private String defaultCacheName;\n    private boolean clientAuth;\n+   private ProtocolServerConfiguration configuration;", "originalCommit": "fea0396b411300e75b348e5eb9877a10ff35a6e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45e7c8c6dd7233c5b22e87caf88888088c63361f", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\nindex d18585b3d9..1bf607a160 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\n\n@@ -88,7 +88,6 @@\n    private String serverContextName;\n    private String defaultCacheName;\n    private boolean clientAuth;\n-   private ProtocolServerConfiguration configuration;\n \n    ProtocolServerService(String serverName, Class<? extends ProtocolServer> serverClass, ProtocolServerConfigurationBuilder<?, ?> configurationBuilder) {\n       this(serverName, serverClass, configurationBuilder, null);\n"}}, {"oid": "4353c54a2bad099629be0d377b33d24ad9cd312e", "url": "https://github.com/infinispan/infinispan/commit/4353c54a2bad099629be0d377b33d24ad9cd312e", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-30T17:51:59Z", "type": "forcePushed"}, {"oid": "45e7c8c6dd7233c5b22e87caf88888088c63361f", "url": "https://github.com/infinispan/infinispan/commit/45e7c8c6dd7233c5b22e87caf88888088c63361f", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-30T17:53:00Z", "type": "forcePushed"}, {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "url": "https://github.com/infinispan/infinispan/commit/85aedcbf9686a18bf9c05489e2beef144ef74fe9", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-30T17:55:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzODY2Ng==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373138666", "bodyText": "this can be removed from here (the field too)\nAs soon as you do :stop-connector and :start-connector, this class keeps pointing to the old instance.\nThe metrics bytes read/written are never updated after the restart.", "author": "pruivo", "createdAt": "2020-01-30T19:09:33Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "diffHunk": "@@ -266,7 +266,7 @@ public synchronized ProtocolServer getValue() throws IllegalStateException {\n       return extensionManager;\n    }\n \n-    public Transport getTransport() {\n+   public Transport getTransport() {", "originalCommit": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTQyNQ==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151425", "bodyText": "Done !", "author": "tristantarrant", "createdAt": "2020-01-30T19:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzODY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8d55326fdba4870f74de2725de552851a0a5ce50", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\nindex 1bf607a160..b36254a80e 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java\n\n@@ -266,10 +256,6 @@ public synchronized ProtocolServer getValue() throws IllegalStateException {\n       return extensionManager;\n    }\n \n-   public Transport getTransport() {\n-      return transport;\n-   }\n-\n    @Override\n    public InjectedValue<SecurityRealm> getSniSecurityRealm(String sniHostName) {\n       return sniDomains.computeIfAbsent(sniHostName, v -> new InjectedValue<SecurityRealm>());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTA5OA==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139098", "bodyText": "you need to get the Transport from the AbstractProtocolServer. The service, only keeps the first instance instantiated by the endpoint.", "author": "pruivo", "createdAt": "2020-01-30T19:10:22Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java", "diffHunk": "@@ -84,6 +53,10 @@ protected void executeRuntimeStep(OperationContext context, ModelNode operation)\n          case BYTES_WRITTEN:\n             result.set(service.getTransport().getTotalBytesWritten());", "originalCommit": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTU3NA==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151574", "bodyText": "Done", "author": "tristantarrant", "createdAt": "2020-01-30T19:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "8d55326fdba4870f74de2725de552851a0a5ce50", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java\nindex 65bbbfc37f..f0b0ac0e8b 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java\n\n@@ -45,18 +45,18 @@ protected void executeRuntimeStep(OperationContext context, ModelNode operation)\n          final ServiceController<?> controller = context.getServiceRegistry(false)\n                .getService(EndpointUtils.getServiceName(operation, name));\n          ProtocolServerService service = (ProtocolServerService) controller.getService();\n+         AbstractProtocolServer server = (AbstractProtocolServer) service.getValue();\n          ModelNode result = new ModelNode();\n          switch (metric) {\n          case BYTES_READ:\n-            result.set(service.getTransport().getTotalBytesRead());\n+            result.set(server.getTransport().getTotalBytesRead());\n             break;\n          case BYTES_WRITTEN:\n-            result.set(service.getTransport().getTotalBytesWritten());\n+            result.set(server.getTransport().getTotalBytesWritten());\n             break;\n          case TRANSPORT_RUNNING:\n-            result.set(((AbstractProtocolServer)service.getValue()).getTransportStatus() == ComponentStatus.RUNNING);\n+            result.set(server.getTransportStatus() == ComponentStatus.RUNNING);\n             break;\n-\n          }\n          context.getResult().set(result);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTQzMA==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139430", "bodyText": "You need to get the Transport from the RestServer. Same reason as above.", "author": "pruivo", "createdAt": "2020-01-30T19:11:00Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2012-2013 Red Hat Inc. and/or its affiliates and other contributors\n+ * as indicated by the @author tags. All rights reserved.\n+ * See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use,\n+ * modify, copy, or redistribute it subject to the terms and conditions\n+ * of the GNU Lesser General Public License, v. 2.1.\n+ * This program is distributed in the hope that it will be useful, but WITHOUT A\n+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n+ * You should have received a copy of the GNU Lesser General Public License,\n+ * v.2.1 along with this distribution; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n+ * MA  02110-1301, USA.\n+ */\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.lifecycle.ComponentStatus;\n+import org.jboss.as.controller.AbstractRuntimeOnlyHandler;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.descriptions.ModelDescriptionConstants;\n+import org.jboss.as.controller.registry.ManagementResourceRegistration;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class RestMetricsHandler extends AbstractRuntimeOnlyHandler {\n+   final String name;\n+\n+   protected RestMetricsHandler(final String name) {\n+      this.name = name;\n+   }\n+\n+   @Override\n+   protected void executeRuntimeStep(OperationContext context, ModelNode operation) throws OperationFailedException {\n+      final String attrName = operation.require(ModelDescriptionConstants.NAME).asString();\n+      ProtocolServerMetrics metric = ProtocolServerMetrics.getStat(attrName);\n+      if (metric == null) {\n+         context.getFailureDescription().set(String.format(\"Unknown metric %s\", attrName));\n+      } else {\n+         final ServiceController<?> controller = context.getServiceRegistry(false)\n+               .getService(EndpointUtils.getServiceName(operation, name));\n+         RestService service = (RestService) controller.getService();\n+         ModelNode result = new ModelNode();\n+         switch (metric) {\n+            case BYTES_READ:\n+               result.set(service.getTransport().getTotalBytesRead());\n+               break;\n+            case BYTES_WRITTEN:\n+               result.set(service.getTransport().getTotalBytesWritten());", "originalCommit": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTQ5Nw==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151497", "bodyText": "Done", "author": "tristantarrant", "createdAt": "2020-01-30T19:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "8d55326fdba4870f74de2725de552851a0a5ce50", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java\nindex 5494cfd0ee..5b1a054348 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java\n\n@@ -19,6 +19,7 @@\n package org.infinispan.server.endpoint.subsystem;\n \n import org.infinispan.lifecycle.ComponentStatus;\n+import org.infinispan.rest.RestServer;\n import org.jboss.as.controller.AbstractRuntimeOnlyHandler;\n import org.jboss.as.controller.OperationContext;\n import org.jboss.as.controller.OperationFailedException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTcyOA==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139728", "bodyText": "the Transport is the \"service\" isn't needed anymore and can be removed.", "author": "pruivo", "createdAt": "2020-01-30T19:11:34Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java", "diffHunk": "@@ -77,6 +79,7 @@\n    private final int maxContentLength;\n    private int compressionLevel;\n    private List<CorsConfig> corsConfigList;\n+   private Transport transport;", "originalCommit": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTgwOA==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151808", "bodyText": "Done", "author": "tristantarrant", "createdAt": "2020-01-30T19:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "8d55326fdba4870f74de2725de552851a0a5ce50", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java\nindex ee03178b45..8ce73d7e51 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java\n\n@@ -79,7 +77,6 @@\n    private final int maxContentLength;\n    private int compressionLevel;\n    private List<CorsConfig> corsConfigList;\n-   private Transport transport;\n \n    public RestService(String serverName, RestAuthMethod authMethod, String contextPath, ExtendedHeaders extendedHeaders, Set<String> ignoredCaches,\n                       int maxContentLength, int compressionLevel, List<CorsConfig> corsConfigList) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0MTEzNw==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373141137", "bodyText": "just curious: you could have used a single class to handle the start and stop connector right? or it wouldn't work?\nIt seems the only difference is the method invoked :)", "author": "pruivo", "createdAt": "2020-01-30T19:14:29Z", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.server.core.AbstractProtocolServer;\n+import org.infinispan.server.core.configuration.ProtocolServerConfiguration;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.OperationStepHandler;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class ProtocolServerConnectorStartHandler implements OperationStepHandler {", "originalCommit": "85aedcbf9686a18bf9c05489e2beef144ef74fe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTcxMg==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151712", "bodyText": "I've collapsed the classes into one", "author": "tristantarrant", "createdAt": "2020-01-30T19:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0MTEzNw=="}], "type": "inlineReview", "revised_code": {"commit": "8d55326fdba4870f74de2725de552851a0a5ce50", "chunk": "diff --git a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorTransportOpHandler.java\nsimilarity index 72%\nrename from server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java\nrename to server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorTransportOpHandler.java\nindex 3d2eb98dcd..d1f9151cd0 100644\n--- a/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java\n+++ b/server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorTransportOpHandler.java\n\n@@ -8,17 +8,23 @@\n import org.jboss.dmr.ModelNode;\n import org.jboss.msc.service.ServiceController;\n \n-public class ProtocolServerConnectorStartHandler implements OperationStepHandler {\n+public class ProtocolServerConnectorTransportOpHandler implements OperationStepHandler {\n    private final String prefix;\n+   private final boolean stop;\n \n-   public ProtocolServerConnectorStartHandler(String prefix) {\n+   public ProtocolServerConnectorTransportOpHandler(String prefix, boolean stop) {\n       this.prefix = prefix;\n+      this.stop = stop;\n    }\n \n    @Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n       final ServiceController<?> controller = context.getServiceRegistry(false).getService(EndpointUtils.getServiceName(operation, prefix));\n       AbstractProtocolServer<ProtocolServerConfiguration> protocolServer = (AbstractProtocolServer<ProtocolServerConfiguration>) controller.getValue();\n-      protocolServer.startTransport();\n+      if (stop) {\n+         protocolServer.stopTransport();\n+      } else {\n+         protocolServer.startTransport();\n+      }\n    }\n }\n"}}, {"oid": "8d55326fdba4870f74de2725de552851a0a5ce50", "url": "https://github.com/infinispan/infinispan/commit/8d55326fdba4870f74de2725de552851a0a5ce50", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-30T19:32:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1NzIwMw==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373157203", "bodyText": "I think you meant to have brackets encapsulate the entire rest of the method?", "author": "wburns", "createdAt": "2020-01-30T19:46:32Z", "path": "server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java", "diffHunk": "@@ -112,6 +118,21 @@ protected void startTransport() {\n       }\n    }\n \n+   public void stopTransport() {\n+      if (transport != null && transportStatus == ComponentStatus.RUNNING)\n+         transport.stop();", "originalCommit": "8d55326fdba4870f74de2725de552851a0a5ce50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1ODA2MQ==", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373158061", "bodyText": "Repushed", "author": "tristantarrant", "createdAt": "2020-01-30T19:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1NzIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "d14ae343f621241c5ed8467c35076633e54fd91e", "chunk": "diff --git a/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java b/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\nindex 3a2a7d8216..b526c00f37 100644\n--- a/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\n+++ b/server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java\n\n@@ -119,13 +119,14 @@ public void startTransport() {\n    }\n \n    public void stopTransport() {\n-      if (transport != null && transportStatus == ComponentStatus.RUNNING)\n+      if (transport != null && transportStatus == ComponentStatus.RUNNING) {\n          transport.stop();\n          transportStatus = ComponentStatus.TERMINATED;\n-      try {\n-         unregisterServerMBeans();\n-      } catch (Exception e) {\n-         throw new CacheException(e);\n+         try {\n+            unregisterServerMBeans();\n+         } catch (Exception e) {\n+            throw new CacheException(e);\n+         }\n       }\n    }\n \n"}}, {"oid": "d14ae343f621241c5ed8467c35076633e54fd91e", "url": "https://github.com/infinispan/infinispan/commit/d14ae343f621241c5ed8467c35076633e54fd91e", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-30T19:48:07Z", "type": "forcePushed"}, {"oid": "2f8423554b1f9662fd7da9602d6fe00febae24f1", "url": "https://github.com/infinispan/infinispan/commit/2f8423554b1f9662fd7da9602d6fe00febae24f1", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-31T11:52:14Z", "type": "forcePushed"}, {"oid": "f430b2cb8d931edad076b24863464aae1b08f6e1", "url": "https://github.com/infinispan/infinispan/commit/f430b2cb8d931edad076b24863464aae1b08f6e1", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-31T14:13:39Z", "type": "commit"}, {"oid": "f430b2cb8d931edad076b24863464aae1b08f6e1", "url": "https://github.com/infinispan/infinispan/commit/f430b2cb8d931edad076b24863464aae1b08f6e1", "message": "ISPN-11240 Add start/stop transport ops to the endpoint subsystem", "committedDate": "2020-01-31T14:13:39Z", "type": "forcePushed"}]}