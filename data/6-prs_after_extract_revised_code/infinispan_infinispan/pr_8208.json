{"pr_number": 8208, "pr_title": "ISPN-11630 Server multimap get with metadata incorrect response ", "pr_createdAt": "2020-04-15T15:22:39Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8208", "timeline": [{"oid": "99acd407478dc08e70c6461601466743b7732e93", "url": "https://github.com/infinispan/infinispan/commit/99acd407478dc08e70c6461601466743b7732e93", "message": "ISPN-11630 Server multimap get with metadata incorrect response\n\n* Server response should be empty when the operation status is\n  KeyDoesNotExist (0x02).\n* Multimap get without metadata should reply with status\n  KeyDoesNotExist (0x02) if the key does not exist.", "committedDate": "2020-04-22T07:23:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNDc1Mw==", "url": "https://github.com/infinispan/infinispan/pull/8208#discussion_r417204753", "bodyText": "why are we adding assert here instead of just firing the logs and exceptions ?", "author": "karesti", "createdAt": "2020-04-29T10:08:39Z", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java", "diffHunk": "@@ -142,41 +147,41 @@ private void createAndInvoke(ChannelOperation callback) {\n                assert currentActive >= 0;\n                int currentCreated = created.decrementAndGet();\n                assert currentCreated >= 0;\n+               if (trace) log.tracef(throwable, \"Channel could not be created, created = %d, active = %d\",\n+                                     currentCreated, currentActive);\n                callback.cancel(address, throwable);\n             } else {\n                callback.invoke(channel);\n             }\n          });\n       } catch (Throwable t) {\n-         active.decrementAndGet();\n-         created.decrementAndGet();\n+         int currentActive = active.decrementAndGet();\n+         assert currentActive >= 0;", "originalCommit": "99acd407478dc08e70c6461601466743b7732e93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUxOTg3Ng==", "url": "https://github.com/infinispan/infinispan/pull/8208#discussion_r418519876", "bodyText": "Unlike release or releaseClosedChannel, here the client is guaranteed to be catching the AssertionError, because it needs a channel to actually execute the operation. However, this code path is really uncommon, so I doubt it will ever trigger the assert. I'll update it to just log a warning, like the others.", "author": "danberindei", "createdAt": "2020-05-01T12:22:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNDc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY5MzQwNQ==", "url": "https://github.com/infinispan/infinispan/pull/8208#discussion_r428693405", "bodyText": "Changed to log warnings instead", "author": "danberindei", "createdAt": "2020-05-21T14:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNDc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a54c4425940406a36854b3bce7dce770d2da0182", "chunk": "diff --git a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java\nindex d08875d495..aced399166 100644\n--- a/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java\n+++ b/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java\n\n@@ -147,41 +142,41 @@ private void createAndInvoke(ChannelOperation callback) {\n                assert currentActive >= 0;\n                int currentCreated = created.decrementAndGet();\n                assert currentCreated >= 0;\n-               if (trace) log.tracef(throwable, \"Channel could not be created, created = %d, active = %d\",\n-                                     currentCreated, currentActive);\n                callback.cancel(address, throwable);\n             } else {\n                callback.invoke(channel);\n             }\n          });\n       } catch (Throwable t) {\n-         int currentActive = active.decrementAndGet();\n-         assert currentActive >= 0;\n-         int currentCreated = created.decrementAndGet();\n-         assert currentCreated >= 0;\n-         if (trace) log.tracef(t, \"Channel could not be created, created = %d, active = %d\",\n-                               currentCreated, currentActive);\n+         active.decrementAndGet();\n+         created.decrementAndGet();\n          callback.cancel(address, t);\n       }\n    }\n \n-   /**\n-    * Release a channel back into the pool after an operation has finished.\n-    */\n    public void release(Channel channel, ChannelRecord record) {\n-      int currentActive;\n-\n       // The channel can be closed when it's idle (due to idle timeout or closed connection)\n-      if (record.isIdle()) {\n-         HOTROD.warnf(\"Cannot release channel %s because it is idle\", channel);\n+      boolean idle = record.isIdle();\n+      if (!idle) {\n+         int currentActive = active.decrementAndGet();\n+         assert currentActive >= 0 : \"Error releasing \" + channel;\n+         record.setIdle();\n+      }\n+\n+      if (!channel.isActive()) {\n+         int currentCreated = created.decrementAndGet();\n+         assert currentCreated >= 0 : \"Error releasing \" + channel;\n+         return;\n+      } else if (idle) {\n+         log.debugf(\"Not releasing idle non-closed channel %s\", channel);\n+         assert false;\n          return;\n       }\n \n-      record.setIdle();\n-      currentActive = active.decrementAndGet();\n-      if (trace) log.tracef(\"Released channel %s, active = %d\", channel, currentActive);\n-      if (currentActive < 0) {\n-         HOTROD.warnf(\"Invalid active count after releasing channel %s\", channel);\n+      if (terminated) {\n+         log.debugf(\"Closing %s due to termination\", channel);\n+         channel.close();\n+         return;\n       }\n \n       ChannelOperation callback;\n"}}, {"oid": "bec8b479a2cf032f98f2b5bc8b1ae3b53e613398", "url": "https://github.com/infinispan/infinispan/commit/bec8b479a2cf032f98f2b5bc8b1ae3b53e613398", "message": "ISPN-11630 Server multimap get with metadata incorrect response\n\n* Server response should be empty when the operation status is\n  KeyDoesNotExist (0x02).\n* Multimap get without metadata should reply with status\n  KeyDoesNotExist (0x02) if the key does not exist.", "committedDate": "2020-05-19T10:41:35Z", "type": "forcePushed"}, {"oid": "18df230641be5c439816f4d2ba36b9b771ab52a0", "url": "https://github.com/infinispan/infinispan/commit/18df230641be5c439816f4d2ba36b9b771ab52a0", "message": "ISPN-11630 Server multimap get with metadata incorrect response\n\n* Server response should be empty when the operation status is\n  KeyDoesNotExist (0x02).\n* Multimap get without metadata should reply with status\n  KeyDoesNotExist (0x02) if the key does not exist.", "committedDate": "2020-05-20T13:47:23Z", "type": "forcePushed"}, {"oid": "a54c4425940406a36854b3bce7dce770d2da0182", "url": "https://github.com/infinispan/infinispan/commit/a54c4425940406a36854b3bce7dce770d2da0182", "message": "ISPN-11630 Remove HotRodTestingUtil.startHotRodServerWithDelay\n\n* Remove delay and perf parameters from startHotRodServer\n* Add TestGlobalConfigurationBuilder.cacheStarting() callback\n  and use it in HotRodConcurrentStartTest", "committedDate": "2020-05-21T14:18:16Z", "type": "commit"}, {"oid": "d5618ee91db8f344130bef9f8e0c639972faf80f", "url": "https://github.com/infinispan/infinispan/commit/d5618ee91db8f344130bef9f8e0c639972faf80f", "message": "ISPN-11630 Improve logging of channel events\n\n* Log the ChannelPool statistics more often\n* Add separate method to update ChannelPool statistics on close\n* Log channel reads and writes on the server side", "committedDate": "2020-05-21T14:18:16Z", "type": "commit"}, {"oid": "073de491c646c61ae32aeed3b12394af9b37be00", "url": "https://github.com/infinispan/infinispan/commit/073de491c646c61ae32aeed3b12394af9b37be00", "message": "ISPN-11630 Fix RemoteMultimapCacheManager generics", "committedDate": "2020-05-21T14:18:16Z", "type": "commit"}, {"oid": "2ecfccb608e5265963004025464cdf96c90c8edd", "url": "https://github.com/infinispan/infinispan/commit/2ecfccb608e5265963004025464cdf96c90c8edd", "message": "ISPN-11630 Server multimap get with metadata incorrect response\n\n* Server response should be empty when the operation status is\n  KeyDoesNotExist (0x02).\n* Multimap get without metadata should reply with status\n  KeyDoesNotExist (0x02) if the key does not exist.", "committedDate": "2020-05-21T14:38:51Z", "type": "commit"}, {"oid": "2ecfccb608e5265963004025464cdf96c90c8edd", "url": "https://github.com/infinispan/infinispan/commit/2ecfccb608e5265963004025464cdf96c90c8edd", "message": "ISPN-11630 Server multimap get with metadata incorrect response\n\n* Server response should be empty when the operation status is\n  KeyDoesNotExist (0x02).\n* Multimap get without metadata should reply with status\n  KeyDoesNotExist (0x02) if the key does not exist.", "committedDate": "2020-05-21T14:38:51Z", "type": "forcePushed"}]}