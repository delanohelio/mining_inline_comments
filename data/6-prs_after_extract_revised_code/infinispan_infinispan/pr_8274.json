{"pr_number": 8274, "pr_title": "ISPN-11706 Use XidImpl internally", "pr_createdAt": "2020-05-04T12:55:02Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8274", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzODAxMw==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r419638013", "bodyText": "why comment instead of remove ?", "author": "karesti", "createdAt": "2020-05-04T18:26:11Z", "path": "commons/all/src/main/java/org/infinispan/commons/marshall/Ids.java", "diffHunk": "@@ -50,7 +50,7 @@\n    int XID_DEADLOCK_DETECTING_GLOBAL_TRANSACTION = 33;\n    int XID_GLOBAL_TRANSACTION = 34;\n \n-   int IN_DOUBT_TX_INFO = 35;\n+   //int IN_DOUBT_TX_INFO = 35;", "originalCommit": "1c1295ef13ee8e336f17572f1a799cd564c7f247", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1Nzg2Mw==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r419657863", "bodyText": "I'll invoke @ryanemerson .\nAs far as I can see, we never remove the ids. we just left them there forever.\nCan they be removed Ryan?", "author": "pruivo", "createdAt": "2020-05-04T18:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzODAxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MjE4Mg==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r419642182", "bodyText": "could this code be handled inside the StatusTranslator to avoid duplication ? just a suggestion", "author": "karesti", "createdAt": "2020-05-04T18:32:58Z", "path": "hibernate/cache-v51/src/test/java/org/infinispan/test/hibernate/cache/v51/util/BatchModeTransactionCoordinator.java", "diffHunk": "@@ -64,19 +64,15 @@ public void rollback() {\n \n \t\t@Override\n \t\tpublic TransactionStatus getStatus() {\n-\t\t\ttry {\n-            EmbeddedTransaction transaction = tm.getTransaction();\n-\t\t\t\treturn transaction == null ? TransactionStatus.NOT_ACTIVE : StatusTranslator.translate(transaction.getStatus());\n-\t\t\t} catch (SystemException e) {\n-\t\t\t\tthrow new RuntimeException(e);\n-\t\t\t}\n+\t\t\tEmbeddedTransaction transaction = tm.getTransaction();\n+\t\t\treturn transaction == null ? TransactionStatus.NOT_ACTIVE : StatusTranslator.translate(transaction.getStatus());", "originalCommit": "1c1295ef13ee8e336f17572f1a799cd564c7f247", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1NzM4MQ==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r419657381", "bodyText": "I don't see how. What's your idea?\nThe StatusTranslator is hibernate code and it receives an int. I need to check if the transaction exists.", "author": "pruivo", "createdAt": "2020-05-04T18:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MjE4Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f887fea14534139606d449a1b75a342cbad38b86", "url": "https://github.com/infinispan/infinispan/commit/f887fea14534139606d449a1b75a342cbad38b86", "message": "ISPN-11706 Use XidImpl internally", "committedDate": "2020-05-05T09:27:03Z", "type": "forcePushed"}, {"oid": "7f50eacd004827c7d368d53bd3984f10395c2932", "url": "https://github.com/infinispan/infinispan/commit/7f50eacd004827c7d368d53bd3984f10395c2932", "message": "ISPN-11706 Use XidImpl internally", "committedDate": "2020-05-05T12:40:34Z", "type": "commit"}, {"oid": "7f50eacd004827c7d368d53bd3984f10395c2932", "url": "https://github.com/infinispan/infinispan/commit/7f50eacd004827c7d368d53bd3984f10395c2932", "message": "ISPN-11706 Use XidImpl internally", "committedDate": "2020-05-05T12:40:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDQ0OA==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r420694448", "bodyText": "When do Xids need to be persisted?\nIf they don't, then XidImpl should continue to utilise an Externalizer until the global marshaller has been refactored (Infinispan 12 now).", "author": "ryanemerson", "createdAt": "2020-05-06T10:38:22Z", "path": "commons/all/src/main/java/org/infinispan/commons/marshall/PersistenceContextInitializer.java", "diffHunk": "@@ -23,6 +24,7 @@\n             CounterConfiguration.class,\n             CounterType.class,\n             Storage.class,\n+            XidImpl.class", "originalCommit": "7f50eacd004827c7d368d53bd3984f10395c2932", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMTI5MQ==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r420701291", "bodyText": "hmmm... I thought we were moving everything to protostream... aren't we?\nI guess I can rollback this change... And org.infinispan.transaction.xa.recovery.InDoubtTxInfo too", "author": "pruivo", "createdAt": "2020-05-06T10:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcxMDQ2MA==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r420710460", "bodyText": "I thought we were moving everything to protostream... aren't we?\n\nWe are, however there are two contexts for marshalling. The persistence context and the global context. The persistence context is tightly controlled and should only include classes that need to be persisted. We have stronger guarantees over this context at the moment, as we need to ensure store compatibility across majors. This is what is currently implemented in ProtoStream, hence why you added XidImpl to the PersistenceContextInitializer.\nThe global context is for general marshalling required for inter-node communication etc. This hasn't been converted to be protostream yet, well not on master at least, so if you only require marshalling for this process you continue to use Externalizers and in my conversion branch I will handle it. Once my work is resumed for 12, there will be a GlobalContextInitializer which you would add XidImpl to.", "author": "ryanemerson", "createdAt": "2020-05-06T11:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcxMTQ4MQ==", "url": "https://github.com/infinispan/infinispan/pull/8274#discussion_r420711481", "bodyText": "And org.infinispan.transaction.xa.recovery.InDoubtTxInfo too\n\nYes please", "author": "ryanemerson", "createdAt": "2020-05-06T11:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5NDQ0OA=="}], "type": "inlineReview", "revised_code": null}]}