{"pr_number": 8036, "pr_title": "ISPN-11367 Update cache manager javadoc for default caches", "pr_createdAt": "2020-03-11T14:55:37Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8036", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTU4NQ==", "url": "https://github.com/infinispan/infinispan/pull/8036#discussion_r393099585", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @param createIfAbsent if <tt>false</tt>, the cache must be running.\n          \n          \n            \n                * @param createIfAbsent if <tt>false</tt>, returns the running cache otherwise null.", "author": "wburns", "createdAt": "2020-03-16T15:14:24Z", "path": "core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java", "diffHunk": "@@ -208,54 +237,45 @@\n    <K, V> Cache<K, V> createCache(String name, Configuration configuration);\n \n    /**\n-    * Retrieves a named cache from the system in the same way that {@link\n-    * #getCache(String)} does except that if offers the possibility for the\n-    * named cache not to be retrieved if it has not yet been started, or if\n-    * it's been removed after being started. If a non-template configuration\n-    * exists with the same name, it will be used to configure the cache.\n-    *\n+    * Similar to {@link #getCache(String)}, except if has the option\n+    * to not create the cache if it is not already running.\n     *\n     * @param cacheName name of cache to retrieve\n-    * @param createIfAbsent if <tt>false</tt>, the named cache will not be\n-    *        retrieved if it hasn't been retrieved previously or if it's been\n-    *        removed. If <tt>true</tt>, this methods works just like {@link\n-    *        #getCache(String)}\n-    * @return null if no named cache exists as per rules set above, otherwise\n-    *         returns a cache instance identified by cacheName\n+    * @param createIfAbsent if <tt>false</tt>, the cache must be running.\n+    *        If <tt>true</tt>, this methods works just like {@link #getCache(String)}.\n+    * @return <tt>null</tt> if the cache does not exist and <tt>createIfAbsent == false</tt>,\n+    *        otherwise a cache instance identified by cacheName\n     */\n    <K, V> Cache<K, V> getCache(String cacheName, boolean createIfAbsent);\n \n    /**\n-    * Retrieves a named cache from the system in the same way that {@link\n-    * #getCache(String)} does except that if offers the possibility to specify\n-    * a specific configuration template. Multiple caches can be created using\n-    * the same configuration.\n+    * Similar to {@link #getCache(String)}, only with an explicit configuration template name.\n+    * <p/>\n+    * Multiple caches can be created using the same configuration.\n     *\n     * @param cacheName name of cache to retrieve\n     * @param configurationName name of the configuration template to use\n-    * @return null if no configuration exists as per rules set above, otherwise\n-    *         returns a cache instance identified by cacheName\n+    * @return a cache instance identified by cacheName\n+    * @throws org.infinispan.commons.CacheConfigurationException if the configuration does not exist\n+    *         or if a configuration named <tt>cacheName</tt> already exists.\n     * @deprecated as of 9.0. Use {@link EmbeddedCacheManager#defineConfiguration(String, String, Configuration)} and\n     * {@link EmbeddedCacheManager#getCache(String)} instead\n     */\n    <K, V> Cache<K, V> getCache(String cacheName, String configurationName);\n \n    /**\n-    * Retrieves a named cache from the system in the same way that {@link\n-    * #getCache(String)} does except that if offers the possibility to specify\n-    * a specific configuration template. Multiple caches can be created using\n-    * the same configuration. Tihs method also offers the possibility for the\n-    * named cache not to be retrieved if it has not yet been started, or if\n-    * it's been removed after being started.\n+    * Similar to {@link #getCache(String, boolean)}, only with an explicit configuration template name.\n+    * <p/>\n+    * Multiple caches can be created using the same configuration.\n     *\n     * @param cacheName name of cache to retrieve\n     * @param configurationTemplate name of the configuration template to use\n-    * @param createIfAbsent if <tt>false</tt>, the named cache will not be\n-    *        retrieved if it hasn't been retrieved previously or if it's been\n-    *        removed. If <tt>true</tt>, this methods works just like {@link\n-    *        #getCache(String, String)}\n-    * @return null if no configuration exists as per rules set above, otherwise\n-    *         returns a cache instance identified by cacheName\n+    * @param createIfAbsent if <tt>false</tt>, the cache must be running.", "originalCommit": "caaf8dabe43fe5927fd9344cc344f8b88b56f11f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTc1Mw==", "url": "https://github.com/infinispan/infinispan/pull/8036#discussion_r393099753", "bodyText": "This is a few other places as well.", "author": "wburns", "createdAt": "2020-03-16T15:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzUyNg==", "url": "https://github.com/infinispan/infinispan/pull/8036#discussion_r394977526", "bodyText": "How about this @wburns ?\n    * @param createIfAbsent If <tt>true</tt>, this methods works just like {@link #getCache(String)}.\n    *                       If <tt>false</tt>, return the already running cache or <tt>null</tt>.", "author": "danberindei", "createdAt": "2020-03-19T12:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwNzQ0Mg==", "url": "https://github.com/infinispan/infinispan/pull/8036#discussion_r395007442", "bodyText": "Sure.", "author": "wburns", "createdAt": "2020-03-19T13:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "752781ea60253950d9e036ece3bca6d931619b8b", "chunk": "diff --git a/core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java b/core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java\nindex 2cf8764104..383b16b09b 100644\n--- a/core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java\n+++ b/core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java\n\n@@ -241,8 +241,8 @@\n     * to not create the cache if it is not already running.\n     *\n     * @param cacheName name of cache to retrieve\n-    * @param createIfAbsent if <tt>false</tt>, the cache must be running.\n-    *        If <tt>true</tt>, this methods works just like {@link #getCache(String)}.\n+    * @param createIfAbsent If <tt>true</tt>, this methods works just like {@link #getCache(String)}.\n+    *                       If <tt>false</tt>, return the already running cache or <tt>null</tt>.\n     * @return <tt>null</tt> if the cache does not exist and <tt>createIfAbsent == false</tt>,\n     *        otherwise a cache instance identified by cacheName\n     */\n"}}, {"oid": "752781ea60253950d9e036ece3bca6d931619b8b", "url": "https://github.com/infinispan/infinispan/commit/752781ea60253950d9e036ece3bca6d931619b8b", "message": "ISPN-11367 Update cache manager javadoc for default caches", "committedDate": "2020-03-19T12:04:43Z", "type": "commit"}, {"oid": "752781ea60253950d9e036ece3bca6d931619b8b", "url": "https://github.com/infinispan/infinispan/commit/752781ea60253950d9e036ece3bca6d931619b8b", "message": "ISPN-11367 Update cache manager javadoc for default caches", "committedDate": "2020-03-19T12:04:43Z", "type": "forcePushed"}]}