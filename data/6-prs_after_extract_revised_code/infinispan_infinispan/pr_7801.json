{"pr_number": 7801, "pr_title": "ISPN-11231 Transcoder lookup is inefficient", "pr_createdAt": "2020-01-29T14:20:25Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7801", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNzQwNw==", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372427407", "bodyText": "Typo in if", "author": "ryanemerson", "createdAt": "2020-01-29T14:51:37Z", "path": "commons/src/main/java/org/infinispan/commons/dataconversion/Transcoder.java", "diffHunk": "@@ -23,12 +28,15 @@\n    Set<MediaType> getSupportedMediaTypes();\n \n    /**\n-    * @return true if the transcoder supports the conversion between supplied {@link MediaType}.\n+    * @return {@code true} if the transcoder supports the conversion between the supplied {@link MediaType}s.\n     */\n    default boolean supportsConversion(MediaType mediaType, MediaType other) {\n       return !mediaType.match(other) && supports(mediaType) && supports(other);\n    }\n \n+   /**\n+    * @return {@code true} iff the transcoder supports the conversion to and from the given {@link MediaType}.", "originalCommit": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NjU1Nw==", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372886557", "bodyText": "I meant iff as in \"if and only if\", but I can change it if you think it's too obscure", "author": "danberindei", "createdAt": "2020-01-30T11:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNzQwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyODI4Nw==", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372428287", "bodyText": "Does this add any value? Same applies for EncoderIds.java", "author": "ryanemerson", "createdAt": "2020-01-29T14:52:48Z", "path": "commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java", "diffHunk": "@@ -4,6 +4,10 @@\n  * @since 9.2\n  */\n public interface WrapperIds {\n+   /**\n+    * @since 11", "originalCommit": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4NzE3OA==", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372887178", "bodyText": "Maybe not... I'll remove them", "author": "danberindei", "createdAt": "2020-01-30T11:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyODI4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5c963695545f5f622951b7e1be5fc431cd5c4384", "chunk": "diff --git a/commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java b/commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java\nindex 772fe2d654..ab4587719a 100644\n--- a/commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java\n+++ b/commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java\n\n@@ -4,9 +4,6 @@\n  * @since 9.2\n  */\n public interface WrapperIds {\n-   /**\n-    * @since 11\n-    */\n    byte NO_WRAPPER = 0;\n \n    byte BYTE_ARRAY_WRAPPER = 1;\n"}}, {"oid": "5c963695545f5f622951b7e1be5fc431cd5c4384", "url": "https://github.com/infinispan/infinispan/commit/5c963695545f5f622951b7e1be5fc431cd5c4384", "message": "ISPN-11231 Transcoder lookup is inefficient\n\n* Register transcoder adapter for global marshaller only once\n* Cache transcoders in a map by source and target media type\n* Look up encoders and wrappers directly by id\n* Don't allow injection in the static encoders", "committedDate": "2020-01-30T11:10:47Z", "type": "commit"}, {"oid": "5c963695545f5f622951b7e1be5fc431cd5c4384", "url": "https://github.com/infinispan/infinispan/commit/5c963695545f5f622951b7e1be5fc431cd5c4384", "message": "ISPN-11231 Transcoder lookup is inefficient\n\n* Register transcoder adapter for global marshaller only once\n* Cache transcoders in a map by source and target media type\n* Look up encoders and wrappers directly by id\n* Don't allow injection in the static encoders", "committedDate": "2020-01-30T11:10:47Z", "type": "forcePushed"}]}