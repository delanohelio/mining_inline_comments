{"pr_number": 8719, "pr_title": "ISPN-12286 + ISPN-12357 Indexing configurations should not be inherited when explicitly disabled", "pr_createdAt": "2020-09-26T10:02:21Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8719", "timeline": [{"oid": "39207262fe8ea1d9523bf6e33ad4898d4afd2f6d", "url": "https://github.com/infinispan/infinispan/commit/39207262fe8ea1d9523bf6e33ad4898d4afd2f6d", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-26T10:19:03Z", "type": "forcePushed"}, {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9", "url": "https://github.com/infinispan/infinispan/commit/77b656466431c3cbaf982abde2203ecaae4f26f9", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-26T10:54:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4OTYxNA==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495789614", "bodyText": "This addition ensures inheritance works properly when inheriting from an old base config that uses index`` or auto-configattributes rather thanenabled```.  Do you think it's worth adding this explanation in code @gustavonalle ?", "author": "anistor", "createdAt": "2020-09-28T08:59:55Z", "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "diffHunk": "@@ -337,11 +349,18 @@ public IndexingConfiguration create() {\n    @Override\n    public IndexingConfigurationBuilder read(IndexingConfiguration template) {\n       attributes.read(template.attributes());\n+      Index index = attributes.attribute(INDEX).get();", "originalCommit": "b22b4a06272dffa533b15a6d28401c5d68a4dc67", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5d2f42a2f492251c243ab15e5dd6e7e4c39fff5", "chunk": "diff --git a/core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java b/core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java\nindex f17cda99a4..348841af9f 100644\n--- a/core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java\n+++ b/core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java\n\n@@ -349,6 +348,9 @@ public IndexingConfiguration create() {\n    @Override\n    public IndexingConfigurationBuilder read(IndexingConfiguration template) {\n       attributes.read(template.attributes());\n+\n+      // ensures inheritance works properly even when inheriting from an old config\n+      // that uses INDEX or AUTO_CONFIG instead of ENABLED\n       Index index = attributes.attribute(INDEX).get();\n       if (index != null) {\n          enabled(index != Index.NONE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495794891", "bodyText": "This should be done in the builder itself, in IndexingConfigurationBuilder#create(). The issue of doing here is it covers only XML parsing.", "author": "gustavonalle", "createdAt": "2020-09-28T09:08:52Z", "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2755,6 +2755,11 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n+      if (!builder.indexing().enabled()) {\n+         // discard any eventually inherited indexing config if indexing is not enabled\n+         builder.indexing().reset();\n+      }", "originalCommit": "b22b4a06272dffa533b15a6d28401c5d68a4dc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0ODE5MQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495848191", "bodyText": "indeed. but create() is too late because we cannot distinguish the inherited vs own. and we also don;t even have a ref to base config to try to figure out.", "author": "anistor", "createdAt": "2020-09-28T10:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3NzQzMg==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495877432", "bodyText": "what about resetting everything in the builder whenever the index.setDisabled() is called?", "author": "gustavonalle", "createdAt": "2020-09-28T11:44:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODc0Nw==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495878747", "bodyText": "I've pushed a new WIP commit to try that.\nThis thing gets disgustingly tangled \ud83d\udc19", "author": "anistor", "createdAt": "2020-09-28T11:47:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cca9cd9482d41d54aaf5b0f6ff06d2d81585f45f", "chunk": "diff --git a/core/src/main/java/org/infinispan/configuration/parsing/Parser.java b/core/src/main/java/org/infinispan/configuration/parsing/Parser.java\nindex 41d540eb2b..b974b8a462 100644\n--- a/core/src/main/java/org/infinispan/configuration/parsing/Parser.java\n+++ b/core/src/main/java/org/infinispan/configuration/parsing/Parser.java\n\n@@ -2755,11 +2755,6 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n-      if (!builder.indexing().enabled()) {\n-         // discard any eventually inherited indexing config if indexing is not enabled\n-         builder.indexing().reset();\n-      }\n-\n       Properties indexingProperties = new Properties();\n       while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT) {\n          Element element = Element.forName(reader.getLocalName());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495846585", "bodyText": "searchMapping is null well before this loop, so why not complain earlier about it @gustavonalle ?", "author": "anistor", "createdAt": "2020-09-28T10:40:41Z", "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "originalCommit": "77b656466431c3cbaf982abde2203ecaae4f26f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc0MjUxMQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496742511", "bodyText": "I put it here so that it can report that a specific type is not indexed. Where do you suggest to move it?", "author": "gustavonalle", "createdAt": "2020-09-29T14:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2NTA0NQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496765045", "bodyText": "a few lines above we have a check:  if (cfg.indexing().enabled())  so how can searchMapping be null then here?  it seems the only way (according to SerializationContextSearchMapping class) is if there are no indexed entities configured for a cache that is declared as indexed, and that is something we also catch earlier. So my question is when is this newly introduced CacheConfigurationException (typeNotIndexed) actually happening (which btw I think duplicates another message)?", "author": "anistor", "createdAt": "2020-09-29T14:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3MDE0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496770149", "bodyText": "if (cfg.indexing().enabled()) so how can searchMapping be null then here?\n\nYou can have an odd situation where the cache is indexed, but none of the entities are marked as indexed. This causes some issues, for e.g. https://issues.redhat.com/browse/ISPN-12218\nI hope this validation will prevent it", "author": "gustavonalle", "createdAt": "2020-09-29T14:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3MzExNw==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496773117", "bodyText": "and that is something we also catch earlier\n\nI don't remember seeing this being handled, and correctly reporting that 'entity X is not indexed' (this is an important part). Is that related to your changes?", "author": "gustavonalle", "createdAt": "2020-09-29T14:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3NTc4Mg==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496775782", "bodyText": "anyway, there's a test for this error reporting https://github.com/infinispan/infinispan/pull/8719/files#diff-b375b40160f198a071885221ebdbb838\nIf you move the searchmapping check, and the test still passes, good!", "author": "gustavonalle", "createdAt": "2020-09-29T14:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI3Mjc5NA==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497272794", "bodyText": "Looking deeper at this, the search mapping null check is wrong @gustavonalle . See the latest WIP commit I added and the commit comment.", "author": "anistor", "createdAt": "2020-09-30T06:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5ODU0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497298549", "bodyText": "And I pushed another WIP, that fixes the issue.  After you have a quick look at it @gustavonalle I think I can squash those and merge this.", "author": "anistor", "createdAt": "2020-09-30T07:30:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3NTY0OA==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497375648", "bodyText": "Good catch @anistor let's wait for CI", "author": "gustavonalle", "createdAt": "2020-09-30T09:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5OTA5Ng==", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497399096", "bodyText": "ci is taking a nap.", "author": "anistor", "createdAt": "2020-09-30T10:16:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6c78caac73ed94b596d963b20fd2f99330476c54", "chunk": "diff --git a/remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java b/remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java\nindex d535370d0f..bc96542713 100644\n--- a/remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java\n+++ b/remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java\n\n@@ -174,7 +174,7 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n-                  if (searchMapping == null) {\n+                  if (searchMapping == null || !searchMapping.allIndexedTypes().containsKey(typeName)) {\n                      throw log.typeNotIndexed(typeName);\n                   }\n                }\n"}}, {"oid": "f8b0ed06d6d1b5cc6237675cdc33161ac96d7ec9", "url": "https://github.com/infinispan/infinispan/commit/f8b0ed06d6d1b5cc6237675cdc33161ac96d7ec9", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T10:29:01Z", "type": "forcePushed"}, {"oid": "a5d2f42a2f492251c243ab15e5dd6e7e4c39fff5", "url": "https://github.com/infinispan/infinispan/commit/a5d2f42a2f492251c243ab15e5dd6e7e4c39fff5", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T11:20:10Z", "type": "forcePushed"}, {"oid": "cca9cd9482d41d54aaf5b0f6ff06d2d81585f45f", "url": "https://github.com/infinispan/infinispan/commit/cca9cd9482d41d54aaf5b0f6ff06d2d81585f45f", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T13:34:04Z", "type": "forcePushed"}, {"oid": "3005545d6ae1739e6e451f5e5596c0410724f068", "url": "https://github.com/infinispan/infinispan/commit/3005545d6ae1739e6e451f5e5596c0410724f068", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T16:21:58Z", "type": "forcePushed"}, {"oid": "56deeba9050bf8d7bb4ee13cd67d4e7d13ba9c43", "url": "https://github.com/infinispan/infinispan/commit/56deeba9050bf8d7bb4ee13cd67d4e7d13ba9c43", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T18:03:09Z", "type": "forcePushed"}, {"oid": "7f822484ad560d5c6a69fd1353b50465c6c06697", "url": "https://github.com/infinispan/infinispan/commit/7f822484ad560d5c6a69fd1353b50465c6c06697", "message": "ISPN-12286 Fix rather than delete some tests", "committedDate": "2020-09-28T20:44:52Z", "type": "forcePushed"}, {"oid": "07871261de7273f413c16a475f3a1f413a86bd6d", "url": "https://github.com/infinispan/infinispan/commit/07871261de7273f413c16a475f3a1f413a86bd6d", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-09-29T14:31:02Z", "type": "forcePushed"}, {"oid": "6c78caac73ed94b596d963b20fd2f99330476c54", "url": "https://github.com/infinispan/infinispan/commit/6c78caac73ed94b596d963b20fd2f99330476c54", "message": "WIP add fix", "committedDate": "2020-10-01T20:04:22Z", "type": "forcePushed"}, {"oid": "a603794efab9235fcccd68e7b6bce574ebe5fe85", "url": "https://github.com/infinispan/infinispan/commit/a603794efab9235fcccd68e7b6bce574ebe5fe85", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-10-02T10:01:03Z", "type": "forcePushed"}, {"oid": "22c19b04a499f541a8b102696ddc5fc3ec86c7ab", "url": "https://github.com/infinispan/infinispan/commit/22c19b04a499f541a8b102696ddc5fc3ec86c7ab", "message": "ISPN-12357 Indexing configurations should not be inherited when explicitly disabled\n\n* provide IndexingConfigurationBuilder.reset() to be used by Parser to clear all inherited indexing config if indexing is not enabled\n* some minor cleanups in Attribute/AttributeSet", "committedDate": "2020-10-02T11:35:40Z", "type": "commit"}, {"oid": "6a68188a66c32b3bc5b7f6c6f72045bd9b3fed65", "url": "https://github.com/infinispan/infinispan/commit/6a68188a66c32b3bc5b7f6c6f72045bd9b3fed65", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-10-02T11:35:40Z", "type": "forcePushed"}, {"oid": "e4f43e0986daeea9c0fafc99df5f7e05cf66b822", "url": "https://github.com/infinispan/infinispan/commit/e4f43e0986daeea9c0fafc99df5f7e05cf66b822", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-10-02T15:17:11Z", "type": "forcePushed"}, {"oid": "977d9301785ce917e98af6558d2ae77f7c27f5cf", "url": "https://github.com/infinispan/infinispan/commit/977d9301785ce917e98af6558d2ae77f7c27f5cf", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-10-02T15:18:48Z", "type": "commit"}, {"oid": "977d9301785ce917e98af6558d2ae77f7c27f5cf", "url": "https://github.com/infinispan/infinispan/commit/977d9301785ce917e98af6558d2ae77f7c27f5cf", "message": "ISPN-12286 Indexed entity declaration not enforced", "committedDate": "2020-10-02T15:18:48Z", "type": "forcePushed"}]}