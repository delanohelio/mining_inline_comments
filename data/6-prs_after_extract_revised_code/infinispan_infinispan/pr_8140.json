{"pr_number": 8140, "pr_title": "ISPN-11576 doc fixes for dev guide content", "pr_createdAt": "2020-04-01T10:57:34Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8140", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTgxOA==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401531818", "bodyText": "@ryanemerson Can you please double check this change? There are a few other changes to the marshalling content.", "author": "oraNod", "createdAt": "2020-04-01T11:02:21Z", "path": "documentation/src/main/asciidoc/topics/code_examples/AuthorMarshaller.java", "diffHunk": "@@ -13,7 +13,7 @@ public String getTypeName() {\n    }\n \n    @Override\n-   public void writeTo(ProtoStreamWriter writer, Author author) throws IOException {\n+   public void writeTo(MessageMarshaller.ProtoStreamWriter writer, Author author) throws IOException {", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTkyMg==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401531922", "bodyText": "@ryanemerson", "author": "oraNod", "createdAt": "2020-04-01T11:02:33Z", "path": "documentation/src/main/asciidoc/topics/code_examples/BookMarshaller.java", "diffHunk": "@@ -13,7 +13,7 @@ public String getTypeName() {\n    }\n \n    @Override\n-   public void writeTo(ProtoStreamWriter writer, Book book) throws IOException {\n+   public void writeTo(MessageMarshaller.ProtoStreamWriter writer, Book book) throws IOException {", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjA3NA==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401532074", "bodyText": "@ryanemerson", "author": "oraNod", "createdAt": "2020-04-01T11:02:51Z", "path": "documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java", "diffHunk": "@@ -1,3 +1,4 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n-      builder.serialization().marshaller(org.infinispan.example.marshall.CustomMarshaller.class)\n-      .addJavaSerialWhiteList(\"org.infinispan.example.*\");\n+builder.serialization()\n+      .marshaller(new org.infinispan.example.marshall.CustomMarshaller()).whiteList()\n+      .addRegexp(\"org.infinispan.example.*\");", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d2d6f191095963bf2cd441b10eb59f7762939b6", "chunk": "diff --git a/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java b/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\nindex b321cb4f09..178b249422 100644\n--- a/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\n+++ b/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\n\n@@ -1,4 +1,4 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n builder.serialization()\n-      .marshaller(new org.infinispan.example.marshall.CustomMarshaller()).whiteList()\n-      .addRegexp(\"org.infinispan.example.*\");\n+      .marshaller(new org.infinispan.example.marshall.CustomMarshaller())\n+      .whiteList().addRegexp(\"org.infinispan.example.*\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjIwMw==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401532203", "bodyText": "@ryanemerson", "author": "oraNod", "createdAt": "2020-04-01T11:03:07Z", "path": "documentation/src/main/asciidoc/topics/code_examples/JBossUserMarshaller.java", "diffHunk": "@@ -1,2 +1,2 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n-      builder.serialization().marshaller(JBossUserMarshaller.class);\n+builder.serialization().marshaller(new JBossUserMarshaller());", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjMyNQ==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401532325", "bodyText": "@ryanemerson", "author": "oraNod", "createdAt": "2020-04-01T11:03:23Z", "path": "documentation/src/main/asciidoc/topics/code_examples/ProtoStreamMarshaller.java", "diffHunk": "@@ -1,2 +1,3 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n-builder.addContextInitializers(new LibraryInitializerImpl(), new SCIImpl())\n+builder.serialization()\n+       .addContextInitializers(new LibraryInitializerImpl(), new SCIImpl());", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjQzMg==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401532432", "bodyText": "@ryanemerson", "author": "oraNod", "createdAt": "2020-04-01T11:03:35Z", "path": "documentation/src/main/asciidoc/topics/code_examples/SerializationMarshaller.java", "diffHunk": "@@ -1,3 +1,5 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n-builder.serialization().marshaller(new JavaSerializationMarshaller())\n-      .addJavaSerialWhiteList(\"org.infinispan.example.*\", \"org.infinispan.concrete.SomeClass\");\n+builder.serialization()\n+       .marshaller(new JavaSerializationMarshaller())\n+       .whiteList()\n+       .addRegexps(\"org.infinispan.example.\", \"org.infinispan.concrete.SomeClass\");", "originalCommit": "d48dc17c85aa49ee2b0fdd4f586359d0727c7e06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "bbd12006bebb983db98a7a4dc2deec1b406fc734", "url": "https://github.com/infinispan/infinispan/commit/bbd12006bebb983db98a7a4dc2deec1b406fc734", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T11:21:01Z", "type": "forcePushed"}, {"oid": "779595b4a6b2f225784c64d523b8262f3b4d1f68", "url": "https://github.com/infinispan/infinispan/commit/779595b4a6b2f225784c64d523b8262f3b4d1f68", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T11:30:52Z", "type": "forcePushed"}, {"oid": "e033e974ffc933e86618818a3a2b29822b7c77b6", "url": "https://github.com/infinispan/infinispan/commit/e033e974ffc933e86618818a3a2b29822b7c77b6", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T12:23:29Z", "type": "forcePushed"}, {"oid": "b0df04f1759ed44941228743686d24aa1650a16e", "url": "https://github.com/infinispan/infinispan/commit/b0df04f1759ed44941228743686d24aa1650a16e", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T12:30:18Z", "type": "forcePushed"}, {"oid": "2f04ceea1325c14b424ec2fda745599fe9f73a57", "url": "https://github.com/infinispan/infinispan/commit/2f04ceea1325c14b424ec2fda745599fe9f73a57", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T12:44:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4ODUyMQ==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401588521", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  .marshaller(new org.infinispan.example.marshall.CustomMarshaller()).whiteList()\n          \n          \n            \n                  .addRegexp(\"org.infinispan.example.*\");\n          \n          \n            \n                  .marshaller(new org.infinispan.example.marshall.CustomMarshaller())\n          \n          \n            \n                  .whiteList().addRegexp(\"org.infinispan.example.*\");", "author": "pruivo", "createdAt": "2020-04-01T12:49:22Z", "path": "documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java", "diffHunk": "@@ -1,3 +1,4 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n-      builder.serialization().marshaller(org.infinispan.example.marshall.CustomMarshaller.class)\n-      .addJavaSerialWhiteList(\"org.infinispan.example.*\");\n+builder.serialization()\n+      .marshaller(new org.infinispan.example.marshall.CustomMarshaller()).whiteList()\n+      .addRegexp(\"org.infinispan.example.*\");", "originalCommit": "2f04ceea1325c14b424ec2fda745599fe9f73a57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d2d6f191095963bf2cd441b10eb59f7762939b6", "chunk": "diff --git a/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java b/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\nindex b321cb4f09..178b249422 100644\n--- a/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\n+++ b/documentation/src/main/asciidoc/topics/code_examples/CustomMarshaller.java\n\n@@ -1,4 +1,4 @@\n GlobalConfigurationBuilder builder = new GlobalConfigurationBuilder();\n builder.serialization()\n-      .marshaller(new org.infinispan.example.marshall.CustomMarshaller()).whiteList()\n-      .addRegexp(\"org.infinispan.example.*\");\n+      .marshaller(new org.infinispan.example.marshall.CustomMarshaller())\n+      .whiteList().addRegexp(\"org.infinispan.example.*\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MDcxOA==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401590718", "bodyText": "too many spaces?", "author": "pruivo", "createdAt": "2020-04-01T12:52:56Z", "path": "documentation/src/main/asciidoc/topics/code_examples/EncoderScrambler.java", "diffHunk": "@@ -1,15 +1,24 @@\n-public class Scrambler implements Encoder {\n+class Scrambler implements Encoder {\n \n-   Object toStorage(Object content) {\n-      // Encrypt data\n-   }\n+        public Object toStorage(Object content) {", "originalCommit": "2f04ceea1325c14b424ec2fda745599fe9f73a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTE1OQ==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401629159", "bodyText": "fixed. thanks @pruivo", "author": "oraNod", "createdAt": "2020-04-01T13:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MDcxOA=="}], "type": "inlineReview", "revised_code": {"commit": "7d2d6f191095963bf2cd441b10eb59f7762939b6", "chunk": "diff --git a/documentation/src/main/asciidoc/topics/code_examples/EncoderScrambler.java b/documentation/src/main/asciidoc/topics/code_examples/EncoderScrambler.java\nindex 6483b06207..81d8dca1f2 100644\n--- a/documentation/src/main/asciidoc/topics/code_examples/EncoderScrambler.java\n+++ b/documentation/src/main/asciidoc/topics/code_examples/EncoderScrambler.java\n\n@@ -1,24 +1,24 @@\n class Scrambler implements Encoder {\n \n-        public Object toStorage(Object content) {\n-            // Encrypt data\n-        }\n+   public Object toStorage(Object content) {\n+   // Encrypt data\n+   }\n \n-        public Object fromStorage(Object content) {\n-            // Decrypt data\n-        }\n+   public Object fromStorage(Object content) {\n+   // Decrypt data\n+   }\n \n-         @Override\n-         public boolean isStorageFormatFilterable() {\n+   @Override\n+   public boolean isStorageFormatFilterable() {\n \n-         }\n+   }\n \n-         public MediaType getStorageFormat() {\n-            return new MediaType(\"application\", \"scrambled\");\n-        }\n+   public MediaType getStorageFormat() {\n+   return new MediaType(\"application\", \"scrambled\");\n+   }\n \n-         @Override\n-         public short id() {\n-             //return id\n-         }\n-     }\n+   @Override\n+   public short id() {\n+   //return id\n+   }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5NDM3NQ==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401594375", "bodyText": "I would have added the 3 missing methods and kept the name.\nCompletableFuture<Optional<CacheEntry<K, Collection<V>>>> getEntry(K key);\nCompletableFuture<Void> remove(Predicate<? super V> p);\nCompletableFuture<Void> remove(SerializablePredicate<? super V> p);", "author": "pruivo", "createdAt": "2020-04-01T12:58:23Z", "path": "documentation/src/main/asciidoc/topics/code_examples/MultiMapCache.java", "diffHunk": "@@ -1,4 +1,4 @@\n-public interface MultimapCache<K, V> {\n+public interface BasicMultimapCache<K, V> {", "originalCommit": "2f04ceea1325c14b424ec2fda745599fe9f73a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyODk4Nw==", "url": "https://github.com/infinispan/infinispan/pull/8140#discussion_r401628987", "bodyText": "@pruivo CompletableFuture<Void> remove(Predicate<? super V> p); is already there but I've added the other two and reverted the name change.", "author": "oraNod", "createdAt": "2020-04-01T13:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5NDM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7d2d6f191095963bf2cd441b10eb59f7762939b6", "chunk": "diff --git a/documentation/src/main/asciidoc/topics/code_examples/MultiMapCache.java b/documentation/src/main/asciidoc/topics/code_examples/MultiMapCache.java\nindex 9eb3e1758f..07ec97802e 100644\n--- a/documentation/src/main/asciidoc/topics/code_examples/MultiMapCache.java\n+++ b/documentation/src/main/asciidoc/topics/code_examples/MultiMapCache.java\n\n@@ -1,4 +1,8 @@\n-public interface BasicMultimapCache<K, V> {\n+public interface MultimapCache<K, V> {\n+\n+   CompletableFuture<Optional<CacheEntry<K, Collection<V>>>> getEntry(K key);\n+\n+   CompletableFuture<Void> remove(SerializablePredicate<? super V> p);\n \n    CompletableFuture<Void> put(K key, V value);\n \n"}}, {"oid": "7d2d6f191095963bf2cd441b10eb59f7762939b6", "url": "https://github.com/infinispan/infinispan/commit/7d2d6f191095963bf2cd441b10eb59f7762939b6", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T13:49:35Z", "type": "forcePushed"}, {"oid": "d431d0712dfabf49aa1555f2c187a56fc719e0a6", "url": "https://github.com/infinispan/infinispan/commit/d431d0712dfabf49aa1555f2c187a56fc719e0a6", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T15:05:32Z", "type": "commit"}, {"oid": "d431d0712dfabf49aa1555f2c187a56fc719e0a6", "url": "https://github.com/infinispan/infinispan/commit/d431d0712dfabf49aa1555f2c187a56fc719e0a6", "message": "ISPN-11576 doc fixes for dev guide content", "committedDate": "2020-04-01T15:05:32Z", "type": "forcePushed"}, {"oid": "cbcbc72cb4d67ff532ad59a70d41d0cb094a8fe8", "url": "https://github.com/infinispan/infinispan/commit/cbcbc72cb4d67ff532ad59a70d41d0cb094a8fe8", "message": "ISPN-11579 pruivo fixes functional_api.adoc", "committedDate": "2020-04-01T15:18:02Z", "type": "forcePushed"}, {"oid": "c3dabc72e76df1e3b62a6878e731d9ba3435ad80", "url": "https://github.com/infinispan/infinispan/commit/c3dabc72e76df1e3b62a6878e731d9ba3435ad80", "message": "ISPN-11579 pruivo fixes functional_api.adoc", "committedDate": "2020-04-01T16:00:25Z", "type": "forcePushed"}, {"oid": "67108a565e3cf56bc39d48a9d143630b4ae4a685", "url": "https://github.com/infinispan/infinispan/commit/67108a565e3cf56bc39d48a9d143630b4ae4a685", "message": "ISPN-11579 pruivo fixes functional_api.adoc", "committedDate": "2020-04-01T16:43:14Z", "type": "commit"}, {"oid": "67108a565e3cf56bc39d48a9d143630b4ae4a685", "url": "https://github.com/infinispan/infinispan/commit/67108a565e3cf56bc39d48a9d143630b4ae4a685", "message": "ISPN-11579 pruivo fixes functional_api.adoc", "committedDate": "2020-04-01T16:43:14Z", "type": "forcePushed"}]}