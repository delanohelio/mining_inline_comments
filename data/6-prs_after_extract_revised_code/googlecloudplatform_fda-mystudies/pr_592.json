{"pr_number": 592, "pr_title": "introspectToken, revokeToken endpoints with integration tests", "pr_createdAt": "2020-07-04T05:31:46Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592", "timeline": [{"oid": "f633ee7ba713c38cd8692490120503ec36bf4752", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f633ee7ba713c38cd8692490120503ec36bf4752", "message": "Implemented Fallback Option for audit log and introspectToken, revokeToken endpoint\n\nImplemented Fallback Option for audit log and introspectToken, revokeToken endpoints with integration tests", "committedDate": "2020-07-04T05:29:13Z", "type": "commit"}, {"oid": "04cf30e625352eb3aedba0d7e1feb0ce7a66eff4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/04cf30e625352eb3aedba0d7e1feb0ce7a66eff4", "message": "Added bad request tests for revoke token and introspect token endpoints\n\nAdded bad request tests for revoke token and introspect token endpoints", "committedDate": "2020-07-06T11:08:15Z", "type": "commit"}, {"oid": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "message": "Removed audit log event fallback implementation and test method\n\nRemoved audit log event fallback implementation and test method", "committedDate": "2020-07-28T05:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0MzYyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461643622", "bodyText": "does this need to go into a common location?\nI feel like you already extracted this code in another PR.", "author": "zohrehj", "createdAt": "2020-07-28T14:50:25Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/OAuthServiceImpl.java", "diffHunk": "@@ -71,6 +72,14 @@\n   @Value(\"${security.oauth2.token_endpoint:}\")\n   private String tokenEndpoint;\n \n+  private String encodedAuthorization;\n+\n+  @PostConstruct\n+  public void init() {\n+    String credentials = clientId + \":\" + clientSecret;\n+    encodedAuthorization = \"Basic \" + Base64.getEncoder().encodeToString(credentials.getBytes());", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NzE0MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461647141", "bodyText": "why change the format here and not in any of the other strings?", "author": "zohrehj", "createdAt": "2020-07-28T14:54:48Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimConstants.java", "diffHunk": "@@ -35,7 +35,7 @@ private AuthScimConstants() {}\n   public static final String AUTHORIZATION_CODE = \"authorization_code\";\n \n   /** to revoke previous session tokens. */\n-  public static final String USER_ID = \"user_id\";\n+  public static final String USER_ID = \"userId\";", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3MjM3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461672370", "bodyText": "thanks for adding this, please use an issue number to track remaining work instead of your name.\nThis way we would have an external representation of the tech debt that we need to address.", "author": "zohrehj", "createdAt": "2020-07-28T15:28:21Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfigDevProfile.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.config;\n+\n+import com.google.cloud.healthcare.fdamystudies.config.BaseAppConfig;\n+import java.security.KeyManagementException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.X509Certificate;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.springframework.boot.web.client.RestTemplateBuilder;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n+import org.springframework.web.client.RestTemplate;\n+\n+@Configuration\n+@Profile({\"dev\", \"local\", \"e2e-test\", \"test\", \"qa\", \"mockit\"})\n+public class AppConfigDevProfile extends BaseAppConfig {\n+\n+  @Bean\n+  public RestTemplate restTemplate(RestTemplateBuilder builder)\n+      throws NoSuchAlgorithmException, KeyManagementException {\n+    // TODO (Dhanya) Temporary fix for", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea04ca7ab2d1571285407b61627ea38390bde698", "chunk": "diff --git a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfigDevProfile.java b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfigDevProfile.java\nindex 60720e981..019618ec9 100644\n--- a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfigDevProfile.java\n+++ b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/config/AppConfigDevProfile.java\n\n@@ -8,7 +8,7 @@\n \n package com.google.cloud.healthcare.fdamystudies.oauthscim.config;\n \n-import com.google.cloud.healthcare.fdamystudies.config.BaseAppConfig;\n+import com.google.cloud.healthcare.fdamystudies.config.CommonModuleConfiguration;\n import java.security.KeyManagementException;\n import java.security.NoSuchAlgorithmException;\n import java.security.cert.X509Certificate;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NjA3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461676070", "bodyText": "nit: I get what you are trying to do here, but this is not the right approach.\nThe best way to make logs abstract and consistent is to wrap the logger and add additional fields there. These log constants are actually polluting the controller and distracting from the main functionality of the class which is controller logic.\nPlease either move them to a logger util or revert back to duplicated strings for now.", "author": "zohrehj", "createdAt": "2020-07-28T15:33:39Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthController.java", "diffHunk": "@@ -43,6 +44,12 @@\n @RequestMapping(\"/v1\")\n public class OAuthController {\n \n+  private static final String STATUS_400_AND_ERRORS_LOG = \"status=400 and errors=%s\";\n+\n+  private static final String STATUS_D_LOG = \"status=%d\";\n+\n+  private static final String BEGIN_REQUEST_LOG = \"begin %s request\";\n+", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5Nzk1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461697952", "bodyText": "you are introducing yet another dependency between tests by using a value created in the previous test here.", "author": "zohrehj", "createdAt": "2020-07-28T16:04:44Z", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -177,26 +188,124 @@ public void shouldReturnRefreshTokenForAuthorizationCodeGrant() throws Exception\n   }\n \n   @Test\n+  @Order(6)\n   public void shouldReturnNewTokensForRefreshTokenGrant() throws Exception {\n-    HttpHeaders headers = new HttpHeaders();\n-    headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\n-    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\n+    HttpHeaders headers = getCommonHeaders();\n \n     MultiValueMap<String, String> requestParams = new LinkedMultiValueMap<>();\n     requestParams.add(GRANT_TYPE, REFRESH_TOKEN);\n     requestParams.add(REDIRECT_URI, redirectUri);\n     requestParams.add(REFRESH_TOKEN, UUID.randomUUID().toString());\n     requestParams.add(CLIENT_ID, clientId);\n \n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                post(ApiEndpoint.TOKEN.getPath())\n+                    .contextPath(getContextPath())\n+                    .params(requestParams)\n+                    .headers(headers))\n+            .andDo(print())\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.access_token\").isNotEmpty())\n+            .andExpect(jsonPath(\"$.refresh_token\").isNotEmpty())\n+            .andReturn();\n+\n+    accessToken = JsonPath.read(result.getResponse().getContentAsString(), \"$.access_token\");\n+  }\n+\n+  @Test\n+  @Order(7)\n+  public void shouldReturnTokenIsActive() throws Exception {\n+    HttpHeaders headers = getCommonHeaders();\n+    headers.set(\"Authorization\", \"Bearer \" + accessToken);", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5ODI2Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/592#discussion_r461698262", "bodyText": "Ideally tests should not have a fixed order of execution.", "author": "zohrehj", "createdAt": "2020-07-28T16:05:07Z", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/OAuthControllerTest.java", "diffHunk": "@@ -177,26 +188,124 @@ public void shouldReturnRefreshTokenForAuthorizationCodeGrant() throws Exception\n   }\n \n   @Test\n+  @Order(6)\n   public void shouldReturnNewTokensForRefreshTokenGrant() throws Exception {\n-    HttpHeaders headers = new HttpHeaders();\n-    headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\n-    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\n+    HttpHeaders headers = getCommonHeaders();\n \n     MultiValueMap<String, String> requestParams = new LinkedMultiValueMap<>();\n     requestParams.add(GRANT_TYPE, REFRESH_TOKEN);\n     requestParams.add(REDIRECT_URI, redirectUri);\n     requestParams.add(REFRESH_TOKEN, UUID.randomUUID().toString());\n     requestParams.add(CLIENT_ID, clientId);\n \n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                post(ApiEndpoint.TOKEN.getPath())\n+                    .contextPath(getContextPath())\n+                    .params(requestParams)\n+                    .headers(headers))\n+            .andDo(print())\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.access_token\").isNotEmpty())\n+            .andExpect(jsonPath(\"$.refresh_token\").isNotEmpty())\n+            .andReturn();\n+\n+    accessToken = JsonPath.read(result.getResponse().getContentAsString(), \"$.access_token\");\n+  }\n+\n+  @Test\n+  @Order(7)", "originalCommit": "f2dce7fdebcfa8258c2d69365b91e6398c8dd532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "356b4657abd7edf3492b4645c73aab2771e0a138", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/356b4657abd7edf3492b4645c73aab2771e0a138", "message": "Merge branch 'develop' into fallback_password_reset_auditlog_events", "committedDate": "2020-07-31T15:07:50Z", "type": "commit"}, {"oid": "ea04ca7ab2d1571285407b61627ea38390bde698", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ea04ca7ab2d1571285407b61627ea38390bde698", "message": "Resolved conflicts\n\nResolved conflicts", "committedDate": "2020-07-31T15:08:08Z", "type": "commit"}, {"oid": "d02beed19e9216af23e16a788bba0b6011b0bfb6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d02beed19e9216af23e16a788bba0b6011b0bfb6", "message": "Merge branch 'develop' into fallback_password_reset_auditlog_events", "committedDate": "2020-07-31T15:10:07Z", "type": "commit"}]}