{"pr_number": 1394, "pr_title": "Android QA bug fixes", "pr_createdAt": "2020-10-14T17:49:04Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394", "timeline": [{"oid": "95cbd5dd2dc277a294b724829a56801d977d723a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/95cbd5dd2dc277a294b724829a56801d977d723a", "message": "bug fixes #1287 and #1285", "committedDate": "2020-10-14T17:43:54Z", "type": "commit"}, {"oid": "ad593b692701fac6a36663d2c16fd27a701407bf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ad593b692701fac6a36663d2c16fd27a701407bf", "message": "bug fix", "committedDate": "2020-10-14T17:44:07Z", "type": "commit"}, {"oid": "e6e5098054ea37393df5ea37d3d77f0fbb0a742d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e6e5098054ea37393df5ea37d3d77f0fbb0a742d", "message": "formatting issue fix", "committedDate": "2020-10-14T17:47:14Z", "type": "commit"}, {"oid": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bf1d45ac86b6fabfd974862ec74963b5f47ba659", "message": "Added Test Cases", "committedDate": "2020-10-16T17:22:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507171766", "bodyText": "nit: name your test in a way that clarifies what is expected to happen", "author": "zohrehj", "createdAt": "2020-10-18T14:45:02Z", "path": "Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.studyappmodule;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import android.support.test.InstrumentationRegistry;\n+import com.harvard.storagemodule.DbServiceSubscriber;\n+import com.harvard.studyappmodule.surveyscheduler.SurveyScheduler;\n+import com.harvard.usermodule.webservicemodel.Studies;\n+import com.harvard.usermodule.webservicemodel.StudyData;\n+import com.harvard.utils.AppController;\n+import io.realm.Realm;\n+import io.realm.RealmList;\n+import io.realm.RealmResults;\n+import java.text.ParseException;\n+import java.util.Date;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SurveyActivitiesFragmentTest {\n+  private Realm realm;\n+  private DbServiceSubscriber dbServiceSubscriber;\n+  private static final String TEST_USER_ID = \"Test_user1234\";\n+  private static final String TEST_STUDY_ID = \"Test_Study_1221\";\n+  private static final String TEST_STATUS = \"status1\";\n+  private static final String TEST_SITE_ID = \"Test_site62132\";\n+  private static final String TEST_ENROLLMENTDATE = \"2020-10-08T12:10:00.000+0000\";\n+  private static final boolean TEST_BOOKMARKED = false;\n+  private static final String TEST_PARTICIPANT_ID = \"Test_Participtaant12345\";\n+  private static final int TEST_COMPLETION = 1;\n+  private static final int TEST_ADHERENCE = 2;\n+  private static final String TEST_VERSION = \"2.0\";\n+  private static final String TEST_HASHED_TOKEN = \"Test_hashed_token132166\";\n+  private static final String TEST_USERID_KEY = \"userId\";\n+  private static final String TEST_STUDYID_KEY = \"studyId\";\n+  private static final String TEST_USERID_VALUE = \"Test_user1234\";\n+  private static final String TEST_STUDYID_VALUE = \"Test_Study_1221\";\n+  private static final int TEST_POSITION = 1;\n+\n+  @Before\n+  public void setUp() {\n+    realm = AppController.getRealmobj(InstrumentationRegistry.getTargetContext());\n+    dbServiceSubscriber = new DbServiceSubscriber();\n+  }\n+\n+  @Test\n+  public void getJoinDate() {", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDI0Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050242", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\nindex b3fe0e814..8501c3615 100644\n--- a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\n\n@@ -8,8 +8,10 @@\n \n package com.harvard.studyappmodule;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n \n import android.support.test.InstrumentationRegistry;\n import com.harvard.storagemodule.DbServiceSubscriber;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTg5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507171892", "bodyText": "Do not catch exceptions in tests, instead fail the test with a descriptive message", "author": "zohrehj", "createdAt": "2020-10-18T14:46:08Z", "path": "Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.studyappmodule;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import android.support.test.InstrumentationRegistry;\n+import com.harvard.storagemodule.DbServiceSubscriber;\n+import com.harvard.studyappmodule.surveyscheduler.SurveyScheduler;\n+import com.harvard.usermodule.webservicemodel.Studies;\n+import com.harvard.usermodule.webservicemodel.StudyData;\n+import com.harvard.utils.AppController;\n+import io.realm.Realm;\n+import io.realm.RealmList;\n+import io.realm.RealmResults;\n+import java.text.ParseException;\n+import java.util.Date;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SurveyActivitiesFragmentTest {\n+  private Realm realm;\n+  private DbServiceSubscriber dbServiceSubscriber;\n+  private static final String TEST_USER_ID = \"Test_user1234\";\n+  private static final String TEST_STUDY_ID = \"Test_Study_1221\";\n+  private static final String TEST_STATUS = \"status1\";\n+  private static final String TEST_SITE_ID = \"Test_site62132\";\n+  private static final String TEST_ENROLLMENTDATE = \"2020-10-08T12:10:00.000+0000\";\n+  private static final boolean TEST_BOOKMARKED = false;\n+  private static final String TEST_PARTICIPANT_ID = \"Test_Participtaant12345\";\n+  private static final int TEST_COMPLETION = 1;\n+  private static final int TEST_ADHERENCE = 2;\n+  private static final String TEST_VERSION = \"2.0\";\n+  private static final String TEST_HASHED_TOKEN = \"Test_hashed_token132166\";\n+  private static final String TEST_USERID_KEY = \"userId\";\n+  private static final String TEST_STUDYID_KEY = \"studyId\";\n+  private static final String TEST_USERID_VALUE = \"Test_user1234\";\n+  private static final String TEST_STUDYID_VALUE = \"Test_Study_1221\";\n+  private static final int TEST_POSITION = 1;\n+\n+  @Before\n+  public void setUp() {\n+    realm = AppController.getRealmobj(InstrumentationRegistry.getTargetContext());\n+    dbServiceSubscriber = new DbServiceSubscriber();\n+  }\n+\n+  @Test\n+  public void getJoinDate() {\n+    Date testDate = null;\n+    realm.beginTransaction();\n+    realm.copyToRealmOrUpdate(getStudyData());\n+    realm.commitTransaction();\n+    SurveyScheduler survayScheduler = new SurveyScheduler(dbServiceSubscriber, realm);\n+    RealmResults<StudyData> studyPreferences =\n+        realm.where(StudyData.class).equalTo(TEST_USERID_KEY, TEST_USERID_VALUE).findAll();\n+    Date joiningDate =\n+        survayScheduler.getJoiningDateOfStudy(\n+            studyPreferences.get(studyPreferences.size() - 1), TEST_STUDY_ID);\n+    try {\n+      testDate = AppController.getDateFormatForApi().parse(TEST_ENROLLMENTDATE);\n+    } catch (ParseException e) {\n+      e.printStackTrace();", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDQwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050405", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:24:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\nindex b3fe0e814..8501c3615 100644\n--- a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesFragmentTest.java\n\n@@ -8,8 +8,10 @@\n \n package com.harvard.studyappmodule;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n \n import android.support.test.InstrumentationRegistry;\n import com.harvard.storagemodule.DbServiceSubscriber;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjIxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507172216", "bodyText": "Can you name this as what it is? rather than what it is not?", "author": "zohrehj", "createdAt": "2020-10-18T14:49:01Z", "path": "Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.studyappmodule;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import android.support.test.InstrumentationRegistry;\n+import com.harvard.storagemodule.DbServiceSubscriber;\n+import com.harvard.studyappmodule.activitylistmodel.ActivitiesWS;\n+import com.harvard.studyappmodule.activitylistmodel.AnchorRuns;\n+import com.harvard.studyappmodule.activitylistmodel.Frequency;\n+import com.harvard.studyappmodule.activitylistmodel.FrequencyRuns;\n+import com.harvard.studyappmodule.activitylistmodel.SchedulingAnchorDate;\n+import com.harvard.studyappmodule.activitylistmodel.SchedulingAnchorDateEnd;\n+import com.harvard.utils.AppController;\n+import io.realm.RealmList;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import org.junit.Test;\n+\n+public class SurveyActivitiesListAdapterTest {\n+  private static final String TEST_FETALKICK = \"FETALKICK_TEST\";\n+  private static final String TEST_END_TIME = \"12:11:59\";\n+  private static final String TEST_START_TIME = \"12:10:00\";\n+  private static final String TEST_TIME = \"19:44:00\";\n+  private static final String TEST_FREQUENCY_TYPE = \"Daily\";\n+  private static final String TEST_ACTIVITY_VERSION = \"1.0\";\n+  private static final String TEST_ACTIVITYESWS_START_TIME = \"2020-10-09T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_JOIN_TIME = \"2020-10-08T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_END_TIME = \"2020-10-12T23:59:59.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_TYPE = \"task\";\n+  private static final String TEST_STATE = \"active\";\n+  private static final String TEST_SCHEDULE_TYPE = \"AnchorDate\";\n+  private static final String TEST_BLANK = \"\";\n+  private static final String TEST_SOURCE_TYPE = \"EnrollmentDate\";\n+  private static final int TEST_ANCHOR_DAYS = 2;\n+  private static final int TEST_REPEAT_NTERVAL = 4;\n+  private static final int TEST_START_DAYS = 10;\n+  private static final int TEST_END_DAYS = 1;\n+  private static final boolean TEST_BRANCHING = false;\n+  private static final int TEST_POSITION = 0;\n+  private static final String TEST_REGEX = \"\\\\.\";\n+  private static final String TEST_RESULT_ONE = \"05:40PM, Oct 09, 2020 to 11:59PM, Oct 12, 2020\";\n+  private static final String TEST_RESULT_TWO = \"12:10PM, Oct 09, 2020 to 11:59PM, Oct 12, 2020\";\n+  private static final String TEST_RESULT_THREE = \"From : 12:10PM, Oct 09, 2020\";\n+\n+  @Test\n+  public void getDatesAdapterTest() {\n+    ArrayList<ActivitiesWS> activitiesws = new ArrayList<>();\n+    Date startDate = null;\n+    Date endDate = null;\n+    Date joiningdate = null;\n+    activitiesws.add(getactivitieswsdata());\n+    SimpleDateFormat simpleDateFormat5 = AppController.getDateFormatUtcNoZone();\n+    try {\n+      startDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_START_TIME.split(TEST_REGEX)[0]);\n+      endDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_END_TIME.split(TEST_REGEX)[0]);\n+      joiningdate = AppController.getDateFormatForApi().parse(TEST_ACTIVITYESWS_JOIN_TIME);\n+    } catch (ParseException e) {\n+      e.printStackTrace();\n+    }\n+    SurveyActivitiesListAdapter surveyActivitiesListAdapter =\n+        new SurveyActivitiesListAdapter(null, null, null, null, null, false, null);\n+    String anchorDate =\n+        surveyActivitiesListAdapter.getDates(\n+            activitiesws,\n+            endDate,\n+            TEST_POSITION,\n+            joiningdate,\n+            startDate,\n+            InstrumentationRegistry.getTargetContext());\n+    assertThat(anchorDate, equalTo(TEST_RESULT_ONE));\n+    String notAnchorDate =", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDU0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050546", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjIxNg=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\nindex e78b6be32..e829ccfaa 100644\n--- a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\n\n@@ -8,6 +8,7 @@\n \n package com.harvard.studyappmodule;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjIyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507172223", "bodyText": "same here", "author": "zohrehj", "createdAt": "2020-10-18T14:49:08Z", "path": "Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.studyappmodule;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import android.support.test.InstrumentationRegistry;\n+import com.harvard.storagemodule.DbServiceSubscriber;\n+import com.harvard.studyappmodule.activitylistmodel.ActivitiesWS;\n+import com.harvard.studyappmodule.activitylistmodel.AnchorRuns;\n+import com.harvard.studyappmodule.activitylistmodel.Frequency;\n+import com.harvard.studyappmodule.activitylistmodel.FrequencyRuns;\n+import com.harvard.studyappmodule.activitylistmodel.SchedulingAnchorDate;\n+import com.harvard.studyappmodule.activitylistmodel.SchedulingAnchorDateEnd;\n+import com.harvard.utils.AppController;\n+import io.realm.RealmList;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import org.junit.Test;\n+\n+public class SurveyActivitiesListAdapterTest {\n+  private static final String TEST_FETALKICK = \"FETALKICK_TEST\";\n+  private static final String TEST_END_TIME = \"12:11:59\";\n+  private static final String TEST_START_TIME = \"12:10:00\";\n+  private static final String TEST_TIME = \"19:44:00\";\n+  private static final String TEST_FREQUENCY_TYPE = \"Daily\";\n+  private static final String TEST_ACTIVITY_VERSION = \"1.0\";\n+  private static final String TEST_ACTIVITYESWS_START_TIME = \"2020-10-09T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_JOIN_TIME = \"2020-10-08T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_END_TIME = \"2020-10-12T23:59:59.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_TYPE = \"task\";\n+  private static final String TEST_STATE = \"active\";\n+  private static final String TEST_SCHEDULE_TYPE = \"AnchorDate\";\n+  private static final String TEST_BLANK = \"\";\n+  private static final String TEST_SOURCE_TYPE = \"EnrollmentDate\";\n+  private static final int TEST_ANCHOR_DAYS = 2;\n+  private static final int TEST_REPEAT_NTERVAL = 4;\n+  private static final int TEST_START_DAYS = 10;\n+  private static final int TEST_END_DAYS = 1;\n+  private static final boolean TEST_BRANCHING = false;\n+  private static final int TEST_POSITION = 0;\n+  private static final String TEST_REGEX = \"\\\\.\";\n+  private static final String TEST_RESULT_ONE = \"05:40PM, Oct 09, 2020 to 11:59PM, Oct 12, 2020\";\n+  private static final String TEST_RESULT_TWO = \"12:10PM, Oct 09, 2020 to 11:59PM, Oct 12, 2020\";\n+  private static final String TEST_RESULT_THREE = \"From : 12:10PM, Oct 09, 2020\";\n+\n+  @Test\n+  public void getDatesAdapterTest() {\n+    ArrayList<ActivitiesWS> activitiesws = new ArrayList<>();\n+    Date startDate = null;\n+    Date endDate = null;\n+    Date joiningdate = null;\n+    activitiesws.add(getactivitieswsdata());\n+    SimpleDateFormat simpleDateFormat5 = AppController.getDateFormatUtcNoZone();\n+    try {\n+      startDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_START_TIME.split(TEST_REGEX)[0]);\n+      endDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_END_TIME.split(TEST_REGEX)[0]);\n+      joiningdate = AppController.getDateFormatForApi().parse(TEST_ACTIVITYESWS_JOIN_TIME);\n+    } catch (ParseException e) {\n+      e.printStackTrace();\n+    }\n+    SurveyActivitiesListAdapter surveyActivitiesListAdapter =\n+        new SurveyActivitiesListAdapter(null, null, null, null, null, false, null);\n+    String anchorDate =\n+        surveyActivitiesListAdapter.getDates(\n+            activitiesws,\n+            endDate,\n+            TEST_POSITION,\n+            joiningdate,\n+            startDate,\n+            InstrumentationRegistry.getTargetContext());\n+    assertThat(anchorDate, equalTo(TEST_RESULT_ONE));\n+    String notAnchorDate =\n+        surveyActivitiesListAdapter.getDates(\n+            activitiesws,\n+            endDate,\n+            TEST_POSITION,\n+            startDate,\n+            joiningdate,\n+            InstrumentationRegistry.getTargetContext());\n+    assertThat(notAnchorDate, equalTo(TEST_RESULT_TWO));\n+    String notEndDate =", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDY5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050691", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjIyMw=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\nindex e78b6be32..e829ccfaa 100644\n--- a/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/studyappmodule/SurveyActivitiesListAdapterTest.java\n\n@@ -8,6 +8,7 @@\n \n package com.harvard.studyappmodule;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjQxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507172417", "bodyText": "nit: what is within range? please use more descriptive names", "author": "zohrehj", "createdAt": "2020-10-18T14:50:37Z", "path": "Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.utils;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import org.junit.Test;\n+\n+public class AppControllerTest {\n+  private static final String TEST_ACTIVITYESWS_START_TIME = \"2020-10-08T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_END_TIME = \"2020-10-12T23:59:59.000+0000\";\n+  private static final String TEST_REGEX = \"\\\\.\";\n+  private static final boolean TEST_TRUE = true;\n+  private static final boolean TEST_FALSE = false;\n+\n+  @Test\n+  public void isWithinRangeTest() {", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDgwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050809", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjQxNw=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java b/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\nindex 8b4daaf9a..774c7026c 100644\n--- a/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\n\n@@ -8,6 +8,7 @@\n \n package com.harvard.utils;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjU2Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507172563", "bodyText": "similar to the one above, please do not catch exceptions in test, instead fail with descriptive failure message.", "author": "zohrehj", "createdAt": "2020-10-18T14:51:43Z", "path": "Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.harvard.utils;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import org.junit.Test;\n+\n+public class AppControllerTest {\n+  private static final String TEST_ACTIVITYESWS_START_TIME = \"2020-10-08T12:10:00.000+0000\";\n+  private static final String TEST_ACTIVITYESWS_END_TIME = \"2020-10-12T23:59:59.000+0000\";\n+  private static final String TEST_REGEX = \"\\\\.\";\n+  private static final boolean TEST_TRUE = true;\n+  private static final boolean TEST_FALSE = false;\n+\n+  @Test\n+  public void isWithinRangeTest() {\n+    SimpleDateFormat simpleDateFormat5 = AppController.getDateFormatUtcNoZone();\n+    Date startDate = null;\n+    Date endDate = null;\n+    try {\n+      startDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_START_TIME.split(TEST_REGEX)[0]);\n+      endDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_END_TIME.split(TEST_REGEX)[0]);\n+    } catch (ParseException e) {\n+      e.printStackTrace();\n+    }\n+    boolean isWithRange = AppController.isWithinRange(startDate, endDate);\n+    assertThat(isWithRange, equalTo(TEST_FALSE));\n+    boolean notEndDate = AppController.isWithinRange(startDate, null);\n+    assertThat(notEndDate, equalTo(TEST_TRUE));\n+  }\n+\n+  @Test\n+  public void checkafterTest() {\n+    SimpleDateFormat simpleDateFormat5 = AppController.getDateFormatUtcNoZone();\n+    Date startDate = null;\n+    try {\n+      startDate = simpleDateFormat5.parse(TEST_ACTIVITYESWS_START_TIME.split(TEST_REGEX)[0]);\n+    } catch (ParseException e) {\n+      e.printStackTrace();", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MDkzNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510050934", "bodyText": "Updated in latest commit", "author": "bhushanboston", "createdAt": "2020-10-22T10:25:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjU2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java b/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\nindex 8b4daaf9a..774c7026c 100644\n--- a/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\n+++ b/Android/app/src/androidTest/java/com/harvard/utils/AppControllerTest.java\n\n@@ -8,6 +8,7 @@\n \n package com.harvard.utils;\n \n+import static junit.framework.TestCase.fail;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzE1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507173158", "bodyText": "remove commented code", "author": "zohrehj", "createdAt": "2020-10-18T14:56:37Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java", "diffHunk": "@@ -1719,7 +1746,10 @@ public void clicked(int positon) {\n         ActivityData activityData =\n             dbServiceSubscriber.getActivityPreference(\n                 ((SurveyActivity) context).getStudyId(), realm);\n-        Date joiningDate = new Date();\n+        //        Date joiningDate = new Date();", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MTQwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510051401", "bodyText": "Removed comment", "author": "bhushanboston", "createdAt": "2020-10-22T10:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzE1OA=="}], "type": "inlineReview", "revised_code": {"commit": "37b2f4a29b56cddf57aa4605aebd5eb490db82ee", "chunk": "diff --git a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java\nindex b722eed3d..4ea306e46 100644\n--- a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java\n+++ b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java\n\n@@ -1746,7 +1746,6 @@ public class SurveyActivitiesFragment extends Fragment\n         ActivityData activityData =\n             dbServiceSubscriber.getActivityPreference(\n                 ((SurveyActivity) context).getStudyId(), realm);\n-        //        Date joiningDate = new Date();\n         Date joiningDate =\n             survayScheduler.getJoiningDateOfStudy(\n                 studyPreferences, ((SurveyActivity) context).getStudyId());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzMwNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507173306", "bodyText": "shouldn't this be done for all attributes?\nif yes, then it would be better to make it into a generic activity update.", "author": "zohrehj", "createdAt": "2020-10-18T14:57:44Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesFragment.java", "diffHunk": "@@ -1655,6 +1664,24 @@ public void clicked(int positon) {\n                   .getActivityId()\n                   .equalsIgnoreCase(activityListDataDB.getActivities().get(i).getActivityId())) {\n                 activityAvailable = true;\n+                if (activityListDataDB.getActivities().get(i).getStartTime().equalsIgnoreCase(\"\")\n+                    && !activityListData\n+                        .getActivities()\n+                        .get(j)\n+                        .getStartTime()\n+                        .equalsIgnoreCase(\"\")) {\n+                  dbServiceSubscriber.saveActivityStartTime(\n+                      activityListDataDB.getActivities().get(i),\n+                      realm,\n+                      activityListData.getActivities().get(j).getStartTime());\n+                }", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1NDc5NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510054795", "bodyText": "This update is required only for the activity start time.", "author": "rohitn-boston", "createdAt": "2020-10-22T10:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzMwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDQxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507174411", "bodyText": "nit: your method seems to be returning a date range, so getDateRange might be a better name.", "author": "zohrehj", "createdAt": "2020-10-18T15:06:59Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java", "diffHunk": "@@ -728,4 +726,49 @@ private int checkCurrentTimeInBetweenDates(String date1, String date2, int i) {\n     }\n     return pos;\n   }\n+\n+  public String getDates(", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA1MjI5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510052294", "bodyText": "Changed to getDateRange", "author": "bhushanboston", "createdAt": "2020-10-22T10:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\nindex b54fb4cbc..5b093d51a 100644\n--- a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\n+++ b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\n\n@@ -727,7 +727,7 @@ public class SurveyActivitiesListAdapter\n     return pos;\n   }\n \n-  public String getDates(\n+  public String getDateRange(\n       ArrayList<ActivitiesWS> items,\n       Date endDate,\n       int position,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDg4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r507174881", "bodyText": "why not just use joiningCalendar?", "author": "zohrehj", "createdAt": "2020-10-18T15:10:43Z", "path": "Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java", "diffHunk": "@@ -728,4 +726,49 @@ private int checkCurrentTimeInBetweenDates(String date1, String date2, int i) {\n     }\n     return pos;\n   }\n+\n+  public String getDates(\n+      ArrayList<ActivitiesWS> items,\n+      Date endDate,\n+      int position,\n+      Date startDate,\n+      Date joiningDate,\n+      Context context) {\n+    SimpleDateFormat simpleDateFormatForOtherFreq = AppController.getDateFormatForOtherFreq();\n+    String date = \"\";\n+    if (endDate != null) {\n+      if (items.get(position).getSchedulingType().equalsIgnoreCase(\"AnchorDate\")\n+          && items.get(position).getAnchorDate() != null\n+          && items.get(position).getAnchorDate().getSourceType() != null\n+          && items.get(position).getAnchorDate().getSourceType().equalsIgnoreCase(\"EnrollmentDate\")\n+          && items.get(position).getAnchorDate().getStart() == null\n+          && items.get(position).getAnchorDate().getEnd() != null\n+          && joiningDate.after(startDate)) {\n+        Calendar joiningCalendar = Calendar.getInstance();\n+        joiningCalendar.setTime(joiningDate);\n+        Calendar startCalendar = Calendar.getInstance();\n+        startCalendar.setTime(startDate);", "originalCommit": "bf1d45ac86b6fabfd974862ec74963b5f47ba659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA2MDkzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1394#discussion_r510060935", "bodyText": "We are using the day, month, year from joiningCalendar, and time is taken from startDate.", "author": "rohitn-boston", "createdAt": "2020-10-22T10:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a766456310c8d3b3bb56810c32953c39e6fa0255", "chunk": "diff --git a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\nindex b54fb4cbc..5b093d51a 100644\n--- a/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\n+++ b/Android/app/src/main/java/com/harvard/studyappmodule/SurveyActivitiesListAdapter.java\n\n@@ -727,7 +727,7 @@ public class SurveyActivitiesListAdapter\n     return pos;\n   }\n \n-  public String getDates(\n+  public String getDateRange(\n       ArrayList<ActivitiesWS> items,\n       Date endDate,\n       int position,\n"}}, {"oid": "a766456310c8d3b3bb56810c32953c39e6fa0255", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a766456310c8d3b3bb56810c32953c39e6fa0255", "message": "made naming conventions changes and added message of catch block in test cases", "committedDate": "2020-10-19T08:51:52Z", "type": "commit"}, {"oid": "37b2f4a29b56cddf57aa4605aebd5eb490db82ee", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/37b2f4a29b56cddf57aa4605aebd5eb490db82ee", "message": "Added test cases for testing total, completed and missed runs", "committedDate": "2020-10-22T10:21:31Z", "type": "commit"}]}