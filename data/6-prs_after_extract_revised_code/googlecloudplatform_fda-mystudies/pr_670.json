{"pr_number": 670, "pr_title": "Participant Manager Service: GET /apps?fields=studies,sites implementation with integration tests", "pr_createdAt": "2020-07-24T09:37:42Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670", "timeline": [{"oid": "623b6cdef16cd3a9d6f0ac1acb33f1b5d547747c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/623b6cdef16cd3a9d6f0ac1acb33f1b5d547747c", "message": "participant-manager GET /apps?fields=studies,sites\n\nparticipant-manager GET /apps?fields=studies,sites", "committedDate": "2020-07-24T09:35:43Z", "type": "commit"}, {"oid": "b87fb928e220409e03f96989eb452e9fa00dc311", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b87fb928e220409e03f96989eb452e9fa00dc311", "message": "added array length\n\nadded array length", "committedDate": "2020-07-24T09:45:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1MzU4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462053580", "bodyText": "typo", "author": "saminguyen", "createdAt": "2020-07-29T05:50:40Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -43,7 +43,9 @@\n   GET_PARTICIPANT_REGISTRY_SUCCESS(\n       HttpStatus.OK, \"MSG-0008\", \"Get participant registry successfull\"),\n \n-  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\");\n+  ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\"),\n+\n+  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfull\");", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MzM3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462263379", "bodyText": "changed to Get App Details successfully", "author": "monica-BTC", "createdAt": "2020-07-29T12:34:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1MzU4MA=="}], "type": "inlineReview", "revised_code": {"commit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\nindex e5bf26bc5..b63d777f0 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n\n@@ -45,7 +45,7 @@ public enum MessageCode {\n \n   ADD_PARTICIPANT_SUCCESS(HttpStatus.CREATED, \"MSG-0016\", \"Participant added successfully\"),\n \n-  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfull\");\n+  GET_APPS_DETAILS_SUCCESS(HttpStatus.OK, \"MSG-0018\", \"Get App Details successfully\");\n \n   private final HttpStatus httpStatus;\n   private final String code;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462056417", "bodyText": "Do you mean findByStudyIds here", "author": "saminguyen", "createdAt": "2020-07-29T05:59:20Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +33,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findBySites(@Param(\"studyIds\") List<String> studyIdList);", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MzcwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462263705", "bodyText": "Changed to findByStudyIds.", "author": "monica-BTC", "createdAt": "2020-07-29T12:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA1NjQxNw=="}], "type": "inlineReview", "revised_code": {"commit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\nindex ff9671794..111bbb31b 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\n\n@@ -35,5 +33,5 @@ public interface SiteRepository extends JpaRepository<SiteEntity, String> {\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n \n   @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n-  public List<SiteEntity> findBySites(@Param(\"studyIds\") List<String> studyIdList);\n+  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462060584", "bodyText": "Is there a reason we are using CollectionUtils here and for other places, too instead of just built in functions like !sites.isEmpty()", "author": "saminguyen", "createdAt": "2020-07-29T06:11:38Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n+    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n+    if (CollectionUtils.isNotEmpty(sites)) {", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1NjI4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462156280", "bodyText": "CollectionUtils.isNotEmpty(sites) will check for null or size 0. !sites.isEmpty() may throw NullPointerException.", "author": "monica-BTC", "createdAt": "2020-07-29T09:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMDU5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462600590", "bodyText": "Okay!", "author": "saminguyen", "createdAt": "2020-07-29T21:29:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MDU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\nindex c268cf806..a73f51149 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\n\n@@ -27,19 +22,13 @@ public class SiteMapper {\n     return response;\n   }\n \n-  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n-    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n-    if (CollectionUtils.isNotEmpty(sites)) {\n-      for (SiteEntity site : sites) {\n-        AppSiteResponse appSiteResponse = new AppSiteResponse();\n-        appSiteResponse.setSiteId(site.getId());\n-        appSiteResponse.setCustomLocationId(site.getLocation().getCustomId());\n-        appSiteResponse.setLocationDescription(site.getLocation().getDescription());\n-        appSiteResponse.setLocationId(site.getLocation().getId());\n-        appSiteResponse.setLocationName(site.getLocation().getName());\n-        siteResponseList.add(appSiteResponse);\n-      }\n-    }\n-    return siteResponseList;\n+  public static AppSiteResponse toAppSiteResponse(SiteEntity site) {\n+    AppSiteResponse appSiteResponse = new AppSiteResponse();\n+    appSiteResponse.setSiteId(site.getId());\n+    appSiteResponse.setCustomLocationId(site.getLocation().getCustomId());\n+    appSiteResponse.setLocationDescription(site.getLocation().getDescription());\n+    appSiteResponse.setLocationId(site.getLocation().getId());\n+    appSiteResponse.setLocationName(site.getLocation().getName());\n+    return appSiteResponse;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462072860", "bodyText": "Out of scope. Is the purpose here just to use a new object AppCount here to replace the Map object? Could you just change this in the general GET /apps PR instead", "author": "saminguyen", "createdAt": "2020-07-29T06:42:52Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java", "diffHunk": "@@ -26,6 +26,7 @@\n public interface UserDetailsRepository extends JpaRepository<UserDetailsEntity, String> {\n \n   @Query(\n-      \"SELECT ud.appInfo.id ,COUNT(ud.appInfo.id) FROM UserDetailsEntity ud WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n-  public Map<String, Long> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);\n+      \"SELECT ud.appInfo.id AS appId,COUNT(ud.appInfo.id) AS count FROM UserDetailsEntity ud \"\n+          + \"WHERE ud.appInfo.id in (:appIds) GROUP BY ud.appInfo.id\")\n+  public List<AppCount> findAppUsersCount(@Param(\"appIds\") List<String> usersAppsIds);", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1ODg3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462158871", "bodyText": "We have refered this 4.1. Customizing the Result of JPA Queries. Since it was already approved and also belongs to the same API I have implemented here. Please review.", "author": "monica-BTC", "createdAt": "2020-07-29T09:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMjY5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462602691", "bodyText": "That's fine, but I think in the future what you could do is just to make another commit to the older PR and request my review again, and I will approve it again. Or you could just raise this in another PR and make note for me to review it rafter I have already approved the previous GET apps PR.", "author": "saminguyen", "createdAt": "2020-07-29T21:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3Mjg2MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NTE5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462075199", "bodyText": "What if only studies is passed into fields? only sites? We should test for those cases also", "author": "saminguyen", "createdAt": "2020-07-29T06:48:19Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java", "diffHunk": "@@ -112,14 +117,69 @@ public void shouldNotReturnApp() throws Exception {\n         .andExpect(jsonPath(\"$.error_description\").value(ErrorCode.APP_NOT_FOUND.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAppsWithOptionalStudiesAndSites() throws Exception {", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2NzA1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462267053", "bodyText": "Written testcase for studies and if studies are present then only we have access to sites.", "author": "monica-BTC", "createdAt": "2020-07-29T12:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NTE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\nindex 75143df26..84ddd18a4 100644\n--- a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n+++ b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n\n@@ -147,6 +146,34 @@ public class AppControllerTest extends BaseMockIT {\n         .andExpect(jsonPath(\"$.apps[0].name\").value(appEntity.getAppName()));\n   }\n \n+  @Test\n+  public void shouldReturnAppsWithOptionalStudies() throws Exception {\n+    // Step 1: set app and study\n+    studyEntity.setAppInfo(appEntity);\n+    testDataHelper.getStudyRepository().save(studyEntity);\n+\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    String[] fields = {\"studies\"};\n+\n+    // Step 2: Call API and expect success message\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_APPS.getPath())\n+                .headers(headers)\n+                .contextPath(getContextPath())\n+                .queryParam(\"fields\", fields))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.apps\").isArray())\n+        .andExpect(jsonPath(\"$.apps\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.apps[0].studies\").isArray())\n+        .andExpect(jsonPath(\"$.apps[0].studies[0].sites\").isEmpty())\n+        .andExpect(jsonPath(\"$.apps[0].studies[0].studyName\").value(studyEntity.getName()))\n+        .andExpect(jsonPath(\"$.apps[0].customId\").value(appEntity.getAppId()))\n+        .andExpect(jsonPath(\"$.apps[0].name\").value(appEntity.getAppName()));\n+  }\n+\n   @Test\n   public void shouldReturnForbiddenForGetAppDetailsAccessDenied() throws Exception {\n     // Step 1 : set SuperAdmin to false\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjY0OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462076648", "bodyText": "what happens when a random junk string is passed into fields, shouldn't we handle that as an error", "author": "saminguyen", "createdAt": "2020-07-29T06:51:33Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -236,4 +258,57 @@ private void calculateEnrollmentPercentage(\n         .distinct()\n         .collect(Collectors.toList());\n   }\n+\n+  @Override\n+  @Transactional(readOnly = true)\n+  public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n+    logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n+        userRegAdminRepository.findByUserRegAdminId(userId);\n+\n+    if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n+      logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+      return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n+    }\n+\n+    List<AppEntity> apps =\n+        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n+    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+\n+    List<StudyEntity> studies =\n+        (List<StudyEntity>) CollectionUtils.emptyIfNull(studyRepository.findByAppIds(appIds));\n+    List<String> studyIds = studies.stream().map(StudyEntity::getId).collect(Collectors.toList());\n+\n+    List<SiteEntity> sites = siteRepository.findBySites(studyIds);\n+\n+    AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n+\n+    logger.exit(String.format(\"total apps=%d\", appResponse.getApps().size()));\n+    return appResponse;\n+  }\n+\n+  private AppResponse prepareAppResponse(\n+      List<AppEntity> apps, List<StudyEntity> studies, List<SiteEntity> sites, String[] fields) {\n+    Map<String, List<StudyEntity>> groupByAppIdStudyMap =\n+        studies.stream().collect(Collectors.groupingBy(StudyEntity::getAppId));\n+\n+    Map<String, List<SiteEntity>> groupByStudyIdSiteMap =\n+        sites.stream().collect(Collectors.groupingBy(SiteEntity::getStudyId));\n+\n+    List<AppDetails> appsList = new ArrayList<>();\n+    for (AppEntity app : apps) {\n+      AppDetails appDetails = AppMapper.toAppDetails(app);\n+      if (ArrayUtils.contains(fields, \"studies\")) {", "originalCommit": "b87fb928e220409e03f96989eb452e9fa00dc311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2Nzk2OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462267968", "bodyText": "Handled error in controller for random junk string and also written test case.", "author": "monica-BTC", "createdAt": "2020-07-29T12:42:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjY0OA=="}], "type": "inlineReview", "revised_code": {"commit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\nindex ec4a0ff27..3a6ec4d83 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n\n@@ -280,7 +278,7 @@ public class AppServiceImpl implements AppService {\n         (List<StudyEntity>) CollectionUtils.emptyIfNull(studyRepository.findByAppIds(appIds));\n     List<String> studyIds = studies.stream().map(StudyEntity::getId).collect(Collectors.toList());\n \n-    List<SiteEntity> sites = siteRepository.findBySites(studyIds);\n+    List<SiteEntity> sites = siteRepository.findByStudyIds(studyIds);\n \n     AppResponse appResponse = prepareAppResponse(apps, studies, sites, fields);\n \n"}}, {"oid": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/db25ded3576ccadcf886f985cb474b892d7b5dc8", "message": "Fixed PR comments\n\nFixed PR comments", "committedDate": "2020-07-29T12:29:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462306554", "bodyText": "Isn't this the same as using the findAll() method from JpaRepository?", "author": "nikklassen", "createdAt": "2020-07-29T13:40:47Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java", "diffHunk": "@@ -18,4 +21,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface AppRepository extends JpaRepository<AppEntity, String> {}\n+public interface AppRepository extends JpaRepository<AppEntity, String> {\n+\n+  @Query(\"SELECT ar FROM AppEntity ar\")", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3NzY5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462877694", "bodyText": "Removed findAllApps() and used findAll().", "author": "monica-BTC", "createdAt": "2020-07-30T09:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjU1NA=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java\nindex c5d1502e3..96ed4208f 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/AppRepository.java\n\n@@ -7,22 +7,14 @@\n  */\n package com.google.cloud.healthcare.fdamystudies.repository;\n \n-import java.util.List;\n-\n+import com.google.cloud.healthcare.fdamystudies.model.AppEntity;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.data.jpa.repository.JpaRepository;\n-import org.springframework.data.jpa.repository.Query;\n import org.springframework.stereotype.Repository;\n \n-import com.google.cloud.healthcare.fdamystudies.model.AppEntity;\n-\n @Repository\n @ConditionalOnProperty(\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface AppRepository extends JpaRepository<AppEntity, String> {\n-\n-  @Query(\"SELECT ar FROM AppEntity ar\")\n-  List<AppEntity> findAllApps();\n-}\n+public interface AppRepository extends JpaRepository<AppEntity, String> {}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNTMzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462315336", "bodyText": "How about using the getSites() method on the study? Hibernate already knows how to fetch the studies because you've written them with the ManyToOne, OneToMany relationships. When you call getSites() on the App it will construct the appropriate query and fetch corresponding Sites from the database. Don't worry about performance, there are many techniques built into Hibernate that can be used depending on the situation.\nI suggest this because it will eliminate a lot of the code you've written in the Service. You are essentially doing a JOIN in Java by separating out the IDs, querying on them, and then combining the results. Doing this in the database is much better and comes for \"free\" (meaning you don't have to write the code).\nHere is some more information about best practices https://thorben-janssen.com/best-practices-many-one-one-many-associations-mappings/", "author": "nikklassen", "createdAt": "2020-07-29T13:52:32Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java", "diffHunk": "@@ -32,4 +31,7 @@\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n+\n+  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n+  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTEzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462879135", "bodyText": "Thanks for sharing the best practices link. I have refactored the code.", "author": "monica-BTC", "createdAt": "2020-07-30T09:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNTMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\nindex 111bbb31b..7bfe1e99f 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/SiteRepository.java\n\n@@ -31,7 +30,4 @@ public interface SiteRepository extends JpaRepository<SiteEntity, String> {\n   @Query(\n       \"SELECT site from SiteEntity site where site.location.id = :locationId and site.status= :status\")\n   public List<SiteEntity> findByLocationIdAndStatus(String locationId, Integer status);\n-\n-  @Query(\"SELECT site from SiteEntity site where site.study.id in (:studyIds)\")\n-  public List<SiteEntity> findByStudyIds(@Param(\"studyIds\") List<String> studyIds);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462326836", "bodyText": "It would be nice if this method (and others) were written to act on a single SiteEntity. That way we could use it directly in stream().map(SiteMapper::toAppDetailsResponse)", "author": "nikklassen", "createdAt": "2020-07-29T14:08:18Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java", "diffHunk": "@@ -20,4 +26,20 @@ public static SiteResponse toSiteResponse(SiteEntity site) {\n     response.setSiteId(site.getId());\n     return response;\n   }\n+\n+  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMzU2MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462603561", "bodyText": "+1", "author": "saminguyen", "createdAt": "2020-07-29T21:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2MDg2MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462760861", "bodyText": "+1  Discussed with team, we'll refactor the code and  follow this in new code.", "author": "dhanyak-btc", "createdAt": "2020-07-30T06:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTU3Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462879573", "bodyText": "I have fixed the comments. Please review.", "author": "monica-BTC", "createdAt": "2020-07-30T09:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\nindex c268cf806..a73f51149 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/SiteMapper.java\n\n@@ -27,19 +22,13 @@ public class SiteMapper {\n     return response;\n   }\n \n-  public static List<AppSiteResponse> toAppDetailsResponseList(List<SiteEntity> sites) {\n-    List<AppSiteResponse> siteResponseList = new ArrayList<>();\n-    if (CollectionUtils.isNotEmpty(sites)) {\n-      for (SiteEntity site : sites) {\n-        AppSiteResponse appSiteResponse = new AppSiteResponse();\n-        appSiteResponse.setSiteId(site.getId());\n-        appSiteResponse.setCustomLocationId(site.getLocation().getCustomId());\n-        appSiteResponse.setLocationDescription(site.getLocation().getDescription());\n-        appSiteResponse.setLocationId(site.getLocation().getId());\n-        appSiteResponse.setLocationName(site.getLocation().getName());\n-        siteResponseList.add(appSiteResponse);\n-      }\n-    }\n-    return siteResponseList;\n+  public static AppSiteResponse toAppSiteResponse(SiteEntity site) {\n+    AppSiteResponse appSiteResponse = new AppSiteResponse();\n+    appSiteResponse.setSiteId(site.getId());\n+    appSiteResponse.setCustomLocationId(site.getLocation().getCustomId());\n+    appSiteResponse.setLocationDescription(site.getLocation().getDescription());\n+    appSiteResponse.setLocationId(site.getLocation().getId());\n+    appSiteResponse.setLocationName(site.getLocation().getName());\n+    return appSiteResponse;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODk0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462338947", "bodyText": "See my comment on findByStudyIds()", "author": "nikklassen", "createdAt": "2020-07-29T14:23:25Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java", "diffHunk": "@@ -26,4 +28,7 @@\n \n   @Query(\"SELECT study from StudyEntity study where study.id=:studyId\")\n   public Optional<StudyEntity> findByStudyId(String studyId);\n+\n+  @Query(\"SELECT study from StudyEntity study where study.appInfo.id in (:appIds)\")\n+  public List<StudyEntity> findByAppIds(@Param(\"appIds\") List<String> appIds);", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MDY4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462880681", "bodyText": "I have fixed the comment. Please review.", "author": "monica-BTC", "createdAt": "2020-07-30T09:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\nindex 6a6895dfc..da6d1a591 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n\n@@ -28,7 +24,4 @@ public interface StudyRepository extends JpaRepository<StudyEntity, String> {\n \n   @Query(\"SELECT study from StudyEntity study where study.id=:studyId\")\n   public Optional<StudyEntity> findByStudyId(String studyId);\n-\n-  @Query(\"SELECT study from StudyEntity study where study.appInfo.id in (:appIds)\")\n-  public List<StudyEntity> findByAppIds(@Param(\"appIds\") List<String> appIds);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTg5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462339890", "bodyText": "This is the same as the built-in findById", "author": "nikklassen", "createdAt": "2020-07-29T14:24:41Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java", "diffHunk": "@@ -19,4 +22,8 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {}\n+public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {\n+\n+  @Query(\"SELECT ua FROM UserRegAdminEntity ua WHERE ua.id = :userId\")\n+  Optional<UserRegAdminEntity> findByUserRegAdminId(String userId);", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MTIyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462881229", "bodyText": "Removed findByUserRegAdminId() and used findById()", "author": "monica-BTC", "createdAt": "2020-07-30T09:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzOTg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java\nindex 9fcab14d8..17623f8a2 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserRegAdminRepository.java\n\n@@ -8,22 +8,14 @@\n \n package com.google.cloud.healthcare.fdamystudies.repository;\n \n-import java.util.Optional;\n-\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.data.jpa.repository.JpaRepository;\n-import org.springframework.data.jpa.repository.Query;\n import org.springframework.stereotype.Repository;\n \n-import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n-\n @Repository\n @ConditionalOnProperty(\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {\n-\n-  @Query(\"SELECT ua FROM UserRegAdminEntity ua WHERE ua.id = :userId\")\n-  Optional<UserRegAdminEntity> findByUserRegAdminId(String userId);\n-}\n+public interface UserRegAdminRepository extends JpaRepository<UserRegAdminEntity, String> {}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462348254", "bodyText": "Can we just call this id? The fact that it's a site should be implied by the route.", "author": "nikklassen", "createdAt": "2020-07-29T14:35:02Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0ODEyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462948126", "bodyText": "Participant Manager API's and front-end application was already developed as per design document and QA tested internally. Now, team is refactoring the code to address the Areas of Improvements without breaking the functionality and trying to keep the integration issues minimal during this refactoring. Unfortunately, due to project timelines, we'll not be able to change the structure or rename the variables in Response objects.\nThis applies to similar comments on this PR.", "author": "dhanyak-btc", "createdAt": "2020-07-30T12:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMzEyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463023129", "bodyText": "Let's come back to this in the next track.", "author": "nikklassen", "createdAt": "2020-07-30T14:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0ODI1NA=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\nindex 8a384f50d..6c50e823d 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\n\n@@ -8,12 +8,11 @@\n \n package com.google.cloud.healthcare.fdamystudies.beans;\n \n-import org.springframework.context.annotation.Scope;\n-import org.springframework.stereotype.Component;\n-\n import lombok.Getter;\n import lombok.Setter;\n import lombok.ToString;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n \n @ToString\n @Setter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MjgyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462352826", "bodyText": "Can we put this in a location property? It will be easier for the frontend to create interfaces if they can always use the same Location. Otherwise their code needs to extract all of the location-related properties out and map them back into a location object.", "author": "nikklassen", "createdAt": "2020-07-29T14:40:52Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppSiteResponse {\n+\n+  private String siteId;\n+\n+  private String locationId;", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\nindex 8a384f50d..6c50e823d 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppSiteResponse.java\n\n@@ -8,12 +8,11 @@\n \n package com.google.cloud.healthcare.fdamystudies.beans;\n \n-import org.springframework.context.annotation.Scope;\n-import org.springframework.stereotype.Component;\n-\n import lombok.Getter;\n import lombok.Setter;\n import lombok.ToString;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n \n @ToString\n @Setter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzA5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462353097", "bodyText": "Just id here too", "author": "nikklassen", "createdAt": "2020-07-29T14:41:11Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.beans;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@ToString\n+@Setter\n+@Getter\n+@Component\n+@Scope(value = \"prototype\")\n+public class AppStudyResponse {\n+  private String studyId;", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java\nindex c3a6e5dee..633930c8a 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AppStudyResponse.java\n\n@@ -10,13 +10,11 @@ package com.google.cloud.healthcare.fdamystudies.beans;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n-import org.springframework.context.annotation.Scope;\n-import org.springframework.stereotype.Component;\n-\n import lombok.Getter;\n import lombok.Setter;\n import lombok.ToString;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n \n @ToString\n @Setter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462356136", "bodyText": "What about setting fields to allowedFields if the request parameter is empty? I don't think we need two methods here, just use all optional fields if none are specified", "author": "nikklassen", "createdAt": "2020-07-29T14:45:11Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java", "diffHunk": "@@ -32,15 +36,34 @@\n \n   @Autowired private AppService appService;\n \n+  private static final String DEFAULT = \"_default_\";\n+\n   private static final String STATUS_LOG = \"status=%d\";\n \n   private static final String BEGIN_REQUEST_LOG = \"%s request\";\n \n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n-      @RequestHeader(name = USER_ID_HEADER) String userId, HttpServletRequest request) {\n-    logger.entry(String.format(BEGIN_REQUEST_LOG, request.getRequestURI()));\n-    AppResponse appResponse = appService.getApps(userId);\n+      @RequestHeader(name = USER_ID_HEADER) String userId,\n+      @RequestParam(name = \"fields\", required = false) String[] fields,\n+      HttpServletRequest request) {\n+    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    logger.entry(\n+        String.format(\n+            \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n+\n+    String[] allowedFields = {\"studies\", \"sites\"};\n+    AppResponse appResponse;\n+    if (ArrayUtils.contains(fields, DEFAULT)) {", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MjY1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462882652", "bodyText": "allowedFields is added to fix @saminguyen review comment. I am returning bad request if fields contains invalid value.", "author": "monica-BTC", "createdAt": "2020-07-30T09:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNDM5NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463014395", "bodyText": "This is still consistent with what Sami was saying. I'm talking about only the case when the value of fields is empty, you can set fields to {\"studies\", \"sites\"}. (exactly what you're doing with DEFAULT, just with \"\" instead).\nThis is of course assuming that appService.getAppsWithOptionalFields(userId, {\"studies\", \"sites\"}) is the same as calling appService.getApps(userId)", "author": "nikklassen", "createdAt": "2020-07-30T13:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0NDMwNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464344304", "bodyText": "Have fixed the review comment. Both methods returns different responses, in getApps() we calculate enrollment percentage etc., for dashboard screen and getAppsWithOptionalFields() does not calculate enrollment percentage, it returns studies and sites for the apps.", "author": "monica-BTC", "createdAt": "2020-08-03T11:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NjEzNg=="}], "type": "inlineReview", "revised_code": {"commit": "db280afc9030ecedf46a0704636ad77f3666d01c", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java\nindex c03bf7ab1..986469da1 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/AppController.java\n\n@@ -36,25 +36,21 @@ public class AppController {\n \n   @Autowired private AppService appService;\n \n-  private static final String DEFAULT = \"_default_\";\n-\n   private static final String STATUS_LOG = \"status=%d\";\n \n-  private static final String BEGIN_REQUEST_LOG = \"%s request\";\n-\n   @GetMapping\n   public ResponseEntity<AppResponse> getApps(\n       @RequestHeader(name = USER_ID_HEADER) String userId,\n       @RequestParam(name = \"fields\", required = false) String[] fields,\n       HttpServletRequest request) {\n-    fields = Optional.ofNullable(fields).orElse(new String[] {DEFAULT});\n+    fields = Optional.ofNullable(fields).orElse(new String[] {});\n     logger.entry(\n         String.format(\n             \"%s request with fields=%s\", request.getRequestURI(), String.join(\",\", fields)));\n \n     String[] allowedFields = {\"studies\", \"sites\"};\n     AppResponse appResponse;\n-    if (ArrayUtils.contains(fields, DEFAULT)) {\n+    if (ArrayUtils.isEmpty(fields)) {\n       appResponse = appService.getApps(userId);\n     } else if (Arrays.asList(allowedFields).containsAll(Arrays.asList(fields))) {\n       appResponse = appService.getAppsWithOptionalFields(userId, fields);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NzQ2Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462357462", "bodyText": "See my comment on toAppDetailsResponseList. We can use the streams API\n.map(study -> StudyMapper.toAppDetailsResponse(study, fields))\nif this takes a single StudyEntity", "author": "nikklassen", "createdAt": "2020-07-29T14:46:53Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AppSiteResponse;\n+import com.google.cloud.healthcare.fdamystudies.beans.AppStudyResponse;\n+import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+\n+public final class StudyMapper {\n+\n+  private StudyMapper() {}\n+\n+  public static List<AppStudyResponse> toAppDetailsResponseList(", "originalCommit": "db25ded3576ccadcf886f985cb474b892d7b5dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4NDg1NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r462884855", "bodyText": "Fixed the review comment.", "author": "monica-BTC", "createdAt": "2020-07-30T09:54:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NzQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8016b99e234e2d691420140d38d664275b7fc085", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java\nindex 8f677cc4e..021d973e1 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/StudyMapper.java\n\n@@ -8,41 +8,29 @@\n \n package com.google.cloud.healthcare.fdamystudies.mapper;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.lang3.ArrayUtils;\n-\n import com.google.cloud.healthcare.fdamystudies.beans.AppSiteResponse;\n import com.google.cloud.healthcare.fdamystudies.beans.AppStudyResponse;\n import com.google.cloud.healthcare.fdamystudies.model.SiteEntity;\n import com.google.cloud.healthcare.fdamystudies.model.StudyEntity;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.ArrayUtils;\n \n public final class StudyMapper {\n \n   private StudyMapper() {}\n \n-  public static List<AppStudyResponse> toAppDetailsResponseList(\n-      List<StudyEntity> studies,\n-      Map<String, List<SiteEntity>> groupByStudyIdSiteMap,\n-      String[] fields) {\n-    List<AppStudyResponse> studyResponseList = new ArrayList<>();\n-    if (CollectionUtils.isNotEmpty(studies)) {\n-      for (StudyEntity study : studies) {\n-        AppStudyResponse appStudyResponse = new AppStudyResponse();\n-        appStudyResponse.setStudyId(study.getId());\n-        appStudyResponse.setCustomStudyId(study.getCustomId());\n-        appStudyResponse.setStudyName(study.getName());\n-        if (ArrayUtils.contains(fields, \"sites\")) {\n-          List<AppSiteResponse> appSiteResponsesList =\n-              SiteMapper.toAppDetailsResponseList(groupByStudyIdSiteMap.get(study.getId()));\n-          appStudyResponse.getSites().addAll(appSiteResponsesList);\n-        }\n-        studyResponseList.add(appStudyResponse);\n-      }\n+  public static AppStudyResponse toAppStudyResponse(\n+      StudyEntity study, List<SiteEntity> sites, String[] fields) {\n+    AppStudyResponse appStudyResponse = new AppStudyResponse();\n+    appStudyResponse.setStudyId(study.getId());\n+    appStudyResponse.setCustomStudyId(study.getCustomId());\n+    appStudyResponse.setStudyName(study.getName());\n+    if (ArrayUtils.contains(fields, \"sites\")) {\n+      List<AppSiteResponse> appSiteResponsesList =\n+          sites.stream().map(SiteMapper::toAppSiteResponse).collect(Collectors.toList());\n+      appStudyResponse.getSites().addAll(appSiteResponsesList);\n     }\n-    return studyResponseList;\n+    return appStudyResponse;\n   }\n }\n"}}, {"oid": "8016b99e234e2d691420140d38d664275b7fc085", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8016b99e234e2d691420140d38d664275b7fc085", "message": "Fixed PR comments\n\nFixed PR comments", "committedDate": "2020-07-30T09:38:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDQ0NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463020444", "bodyText": "Is CollectionUtils.emptyIfNull necessary? It's not clear from the docs but I would think findAll() will always return a list, it just might be empty if there's nothing to fetch.", "author": "nikklassen", "createdAt": "2020-07-30T14:04:22Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -262,23 +262,20 @@ private void calculateEnrollmentPercentage(\n   public AppResponse getAppsWithOptionalFields(String userId, String[] fields) {\n     logger.entry(\"getAppsWithOptionalFields(userId,fields)\");\n \n-    Optional<UserRegAdminEntity> optUserRegAdminEntity =\n-        userRegAdminRepository.findByUserRegAdminId(userId);\n+    Optional<UserRegAdminEntity> optUserRegAdminEntity = userRegAdminRepository.findById(userId);\n \n     if (!(optUserRegAdminEntity.isPresent() && optUserRegAdminEntity.get().isSuperAdmin())) {\n       logger.exit(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n       return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n     }\n \n-    List<AppEntity> apps =\n-        (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAllApps());\n-    List<String> appIds = apps.stream().map(AppEntity::getId).collect(Collectors.toList());\n+    List<AppEntity> apps = (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAll());", "originalCommit": "8016b99e234e2d691420140d38d664275b7fc085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzNTE1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464335159", "bodyText": "Yes, it returns empty list. I verified it by calling findAll() in @BeforeEach. I'll inform the team not to use CollectionUtils.emptyIfNull for findAll().", "author": "dhanyak-btc", "createdAt": "2020-08-03T10:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "db280afc9030ecedf46a0704636ad77f3666d01c", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\nindex bc9bd0e6e..bb76e935c 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n\n@@ -269,7 +269,7 @@ public class AppServiceImpl implements AppService {\n       return new AppResponse(ErrorCode.USER_ADMIN_ACCESS_DENIED);\n     }\n \n-    List<AppEntity> apps = (List<AppEntity>) CollectionUtils.emptyIfNull(appRepository.findAll());\n+    List<AppEntity> apps = appRepository.findAll();\n \n     List<StudyEntity> studies = new ArrayList<>();\n     apps.stream().map(AppEntity::getStudies).forEach(studies::addAll);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTI4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r463039288", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, groupByStudyIdSiteMap.get(study.getId()), fields))\n          \n          \n            \n                                    StudyMapper.toAppStudyResponse(\n          \n          \n            \n                                        study, study.getSites(), fields))\n          \n      \n    \n    \n  \n\nYou don't need to build the whole list of sites out in getAppsWithOptionalFields (line 278)", "author": "nikklassen", "createdAt": "2020-07-30T14:30:39Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java", "diffHunk": "@@ -298,9 +295,15 @@ private AppResponse prepareAppResponse(\n     for (AppEntity app : apps) {\n       AppDetails appDetails = AppMapper.toAppDetails(app);\n       if (ArrayUtils.contains(fields, \"studies\")) {\n+        List<StudyEntity> appStudies = groupByAppIdStudyMap.get(app.getId());\n         List<AppStudyResponse> appStudyResponses =\n-            StudyMapper.toAppDetailsResponseList(\n-                groupByAppIdStudyMap.get(app.getId()), groupByStudyIdSiteMap, fields);\n+            appStudies\n+                .stream()\n+                .map(\n+                    study ->\n+                        StudyMapper.toAppStudyResponse(\n+                            study, groupByStudyIdSiteMap.get(study.getId()), fields))", "originalCommit": "8016b99e234e2d691420140d38d664275b7fc085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzNzI4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/670#discussion_r464337280", "bodyText": "As informed earlier these APIs were implemented as per the design document and front-end application also implemented accordingly. You suggestion is valid, but we'll not be able to further refactor due to project timelines.", "author": "dhanyak-btc", "createdAt": "2020-08-03T10:47:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzOTI4OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "db280afc9030ecedf46a0704636ad77f3666d01c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/db280afc9030ecedf46a0704636ad77f3666d01c", "message": "Fixed PR comments\n\nFixed PR comments", "committedDate": "2020-08-03T11:00:44Z", "type": "commit"}, {"oid": "2db0212067608e1124d620c79b78f7342c2f760e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2db0212067608e1124d620c79b78f7342c2f760e", "message": "Merge branch 'develop' into participant-manager-apps-with-optional-studies-and-sites", "committedDate": "2020-08-13T13:20:03Z", "type": "commit"}, {"oid": "45bc1336d1ddc79442336058948e22e1c0f77e69", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/45bc1336d1ddc79442336058948e22e1c0f77e69", "message": "Fixed conflict error\n\nFixed conflict error", "committedDate": "2020-08-13T13:27:22Z", "type": "commit"}]}