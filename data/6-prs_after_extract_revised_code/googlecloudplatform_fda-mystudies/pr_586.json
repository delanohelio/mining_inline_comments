{"pr_number": 586, "pr_title": "PUT /v1/user/reset_password implementation with integration tests", "pr_createdAt": "2020-07-01T12:30:04Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586", "timeline": [{"oid": "fd03b1af810007f16fe3564a7ba4de3efe88779c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fd03b1af810007f16fe3564a7ba4de3efe88779c", "message": "PUT /v1/user/reset_password implementation with integration tests\n\nPUT /v1/user/reset_password implementation with integration tests", "committedDate": "2020-07-01T12:29:28Z", "type": "commit"}, {"oid": "61c1378165962b37a0438356a117c4f1bc8c5fbf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/61c1378165962b37a0438356a117c4f1bc8c5fbf", "message": "Corrected @Order for shouldDeleteTheUser() test\n\nCorrected @Order for shouldDeleteTheUser() test", "committedDate": "2020-07-01T12:41:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzNzIyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450237225", "bodyText": "This should be a POST. PUT is used to set the state on the server, whereas this API requests a server action (sending an email).", "author": "nikklassen", "createdAt": "2020-07-06T13:55:19Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -81,7 +87,31 @@\n             ? HttpStatus.OK.value()\n             : userResponse.getHttpStatusCode();\n \n-    logger.exit(String.format(\"status=%d\", status));\n+    logger.exit(String.format(STATUS_LOG, status));\n+    return ResponseEntity.status(status).body(userResponse);\n+  }\n+\n+  @PutMapping(", "originalCommit": "61c1378165962b37a0438356a117c4f1bc8c5fbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1Njg4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450656883", "bodyText": "Used @PostMapping for this endpoint", "author": "dhanyak-btc", "createdAt": "2020-07-07T07:15:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzNzIyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6ae44e016bb434316937d68aecbccc4e5f05fcd", "chunk": "diff --git a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\nindex f4aa01111..94a066ea1 100644\n--- a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\n+++ b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\n\n@@ -91,27 +93,19 @@ public class UserController {\n     return ResponseEntity.status(status).body(userResponse);\n   }\n \n-  @PutMapping(\n+  @PostMapping(\n       value = \"/user/reset_password\",\n       produces = MediaType.APPLICATION_JSON_VALUE,\n       consumes = MediaType.APPLICATION_JSON_VALUE)\n   public ResponseEntity<?> resetPassword(\n-      @Valid @RequestBody UpdateUserRequest userRequest, HttpServletRequest request)\n+      @Valid @RequestBody ResetPasswordRequest resetPasswordRequest, HttpServletRequest request)\n       throws JsonProcessingException {\n     logger.entry(String.format(BEGIN_S_REQUEST_LOG, request.getRequestURI()));\n-    ValidationErrorResponse validationResult = UserValidator.validate(userRequest);\n-    if (validationResult.hasErrors()) {\n-      logger.exit(String.format(VALIDATION_ERROS_LOG, validationResult));\n-      return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(validationResult);\n-    }\n \n-    UpdateUserResponse userResponse = userService.resetPassword(userRequest);\n-    int status =\n-        StringUtils.isEmpty(userResponse.getErrorDescription())\n-            ? HttpStatus.OK.value()\n-            : userResponse.getHttpStatusCode();\n+    ResetPasswordResponse resetPasswordResponse = userService.resetPassword(resetPasswordRequest);\n \n-    logger.exit(String.format(STATUS_LOG, status));\n-    return ResponseEntity.status(status).body(userResponse);\n+    logger.exit(String.format(STATUS_LOG, resetPasswordResponse.getHttpStatusCode()));\n+    return ResponseEntity.status(resetPasswordResponse.getHttpStatusCode())\n+        .body(resetPasswordResponse);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTMyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450239323", "bodyText": "If userResponse has a status code you should always be using that instead of setting the OK case yourself.", "author": "nikklassen", "createdAt": "2020-07-06T13:58:16Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -81,7 +87,31 @@\n             ? HttpStatus.OK.value()\n             : userResponse.getHttpStatusCode();\n \n-    logger.exit(String.format(\"status=%d\", status));\n+    logger.exit(String.format(STATUS_LOG, status));\n+    return ResponseEntity.status(status).body(userResponse);\n+  }\n+\n+  @PutMapping(\n+      value = \"/user/reset_password\",\n+      produces = MediaType.APPLICATION_JSON_VALUE,\n+      consumes = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> resetPassword(\n+      @Valid @RequestBody UpdateUserRequest userRequest, HttpServletRequest request)\n+      throws JsonProcessingException {\n+    logger.entry(String.format(BEGIN_S_REQUEST_LOG, request.getRequestURI()));\n+    ValidationErrorResponse validationResult = UserValidator.validate(userRequest);\n+    if (validationResult.hasErrors()) {\n+      logger.exit(String.format(VALIDATION_ERROS_LOG, validationResult));\n+      return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(validationResult);\n+    }\n+\n+    UpdateUserResponse userResponse = userService.resetPassword(userRequest);\n+    int status =\n+        StringUtils.isEmpty(userResponse.getErrorDescription())\n+            ? HttpStatus.OK.value()\n+            : userResponse.getHttpStatusCode();", "originalCommit": "61c1378165962b37a0438356a117c4f1bc8c5fbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNzUxMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450707513", "bodyText": "Refactored the code to fix the review comment. Added MessageCode enum for success messages. Please share your thoughts so that I can request the team to use the MessageCode enum for success messages.", "author": "dhanyak-btc", "createdAt": "2020-07-07T08:48:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MTk4Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r451071987", "bodyText": "Yes, this looks better.", "author": "nikklassen", "createdAt": "2020-07-07T18:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "d6ae44e016bb434316937d68aecbccc4e5f05fcd", "chunk": "diff --git a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\nindex f4aa01111..94a066ea1 100644\n--- a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\n+++ b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java\n\n@@ -91,27 +93,19 @@ public class UserController {\n     return ResponseEntity.status(status).body(userResponse);\n   }\n \n-  @PutMapping(\n+  @PostMapping(\n       value = \"/user/reset_password\",\n       produces = MediaType.APPLICATION_JSON_VALUE,\n       consumes = MediaType.APPLICATION_JSON_VALUE)\n   public ResponseEntity<?> resetPassword(\n-      @Valid @RequestBody UpdateUserRequest userRequest, HttpServletRequest request)\n+      @Valid @RequestBody ResetPasswordRequest resetPasswordRequest, HttpServletRequest request)\n       throws JsonProcessingException {\n     logger.entry(String.format(BEGIN_S_REQUEST_LOG, request.getRequestURI()));\n-    ValidationErrorResponse validationResult = UserValidator.validate(userRequest);\n-    if (validationResult.hasErrors()) {\n-      logger.exit(String.format(VALIDATION_ERROS_LOG, validationResult));\n-      return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(validationResult);\n-    }\n \n-    UpdateUserResponse userResponse = userService.resetPassword(userRequest);\n-    int status =\n-        StringUtils.isEmpty(userResponse.getErrorDescription())\n-            ? HttpStatus.OK.value()\n-            : userResponse.getHttpStatusCode();\n+    ResetPasswordResponse resetPasswordResponse = userService.resetPassword(resetPasswordRequest);\n \n-    logger.exit(String.format(STATUS_LOG, status));\n-    return ResponseEntity.status(status).body(userResponse);\n+    logger.exit(String.format(STATUS_LOG, resetPasswordResponse.getHttpStatusCode()));\n+    return ResponseEntity.status(resetPasswordResponse.getHttpStatusCode())\n+        .body(resetPasswordResponse);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMDQ3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450320479", "bodyText": "Please invert this condition", "author": "nikklassen", "createdAt": "2020-07-06T15:56:30Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -109,13 +119,61 @@ private void setPasswordAndPasswordHistoryFields(String password, ObjectNode use\n   public UpdateUserResponse updateUser(UpdateUserRequest userRequest)\n       throws JsonProcessingException {\n     logger.entry(String.format(\"begin updateUser() for %s action\", userRequest.getAction()));\n-    if (\"change_password\".equalsIgnoreCase(userRequest.getAction())) {\n+    if (CHANGE_PASSWORD.equalsIgnoreCase(userRequest.getAction())) {\n       return changePassword(userRequest);\n     }\n \n     return new UpdateUserResponse(ErrorCode.APPLICATION_ERROR);\n   }\n \n+  public UpdateUserResponse resetPassword(UpdateUserRequest userRequest)\n+      throws JsonProcessingException {\n+    logger.entry(\"begin resetPassword()\");\n+    Optional<UserEntity> entity =\n+        repository.findByAppIdAndOrgIdAndEmail(\n+            userRequest.getAppId(), userRequest.getOrgId(), userRequest.getEmail());\n+    if (entity.isPresent()) {", "originalCommit": "61c1378165962b37a0438356a117c4f1bc8c5fbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxODUxMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450718512", "bodyText": "Inverted the condition", "author": "dhanyak-btc", "createdAt": "2020-07-07T09:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMDQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6ae44e016bb434316937d68aecbccc4e5f05fcd", "chunk": "diff --git a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java\nindex 4474b1e53..fb03811a3 100644\n--- a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java\n+++ b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java\n\n@@ -126,46 +129,50 @@ public class UserServiceImpl implements UserService {\n     return new UpdateUserResponse(ErrorCode.APPLICATION_ERROR);\n   }\n \n-  public UpdateUserResponse resetPassword(UpdateUserRequest userRequest)\n+  public ResetPasswordResponse resetPassword(ResetPasswordRequest resetPasswordRequest)\n       throws JsonProcessingException {\n     logger.entry(\"begin resetPassword()\");\n     Optional<UserEntity> entity =\n         repository.findByAppIdAndOrgIdAndEmail(\n-            userRequest.getAppId(), userRequest.getOrgId(), userRequest.getEmail());\n-    if (entity.isPresent()) {\n-      String tempPassword = PasswordGenerator.generate(TEMP_PASSWORD_LENGTH);\n-      EmailResponse emailResponse = sendPasswordResetEmail(userRequest, tempPassword);\n-\n-      if (HttpStatus.ACCEPTED.value() == emailResponse.getHttpStatusCode()) {\n-        UserEntity userEntity = entity.get();\n-        ObjectNode userInfo = (ObjectNode) toJsonNode(userEntity.getUserInfo());\n-        setPasswordAndPasswordHistoryFields(tempPassword, userInfo);\n-        userEntity.setUserInfo(userInfo.toString());\n-        repository.saveAndFlush(userEntity);\n-        logger.exit(\"password changed successfully!\");\n-        return new UpdateUserResponse(\n-            HttpStatus.OK, \"Your password has been changed successfully!\");\n-      } else {\n-        logger.exit(\n-            String.format(\n-                \"reset password failed, error code=%s\", ErrorCode.EMAIL_SEND_FAILED_EXCEPTION));\n-        return new UpdateUserResponse(ErrorCode.EMAIL_SEND_FAILED_EXCEPTION);\n-      }\n+            resetPasswordRequest.getAppId(),\n+            resetPasswordRequest.getOrgId(),\n+            resetPasswordRequest.getEmail());\n+\n+    if (!entity.isPresent()) {\n+      logger.exit(String.format(\"reset password failed, error code=%s\", ErrorCode.USER_NOT_FOUND));\n+      return new ResetPasswordResponse(ErrorCode.USER_NOT_FOUND);\n+    }\n+\n+    String tempPassword = PasswordGenerator.generate(TEMP_PASSWORD_LENGTH);\n+    EmailResponse emailResponse = sendPasswordResetEmail(resetPasswordRequest, tempPassword);\n+\n+    if (HttpStatus.ACCEPTED.value() == emailResponse.getHttpStatusCode()) {\n+      UserEntity userEntity = entity.get();\n+      ObjectNode userInfo = (ObjectNode) toJsonNode(userEntity.getUserInfo());\n+      setPasswordAndPasswordHistoryFields(tempPassword, userInfo);\n+      userEntity.setUserInfo(userInfo.toString());\n+      repository.saveAndFlush(userEntity);\n+      logger.exit(MessageCode.PASSWORD_RESET_SUCCESS);\n+      return new ResetPasswordResponse(MessageCode.PASSWORD_RESET_SUCCESS);\n+    } else {\n+      logger.exit(\n+          String.format(\n+              \"reset password failed, error code=%s\", ErrorCode.EMAIL_SEND_FAILED_EXCEPTION));\n+      return new ResetPasswordResponse(ErrorCode.EMAIL_SEND_FAILED_EXCEPTION);\n     }\n-    logger.exit(String.format(\"reset password failed, error code=%s\", ErrorCode.USER_NOT_FOUND));\n-    return new UpdateUserResponse(ErrorCode.USER_NOT_FOUND);\n   }\n \n-  private EmailResponse sendPasswordResetEmail(UpdateUserRequest userRequest, String tempPassword) {\n+  private EmailResponse sendPasswordResetEmail(\n+      ResetPasswordRequest resetPasswordRequest, String tempPassword) {\n     Map<String, String> templateArgs = new HashMap<>();\n-    templateArgs.put(\"orgId\", userRequest.getOrgId());\n-    templateArgs.put(\"appId\", userRequest.getAppId());\n+    templateArgs.put(\"orgId\", resetPasswordRequest.getOrgId());\n+    templateArgs.put(\"appId\", resetPasswordRequest.getAppId());\n     templateArgs.put(\"contactEmail\", appConfig.getContactEmail());\n     templateArgs.put(\"tempPassword\", tempPassword);\n     EmailRequest emailRequest =\n         new EmailRequest(\n             appConfig.getFromEmail(),\n-            new String[] {userRequest.getEmail()},\n+            new String[] {resetPasswordRequest.getEmail()},\n             null,\n             null,\n             appConfig.getMailResetPasswordSubject(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMjA5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450322097", "bodyText": "We shouldn't be using the same request for two different actions. I would prefer different request types so that this validation can be done with annotations.", "author": "nikklassen", "createdAt": "2020-07-06T15:59:14Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/validator/UserValidator.java", "diffHunk": "@@ -48,6 +49,19 @@ public static ValidationErrorResponse validate(UpdateUserRequest request) {\n       }\n     }\n \n+    // validate fields required for forgot password action\n+    if (FORGOT_PASSWORD.equalsIgnoreCase(request.getAction())) {", "originalCommit": "61c1378165962b37a0438356a117c4f1bc8c5fbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczMTY2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/586#discussion_r450731665", "bodyText": "Created ResetPasswordRequest with validation annotations and ResetPasswordResponse bean. Refactored the code & tests to fix compilation errors.", "author": "dhanyak-btc", "createdAt": "2020-07-07T09:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMjA5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d6ae44e016bb434316937d68aecbccc4e5f05fcd", "chunk": "diff --git a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/validator/UserValidator.java b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/validator/UserValidator.java\nindex 4af911b5d..33a7faad8 100644\n--- a/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/validator/UserValidator.java\n+++ b/oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/validator/UserValidator.java\n\n@@ -49,19 +48,6 @@ public final class UserValidator {\n       }\n     }\n \n-    // validate fields required for forgot password action\n-    if (FORGOT_PASSWORD.equalsIgnoreCase(request.getAction())) {\n-      if (StringUtils.isEmpty(request.getEmail())) {\n-        error.getViolations().add(new Violation(\"email\", MUST_NOT_BE_BLANK));\n-      }\n-      if (StringUtils.isEmpty(request.getAppId())) {\n-        error.getViolations().add(new Violation(\"appId\", MUST_NOT_BE_BLANK));\n-      }\n-      if (StringUtils.isEmpty(request.getOrgId())) {\n-        error.getViolations().add(new Violation(\"orgId\", MUST_NOT_BE_BLANK));\n-      }\n-    }\n-\n     return error;\n   }\n }\n"}}, {"oid": "d6ae44e016bb434316937d68aecbccc4e5f05fcd", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d6ae44e016bb434316937d68aecbccc4e5f05fcd", "message": "Fixed PR#586 review comments\n\n1. Used @PostMapping for /v1/user/reset_password\n2. Added MessageCode enum for success messages and refactored the code\n3. Refactored the code for ResetPasswordRequest and ResetPasswordResponse\n4. Removed email credentials from property files and added AppConfigTest to mock the JavaMailSender bean.", "committedDate": "2020-07-07T09:38:48Z", "type": "commit"}, {"oid": "8601a046cd8feb812c33c1f1edbe988b50b1e789", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8601a046cd8feb812c33c1f1edbe988b50b1e789", "message": "Added verify for mock JavaMailSender object\n\nAdded verify for mock JavaMailSender object", "committedDate": "2020-07-07T11:46:27Z", "type": "commit"}, {"oid": "52bad23f33335e3e60dae37417069aa7feb5cb08", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/52bad23f33335e3e60dae37417069aa7feb5cb08", "message": "Mock Verify for JavaMailSender - replaced atLeast() with times()\n\nMock Verify for JavaMailSender - replaced atLeast() with times()", "committedDate": "2020-07-07T12:40:39Z", "type": "commit"}, {"oid": "18c0a8906cba9926dcbe8589816853160ebda62c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/18c0a8906cba9926dcbe8589816853160ebda62c", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-22T06:22:58Z", "type": "commit"}, {"oid": "df1a072182ec4d80030296b8145b030191686068", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/df1a072182ec4d80030296b8145b030191686068", "message": "Resolved conflicts\n\nResolved conflicts", "committedDate": "2020-07-22T06:23:32Z", "type": "commit"}, {"oid": "4b3b5f73af123481a0d2c6a4bf6b327ec66966fa", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4b3b5f73af123481a0d2c6a4bf6b327ec66966fa", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-22T06:55:43Z", "type": "commit"}, {"oid": "566eb3f38ff2b27895118f59322f84846f94ad46", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/566eb3f38ff2b27895118f59322f84846f94ad46", "message": "Resolve conflicts and fixed build issues\n\nResolve conflicts and fixed build issues", "committedDate": "2020-07-22T07:04:53Z", "type": "commit"}, {"oid": "e01245c3da90c4680f3dfd9349bf39937bf5c039", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e01245c3da90c4680f3dfd9349bf39937bf5c039", "message": "Renamed GlobalExceptionHandler to BaseController to fix build issue\n\nRenamed GlobalExceptionHandler to BaseController to fix build issue", "committedDate": "2020-07-22T08:54:14Z", "type": "commit"}, {"oid": "bb52cff2d45d95f1e20b1326c99d32bd1eb12358", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bb52cff2d45d95f1e20b1326c99d32bd1eb12358", "message": "Renamed BaseController to GlobalExceptionHandler\n\nReplaced DigestUtils.sha3_512Hex(value); with DigestUtils.sha512Hex(value);\nRemoved BaseController class reference from audit-log-service and oauth-scim-service", "committedDate": "2020-07-23T09:31:41Z", "type": "commit"}, {"oid": "fd8beb27fb29c961780f491d8ae593c36d49d24a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fd8beb27fb29c961780f491d8ae593c36d49d24a", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-23T09:34:27Z", "type": "commit"}, {"oid": "fa2f9e41903c70db448f1a1a156776c6794a7297", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fa2f9e41903c70db448f1a1a156776c6794a7297", "message": "Added @ComponentScan to BaseMockIT to fix build issue\n\nAdded @ComponentScan to BaseMockIT to fix build issue", "committedDate": "2020-07-23T11:12:01Z", "type": "commit"}, {"oid": "008cc971898b0fb411cb6d7ae2a6ea04dfe2a81d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/008cc971898b0fb411cb6d7ae2a6ea04dfe2a81d", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-23T13:45:42Z", "type": "commit"}, {"oid": "587fc5eb1d289e76e82438f5e8840febdcce9823", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/587fc5eb1d289e76e82438f5e8840febdcce9823", "message": "Use @Import to include common module", "committedDate": "2020-07-23T17:08:24Z", "type": "commit"}, {"oid": "cd7b6bb0236e9049dfc08d27c1549563c6e757d4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cd7b6bb0236e9049dfc08d27c1549563c6e757d4", "message": "Fix audit-log dependency on common-tests", "committedDate": "2020-07-23T17:47:49Z", "type": "commit"}, {"oid": "fba857c10c1dff15f6e7199a03d271cb9c61a34c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fba857c10c1dff15f6e7199a03d271cb9c61a34c", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-23T17:53:47Z", "type": "commit"}, {"oid": "484eeeb9bf7093a42887d9c96058d8020bab6b21", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/484eeeb9bf7093a42887d9c96058d8020bab6b21", "message": "Use checkout@v1", "committedDate": "2020-07-24T13:35:00Z", "type": "commit"}, {"oid": "be5eb23d16bb10e2d1942015787f215fc42a0b36", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/be5eb23d16bb10e2d1942015787f215fc42a0b36", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-28T05:20:21Z", "type": "commit"}, {"oid": "7a76d0a3203f498a23bf9cd920a63e0ef614cdcb", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7a76d0a3203f498a23bf9cd920a63e0ef614cdcb", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-28T09:38:07Z", "type": "commit"}, {"oid": "e6d2efa65fa334b5070fbd3bdd3b9790153a8c0f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e6d2efa65fa334b5070fbd3bdd3b9790153a8c0f", "message": "Merge branch 'develop' into oauth-scim-module-forgot-password", "committedDate": "2020-07-28T14:10:31Z", "type": "commit"}]}