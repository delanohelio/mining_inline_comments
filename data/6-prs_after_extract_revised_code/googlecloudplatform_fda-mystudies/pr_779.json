{"pr_number": 779, "pr_title": "Participant manager [GET] /users/admin/{adminId} endpoint implementation", "pr_createdAt": "2020-08-20T09:36:10Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779", "timeline": [{"oid": "76898da8532e744ed8ab0382666da8f93b714875", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/76898da8532e744ed8ab0382666da8f93b714875", "message": "getAdminDetailsAndApps api has been implemented", "committedDate": "2020-08-20T09:30:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNDE4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474134183", "bodyText": "since we already have @ Getter Setter, why not just a field String appId here instead", "author": "saminguyen", "createdAt": "2020-08-20T16:51:15Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java", "diffHunk": "@@ -64,4 +66,9 @@\n \n   @Column(name = \"created_by\", length = 64)\n   private String createdBy;\n+\n+  @Transient\n+  public String getAppId() {", "originalCommit": "76898da8532e744ed8ab0382666da8f93b714875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwNTA5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474505096", "bodyText": "This is needed for lambda expression and marked as @Transient to avoid mapping to table column.", "author": "chiranjibi009", "createdAt": "2020-08-21T08:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2Mjg0NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r476162844", "bodyText": "Ok!", "author": "saminguyen", "createdAt": "2020-08-25T04:37:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNDE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f6cac67cd78a7ccb0cc507452fb95f79ab12eee6", "chunk": "diff --git a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java\nindex e08d98450..d14a4c7e2 100644\n--- a/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java\n+++ b/common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java\n\n@@ -52,23 +58,21 @@ public class AppPermissionEntity implements Serializable {\n \n   @ManyToOne(cascade = CascadeType.MERGE)\n   @JoinColumn(name = \"app_info_id\")\n-  private AppEntity appInfo;\n+  private AppEntity app;\n \n-  @Column(name = \"edit_permission\", nullable = true, length = 1)\n-  private Integer editPermission;\n+  @Enumerated(EnumType.ORDINAL)\n+  @Column(name = \"edit\")\n+  private Permission edit;\n \n-  @Column(\n-      name = \"created\",\n-      insertable = false,\n-      updatable = false,\n-      columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n+  @Column(name = \"created_time\")\n+  @CreationTimestamp\n   private Timestamp created;\n \n-  @Column(name = \"created_by\", length = 64)\n+  @Column(name = \"created_by\", length = LARGE_LENGTH)\n   private String createdBy;\n \n   @Transient\n   public String getAppId() {\n-    return appInfo == null ? StringUtils.EMPTY : appInfo.getId();\n+    return app == null ? StringUtils.EMPTY : app.getId();\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NjQ5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474196497", "bodyText": "you can use lambda for short\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .mapToInt(appStudyResponse -> appStudyResponse.getSelectedSitesCount())\n          \n          \n            \n                         .mapToInt(UserStudyDetails::getSelectedSitesCount)", "author": "saminguyen", "createdAt": "2020-08-20T18:44:14Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java", "diffHunk": "@@ -441,4 +448,158 @@ private void deleteAllPermissions(String userId) {\n     appPermissionRepository.deleteByAdminUserId(userId);\n     logger.exit(\"Successfully deleted all the assigned permissions.\");\n   }\n+\n+  @Override\n+  public GetAdminDetailsResponse getAdminDetails(String userId, String adminId) {\n+    logger.entry(\"getAdminDetails()\");\n+    ErrorCode errorCode = validateUserRequest(userId);\n+    if (errorCode != null) {\n+      logger.error(errorCode.toString());\n+      return new GetAdminDetailsResponse(errorCode);\n+    }\n+\n+    Optional<UserRegAdminEntity> optAdminDetails = userAdminRepository.findById(adminId);\n+    if (!optAdminDetails.isPresent()) {\n+      logger.error(ErrorCode.ADMIN_NOT_FOUND.toString());\n+      return new GetAdminDetailsResponse(ErrorCode.ADMIN_NOT_FOUND);\n+    }\n+\n+    UserRegAdminEntity adminDetails = optAdminDetails.get();\n+    User user = UserMapper.prepareUserInfo(adminDetails);\n+    List<AppEntity> apps = appRepository.findAll();\n+    List<AppPermissionEntity> appPermissions =\n+        appPermissionRepository.findByAdminUserId(user.getId());\n+\n+    Map<String, AppPermissionEntity> appPermissionMap =\n+        appPermissions\n+            .stream()\n+            .collect(Collectors.toMap(AppPermissionEntity::getAppId, Function.identity()));\n+\n+    for (AppEntity app : apps) {\n+      UserAppDetails userAppBean = UserMapper.toUserAppDetails(app);\n+      AppPermissionEntity appPermission = appPermissionMap.get(app.getId());\n+      if (appPermission != null && appPermission.getEditPermission() != null) {\n+        Permission permission = Permission.fromValue(appPermission.getEditPermission());\n+        userAppBean.setPermission(permission.value());\n+        if (Permission.NO_PERMISSION != permission) {\n+          userAppBean.setSelected(true);\n+        }\n+      } else if (adminDetails.isSuperAdmin()) {\n+        userAppBean.setPermission(Permission.READ_EDIT.value());\n+        userAppBean.setSelected(true);\n+      }\n+\n+      List<UserStudyDetails> userStudies = getUserStudies(app, adminDetails);\n+      userAppBean.getStudies().addAll(userStudies);\n+\n+      setStudiesSitesCountPerApp(userAppBean, userStudies);\n+\n+      user.getApps().add(userAppBean);\n+    }\n+\n+    logger.exit(\n+        String.format(\n+            \"total apps=%d, superadmin=%b, status=%s\",\n+            user.getApps().size(), user.isSuperAdmin(), user.getStatus()));\n+    return new GetAdminDetailsResponse(MessageCode.GET_ADMIN_DETAILS_SUCCESS, user);\n+  }\n+\n+  private void setStudiesSitesCountPerApp(\n+      UserAppDetails userAppBean, List<UserStudyDetails> userStudies) {\n+    int selectedStudiesCount =\n+        (int) userStudies.stream().filter(UserStudyDetails::isSelected).count();\n+    userAppBean.setSelectedStudiesCount(selectedStudiesCount);\n+    userAppBean.setTotalStudies(userStudies.size());\n+\n+    int selectedSitesCountPerApp =\n+        userStudies\n+            .stream()\n+            .mapToInt(appStudyResponse -> appStudyResponse.getSelectedSitesCount())", "originalCommit": "76898da8532e744ed8ab0382666da8f93b714875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUxMjkzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474512938", "bodyText": "Fixed review comment", "author": "chiranjibi009", "createdAt": "2020-08-21T08:20:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NjQ5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java\nindex ec4bd3eb8..5fcf1396b 100644\n--- a/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java\n+++ b/participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/ManageUserServiceImpl.java\n\n@@ -512,10 +512,7 @@ public class ManageUserServiceImpl implements ManageUserService {\n     userAppBean.setTotalStudies(userStudies.size());\n \n     int selectedSitesCountPerApp =\n-        userStudies\n-            .stream()\n-            .mapToInt(appStudyResponse -> appStudyResponse.getSelectedSitesCount())\n-            .sum();\n+        userStudies.stream().mapToInt(UserStudyDetails::getSelectedSitesCount).sum();\n     userAppBean.setSelectedSitesCount(selectedSitesCountPerApp);\n \n     int totalSitesCount =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMjMzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474202333", "bodyText": "remove, you already checked this above", "author": "saminguyen", "createdAt": "2020-08-20T18:55:09Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java", "diffHunk": "@@ -506,6 +510,127 @@ public void shouldReturnPermissionMissingErrorForUpdateUser() throws Exception {\n             jsonPath(\"$.error_description\").value(ErrorCode.PERMISSION_MISSING.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAdminRecordsWithoutAppStudySitePermissionForGetAdminDetailsAndApps()\n+      throws Exception {\n+    // Step 1: Set few admins\n+    UserRegAdminEntity superAdmin = testDataHelper.createSuperAdmin();\n+\n+    // Step 2: Call API and expect MANAGE_USERS_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_ADMIN_DETAILS_AND_APPS.getPath(), superAdmin.getId())\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.user.id\", is(superAdmin.getId())))\n+        .andExpect(jsonPath(\"$.user.apps\").isArray())\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.user.apps[0].totalStudies\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())", "originalCommit": "76898da8532e744ed8ab0382666da8f93b714875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUxMjc5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474512794", "bodyText": "Fixed review comment", "author": "chiranjibi009", "createdAt": "2020-08-21T08:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMjMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\nindex be1a93383..30684c341 100644\n--- a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n+++ b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n\n@@ -533,7 +533,6 @@ public class UserControllerTest extends BaseMockIT {\n         .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n         .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n         .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n-        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n         .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_ADMIN_DETAILS_SUCCESS.getMessage())));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMjc1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474202752", "bodyText": "same as above - remove this line", "author": "saminguyen", "createdAt": "2020-08-20T18:55:54Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java", "diffHunk": "@@ -506,6 +510,127 @@ public void shouldReturnPermissionMissingErrorForUpdateUser() throws Exception {\n             jsonPath(\"$.error_description\").value(ErrorCode.PERMISSION_MISSING.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAdminRecordsWithoutAppStudySitePermissionForGetAdminDetailsAndApps()\n+      throws Exception {\n+    // Step 1: Set few admins\n+    UserRegAdminEntity superAdmin = testDataHelper.createSuperAdmin();\n+\n+    // Step 2: Call API and expect MANAGE_USERS_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_ADMIN_DETAILS_AND_APPS.getPath(), superAdmin.getId())\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.user.id\", is(superAdmin.getId())))\n+        .andExpect(jsonPath(\"$.user.apps\").isArray())\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.user.apps[0].totalStudies\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_ADMIN_DETAILS_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnAdminRecordsWithAppStudySiteForGetAdminDetailsAndApps() throws Exception {\n+    // Step 1: Set one admin\n+    UserRegAdminEntity superAdmin = testDataHelper.createSuperAdmin();\n+    testDataHelper.createAppPermission(superAdmin, appEntity, userRegAdminEntity.getId());\n+    testDataHelper.createStudyPermission(\n+        superAdmin, appEntity, studyEntity, userRegAdminEntity.getId());\n+    testDataHelper.createSitePermission(\n+        superAdmin, appEntity, studyEntity, siteEntity, userRegAdminEntity.getId());\n+\n+    // Step 2: Call API and expect MANAGE_USERS_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_ADMIN_DETAILS_AND_APPS.getPath(), superAdmin.getId())\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.user.id\", is(superAdmin.getId())))\n+        .andExpect(jsonPath(\"$.user.apps\").isArray())\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.user.apps[0].totalStudies\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())", "originalCommit": "76898da8532e744ed8ab0382666da8f93b714875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUxMjYwMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474512603", "bodyText": "Fixed review comment", "author": "chiranjibi009", "createdAt": "2020-08-21T08:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMjc1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\nindex be1a93383..30684c341 100644\n--- a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n+++ b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n\n@@ -533,7 +533,6 @@ public class UserControllerTest extends BaseMockIT {\n         .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n         .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n         .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n-        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n         .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_ADMIN_DETAILS_SUCCESS.getMessage())));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMzI3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474213272", "bodyText": "The way I see it, the User object has a lot of nested ArrayList of objects (UserAppDetails, UserStudyDetails, UserSitesDetails. So to most effectively test all these values I think it is best to convert to user value in json to the actual object and compare all the fields that way. I think you could use om.fasterxml.jackson.databind.ObjectMapper readValue() for this.", "author": "saminguyen", "createdAt": "2020-08-20T19:16:29Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java", "diffHunk": "@@ -506,6 +510,127 @@ public void shouldReturnPermissionMissingErrorForUpdateUser() throws Exception {\n             jsonPath(\"$.error_description\").value(ErrorCode.PERMISSION_MISSING.getDescription()));\n   }\n \n+  @Test\n+  public void shouldReturnAdminRecordsWithoutAppStudySitePermissionForGetAdminDetailsAndApps()\n+      throws Exception {\n+    // Step 1: Set few admins\n+    UserRegAdminEntity superAdmin = testDataHelper.createSuperAdmin();\n+\n+    // Step 2: Call API and expect MANAGE_USERS_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_ADMIN_DETAILS_AND_APPS.getPath(), superAdmin.getId())\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.user.id\", is(superAdmin.getId())))\n+        .andExpect(jsonPath(\"$.user.apps\").isArray())\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.user.apps[0].totalStudies\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_ADMIN_DETAILS_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnAdminRecordsWithAppStudySiteForGetAdminDetailsAndApps() throws Exception {\n+    // Step 1: Set one admin\n+    UserRegAdminEntity superAdmin = testDataHelper.createSuperAdmin();\n+    testDataHelper.createAppPermission(superAdmin, appEntity, userRegAdminEntity.getId());\n+    testDataHelper.createStudyPermission(\n+        superAdmin, appEntity, studyEntity, userRegAdminEntity.getId());\n+    testDataHelper.createSitePermission(\n+        superAdmin, appEntity, studyEntity, siteEntity, userRegAdminEntity.getId());\n+\n+    // Step 2: Call API and expect MANAGE_USERS_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_ADMIN_DETAILS_AND_APPS.getPath(), superAdmin.getId())\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.user.id\", is(superAdmin.getId())))\n+        .andExpect(jsonPath(\"$.user.apps\").isArray())\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n+        .andExpect(jsonPath(\"$.user.apps[0].totalStudies\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(1)))\n+        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())", "originalCommit": "76898da8532e744ed8ab0382666da8f93b714875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwODgwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/779#discussion_r474508807", "bodyText": "We have used your suggested approach to assert bad request violations in other places, but here some of the fields are dynamically generated so we are using andExpect() to assert the values.", "author": "chiranjibi009", "createdAt": "2020-08-21T08:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMzI3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "chunk": "diff --git a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\nindex be1a93383..30684c341 100644\n--- a/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n+++ b/participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/UserControllerTest.java\n\n@@ -533,7 +533,6 @@ public class UserControllerTest extends BaseMockIT {\n         .andExpect(jsonPath(\"$.user.apps[0].selectedStudiesCount\", is(0)))\n         .andExpect(jsonPath(\"$.user.apps[0].totalSites\", is(1)))\n         .andExpect(jsonPath(\"$.user.apps[0].selectedSitesCount\", is(0)))\n-        .andExpect(jsonPath(\"$.user.apps\").isNotEmpty())\n         .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_ADMIN_DETAILS_SUCCESS.getMessage())));\n   }\n \n"}}, {"oid": "89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/89a6a6dc3a6d14f204ff4ab4315744ac986ef515", "message": "fixed review comment", "committedDate": "2020-08-21T08:50:12Z", "type": "commit"}, {"oid": "f6cac67cd78a7ccb0cc507452fb95f79ab12eee6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f6cac67cd78a7ccb0cc507452fb95f79ab12eee6", "message": "Merge branch 'develop' of https://github.com/GoogleCloudPlatform/fda-mystudies into participant-manager-get-admin-details-and-apps-api-implementation\n\n# Conflicts:\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AppPermissionEntity.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "committedDate": "2020-08-21T09:57:07Z", "type": "commit"}, {"oid": "5aa325b8ef7ba0dc03eb52c8cd8c618827013b45", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/5aa325b8ef7ba0dc03eb52c8cd8c618827013b45", "message": "bean attribute renamed for consisteancy", "committedDate": "2020-08-23T07:54:07Z", "type": "commit"}, {"oid": "1e1b7369bc05103f8a48d01caa28daab20fc5616", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1e1b7369bc05103f8a48d01caa28daab20fc5616", "message": "Merge branch 'develop' into participant-manager-get-admin-details-and-apps-api-implementation", "committedDate": "2020-08-23T08:03:21Z", "type": "commit"}, {"oid": "3c82f49d2349d812efa6d5150f4a7358185cc083", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3c82f49d2349d812efa6d5150f4a7358185cc083", "message": "null pointer exception issue fixed", "committedDate": "2020-08-23T12:55:42Z", "type": "commit"}]}