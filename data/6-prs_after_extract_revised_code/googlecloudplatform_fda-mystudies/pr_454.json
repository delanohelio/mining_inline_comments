{"pr_number": 454, "pr_title": "Studybuilder app not handling version info for apps with different appId", "pr_createdAt": "2020-06-05T12:22:54Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/454", "timeline": [{"oid": "1bfb6a88f7c8f070dce97483f940f49f568c954a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1bfb6a88f7c8f070dce97483f940f49f568c954a", "message": "code commit for wcp not handling version info issue fix", "committedDate": "2020-06-05T12:20:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkyNTMyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/454#discussion_r435925326", "bodyText": "moving this to the the top as an early exit would reduce code nesting be one level, i.e.\nif (appVersionInfo == null) {\n     return null;\n}\n// the rest of the code does not need to be in an else block.\nandroid.setLatestVersion(appVersionInfo.getAndroidVersion());\n...", "author": "zohrehj", "createdAt": "2020-06-05T13:36:17Z", "path": "WCP-WS/src/main/java/com/hphc/mystudies/integration/AppMetaDataOrchestration.java", "diffHunk": "@@ -121,27 +121,44 @@ public String updateAppVersionDetails(\n     return updateAppVersionResponse;\n   }\n \n-  public AppVersionInfoBean getAppVersionInfo() {\n+  public AppVersionInfoBean getAppVersionInfo(String appId, String orgId) {\n     LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Starts\");\n \n-    AppVersionInfoBean aAppVersionInfoBean = new AppVersionInfoBean();\n+    AppVersionInfoBean aAppVersionInfoBean;\n     AppVersionInfo appVersionInfo = null;\n     DeviceVersion android = new DeviceVersion();\n     DeviceVersion ios = new DeviceVersion();\n \n-    appVersionInfo = appMetaDataDao.getAppVersionInfo();\n+    appVersionInfo = appMetaDataDao.getAppVersionInfo(appId, orgId);\n \n-    android.setLatestVersion(appVersionInfo.getAndroidVersion());\n-    android.setForceUpdate(\"true\");\n+    if (appVersionInfo != null) {\n+      android.setLatestVersion(appVersionInfo.getAndroidVersion());\n \n-    ios.setForceUpdate(\"true\");\n-    ios.setLatestVersion(appVersionInfo.getIosVersion());\n+      if (appVersionInfo.getAndroidForceUpdate() != null\n+          && appVersionInfo.getAndroidForceUpdate()) {\n+        android.setForceUpdate(\"true\");\n+      } else {\n+        android.setForceUpdate(\"false\");\n+      }\n+\n+      if (appVersionInfo.getIosForceUpdate() != null && appVersionInfo.getIosForceUpdate()) {\n+        ios.setForceUpdate(\"true\");\n+      } else {\n+        ios.setForceUpdate(\"false\");\n+      }\n \n-    aAppVersionInfoBean.setAndroid(android);\n-    aAppVersionInfoBean.setIos(ios);\n+      ios.setLatestVersion(appVersionInfo.getIosVersion());\n \n-    LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n-    return aAppVersionInfoBean;\n+      aAppVersionInfoBean = new AppVersionInfoBean();\n+      aAppVersionInfoBean.setAndroid(android);\n+      aAppVersionInfoBean.setIos(ios);\n+\n+      LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n+      return aAppVersionInfoBean;\n+    } else {\n+      LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n+      return null;\n+    }", "originalCommit": "1bfb6a88f7c8f070dce97483f940f49f568c954a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ae088472d79a3b9a96f5e5e65773e7109d6328c", "chunk": "diff --git a/WCP-WS/src/main/java/com/hphc/mystudies/integration/AppMetaDataOrchestration.java b/WCP-WS/src/main/java/com/hphc/mystudies/integration/AppMetaDataOrchestration.java\nindex a94f84756..96039145a 100644\n--- a/WCP-WS/src/main/java/com/hphc/mystudies/integration/AppMetaDataOrchestration.java\n+++ b/WCP-WS/src/main/java/com/hphc/mystudies/integration/AppMetaDataOrchestration.java\n\n@@ -123,49 +123,39 @@ public class AppMetaDataOrchestration {\n \n   public AppVersionInfoBean getAppVersionInfo(String appId, String orgId) {\n     LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Starts\");\n-\n     AppVersionInfoBean aAppVersionInfoBean;\n     AppVersionInfo appVersionInfo = null;\n     DeviceVersion android = new DeviceVersion();\n     DeviceVersion ios = new DeviceVersion();\n \n     appVersionInfo = appMetaDataDao.getAppVersionInfo(appId, orgId);\n-\n-    if (appVersionInfo != null) {\n-      android.setLatestVersion(appVersionInfo.getAndroidVersion());\n-\n-      if (appVersionInfo.getAndroidForceUpdate() != null\n-          && appVersionInfo.getAndroidForceUpdate()) {\n-        android.setForceUpdate(\"true\");\n-      } else {\n-        android.setForceUpdate(\"false\");\n-      }\n-\n-      if (appVersionInfo.getIosForceUpdate() != null && appVersionInfo.getIosForceUpdate()) {\n-        ios.setForceUpdate(\"true\");\n-      } else {\n-        ios.setForceUpdate(\"false\");\n-      }\n-\n-      ios.setLatestVersion(appVersionInfo.getIosVersion());\n-\n-      aAppVersionInfoBean = new AppVersionInfoBean();\n-      aAppVersionInfoBean.setAndroid(android);\n-      aAppVersionInfoBean.setIos(ios);\n-\n-      LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n-      return aAppVersionInfoBean;\n-    } else {\n+    if (appVersionInfo == null) {\n       LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n       return null;\n     }\n+    android.setLatestVersion(appVersionInfo.getAndroidVersion());\n+    if (appVersionInfo.getAndroidForceUpdate() != null && appVersionInfo.getAndroidForceUpdate()) {\n+      android.setForceUpdate(\"true\");\n+    } else {\n+      android.setForceUpdate(\"false\");\n+    }\n+    if (appVersionInfo.getIosForceUpdate() != null && appVersionInfo.getIosForceUpdate()) {\n+      ios.setForceUpdate(\"true\");\n+    } else {\n+      ios.setForceUpdate(\"false\");\n+    }\n+    ios.setLatestVersion(appVersionInfo.getIosVersion());\n+    aAppVersionInfoBean = new AppVersionInfoBean();\n+    aAppVersionInfoBean.setAndroid(android);\n+    aAppVersionInfoBean.setIos(ios);\n+    LOGGER.info(\"INFO: AppMetaDataOrchestration - getAppVersionInfo() :: Ends\");\n+    return aAppVersionInfoBean;\n   }\n \n   public ErrorResponse storeResponseActivitiesTemp(String jsonData) throws Exception {\n     LOGGER.info(\"INFO: AppMetaDataOrchestration - storeResponseActivitiesTemp() :: starts\");\n     ErrorResponse errorResponse = new ErrorResponse();\n     JSONObject json = null, metadataJson = null;\n-    // ResponseActivityTempDto responseActivityTempDto = null;\n     try {\n       json = new JSONObject(jsonData);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMTU3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/454#discussion_r435931572", "bodyText": "this case can be moved outside of the try block if you revert the initial condition, i.e.\nif (!StringUtils.isNotEmpty(appId) || !StringUtils.isNotEmpty(orgId)) {\n  StudyMetaDataUtil.getFailureResponse(\n            ErrorCodes.STATUS_102,\n            ErrorCodes.UNKNOWN,\n            StudyMetaDataConstants.INVALID_INPUT_ERROR_MSG,\n            response);\n        return Response.status(Response.Status.NOT_FOUND)\n            .entity(StudyMetaDataConstants.INVALID_INPUT)\n            .build();\n}\n\ntry {\n  appVersionInfoBean = appMetaDataOrchestration.getAppVersionInfo(appId, orgId);\n        if (appVersionInfoBean == null) {\n          StudyMetaDataUtil.getFailureResponse(\n              ErrorCodes.STATUS_103, ErrorCodes.NO_DATA, StudyMetaDataConstants.FAILURE, response);\n          return Response.status(Response.Status.NOT_FOUND)\n              .entity(StudyMetaDataConstants.NO_RECORD)\n              .build();\n        }\n} catch (Exception e) {\n      LOGGER.error(\"ERROR: StudyMetaDataService - getAppVersionInfo()\", e);\n      return Response.status(Response.Status.INTERNAL_SERVER_ERROR)\n          .entity(StudyMetaDataConstants.FAILURE)\n          .build();\n    }", "author": "zohrehj", "createdAt": "2020-06-05T13:46:15Z", "path": "WCP-WS/src/main/java/com/hphc/mystudies/service/StudyMetaDataService.java", "diffHunk": "@@ -968,10 +931,39 @@ public Object study(\n   @Produces(MediaType.APPLICATION_JSON)\n   @Consumes(MediaType.APPLICATION_JSON)\n   @Path(\"versionInfo\")\n-  public Object getAppVersionInfo() {\n+  public Object getAppVersionInfo(\n+      @HeaderParam(\"applicationId\") String appId,\n+      @HeaderParam(\"orgId\") String orgId,\n+      @Context HttpServletResponse response) {\n     AppVersionInfoBean appVersionInfoBean = null;\n     LOGGER.info(\"INFO: StudyMetaDataService - getAppVersionInfo() :: Starts\");\n-    appVersionInfoBean = appMetaDataOrchestration.getAppVersionInfo();\n+    try {\n+      if (StringUtils.isNotEmpty(appId) && StringUtils.isNotEmpty(orgId)) {\n+        appVersionInfoBean = appMetaDataOrchestration.getAppVersionInfo(appId, orgId);\n+        if (appVersionInfoBean == null) {\n+          StudyMetaDataUtil.getFailureResponse(\n+              ErrorCodes.STATUS_103, ErrorCodes.NO_DATA, StudyMetaDataConstants.FAILURE, response);\n+          return Response.status(Response.Status.NOT_FOUND)\n+              .entity(StudyMetaDataConstants.NO_RECORD)\n+              .build();\n+        }\n+      } else {\n+        StudyMetaDataUtil.getFailureResponse(\n+            ErrorCodes.STATUS_102,\n+            ErrorCodes.UNKNOWN,\n+            StudyMetaDataConstants.INVALID_INPUT_ERROR_MSG,\n+            response);\n+        return Response.status(Response.Status.NOT_FOUND)\n+            .entity(StudyMetaDataConstants.INVALID_INPUT)\n+            .build();\n+      }", "originalCommit": "1bfb6a88f7c8f070dce97483f940f49f568c954a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3NjU3NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/454#discussion_r436476574", "bodyText": "Done the changes as suggested.", "author": "aswinijena100", "createdAt": "2020-06-08T06:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMTU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b31f3ca1047bf9f8e2213079c317b7374edfd0c7", "chunk": "diff --git a/WCP-WS/src/main/java/com/hphc/mystudies/service/StudyMetaDataService.java b/WCP-WS/src/main/java/com/hphc/mystudies/service/StudyMetaDataService.java\nindex e2d954686..bb363da8d 100644\n--- a/WCP-WS/src/main/java/com/hphc/mystudies/service/StudyMetaDataService.java\n+++ b/WCP-WS/src/main/java/com/hphc/mystudies/service/StudyMetaDataService.java\n\n@@ -937,27 +937,27 @@ public class StudyMetaDataService {\n       @Context HttpServletResponse response) {\n     AppVersionInfoBean appVersionInfoBean = null;\n     LOGGER.info(\"INFO: StudyMetaDataService - getAppVersionInfo() :: Starts\");\n+\n+    if (StringUtils.isBlank(appId) || StringUtils.isBlank(orgId)) {\n+      StudyMetaDataUtil.getFailureResponse(\n+          ErrorCodes.STATUS_102,\n+          ErrorCodes.UNKNOWN,\n+          StudyMetaDataConstants.INVALID_INPUT_ERROR_MSG,\n+          response);\n+      return Response.status(Response.Status.NOT_FOUND)\n+          .entity(StudyMetaDataConstants.INVALID_INPUT)\n+          .build();\n+    }\n+\n     try {\n-      if (StringUtils.isNotEmpty(appId) && StringUtils.isNotEmpty(orgId)) {\n-        appVersionInfoBean = appMetaDataOrchestration.getAppVersionInfo(appId, orgId);\n-        if (appVersionInfoBean == null) {\n-          StudyMetaDataUtil.getFailureResponse(\n-              ErrorCodes.STATUS_103, ErrorCodes.NO_DATA, StudyMetaDataConstants.FAILURE, response);\n-          return Response.status(Response.Status.NOT_FOUND)\n-              .entity(StudyMetaDataConstants.NO_RECORD)\n-              .build();\n-        }\n-      } else {\n+      appVersionInfoBean = appMetaDataOrchestration.getAppVersionInfo(appId, orgId);\n+      if (appVersionInfoBean == null) {\n         StudyMetaDataUtil.getFailureResponse(\n-            ErrorCodes.STATUS_102,\n-            ErrorCodes.UNKNOWN,\n-            StudyMetaDataConstants.INVALID_INPUT_ERROR_MSG,\n-            response);\n+            ErrorCodes.STATUS_103, ErrorCodes.NO_DATA, StudyMetaDataConstants.FAILURE, response);\n         return Response.status(Response.Status.NOT_FOUND)\n-            .entity(StudyMetaDataConstants.INVALID_INPUT)\n+            .entity(StudyMetaDataConstants.NO_RECORD)\n             .build();\n       }\n-\n     } catch (Exception e) {\n       LOGGER.error(\"ERROR: StudyMetaDataService - getAppVersionInfo()\", e);\n       return Response.status(Response.Status.INTERNAL_SERVER_ERROR)\n"}}, {"oid": "1ae088472d79a3b9a96f5e5e65773e7109d6328c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1ae088472d79a3b9a96f5e5e65773e7109d6328c", "message": "moving null check to the the top as an early exit would reduce code nesting", "committedDate": "2020-06-05T14:04:12Z", "type": "commit"}, {"oid": "7aa08892da33ed7fbd220a051acd174befbed869", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7aa08892da33ed7fbd220a051acd174befbed869", "message": "Merge branch 'early-access' into early-access-mystudies-versionInfo-issue-fix", "committedDate": "2020-06-05T14:04:55Z", "type": "commit"}, {"oid": "b31f3ca1047bf9f8e2213079c317b7374edfd0c7", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b31f3ca1047bf9f8e2213079c317b7374edfd0c7", "message": "moved if condition out of try block as suggested", "committedDate": "2020-06-08T06:16:35Z", "type": "commit"}]}