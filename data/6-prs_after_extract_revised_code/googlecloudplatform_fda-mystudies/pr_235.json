{"pr_number": 235, "pr_title": "Early access build", "pr_createdAt": "2020-04-24T16:56:11Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235", "timeline": [{"oid": "479ea2d0ce623b536f7e83599a2b3bdd45b31649", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/479ea2d0ce623b536f7e83599a2b3bdd45b31649", "message": "code commit for issue #231 fixes", "committedDate": "2020-04-24T16:48:31Z", "type": "commit"}, {"oid": "757796c13a48a7d6a356b603ac74d639c8012d3d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/757796c13a48a7d6a356b603ac74d639c8012d3d", "message": "Merge branch 'early-access' of https://github.com/GoogleCloudPlatform/fda-mystudies into early-access-build", "committedDate": "2020-04-24T16:51:25Z", "type": "commit"}, {"oid": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-27T14:19:05Z", "type": "commit"}, {"oid": "e389fb5ad3b838c858c7ca07929a25cd25673244", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e389fb5ad3b838c858c7ca07929a25cd25673244", "message": "GitHub Comment issue fix for issue no #235", "committedDate": "2020-04-27T15:40:57Z", "type": "commit"}, {"oid": "cba0a1bac094378923ee178a63ff7661f24815cb", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cba0a1bac094378923ee178a63ff7661f24815cb", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-27T15:41:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODQwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415908408", "bodyText": "An integer type is not appropriate here. Either use an enum or, preferably, return a boolean", "author": "nikklassen", "createdAt": "2020-04-27T15:23:57Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "originalCommit": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjc4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417126780", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODQwOA=="}], "type": "inlineReview", "revised_code": {"commit": "e389fb5ad3b838c858c7ca07929a25cd25673244", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex cec33f068..72fbdaddd 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -29,27 +29,21 @@ public class UserSupportServiceImpl implements UserSupportService {\n   @Autowired EmailNotification emailNotification;\n \n   @Override\n-  public Integer feedback(String subject, String body) throws OrchestrationException {\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n     logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n     Map<String, String> emailMap = new HashMap<String, String>();\n     String feedbackSubject = \"\";\n     String dynamicContent = \"\";\n     String feedbackBody = \"\";\n-    boolean isSent = false;\n-    int isEmailSent = 0;\n+    Boolean isEmailSent = false;\n     try {\n       feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n       feedbackBody = appConfig.getFeedbackMailBody();\n       emailMap.put(\"$body\", body);\n       dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n-      isSent =\n+      isEmailSent =\n           emailNotification.sendEmailNotification(\n               feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n-      if (!isSent) {\n-        isEmailSent = 1;\n-      } else {\n-        isEmailSent = 2;\n-      }\n     } catch (Exception e) {\n       logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMTA0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415911049", "bodyText": "Please don't declaring variables like this. They should always be declared when they are actually assigned", "author": "nikklassen", "createdAt": "2020-04-27T15:27:09Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;", "originalCommit": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjg1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417126858", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMTA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e389fb5ad3b838c858c7ca07929a25cd25673244", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\nindex 11b13aaaf..1ff0d8df9 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n\n@@ -41,14 +41,14 @@ public class UserSupportController {\n   public ResponseEntity<?> feedbackDetails(\n       @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n     logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n-    int isSent = 0;\n+    Boolean isEmailSent = false;\n     ResponseBean responseBean = new ResponseBean();\n     ErrorBean errorBean = null;\n     try {\n       if (StringUtils.isNotEmpty(reqBean.getSubject())\n           && StringUtils.isNotEmpty(reqBean.getBody())) {\n-        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n-        if (isSent == 2) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n           responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n         }\n       } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415914789", "bodyText": "Same here", "author": "nikklassen", "createdAt": "2020-04-27T15:31:31Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    int isSent = 0;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isSent == 2) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "originalCommit": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzAyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127028", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e389fb5ad3b838c858c7ca07929a25cd25673244", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\nindex 11b13aaaf..1ff0d8df9 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n\n@@ -41,14 +41,14 @@ public class UserSupportController {\n   public ResponseEntity<?> feedbackDetails(\n       @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n     logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n-    int isSent = 0;\n+    Boolean isEmailSent = false;\n     ResponseBean responseBean = new ResponseBean();\n     ErrorBean errorBean = null;\n     try {\n       if (StringUtils.isNotEmpty(reqBean.getSubject())\n           && StringUtils.isNotEmpty(reqBean.getBody())) {\n-        isSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n-        if (isSent == 2) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n           responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n         }\n       } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNjY4Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415916687", "bodyText": "This method doesn't throw exceptions", "author": "nikklassen", "createdAt": "2020-04-27T15:33:42Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {", "originalCommit": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzIzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127233", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNjY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e389fb5ad3b838c858c7ca07929a25cd25673244", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex cec33f068..72fbdaddd 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -29,27 +29,21 @@ public class UserSupportServiceImpl implements UserSupportService {\n   @Autowired EmailNotification emailNotification;\n \n   @Override\n-  public Integer feedback(String subject, String body) throws OrchestrationException {\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n     logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n     Map<String, String> emailMap = new HashMap<String, String>();\n     String feedbackSubject = \"\";\n     String dynamicContent = \"\";\n     String feedbackBody = \"\";\n-    boolean isSent = false;\n-    int isEmailSent = 0;\n+    Boolean isEmailSent = false;\n     try {\n       feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n       feedbackBody = appConfig.getFeedbackMailBody();\n       emailMap.put(\"$body\", body);\n       dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n-      isSent =\n+      isEmailSent =\n           emailNotification.sendEmailNotification(\n               feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n-      if (!isSent) {\n-        isEmailSent = 1;\n-      } else {\n-        isEmailSent = 2;\n-      }\n     } catch (Exception e) {\n       logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNzEwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415917105", "bodyText": "this method doesn't throw exceptions", "author": "nikklassen", "createdAt": "2020-04-27T15:34:09Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Integer feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    boolean isSent = false;\n+    int isEmailSent = 0;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+      if (!isSent) {\n+        isEmailSent = 1;\n+      } else {\n+        isEmailSent = 2;\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Integer contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {", "originalCommit": "9dfa0758f50f50e3ce818740a9cc61e7856d97ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNzMwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417127309", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNzEwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e389fb5ad3b838c858c7ca07929a25cd25673244", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex cec33f068..72fbdaddd 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -29,27 +29,21 @@ public class UserSupportServiceImpl implements UserSupportService {\n   @Autowired EmailNotification emailNotification;\n \n   @Override\n-  public Integer feedback(String subject, String body) throws OrchestrationException {\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n     logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n     Map<String, String> emailMap = new HashMap<String, String>();\n     String feedbackSubject = \"\";\n     String dynamicContent = \"\";\n     String feedbackBody = \"\";\n-    boolean isSent = false;\n-    int isEmailSent = 0;\n+    Boolean isEmailSent = false;\n     try {\n       feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n       feedbackBody = appConfig.getFeedbackMailBody();\n       emailMap.put(\"$body\", body);\n       dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n-      isSent =\n+      isEmailSent =\n           emailNotification.sendEmailNotification(\n               feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n-      if (!isSent) {\n-        isEmailSent = 1;\n-      } else {\n-        isEmailSent = 2;\n-      }\n     } catch (Exception e) {\n       logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415932940", "bodyText": "Shouldn't we be returning some other message in the case where the email isn't sent?", "author": "nikklassen", "createdAt": "2020-04-27T15:50:55Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNjM4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417136388", "bodyText": "Mobile is not relying on the back end message . They display the mapped success message that is configured locally. However , let us know if  you still needs some appropriate  message to return.", "author": "aswinijena100", "createdAt": "2020-04-29T08:05:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMzQzNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417323434", "bodyText": "So the response from this method is\n\"200 OK\" if an email was not sent\nand \"200 OK, Success\" if an email was sent\nTo me these are the same and don't provide any information. Shouldn't the user be alerted with a failure message if an email wasn't sent?", "author": "nikklassen", "createdAt": "2020-04-29T13:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2OTY0NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417369645", "bodyText": "@nikklassen thanks for highlighting this point. Did the changes now to return an error message in case of failing to trigger an email . please have a look now", "author": "aswinijena100", "createdAt": "2020-04-29T14:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMjk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\nindex 1ff0d8df9..f37192715 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n\n@@ -41,9 +41,8 @@ public class UserSupportController {\n   public ResponseEntity<?> feedbackDetails(\n       @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n     logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n-    Boolean isEmailSent = false;\n+    boolean isEmailSent = false;\n     ResponseBean responseBean = new ResponseBean();\n-    ErrorBean errorBean = null;\n     try {\n       if (StringUtils.isNotEmpty(reqBean.getSubject())\n           && StringUtils.isNotEmpty(reqBean.getBody())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNDIzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415934236", "bodyText": "This failure code (and the catch) is exactly the same for both methods. Please extract shared logic.", "author": "nikklassen", "createdAt": "2020-04-27T15:52:26Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.controller;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Context;\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import com.google.cloud.healthcare.fdamystudies.beans.ContactUsReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ErrorBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.FeedbackReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.ResponseBean;\n+import com.google.cloud.healthcare.fdamystudies.service.UserSupportService;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@RestController\n+public class UserSupportController {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportController.class);\n+\n+  @Autowired UserSupportService supportService;\n+\n+  @PostMapping(\n+      value = \"/feedback\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> feedbackDetails(\n+      @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())) {\n+        isEmailSent = supportService.feedback(reqBean.getSubject(), reqBean.getBody());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(\n+            MyStudiesUserRegUtil.ErrorCodes.STATUS_102.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+            MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue(),\n+            response);\n+        errorBean = new ErrorBean();\n+        errorBean.setCode(HttpStatus.BAD_REQUEST.value());\n+        errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.INVALID_INPUT_ERROR_MSG.getValue());\n+        return new ResponseEntity<>(errorBean, HttpStatus.BAD_REQUEST);\n+      }\n+    } catch (Exception e) {\n+      logger.error(\"StudyMetaDataService - feedbackDetails() :: ERROR\", e);\n+      MyStudiesUserRegUtil.getFailureResponse(\n+          MyStudiesUserRegUtil.ErrorCodes.STATUS_104.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.UNKNOWN.getValue(),\n+          MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue(),\n+          response);\n+      errorBean = new ErrorBean();\n+      errorBean.setCode(HttpStatus.INTERNAL_SERVER_ERROR.value());\n+      errorBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.FAILURE.getValue());\n+      return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);\n+    }\n+    logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Ends\");\n+    return new ResponseEntity<>(responseBean, HttpStatus.OK);\n+  }\n+\n+  @PostMapping(\n+      value = \"/contactUs\",\n+      consumes = MediaType.APPLICATION_JSON_VALUE,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  public ResponseEntity<?> contactUsDetails(\n+      @RequestBody ContactUsReqBean reqBean, @Context HttpServletResponse response) {\n+    logger.info(\"INFO: StudyMetaDataService - contactUsDetails() :: Starts\");\n+    Boolean isEmailSent = false;\n+    ResponseBean responseBean = new ResponseBean();\n+    ErrorBean errorBean = null;\n+    try {\n+      if (StringUtils.isNotEmpty(reqBean.getSubject())\n+          && StringUtils.isNotEmpty(reqBean.getBody())\n+          && StringUtils.isNotEmpty(reqBean.getFirstName())\n+          && StringUtils.isNotEmpty(reqBean.getEmail())) {\n+        isEmailSent =\n+            supportService.contactUsDetails(\n+                reqBean.getSubject(),\n+                reqBean.getBody(),\n+                reqBean.getFirstName(),\n+                reqBean.getEmail());\n+        if (isEmailSent) {\n+          responseBean.setMessage(MyStudiesUserRegUtil.ErrorCodes.SUCCESS.getValue().toLowerCase());\n+        }\n+      } else {\n+        MyStudiesUserRegUtil.getFailureResponse(", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODEwMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128102", "bodyText": "Already an externalize method is available . However did the change to use the same .", "author": "aswinijena100", "createdAt": "2020-04-29T07:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNDIzNg=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\nindex 1ff0d8df9..f37192715 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/UserSupportController.java\n\n@@ -41,9 +41,8 @@ public class UserSupportController {\n   public ResponseEntity<?> feedbackDetails(\n       @RequestBody FeedbackReqBean reqBean, @Context HttpServletResponse response) {\n     logger.info(\"INFO: StudyMetaDataService - feedbackDetails() :: Starts\");\n-    Boolean isEmailSent = false;\n+    boolean isEmailSent = false;\n     ResponseBean responseBean = new ResponseBean();\n-    ErrorBean errorBean = null;\n     try {\n       if (StringUtils.isNotEmpty(reqBean.getSubject())\n           && StringUtils.isNotEmpty(reqBean.getBody())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTAwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935008", "bodyText": "Unnecessary variable declarations here too", "author": "nikklassen", "createdAt": "2020-04-27T15:53:27Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODIwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128207", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTAwOA=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTM0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935346", "bodyText": "Type can be a primitive", "author": "nikklassen", "createdAt": "2020-04-27T15:53:49Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODI4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128285", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTM0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTcyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415935722", "bodyText": "Remove + \"\"", "author": "nikklassen", "createdAt": "2020-04-27T15:54:16Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODM2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128369", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNTcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjE5OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936198", "bodyText": "method does not throw an exception", "author": "nikklassen", "createdAt": "2020-04-27T15:54:47Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODQ0OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128448", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjQ2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936466", "bodyText": "Incorrect declarations", "author": "nikklassen", "createdAt": "2020-04-27T15:55:06Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODY4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128683", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjQ2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjU4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936586", "bodyText": "Remove + \"\"", "author": "nikklassen", "createdAt": "2020-04-27T15:55:15Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      contactUsSubject = appConfig.getContactusMailSubject() + \"\" + subject;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODc4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128781", "bodyText": "Resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjc2MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r415936760", "bodyText": "Type can be a primitive", "author": "nikklassen", "createdAt": "2020-04-27T15:55:28Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n+import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n+import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n+import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n+\n+@Service\n+public class UserSupportServiceImpl implements UserSupportService {\n+\n+  private static final Logger logger = LoggerFactory.getLogger(UserSupportServiceImpl.class);\n+\n+  @Autowired ApplicationPropertyConfiguration appConfig;\n+\n+  @Autowired EmailNotification emailNotification;\n+\n+  @Override\n+  public Boolean feedback(String subject, String body) throws OrchestrationException {\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String feedbackSubject = \"\";\n+    String dynamicContent = \"\";\n+    String feedbackBody = \"\";\n+    Boolean isEmailSent = false;\n+    try {\n+      feedbackSubject = appConfig.getFeedbackMailSuject() + \"\" + subject;\n+      feedbackBody = appConfig.getFeedbackMailBody();\n+      emailMap.put(\"$body\", body);\n+      dynamicContent = MyStudiesUserRegUtil.generateEmailContent(feedbackBody, emailMap);\n+      isEmailSent =\n+          emailNotification.sendEmailNotification(\n+              feedbackSubject, dynamicContent, appConfig.getFeedabckToEmail(), null, null);\n+    } catch (Exception e) {\n+      logger.error(\"UserManagementProfileServiceImpl - feedback() - error() \", e);\n+    }\n+    logger.info(\"UserManagementProfileServiceImpl - feedback() :: Ends\");\n+    return isEmailSent;\n+  }\n+\n+  @Override\n+  public Boolean contactUsDetails(String subject, String body, String firstName, String email)\n+      throws OrchestrationException {\n+    logger.info(\"AppMetaDataOrchestration - contactUsDetails() :: Starts\");\n+    Map<String, String> emailMap = new HashMap<String, String>();\n+    String contactUsSubject = \"\";\n+    String contactUsContent = \"\";\n+    String dynamicContent = \"\";\n+    Boolean isEmailSent = false;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODk4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417128986", "bodyText": "resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNjc2MA=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\nindex 72fbdaddd..6174b21b1 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/service/UserSupportServiceImpl.java\n\n@@ -15,7 +15,6 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import com.google.cloud.healthcare.fdamystudies.config.ApplicationPropertyConfiguration;\n-import com.google.cloud.healthcare.fdamystudies.exceptions.OrchestrationException;\n import com.google.cloud.healthcare.fdamystudies.util.EmailNotification;\n import com.google.cloud.healthcare.fdamystudies.util.MyStudiesUserRegUtil;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODU0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088546", "bodyText": "Typo in feedback", "author": "nikklassen", "createdAt": "2020-04-27T19:28:02Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;\n+\n+  @Value(\"${feedback.email}\")\n+  private String feedabckToEmail;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyOTA0MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417129041", "bodyText": "resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODU0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\nindex 99d1a8bd3..9b0018a24 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\n\n@@ -94,10 +94,10 @@ public class ApplicationPropertyConfiguration {\n   private String feedbackMailBody;\n \n   @Value(\"${feedback.mail.subject}\")\n-  private String feedbackMailSuject;\n+  private String feedbackMailSubject;\n \n   @Value(\"${feedback.email}\")\n-  private String feedabckToEmail;\n+  private String feedbackToEmail;\n \n   @Value(\"${contactus.mail.content}\")\n   private String contactusMailBody;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODY1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r416088650", "bodyText": "Typo in Subject", "author": "nikklassen", "createdAt": "2020-04-27T19:28:12Z", "path": "user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java", "diffHunk": "@@ -88,4 +88,24 @@\n   // Comma separated list of whitelisted domains.\n   @Value(\"${email.whitelisted_domains}\")\n   private String whitelistedUserDomains;\n+  \n+  // Feedback & Contactus mail content starts\n+  @Value(\"${feedback.mail.content}\")\n+  private String feedbackMailBody;\n+\n+  @Value(\"${feedback.mail.subject}\")\n+  private String feedbackMailSuject;", "originalCommit": "cba0a1bac094378923ee178a63ff7661f24815cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyOTEzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/235#discussion_r417129131", "bodyText": "resolved", "author": "aswinijena100", "createdAt": "2020-04-29T07:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4ODY1MA=="}], "type": "inlineReview", "revised_code": {"commit": "4bfc3b067582fffba8f4777042dc2929e2919038", "chunk": "diff --git a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\nindex 99d1a8bd3..9b0018a24 100644\n--- a/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\n+++ b/user-registration-server-ws/user-mgmt/src/main/java/com/google/cloud/healthcare/fdamystudies/config/ApplicationPropertyConfiguration.java\n\n@@ -94,10 +94,10 @@ public class ApplicationPropertyConfiguration {\n   private String feedbackMailBody;\n \n   @Value(\"${feedback.mail.subject}\")\n-  private String feedbackMailSuject;\n+  private String feedbackMailSubject;\n \n   @Value(\"${feedback.email}\")\n-  private String feedabckToEmail;\n+  private String feedbackToEmail;\n \n   @Value(\"${contactus.mail.content}\")\n   private String contactusMailBody;\n"}}, {"oid": "4bfc3b067582fffba8f4777042dc2929e2919038", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4bfc3b067582fffba8f4777042dc2929e2919038", "message": "Issue fixes for Feedback and Contact Us related PR as per the Comment provided  [ # 231]", "committedDate": "2020-04-29T07:46:45Z", "type": "commit"}, {"oid": "31c47222cc07e8a619ee96773bd34606cd251ae2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/31c47222cc07e8a619ee96773bd34606cd251ae2", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-29T07:55:54Z", "type": "commit"}, {"oid": "403a3371909c7caa1bbf4fe45a8ff2389642442e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/403a3371909c7caa1bbf4fe45a8ff2389642442e", "message": "Fix for to retrun an error message if mail not triggered due to an error/exception", "committedDate": "2020-04-29T14:36:28Z", "type": "commit"}, {"oid": "0cbf0eb54eb41817e66ca3389a04cc0bd623246d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/0cbf0eb54eb41817e66ca3389a04cc0bd623246d", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-29T14:47:07Z", "type": "commit"}, {"oid": "ac84ae6e57c01880b26bd208b70ca172760cc2db", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ac84ae6e57c01880b26bd208b70ca172760cc2db", "message": "Merge branch 'early-access' into early-access-build", "committedDate": "2020-04-29T18:56:33Z", "type": "commit"}]}