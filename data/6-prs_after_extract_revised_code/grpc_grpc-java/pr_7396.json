{"pr_number": 7396, "pr_title": "xds: make channel creds required in bootstrap file", "pr_createdAt": "2020-09-04T00:46:15Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7396", "timeline": [{"oid": "5abf8a40f556bd9066a150caa7de19c3645d63a7", "url": "https://github.com/grpc/grpc-java/commit/5abf8a40f556bd9066a150caa7de19c3645d63a7", "message": "Make channel_creds required in bootstrap file.", "committedDate": "2020-09-03T20:23:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDA5OA==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r483340098", "bodyText": "This is the case of type not being set as opposed to \"unknown type\".", "author": "sanjaypujare", "createdAt": "2020-09-04T01:45:07Z", "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -101,19 +101,19 @@ public static BootstrapInfo parseConfig(String rawData) throws IOException {\n       logger.log(XdsLogLevel.INFO, \"xDS server URI: {0}\", serverUri);\n       List<ChannelCreds> channelCredsOptions = new ArrayList<>();\n       List<?> rawChannelCredsList = JsonUtil.getList(serverConfig, \"channel_creds\");\n-      // List of channel creds is optional.\n-      if (rawChannelCredsList != null) {\n-        List<Map<String, ?>> channelCredsList = JsonUtil.checkObjectList(rawChannelCredsList);\n-        for (Map<String, ?> channelCreds : channelCredsList) {\n-          String type = JsonUtil.getString(channelCreds, \"type\");\n-          if (type == null) {\n-            throw new IOException(\"Invalid bootstrap: 'xds_servers' contains server with \"\n-                + \"unknown type 'channel_creds'.\");\n-          }\n-          logger.log(XdsLogLevel.INFO, \"Channel credentials option: {0}\", type);\n-          ChannelCreds creds = new ChannelCreds(type, JsonUtil.getObject(channelCreds, \"config\"));\n-          channelCredsOptions.add(creds);\n+      if (rawChannelCredsList == null) {\n+        throw new IOException(\"Invalid bootstrap: 'channel_creds' required\");\n+      }\n+      List<Map<String, ?>> channelCredsList = JsonUtil.checkObjectList(rawChannelCredsList);\n+      for (Map<String, ?> channelCreds : channelCredsList) {\n+        String type = JsonUtil.getString(channelCreds, \"type\");\n+        if (type == null) {\n+          throw new IOException(\"Invalid bootstrap: 'xds_servers' contains server with \"\n+              + \"unknown type 'channel_creds'.\");", "originalCommit": "5abf8a40f556bd9066a150caa7de19c3645d63a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyMzUyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r484023529", "bodyText": "What I mean here is for \"type unspecified\". Reading bootstrap file should not contain the logic for interpreting the type that gRPC supports, that should be done at the time when the channel creds is actually used.\nSay the bootstrap file provides 100 channel creds options, the parser should not try to look up and check one by one. Only at the time this information is used, it would interpret it: going through the list to find the first one that gRPC supports. If none can be found, the gRPC client fails.", "author": "voidzcy", "createdAt": "2020-09-06T05:23:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NDc2OQ==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r486684769", "bodyText": "It's confusing to see  \"unknown type\"  while type not provided.\n\"unknown type\" sounds more like user provides a type but it's not recognized.\n\"with type unspecified\" might be more clear.", "author": "dapengzhang0", "createdAt": "2020-09-10T23:17:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcwMjE2OA==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r486702168", "bodyText": "Sure, fixed the message.", "author": "voidzcy", "createdAt": "2020-09-11T00:17:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "d47423b72632908ae8531bf51e39762f91b2ef7c", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/Bootstrapper.java b/xds/src/main/java/io/grpc/xds/Bootstrapper.java\nindex 4efa03dc1..2f184c1a4 100644\n--- a/xds/src/main/java/io/grpc/xds/Bootstrapper.java\n+++ b/xds/src/main/java/io/grpc/xds/Bootstrapper.java\n\n@@ -101,7 +101,7 @@ public abstract class Bootstrapper {\n       logger.log(XdsLogLevel.INFO, \"xDS server URI: {0}\", serverUri);\n       List<ChannelCreds> channelCredsOptions = new ArrayList<>();\n       List<?> rawChannelCredsList = JsonUtil.getList(serverConfig, \"channel_creds\");\n-      if (rawChannelCredsList == null) {\n+      if (rawChannelCredsList == null || rawChannelCredsList.isEmpty()) {\n         throw new IOException(\"Invalid bootstrap: 'channel_creds' required\");\n       }\n       List<Map<String, ?>> channelCredsList = JsonUtil.checkObjectList(rawChannelCredsList);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MTY1Mg==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r483341652", "bodyText": "How about?\nif (rawChannelCredsList == null || rawChannelCredsList.isEmpty())", "author": "sanjaypujare", "createdAt": "2020-09-04T01:51:15Z", "path": "xds/src/main/java/io/grpc/xds/Bootstrapper.java", "diffHunk": "@@ -101,19 +101,19 @@ public static BootstrapInfo parseConfig(String rawData) throws IOException {\n       logger.log(XdsLogLevel.INFO, \"xDS server URI: {0}\", serverUri);\n       List<ChannelCreds> channelCredsOptions = new ArrayList<>();\n       List<?> rawChannelCredsList = JsonUtil.getList(serverConfig, \"channel_creds\");\n-      // List of channel creds is optional.\n-      if (rawChannelCredsList != null) {\n-        List<Map<String, ?>> channelCredsList = JsonUtil.checkObjectList(rawChannelCredsList);\n-        for (Map<String, ?> channelCreds : channelCredsList) {\n-          String type = JsonUtil.getString(channelCreds, \"type\");\n-          if (type == null) {\n-            throw new IOException(\"Invalid bootstrap: 'xds_servers' contains server with \"\n-                + \"unknown type 'channel_creds'.\");\n-          }\n-          logger.log(XdsLogLevel.INFO, \"Channel credentials option: {0}\", type);\n-          ChannelCreds creds = new ChannelCreds(type, JsonUtil.getObject(channelCreds, \"config\"));\n-          channelCredsOptions.add(creds);\n+      if (rawChannelCredsList == null) {", "originalCommit": "5abf8a40f556bd9066a150caa7de19c3645d63a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1NDkwMg==", "url": "https://github.com/grpc/grpc-java/pull/7396#discussion_r486654902", "bodyText": "Sounds fair. Updated to not allow empty list.", "author": "voidzcy", "createdAt": "2020-09-10T21:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MTY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d47423b72632908ae8531bf51e39762f91b2ef7c", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/Bootstrapper.java b/xds/src/main/java/io/grpc/xds/Bootstrapper.java\nindex 4efa03dc1..2f184c1a4 100644\n--- a/xds/src/main/java/io/grpc/xds/Bootstrapper.java\n+++ b/xds/src/main/java/io/grpc/xds/Bootstrapper.java\n\n@@ -101,7 +101,7 @@ public abstract class Bootstrapper {\n       logger.log(XdsLogLevel.INFO, \"xDS server URI: {0}\", serverUri);\n       List<ChannelCreds> channelCredsOptions = new ArrayList<>();\n       List<?> rawChannelCredsList = JsonUtil.getList(serverConfig, \"channel_creds\");\n-      if (rawChannelCredsList == null) {\n+      if (rawChannelCredsList == null || rawChannelCredsList.isEmpty()) {\n         throw new IOException(\"Invalid bootstrap: 'channel_creds' required\");\n       }\n       List<Map<String, ?>> channelCredsList = JsonUtil.checkObjectList(rawChannelCredsList);\n"}}, {"oid": "d47423b72632908ae8531bf51e39762f91b2ef7c", "url": "https://github.com/grpc/grpc-java/commit/d47423b72632908ae8531bf51e39762f91b2ef7c", "message": "Do not allow empty list of channel creds.", "committedDate": "2020-09-10T21:52:36Z", "type": "commit"}, {"oid": "8f760a03f2ea19185aeb11a742bf4d6c97d5c79a", "url": "https://github.com/grpc/grpc-java/commit/8f760a03f2ea19185aeb11a742bf4d6c97d5c79a", "message": "Fix test that has empty channel_creds", "committedDate": "2020-09-11T00:17:04Z", "type": "commit"}, {"oid": "38112461273932325ff17546c5942ac7c9989817", "url": "https://github.com/grpc/grpc-java/commit/38112461273932325ff17546c5942ac7c9989817", "message": "Improve exception message.", "committedDate": "2020-09-11T00:17:17Z", "type": "commit"}]}