{"pr_number": 6610, "pr_title": "netty: fix a race for channelz at server transport creation", "pr_createdAt": "2020-01-15T20:43:33Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6610", "timeline": [{"oid": "98b11bdde4c792f9b817d7fed46dfcad5195140e", "url": "https://github.com/grpc/grpc-java/commit/98b11bdde4c792f9b817d7fed46dfcad5195140e", "message": "core,netty: fix a race for channelz at server transport creation", "committedDate": "2020-01-15T20:48:47Z", "type": "forcePushed"}, {"oid": "a4077bfe8be5d70741343a224af11fc472c1dc46", "url": "https://github.com/grpc/grpc-java/commit/a4077bfe8be5d70741343a224af11fc472c1dc46", "message": "netty: fix a race for channelz at server transport creation", "committedDate": "2020-01-15T21:00:14Z", "type": "commit"}, {"oid": "a4077bfe8be5d70741343a224af11fc472c1dc46", "url": "https://github.com/grpc/grpc-java/commit/a4077bfe8be5d70741343a224af11fc472c1dc46", "message": "netty: fix a race for channelz at server transport creation", "committedDate": "2020-01-15T21:00:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2MzM0Nw==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367163347", "bodyText": "Make a comment here that this requires the channel to have completed bind()ing.", "author": "ejona86", "createdAt": "2020-01-15T23:36:59Z", "path": "netty/src/main/java/io/grpc/netty/NettyServer.java", "diffHunk": "@@ -251,19 +251,10 @@ public void operationComplete(ChannelFuture future) throws Exception {\n       throw new IOException(\"Failed to bind\", future.cause());\n     }\n     channel = future.channel();\n-    Future<?> channelzFuture = channel.eventLoop().submit(new Runnable() {\n-      @Override\n-      public void run() {\n-        InternalInstrumented<SocketStats> listenSocket = new ListenSocket(channel);\n-        listenSocketStats.set(listenSocket);\n-        channelz.addListenSocket(listenSocket);\n-      }\n-    });\n-    try {\n-      channelzFuture.await();\n-    } catch (InterruptedException ex) {\n-      throw new RuntimeException(\"Interrupted while registering listen socket to channelz\", ex);\n-    }\n+\n+    InternalInstrumented<SocketStats> listenSocket = new ListenSocket(channel);", "originalCommit": "a4077bfe8be5d70741343a224af11fc472c1dc46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dab94306d0a4334bd5854cf6b79c4e2ff7cd9ae8", "chunk": "diff --git a/netty/src/main/java/io/grpc/netty/NettyServer.java b/netty/src/main/java/io/grpc/netty/NettyServer.java\nindex af48b0f42..478687b6a 100644\n--- a/netty/src/main/java/io/grpc/netty/NettyServer.java\n+++ b/netty/src/main/java/io/grpc/netty/NettyServer.java\n\n@@ -251,10 +249,13 @@ class NettyServer implements InternalServer, InternalWithLogId {\n       throw new IOException(\"Failed to bind\", future.cause());\n     }\n     channel = future.channel();\n-\n-    InternalInstrumented<SocketStats> listenSocket = new ListenSocket(channel);\n-    listenSocketStats.set(listenSocket);\n-    channelz.addListenSocket(listenSocket);\n+    channel.eventLoop().execute(new Runnable() {\n+      @Override\n+      public void run() {\n+        listenSocketStats = new ListenSocket(channel);\n+        channelz.addListenSocket(listenSocketStats);\n+      }\n+    });\n   }\n \n   @Override\n"}}, {"oid": "dab94306d0a4334bd5854cf6b79c4e2ff7cd9ae8", "url": "https://github.com/grpc/grpc-java/commit/dab94306d0a4334bd5854cf6b79c4e2ff7cd9ae8", "message": "add SocketStats in event loop", "committedDate": "2020-01-16T00:52:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2ODQyNQ==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367568425", "bodyText": "Binding is complete when start() returns, so I don't think this comment is accurate.", "author": "ejona86", "createdAt": "2020-01-16T18:03:44Z", "path": "netty/src/test/java/io/grpc/netty/NettyServerTest.java", "diffHunk": "@@ -239,8 +241,13 @@ public void serverShutdown() {\n         shutdownCompleted.set(null);\n       }\n     });\n+\n     assertThat(((InetSocketAddress) ns.getListenSocketAddress()).getPort()).isGreaterThan(0);\n \n+    Socket socket = new Socket();\n+    socket.connect(ns.getListenSocketAddress(), /* timeout= */ 8000);\n+    socket.close();\n+    countDownLatch.await(); // SocketStats won't be available until binding complete.", "originalCommit": "dab94306d0a4334bd5854cf6b79c4e2ff7cd9ae8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f07f0c5640ec2497857830825a06d4fc82557eea", "chunk": "diff --git a/netty/src/test/java/io/grpc/netty/NettyServerTest.java b/netty/src/test/java/io/grpc/netty/NettyServerTest.java\nindex b430c60b4..b4f6dfbc1 100644\n--- a/netty/src/test/java/io/grpc/netty/NettyServerTest.java\n+++ b/netty/src/test/java/io/grpc/netty/NettyServerTest.java\n\n@@ -247,7 +247,8 @@ public class NettyServerTest {\n     Socket socket = new Socket();\n     socket.connect(ns.getListenSocketAddress(), /* timeout= */ 8000);\n     socket.close();\n-    countDownLatch.await(); // SocketStats won't be available until binding complete.\n+    // SocketStats won't be available until the event loop task of adding SocketStats complete.\n+    countDownLatch.await();\n     InternalInstrumented<SocketStats> listenSocket = ns.getListenSocketStats();\n     assertSame(listenSocket, channelz.getSocket(id(listenSocket)));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MjIwNA==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367572204", "bodyText": "This works, but is a roundabout way of making sure the event loop has completed the runnable. Would it be better to Create a single EventLoop and pass that as the boss+worker EventLoopGroup to the NettyServer constructor? Then you can submit() your own Runnable and await its completion. We could use that same EventLoop for all the tests, really, if you'd prefer a @BeforeClass/@AfterClass to manage its lifetime.", "author": "ejona86", "createdAt": "2020-01-16T18:12:29Z", "path": "netty/src/test/java/io/grpc/netty/NettyServerTest.java", "diffHunk": "@@ -239,8 +241,13 @@ public void serverShutdown() {\n         shutdownCompleted.set(null);\n       }\n     });\n+\n     assertThat(((InetSocketAddress) ns.getListenSocketAddress()).getPort()).isGreaterThan(0);\n \n+    Socket socket = new Socket();", "originalCommit": "dab94306d0a4334bd5854cf6b79c4e2ff7cd9ae8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3NjA4MA==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367576080", "bodyText": "This roundabout is just copied from the test above it. Actually ns.getListenSocketStats() is not required to be called in the event loop. I'm not sure submit() is the most correct way to do it.", "author": "dapengzhang0", "createdAt": "2020-01-16T18:21:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MjIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU5ODM1Mw==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367598353", "bodyText": "The one above is actually checking the worker channel options. So creating a connection appropriate and necessary there.\nI agree ns.getListenSocketStats() isn't required to be done in the event loop, but I wasn't suggesting to call it from the event loop. I was suggesting:\neventLoop.submit(new Runnable() {\n    @Override public void run() {}\n}).await();\nInternalInstrumented<SocketStats> listenSocket = ns.getListenSocketStats();\n\nIt is just a synchronization barrier.", "author": "ejona86", "createdAt": "2020-01-16T19:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MjIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU5ODkyMw==", "url": "https://github.com/grpc/grpc-java/pull/6610#discussion_r367598923", "bodyText": "Done with fixed event loop pool.", "author": "dapengzhang0", "createdAt": "2020-01-16T19:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MjIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "f07f0c5640ec2497857830825a06d4fc82557eea", "chunk": "diff --git a/netty/src/test/java/io/grpc/netty/NettyServerTest.java b/netty/src/test/java/io/grpc/netty/NettyServerTest.java\nindex b430c60b4..b4f6dfbc1 100644\n--- a/netty/src/test/java/io/grpc/netty/NettyServerTest.java\n+++ b/netty/src/test/java/io/grpc/netty/NettyServerTest.java\n\n@@ -247,7 +247,8 @@ public class NettyServerTest {\n     Socket socket = new Socket();\n     socket.connect(ns.getListenSocketAddress(), /* timeout= */ 8000);\n     socket.close();\n-    countDownLatch.await(); // SocketStats won't be available until binding complete.\n+    // SocketStats won't be available until the event loop task of adding SocketStats complete.\n+    countDownLatch.await();\n     InternalInstrumented<SocketStats> listenSocket = ns.getListenSocketStats();\n     assertSame(listenSocket, channelz.getSocket(id(listenSocket)));\n \n"}}, {"oid": "f07f0c5640ec2497857830825a06d4fc82557eea", "url": "https://github.com/grpc/grpc-java/commit/f07f0c5640ec2497857830825a06d4fc82557eea", "message": "change comment", "committedDate": "2020-01-16T18:28:01Z", "type": "commit"}, {"oid": "7259df3ecb733a07f022551b1314f8dd2e16fdd5", "url": "https://github.com/grpc/grpc-java/commit/7259df3ecb733a07f022551b1314f8dd2e16fdd5", "message": "Use fix eventLoop pool in test", "committedDate": "2020-01-16T19:10:29Z", "type": "commit"}]}