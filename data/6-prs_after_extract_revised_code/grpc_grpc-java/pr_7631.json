{"pr_number": 7631, "pr_title": "xds: implement xds_cluster_impl LB policy with drop support and circuit breaking moved into it", "pr_createdAt": "2020-11-17T19:53:04Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7631", "timeline": [{"oid": "1111657f9f0d836936b154e3c54c7787cdbb484f", "url": "https://github.com/grpc/grpc-java/commit/1111657f9f0d836936b154e3c54c7787cdbb484f", "message": "Move CallCounterProvider interface definition into resolver provider", "committedDate": "2020-11-17T19:47:41Z", "type": "commit"}, {"oid": "e1e169c772e4afedcf5a72d58c0025ae37faa17d", "url": "https://github.com/grpc/grpc-java/commit/e1e169c772e4afedcf5a72d58c0025ae37faa17d", "message": "Implement cluster_impl LB policy which is used to handle drops and circuit breaking for each prioity.", "committedDate": "2020-11-17T19:49:04Z", "type": "commit"}, {"oid": "32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "url": "https://github.com/grpc/grpc-java/commit/32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "message": "Add provider", "committedDate": "2020-11-17T20:28:37Z", "type": "commit"}, {"oid": "32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "url": "https://github.com/grpc/grpc-java/commit/32c0aa93bf1dcea442a8a5d838735c4ffbd4dc77", "message": "Add provider", "committedDate": "2020-11-17T20:28:37Z", "type": "forcePushed"}, {"oid": "a8437ddd0c9c72d0b6bc4c29261e44b810ca83a3", "url": "https://github.com/grpc/grpc-java/commit/a8437ddd0c9c72d0b6bc4c29261e44b810ca83a3", "message": "Obtain the map for circuit breaking atomics in attributes.", "committedDate": "2020-11-19T22:25:12Z", "type": "commit"}, {"oid": "c9c5db98bdd2a9ac81b883fb57bddd84a8dde92f", "url": "https://github.com/grpc/grpc-java/commit/c9c5db98bdd2a9ac81b883fb57bddd84a8dde92f", "message": "Gate circuit breaking feature with env var.", "committedDate": "2020-11-19T22:33:53Z", "type": "commit"}, {"oid": "b88b5a92d755d298258e9d45b65b8eae6a243d79", "url": "https://github.com/grpc/grpc-java/commit/b88b5a92d755d298258e9d45b65b8eae6a243d79", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/implement_cluster_impl_lb_policy", "committedDate": "2020-11-19T23:51:35Z", "type": "commit"}, {"oid": "c40bd0c23dfc8991f96bd4084fb76cec5d1817c2", "url": "https://github.com/grpc/grpc-java/commit/c40bd0c23dfc8991f96bd4084fb76cec5d1817c2", "message": "Delete logics of handling drops and circuit breakers in EDS LB policy.", "committedDate": "2020-11-20T20:27:47Z", "type": "commit"}, {"oid": "15d5042d13ad2f87387364ed25b04fc57a33bcdd", "url": "https://github.com/grpc/grpc-java/commit/15d5042d13ad2f87387364ed25b04fc57a33bcdd", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/implement_cluster_impl_lb_policy", "committedDate": "2020-11-20T20:32:53Z", "type": "commit"}, {"oid": "b40ad526a537b541b60774ff4fb9f2d982c4b11c", "url": "https://github.com/grpc/grpc-java/commit/b40ad526a537b541b60774ff4fb9f2d982c4b11c", "message": "Fix EDS LB policy tests.", "committedDate": "2020-11-21T01:11:57Z", "type": "forcePushed"}, {"oid": "e993875bad7f7515bd71984df4202076ba5e9dea", "url": "https://github.com/grpc/grpc-java/commit/e993875bad7f7515bd71984df4202076ba5e9dea", "message": "Fix EDS LB policy tests.", "committedDate": "2020-11-21T07:41:32Z", "type": "forcePushed"}, {"oid": "e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "url": "https://github.com/grpc/grpc-java/commit/e1d517ad0c675e8ca7e7e1c8ac1f34ca22364c0d", "message": "Fix EDS LB policy tests.", "committedDate": "2020-11-22T23:42:17Z", "type": "forcePushed"}, {"oid": "e7699fa3c465a7077e2016e7efd08f037896952d", "url": "https://github.com/grpc/grpc-java/commit/e7699fa3c465a7077e2016e7efd08f037896952d", "message": "Fix EDS LB policy tests.", "committedDate": "2020-11-23T18:54:24Z", "type": "commit"}, {"oid": "e7699fa3c465a7077e2016e7efd08f037896952d", "url": "https://github.com/grpc/grpc-java/commit/e7699fa3c465a7077e2016e7efd08f037896952d", "message": "Fix EDS LB policy tests.", "committedDate": "2020-11-23T18:54:24Z", "type": "forcePushed"}, {"oid": "80fcf80890485bda33ddc56a88821399803eefc0", "url": "https://github.com/grpc/grpc-java/commit/80fcf80890485bda33ddc56a88821399803eefc0", "message": "Update child policy config only after endpoints are resolved.", "committedDate": "2020-11-23T21:03:39Z", "type": "forcePushed"}, {"oid": "40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "url": "https://github.com/grpc/grpc-java/commit/40464ec0597805cc51dfaed7ca4e6a5ca319c5f0", "message": "Update child policy config only after endpoints are resolved.", "committedDate": "2020-11-23T21:04:38Z", "type": "forcePushed"}, {"oid": "76025cf35730f116e9a1f9235e183c85a948d41a", "url": "https://github.com/grpc/grpc-java/commit/76025cf35730f116e9a1f9235e183c85a948d41a", "message": "Update child policy config only after endpoints are resolved.", "committedDate": "2020-11-23T21:06:44Z", "type": "commit"}, {"oid": "76025cf35730f116e9a1f9235e183c85a948d41a", "url": "https://github.com/grpc/grpc-java/commit/76025cf35730f116e9a1f9235e183c85a948d41a", "message": "Update child policy config only after endpoints are resolved.", "committedDate": "2020-11-23T21:06:44Z", "type": "forcePushed"}, {"oid": "3f550af197b29692404c11da797c61cdde8aa0cb", "url": "https://github.com/grpc/grpc-java/commit/3f550af197b29692404c11da797c61cdde8aa0cb", "message": "Fix propagating config to downstream LB policies.", "committedDate": "2020-11-24T00:51:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MjgwNQ==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532852805", "bodyText": "Should check resolvedAddresses  != null first?", "author": "dapengzhang0", "createdAt": "2020-11-30T19:41:40Z", "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer2.java", "diffHunk": "@@ -318,27 +269,7 @@ public void run() {\n             if (lb == null) {\n               lb = lbRegistry.getProvider(PRIORITY_POLICY_NAME).newLoadBalancer(lbHelper);\n             }\n-            if (localityPickingPolicy != null && endpointPickingPolicy != null) {\n-              PriorityLbConfig config = generatePriorityLbConfig(cluster, edsServiceName,\n-                  lrsServerName, localityPickingPolicy, endpointPickingPolicy, lbRegistry,\n-                  prioritizedLocalityWeights);\n-              // TODO(chengyuanzhang): to be deleted after migrating to use XdsClient API.\n-              Attributes attributes;\n-              if (lrsServerName != null) {\n-                attributes =\n-                    resolvedAddresses.getAttributes().toBuilder()\n-                        .set(XdsAttributes.ATTR_CLUSTER_SERVICE_LOAD_STATS_STORE, loadStatsStore)\n-                        .build();\n-              } else {\n-                attributes = resolvedAddresses.getAttributes();\n-              }\n-              lb.handleResolvedAddresses(\n-                  resolvedAddresses.toBuilder()\n-                      .setAddresses(endpointAddresses)\n-                      .setAttributes(attributes)\n-                      .setLoadBalancingPolicyConfig(config)\n-                      .build());\n-            }\n+            handleResourceUpdate();", "originalCommit": "3f550af197b29692404c11da797c61cdde8aa0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwNzU0NQ==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r534407545", "bodyText": "The instantiation of ChildLbState is always followed by an invocation of handleResolvedAddresses(). So when onChanged() is being executed, resolvedAddresses will always have value.", "author": "voidzcy", "createdAt": "2020-12-02T18:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MjgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc2OTUyOA==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r535769528", "bodyText": "Well yes, it's invoked by switchingLoadBalancer.handleResolvedAddresses(). It's safe to check but that's alright.", "author": "dapengzhang0", "createdAt": "2020-12-04T01:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MjgwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1Njk2MQ==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532856961", "bodyText": "Document what this hierarchy does?", "author": "dapengzhang0", "createdAt": "2020-11-30T19:47:59Z", "path": "xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.xds.XdsSubchannelPickers.BUFFER_PICKER;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Attributes;\n+import io.grpc.ClientStreamTracer;\n+import io.grpc.ClientStreamTracer.StreamInfo;\n+import io.grpc.ConnectivityState;\n+import io.grpc.InternalLogId;\n+import io.grpc.LoadBalancer;\n+import io.grpc.Metadata;\n+import io.grpc.Status;\n+import io.grpc.internal.ObjectPool;\n+import io.grpc.util.ForwardingClientStreamTracer;\n+import io.grpc.util.ForwardingLoadBalancerHelper;\n+import io.grpc.xds.ClusterImplLoadBalancerProvider.ClusterImplConfig;\n+import io.grpc.xds.EnvoyProtoData.DropOverload;\n+import io.grpc.xds.LoadStatsManager.LoadStatsStore;\n+import io.grpc.xds.ThreadSafeRandom.ThreadSafeRandomImpl;\n+import io.grpc.xds.XdsLogger.XdsLogLevel;\n+import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n+import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n+ * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n+ * LB policy in the xDS load balancing hierarchy.", "originalCommit": "3f550af197b29692404c11da797c61cdde8aa0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyMjIyMg==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r534422222", "bodyText": "Added a bit description.", "author": "voidzcy", "createdAt": "2020-12-02T19:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1Njk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5dd27869291617af8e8795e975f8d84db56f2640", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java b/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\nindex c1b0e0fae..8ada270db 100644\n--- a/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\n+++ b/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\n\n@@ -40,13 +40,16 @@ import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Objects;\n import java.util.concurrent.atomic.AtomicLong;\n import javax.annotation.Nullable;\n \n /**\n  * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n  * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n- * LB policy in the xDS load balancing hierarchy.\n+ * LB policy in the xDS load balancing hierarchy. This LB policy applies cluster-level\n+ * configurations to requests sent to the corresponding cluster, such as drop policies, circuit\n+ * breakers.\n  */\n final class ClusterImplLoadBalancer extends LoadBalancer {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NTU5Mg==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r532865592", "bodyText": "Is that possible maxConcurrentRequests changes from non-null to null?", "author": "dapengzhang0", "createdAt": "2020-11-30T19:56:02Z", "path": "xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java", "diffHunk": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static io.grpc.xds.XdsSubchannelPickers.BUFFER_PICKER;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import io.grpc.Attributes;\n+import io.grpc.ClientStreamTracer;\n+import io.grpc.ClientStreamTracer.StreamInfo;\n+import io.grpc.ConnectivityState;\n+import io.grpc.InternalLogId;\n+import io.grpc.LoadBalancer;\n+import io.grpc.Metadata;\n+import io.grpc.Status;\n+import io.grpc.internal.ObjectPool;\n+import io.grpc.util.ForwardingClientStreamTracer;\n+import io.grpc.util.ForwardingLoadBalancerHelper;\n+import io.grpc.xds.ClusterImplLoadBalancerProvider.ClusterImplConfig;\n+import io.grpc.xds.EnvoyProtoData.DropOverload;\n+import io.grpc.xds.LoadStatsManager.LoadStatsStore;\n+import io.grpc.xds.ThreadSafeRandom.ThreadSafeRandomImpl;\n+import io.grpc.xds.XdsLogger.XdsLogLevel;\n+import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n+import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicLong;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n+ * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n+ * LB policy in the xDS load balancing hierarchy.\n+ */\n+final class ClusterImplLoadBalancer extends LoadBalancer {\n+\n+  @VisibleForTesting\n+  static final long DEFAULT_PER_CLUSTER_MAX_CONCURRENT_REQUESTS = 1024L;\n+  @VisibleForTesting\n+  static boolean enableCircuitBreaking =\n+      Boolean.parseBoolean(System.getenv(\"GRPC_XDS_EXPERIMENTAL_CIRCUIT_BREAKING\"));\n+\n+  private final XdsLogger logger;\n+  private final Helper helper;\n+  private final ThreadSafeRandom random;\n+  // The following fields are effectively final.\n+  private String cluster;\n+  @Nullable\n+  private String edsServiceName;\n+  private ObjectPool<XdsClient> xdsClientPool;\n+  private XdsClient xdsClient;\n+  private CallCounterProvider callCounterProvider;\n+  private LoadStatsStore loadStatsStore;\n+  private RequestLimitingLbHelper childLbHelper;\n+  private LoadBalancer childLb;\n+\n+  ClusterImplLoadBalancer(Helper helper) {\n+    this(helper, ThreadSafeRandomImpl.instance);\n+  }\n+\n+  ClusterImplLoadBalancer(Helper helper, ThreadSafeRandom random) {\n+    this.helper = checkNotNull(helper, \"helper\");\n+    this.random = checkNotNull(random, \"random\");\n+    InternalLogId logId = InternalLogId.allocate(\"cluster-impl-lb\", helper.getAuthority());\n+    logger = XdsLogger.withLogId(logId);\n+    logger.log(XdsLogLevel.INFO, \"Created\");\n+  }\n+\n+  @Override\n+  public void handleResolvedAddresses(ResolvedAddresses resolvedAddresses) {\n+    logger.log(XdsLogLevel.DEBUG, \"Received resolution result: {0}\", resolvedAddresses);\n+    Attributes attributes = resolvedAddresses.getAttributes();\n+    if (xdsClientPool == null) {\n+      xdsClientPool = attributes.get(XdsAttributes.XDS_CLIENT_POOL);\n+      xdsClient = xdsClientPool.getObject();\n+    }\n+    if (callCounterProvider == null) {\n+      callCounterProvider = attributes.get(XdsAttributes.CALL_COUNTER_PROVIDER);\n+    }\n+    ClusterImplConfig config =\n+        (ClusterImplConfig) resolvedAddresses.getLoadBalancingPolicyConfig();\n+    if (cluster == null) {\n+      cluster = config.cluster;\n+      edsServiceName = config.edsServiceName;\n+      childLbHelper = new RequestLimitingLbHelper(\n+          callCounterProvider.getOrCreate(config.cluster, config.edsServiceName));\n+      childLb = config.childPolicy.getProvider().newLoadBalancer(childLbHelper);\n+      // Assume load report server does not change throughout cluster lifetime.\n+      if (config.lrsServerName != null) {\n+        if (config.lrsServerName.isEmpty()) {\n+          loadStatsStore = xdsClient.addClientStats(cluster, edsServiceName);\n+        } else {\n+          logger.log(XdsLogLevel.WARNING, \"Can only report load to the same management server\");\n+        }\n+      }\n+    }\n+    childLbHelper.updateDropPolicies(config.dropCategories);\n+    if (config.maxConcurrentRequests != null) {\n+      childLbHelper.updateMaxConcurrentRequests(config.maxConcurrentRequests);\n+    }", "originalCommit": "3f550af197b29692404c11da797c61cdde8aa0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQyMjA4Nw==", "url": "https://github.com/grpc/grpc-java/pull/7631#discussion_r534422087", "bodyText": "Yeah, the code should be able to handle such updates. Fixed.", "author": "voidzcy", "createdAt": "2020-12-02T19:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NTU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5dd27869291617af8e8795e975f8d84db56f2640", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java b/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\nindex c1b0e0fae..8ada270db 100644\n--- a/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\n+++ b/xds/src/main/java/io/grpc/xds/ClusterImplLoadBalancer.java\n\n@@ -40,13 +40,16 @@ import io.grpc.xds.XdsNameResolverProvider.CallCounterProvider;\n import io.grpc.xds.XdsSubchannelPickers.ErrorPicker;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Objects;\n import java.util.concurrent.atomic.AtomicLong;\n import javax.annotation.Nullable;\n \n /**\n  * Load balancer for cluster_impl_experimental LB policy. This LB policy is the child LB policy of\n  * the priority_experimental LB policy and the parent LB policy of the weighted_target_experimental\n- * LB policy in the xDS load balancing hierarchy.\n+ * LB policy in the xDS load balancing hierarchy. This LB policy applies cluster-level\n+ * configurations to requests sent to the corresponding cluster, such as drop policies, circuit\n+ * breakers.\n  */\n final class ClusterImplLoadBalancer extends LoadBalancer {\n \n"}}, {"oid": "5dd27869291617af8e8795e975f8d84db56f2640", "url": "https://github.com/grpc/grpc-java/commit/5dd27869291617af8e8795e975f8d84db56f2640", "message": "Fix updating maxConcurrentRequests back to default value when the config updates so.", "committedDate": "2020-12-02T19:20:02Z", "type": "commit"}]}