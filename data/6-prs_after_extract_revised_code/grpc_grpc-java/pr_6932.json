{"pr_number": 6932, "pr_title": "xds: allow duplicated route matcher and prefix='/'", "pr_createdAt": "2020-04-15T23:42:47Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6932", "timeline": [{"oid": "bbed440bddd3e7b13003d62a5e8409df2921c151", "url": "https://github.com/grpc/grpc-java/commit/bbed440bddd3e7b13003d62a5e8409df2921c151", "message": "xds: allow duplicated route matcher and prefix='/'", "committedDate": "2020-04-15T23:38:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1ODk5OQ==", "url": "https://github.com/grpc/grpc-java/pull/6932#discussion_r409358999", "bodyText": "Isn't duplicate allowed?", "author": "voidzcy", "createdAt": "2020-04-16T08:02:19Z", "path": "xds/src/main/java/io/grpc/xds/XdsClientImpl.java", "diffHunk": "@@ -944,35 +942,28 @@ private static String validateRoutes(List<EnvoyProtoData.Route> routes) {\n       }\n \n       RouteMatch routeMatch = route.getRouteMatch();\n-      String prefix = routeMatch.getPrefix();\n-      String path = routeMatch.getPath();\n-      if (!prefix.isEmpty()) {\n-        if (!prefix.startsWith(\"/\") || !prefix.endsWith(\"/\") || prefix.length() < 3) {\n-          return \"Prefix route match must be in the format of '/service/'\";\n-        }\n-        if (prefixMatches.contains(prefix)) {\n-          return \"Duplicate prefix match found\";\n-        }\n-        prefixMatches.add(prefix);\n-      } else if (!path.isEmpty()) {\n-        int lastSlash = path.lastIndexOf('/');\n-        if (!path.startsWith(\"/\") || lastSlash == 0 || lastSlash ==  path.length() - 1) {\n-          return \"Path route match must be in the format of '/service/method'\";\n-        }\n-        if (pathMatches.contains(path)) {\n-          return \"Duplicate path match found\";\n-        }\n-        pathMatches.add(path);\n-      } else if (routeMatch.hasRegex()) {\n-        return \"Regex route match not supported\";\n-      } else { // Default route match\n-        if (i != routes.size() - 1) {\n-          return \"Default route found but is not the last route in the route list\";\n+      if (!routeMatch.isDefaultMatcher()) {\n+        String prefix = routeMatch.getPrefix();\n+        String path = routeMatch.getPath();\n+        if (!prefix.isEmpty()) {\n+          if (!prefix.startsWith(\"/\") || !prefix.endsWith(\"/\") || prefix.length() < 3) {\n+            return \"Prefix route match must be in the format of '/service/'\";\n+          }\n+        } else if (!path.isEmpty()) {\n+          int lastSlash = path.lastIndexOf('/');\n+          if (!path.startsWith(\"/\") || lastSlash == 0 || lastSlash == path.length() - 1) {\n+            return \"Path route match must be in the format of '/service/method'\";\n+          }\n+          if (pathMatches.contains(path)) {\n+            return \"Duplicate path match found\";", "originalCommit": "bbed440bddd3e7b13003d62a5e8409df2921c151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5ODM1OQ==", "url": "https://github.com/grpc/grpc-java/pull/6932#discussion_r409698359", "bodyText": "good catch, I miss that for path.", "author": "dapengzhang0", "createdAt": "2020-04-16T16:41:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1ODk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxOTkwNw==", "url": "https://github.com/grpc/grpc-java/pull/6932#discussion_r409819907", "bodyText": "Fixed.", "author": "dapengzhang0", "createdAt": "2020-04-16T20:10:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1ODk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b36831c19f34454a06d5ec9f9b2a5634d1940028", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/XdsClientImpl.java b/xds/src/main/java/io/grpc/xds/XdsClientImpl.java\nindex ffecdc331..96dbc9b2d 100644\n--- a/xds/src/main/java/io/grpc/xds/XdsClientImpl.java\n+++ b/xds/src/main/java/io/grpc/xds/XdsClientImpl.java\n\n@@ -933,14 +933,12 @@ final class XdsClientImpl extends XdsClient {\n     // For now we consider the whole list invalid if anything invalid for grpc is found.\n     // TODO(zdapeng): Fix it if the decision is different from current implementation.\n     // TODO(zdapeng): Add test for validation.\n-    Set<String> pathMatches = new HashSet<>();\n     for (int i = 0; i < routes.size(); i++) {\n       EnvoyProtoData.Route route = routes.get(i);\n-\n-      if (route.getRouteAction() == null) {\n+      RouteAction routeAction = route.getRouteAction();\n+      if (routeAction == null) {\n         return \"Route action is not specified for one of the routes\";\n       }\n-\n       RouteMatch routeMatch = route.getRouteMatch();\n       if (!routeMatch.isDefaultMatcher()) {\n         String prefix = routeMatch.getPrefix();\n"}}, {"oid": "b36831c19f34454a06d5ec9f9b2a5634d1940028", "url": "https://github.com/grpc/grpc-java/commit/b36831c19f34454a06d5ec9f9b2a5634d1940028", "message": "allow duplicate path and add regression test", "committedDate": "2020-04-16T20:13:42Z", "type": "forcePushed"}, {"oid": "781ae3d484f3a37cfbd91d0428541178ba28186c", "url": "https://github.com/grpc/grpc-java/commit/781ae3d484f3a37cfbd91d0428541178ba28186c", "message": "allow duplicate path and add regression test", "committedDate": "2020-04-16T20:15:54Z", "type": "commit"}, {"oid": "781ae3d484f3a37cfbd91d0428541178ba28186c", "url": "https://github.com/grpc/grpc-java/commit/781ae3d484f3a37cfbd91d0428541178ba28186c", "message": "allow duplicate path and add regression test", "committedDate": "2020-04-16T20:15:54Z", "type": "forcePushed"}]}