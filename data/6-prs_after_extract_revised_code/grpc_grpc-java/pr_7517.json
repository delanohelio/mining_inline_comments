{"pr_number": 7517, "pr_title": "xds: implement xDS circuit breaking max_requests", "pr_createdAt": "2020-10-13T19:44:04Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7517", "timeline": [{"oid": "16f30e706460d0de5cdb7043671aa51d39cbf16f", "url": "https://github.com/grpc/grpc-java/commit/16f30e706460d0de5cdb7043671aa51d39cbf16f", "message": "Add a new API on stats object for recording uncategorized drops.", "committedDate": "2020-10-13T19:39:01Z", "type": "commit"}, {"oid": "2212e169deee12c9f27c696b184ab03215b64f03", "url": "https://github.com/grpc/grpc-java/commit/2212e169deee12c9f27c696b184ab03215b64f03", "message": "Add field maxConcurrentRequets in CdsUpdate.", "committedDate": "2020-10-13T19:39:40Z", "type": "commit"}, {"oid": "4533b881abb8b5b9619a10ead78c00f31f73a205", "url": "https://github.com/grpc/grpc-java/commit/4533b881abb8b5b9619a10ead78c00f31f73a205", "message": "Add maxConcurrentRequests field in the EDS LB config.", "committedDate": "2020-10-13T19:40:16Z", "type": "commit"}, {"oid": "60168b204e51e2c6c5e952b46870beeb7282909f", "url": "https://github.com/grpc/grpc-java/commit/60168b204e51e2c6c5e952b46870beeb7282909f", "message": "Retrieve circuit breaker info from CDS responses.", "committedDate": "2020-10-13T19:43:15Z", "type": "commit"}, {"oid": "ff89007ea47ec5c6ac2332f496f46325b988ba87", "url": "https://github.com/grpc/grpc-java/commit/ff89007ea47ec5c6ac2332f496f46325b988ba87", "message": "Generate EDS LB config with max_concurrent_requests in CDS LB policy.", "committedDate": "2020-10-13T19:43:23Z", "type": "commit"}, {"oid": "8d59edce44de41f6691131d8bdd2fb8c8cdb5334", "url": "https://github.com/grpc/grpc-java/commit/8d59edce44de41f6691131d8bdd2fb8c8cdb5334", "message": "Implement and test circuit breaking max_concurrent_requests feature in the EDS lb policy.", "committedDate": "2020-10-13T19:43:23Z", "type": "commit"}, {"oid": "17c8707dabd87b4797f93ec126becf0a912f558d", "url": "https://github.com/grpc/grpc-java/commit/17c8707dabd87b4797f93ec126becf0a912f558d", "message": "Fix typo.", "committedDate": "2020-10-13T20:27:35Z", "type": "commit"}, {"oid": "d2efcbe05d732c408a031da77fec853f662a741a", "url": "https://github.com/grpc/grpc-java/commit/d2efcbe05d732c408a031da77fec853f662a741a", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_circuit_breaking", "committedDate": "2020-10-23T17:48:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r512160359", "bodyText": "If result is a buffering result, should we drop the request immediately as well?", "author": "dapengzhang0", "createdAt": "2020-10-26T17:56:54Z", "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer2.java", "diffHunk": "@@ -398,7 +393,97 @@ protected Helper delegate() {\n         private void updateDropPolicies(List<DropOverload> dropOverloads) {\n           dropPolicies = dropOverloads;\n         }\n+\n+        private void updateMaxConcurrentRequests(long maxConcurrentRequests) {\n+          this.maxConcurrentRequests = maxConcurrentRequests;\n+        }\n+\n+        private final class RequestLimitingSubchannelPicker extends SubchannelPicker {\n+          private final SubchannelPicker delegate;\n+          private final List<DropOverload> dropPolicies;\n+          private final long maxConcurrentRequests;\n+\n+          private RequestLimitingSubchannelPicker(SubchannelPicker delegate,\n+              List<DropOverload> dropPolicies, long maxConcurrentRequests) {\n+            this.delegate = delegate;\n+            this.dropPolicies = dropPolicies;\n+            this.maxConcurrentRequests = maxConcurrentRequests;\n+          }\n+\n+          @Override\n+          public PickResult pickSubchannel(PickSubchannelArgs args) {\n+            for (DropOverload dropOverload : dropPolicies) {\n+              int rand = random.nextInt(1_000_000);\n+              if (rand < dropOverload.getDropsPerMillion()) {\n+                logger.log(XdsLogLevel.INFO, \"Drop request with category: {0}\",\n+                    dropOverload.getCategory());\n+                if (loadStatsStore != null) {\n+                  loadStatsStore.recordDroppedRequest(dropOverload.getCategory());\n+                }\n+                return PickResult.withDrop(\n+                    Status.UNAVAILABLE.withDescription(\"Dropped: \" + dropOverload.getCategory()));\n+              }\n+            }\n+            PickResult result = delegate.pickSubchannel(args);\n+            if (result.getStatus().isOk() && result.getSubchannel() != null) {\n+              if (requestCount.get() >= maxConcurrentRequests) {", "originalCommit": "d2efcbe05d732c408a031da77fec853f662a741a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2NTk3Nw==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r512165977", "bodyText": "result.getSubchannel() != null should be the thing to cover it.", "author": "voidzcy", "createdAt": "2020-10-26T18:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MTA1OQ==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r512171059", "bodyText": "I think for buffering result (result.getStatus().isOk() && result.getSubchannel() == null), it should also be dropped immediately.", "author": "dapengzhang0", "createdAt": "2020-10-26T18:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MDkwMg==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r512180902", "bodyText": "Why? It will cause RPCs to be dropped prematurely. We shouldn't do anything to buffer result. The channel will handle it correctly.", "author": "voidzcy", "createdAt": "2020-10-26T18:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg4NjQzNA==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r514886434", "bodyText": "If requestCount.get() >= maxConcurrentRequest it should drop the RPC regardless of the subchannel's readiness. What's dropped prematurely?", "author": "dapengzhang0", "createdAt": "2020-10-30T05:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkwMTU3MA==", "url": "https://github.com/grpc/grpc-java/pull/7517#discussion_r514901570", "bodyText": "No, that should not count toward the number of dropped requests. Also, it doesn't make sense to override the non-ready picker with a drop picker.", "author": "voidzcy", "createdAt": "2020-10-30T06:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDM1OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "da8b7c2049ff2497bbc7a3a76c1bc40aa5ff2d2d", "url": "https://github.com/grpc/grpc-java/commit/da8b7c2049ff2497bbc7a3a76c1bc40aa5ff2d2d", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_circuit_breaking", "committedDate": "2020-10-29T00:04:38Z", "type": "commit"}, {"oid": "6895129cdfdb741d036efacb6572d0e6f529fd77", "url": "https://github.com/grpc/grpc-java/commit/6895129cdfdb741d036efacb6572d0e6f529fd77", "message": "Sync with updated XdsClient implementation.", "committedDate": "2020-10-29T01:04:54Z", "type": "commit"}, {"oid": "0974ec31a1511ecaed49f4eef4b4e57b099eb06f", "url": "https://github.com/grpc/grpc-java/commit/0974ec31a1511ecaed49f4eef4b4e57b099eb06f", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_circuit_breaking", "committedDate": "2020-10-30T00:23:05Z", "type": "commit"}, {"oid": "a877e529eac795b8dd46a54dd9e6e3ae74411ba2", "url": "https://github.com/grpc/grpc-java/commit/a877e529eac795b8dd46a54dd9e6e3ae74411ba2", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_circuit_breaking", "committedDate": "2020-11-02T20:27:46Z", "type": "commit"}, {"oid": "b9cc4170b85c14d8878ec298c3b25b991ddb54c6", "url": "https://github.com/grpc/grpc-java/commit/b9cc4170b85c14d8878ec298c3b25b991ddb54c6", "message": "Remove unncessary (and incorrect) number masking.", "committedDate": "2020-11-02T20:33:15Z", "type": "commit"}]}