{"pr_number": 6737, "pr_title": "xds: update LRS protocol and fix usage of cluster name in ClusterStats", "pr_createdAt": "2020-02-21T00:13:09Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6737", "timeline": [{"oid": "1e28684b628a2269f4d16f0da3a1272d6298dfee", "url": "https://github.com/grpc/grpc-java/commit/1e28684b628a2269f4d16f0da3a1272d6298dfee", "message": "Add cluster name field in EDS LB config. Temporarily make it optional (it should be required).", "committedDate": "2020-02-20T20:46:10Z", "type": "commit"}, {"oid": "c13271cfdc99f1439d147d8fd2ff1d143fe2de20", "url": "https://github.com/grpc/grpc-java/commit/c13271cfdc99f1439d147d8fd2ff1d143fe2de20", "message": "Let XdsClient return an CdsUpdate that contains exactly what an CDS response contains. That is, if edsServiceName field is unset, leave it null.", "committedDate": "2020-02-20T20:47:57Z", "type": "commit"}, {"oid": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "url": "https://github.com/grpc/grpc-java/commit/d7b6d6f0d8f378777215850fd4db5707fb6a403a", "message": "Change LoadReportClient for correct implementation of LRS protocol.", "committedDate": "2020-02-21T00:04:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0MjY0Mg==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382342642", "bodyText": "cluster =, childPolicy = to be consistent. childPolicy not needed because it has a meaningful type.", "author": "dapengzhang0", "createdAt": "2020-02-21T00:53:59Z", "path": "xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java", "diffHunk": "@@ -280,11 +280,14 @@ public void onClusterChanged(ClusterUpdate newUpdate) {\n           newUpdate.getLbPolicy().equals(\"round_robin\"),\n           \"The load balancing policy in ClusterUpdate '%s' is not supported\", newUpdate);\n \n-      final XdsConfig edsConfig = new XdsConfig(\n-          new LbConfig(newUpdate.getLbPolicy(), ImmutableMap.<String, Object>of()),\n-          /* fallbackPolicy = */ null,\n-          /* edsServiceName = */ newUpdate.getEdsServiceName(),\n-          /* lrsServerName = */ newUpdate.getLrsServerName());\n+      final XdsConfig edsConfig =\n+          new XdsConfig(\n+              /* cluster */newUpdate.getClusterName(),", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MDQyMw==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382770423", "bodyText": "Done.", "author": "voidzcy", "createdAt": "2020-02-21T19:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0MjY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java b/xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java\nindex 4c44fc4be..832e365b9 100644\n--- a/xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java\n+++ b/xds/src/main/java/io/grpc/xds/CdsLoadBalancer.java\n\n@@ -282,8 +282,7 @@ public final class CdsLoadBalancer extends LoadBalancer {\n \n       final XdsConfig edsConfig =\n           new XdsConfig(\n-              /* cluster */newUpdate.getClusterName(),\n-              /* childPolicy */\n+              /* cluster = */ newUpdate.getClusterName(),\n               new LbConfig(newUpdate.getLbPolicy(), ImmutableMap.<String, Object>of()),\n               /* fallbackPolicy = */ null,\n               /* edsServiceName = */ newUpdate.getEdsServiceName(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MDc5OQ==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382350799", "bodyText": "Did you forget to change EdsLoadBalancer.shutdown() back?", "author": "dapengzhang0", "createdAt": "2020-02-21T01:24:04Z", "path": "xds/src/main/java/io/grpc/xds/EdsLoadBalancer.java", "diffHunk": "@@ -303,8 +298,12 @@ public boolean canHandleEmptyAddressListFromNameResolution() {\n \n       @Override\n       public void shutdown() {\n+        if (isReportingLoad) {", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MjkyMQ==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382772921", "bodyText": "Oh, my bad. Changed. Thanks.", "author": "voidzcy", "createdAt": "2020-02-21T19:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MDc5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MzYyMQ==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382353621", "bodyText": "You can use %s placeholder and varargs to avoid stringcat.", "author": "dapengzhang0", "createdAt": "2020-02-21T01:34:36Z", "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -132,37 +143,35 @@ public void stopLoadReporting() {\n    * Provides this LoadReportClient source of load stats data for the given\n    * cluster:cluster_service. If requested, data from the given loadStatsStore is\n    * periodically queried and sent to traffic director by this LoadReportClient.\n-   *\n-   * <p>Currently we expect load stats data for all clusters to report loads for are provided\n-   * before load reporting starts (so that LRS initial request tells management server clusters\n-   * it is reporting loads for). Design TBD for reporting loads for extra clusters after load\n-   * reporting has started.\n-   *\n-   * <p>Note: currently clusterServiceName is always unset.\n    */\n-  public void addLoadStatsStore(\n+  void addLoadStatsStore(\n       String clusterName, @Nullable String clusterServiceName, LoadStatsStore loadStatsStore) {\n     checkState(\n-        !loadStatsStoreMap.containsKey(clusterName),\n-        \"load stats for cluster \" + clusterName + \" already exists\");\n-    // FIXME(chengyuanzhang): relax this restriction after design is fleshed out.\n-    checkState(\n-        !started,\n-        \"load stats for all clusters to report loads for should be provided before \"\n-            + \"load reporting has started\");\n-    loadStatsStoreMap.put(clusterName, loadStatsStore);\n+        !loadStatsStoreMap.containsKey(clusterName)\n+            || !loadStatsStoreMap.get(clusterName).containsKey(clusterServiceName),\n+        \"load stats for cluster: \" + clusterName + \", cluster service: \"", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MDQ3NQ==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382770475", "bodyText": "Done.", "author": "voidzcy", "createdAt": "2020-02-21T19:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MzYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/LoadReportClient.java b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\nindex 4142220d5..0d09028ae 100644\n--- a/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n+++ b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n\n@@ -149,8 +148,8 @@ final class LoadReportClient {\n     checkState(\n         !loadStatsStoreMap.containsKey(clusterName)\n             || !loadStatsStoreMap.get(clusterName).containsKey(clusterServiceName),\n-        \"load stats for cluster: \" + clusterName + \", cluster service: \"\n-            + clusterServiceName + \" already exists\");\n+        \"load stats for cluster: %s, cluster service: %s already exists\",\n+        clusterName, clusterServiceName);\n     if (!loadStatsStoreMap.containsKey(clusterName)) {\n       loadStatsStoreMap.put(clusterName, new HashMap<String, LoadStatsStore>());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDY5Ng==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382354696", "bodyText": "Ditto.", "author": "dapengzhang0", "createdAt": "2020-02-21T01:38:59Z", "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -132,37 +143,35 @@ public void stopLoadReporting() {\n    * Provides this LoadReportClient source of load stats data for the given\n    * cluster:cluster_service. If requested, data from the given loadStatsStore is\n    * periodically queried and sent to traffic director by this LoadReportClient.\n-   *\n-   * <p>Currently we expect load stats data for all clusters to report loads for are provided\n-   * before load reporting starts (so that LRS initial request tells management server clusters\n-   * it is reporting loads for). Design TBD for reporting loads for extra clusters after load\n-   * reporting has started.\n-   *\n-   * <p>Note: currently clusterServiceName is always unset.\n    */\n-  public void addLoadStatsStore(\n+  void addLoadStatsStore(\n       String clusterName, @Nullable String clusterServiceName, LoadStatsStore loadStatsStore) {\n     checkState(\n-        !loadStatsStoreMap.containsKey(clusterName),\n-        \"load stats for cluster \" + clusterName + \" already exists\");\n-    // FIXME(chengyuanzhang): relax this restriction after design is fleshed out.\n-    checkState(\n-        !started,\n-        \"load stats for all clusters to report loads for should be provided before \"\n-            + \"load reporting has started\");\n-    loadStatsStoreMap.put(clusterName, loadStatsStore);\n+        !loadStatsStoreMap.containsKey(clusterName)\n+            || !loadStatsStoreMap.get(clusterName).containsKey(clusterServiceName),\n+        \"load stats for cluster: \" + clusterName + \", cluster service: \"\n+            + clusterServiceName + \" already exists\");\n+    if (!loadStatsStoreMap.containsKey(clusterName)) {\n+      loadStatsStoreMap.put(clusterName, new HashMap<String, LoadStatsStore>());\n+    }\n+    Map<String, LoadStatsStore> clusterLoadStatsStores = loadStatsStoreMap.get(clusterName);\n+    clusterLoadStatsStores.put(clusterServiceName, loadStatsStore);\n   }\n \n   /**\n    * Stops providing load stats data for the given cluster:cluster_service.\n-   *\n-   * <p>Note: currently clusterServiceName is always unset.\n    */\n-  public void removeLoadStatsStore(String clusterName, @Nullable String clusterServiceName) {\n+  void removeLoadStatsStore(String clusterName, @Nullable String clusterServiceName) {\n     checkState(\n-        loadStatsStoreMap.containsKey(clusterName),\n-        \"load stats for cluster \" + clusterName + \" does not exist\");\n-    loadStatsStoreMap.remove(clusterName);\n+        loadStatsStoreMap.containsKey(clusterName)\n+            && loadStatsStoreMap.get(clusterName).containsKey(clusterServiceName),\n+        \"load stats for cluster: \" + clusterName + \", cluster service: \"", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MDU2Mw==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382770563", "bodyText": "Done.", "author": "voidzcy", "createdAt": "2020-02-21T19:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/LoadReportClient.java b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\nindex 4142220d5..0d09028ae 100644\n--- a/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n+++ b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n\n@@ -149,8 +148,8 @@ final class LoadReportClient {\n     checkState(\n         !loadStatsStoreMap.containsKey(clusterName)\n             || !loadStatsStoreMap.get(clusterName).containsKey(clusterServiceName),\n-        \"load stats for cluster: \" + clusterName + \", cluster service: \"\n-            + clusterServiceName + \" already exists\");\n+        \"load stats for cluster: %s, cluster service: %s already exists\",\n+        clusterName, clusterServiceName);\n     if (!loadStatsStoreMap.containsKey(clusterName)) {\n       loadStatsStoreMap.put(clusterName, new HashMap<String, LoadStatsStore>());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NTM4MA==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382355380", "bodyText": "This is redundant.", "author": "dapengzhang0", "createdAt": "2020-02-21T01:41:55Z", "path": "xds/src/main/java/io/grpc/xds/LoadReportClient.java", "diffHunk": "@@ -80,19 +81,29 @@\n   private LoadReportCallback callback;\n \n   LoadReportClient(\n+      String targetName,\n       ManagedChannel channel,\n       Node node,\n       SynchronizationContext syncContext,\n       ScheduledExecutorService scheduledExecutorService,\n       BackoffPolicy.Provider backoffPolicyProvider,\n       Supplier<Stopwatch> stopwatchSupplier) {\n     this.channel = checkNotNull(channel, \"channel\");\n-    this.node = checkNotNull(node, \"node\");\n     this.syncContext = checkNotNull(syncContext, \"syncContext\");\n     this.timerService = checkNotNull(scheduledExecutorService, \"timeService\");\n     this.backoffPolicyProvider = checkNotNull(backoffPolicyProvider, \"backoffPolicyProvider\");\n     this.stopwatchSupplier = checkNotNull(stopwatchSupplier, \"stopwatchSupplier\");\n     this.retryStopwatch = stopwatchSupplier.get();\n+    checkNotNull(targetName, \"targetName\");\n+    checkNotNull(node, \"node\");\n+    this.node =\n+        node.toBuilder()\n+            .setMetadata(\n+                Struct.newBuilder()\n+                    .putFields(\n+                        TARGET_NAME_METADATA_KEY,\n+                        Value.newBuilder().setStringValue(targetName).build()))\n+            .build();\n     started = false;", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MDY1NQ==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382770655", "bodyText": "Ok, deleted.", "author": "voidzcy", "createdAt": "2020-02-21T19:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NTM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/LoadReportClient.java b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\nindex 4142220d5..0d09028ae 100644\n--- a/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n+++ b/xds/src/main/java/io/grpc/xds/LoadReportClient.java\n\n@@ -104,7 +104,6 @@ final class LoadReportClient {\n                         TARGET_NAME_METADATA_KEY,\n                         Value.newBuilder().setStringValue(targetName).build()))\n             .build();\n-    started = false;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczMzg3Mg==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382733872", "bodyText": "Can you change  \"edsServiceName1\" in this test to null? The clusterLoadAssignment then is expected to use CLUSTER_NAME. That is what is happening in real case.", "author": "dapengzhang0", "createdAt": "2020-02-21T18:21:39Z", "path": "xds/src/test/java/io/grpc/xds/EdsLoadBalancerTest.java", "diffHunk": "@@ -519,7 +525,7 @@ public PickResult pickSubchannel(PickSubchannelArgs args) {\n \n   @Test\n   public void handleLocalityAssignmentUpdates_pickersUpdatedFromChildBalancer() {\n-    deliverResolvedAddresses(new XdsConfig(null, null, \"edsServiceName1\", null));\n+    deliverResolvedAddresses(new XdsConfig(CLUSTER_NAME, null, null, \"edsServiceName1\", null));", "originalCommit": "d7b6d6f0d8f378777215850fd4db5707fb6a403a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MTcxOA==", "url": "https://github.com/grpc/grpc-java/pull/6737#discussion_r382771718", "bodyText": "Changed test cases to use null edsServiceName. (This doesn't matter much for things we are aiming to test, although being closer to real use case is better).", "author": "voidzcy", "createdAt": "2020-02-21T19:44:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczMzg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "dc4a26754e34fdc12036a92fea67a16d33efd103", "chunk": "diff --git a/xds/src/test/java/io/grpc/xds/EdsLoadBalancerTest.java b/xds/src/test/java/io/grpc/xds/EdsLoadBalancerTest.java\nindex 20eadb718..adcae1c52 100644\n--- a/xds/src/test/java/io/grpc/xds/EdsLoadBalancerTest.java\n+++ b/xds/src/test/java/io/grpc/xds/EdsLoadBalancerTest.java\n\n@@ -525,7 +525,7 @@ public class EdsLoadBalancerTest {\n \n   @Test\n   public void handleLocalityAssignmentUpdates_pickersUpdatedFromChildBalancer() {\n-    deliverResolvedAddresses(new XdsConfig(CLUSTER_NAME, null, null, \"edsServiceName1\", null));\n+    deliverResolvedAddresses(new XdsConfig(CLUSTER_NAME, null, null, null, null));\n \n     LbEndpoint endpoint11 = buildLbEndpoint(\"addr11.example.com\", 8011, HEALTHY, 11);\n     LbEndpoint endpoint12 = buildLbEndpoint(\"addr12.example.com\", 8012, HEALTHY, 12);\n"}}, {"oid": "0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "url": "https://github.com/grpc/grpc-java/commit/0c83e0f57d0e8fdf70897c7cf4f98750378eaeef", "message": "Fix style issues.", "committedDate": "2020-02-21T19:30:41Z", "type": "commit"}, {"oid": "dc4a26754e34fdc12036a92fea67a16d33efd103", "url": "https://github.com/grpc/grpc-java/commit/dc4a26754e34fdc12036a92fea67a16d33efd103", "message": "Use null edsServiceName for tests.", "committedDate": "2020-02-21T19:41:13Z", "type": "commit"}, {"oid": "675e2c36e1bf8ccca1ba25bdb0edce779857f328", "url": "https://github.com/grpc/grpc-java/commit/675e2c36e1bf8ccca1ba25bdb0edce779857f328", "message": "Clean up code in EdsLoadBalancer.shutdown.", "committedDate": "2020-02-21T19:46:27Z", "type": "commit"}, {"oid": "05ad799f8a53c5a99741267380ab07e90c5d9a29", "url": "https://github.com/grpc/grpc-java/commit/05ad799f8a53c5a99741267380ab07e90c5d9a29", "message": "Node in LRS requests should preserve other metadata from bootstrap.", "committedDate": "2020-02-21T22:51:52Z", "type": "commit"}, {"oid": "9dc13e89ebc96696b54c4ac0ff7a22a739735295", "url": "https://github.com/grpc/grpc-java/commit/9dc13e89ebc96696b54c4ac0ff7a22a739735295", "message": "Add test to ensure existing metadata from bootstrap is preserved.", "committedDate": "2020-02-21T23:08:01Z", "type": "commit"}]}