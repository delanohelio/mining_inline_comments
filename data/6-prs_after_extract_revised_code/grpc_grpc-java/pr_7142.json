{"pr_number": 7142, "pr_title": "rls: use system property to use direct path for oob channel", "pr_createdAt": "2020-06-18T21:05:00Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7142", "timeline": [{"oid": "6e695137cabe45b2e89ac2706f8b9f871f77acdc", "url": "https://github.com/grpc/grpc-java/commit/6e695137cabe45b2e89ac2706f8b9f871f77acdc", "message": "rls: use system property to use direct path for oob channel", "committedDate": "2020-06-18T21:09:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNDc2MQ==", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442504761", "bodyText": "You probably want to make system property more \"static\" to your program. That is, the system property should be read when your code is loaded instead of when this method is executed.", "author": "voidzcy", "createdAt": "2020-06-18T21:11:06Z", "path": "rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java", "diffHunk": "@@ -137,6 +152,23 @@ private CachingRlsLbClient(Builder builder) {\n             childLbHelperProvider, new BackoffRefreshListener());\n   }\n \n+  private static boolean isOobChannelDirectpathEnabled() {", "originalCommit": "6e695137cabe45b2e89ac2706f8b9f871f77acdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxNzQwMQ==", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442517401", "bodyText": "done. PTAL", "author": "creamsoup", "createdAt": "2020-06-18T21:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNDc2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5", "chunk": "diff --git a/rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java b/rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java\nindex 1a84e5665..83728fff0 100644\n--- a/rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java\n+++ b/rls/src/main/java/io/grpc/rls/CachingRlsLbClient.java\n\n@@ -152,10 +154,6 @@ final class CachingRlsLbClient {\n             childLbHelperProvider, new BackoffRefreshListener());\n   }\n \n-  private static boolean isOobChannelDirectpathEnabled() {\n-    return System.getProperty(RLS_ENABLE_OOB_CHANNEL_DIRECTPATH_PROPERTY, \"true\").equals(\"true\");\n-  }\n-\n   private static ImmutableMap<String, Object> getDirectpathServiceConfig() {\n     ImmutableMap<String, Object> pickFirstStrategy =\n         ImmutableMap.<String, Object>of(\"pick_first\", ImmutableMap.of());\n"}}, {"oid": "1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5", "url": "https://github.com/grpc/grpc-java/commit/1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5", "message": "load property in static manner", "committedDate": "2020-06-18T21:42:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMTA1NQ==", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442521055", "bodyText": "I think your code does not call this method, so no need to override.", "author": "dapengzhang0", "createdAt": "2020-06-18T21:48:16Z", "path": "rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java", "diffHunk": "@@ -482,7 +488,12 @@ public ManagedChannel createResolvingOobChannel(String target) {\n       } catch (IOException e) {\n         throw new RuntimeException(\"cannot create server: \" + target, e);\n       }\n-      return InProcessChannelBuilder.forName(target).directExecutor().build();\n+      return InProcessChannelBuilder.forName(target).directExecutor();\n+    }\n+\n+    @Override\n+    public ManagedChannel createResolvingOobChannel(String target) {", "originalCommit": "1bc3a8ff2dac9901276a761dbb7b0e1f1d6491b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2ODc0OA==", "url": "https://github.com/grpc/grpc-java/pull/7142#discussion_r442568748", "bodyText": "fixed. PTAL", "author": "creamsoup", "createdAt": "2020-06-19T00:24:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMTA1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f34b547e961408042d48db29fb781fdd0048d306", "chunk": "diff --git a/rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java b/rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java\nindex bed531961..c846f1e26 100644\n--- a/rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java\n+++ b/rls/src/test/java/io/grpc/rls/CachingRlsLbClientTest.java\n\n@@ -488,12 +489,23 @@ public class CachingRlsLbClientTest {\n       } catch (IOException e) {\n         throw new RuntimeException(\"cannot create server: \" + target, e);\n       }\n-      return InProcessChannelBuilder.forName(target).directExecutor();\n-    }\n+      final InProcessChannelBuilder builder =\n+          InProcessChannelBuilder.forName(target).directExecutor();\n \n-    @Override\n-    public ManagedChannel createResolvingOobChannel(String target) {\n-      return grpcCleanupRule.register(createResolvingOobChannelBuilder(target).build());\n+      class CleaningChannelBuilder extends ForwardingChannelBuilder<CleaningChannelBuilder> {\n+\n+        @Override\n+        protected ManagedChannelBuilder<?> delegate() {\n+          return builder;\n+        }\n+\n+        @Override\n+        public ManagedChannel build() {\n+          return grpcCleanupRule.register(super.build());\n+        }\n+      }\n+\n+      return new CleaningChannelBuilder();\n     }\n \n     @Override\n"}}, {"oid": "f34b547e961408042d48db29fb781fdd0048d306", "url": "https://github.com/grpc/grpc-java/commit/f34b547e961408042d48db29fb781fdd0048d306", "message": "fix oob channel cleanup", "committedDate": "2020-06-19T00:19:12Z", "type": "commit"}]}