{"pr_number": 7609, "pr_title": "interop: create PSM security xDS interop tests - server & client", "pr_createdAt": "2020-11-10T16:00:13Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7609", "timeline": [{"oid": "c9344cfa7a77c3e327fd2285f96a3b43dbecf354", "url": "https://github.com/grpc/grpc-java/commit/c9344cfa7a77c3e327fd2285f96a3b43dbecf354", "message": "delete the copies created", "committedDate": "2020-11-18T23:25:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0NDg4OA==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526544888", "bodyText": "I think this should be reverted too\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String server = \"localhost:8081\";\n          \n          \n            \n              private String server = \"localhost:8080\";", "author": "sergiitk", "createdAt": "2020-11-19T02:07:30Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -81,7 +82,8 @@\n   private int qps = 1;\n   private volatile RpcConfig rpcConfig;\n   private int rpcTimeoutSec = 20;\n-  private String server = \"localhost:8080\";\n+  private boolean secureMode = false;\n+  private String server = \"localhost:8081\";", "originalCommit": "acd2c3a6545bb463f9f16c12892ceac02247559c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "chunk": "diff --git a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java\nindex 9ccc5422c..1cb3b3e00 100644\n--- a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java\n+++ b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java\n\n@@ -82,8 +81,7 @@ public final class XdsTestClient {\n   private int qps = 1;\n   private volatile RpcConfig rpcConfig;\n   private int rpcTimeoutSec = 20;\n-  private boolean secureMode = false;\n-  private String server = \"localhost:8081\";\n+  private String server = \"localhost:8080\";\n   private int statsPort = 8081;\n   private Server statsServer;\n   private long currentRequestId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0NjQ0Ng==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526546446", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.err.println(\"Timed out waiting for otherServer shutdown\");\n          \n          \n            \n                  System.err.println(\"Timed out waiting for maintenanceServer shutdown\");", "author": "sergiitk", "createdAt": "2020-11-19T02:12:20Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -135,30 +159,58 @@ private void start() throws Exception {\n       throw new RuntimeException(e);\n     }\n     health = new HealthStatusManager();\n-    server =\n-        NettyServerBuilder.forPort(port)\n-            .addService(\n-                ServerInterceptors.intercept(\n-                    new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n-            .addService(new XdsUpdateHealthServiceImpl(health))\n-            .addService(health.getHealthService())\n-            .addService(ProtoReflectionService.newInstance())\n-            .build()\n-            .start();\n+    if (secureMode) {\n+      server =\n+          XdsServerBuilder.forPort(port)\n+              .addService(\n+                  ServerInterceptors.intercept(\n+                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n+              .useXdsSecurityWithPlaintextFallback()\n+              .build()\n+              .start();\n+      maintenanceServer =\n+          NettyServerBuilder.forPort(maintenancePort)\n+              .addService(new XdsUpdateHealthServiceImpl(health))\n+              .addService(health.getHealthService())\n+              .addService(ProtoReflectionService.newInstance())\n+              .build()\n+              .start();\n+    } else {\n+      server =\n+          NettyServerBuilder.forPort(port)\n+              .addService(\n+                  ServerInterceptors.intercept(\n+                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n+              .addService(new XdsUpdateHealthServiceImpl(health))\n+              .addService(health.getHealthService())\n+              .addService(ProtoReflectionService.newInstance())\n+              .build()\n+              .start();\n+      maintenanceServer = null;\n+    }\n     health.setStatus(\"\", ServingStatus.SERVING);\n   }\n \n   private void stop() throws Exception {\n     server.shutdownNow();\n+    if (maintenanceServer != null) {\n+      maintenanceServer.shutdownNow();\n+    }\n     if (!server.awaitTermination(5, TimeUnit.SECONDS)) {\n       System.err.println(\"Timed out waiting for server shutdown\");\n     }\n+    if (maintenanceServer != null && !maintenanceServer.awaitTermination(5, TimeUnit.SECONDS)) {\n+      System.err.println(\"Timed out waiting for otherServer shutdown\");", "originalCommit": "acd2c3a6545bb463f9f16c12892ceac02247559c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "chunk": "diff --git a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\nindex 79508e7be..4fc832eca 100644\n--- a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n+++ b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n\n@@ -159,58 +135,30 @@ public final class XdsTestServer {\n       throw new RuntimeException(e);\n     }\n     health = new HealthStatusManager();\n-    if (secureMode) {\n-      server =\n-          XdsServerBuilder.forPort(port)\n-              .addService(\n-                  ServerInterceptors.intercept(\n-                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n-              .useXdsSecurityWithPlaintextFallback()\n-              .build()\n-              .start();\n-      maintenanceServer =\n-          NettyServerBuilder.forPort(maintenancePort)\n-              .addService(new XdsUpdateHealthServiceImpl(health))\n-              .addService(health.getHealthService())\n-              .addService(ProtoReflectionService.newInstance())\n-              .build()\n-              .start();\n-    } else {\n-      server =\n-          NettyServerBuilder.forPort(port)\n-              .addService(\n-                  ServerInterceptors.intercept(\n-                      new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n-              .addService(new XdsUpdateHealthServiceImpl(health))\n-              .addService(health.getHealthService())\n-              .addService(ProtoReflectionService.newInstance())\n-              .build()\n-              .start();\n-      maintenanceServer = null;\n-    }\n+    server =\n+        NettyServerBuilder.forPort(port)\n+            .addService(\n+                ServerInterceptors.intercept(\n+                    new TestServiceImpl(serverId, host), new TestInfoInterceptor(host)))\n+            .addService(new XdsUpdateHealthServiceImpl(health))\n+            .addService(health.getHealthService())\n+            .addService(ProtoReflectionService.newInstance())\n+            .build()\n+            .start();\n     health.setStatus(\"\", ServingStatus.SERVING);\n   }\n \n   private void stop() throws Exception {\n     server.shutdownNow();\n-    if (maintenanceServer != null) {\n-      maintenanceServer.shutdownNow();\n-    }\n     if (!server.awaitTermination(5, TimeUnit.SECONDS)) {\n       System.err.println(\"Timed out waiting for server shutdown\");\n     }\n-    if (maintenanceServer != null && !maintenanceServer.awaitTermination(5, TimeUnit.SECONDS)) {\n-      System.err.println(\"Timed out waiting for otherServer shutdown\");\n-    }\n   }\n \n   private void blockUntilShutdown() throws InterruptedException {\n     if (server != null) {\n       server.awaitTermination();\n     }\n-    if (maintenanceServer != null) {\n-      maintenanceServer.awaitTermination();\n-    }\n   }\n \n   private static class TestServiceImpl extends TestServiceGrpc.TestServiceImplBase {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTAwNw==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526549007", "bodyText": "Do we want to enforce this for the insecure mode? If so, we need to handle the case when --port is set to something that isn't 8080 via CLI args, otherwise it'll break existing runners. Let's say one of existing runners overrides the port:\nbin/xds-test-server --port=8081\nIt'll compare port 8081 to the default maintenance port 8080. So it'll enter this if and try to enforce the security mode.", "author": "sergiitk", "createdAt": "2020-11-19T02:20:31Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -112,14 +120,30 @@ private void parseArgs(String[] args) {\n       }\n     }\n \n+    if (secureMode == (port == maintenancePort)) {", "originalCommit": "acd2c3a6545bb463f9f16c12892ceac02247559c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1NDk4OQ==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526554989", "bodyText": "That's a good point. I'll change this to:\n    if (secureMode && (port == maintenancePort)) {\n      System.err.println(\n          \"port and maintenancePort should be different for secure mode: port=\"\n              + port\n              + \", maintenancePort=\"\n              + maintenancePort);\n      usage = true;\n    }\n\nFor the insecure mode if maintenancePort is specified, it will be just ignored but no need to catch or flag that use-case", "author": "sanjaypujare", "createdAt": "2020-11-19T02:38:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTAwNw=="}], "type": "inlineReview", "revised_code": {"commit": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "chunk": "diff --git a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\nindex 79508e7be..4fc832eca 100644\n--- a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n+++ b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n\n@@ -120,30 +112,14 @@ public final class XdsTestServer {\n       }\n     }\n \n-    if (secureMode == (port == maintenancePort)) {\n-      System.err.println(\n-          \"port and maintenancePort should be same for insecure and different for secure mode: port=\"\n-              + port\n-              + \", maintenancePort=\"\n-              + maintenancePort);\n-      usage = true;\n-    }\n-\n     if (usage) {\n       XdsTestServer s = new XdsTestServer();\n       System.err.println(\n           \"Usage: [ARGS...]\"\n               + \"\\n\"\n-              + \"\\n  --port=INT          listening port for test server.\"\n+              + \"\\n  --port=INT          listening port for server.\"\n               + \"\\n                      Default: \"\n               + s.port\n-              + \"\\n  --maintenancePort=INT      listening port for other servers.\"\n-              + \"\\n                      Default: \"\n-              + s.maintenancePort\n-              + \"\\n  --secureMode=BOOLEAN Use true to enable XdsCredentials.\"\n-              + \" port and maintenancePort should be same for insecure and different for secure mode.\"\n-              + \"\\n                      Default: \"\n-              + s.secureMode\n               + \"\\n  --server_id=STRING  server ID for response.\"\n               + \"\\n                      Default: \"\n               + s.serverId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTQzOQ==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r526549439", "bodyText": "I think these scripts already do snake_case for args: https://github.com/grpc/grpc/blob/master/doc/xds-test-descriptions.md#client\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          + \"\\n  --maintenancePort=INT      listening port for other servers.\"\n          \n          \n            \n                          + \"\\n  --maintenance_port=INT      listening port for other servers.\"\n          \n      \n    \n    \n  \n\nSame for secureMode -> secure_mode", "author": "sergiitk", "createdAt": "2020-11-19T02:21:59Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java", "diffHunk": "@@ -112,14 +120,30 @@ private void parseArgs(String[] args) {\n       }\n     }\n \n+    if (secureMode == (port == maintenancePort)) {\n+      System.err.println(\n+          \"port and maintenancePort should be same for insecure and different for secure mode: port=\"\n+              + port\n+              + \", maintenancePort=\"\n+              + maintenancePort);\n+      usage = true;\n+    }\n+\n     if (usage) {\n       XdsTestServer s = new XdsTestServer();\n       System.err.println(\n           \"Usage: [ARGS...]\"\n               + \"\\n\"\n-              + \"\\n  --port=INT          listening port for server.\"\n+              + \"\\n  --port=INT          listening port for test server.\"\n               + \"\\n                      Default: \"\n               + s.port\n+              + \"\\n  --maintenancePort=INT      listening port for other servers.\"", "originalCommit": "acd2c3a6545bb463f9f16c12892ceac02247559c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMzOTkzNA==", "url": "https://github.com/grpc/grpc-java/pull/7609#discussion_r527339934", "bodyText": "done", "author": "sanjaypujare", "createdAt": "2020-11-20T01:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "chunk": "diff --git a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\nindex 79508e7be..4fc832eca 100644\n--- a/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n+++ b/interop-testing/src/main/java/io/grpc/testing/integration/XdsTestServer.java\n\n@@ -120,30 +112,14 @@ public final class XdsTestServer {\n       }\n     }\n \n-    if (secureMode == (port == maintenancePort)) {\n-      System.err.println(\n-          \"port and maintenancePort should be same for insecure and different for secure mode: port=\"\n-              + port\n-              + \", maintenancePort=\"\n-              + maintenancePort);\n-      usage = true;\n-    }\n-\n     if (usage) {\n       XdsTestServer s = new XdsTestServer();\n       System.err.println(\n           \"Usage: [ARGS...]\"\n               + \"\\n\"\n-              + \"\\n  --port=INT          listening port for test server.\"\n+              + \"\\n  --port=INT          listening port for server.\"\n               + \"\\n                      Default: \"\n               + s.port\n-              + \"\\n  --maintenancePort=INT      listening port for other servers.\"\n-              + \"\\n                      Default: \"\n-              + s.maintenancePort\n-              + \"\\n  --secureMode=BOOLEAN Use true to enable XdsCredentials.\"\n-              + \" port and maintenancePort should be same for insecure and different for secure mode.\"\n-              + \"\\n                      Default: \"\n-              + s.secureMode\n               + \"\\n  --server_id=STRING  server ID for response.\"\n               + \"\\n                      Default: \"\n               + s.serverId);\n"}}, {"oid": "b0a74af9c47265ce95e5449782439b8e4ba06dc3", "url": "https://github.com/grpc/grpc-java/commit/b0a74af9c47265ce95e5449782439b8e4ba06dc3", "message": "interop: create PSM security xDS interop tests - server & client", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "ac6a3d4e5445f503e991488b8f6b66cf421624e8", "url": "https://github.com/grpc/grpc-java/commit/ac6a3d4e5445f503e991488b8f6b66cf421624e8", "message": "address review comments", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "d0e9a3f49b306da9bde75bdb8935d08a17f769c6", "url": "https://github.com/grpc/grpc-java/commit/d0e9a3f49b306da9bde75bdb8935d08a17f769c6", "message": "delete the copies created", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "fe1391e1f3ec25a28c78a9e77ff05080b0f6e483", "url": "https://github.com/grpc/grpc-java/commit/fe1391e1f3ec25a28c78a9e77ff05080b0f6e483", "message": "rename things and make compatible with old set up when secureMode is false", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "a33ac7d46da3f51ad8c65dace374af10c5396e2b", "url": "https://github.com/grpc/grpc-java/commit/a33ac7d46da3f51ad8c65dace374af10c5396e2b", "message": "Apply suggestions from code review\n\nCo-authored-by: Sergii Tkachenko <hi@sergii.org>", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "e32cda3a39ed2a9f2f8fc4363b6c7a42539ff295", "url": "https://github.com/grpc/grpc-java/commit/e32cda3a39ed2a9f2f8fc4363b6c7a42539ff295", "message": "accept review comment", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "09c88196181e91216f1fd393e3640c0f77e38a98", "url": "https://github.com/grpc/grpc-java/commit/09c88196181e91216f1fd393e3640c0f77e38a98", "message": "address remainign comments and fix the package name of XdsServerBuilder", "committedDate": "2020-11-20T01:33:43Z", "type": "commit"}, {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "url": "https://github.com/grpc/grpc-java/commit/0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "message": "fixup after rebasing", "committedDate": "2020-11-20T01:40:36Z", "type": "commit"}, {"oid": "0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "url": "https://github.com/grpc/grpc-java/commit/0b9e4465fa5d365274ed4bcf88853e0b44908cd2", "message": "fixup after rebasing", "committedDate": "2020-11-20T01:40:36Z", "type": "forcePushed"}]}