{"pr_number": 7108, "pr_title": "alts: add peer attribute access for the ALTS context", "pr_createdAt": "2020-06-09T19:35:32Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7108", "timeline": [{"oid": "a997cad4eedfe773caa9df3044bd4ed24ef15698", "url": "https://github.com/grpc/grpc-java/commit/a997cad4eedfe773caa9df3044bd4ed24ef15698", "message": "Added Peer Attribute getter for ALTS plumbing", "committedDate": "2020-06-05T22:43:13Z", "type": "commit"}, {"oid": "497a37354c939c41b94a2cd6dc1bc114c8033fbf", "url": "https://github.com/grpc/grpc-java/commit/497a37354c939c41b94a2cd6dc1bc114c8033fbf", "message": "testing ssh", "committedDate": "2020-06-08T18:31:19Z", "type": "commit"}, {"oid": "4a238501b115f8eb2b655c363e8ff90979aa57fd", "url": "https://github.com/grpc/grpc-java/commit/4a238501b115f8eb2b655c363e8ff90979aa57fd", "message": "cleaning", "committedDate": "2020-06-08T18:34:24Z", "type": "commit"}, {"oid": "4427b0eb24d050fa244d010a27981b31532a5a78", "url": "https://github.com/grpc/grpc-java/commit/4427b0eb24d050fa244d010a27981b31532a5a78", "message": "Added test fgor peer attribute getter and fixed handshaker integration", "committedDate": "2020-06-09T19:29:21Z", "type": "commit"}, {"oid": "5cbe8e6eebbeed0452919061e69191e655baa096", "url": "https://github.com/grpc/grpc-java/commit/5cbe8e6eebbeed0452919061e69191e655baa096", "message": "Added data to Test Peer Attribute map to better test equality", "committedDate": "2020-06-09T23:05:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437768649", "bodyText": "Can we use a local variable instead of a static variable?", "author": "ZhenLian", "createdAt": "2020-06-09T23:01:41Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,6 +40,8 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private static final Map<String, String> TEST_PEER_ATTRIBUTES = new HashMap<String, String>();", "originalCommit": "4427b0eb24d050fa244d010a27981b31532a5a78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MjAyNw==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437772027", "bodyText": "I was not sure so I just made it static since that is what the other sample data was to test the other methods. Do you think I should make it local?", "author": "d-reidenbach", "createdAt": "2020-06-09T23:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMjE2OQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441022169", "bodyText": "Yeah I think so. IMO, the reason why we want to make some test data, like TEST_RECORD_PROTOCOL, static is because these strings might be used multiple times in a place, and it's better to use a static final string to refer them, to avoid misspelling,  etc. This is similar to a const string in C++.\nMap doesn't have this issue, so we'd better keep it local. However, we could make the key and value static. See my inline comments for more.", "author": "ZhenLian", "createdAt": "2020-06-16T17:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5cbe8e6eebbeed0452919061e69191e655baa096", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 8c6df369e..c3a639576 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -41,6 +41,7 @@ public final class AltsAuthContextTest {\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n   private static final Map<String, String> TEST_PEER_ATTRIBUTES = new HashMap<String, String>();\n+  TEST_PEER_ATTRIBUTES[\"peer\"] = \"attributes\";\n \n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDUzNQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437770535", "bodyText": "If we define the map to be a local variable, it doesn't need to be capitalized. We usually do that for some static strings. We can also add some fake values and see if what we got equals what we expect. The key and value of that fake value could be capitalized as a static string.", "author": "ZhenLian", "createdAt": "2020-06-09T23:07:19Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -54,11 +60,14 @@ public void setUp() {\n                     .setMinor(TEST_MIN_RPC_VERSION_MINOR)\n                     .build())\n             .build();\n+    Identity.Builder peerIdentity = Identity.newBuilder()\n+        .setServiceAccount(TEST_PEER_SERVICE_ACCOUNT);\n+    peerIdentity.putAllAttributes(TEST_PEER_ATTRIBUTES);", "originalCommit": "4427b0eb24d050fa244d010a27981b31532a5a78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3Nzk3Nw==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r437777977", "bodyText": "Added thanks!", "author": "d-reidenbach", "createdAt": "2020-06-09T23:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9394184f74108c6187b3caddca7adc991dd1776e", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 8c6df369e..2e1cd08d8 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -62,7 +64,7 @@ public final class AltsAuthContextTest {\n             .build();\n     Identity.Builder peerIdentity = Identity.newBuilder()\n         .setServiceAccount(TEST_PEER_SERVICE_ACCOUNT);\n-    peerIdentity.putAllAttributes(TEST_PEER_ATTRIBUTES);\n+    peerIdentity.putAllAttributes(testPeerAttributes);\n     handshakerResult =\n         HandshakerResult.newBuilder()\n             .setApplicationProtocol(TEST_APPLICATION_PROTOCOL)\n"}}, {"oid": "9394184f74108c6187b3caddca7adc991dd1776e", "url": "https://github.com/grpc/grpc-java/commit/9394184f74108c6187b3caddca7adc991dd1776e", "message": "Fixed static variables and added a deeper map check", "committedDate": "2020-06-09T23:29:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDM4Nw==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014387", "bodyText": "nit: remove the empty line.", "author": "ZhenLian", "createdAt": "2020-06-16T17:16:49Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -18,11 +18,15 @@\n \n import static org.junit.Assert.assertEquals;\n \n+", "originalCommit": "9394184f74108c6187b3caddca7adc991dd1776e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d92afd898461062ed24c6d7d704cc18eeda6d39", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 2e1cd08d8..02447eda5 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -18,7 +18,6 @@ package io.grpc.alts.internal;\n \n import static org.junit.Assert.assertEquals;\n \n-\n import java.util.HashMap;\n import java.util.Map;\n import org.junit.Before;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDUxMQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014511", "bodyText": "nit: empty line", "author": "ZhenLian", "createdAt": "2020-06-16T17:17:01Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -18,11 +18,15 @@\n \n import static org.junit.Assert.assertEquals;\n \n+\n+import java.util.HashMap;\n+import java.util.Map;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n+", "originalCommit": "9394184f74108c6187b3caddca7adc991dd1776e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d92afd898461062ed24c6d7d704cc18eeda6d39", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 2e1cd08d8..02447eda5 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -18,7 +18,6 @@ package io.grpc.alts.internal;\n \n import static org.junit.Assert.assertEquals;\n \n-\n import java.util.HashMap;\n import java.util.Map;\n import org.junit.Before;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441014629", "bodyText": "nit: empty line", "author": "ZhenLian", "createdAt": "2020-06-16T17:17:13Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  ", "originalCommit": "9394184f74108c6187b3caddca7adc991dd1776e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MDQ3Ng==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441150476", "bodyText": "will fix!", "author": "d-reidenbach", "createdAt": "2020-06-16T21:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2ODIxMg==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441168212", "bodyText": "Is this empty line removed?\nAlso, does it make sense to not initializing the map here, but moving the initialization to the place where we do SetUp()? That might make the code cleaner IMO.", "author": "ZhenLian", "createdAt": "2020-06-16T22:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MjkyNg==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441172926", "bodyText": "Yeah that makes sense. I believe that was a fragment from when I had the map along with the static variables but good catch", "author": "d-reidenbach", "createdAt": "2020-06-16T22:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDYyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d92afd898461062ed24c6d7d704cc18eeda6d39", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 2e1cd08d8..02447eda5 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -39,16 +37,17 @@ public final class AltsAuthContextTest {\n   private static final String TEST_LOCAL_SERVICE_ACCOUNT = \"local@gserviceaccount.com\";\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n+  private static final String TEST_PEER_ATTRIBUTES_KEY = \"peer\";\n+  private static final String TEST_PEER_ATTRIBUTES_VALUE = \"attributes\";\n \n   private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n   \n-\n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n \n   @Before\n   public void setUp() {\n-    testPeerAttributes.put(\"peer\", \"attributes\");\n+    testPeerAttributes.put(TEST_PEER_ATTRIBUTES_KEY, TEST_PEER_ATTRIBUTES_VALUE);\n     rpcVersions =\n         RpcProtocolVersions.newBuilder()\n             .setMaxRpcVersion(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzEyMQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441017121", "bodyText": "How about this: we make the map local, but create two static string like TEST_PEER_ATTRIBUTES_KEY and TEST_PEER_ATTRIBUTES_VALUE.", "author": "ZhenLian", "createdAt": "2020-06-16T17:21:14Z", "path": "alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java", "diffHunk": "@@ -36,11 +40,15 @@\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n \n+  private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n+  \n+\n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n \n   @Before\n   public void setUp() {\n+    testPeerAttributes.put(\"peer\", \"attributes\");", "originalCommit": "9394184f74108c6187b3caddca7adc991dd1776e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MDYyNQ==", "url": "https://github.com/grpc/grpc-java/pull/7108#discussion_r441150625", "bodyText": "good catch, fixed in update", "author": "d-reidenbach", "createdAt": "2020-06-16T21:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d92afd898461062ed24c6d7d704cc18eeda6d39", "chunk": "diff --git a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\nindex 2e1cd08d8..02447eda5 100644\n--- a/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n+++ b/alts/src/test/java/io/grpc/alts/internal/AltsAuthContextTest.java\n\n@@ -39,16 +37,17 @@ public final class AltsAuthContextTest {\n   private static final String TEST_LOCAL_SERVICE_ACCOUNT = \"local@gserviceaccount.com\";\n   private static final String TEST_PEER_SERVICE_ACCOUNT = \"peer@gserviceaccount.com\";\n   private static final String TEST_RECORD_PROTOCOL = \"ALTSRP_GCM_AES128\";\n+  private static final String TEST_PEER_ATTRIBUTES_KEY = \"peer\";\n+  private static final String TEST_PEER_ATTRIBUTES_VALUE = \"attributes\";\n \n   private Map<String, String> testPeerAttributes = new HashMap<String, String>();\n   \n-\n   private HandshakerResult handshakerResult;\n   private RpcProtocolVersions rpcVersions;\n \n   @Before\n   public void setUp() {\n-    testPeerAttributes.put(\"peer\", \"attributes\");\n+    testPeerAttributes.put(TEST_PEER_ATTRIBUTES_KEY, TEST_PEER_ATTRIBUTES_VALUE);\n     rpcVersions =\n         RpcProtocolVersions.newBuilder()\n             .setMaxRpcVersion(\n"}}, {"oid": "3d92afd898461062ed24c6d7d704cc18eeda6d39", "url": "https://github.com/grpc/grpc-java/commit/3d92afd898461062ed24c6d7d704cc18eeda6d39", "message": "fixed extra line issues and static key value pair for peer attribute map testing", "committedDate": "2020-06-16T18:58:19Z", "type": "commit"}, {"oid": "72605ea0ed4721d5adf8a4efa6b9c2455f97c919", "url": "https://github.com/grpc/grpc-java/commit/72605ea0ed4721d5adf8a4efa6b9c2455f97c919", "message": "clean up and initialize map in setup", "committedDate": "2020-06-16T22:15:09Z", "type": "commit"}]}