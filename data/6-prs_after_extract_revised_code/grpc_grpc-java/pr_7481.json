{"pr_number": 7481, "pr_title": "xds: implement xDS timeout", "pr_createdAt": "2020-10-02T22:58:06Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7481", "timeline": [{"oid": "58e6038400834b2e405077692e42e3bd897b7aa9", "url": "https://github.com/grpc/grpc-java/commit/58e6038400834b2e405077692e42e3bd897b7aa9", "message": "Retrieve timeout value from RouteAction's max_stream_duration.", "committedDate": "2020-10-02T23:03:43Z", "type": "forcePushed"}, {"oid": "e103a9eda6315831bd0926aeee09b14ba3135128", "url": "https://github.com/grpc/grpc-java/commit/e103a9eda6315831bd0926aeee09b14ba3135128", "message": "Retrieve timeout value from RouteAction's max_stream_duration.", "committedDate": "2020-10-05T20:31:33Z", "type": "commit"}, {"oid": "e103a9eda6315831bd0926aeee09b14ba3135128", "url": "https://github.com/grpc/grpc-java/commit/e103a9eda6315831bd0926aeee09b14ba3135128", "message": "Retrieve timeout value from RouteAction's max_stream_duration.", "committedDate": "2020-10-05T20:31:33Z", "type": "forcePushed"}, {"oid": "d2c53f6d833944aff19dba52741ed3ead95bbe37", "url": "https://github.com/grpc/grpc-java/commit/d2c53f6d833944aff19dba52741ed3ead95bbe37", "message": "Fix the bug of setting the wrong field.", "committedDate": "2020-10-08T21:17:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMjQzOQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r502032439", "bodyText": "Note there is a race between updating currentRoutes and fallbackTimeoutNano. The config selector might select a route from the updated currentRoutes list while using the old fallbackTimeoutNano. That is, these two updates should be atomic but actually it is not. The race window should be extremely small (should be almost negligible).\nOne option is to create a data structure that groups these two fields so that the update can be atomic. But given the race window is small, may not be necessary to do that.", "author": "voidzcy", "createdAt": "2020-10-08T21:49:57Z", "path": "xds/src/main/java/io/grpc/xds/XdsNameResolver.java", "diffHunk": "@@ -511,6 +522,7 @@ private void updateRoutes(List<VirtualHost> virtualHosts) {\n       // Make newly added clusters selectable by config selector and deleted clusters no longer\n       // selectable.\n       currentRoutes = routes;\n+      fallbackTimeoutNano = httpMaxStreamDurationNano;", "originalCommit": "e25669edbddd46f229b567da25215d9e71717d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzOTk0OA==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r502039948", "bodyText": "Alright, eliminated the race by grouping the list of routes and fallback timeout value into RoutingConfig.", "author": "voidzcy", "createdAt": "2020-10-08T22:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMjQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "bd82d8ec656515c66560f9acb451b7fa32cbfb05", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/XdsNameResolver.java b/xds/src/main/java/io/grpc/xds/XdsNameResolver.java\nindex 9a87d1455..ec00e8fed 100644\n--- a/xds/src/main/java/io/grpc/xds/XdsNameResolver.java\n+++ b/xds/src/main/java/io/grpc/xds/XdsNameResolver.java\n\n@@ -522,7 +516,6 @@ final class XdsNameResolver extends NameResolver {\n       // Make newly added clusters selectable by config selector and deleted clusters no longer\n       // selectable.\n       currentRoutes = routes;\n-      fallbackTimeoutNano = httpMaxStreamDurationNano;\n       shouldUpdateResult = false;\n       for (String cluster : deletedClusters) {\n         int count = clusterRefs.get(cluster).decrementAndGet();\n"}}, {"oid": "bd82d8ec656515c66560f9acb451b7fa32cbfb05", "url": "https://github.com/grpc/grpc-java/commit/bd82d8ec656515c66560f9acb451b7fa32cbfb05", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_timeout_with_max_stream_duration", "committedDate": "2020-10-12T22:50:32Z", "type": "forcePushed"}, {"oid": "8276e3de61ba1338b67c0378f01302f738a4e8b2", "url": "https://github.com/grpc/grpc-java/commit/8276e3de61ba1338b67c0378f01302f738a4e8b2", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_timeout_with_max_stream_duration", "committedDate": "2020-10-12T23:23:35Z", "type": "commit"}, {"oid": "baaba746349e7e4c5bee418d71023327aef76d86", "url": "https://github.com/grpc/grpc-java/commit/baaba746349e7e4c5bee418d71023327aef76d86", "message": "Fix number style.", "committedDate": "2020-10-12T23:34:35Z", "type": "commit"}, {"oid": "49c14d25f4545b208121a1c29eef9a6a3f579a45", "url": "https://github.com/grpc/grpc-java/commit/49c14d25f4545b208121a1c29eef9a6a3f579a45", "message": "Generate service config with method config containing timeout configuration that falls back to LDS's http protocol option max stream duration.", "committedDate": "2020-10-12T23:36:11Z", "type": "commit"}, {"oid": "49c14d25f4545b208121a1c29eef9a6a3f579a45", "url": "https://github.com/grpc/grpc-java/commit/49c14d25f4545b208121a1c29eef9a6a3f579a45", "message": "Generate service config with method config containing timeout configuration that falls back to LDS's http protocol option max stream duration.", "committedDate": "2020-10-12T23:36:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r504992144", "bodyText": "I think we should expose hasMaxStreamDuration() based on the 3rd bullet point in https://github.com/grpc/proposal/blob/master/A31-xds-timeout-support-and-config-selector.md#supported-fields\nWe can not simply check timeoutNano == 0 instead of maxStreamDuration.hasMaxStreamDuration()). Two cases that's not working as spec:\n\n\nCase 1: maxStreamDuration.hasGrpcTimeoutHeaderMax() and maxStreamDuration.getGrpcTimeoutHeaderMax() == 0. In this case, we should use 0 regardless of value of fallback timeout.\n\n\nCase 2: !maxStreamDuration.hasGrpcTimeoutHeaderMax() and maxStreamDuration.hasMaxStreamDuration() and maxStreamDuration.getMaxStreamDuration() == 0. In this case, we should use 0 regardless of value of fallback timeout.", "author": "dapengzhang0", "createdAt": "2020-10-14T21:47:50Z", "path": "xds/src/main/java/io/grpc/xds/EnvoyProtoData.java", "diffHunk": "@@ -1231,14 +1230,15 @@ public String toString() {\n           return StructOrError.fromError(\n               \"Unknown cluster specifier: \" + proto.getClusterSpecifierCase());\n       }\n-      long timeoutNano = TimeUnit.SECONDS.toNanos(15L);  // default 15s\n-      if (proto.hasMaxGrpcTimeout()) {\n-        timeoutNano = Durations.toNanos(proto.getMaxGrpcTimeout());\n-      } else if (proto.hasTimeout()) {\n-        timeoutNano = Durations.toNanos(proto.getTimeout());\n-      }\n-      if (timeoutNano == 0) {\n-        timeoutNano = Long.MAX_VALUE;\n+      long timeoutNano = 0L;", "originalCommit": "49c14d25f4545b208121a1c29eef9a6a3f579a45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxMjgyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505012829", "bodyText": "Nope, if you look at the table in the gRFC, a value of 0 for any of those fields is effectively equivalent to the field is not set.\nSo the order of preference is:\n\nIf maxStreamDuration.hasGrpcTimeoutHeaderMax() and maxStreamDuration.getGrpcTimeoutHeaderMax() != 0: use it. Otherwise, go to next step.\nIf maxStreamDuration.hasMaxStreamDuration() and maxStreamDuration.getMaxStreamDuration() != 0: use it. Otherwise, go to next step.\nIf max_stream_duration from the HttpConnectionManager.common_http_options is not 0, use this as timeout. Otherwise, use application's timeout.", "author": "voidzcy", "createdAt": "2020-10-14T22:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxNDgxNQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505014815", "bodyText": "The table is after applying the fallback if possible.\n\"Note that the max_stream_duration column refers to the effective setting based on both RouteAction.max_stream_duration.max_stream_duration and the max_stream_duration from the HTTP Connection Manager's common_http_options.\"\nThe condition for when to apply fallback does not change.", "author": "dapengzhang0", "createdAt": "2020-10-14T22:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxNzMyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505017329", "bodyText": "See my updated comment. I don't understand your point. But, a value of 0 is effectively equivalent to it is not set, do you agree with that?", "author": "voidzcy", "createdAt": "2020-10-14T22:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxOTI0OA==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505019248", "bodyText": "Case 1 corresponds to row 4 of the table.\n\nIf maxStreamDuration.hasGrpcTimeoutHeaderMax() and maxStreamDuration.getGrpcTimeoutHeaderMax() != 0: use it. Otherwise, go to next step.\n\nThis is completely broken for case 1.", "author": "dapengzhang0", "createdAt": "2020-10-14T22:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAyMTAzNQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505021035", "bodyText": "Ah, that table is problematic. If you interpret it in that way, the second last row is a counter-example...", "author": "voidzcy", "createdAt": "2020-10-14T22:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAyMjU2NQ==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505022565", "bodyText": "the second last row is a counter-example\n\nThe second from the last row does not conflict with any other row, it just takes min(20, infinite).", "author": "dapengzhang0", "createdAt": "2020-10-14T22:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA2MjIxMA==", "url": "https://github.com/grpc/grpc-java/pull/7481#discussion_r505062210", "bodyText": "Okay, fixed. Falling back to max_stream_duration from the HttpConnectionManager.common_http_options will only take place if both !maxStreamDuration.hasGrpcTimeoutHeaderMax() and !maxStreamDuration.hasMaxStreamDuration() hold. We don't need to make the last fallback value nullable as its value of 0 and unset are treated equivalently (aka, as infinite) when it is indeed used.", "author": "voidzcy", "createdAt": "2020-10-14T23:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk5MjE0NA=="}], "type": "inlineReview", "revised_code": {"commit": "77c9ba2fb6b2eeb3bf4ce81451e850afa02d790e", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/EnvoyProtoData.java b/xds/src/main/java/io/grpc/xds/EnvoyProtoData.java\nindex 7aa60f3b5..e6e1d2a36 100644\n--- a/xds/src/main/java/io/grpc/xds/EnvoyProtoData.java\n+++ b/xds/src/main/java/io/grpc/xds/EnvoyProtoData.java\n\n@@ -1230,7 +1231,7 @@ final class EnvoyProtoData {\n           return StructOrError.fromError(\n               \"Unknown cluster specifier: \" + proto.getClusterSpecifierCase());\n       }\n-      long timeoutNano = 0L;\n+      Long timeoutNano = null;\n       if (proto.hasMaxStreamDuration()) {\n         io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration maxStreamDuration\n             = proto.getMaxStreamDuration();\n"}}, {"oid": "77c9ba2fb6b2eeb3bf4ce81451e850afa02d790e", "url": "https://github.com/grpc/grpc-java/commit/77c9ba2fb6b2eeb3bf4ce81451e850afa02d790e", "message": "Explicitly set value of 0 in RouteAction is different than unset. Fallback should not happen if the timeout value in RouteAction is set (including 0).", "committedDate": "2020-10-14T23:20:23Z", "type": "commit"}, {"oid": "d488707b8aa5180892d1417ebc7977b835da63a3", "url": "https://github.com/grpc/grpc-java/commit/d488707b8aa5180892d1417ebc7977b835da63a3", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_timeout_with_max_stream_duration", "committedDate": "2020-10-15T00:23:45Z", "type": "commit"}, {"oid": "d488707b8aa5180892d1417ebc7977b835da63a3", "url": "https://github.com/grpc/grpc-java/commit/d488707b8aa5180892d1417ebc7977b835da63a3", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_timeout_with_max_stream_duration", "committedDate": "2020-10-15T00:23:45Z", "type": "forcePushed"}]}