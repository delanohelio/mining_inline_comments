{"pr_number": 6807, "pr_title": "Add disableAutoRequest method that disables all automatic inbound flow-control requests", "pr_createdAt": "2020-03-05T06:02:45Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6807", "timeline": [{"oid": "87bb38aca11a85463f22615f2c42f4829269a245", "url": "https://github.com/grpc/grpc-java/commit/87bb38aca11a85463f22615f2c42f4829269a245", "message": "Update ClientCalls to disable initial flow-control\n\nThe default behavior of requesting initial messages is applied even if disableAutoInboundFlowControl is called. ServerCalls disables all automatic flow control which is much more useful in case the user can't handle incoming messages until some time after the call has started.  This change creates a new StartableListener that has an onStart method that is invoked when the call is started which makes initial requests if necessary.", "committedDate": "2020-03-05T06:01:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA5NDQ4Nw==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r388094487", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final class UnaryStreamToFuture<ReqT, RespT> extends StartableListener<RespT> {\n          \n          \n            \n              private static final class UnaryStreamToFuture<RespT> extends StartableListener<RespT> {", "author": "DRayX", "createdAt": "2020-03-05T06:10:13Z", "path": "stub/src/main/java/io/grpc/stub/ClientCalls.java", "diffHunk": "@@ -456,12 +450,23 @@ public void onReady() {\n         adapter.onReadyHandler.run();\n       }\n     }\n+\n+    @Override\n+    void onStart() {\n+      if (adapter.autoFlowControlEnabled) {\n+        if (streamingResponse) {\n+          adapter.request(1);\n+        } else {\n+          adapter.request(2);\n+        }\n+      }\n+    }\n   }\n \n   /**\n    * Completes a {@link GrpcFuture} using {@link StreamObserver} events.\n    */\n-  private static final class UnaryStreamToFuture<RespT> extends ClientCall.Listener<RespT> {\n+  private static final class UnaryStreamToFuture<ReqT, RespT> extends StartableListener<RespT> {", "originalCommit": "87bb38aca11a85463f22615f2c42f4829269a245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86752b0ca77cd713bff117fdce1d364abd75003b", "chunk": "diff --git a/stub/src/main/java/io/grpc/stub/ClientCalls.java b/stub/src/main/java/io/grpc/stub/ClientCalls.java\nindex 0451a994c..ef487357e 100644\n--- a/stub/src/main/java/io/grpc/stub/ClientCalls.java\n+++ b/stub/src/main/java/io/grpc/stub/ClientCalls.java\n\n@@ -466,7 +466,7 @@ public final class ClientCalls {\n   /**\n    * Completes a {@link GrpcFuture} using {@link StreamObserver} events.\n    */\n-  private static final class UnaryStreamToFuture<ReqT, RespT> extends StartableListener<RespT> {\n+  private static final class UnaryStreamToFuture<RespT> extends StartableListener<RespT> {\n     private final GrpcFuture<RespT> responseFuture;\n     private RespT value;\n \n"}}, {"oid": "86752b0ca77cd713bff117fdce1d364abd75003b", "url": "https://github.com/grpc/grpc-java/commit/86752b0ca77cd713bff117fdce1d364abd75003b", "message": "Update stub/src/main/java/io/grpc/stub/ClientCalls.java\r\n\r\nDelete accidental addtion", "committedDate": "2020-03-05T06:10:29Z", "type": "commit"}, {"oid": "7029ad70bb69bcdbd85d5685238f2a322510d5ec", "url": "https://github.com/grpc/grpc-java/commit/7029ad70bb69bcdbd85d5685238f2a322510d5ec", "message": "Add new disableAutoRequest method\n\nAdd a new disableAutoRequest method that disables all automatic requests while disableAutoInboundFlowControl maintains existing behavior.  disableAutoInboundFlowControl is also marked as Deprecated.", "committedDate": "2020-03-09T21:39:47Z", "type": "commit"}, {"oid": "4fd1176ab01b98ba00b2fe98ee7a391a379dec2e", "url": "https://github.com/grpc/grpc-java/commit/4fd1176ab01b98ba00b2fe98ee7a391a379dec2e", "message": "Add @Deprecated annotation to overrides", "committedDate": "2020-03-09T21:56:42Z", "type": "commit"}, {"oid": "2a036471fa21bac8d8de48364aee6483a9f99556", "url": "https://github.com/grpc/grpc-java/commit/2a036471fa21bac8d8de48364aee6483a9f99556", "message": "Update ClientResponseObserver comment", "committedDate": "2020-03-09T22:43:07Z", "type": "commit"}, {"oid": "07bb0826830d93e681247db9f4ff1940bd45e3d6", "url": "https://github.com/grpc/grpc-java/commit/07bb0826830d93e681247db9f4ff1940bd45e3d6", "message": "Update Manual Flow Control examples\n\nUpdate the manual flow control examples to use the new disableAutoRequest method.  Note that the ManualFlowControlClient now needs to request one message after the call has been started.", "committedDate": "2020-03-09T22:47:49Z", "type": "commit"}, {"oid": "1e8181a286ef78047ed40496677afebed5957609", "url": "https://github.com/grpc/grpc-java/commit/1e8181a286ef78047ed40496677afebed5957609", "message": "Update ProtoReflectionService to use disableAutoRequest", "committedDate": "2020-03-09T22:55:35Z", "type": "commit"}, {"oid": "24d6763e50b9042bc7fcd3842c21f7c7743c86db", "url": "https://github.com/grpc/grpc-java/commit/24d6763e50b9042bc7fcd3842c21f7c7743c86db", "message": "Fixed mistake in comment", "committedDate": "2020-03-09T22:56:51Z", "type": "commit"}, {"oid": "c7083ae25357adbb05df2f0da19c0735712b1b7b", "url": "https://github.com/grpc/grpc-java/commit/c7083ae25357adbb05df2f0da19c0735712b1b7b", "message": "Fix flowControlOnCompleteWithPendingRequest test", "committedDate": "2020-03-09T23:26:40Z", "type": "commit"}, {"oid": "2014d062a92b3f82d21cf78f4eee67553806b612", "url": "https://github.com/grpc/grpc-java/commit/2014d062a92b3f82d21cf78f4eee67553806b612", "message": "Update ManualFlowControlClient example\n\nUpdate the manual flow control client example to use a pattern that is applicable in all call arities (unary or streaming request).  If the call is unary request, the StreamObserver isn't returned, so the initial request can't be started from the return value, but the initial request can't be made before the call is started, so we expose a custom \"request\" method on the ClinetResponseObserver implementation.", "committedDate": "2020-03-10T00:10:17Z", "type": "commit"}, {"oid": "4f90e0d9f23097d1681235115725bc5cb334d53f", "url": "https://github.com/grpc/grpc-java/commit/4f90e0d9f23097d1681235115725bc5cb334d53f", "message": "Update {Client|Server}CallsTest", "committedDate": "2020-03-10T00:16:29Z", "type": "commit"}, {"oid": "80fc740142cf2d7c148b5f7b9183b0de6cb2945b", "url": "https://github.com/grpc/grpc-java/commit/80fc740142cf2d7c148b5f7b9183b0de6cb2945b", "message": "Update ClientCalls.java", "committedDate": "2020-03-10T00:35:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0NDE0Nw==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390044147", "bodyText": "Mention that they will need one additional request(1) to match the new behavior. It might be worth putting that as a code snippet in the longer method javadoc.", "author": "ejona86", "createdAt": "2020-03-10T01:14:41Z", "path": "stub/src/main/java/io/grpc/stub/CallStreamObserver.java", "diffHunk": "@@ -106,9 +106,33 @@\n    *   </li>\n    * </ul>\n    * </p>\n+   *\n+   * @deprecated Use {@link #disableAutoRequest} instead. This method will be removed.", "originalCommit": "80fc740142cf2d7c148b5f7b9183b0de6cb2945b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY2MzcwNQ==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390663705", "bodyText": "Added a note on migrating with an snippet of example code to the javadoc of disableAutoInboundFlowControl.  Also called out that for server-side, no change is required, but for client side an additional request is needed.", "author": "DRayX", "createdAt": "2020-03-10T23:13:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0NDE0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c149edc24c0ea6a3b785348d8cc62699ac477509", "chunk": "diff --git a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\nindex 07cf57691..cfae34811 100644\n--- a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n+++ b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n\n@@ -113,8 +113,8 @@ public abstract class CallStreamObserver<V> implements StreamObserver<V> {\n   public abstract void disableAutoInboundFlowControl();\n \n   /**\n-   * Disables automatic flow control where initial tokens are requested when the call is started,\n-   * and a token is returned to the peer after a call to the 'inbound' {@link\n+   * Disables automatic flow control where initial messages are requested when the call is started,\n+   * and an additional message is requested to be read after a call to the 'inbound' {@link\n    * io.grpc.stub.StreamObserver#onNext(Object)} has completed. If disabled an application must\n    * make explicit calls to {@link #request} to receive any messages.\n    *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyNzExNQ==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390527115", "bodyText": "typo: s/recieved/received/s", "author": "voidzcy", "createdAt": "2020-03-10T18:32:58Z", "path": "stub/src/main/java/io/grpc/stub/CallStreamObserver.java", "diffHunk": "@@ -106,9 +106,33 @@\n    *   </li>\n    * </ul>\n    * </p>\n+   *\n+   * @deprecated Use {@link #disableAutoRequest} instead. This method will be removed.\n    */\n+  @Deprecated\n   public abstract void disableAutoInboundFlowControl();\n \n+  /**\n+   * Disables automatic flow control where initial tokens are requested when the call is started,\n+   * and a token is returned to the peer after a call to the 'inbound' {@link\n+   * io.grpc.stub.StreamObserver#onNext(Object)} has completed. If disabled an application must\n+   * make explicit calls to {@link #request} to receive any messages.\n+   *\n+   * <p>On client-side this method may only be called during {@link\n+   * ClientResponseObserver#beforeStart}. On server-side it may only be called during the initial\n+   * call to the application, before the service returns its {@code StreamObserver}.\n+   *\n+   * <p>Note that for server-side cases where the message is recieved before the handler is invoked,", "originalCommit": "80fc740142cf2d7c148b5f7b9183b0de6cb2945b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1Mzc1Mw==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390653753", "bodyText": "Wow, good catch", "author": "DRayX", "createdAt": "2020-03-10T22:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyNzExNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c149edc24c0ea6a3b785348d8cc62699ac477509", "chunk": "diff --git a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\nindex 07cf57691..cfae34811 100644\n--- a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n+++ b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n\n@@ -113,8 +113,8 @@ public abstract class CallStreamObserver<V> implements StreamObserver<V> {\n   public abstract void disableAutoInboundFlowControl();\n \n   /**\n-   * Disables automatic flow control where initial tokens are requested when the call is started,\n-   * and a token is returned to the peer after a call to the 'inbound' {@link\n+   * Disables automatic flow control where initial messages are requested when the call is started,\n+   * and an additional message is requested to be read after a call to the 'inbound' {@link\n    * io.grpc.stub.StreamObserver#onNext(Object)} has completed. If disabled an application must\n    * make explicit calls to {@link #request} to receive any messages.\n    *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3ODgzMg==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390578832", "bodyText": "although it is previous doc's fault, token is unclear. can you add description about token that it is basically number of messages?\none contributor was asking this before in #6561", "author": "creamsoup", "createdAt": "2020-03-10T20:05:31Z", "path": "stub/src/main/java/io/grpc/stub/CallStreamObserver.java", "diffHunk": "@@ -106,9 +106,33 @@\n    *   </li>\n    * </ul>\n    * </p>\n+   *\n+   * @deprecated Use {@link #disableAutoRequest} instead. This method will be removed.\n    */\n+  @Deprecated\n   public abstract void disableAutoInboundFlowControl();\n \n+  /**\n+   * Disables automatic flow control where initial tokens are requested when the call is started,\n+   * and a token is returned to the peer after a call to the 'inbound' {@link", "originalCommit": "80fc740142cf2d7c148b5f7b9183b0de6cb2945b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1Njg1Ng==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r390656856", "bodyText": "Ya, the problem is that the obvious way to word it is that additional messages are requested from the peer, but that is misleading at best and completely false at worst.  Depending on the size of the message each request may result in the peer being able to send an additional 0 to many messages\nIf the message read from the buffer is small and the peer is trying to send a large message already, it doesn't actually free the peer to send any messages; if the message read from the buffer is very large, and the peer is waiting to send a bunch of small messages (e.g. 0 byte messages), one request could result in the peer generating and sending thousands of messages.\nWithout going into the details of how the message based flow control in the API translates to the underlying byte window based HTTP/2 flow control, I'm not really sure how to accurately document this.  For now I've changed it to \"message to be read\" (without specifying from where).  Thoughts?", "author": "DRayX", "createdAt": "2020-03-10T22:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3ODgzMg=="}], "type": "inlineReview", "revised_code": {"commit": "c149edc24c0ea6a3b785348d8cc62699ac477509", "chunk": "diff --git a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\nindex 07cf57691..cfae34811 100644\n--- a/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n+++ b/stub/src/main/java/io/grpc/stub/CallStreamObserver.java\n\n@@ -113,8 +113,8 @@ public abstract class CallStreamObserver<V> implements StreamObserver<V> {\n   public abstract void disableAutoInboundFlowControl();\n \n   /**\n-   * Disables automatic flow control where initial tokens are requested when the call is started,\n-   * and a token is returned to the peer after a call to the 'inbound' {@link\n+   * Disables automatic flow control where initial messages are requested when the call is started,\n+   * and an additional message is requested to be read after a call to the 'inbound' {@link\n    * io.grpc.stub.StreamObserver#onNext(Object)} has completed. If disabled an application must\n    * make explicit calls to {@link #request} to receive any messages.\n    *\n"}}, {"oid": "c149edc24c0ea6a3b785348d8cc62699ac477509", "url": "https://github.com/grpc/grpc-java/commit/c149edc24c0ea6a3b785348d8cc62699ac477509", "message": "Update CallStreamObserver.java", "committedDate": "2020-03-10T22:53:22Z", "type": "commit"}, {"oid": "effb394975d225f989e7d76e6496e7a6648ad91e", "url": "https://github.com/grpc/grpc-java/commit/effb394975d225f989e7d76e6496e7a6648ad91e", "message": "Add a note about migrating from disableAutoInboundFlowControl to disableAutoRequest", "committedDate": "2020-03-10T23:08:50Z", "type": "commit"}, {"oid": "b88f02fa4db5cc5e92c7f0b30501249b4598e3e9", "url": "https://github.com/grpc/grpc-java/commit/b88f02fa4db5cc5e92c7f0b30501249b4598e3e9", "message": "Update CallStreamObserver.java\n\nNoted the difference between client and server migration", "committedDate": "2020-03-10T23:12:47Z", "type": "commit"}, {"oid": "4285b05b8b60fcec4cd50e46b7096e70011bacf9", "url": "https://github.com/grpc/grpc-java/commit/4285b05b8b60fcec4cd50e46b7096e70011bacf9", "message": "Update CallStreamObserver.java\n\nFix indentation", "committedDate": "2020-03-11T00:26:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODIzOQ==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r401248239", "bodyText": "This should probably check if the response is unary and if so do an extra request(1).\nThe point of the extra request is to detect the situation a server is sending multiple responses when it shouldn't. Without the additional request(1) the RPC will deadlock. This should be handled in ClientCallImpl, really, but I believe there are issues in that location with how to report the error when a problem is detected.", "author": "ejona86", "createdAt": "2020-03-31T22:17:29Z", "path": "stub/src/main/java/io/grpc/stub/ClientCalls.java", "diffHunk": "@@ -372,13 +372,23 @@ public void setOnReadyHandler(Runnable onReadyHandler) {\n       this.onReadyHandler = onReadyHandler;\n     }\n \n+    @Deprecated\n     @Override\n     public void disableAutoInboundFlowControl() {\n       if (frozen) {\n         throw new IllegalStateException(\n             \"Cannot disable auto flow control after call started. Use ClientResponseObserver\");\n       }\n-      autoFlowControlEnabled = false;\n+      autoRequestMode = AutoRequestMode.INITIAL_ONLY;\n+    }\n+\n+    @Override\n+    public void disableAutoRequest() {\n+      if (frozen) {\n+        throw new IllegalStateException(\n+            \"Cannot disable auto flow control after call started. Use ClientResponseObserver\");\n+      }\n+      autoRequestMode = AutoRequestMode.DISABLED;\n     }\n \n     @Override", "originalCommit": "4285b05b8b60fcec4cd50e46b7096e70011bacf9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgwMDgyOA==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r401800828", "bodyText": "My concern with doing an extra request(1) early of the clients control is that then the client has to handle a message being delivered before one is requested.  The place that would make sense to do this extra request is after the first message is delivered, but that would be a bit confusing as the intent of disableAutoRequest is to turn off auto requesting.", "author": "DRayX", "createdAt": "2020-04-01T17:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODIzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgwMzc3NQ==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r401803775", "bodyText": "No, I'm suggesting \"when the application does a request(1) for a unary response, turn it into a request(2)\". That should be transparent to the application but let gRPC error if the server does something funky.", "author": "ejona86", "createdAt": "2020-04-01T17:56:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODIzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM4NzU1OA==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r403387558", "bodyText": "Oh, I see, sure that makes sense.  Most logical implementation would be to transform request(1) into request(2) when unary and leave all other values the same (so as to not overflow INT_MAX, or erroneously transform request(0) into request(1)).", "author": "DRayX", "createdAt": "2020-04-03T23:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODIzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDMzMA==", "url": "https://github.com/grpc/grpc-java/pull/6807#discussion_r403390330", "bodyText": "Sounds good.", "author": "ejona86", "createdAt": "2020-04-04T00:02:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODIzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "d2b25e625b47892d466706b1f09cdbb53109ba3d", "chunk": "diff --git a/stub/src/main/java/io/grpc/stub/ClientCalls.java b/stub/src/main/java/io/grpc/stub/ClientCalls.java\nindex 49a787a33..ab96c61e2 100644\n--- a/stub/src/main/java/io/grpc/stub/ClientCalls.java\n+++ b/stub/src/main/java/io/grpc/stub/ClientCalls.java\n\n@@ -375,25 +371,29 @@ public final class ClientCalls {\n     @Deprecated\n     @Override\n     public void disableAutoInboundFlowControl() {\n-      if (frozen) {\n-        throw new IllegalStateException(\n-            \"Cannot disable auto flow control after call started. Use ClientResponseObserver\");\n-      }\n-      autoRequestMode = AutoRequestMode.INITIAL_ONLY;\n+      disableAutoRequestWithInitial(1);\n     }\n \n     @Override\n-    public void disableAutoRequest() {\n+    public void disableAutoRequestWithInitial(int request) {\n       if (frozen) {\n         throw new IllegalStateException(\n             \"Cannot disable auto flow control after call started. Use ClientResponseObserver\");\n       }\n-      autoRequestMode = AutoRequestMode.DISABLED;\n+      Preconditions.checkArugment(request >= 0, \"Initial requests must be non-negative\");\n+      initialRequest = request;\n+      autoRequestEnabled = false;\n     }\n \n     @Override\n     public void request(int count) {\n-      call.request(count);\n+      if (!streamingResponse && count == 1) {\n+        // Initially ask for two responses from flow-control so that if a misbehaving server\n+        // sends more than one responses, we can catch it and fail it in the listener.\n+        call.request(2);\n+      } else {\n+        call.request(count);\n+      }\n     }\n \n     @Override\n"}}, {"oid": "d2b25e625b47892d466706b1f09cdbb53109ba3d", "url": "https://github.com/grpc/grpc-java/commit/d2b25e625b47892d466706b1f09cdbb53109ba3d", "message": "Switch to disableAutoRequestWithInitial\n\nSwitch to a disableAutoRequestWithInitialMethod that allows for an initial number of requests to be specified.  Also, change the behavior of ClientCalls.CallToStreamObserverAdapter.request to request 2 if expecting unary respone.", "committedDate": "2020-04-04T00:54:22Z", "type": "commit"}, {"oid": "14ce757ac1e28341b352f9ecd643edb9c0720160", "url": "https://github.com/grpc/grpc-java/commit/14ce757ac1e28341b352f9ecd643edb9c0720160", "message": "Update ClientCalls.java\n\nFix accidental deletion", "committedDate": "2020-04-04T01:01:09Z", "type": "commit"}, {"oid": "b83f94f3d4bf739e680979bbc5d7c3c68afb3fcd", "url": "https://github.com/grpc/grpc-java/commit/b83f94f3d4bf739e680979bbc5d7c3c68afb3fcd", "message": "Update ClientCalls.java", "committedDate": "2020-04-04T01:06:48Z", "type": "commit"}, {"oid": "1839faf7641833f83ea168b1be8a8edb96f29acb", "url": "https://github.com/grpc/grpc-java/commit/1839faf7641833f83ea168b1be8a8edb96f29acb", "message": "Fix more typos", "committedDate": "2020-04-04T01:21:50Z", "type": "commit"}, {"oid": "14d2276a5ae9441df2d364cc6e64cb5115b7b8ff", "url": "https://github.com/grpc/grpc-java/commit/14d2276a5ae9441df2d364cc6e64cb5115b7b8ff", "message": "Update ServerCalls.java", "committedDate": "2020-04-04T01:25:06Z", "type": "commit"}, {"oid": "da1d10973257108f840fd82857fcb7361af7023c", "url": "https://github.com/grpc/grpc-java/commit/da1d10973257108f840fd82857fcb7361af7023c", "message": "fix bug causing hanging servers", "committedDate": "2020-05-04T17:19:08Z", "type": "commit"}, {"oid": "371bb887651d3d521511ded6cbe50f619f9155e6", "url": "https://github.com/grpc/grpc-java/commit/371bb887651d3d521511ded6cbe50f619f9155e6", "message": "Remove `@Deprecated` from disableAutoInboundFlowControl", "committedDate": "2020-05-05T17:31:50Z", "type": "commit"}, {"oid": "23d5b17c5964f2f25f2f286ab8ca97b11fbdd7b6", "url": "https://github.com/grpc/grpc-java/commit/23d5b17c5964f2f25f2f286ab8ca97b11fbdd7b6", "message": "Fix style", "committedDate": "2020-05-05T18:07:27Z", "type": "commit"}]}