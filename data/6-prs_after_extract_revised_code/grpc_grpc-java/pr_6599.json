{"pr_number": 6599, "pr_title": "xds: support for updating upstreamTlsContext and SslContextProvider, also release object in SdsProtocolNegotiators", "pr_createdAt": "2020-01-13T20:09:35Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6599", "timeline": [{"oid": "09de5580958862621f586d007a4b3459ead9a7a7", "url": "https://github.com/grpc/grpc-java/commit/09de5580958862621f586d007a4b3459ead9a7a7", "message": "xds: support changing upstreamTlsContext and loading SslContextProvider\nalso release objects in SdsProtocolNegotiators", "committedDate": "2020-01-13T20:07:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2ODMwOQ==", "url": "https://github.com/grpc/grpc-java/pull/6599#discussion_r366068309", "bodyText": "Move javadoc to interface?", "author": "dapengzhang0", "createdAt": "2020-01-13T22:42:38Z", "path": "xds/src/main/java/io/grpc/xds/sds/TlsContextManager.java", "diffHunk": "@@ -61,13 +61,15 @@ public static synchronized TlsContextManager getInstance() {\n   }\n \n   /** Creates a SslContextProvider. Used for retrieving a server-side SslContext. */", "originalCommit": "09de5580958862621f586d007a4b3459ead9a7a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "31b09d3ba3ffc727ebf13c3577261f064561f305", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/TlsContextManager.java b/xds/src/main/java/io/grpc/xds/sds/TlsContextManager.java\nindex 10bf819b6..eeabc91a6 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/TlsContextManager.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/TlsContextManager.java\n\n@@ -16,65 +16,20 @@\n \n package io.grpc.xds.sds;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-\n-import com.google.common.annotations.VisibleForTesting;\n import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n import io.grpc.Internal;\n-import io.grpc.xds.sds.ReferenceCountingSslContextProviderMap.SslContextProviderFactory;\n \n-/**\n- * Class to manage {@link SslContextProvider} objects created from inputs we get from xDS. Used by\n- * gRPC-xds to access the SslContext's and is not public API. This manager manages the life-cycle of\n- * {@link SslContextProvider} objects as shared resources via ref-counting as described in {@link\n- * ReferenceCountingSslContextProviderMap}.\n- */\n @Internal\n-public final class TlsContextManager implements TlsContextManagerInterface {\n-\n-  private static TlsContextManager instance;\n-\n-  private final ReferenceCountingSslContextProviderMap<UpstreamTlsContext> mapForClients;\n-  private final ReferenceCountingSslContextProviderMap<DownstreamTlsContext> mapForServers;\n-\n-  private TlsContextManager() {\n-    this(new ClientSslContextProviderFactory(), new ServerSslContextProviderFactory());\n-  }\n-\n-  @VisibleForTesting\n-  TlsContextManager(\n-      SslContextProviderFactory<UpstreamTlsContext> clientFactory,\n-      SslContextProviderFactory<DownstreamTlsContext> serverFactory) {\n-    checkNotNull(clientFactory, \"clientFactory\");\n-    checkNotNull(serverFactory, \"serverFactory\");\n-    mapForClients = new ReferenceCountingSslContextProviderMap<>(clientFactory);\n-    mapForServers = new ReferenceCountingSslContextProviderMap<>(serverFactory);\n-  }\n-\n-  /** Gets the TlsContextManager singleton. */\n-  public static synchronized TlsContextManager getInstance() {\n-    if (instance == null) {\n-      instance = new TlsContextManager();\n-    }\n-    return instance;\n-  }\n+public interface TlsContextManager {\n \n   /** Creates a SslContextProvider. Used for retrieving a server-side SslContext. */\n-  @Override\n-  public SslContextProvider<DownstreamTlsContext> findOrCreateServerSslContextProvider(\n-      DownstreamTlsContext downstreamTlsContext) {\n-    checkNotNull(downstreamTlsContext, \"downstreamTlsContext\");\n-    return mapForServers.get(downstreamTlsContext);\n-  }\n+  SslContextProvider<DownstreamTlsContext> findOrCreateServerSslContextProvider(\n+      DownstreamTlsContext downstreamTlsContext);\n \n   /** Creates a SslContextProvider. Used for retrieving a client-side SslContext. */\n-  @Override\n-  public SslContextProvider<UpstreamTlsContext> findOrCreateClientSslContextProvider(\n-      UpstreamTlsContext upstreamTlsContext) {\n-    checkNotNull(upstreamTlsContext, \"upstreamTlsContext\");\n-    return mapForClients.get(upstreamTlsContext);\n-  }\n+  SslContextProvider<UpstreamTlsContext> findOrCreateClientSslContextProvider(\n+      UpstreamTlsContext upstreamTlsContext);\n \n   /**\n    * Releases an instance of the given client-side {@link SslContextProvider}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2ODQ4MQ==", "url": "https://github.com/grpc/grpc-java/pull/6599#discussion_r366068481", "bodyText": "@Internal?", "author": "dapengzhang0", "createdAt": "2020-01-13T22:43:06Z", "path": "xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.sds;\n+\n+import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n+\n+public interface TlsContextManagerInterface {", "originalCommit": "09de5580958862621f586d007a4b3459ead9a7a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "31b09d3ba3ffc727ebf13c3577261f064561f305", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java b/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java\ndeleted file mode 100644\nindex 509498c78..000000000\n--- a/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java\n+++ /dev/null\n\n@@ -1,35 +0,0 @@\n-/*\n- * Copyright 2020 The gRPC Authors\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package io.grpc.xds.sds;\n-\n-import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n-import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n-\n-public interface TlsContextManagerInterface {\n-\n-  SslContextProvider<DownstreamTlsContext> findOrCreateServerSslContextProvider(\n-      DownstreamTlsContext downstreamTlsContext);\n-\n-  SslContextProvider<UpstreamTlsContext> findOrCreateClientSslContextProvider(\n-      UpstreamTlsContext upstreamTlsContext);\n-\n-  SslContextProvider<UpstreamTlsContext> releaseClientSslContextProvider(\n-      SslContextProvider<UpstreamTlsContext> sslContextProvider);\n-\n-  SslContextProvider<DownstreamTlsContext> releaseServerSslContextProvider(\n-      SslContextProvider<DownstreamTlsContext> sslContextProvider);\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2ODc3OQ==", "url": "https://github.com/grpc/grpc-java/pull/6599#discussion_r366068779", "bodyText": "Rename TlsContextManager to TlsContextManagerImpl and rename this class to TlsContextManager?", "author": "dapengzhang0", "createdAt": "2020-01-13T22:43:50Z", "path": "xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.sds;\n+\n+import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n+import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n+\n+public interface TlsContextManagerInterface {", "originalCommit": "09de5580958862621f586d007a4b3459ead9a7a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0NTcyNA==", "url": "https://github.com/grpc/grpc-java/pull/6599#discussion_r366145724", "bodyText": "It will generate more diffs in this PR (since TlsContextManager is the existing class). Will do it though...", "author": "sanjaypujare", "createdAt": "2020-01-14T04:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2ODc3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "31b09d3ba3ffc727ebf13c3577261f064561f305", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java b/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java\ndeleted file mode 100644\nindex 509498c78..000000000\n--- a/xds/src/main/java/io/grpc/xds/sds/TlsContextManagerInterface.java\n+++ /dev/null\n\n@@ -1,35 +0,0 @@\n-/*\n- * Copyright 2020 The gRPC Authors\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package io.grpc.xds.sds;\n-\n-import io.envoyproxy.envoy.api.v2.auth.DownstreamTlsContext;\n-import io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext;\n-\n-public interface TlsContextManagerInterface {\n-\n-  SslContextProvider<DownstreamTlsContext> findOrCreateServerSslContextProvider(\n-      DownstreamTlsContext downstreamTlsContext);\n-\n-  SslContextProvider<UpstreamTlsContext> findOrCreateClientSslContextProvider(\n-      UpstreamTlsContext upstreamTlsContext);\n-\n-  SslContextProvider<UpstreamTlsContext> releaseClientSslContextProvider(\n-      SslContextProvider<UpstreamTlsContext> sslContextProvider);\n-\n-  SslContextProvider<DownstreamTlsContext> releaseServerSslContextProvider(\n-      SslContextProvider<DownstreamTlsContext> sslContextProvider);\n-}\n"}}, {"oid": "31b09d3ba3ffc727ebf13c3577261f064561f305", "url": "https://github.com/grpc/grpc-java/commit/31b09d3ba3ffc727ebf13c3577261f064561f305", "message": "address review comments", "committedDate": "2020-01-14T04:56:47Z", "type": "commit"}]}