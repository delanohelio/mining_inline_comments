{"pr_number": 6586, "pr_title": "xds: add support for static and combined validation context and enhanced loggging", "pr_createdAt": "2020-01-06T19:16:13Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6586", "timeline": [{"oid": "b1b56854f802cb8868e383f6479aee9eac9e9687", "url": "https://github.com/grpc/grpc-java/commit/b1b56854f802cb8868e383f6479aee9eac9e9687", "message": "xds: add support for static and combined validation context and enhanced\nloggging", "committedDate": "2020-01-06T19:12:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwNzQ3NA==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363507474", "bodyText": "why not throw exception? returning actual exception seems wrong. also the for loop seems unnecessary if size is fixed.", "author": "creamsoup", "createdAt": "2020-01-06T22:10:52Z", "path": "xds/src/main/java/io/grpc/xds/sds/SdsClient.java", "diffHunk": "@@ -333,42 +338,34 @@ public void run() {\n     }\n   }\n \n-  private boolean processSecretsFromDiscoveryResponse(DiscoveryResponse response) {\n+  private Throwable processSecretsFromDiscoveryResponse(DiscoveryResponse response) {", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2OTM2NA==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r364369364", "bodyText": "good point - I was trying to reuse the old 'boolean' logic. Will try to propagate exception and use it to populate the Status.", "author": "sanjaypujare", "createdAt": "2020-01-08T18:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwNzQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/SdsClient.java b/xds/src/main/java/io/grpc/xds/sds/SdsClient.java\nindex ac69a4475..4fb344503 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/SdsClient.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/SdsClient.java\n\n@@ -338,23 +340,15 @@ final class SdsClient {\n     }\n   }\n \n-  private Throwable processSecretsFromDiscoveryResponse(DiscoveryResponse response) {\n+  private void processSecretsFromDiscoveryResponse(DiscoveryResponse response)\n+      throws InvalidProtocolBufferException {\n     List<Any> resources = response.getResourcesList();\n     checkState(resources.size() == 1, \"exactly one resource expected\");\n-    Throwable exceptionSeen = null;\n-    for (Any any : resources) {\n-      final String typeUrl = any.getTypeUrl();\n-      checkState(SECRET_TYPE_URL.equals(typeUrl), \"wrong value for typeUrl %s\", typeUrl);\n-      Secret secret = null;\n-      try {\n-        secret = Secret.parseFrom(any.getValue());\n-        processSecret(secret);\n-      } catch (Throwable throwable) {\n-        exceptionSeen = throwable;\n-        logger.log(Level.SEVERE, \"exception while processing secret\", throwable);\n-      }\n-    }\n-    return exceptionSeen;\n+    Any any = resources.get(0);\n+    final String typeUrl = any.getTypeUrl();\n+    checkState(SECRET_TYPE_URL.equals(typeUrl), \"wrong value for typeUrl %s\", typeUrl);\n+    Secret secret = Secret.parseFrom(any.getValue());\n+    processSecret(secret);\n   }\n \n   private void processSecret(Secret secret) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwOTM3MA==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363509370", "bodyText": "this is not consist with other code (eg L78 in new code). also L110", "author": "creamsoup", "createdAt": "2020-01-06T22:16:16Z", "path": "xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java", "diffHunk": "@@ -97,9 +100,23 @@ private SdsSslContextProvider(\n       Executor channelExecutor) {\n     checkNotNull(upstreamTlsContext, \"upstreamTlsContext\");\n     CommonTlsContext commonTlsContext = upstreamTlsContext.getCommonTlsContext();\n-    SdsSecretConfig validationContextSdsConfig =\n-        commonTlsContext.getValidationContextSdsSecretConfig();\n-\n+    SdsSecretConfig validationContextSdsConfig = null;\n+    CertificateValidationContext staticCertValidationContext = null;\n+    if (commonTlsContext.hasCombinedValidationContext()) {\n+      CommonTlsContext.CombinedCertificateValidationContext combinedValidationContext\n+          = commonTlsContext.getCombinedValidationContext();", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\nindex 69bb4f5a9..3cfbf7370 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n\n@@ -103,11 +104,11 @@ final class SdsSslContextProvider<K> extends SslContextProvider<K>\n     SdsSecretConfig validationContextSdsConfig = null;\n     CertificateValidationContext staticCertValidationContext = null;\n     if (commonTlsContext.hasCombinedValidationContext()) {\n-      CommonTlsContext.CombinedCertificateValidationContext combinedValidationContext\n-          = commonTlsContext.getCombinedValidationContext();\n+      CombinedCertificateValidationContext combinedValidationContext =\n+          commonTlsContext.getCombinedValidationContext();\n       if (combinedValidationContext.hasValidationContextSdsSecretConfig()) {\n-        validationContextSdsConfig\n-           = combinedValidationContext.getValidationContextSdsSecretConfig();\n+        validationContextSdsConfig =\n+           combinedValidationContext.getValidationContextSdsSecretConfig();\n       }\n       if (combinedValidationContext.hasDefaultValidationContext()) {\n         staticCertValidationContext = combinedValidationContext.getDefaultValidationContext();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwOTk1Ng==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363509956", "bodyText": "nit: should be in 2 lines with comment about what it is for.", "author": "creamsoup", "createdAt": "2020-01-06T22:17:55Z", "path": "xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java", "diffHunk": "@@ -135,7 +153,7 @@ private SdsSslContextProvider(\n         node,\n         certSdsConfig,\n         validationContextSdsConfig,\n-        watcherExecutor,\n+        null, watcherExecutor,", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\nindex 69bb4f5a9..3cfbf7370 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n\n@@ -153,7 +154,8 @@ final class SdsSslContextProvider<K> extends SslContextProvider<K>\n         node,\n         certSdsConfig,\n         validationContextSdsConfig,\n-        null, watcherExecutor,\n+        null,\n+        watcherExecutor,\n         channelExecutor,\n         true,\n         downstreamTlsContext);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxMDExNA==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363510114", "bodyText": "should be 1line. also should be indented 4 spaces (i can see this other lines e.g. L224)", "author": "creamsoup", "createdAt": "2020-01-06T22:18:20Z", "path": "xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java", "diffHunk": "@@ -197,21 +220,27 @@ public synchronized void onSecretChanged(Secret secretUpdate) {\n   private void updateSslContext() {\n     try {\n       SslContextBuilder sslContextBuilder;\n+      CertificateValidationContext localCertValidationContext =\n+              mergeStaticAndDynamicCertContexts();\n       if (server) {\n+        logger.log(\n+                Level.FINEST, \"for server\");", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\nindex 69bb4f5a9..3cfbf7370 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n\n@@ -223,8 +225,7 @@ final class SdsSslContextProvider<K> extends SslContextProvider<K>\n       CertificateValidationContext localCertValidationContext =\n               mergeStaticAndDynamicCertContexts();\n       if (server) {\n-        logger.log(\n-                Level.FINEST, \"for server\");\n+        logger.log(Level.FINEST, \"for server\");\n         sslContextBuilder =\n             GrpcSslContexts.forServer(\n                 tlsCertificate.getCertificateChain().getInlineBytes().newInput(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxMDE5NQ==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363510195", "bodyText": "same here.", "author": "creamsoup", "createdAt": "2020-01-06T22:18:31Z", "path": "xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java", "diffHunk": "@@ -197,21 +220,27 @@ public synchronized void onSecretChanged(Secret secretUpdate) {\n   private void updateSslContext() {\n     try {\n       SslContextBuilder sslContextBuilder;\n+      CertificateValidationContext localCertValidationContext =\n+              mergeStaticAndDynamicCertContexts();\n       if (server) {\n+        logger.log(\n+                Level.FINEST, \"for server\");\n         sslContextBuilder =\n             GrpcSslContexts.forServer(\n                 tlsCertificate.getCertificateChain().getInlineBytes().newInput(),\n                 tlsCertificate.getPrivateKey().getInlineBytes().newInput(),\n                 tlsCertificate.hasPassword()\n                     ? tlsCertificate.getPassword().getInlineString()\n                     : null);\n-        if (certificateValidationContext != null) {\n-          sslContextBuilder.trustManager(new SdsTrustManagerFactory(certificateValidationContext));\n+        if (localCertValidationContext != null) {\n+          sslContextBuilder.trustManager(new SdsTrustManagerFactory(localCertValidationContext));\n         }\n       } else {\n+        logger.log(\n+                Level.FINEST, \"for client\");", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\nindex 69bb4f5a9..3cfbf7370 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/SdsSslContextProvider.java\n\n@@ -223,8 +225,7 @@ final class SdsSslContextProvider<K> extends SslContextProvider<K>\n       CertificateValidationContext localCertValidationContext =\n               mergeStaticAndDynamicCertContexts();\n       if (server) {\n-        logger.log(\n-                Level.FINEST, \"for server\");\n+        logger.log(Level.FINEST, \"for server\");\n         sslContextBuilder =\n             GrpcSslContexts.forServer(\n                 tlsCertificate.getCertificateChain().getInlineBytes().newInput(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxMDUxNQ==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r363510515", "bodyText": "those can be called a lot. can you use string interpolation (and probably elsewhere to save resource)? or better, remove those while converting other logging for FINE(ST)?\nbecause, this can be achieved by adding netty LoggingHandler.", "author": "creamsoup", "createdAt": "2020-01-06T22:19:26Z", "path": "xds/src/main/java/io/grpc/xds/sds/internal/SdsProtocolNegotiators.java", "diffHunk": "@@ -150,23 +154,32 @@ public void close() {}\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n+      logger.finest(\"ctx.name=\" + ctx.name() + \", msg=\" + msg);", "originalCommit": "b1b56854f802cb8868e383f6479aee9eac9e9687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2NzA1NA==", "url": "https://github.com/grpc/grpc-java/pull/6586#discussion_r364367054", "bodyText": "removing these as they are not needed at this time.", "author": "sanjaypujare", "createdAt": "2020-01-08T18:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxMDUxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2320bafecf7554e0c2945595474c372b43fab9bb", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/sds/internal/SdsProtocolNegotiators.java b/xds/src/main/java/io/grpc/xds/sds/internal/SdsProtocolNegotiators.java\nindex 941e77d89..a38a7f213 100644\n--- a/xds/src/main/java/io/grpc/xds/sds/internal/SdsProtocolNegotiators.java\n+++ b/xds/src/main/java/io/grpc/xds/sds/internal/SdsProtocolNegotiators.java\n\n@@ -154,19 +154,16 @@ public final class SdsProtocolNegotiators {\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n-      logger.finest(\"ctx.name=\" + ctx.name() + \", msg=\" + msg);\n       reads.add(msg);\n     }\n \n     @Override\n     public void channelReadComplete(ChannelHandlerContext ctx) {\n-      logger.finest(\"ctx.name=\" + ctx.name() + \", reads.size=\" + reads.size());\n       readComplete = true;\n     }\n \n     @Override\n     public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {\n-      logger.finest(\"ctx.name=\" + ctx.name() + \", reads.size=\" + reads.size());\n       for (Object msg : reads) {\n         super.channelRead(ctx, msg);\n       }\n"}}, {"oid": "2320bafecf7554e0c2945595474c372b43fab9bb", "url": "https://github.com/grpc/grpc-java/commit/2320bafecf7554e0c2945595474c372b43fab9bb", "message": "address review comments", "committedDate": "2020-01-08T18:32:43Z", "type": "commit"}, {"oid": "8ee2242ce5defdf4b1d3025235206f490dfd0e27", "url": "https://github.com/grpc/grpc-java/commit/8ee2242ce5defdf4b1d3025235206f490dfd0e27", "message": "test code format fix and logger with parameters", "committedDate": "2020-01-09T00:01:39Z", "type": "commit"}, {"oid": "1a5be5db8a9721f056402a8a90e70b087298be40", "url": "https://github.com/grpc/grpc-java/commit/1a5be5db8a9721f056402a8a90e70b087298be40", "message": "another minor reformat", "committedDate": "2020-01-09T00:11:21Z", "type": "commit"}, {"oid": "04ee41cbd7d607863081d8f437d846da1a4e9257", "url": "https://github.com/grpc/grpc-java/commit/04ee41cbd7d607863081d8f437d846da1a4e9257", "message": "another left over format issue fixed", "committedDate": "2020-01-09T00:22:20Z", "type": "commit"}]}