{"pr_number": 7136, "pr_title": "api,core: add LoadBalancer.Helper#createResolvingOobChannelBuilder api", "pr_createdAt": "2020-06-17T18:38:11Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7136", "timeline": [{"oid": "ebbb48ff2e076b43a5d5db47518fc492495488e2", "url": "https://github.com/grpc/grpc-java/commit/ebbb48ff2e076b43a5d5db47518fc492495488e2", "message": "api,core: add LoadBalancer.Helper#createResolvingOobChannelBuilder api", "committedDate": "2020-06-17T18:27:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MTk1OA==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441751958", "bodyText": "s/prevents/prevent/ ?", "author": "dapengzhang0", "createdAt": "2020-06-17T18:41:19Z", "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl.java", "diffHunk": "@@ -1278,6 +1279,19 @@ public int getDefaultPort() {\n         protected ClientTransportFactory buildTransportFactory() {\n           throw new UnsupportedOperationException();\n         }\n+\n+        @Override\n+        public ManagedChannel build() {\n+          // TODO(creamsoup) prevents main channel to shutdown if oob channel is not terminated", "originalCommit": "ebbb48ff2e076b43a5d5db47518fc492495488e2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "228d0bf8709a5fd1c98e50a26b5cf47857b16c3d", "chunk": "diff --git a/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java b/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\nindex cd173172b..c23bd51e8 100644\n--- a/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\n+++ b/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\n\n@@ -1282,7 +1282,7 @@ final class ManagedChannelImpl extends ManagedChannel implements\n \n         @Override\n         public ManagedChannel build() {\n-          // TODO(creamsoup) prevents main channel to shutdown if oob channel is not terminated\n+          // TODO(creamsoup) prevent main channel to shutdown if oob channel is not terminated\n           return new ManagedChannelImpl(\n                   this,\n                   transportFactory,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NDQyNQ==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441754425", "bodyText": "I think the last sentence is not needed as well. Basically it will use the balancer determined by the service config from the NameResolver or the default config.", "author": "dapengzhang0", "createdAt": "2020-06-17T18:45:43Z", "path": "api/src/main/java/io/grpc/LoadBalancer.java", "diffHunk": "@@ -1044,15 +1044,33 @@ public void updateOobChannelAddresses(ManagedChannel channel, EquivalentAddressG\n      * {@link ManagedChannelBuilder#forTarget} for the format of a target string.\n      *\n      * <p>The target string will be resolved by a {@link NameResolver} created according to the\n-     * target string.  The out-of-band channel doesn't have load-balancing.  If multiple addresses\n-     * are resolved for the target, the first working address will be used.\n+     * target string.  If multiple addresses are resolved for the target, the first working address\n+     * will be used.", "originalCommit": "ebbb48ff2e076b43a5d5db47518fc492495488e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2OTg2MA==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441769860", "bodyText": "yes, removed.", "author": "creamsoup", "createdAt": "2020-06-17T19:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NDQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "228d0bf8709a5fd1c98e50a26b5cf47857b16c3d", "chunk": "diff --git a/api/src/main/java/io/grpc/LoadBalancer.java b/api/src/main/java/io/grpc/LoadBalancer.java\nindex f5f7a8eb3..d2ed1ad93 100644\n--- a/api/src/main/java/io/grpc/LoadBalancer.java\n+++ b/api/src/main/java/io/grpc/LoadBalancer.java\n\n@@ -1044,8 +1044,7 @@ public abstract class LoadBalancer {\n      * {@link ManagedChannelBuilder#forTarget} for the format of a target string.\n      *\n      * <p>The target string will be resolved by a {@link NameResolver} created according to the\n-     * target string.  If multiple addresses are resolved for the target, the first working address\n-     * will be used.\n+     * target string.\n      *\n      * <p>The LoadBalancer is responsible for closing unused OOB channels, and closing all OOB\n      * channels within {@link #shutdown}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1OTUxNA==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441759514", "bodyText": "Do you still need this overriding? Same for below.", "author": "voidzcy", "createdAt": "2020-06-17T18:51:24Z", "path": "core/src/main/java/io/grpc/internal/ManagedChannelImpl.java", "diffHunk": "@@ -1291,15 +1305,12 @@ protected ClientTransportFactory buildTransportFactory() {\n       builder.proxyDetector = nameResolverArgs.getProxyDetector();\n       builder.defaultPort = nameResolverArgs.getDefaultPort();\n       builder.userAgent = userAgent;\n-      return\n-          new ManagedChannelImpl(\n-              builder,\n-              transportFactory,\n-              backoffPolicyProvider,\n-              balancerRpcExecutorPool,\n-              stopwatchSupplier,\n-              Collections.<ClientInterceptor>emptyList(),\n-              timeProvider);\n+      return builder;\n+    }\n+\n+    @Override\n+    public ManagedChannel createResolvingOobChannel(String target) {", "originalCommit": "ebbb48ff2e076b43a5d5db47518fc492495488e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2NDYxNQ==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441764615", "bodyText": "For below we definitely need.", "author": "dapengzhang0", "createdAt": "2020-06-17T18:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1OTUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2OTY2MQ==", "url": "https://github.com/grpc/grpc-java/pull/7136#discussion_r441769661", "bodyText": "done. for the Forwarding one, i didn't change because the method is not final.", "author": "creamsoup", "createdAt": "2020-06-17T19:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1OTUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "228d0bf8709a5fd1c98e50a26b5cf47857b16c3d", "chunk": "diff --git a/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java b/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\nindex cd173172b..c23bd51e8 100644\n--- a/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\n+++ b/core/src/main/java/io/grpc/internal/ManagedChannelImpl.java\n\n@@ -1308,11 +1308,6 @@ final class ManagedChannelImpl extends ManagedChannel implements\n       return builder;\n     }\n \n-    @Override\n-    public ManagedChannel createResolvingOobChannel(String target) {\n-      return createResolvingOobChannelBuilder(target).build();\n-    }\n-\n     @Override\n     public void updateOobChannelAddresses(ManagedChannel channel, EquivalentAddressGroup eag) {\n       checkArgument(channel instanceof OobChannel,\n"}}, {"oid": "228d0bf8709a5fd1c98e50a26b5cf47857b16c3d", "url": "https://github.com/grpc/grpc-java/commit/228d0bf8709a5fd1c98e50a26b5cf47857b16c3d", "message": "address review comments", "committedDate": "2020-06-17T19:04:15Z", "type": "commit"}]}