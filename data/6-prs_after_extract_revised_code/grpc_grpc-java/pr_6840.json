{"pr_number": 6840, "pr_title": "Implemented Frame Size Negotiation in ALTS for gRPC Java", "pr_createdAt": "2020-03-18T20:52:45Z", "pr_url": "https://github.com/grpc/grpc-java/pull/6840", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1MjEwMQ==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r398252101", "bodyText": "Currently max_frame_size is defined in AltsTsiFrameProtector.java.\nPlease define min/max in AltsTsiFrameProtector.java.", "author": "jiangtaoli2016", "createdAt": "2020-03-26T00:34:57Z", "path": "alts/src/main/java/io/grpc/alts/internal/AltsHandshakerClient.java", "diffHunk": "@@ -35,6 +35,9 @@\n   private static final String APPLICATION_PROTOCOL = \"grpc\";\n   private static final String RECORD_PROTOCOL = \"ALTSRP_GCM_AES128_REKEY\";\n   private static final int KEY_LENGTH = AltsChannelCrypter.getKeyLength();\n+  // Frame size negotiation extends frame size range to [MIN_FRAME_SIZE, MAX_FRAME_SIZE].\n+  private static final int MIN_FRAME_SIZE = 16 * 1024;", "originalCommit": "435a40c16fdea103a13ae292e58350f909183afa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1ODg3Nw==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r398258877", "bodyText": "In AltsTsiFrameProtector.java, we could have 4 constants\nMIN_FRAME_SIZE, 16KB\nMAX_FRAME_SIZE, 128KB\nDEFAULT_FRAME_SIZE, 16KB\nLIMIT_MAX_ALLOWED_FRAME_SIZE, 1MB\nWe may need to change internal code to sync up.", "author": "jiangtaoli2016", "createdAt": "2020-03-26T01:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1MjEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MTM2OA==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r398851368", "bodyText": "Do we need both MIN_FRAME_SIZE and DEFAULT_FRAME_SIZE?\nI think for consistency sake, MIN_FRAME_SIZE name would be preferred. But that would involve updating MAX_ALLOWED_FRAME_BYTES to MIN_FRAME_SIZE, and wherever the getter is called. If the variable name modification seems fine, we could have just 3 constants.", "author": "ashithasantosh", "createdAt": "2020-03-26T19:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1MjEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMjU1Mw==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r399532553", "bodyText": "3 constants are fine.\nWe need 4 getter functions to be backward compatible.", "author": "jiangtaoli2016", "createdAt": "2020-03-27T20:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1MjEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4OTY2MA==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r403289660", "bodyText": "I am using just 3 getters.\nFor Loas2TsiHandshaker.java, i will cherrypick this CL, and include the update there.", "author": "ashithasantosh", "createdAt": "2020-04-03T20:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1MjEwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "da0ec9cb5266685f8ce444452c470e69194d0e9e", "chunk": "diff --git a/alts/src/main/java/io/grpc/alts/internal/AltsHandshakerClient.java b/alts/src/main/java/io/grpc/alts/internal/AltsHandshakerClient.java\nindex 52c106fd9..083ad0567 100644\n--- a/alts/src/main/java/io/grpc/alts/internal/AltsHandshakerClient.java\n+++ b/alts/src/main/java/io/grpc/alts/internal/AltsHandshakerClient.java\n\n@@ -35,9 +35,6 @@ class AltsHandshakerClient {\n   private static final String APPLICATION_PROTOCOL = \"grpc\";\n   private static final String RECORD_PROTOCOL = \"ALTSRP_GCM_AES128_REKEY\";\n   private static final int KEY_LENGTH = AltsChannelCrypter.getKeyLength();\n-  // Frame size negotiation extends frame size range to [MIN_FRAME_SIZE, MAX_FRAME_SIZE].\n-  private static final int MIN_FRAME_SIZE = 16 * 1024;\n-  private static final int MAX_FRAME_SIZE = 128 * 1024;\n \n   private final AltsHandshakerStub handshakerStub;\n   private final AltsHandshakerOptions handshakerOptions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1NzQ3Mw==", "url": "https://github.com/grpc/grpc-java/pull/6840#discussion_r398257473", "bodyText": "As in my other comment above, don't set maxFrameSize here.\nIf there is no frame size negotiation, use the value from parameter -- which will be the default frame size", "author": "jiangtaoli2016", "createdAt": "2020-03-26T00:54:53Z", "path": "alts/src/main/java/io/grpc/alts/internal/AltsTsiHandshaker.java", "diffHunk": "@@ -178,6 +182,17 @@ public TsiFrameProtector createFrameProtector(int maxFrameSize, ByteBufAllocator\n     byte[] key = handshaker.getKey();\n     Preconditions.checkState(key.length == AltsChannelCrypter.getKeyLength(), \"Bad key length.\");\n \n+    // In case the peer does not send max frame size (e.g. peer is gRPC Go or peer uses an old\n+    // binary), the negotiated frame size is set to MIN_FRAME_SIZE. Otherwise, the negotiated\n+    // value is based on peer frame size. maxFrameSize parameter is ignored.\n+    maxFrameSize = AltsHandshakerClient.getMinFrameSize();", "originalCommit": "435a40c16fdea103a13ae292e58350f909183afa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da0ec9cb5266685f8ce444452c470e69194d0e9e", "chunk": "diff --git a/alts/src/main/java/io/grpc/alts/internal/AltsTsiHandshaker.java b/alts/src/main/java/io/grpc/alts/internal/AltsTsiHandshaker.java\nindex 2df398aa1..21824a068 100644\n--- a/alts/src/main/java/io/grpc/alts/internal/AltsTsiHandshaker.java\n+++ b/alts/src/main/java/io/grpc/alts/internal/AltsTsiHandshaker.java\n\n@@ -182,17 +182,14 @@ public final class AltsTsiHandshaker implements TsiHandshaker {\n     byte[] key = handshaker.getKey();\n     Preconditions.checkState(key.length == AltsChannelCrypter.getKeyLength(), \"Bad key length.\");\n \n-    // In case the peer does not send max frame size (e.g. peer is gRPC Go or peer uses an old\n-    // binary), the negotiated frame size is set to MIN_FRAME_SIZE. Otherwise, the negotiated\n-    // value is based on peer frame size. maxFrameSize parameter is ignored.\n-    maxFrameSize = AltsHandshakerClient.getMinFrameSize();\n+    // Frame size negotiation is not performed if the peer does not send max frame size (e.g. peer\n+    // is gRPC Go or peer uses an old binary).\n     int peerMaxFrameSize = handshaker.getResult().getMaxFrameSize();\n     if (peerMaxFrameSize != 0) {\n-      maxFrameSize = Math.min(peerMaxFrameSize, AltsHandshakerClient.getMaxFrameSize());\n-      maxFrameSize = Math.max(AltsHandshakerClient.getMinFrameSize(),maxFrameSize);\n+      maxFrameSize = Math.min(peerMaxFrameSize, AltsTsiFrameProtector.getMaxFrameSize());\n+      maxFrameSize = Math.max(AltsTsiFrameProtector.getMinFrameSize(), maxFrameSize);\n     }\n-    logger.log(Level.INFO, \"Maximum frame size value after frame size negotiation is %s.\",\n-        maxFrameSize);\n+    logger.log(Level.INFO, \"Maximum frame size value is \" + maxFrameSize);\n     return new AltsTsiFrameProtector(maxFrameSize, new AltsChannelCrypter(key, isClient), alloc);\n   }\n \n"}}, {"oid": "da0ec9cb5266685f8ce444452c470e69194d0e9e", "url": "https://github.com/grpc/grpc-java/commit/da0ec9cb5266685f8ce444452c470e69194d0e9e", "message": "Implemented Frame Size Negotiation in ALTS for gRPC Java.", "committedDate": "2020-04-10T19:16:42Z", "type": "commit"}]}