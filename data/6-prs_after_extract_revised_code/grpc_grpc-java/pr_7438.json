{"pr_number": 7438, "pr_title": "xds: implement fallbackProtocolNegotiator for XdsChannelBuilder", "pr_createdAt": "2020-09-18T00:18:24Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7438", "timeline": [{"oid": "7ff893887f57b8427e8e2f597042e5df6efff3df", "url": "https://github.com/grpc/grpc-java/commit/7ff893887f57b8427e8e2f597042e5df6efff3df", "message": "xds: implement fallbackProtocolNegotiator for XdsChannelBuilder", "committedDate": "2020-09-18T00:15:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExODU4NQ==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491118585", "bodyText": "Why is fallback negotiator is required? Is that by design?", "author": "dapengzhang0", "createdAt": "2020-09-18T18:23:08Z", "path": "xds/src/test/java/io/grpc/xds/internal/sds/XdsChannelBuilderTest.java", "diffHunk": "@@ -35,7 +37,19 @@ public void buildsXdsChannelBuilder() {\n     XdsChannelBuilder builder = XdsChannelBuilder.forTarget(\"localhost:8080\");\n     assertThat(builder).isNotNull();\n     assertThat(builder.delegate()).isInstanceOf(NettyChannelBuilder.class);\n+    builder = builder.fallbackProtocolNegotiator(InternalProtocolNegotiators.plaintext());\n     ManagedChannel channel = builder.build();\n     assertThat(channel).isNotNull();\n   }\n+\n+  @Test\n+  public void buildsXdsChannelBuilder_noFallbackNegotiator() {\n+    XdsChannelBuilder builder = XdsChannelBuilder.forTarget(\"localhost:8080\");\n+    try {\n+      builder.build();\n+      Assert.fail(\"no exception thrown\");\n+    } catch (NullPointerException expected) {\n+      assertThat(expected).hasMessageThat().isEqualTo(\"fallbackProtocolNegotiator\");", "originalCommit": "7ff893887f57b8427e8e2f597042e5df6efff3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MjA3Mg==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491162072", "bodyText": "Yes, when the channel credentials are implemented and XdsCredentials are used then fallback creds is mandatory (which means the fallback negotiator is mandatory here).", "author": "sanjaypujare", "createdAt": "2020-09-18T19:58:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExODU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNjkzNw==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491226937", "bodyText": "Thinking more about it, if a falback creds is not provided but the channel never needs to use it, it should not be an error. Let me think more about it.", "author": "sanjaypujare", "createdAt": "2020-09-18T22:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExODU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIzNzMyNQ==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491237325", "bodyText": "Yeah, sometimes the user does not want to use plaintext but can not think of any viable fallback negotiator, in that case if they can reply only primary, seems we should allow it and leave fallback negotiator unset and only fail when the primary does not work.", "author": "dapengzhang0", "createdAt": "2020-09-18T23:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExODU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Mzk4Nw==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491243987", "bodyText": "fixed. PTAL", "author": "sanjaypujare", "createdAt": "2020-09-19T00:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExODU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f5d38d87046f8b159101b5795490b75bd7632d4a", "chunk": "diff --git a/xds/src/test/java/io/grpc/xds/internal/sds/XdsChannelBuilderTest.java b/xds/src/test/java/io/grpc/xds/internal/sds/XdsChannelBuilderTest.java\nindex 50dce8cd5..b09e42a1a 100644\n--- a/xds/src/test/java/io/grpc/xds/internal/sds/XdsChannelBuilderTest.java\n+++ b/xds/src/test/java/io/grpc/xds/internal/sds/XdsChannelBuilderTest.java\n\n@@ -37,19 +35,7 @@ public class XdsChannelBuilderTest {\n     XdsChannelBuilder builder = XdsChannelBuilder.forTarget(\"localhost:8080\");\n     assertThat(builder).isNotNull();\n     assertThat(builder.delegate()).isInstanceOf(NettyChannelBuilder.class);\n-    builder = builder.fallbackProtocolNegotiator(InternalProtocolNegotiators.plaintext());\n     ManagedChannel channel = builder.build();\n     assertThat(channel).isNotNull();\n   }\n-\n-  @Test\n-  public void buildsXdsChannelBuilder_noFallbackNegotiator() {\n-    XdsChannelBuilder builder = XdsChannelBuilder.forTarget(\"localhost:8080\");\n-    try {\n-      builder.build();\n-      Assert.fail(\"no exception thrown\");\n-    } catch (NullPointerException expected) {\n-      assertThat(expected).hasMessageThat().isEqualTo(\"fallbackProtocolNegotiator\");\n-    }\n-  }\n }\n"}}, {"oid": "f5d38d87046f8b159101b5795490b75bd7632d4a", "url": "https://github.com/grpc/grpc-java/commit/f5d38d87046f8b159101b5795490b75bd7632d4a", "message": "address review comment: make fallbackNegotiator optional", "committedDate": "2020-09-19T00:28:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Njc0Nw==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491246747", "bodyText": "Should also mention the absence of ATTR_SSL_CONTEXT_PROVIDER_SUPPLIER attribute?", "author": "dapengzhang0", "createdAt": "2020-09-19T00:50:17Z", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -138,6 +137,7 @@ public ChannelHandler newHandler(GrpcHttp2ConnectionHandler grpcHandler) {\n       SslContextProviderSupplier localSslContextProviderSupplier =\n           grpcHandler.getEagAttributes().get(XdsAttributes.ATTR_SSL_CONTEXT_PROVIDER_SUPPLIER);\n       if (localSslContextProviderSupplier == null) {\n+        checkNotNull(fallbackProtocolNegotiator, \"fallbackProtocolNegotiator not set!\");", "originalCommit": "f5d38d87046f8b159101b5795490b75bd7632d4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0NzA4Nw==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r491247087", "bodyText": "That's implementation detail and should not be exposed to the user (who receives this exception). In this case the CDS policy didn't have any TLS config for the channel (cluster) and the user didn't provide a fallback-negotiator. Based on some other doc the user should know that fallback negotiator kicks in when xDS didn't provide TLS config.", "author": "sanjaypujare", "createdAt": "2020-09-19T00:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Njc0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3MTkwMQ==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493071901", "bodyText": "I agree ATTR_SSL_CONTEXT_PROVIDER_SUPPLIER is implementation details and should not be exposed to users. But   I feel it will be more informative if we mention something like \"TLS config not available\" in the first place before telling the user fallback is not provided, than just saying fallback is not set and expecting user to know from the doc why this is happening.", "author": "dapengzhang0", "createdAt": "2020-09-22T22:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Njc0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEzNDA2NA==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493134064", "bodyText": "Good point. Fixed the message in the check.", "author": "sanjaypujare", "createdAt": "2020-09-23T01:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Njc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ef96ab08be3c7f4f761a023de3eee07b50cbee10", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\nindex c10d3c60c..ea5a1435d 100644\n--- a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n+++ b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n\n@@ -137,7 +137,8 @@ public final class SdsProtocolNegotiators {\n       SslContextProviderSupplier localSslContextProviderSupplier =\n           grpcHandler.getEagAttributes().get(XdsAttributes.ATTR_SSL_CONTEXT_PROVIDER_SUPPLIER);\n       if (localSslContextProviderSupplier == null) {\n-        checkNotNull(fallbackProtocolNegotiator, \"fallbackProtocolNegotiator not set!\");\n+        checkNotNull(\n+            fallbackProtocolNegotiator, \"No TLS config and no fallbackProtocolNegotiator!\");\n         return fallbackProtocolNegotiator.newHandler(grpcHandler);\n       }\n       return new ClientSdsHandler(grpcHandler, localSslContextProviderSupplier);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3Mjg5OQ==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493072899", "bodyText": "Add @Nullable?", "author": "dapengzhang0", "createdAt": "2020-09-22T22:39:23Z", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -108,6 +120,12 @@ public void close() {\n   @VisibleForTesting\n   static final class ClientSdsProtocolNegotiator implements ProtocolNegotiator {\n \n+    private final ProtocolNegotiator fallbackProtocolNegotiator;\n+\n+    ClientSdsProtocolNegotiator(ProtocolNegotiator fallbackProtocolNegotiator) {", "originalCommit": "f5d38d87046f8b159101b5795490b75bd7632d4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEzMzgzNw==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493133837", "bodyText": "done", "author": "sanjaypujare", "createdAt": "2020-09-23T01:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3Mjg5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ef96ab08be3c7f4f761a023de3eee07b50cbee10", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\nindex c10d3c60c..ea5a1435d 100644\n--- a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n+++ b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n\n@@ -120,9 +120,9 @@ public final class SdsProtocolNegotiators {\n   @VisibleForTesting\n   static final class ClientSdsProtocolNegotiator implements ProtocolNegotiator {\n \n-    private final ProtocolNegotiator fallbackProtocolNegotiator;\n+    @Nullable private final ProtocolNegotiator fallbackProtocolNegotiator;\n \n-    ClientSdsProtocolNegotiator(ProtocolNegotiator fallbackProtocolNegotiator) {\n+    ClientSdsProtocolNegotiator(@Nullable ProtocolNegotiator fallbackProtocolNegotiator) {\n       this.fallbackProtocolNegotiator = fallbackProtocolNegotiator;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3MzAwMA==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493073000", "bodyText": "Add @Nullable?", "author": "dapengzhang0", "createdAt": "2020-09-22T22:39:43Z", "path": "xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java", "diffHunk": "@@ -59,9 +59,14 @@ private SdsProtocolNegotiators() {\n \n   private static final AsciiString SCHEME = AsciiString.of(\"http\");\n \n-  /** Returns a {@link ProtocolNegotiatorFactory} to be used on {@link NettyChannelBuilder}. */\n-  public static ProtocolNegotiatorFactory clientProtocolNegotiatorFactory() {\n-    return new ClientSdsProtocolNegotiatorFactory();\n+  /**\n+   * Returns a {@link ProtocolNegotiatorFactory} to be used on {@link NettyChannelBuilder}.\n+   *\n+   * @param fallbackNegotiator protocol negotiator to use as fallback.\n+   */\n+  public static ProtocolNegotiatorFactory clientProtocolNegotiatorFactory(\n+      ProtocolNegotiator fallbackNegotiator) {", "originalCommit": "f5d38d87046f8b159101b5795490b75bd7632d4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEzMzc3MA==", "url": "https://github.com/grpc/grpc-java/pull/7438#discussion_r493133770", "bodyText": "done", "author": "sanjaypujare", "createdAt": "2020-09-23T01:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3MzAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "ef96ab08be3c7f4f761a023de3eee07b50cbee10", "chunk": "diff --git a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\nindex c10d3c60c..ea5a1435d 100644\n--- a/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n+++ b/xds/src/main/java/io/grpc/xds/internal/sds/SdsProtocolNegotiators.java\n\n@@ -65,7 +65,7 @@ public final class SdsProtocolNegotiators {\n    * @param fallbackNegotiator protocol negotiator to use as fallback.\n    */\n   public static ProtocolNegotiatorFactory clientProtocolNegotiatorFactory(\n-      ProtocolNegotiator fallbackNegotiator) {\n+      @Nullable ProtocolNegotiator fallbackNegotiator) {\n     return new ClientSdsProtocolNegotiatorFactory(fallbackNegotiator);\n   }\n \n"}}, {"oid": "ef96ab08be3c7f4f761a023de3eee07b50cbee10", "url": "https://github.com/grpc/grpc-java/commit/ef96ab08be3c7f4f761a023de3eee07b50cbee10", "message": "address review comments - round2", "committedDate": "2020-09-23T01:42:07Z", "type": "commit"}]}