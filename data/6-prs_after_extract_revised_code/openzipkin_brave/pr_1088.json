{"pr_number": 1088, "pr_title": "Fixes null on request or response unwrap and deprecates adapters", "pr_createdAt": "2020-02-21T03:41:28Z", "pr_url": "https://github.com/openzipkin/brave/pull/1088", "timeline": [{"oid": "87010d5a00db9a56ffca375c99c56567c20a71c1", "url": "https://github.com/openzipkin/brave/commit/87010d5a00db9a56ffca375c99c56567c20a71c1", "message": "Fixes null on request or response unwrap and deprecates adapters\n\nOur adapters would never expect the raw request to be null, so this uses\na dummy value to prevent NPEs.\n\nThis also backfills our adapters to 100% coverage on paths that are\ncalled.", "committedDate": "2020-02-21T03:45:11Z", "type": "forcePushed"}, {"oid": "87010d5a00db9a56ffca375c99c56567c20a71c1", "url": "https://github.com/openzipkin/brave/commit/87010d5a00db9a56ffca375c99c56567c20a71c1", "message": "Fixes null on request or response unwrap and deprecates adapters\n\nOur adapters would never expect the raw request to be null, so this uses\na dummy value to prevent NPEs.\n\nThis also backfills our adapters to 100% coverage on paths that are\ncalled.", "committedDate": "2020-02-21T03:45:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5MDIyMw==", "url": "https://github.com/openzipkin/brave/pull/1088#discussion_r382390223", "bodyText": "Worth doing a log-once for these sort of bad implementation handlers? I always wonder how a bad implementation will become a good one if we just handle it silently.", "author": "anuraaga", "createdAt": "2020-02-21T04:19:58Z", "path": "instrumentation/http/src/main/java/brave/http/HttpClientHandler.java", "diffHunk": "@@ -125,7 +128,12 @@ public Span handleSend(HttpClientRequest request, Span span) {\n     if (request == null) throw new NullPointerException(\"request == null\");\n     if (span == null) throw new NullPointerException(\"span == null\");\n     defaultInjector.inject(span.context(), request);\n-    return handleStart(new HttpClientRequest.ToHttpAdapter(request), request.unwrap(), span);\n+\n+    Object unwrapped = request.unwrap();\n+    if (unwrapped == null) unwrapped = NULL_SENTINEL; // Handle bad implementation", "originalCommit": "87010d5a00db9a56ffca375c99c56567c20a71c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2021f948a068aa856ec4523b3989bdfbb77f2f72", "chunk": "diff --git a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\nindex 6f2a7a15d..fc0b2d25c 100644\n--- a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n+++ b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n\n@@ -130,7 +130,7 @@ public final class HttpClientHandler<Req, Resp> extends HttpHandler {\n     defaultInjector.inject(span.context(), request);\n \n     Object unwrapped = request.unwrap();\n-    if (unwrapped == null) unwrapped = NULL_SENTINEL; // Handle bad implementation\n+    if (unwrapped == null) unwrapped = NULL_SENTINEL; // Ensure adapter methods never see null\n     HttpAdapter<Object, Void> adapter = new HttpClientAdapters.ToRequestAdapter(request, unwrapped);\n \n     return handleStart(adapter, unwrapped, span);\n"}}, {"oid": "2021f948a068aa856ec4523b3989bdfbb77f2f72", "url": "https://github.com/openzipkin/brave/commit/2021f948a068aa856ec4523b3989bdfbb77f2f72", "message": "finishes test backfilling", "committedDate": "2020-02-21T05:52:06Z", "type": "commit"}]}