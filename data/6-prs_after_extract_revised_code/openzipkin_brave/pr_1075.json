{"pr_number": 1075, "pr_title": "Adds defense for incorrectly implemented client and server requests", "pr_createdAt": "2020-02-05T06:44:46Z", "pr_url": "https://github.com/openzipkin/brave/pull/1075", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA4MjQyNQ==", "url": "https://github.com/openzipkin/brave/pull/1075#discussion_r375082425", "bodyText": "copied from the parser#response javadoc", "author": "codefromthecrypt", "createdAt": "2020-02-05T06:45:22Z", "path": "instrumentation/http/src/main/java/brave/http/HttpClientHandler.java", "diffHunk": "@@ -176,16 +176,25 @@ public Span handleSend(HttpClientRequest request, Span span) {\n    * <p>This is typically called once the response headers are received, and after the span is\n    * {@link brave.Tracer.SpanInScope#close() no longer in scope}.\n    *\n+   * <p>Note: Either the response or error parameters may be null, but not both.", "originalCommit": "7b1f4dd790549481182a3d2779f49f67e45e0570", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5d4e422166e16e3e634f0438128f0364571b0ee", "chunk": "diff --git a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\nindex 44de28c22..ad0319584 100644\n--- a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n+++ b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n\n@@ -182,8 +182,11 @@ public final class HttpClientHandler<Req, Resp> extends HttpHandler {\n    * @since 4.3\n    */\n   public void handleReceive(@Nullable Resp response, @Nullable Throwable error, Span span) {\n-    assert response != null || error != null :\n-      \"Either the response or error parameters may be null, but not both\";\n+    if (response == null && error == null) {\n+      throw new IllegalArgumentException(\n+        \"Either the response or error parameters may be null, but not both\");\n+    }\n+\n     if (!(response instanceof HttpClientResponse)) {\n       handleFinish(adapter, response, error, span);\n       return;\n"}}, {"oid": "d4f93d336e13987ed6a637f992f522be8d725ef4", "url": "https://github.com/openzipkin/brave/commit/d4f93d336e13987ed6a637f992f522be8d725ef4", "message": "Adds defense for incorrectly implemented client and server requests\n\nIt is invalid to return null when unwrapping the portable http client\nor server types. However, if someone did return null, it is hard to\ndetermine what went wrong. This tolerates the incorrect code similarly\nto how we do in toString. The result is that the span will finish and\nthe code won't crash.", "committedDate": "2020-02-05T07:21:15Z", "type": "forcePushed"}, {"oid": "d4f93d336e13987ed6a637f992f522be8d725ef4", "url": "https://github.com/openzipkin/brave/commit/d4f93d336e13987ed6a637f992f522be8d725ef4", "message": "Adds defense for incorrectly implemented client and server requests\n\nIt is invalid to return null when unwrapping the portable http client\nor server types. However, if someone did return null, it is hard to\ndetermine what went wrong. This tolerates the incorrect code similarly\nto how we do in toString. The result is that the span will finish and\nthe code won't crash.", "committedDate": "2020-02-05T07:21:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjM4OA==", "url": "https://github.com/openzipkin/brave/pull/1075#discussion_r375102388", "bodyText": "Should we throw an exception instead of using assert since it indicates bad code?", "author": "anuraaga", "createdAt": "2020-02-05T07:53:03Z", "path": "instrumentation/http/src/main/java/brave/http/HttpClientHandler.java", "diffHunk": "@@ -176,16 +176,25 @@ public Span handleSend(HttpClientRequest request, Span span) {\n    * <p>This is typically called once the response headers are received, and after the span is\n    * {@link brave.Tracer.SpanInScope#close() no longer in scope}.\n    *\n+   * <p>Note: Either the response or error parameters may be null, but not both.\n+   *\n    * @see HttpClientParser#response(HttpAdapter, Object, Throwable, SpanCustomizer)\n    * @since 4.3\n    */\n   public void handleReceive(@Nullable Resp response, @Nullable Throwable error, Span span) {\n-    if (response instanceof HttpClientResponse) {\n-      HttpClientResponse.Adapter adapter =\n-        new HttpClientResponse.Adapter((HttpClientResponse) response);\n-      handleFinish(adapter, adapter.unwrapped, error, span);\n-    } else {\n+    assert response != null || error != null :", "originalCommit": "d4f93d336e13987ed6a637f992f522be8d725ef4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjU5Ng==", "url": "https://github.com/openzipkin/brave/pull/1075#discussion_r375102596", "bodyText": "Or log? How do we find the bugs in the instrumentation?", "author": "anuraaga", "createdAt": "2020-02-05T07:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjM4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExMDY1OA==", "url": "https://github.com/openzipkin/brave/pull/1075#discussion_r375110658", "bodyText": "we didn't enforce this before, but they would have had a NPE. I think I like trading that assert out for a IAE is good.. wdyt?", "author": "codefromthecrypt", "createdAt": "2020-02-05T08:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjM4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExMzEwMg==", "url": "https://github.com/openzipkin/brave/pull/1075#discussion_r375113102", "bodyText": "I think it's common to run with asserts off though so it'd still be NPE in a lot of cases. If we want to make sure to throw an exception we'd want to throw one explicitly - though \"log once\" might be fine too for these checks.", "author": "anuraaga", "createdAt": "2020-02-05T08:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "f5d4e422166e16e3e634f0438128f0364571b0ee", "chunk": "diff --git a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\nindex 44de28c22..ad0319584 100644\n--- a/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n+++ b/instrumentation/http/src/main/java/brave/http/HttpClientHandler.java\n\n@@ -182,8 +182,11 @@ public final class HttpClientHandler<Req, Resp> extends HttpHandler {\n    * @since 4.3\n    */\n   public void handleReceive(@Nullable Resp response, @Nullable Throwable error, Span span) {\n-    assert response != null || error != null :\n-      \"Either the response or error parameters may be null, but not both\";\n+    if (response == null && error == null) {\n+      throw new IllegalArgumentException(\n+        \"Either the response or error parameters may be null, but not both\");\n+    }\n+\n     if (!(response instanceof HttpClientResponse)) {\n       handleFinish(adapter, response, error, span);\n       return;\n"}}, {"oid": "f5d4e422166e16e3e634f0438128f0364571b0ee", "url": "https://github.com/openzipkin/brave/commit/f5d4e422166e16e3e634f0438128f0364571b0ee", "message": "throwme", "committedDate": "2020-02-05T08:52:03Z", "type": "commit"}]}