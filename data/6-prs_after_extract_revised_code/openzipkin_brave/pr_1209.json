{"pr_number": 1209, "pr_title": "Adds SpanHandler.handesAbandoned to emphasize it is an edge case", "pr_createdAt": "2020-05-12T07:14:17Z", "pr_url": "https://github.com/openzipkin/brave/pull/1209", "timeline": [{"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10", "url": "https://github.com/openzipkin/brave/commit/085cd0518c53129e945e3e14898bc3c7c128cd10", "message": "Adds SpanHandler.handesAbandoned to emphasize it is an edge case\n\nABANDONED is an edge case which literally means don't send data. This\nmakes it opt in instead of the inverse which is work and confusion\ncausing.", "committedDate": "2020-05-12T11:41:50Z", "type": "forcePushed"}, {"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10", "url": "https://github.com/openzipkin/brave/commit/085cd0518c53129e945e3e14898bc3c7c128cd10", "message": "Adds SpanHandler.handesAbandoned to emphasize it is an edge case\n\nABANDONED is an edge case which literally means don't send data. This\nmakes it opt in instead of the inverse which is work and confusion\ncausing.", "committedDate": "2020-05-12T11:41:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MzY0Ng==", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r423753646", "bodyText": "Is the bitset to allow handlesAbandoned to be somewhat slow (maybe reading from a config value). Pushing that to the user may not be a big deal since I think it's pretty common for frameworks to read these sort of methods inline, even in JDK.", "author": "anuraaga", "createdAt": "2020-05-12T13:56:01Z", "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -75,10 +85,18 @@ public static SpanHandler create(SpanHandler[] handlers,\n   }\n \n   static final class CompositeSpanHandler extends SpanHandler {\n+    final long handlesAbandonedBitset;\n     final SpanHandler[] handlers;\n \n     CompositeSpanHandler(SpanHandler[] handlers) {\n       this.handlers = handlers;\n+      long handlesAbandonedBitset = 0;", "originalCommit": "085cd0518c53129e945e3e14898bc3c7c128cd10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDExMDQyMA==", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r424110420", "bodyText": "sounds fine to me", "author": "codefromthecrypt", "createdAt": "2020-05-13T00:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MzY0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NTQ3Nw==", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r423755477", "bodyText": "If not bitset think this becomes just\nfor (SpanHandler handler : handlers) {\n  if (cause != ABANDONING || handler.handlesAbandon()) {\n    handle()", "author": "anuraaga", "createdAt": "2020-05-12T13:58:21Z", "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -89,12 +107,25 @@ public static SpanHandler create(SpanHandler[] handlers,\n     }\n \n     @Override public boolean end(TraceContext context, MutableSpan span, Cause cause) {\n-      for (SpanHandler handler : handlers) {\n-        if (!handler.end(context, span, cause)) return false;\n+      if (cause != Cause.ABANDONED) {\n+        for (SpanHandler handler : handlers) {", "originalCommit": "085cd0518c53129e945e3e14898bc3c7c128cd10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEyNDYwMA==", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r424124600", "bodyText": "much better thanks! eb394a6", "author": "codefromthecrypt", "createdAt": "2020-05-13T01:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NTQ3Nw=="}], "type": "inlineReview", "revised_code": null}]}