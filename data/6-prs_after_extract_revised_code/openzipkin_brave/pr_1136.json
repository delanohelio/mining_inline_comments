{"pr_number": 1136, "pr_title": "Allows correlation fields to not match `BaggageField` names", "pr_createdAt": "2020-04-02T10:41:00Z", "pr_url": "https://github.com/openzipkin/brave/pull/1136", "timeline": [{"oid": "b9bc9ddb674c7f2a6bcf69ff5f0ca21078e6e53c", "url": "https://github.com/openzipkin/brave/commit/b9bc9ddb674c7f2a6bcf69ff5f0ca21078e6e53c", "message": "Allows correlation fields to not match `BaggageField` names\n\nThis helps port code which formerly added different naming conventions\nfor span IDs.\n\nEx. If your log property is %X{trace-id}, you can do this:\n```java\nbuilder.clear(); // traceId is a default field!\nbuilder.addField(BaggageFields.TRACE_ID, \"trace-id\");\n```", "committedDate": "2020-04-02T10:39:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxODE4NA==", "url": "https://github.com/openzipkin/brave/pull/1136#discussion_r402218184", "bodyText": "bug", "author": "codefromthecrypt", "createdAt": "2020-04-02T10:41:48Z", "path": "brave/src/main/java/brave/baggage/BaggagePropagation.java", "diffHunk": "@@ -102,7 +102,7 @@ public static FactoryBuilder newFactoryBuilder(Propagation.Factory delegate) {\n      * @since 5.11\n      */\n     public Map<BaggageField, Set<String>> fieldToKeyNames() {\n-      return Collections.unmodifiableMap(fieldToKeyNames);\n+      return Collections.unmodifiableMap(new LinkedHashMap<>(fieldToKeyNames));", "originalCommit": "b9bc9ddb674c7f2a6bcf69ff5f0ca21078e6e53c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxODIzNg==", "url": "https://github.com/openzipkin/brave/pull/1136#discussion_r402218236", "bodyText": "bug", "author": "codefromthecrypt", "createdAt": "2020-04-02T10:41:55Z", "path": "brave/src/main/java/brave/baggage/BaggagePropagation.java", "diffHunk": "@@ -171,7 +171,12 @@ public FactoryBuilder addRemoteField(BaggageField field, Iterable<String> keyNam\n         allKeyNames.add(lcName);\n         lcKeyNames.add(lcName);\n       }\n-      if (lcKeyNames.isEmpty()) lcKeyNames.add(field.lcName);\n+\n+      if (lcKeyNames.isEmpty()) { // add the default name", "originalCommit": "b9bc9ddb674c7f2a6bcf69ff5f0ca21078e6e53c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxODcxOA==", "url": "https://github.com/openzipkin/brave/pull/1136#discussion_r402218718", "bodyText": "we need this because customizers act on builders.. we don't always know if there will be any configuration at all.", "author": "codefromthecrypt", "createdAt": "2020-04-02T10:42:51Z", "path": "brave/src/main/java/brave/propagation/CurrentTraceContext.java", "diffHunk": "@@ -53,6 +51,7 @@\n      */\n     public Builder addScopeDecorator(ScopeDecorator scopeDecorator) {\n       if (scopeDecorator == null) throw new NullPointerException(\"scopeDecorator == null\");\n+      if (scopeDecorator == ScopeDecorator.NOOP) return this;", "originalCommit": "b9bc9ddb674c7f2a6bcf69ff5f0ca21078e6e53c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "ee54d3bb8aee7ab476c93678b90e8fb4888177a0", "url": "https://github.com/openzipkin/brave/commit/ee54d3bb8aee7ab476c93678b90e8fb4888177a0", "message": "drift", "committedDate": "2020-04-02T11:22:11Z", "type": "commit"}]}