{"pr_number": 1132, "pr_title": "Actually don't check SingletonList as comment says.", "pr_createdAt": "2020-03-31T09:45:35Z", "pr_url": "https://github.com/openzipkin/brave/pull/1132", "timeline": [{"oid": "da95cc7e9c067126aa88aa407d9bf4670a50ca26", "url": "https://github.com/openzipkin/brave/commit/da95cc7e9c067126aa88aa407d9bf4670a50ca26", "message": "Actually don't check SingletonList as comment says.", "committedDate": "2020-03-31T09:24:37Z", "type": "commit"}, {"oid": "31006481f3e876112dffa44265f6d5d0f49f2ac1", "url": "https://github.com/openzipkin/brave/commit/31006481f3e876112dffa44265f6d5d0f49f2ac1", "message": "License", "committedDate": "2020-03-31T10:18:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMDk4MQ==", "url": "https://github.com/openzipkin/brave/pull/1132#discussion_r400800981", "bodyText": "that SingletonList isn't here hurts my brain because it is a well known type. that said I understand why you are doing this.. it is under the assumption nothing else is using this method which is fair enough. It might hurt brain less to say intentionally not checking SingletonList due as the only call site wont' have it", "author": "codefromthecrypt", "createdAt": "2020-03-31T10:19:37Z", "path": "brave/src/main/java/brave/internal/Lists.java", "diffHunk": "@@ -29,19 +29,19 @@\n     return mutable;\n   }\n \n-  public static List<Object> ensureImmutable(List<Object> extra) {\n-    if (isImmutable(extra)) return extra;\n+  public static List<Object> ensureImmutable(List<Object> list) {\n+    if (list.isEmpty()) return Collections.emptyList();\n     // Faster to make a copy than check the type to see if it is already a singleton list\n-    if (extra.size() == 1) return Collections.singletonList(extra.get(0));\n-    return Collections.unmodifiableList(new ArrayList<>(extra));\n+    if (list.size() == 1) return Collections.singletonList(list.get(0));\n+    if (isImmutable(list)) return list;\n+    return Collections.unmodifiableList(new ArrayList<>(list));\n   }\n \n   static boolean isImmutable(List<Object> extra) {\n-    if (extra == Collections.EMPTY_LIST) return true;\n+    if (extra == Collections.emptyList()) return true;\n     // avoid copying datastructure by trusting certain names.\n     String simpleName = extra.getClass().getSimpleName();\n-    return simpleName.equals(\"SingletonList\")", "originalCommit": "31006481f3e876112dffa44265f6d5d0f49f2ac1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwNDcwNA==", "url": "https://github.com/openzipkin/brave/pull/1132#discussion_r400804704", "bodyText": "Good call, added a comment both for that and because I realized the empty list check was similarly redundant.", "author": "anuraaga", "createdAt": "2020-03-31T10:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMDk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "74ae94b58be6a8a8e0c98696934db62a616d5285", "chunk": "diff --git a/brave/src/main/java/brave/internal/Lists.java b/brave/src/main/java/brave/internal/Lists.java\nindex 4ecfc63c2..03cf55d38 100644\n--- a/brave/src/main/java/brave/internal/Lists.java\n+++ b/brave/src/main/java/brave/internal/Lists.java\n\n@@ -38,9 +38,11 @@ public final class Lists {\n   }\n \n   static boolean isImmutable(List<Object> extra) {\n-    if (extra == Collections.emptyList()) return true;\n+    assert extra.size() > 1;  // Handled by caller.\n     // avoid copying datastructure by trusting certain names.\n     String simpleName = extra.getClass().getSimpleName();\n+    // We don't need to check EMPTY_LIST or SingletonList here since our only caller handles them\n+    // without type-checking.\n     return simpleName.startsWith(\"Unmodifiable\")\n       || simpleName.contains(\"Immutable\");\n   }\n"}}, {"oid": "74ae94b58be6a8a8e0c98696934db62a616d5285", "url": "https://github.com/openzipkin/brave/commit/74ae94b58be6a8a8e0c98696934db62a616d5285", "message": "Clarify why we don't check type of singleton list", "committedDate": "2020-03-31T10:24:47Z", "type": "commit"}]}