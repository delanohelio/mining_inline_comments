{"pr_number": 210, "pr_title": "not return estimated minutes remaining until cold start is finished", "pr_createdAt": "2020-08-12T16:52:21Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210", "timeline": [{"oid": "78abf95ec2cb95b82469255cac95fc33188bca67", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/78abf95ec2cb95b82469255cac95fc33188bca67", "message": "Change profile API to not return estimated minutes remaining until cold start is finished\n\nCurrently, the progress bar on AD Kibana will show the estimated time remaining to initialize a detector. This can be confusing if this message is displayed before cold start is finished, where the actual initialization time may be much shorter if sufficient historical data exists. This PR changes the profile api to not return any estimated time left until the cold start is finished to prevent this.\n\nTesting done:\n1. Manually verified the problem is fixed.\n2. added unit test for the issue.", "committedDate": "2020-08-12T04:30:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r469600780", "bodyText": "this should be hide estimate, which affects minutes left and data points needed.", "author": "wnbts", "createdAt": "2020-08-12T23:23:13Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -391,19 +399,26 @@ private void processInitResponse(\n         String detectorId,\n         Set<ProfileName> profilesToCollect,\n         MultiResponsesDelegateActionListener<DetectorProfile> listener,\n-        long totalUpdates\n+        long totalUpdates,\n+        boolean hideMinutesLeft", "originalCommit": "78abf95ec2cb95b82469255cac95fc33188bca67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5NTM4OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470195388", "bodyText": "you meant the variable name should be hideEstimate?  It only affect minutes left, not data points needed.", "author": "kaituo", "createdAt": "2020-08-13T19:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5NTI0OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470295248", "bodyText": "I see the data needed and time needed together. Before model training is done, they should be hidden together by a message such as \"Model training is starting soon\". Once that is done, the detailed information on needed data and time is now shown, such as \"need x data and y time\".\nIt'd be confusing to see \"need x data and no time\". What does the ux look like in this case?", "author": "wnbts", "createdAt": "2020-08-13T23:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5ODQxOQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470298419", "bodyText": "As far as ux goes, we will probably add an intermediate callout saying something like \"attempting to initialize with existing/historical data\", and show that callout until we can retrieve minutesLeft from the backend profile call. Then we show the regular progress bar callout, which includes the \"need x data and y time\" info. See Kibana issue here.\nI guess it's kind of arbitrary on if we hide minutes left and/or data points left, but need some way to indicate on the frontend that the cold start process isn't finished.", "author": "ohltyler", "createdAt": "2020-08-13T23:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMwNjQ3Ng==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470306476", "bodyText": "The initial temporal call out is informative enough. Before a model is trained, both data and time that the (non-existent) model will need to wait for should be equally unknown.", "author": "wnbts", "createdAt": "2020-08-13T23:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMwOTgyNA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470309824", "bodyText": "If we have a separate callout, both of these would be ignored as far as frontend is concerned. Wouldn't we want a different callout in this case? Seems that we wouldn't want to show 0% progress either, when that may immediately go to 100% and disappear if there is sufficient historical data.", "author": "ohltyler", "createdAt": "2020-08-13T23:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxMjU2OQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470312569", "bodyText": "The call out for the case before model training may just be \"attempting to initialize with existing/historical data\"/\"Model training is starting soon\", no data/time/progress needed to cause confusion or panic (yet).", "author": "wnbts", "createdAt": "2020-08-14T00:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNzU4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r471707586", "bodyText": "First, UX does not show needed shingles.  They only look at progress and estimated time.  Second, as an API user, I don't feel it causes confusion when we show needed shingles.  For example, one minute ago, we need 128 shingles.  After 1 minute, we need 0.  It means we find enough training data.  At that particular moment, the needed shingles are accurate.  If cold start is stuck or retrying, the number also gives clarification on the state.", "author": "kaituo", "createdAt": "2020-08-17T18:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4OTc0Nw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r471789747", "bodyText": "why not apply a more consistent logic to make code more maintainable and understandable? that is before a model is created, the time and data it needs to wait is either both unknown or both guessed. Or, what's the benefit of having mixed results from different logic for each field?\nthis is a question not a blocker", "author": "wnbts", "createdAt": "2020-08-17T21:39:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0NTUxNw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r471845517", "bodyText": "The data it needs to wait is not guessed.  The time is.  Without a checkpoint, it is accurate to say we need 128 shingles.\nThe benefit is provide transparency instead of guessing.\nThanks for not blocking.", "author": "kaituo", "createdAt": "2020-08-18T00:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMDc4MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2NDYzMw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470164633", "bodyText": "any chance the passed in requiredSamples is null/0?", "author": "ohltyler", "createdAt": "2020-08-13T18:35:19Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -308,6 +301,17 @@ private void profileStateRelated(\n         }, exception -> { listener.failImmediately(FAIL_TO_FIND_DETECTOR_MSG + detectorId, exception); });\n     }\n \n+    private InitProgressProfile computeInitProgressProfile(long totalUpdates, long intervalMins) {\n+        float percent = (100.0f * totalUpdates) / requiredSamples;", "originalCommit": "78abf95ec2cb95b82469255cac95fc33188bca67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwNTQ2MA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470205460", "bodyText": "It is possible.  I added code to throw exception.", "author": "kaituo", "createdAt": "2020-08-13T19:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2NDYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODIwMg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470208202", "bodyText": "I see the call on line 290 is caught, what about on line 411?", "author": "ohltyler", "createdAt": "2020-08-13T19:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2NDYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODcwNg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470208706", "bodyText": "I see the call on line 290 is caught, what about on line 411?\n\nnevermind, I see that's caught in the outer method. LGTM", "author": "ohltyler", "createdAt": "2020-08-13T19:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2NDYzMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "db10243041fb930a77840e57416647caacab8e37", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/db10243041fb930a77840e57416647caacab8e37", "message": "throw exception if passed in requiredSamples is <= 0", "committedDate": "2020-08-13T19:56:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5NjA0MQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r470296041", "bodyText": "testing. the testing of this condition is missing.", "author": "wnbts", "createdAt": "2020-08-13T23:05:27Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -76,6 +76,9 @@ public AnomalyDetectorProfileRunner(\n         this.client = client;\n         this.xContentRegistry = xContentRegistry;\n         this.nodeFilter = nodeFilter;\n+        if (requiredSamples <= 0) {\n+            throw new IllegalArgumentException(\"required samples should be a positive number, but was \" + requiredSamples);", "originalCommit": "db10243041fb930a77840e57416647caacab8e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxMTc1Ng==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/210#discussion_r471711756", "bodyText": "added", "author": "kaituo", "createdAt": "2020-08-17T18:56:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5NjA0MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "84f7cd17d27e39141d7b7e20f9afcc83e56e5b70", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/84f7cd17d27e39141d7b7e20f9afcc83e56e5b70", "message": "Added test case for invalid required samples", "committedDate": "2020-08-17T19:19:32Z", "type": "commit"}]}