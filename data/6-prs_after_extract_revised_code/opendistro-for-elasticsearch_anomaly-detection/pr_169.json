{"pr_number": 169, "pr_title": "Add setting for enabling/disabling circuit breaker", "pr_createdAt": "2020-06-20T01:46:50Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169", "timeline": [{"oid": "3cc7b07db6f82b3d9f91045971f60ba43b90f6e2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/3cc7b07db6f82b3d9f91045971f60ba43b90f6e2", "message": "Add setting for enabling/disabling circuit breaker\n\nA circuit breaker is broken when heap memory usage exceeds 85%, and the related AD job would be disabled because of that. It is possible at one point the heap memory usage exceeds 85% and gets back to less than 85% soon afterward.This PR mitigates the issue in the two following ways:First, only disable the AD job after the circuit breaker is broken for a consecutive number of times (3 times).Second, add a setting for enabling/disabling circuit breaker.\n\nTesting done:\n1. After disabling circuit breaker, an open circuit breaker does not affect AD job execution.\n2. Verified an open circuit breaker wouldn't cause an AD job to be stopped immediately.", "committedDate": "2020-06-20T01:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwMjQzNg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443702436", "bodyText": "issue. LTR seems to refer to AD.", "author": "wnbts", "createdAt": "2020-06-22T17:01:32Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -45,12 +45,19 @@\n      */\n     public static final String AD_PLUGIN_ENABLED = \"opendistro.anomaly_detection.enabled\";\n \n+    public static final String AD_BREAKER_ENABLED = \"opendistro.anomaly_detection.breaker.enabled\";\n+\n     private final Map<String, Setting<?>> settings = unmodifiableMap(new HashMap<String, Setting<?>>() {\n         {\n             /**\n              * AD plugin enable/disable setting\n              */\n             put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));\n+\n+            /**\n+             * LTR breaker enable/disable setting", "originalCommit": "3cc7b07db6f82b3d9f91045971f60ba43b90f6e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMTkyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443731925", "bodyText": "fixed", "author": "kaituo", "createdAt": "2020-06-22T17:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwMjQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "274d98de69760df92674691255f307897eb14c96", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java b/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\nindex f7d52a6..bc5101e 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\n\n@@ -55,7 +55,7 @@ public class EnabledSetting {\n             put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));\n \n             /**\n-             * LTR breaker enable/disable setting\n+             * AD breaker enable/disable setting\n              */\n             put(AD_BREAKER_ENABLED, Setting.boolSetting(AD_BREAKER_ENABLED, true, NodeScope, Dynamic));\n         }\n"}}, {"oid": "274d98de69760df92674691255f307897eb14c96", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/274d98de69760df92674691255f307897eb14c96", "message": "Update comment", "committedDate": "2020-06-22T18:09:55Z", "type": "commit"}, {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/babb7de74d1e0f7f991a006593ebc70df356ddb2", "message": "Increase max retry attempts during end run exception", "committedDate": "2020-06-22T20:10:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443822777", "bodyText": "this is ok for now. but i think the number of allowed retries should be settable per exception object, i.e. the endrun exception contains a field for the number of retries, which can be specific to detector (interval), exception type (limit exceeded, other endrun), or root cause. Stop now being true would just be a special case that number of retries being 0.", "author": "wnbts", "createdAt": "2020-06-22T20:59:11Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/AnomalyDetectorSettings.java", "diffHunk": "@@ -133,7 +133,7 @@ private AnomalyDetectorSettings() {}\n     public static final Setting<Integer> MAX_RETRY_FOR_END_RUN_EXCEPTION = Setting\n         .intSetting(\n             \"opendistro.anomaly_detection.max_retry_for_end_run_exception\",\n-            3,\n+            6,", "originalCommit": "babb7de74d1e0f7f991a006593ebc70df356ddb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1ODEzNQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444358135", "bodyText": "added to the tracking issue.", "author": "kaituo", "createdAt": "2020-06-23T16:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMzYyOQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443823629", "bodyText": "minor. and flag for stopping.", "author": "wnbts", "createdAt": "2020-06-22T21:00:54Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java", "diffHunk": "@@ -29,4 +29,15 @@\n     public LimitExceededException(String anomalyDetectorId, String message) {\n         super(anomalyDetectorId, message, true);\n     }\n+\n+    /**\n+     * Constructor with an anomaly detector ID and an explanation.", "originalCommit": "babb7de74d1e0f7f991a006593ebc70df356ddb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1NzczMA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444357730", "bodyText": "added", "author": "kaituo", "createdAt": "2020-06-23T16:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMzYyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e2aa9d3f3b07bae71730dd8c05482e7c2dfd4a7b", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java b/src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java\nindex c0f3132..1ee0f28 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java\n\n@@ -31,7 +31,7 @@ public class LimitExceededException extends EndRunException {\n     }\n \n     /**\n-     * Constructor with an anomaly detector ID and an explanation.\n+     * Constructor with an anomaly detector ID and an explanation, and a flag for stopping.\n      *\n      * @param anomalyDetectorId ID of the anomaly detector for which the limit is exceeded\n      * @param message explanation for the limit\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDkwMg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443824902", "bodyText": "Minor. Java doc for public interface is missing.", "author": "wnbts", "createdAt": "2020-06-22T21:03:32Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -100,6 +107,10 @@ public static boolean isADPluginEnabled() {\n         return EnabledSetting.getInstance().getSettingValue(EnabledSetting.AD_PLUGIN_ENABLED);\n     }\n \n+    public static boolean isADBreakerEnabled() {", "originalCommit": "babb7de74d1e0f7f991a006593ebc70df356ddb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2Mzc5OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444363798", "bodyText": "added doc", "author": "kaituo", "createdAt": "2020-06-23T16:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "e2aa9d3f3b07bae71730dd8c05482e7c2dfd4a7b", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java b/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\nindex bc5101e..0d56a5b 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java\n\n@@ -103,10 +103,18 @@ public class EnabledSetting {\n         throw new IllegalArgumentException(\"Cannot find setting by key [\" + key + \"]\");\n     }\n \n+    /**\n+     * Whether AD plugin is enabled.  If disabled, AD plugin rejects RESTful requests and stop all AD jobs.\n+     * @return whether AD plugin is enabled.\n+     */\n     public static boolean isADPluginEnabled() {\n         return EnabledSetting.getInstance().getSettingValue(EnabledSetting.AD_PLUGIN_ENABLED);\n     }\n \n+    /**\n+     * Whether AD circuit breaker is enabled or not.  If disabled, an open circuit breaker wouldn't cause an AD job to be stopped.\n+     * @return whether AD circuit breaker is enabled or not.\n+     */\n     public static boolean isADBreakerEnabled() {\n         return EnabledSetting.getInstance().getSettingValue(EnabledSetting.AD_BREAKER_ENABLED);\n     }\n"}}, {"oid": "e2aa9d3f3b07bae71730dd8c05482e7c2dfd4a7b", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/e2aa9d3f3b07bae71730dd8c05482e7c2dfd4a7b", "message": "Added java doc", "committedDate": "2020-06-23T16:45:00Z", "type": "commit"}]}