{"pr_number": 2775, "pr_title": "GCF: add storage system tests", "pr_createdAt": "2020-04-23T23:46:41Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2775", "timeline": [{"oid": "0b63f202b305ea7d2a794c62c8d2744a66755d05", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/0b63f202b305ea7d2a794c62c8d2744a66755d05", "message": "Add storage system tests", "committedDate": "2020-04-23T23:39:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNTk4OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2775#discussion_r414215989", "bodyText": "Please use a more specific exception(s) than Exception", "author": "kurtisvg", "createdAt": "2020-04-24T00:40:37Z", "path": "functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package functions;\n+\n+// [START functions_storage_system_test]\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.logging.LogEntry;\n+import com.google.cloud.logging.Logging;\n+import com.google.cloud.logging.LoggingOptions;\n+import com.google.cloud.storage.BlobId;\n+import com.google.cloud.storage.BlobInfo;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageOptions;\n+import io.github.resilience4j.core.IntervalFunction;\n+import io.github.resilience4j.retry.Retry;\n+import io.github.resilience4j.retry.RetryConfig;\n+import io.github.resilience4j.retry.RetryRegistry;\n+import java.io.IOException;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExampleSystemTest {\n+\n+  // TODO<developer>: set these values (as environment variables)\n+  private static final String PROJECT_ID = System.getenv(\"GCP_PROJECT\");\n+  private static final String FUNCTIONS_BUCKET = System.getenv(\"FUNCTIONS_BUCKET\");\n+  private static final String FUNCTION_DEPLOYED_NAME = \"HelloGcs\";\n+  private static final Storage STORAGE = StorageOptions.getDefaultInstance().getService();\n+\n+  private static Logging loggingClient;\n+\n+  private HelloGcs sampleUnderTest;\n+\n+  @BeforeClass\n+  public static void setUp() throws IOException {\n+    loggingClient = LoggingOptions.getDefaultInstance().getService();\n+  }\n+\n+  private static String getLogEntriesAsString(String startTimestamp) {\n+    // Construct Stackdriver logging filter\n+    // See this page for more info: https://cloud.google.com/logging/docs/view/advanced-queries\n+    String filter = \"resource.type=\\\"cloud_function\\\"\"\n+        + \" AND severity=INFO\"\n+        + \" AND resource.labels.function_name=\" + FUNCTION_DEPLOYED_NAME\n+        + String.format(\" AND timestamp>=\\\"%s\\\"\", startTimestamp);\n+\n+    // Get Stackdriver logging entries\n+    Page<LogEntry> logEntries =\n+        loggingClient.listLogEntries(\n+            Logging.EntryListOption.filter(filter),\n+            Logging.EntryListOption.sortOrder(Logging.SortingField.TIMESTAMP, Logging.SortingOrder.DESCENDING)\n+        );\n+\n+    // Serialize Stackdriver logging entries + collect them into a single string\n+    String logsConcat = StreamSupport.stream(logEntries.getValues().spliterator(), false)\n+        .map((x) -> x.toString())\n+        .collect(Collectors.joining(\"%n\"));\n+\n+    return logsConcat;\n+  }\n+\n+  @Test\n+  public void helloGcs_shouldRunOnGcf() throws Exception {", "originalCommit": "0b63f202b305ea7d2a794c62c8d2744a66755d05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d55e59fb0b7c2405f527590b9e35c52e562bf1c9", "chunk": "diff --git a/functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java b/functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java\nindex fcca98848..8dc6bdbfc 100644\n--- a/functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java\n+++ b/functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java\n\n@@ -66,7 +66,7 @@ public class ExampleSystemTest {\n   }\n \n   @Test\n-  public void helloGcs_shouldRunOnGcf() throws Exception {\n+  public void helloGcs_shouldRunOnGcf() {\n     String filename = String.format(\"test-%s.txt\", UUID.randomUUID());\n     String expected = String.format(\"File %s uploaded.\", filename);\n \n"}}, {"oid": "d55e59fb0b7c2405f527590b9e35c52e562bf1c9", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d55e59fb0b7c2405f527590b9e35c52e562bf1c9", "message": "Fix nit", "committedDate": "2020-04-24T00:44:10Z", "type": "commit"}, {"oid": "14c5ccf859a769111c75b77452dcca9b071b5762", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/14c5ccf859a769111c75b77452dcca9b071b5762", "message": "Presumptive checkstyle fixes", "committedDate": "2020-04-24T01:08:06Z", "type": "commit"}, {"oid": "8087516cb480840531f29884bcd8f71757a294fa", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8087516cb480840531f29884bcd8f71757a294fa", "message": "Fix checkstyle nit", "committedDate": "2020-04-24T01:18:18Z", "type": "commit"}]}