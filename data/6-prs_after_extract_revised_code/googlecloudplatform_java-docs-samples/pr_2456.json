{"pr_number": 2456, "pr_title": "Rename FhirResourceGetHistory -> FhirResourceListHistory, implement FhirResourceGetHistory.", "pr_createdAt": "2020-03-20T23:06:37Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTgyNQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395939825", "bodyText": "Care to give an example?  (What does a Version-id look like)", "author": "lesv", "createdAt": "2020-03-21T00:16:35Z", "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java", "diffHunk": "@@ -44,18 +44,19 @@\n   private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n   private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n \n-  public static void fhirResourceGetHistory(String resourceName)\n+  public static void fhirResourceGetHistory(String resourceName, String versionId)\n       throws IOException, URISyntaxException {\n     // String resourceName =\n     //    String.format(\n     //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String versionId = \"version-id\"\n ", "originalCommit": "b095171872aadc912df2bd1dedc27ca0960e9926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNzEyNw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r396627127", "bodyText": "What's a good example to give when it's just a UUID that the API generates for you? Should I just add \"-uuid?\"", "author": "dzlier-gcp", "createdAt": "2020-03-23T17:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4NzIzMA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r397287230", "bodyText": "You can just say, provided by the API.  (It didn't appear typed, perhaps it should be)", "author": "lesv", "createdAt": "2020-03-24T16:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTgyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "chunk": "diff --git a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java\nindex 5e8f15574..d9927a76e 100644\n--- a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java\n+++ b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java\n\n@@ -49,7 +49,7 @@ public class FhirResourceGetHistory {\n     // String resourceName =\n     //    String.format(\n     //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n-    // String versionId = \"version-id\"\n+    // String versionId = \"version-uuid\"\n \n     // Initialize the client, which will be used to interact with the service.\n     CloudHealthcare client = createClient();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTk5Mw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395939993", "bodyText": "Should this be public since it's guiding the input?", "author": "lesv", "createdAt": "2020-03-21T00:17:37Z", "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";", "originalCommit": "b095171872aadc912df2bd1dedc27ca0960e9926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyODU0NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r396628544", "bodyText": "This is modeled after all the other samples, so for consistency I'd prefer not to have just this one be different. It's more just an in-sample reference for how the path is structured.", "author": "dzlier-gcp", "createdAt": "2020-03-23T17:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2ODM1Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r397268352", "bodyText": "Yes - but this string isn't a useful thing to pass, ideally, you'd have a builder in the client lib for the string, the next level would be to publish that string in the client lib, and short of that do so in the sample so that it can be used in other places.", "author": "lesv", "createdAt": "2020-03-24T16:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "chunk": "diff --git a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\nindex 5b89b48c0..467dbd768 100644\n--- a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n+++ b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n\n@@ -90,8 +90,8 @@ public class FhirResourceListHistory {\n     HttpRequestInitializer requestInitializer =\n         request -> {\n           credential.initialize(request);\n-          request.setConnectTimeout(60000); // 1 minute connect timeout\n-          request.setReadTimeout(60000); // 1 minute read timeout\n+          request.setConnectTimeout(1 * 60 * 1000); // 1 minute connect timeout\n+          request.setReadTimeout(1 * 60 * 1000); // 1 minute read timeout\n         };\n \n     // Build the client for interacting with the service.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDE1MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940151", "bodyText": "Should the v1beta1 be defined near the top in all caps so users could easily change it?", "author": "lesv", "createdAt": "2020-03-21T00:18:33Z", "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceListHistory(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history\", client.getRootUrl(), resourceName);", "originalCommit": "b095171872aadc912df2bd1dedc27ca0960e9926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyOTEzMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r396629131", "bodyText": "Are users meant to copy this code directly? I always advocated for making this code as copy-pastable as possible, but it seemed like the sample format didn't go in that direction.", "author": "dzlier-gcp", "createdAt": "2020-03-23T17:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "chunk": "diff --git a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\nindex 5b89b48c0..467dbd768 100644\n--- a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n+++ b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n\n@@ -90,8 +90,8 @@ public class FhirResourceListHistory {\n     HttpRequestInitializer requestInitializer =\n         request -> {\n           credential.initialize(request);\n-          request.setConnectTimeout(60000); // 1 minute connect timeout\n-          request.setReadTimeout(60000); // 1 minute read timeout\n+          request.setConnectTimeout(1 * 60 * 1000); // 1 minute connect timeout\n+          request.setReadTimeout(1 * 60 * 1000); // 1 minute read timeout\n         };\n \n     // Build the client for interacting with the service.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMwMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940301", "bodyText": "1 * 60 * 1000 might be clearer", "author": "lesv", "createdAt": "2020-03-21T00:19:39Z", "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceListHistory(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri)\n+        .setParameter(\"access_token\", getAccessToken());\n+\n+    HttpUriRequest request = RequestBuilder\n+        .get()\n+        .setUri(uriBuilder.build())\n+        .addHeader(\"Content-Type\", \"application/fhir+json\")\n+        .addHeader(\"Accept-Charset\", \"utf-8\")\n+        .addHeader(\"Accept\", \"application/fhir+json; charset=utf-8\")\n+        .build();\n+\n+    // Execute the request and process the results.\n+    HttpResponse response = httpClient.execute(request);\n+    HttpEntity responseEntity = response.getEntity();\n+    if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n+      System.err.print(String.format(\n+          \"Exception retrieving FHIR history: %s\\n\", response.getStatusLine().toString()));\n+      responseEntity.writeTo(System.err);\n+      throw new RuntimeException();\n+    }\n+    System.out.println(\"FHIR resource history retrieved: \");\n+    responseEntity.writeTo(System.out);\n+  }\n+\n+  private static CloudHealthcare createClient() throws IOException {\n+    // Use Application Default Credentials (ADC) to authenticate the requests\n+    // For more information see https://cloud.google.com/docs/authentication/production\n+    GoogleCredential credential =\n+        GoogleCredential.getApplicationDefault(HTTP_TRANSPORT, JSON_FACTORY)\n+            .createScoped(Collections.singleton(CloudHealthcareScopes.CLOUD_PLATFORM));\n+\n+    // Create a HttpRequestInitializer, which will provide a baseline configuration to all requests.\n+    HttpRequestInitializer requestInitializer =\n+        request -> {\n+          credential.initialize(request);\n+          request.setConnectTimeout(60000); // 1 minute connect timeout\n+          request.setReadTimeout(60000); // 1 minute read timeout", "originalCommit": "b095171872aadc912df2bd1dedc27ca0960e9926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMyNQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940325", "bodyText": "Why do we need to set this?", "author": "lesv", "createdAt": "2020-03-21T00:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyOTUzMA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r396629530", "bodyText": "I believe I set this at one point because the calls were hanging for long periods of time, and I needed the tests to fail and not hang indefinitely if the call wasn't being returned.", "author": "dzlier-gcp", "createdAt": "2020-03-23T17:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "chunk": "diff --git a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\nindex 5b89b48c0..467dbd768 100644\n--- a/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n+++ b/healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java\n\n@@ -90,8 +90,8 @@ public class FhirResourceListHistory {\n     HttpRequestInitializer requestInitializer =\n         request -> {\n           credential.initialize(request);\n-          request.setConnectTimeout(60000); // 1 minute connect timeout\n-          request.setReadTimeout(60000); // 1 minute read timeout\n+          request.setConnectTimeout(1 * 60 * 1000); // 1 minute connect timeout\n+          request.setReadTimeout(1 * 60 * 1000); // 1 minute read timeout\n         };\n \n     // Build the client for interacting with the service.\n"}}, {"oid": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/27f9857f98535ee8ec698668a2e7ff53f25428d1", "message": "Resolve #2456.", "committedDate": "2020-04-06T21:23:49Z", "type": "forcePushed"}, {"oid": "d4676645ee70a6c25481a47fa05d14fb4211ca11", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d4676645ee70a6c25481a47fa05d14fb4211ca11", "message": "Resolve #2456.", "committedDate": "2020-04-08T18:11:35Z", "type": "forcePushed"}, {"oid": "73951b15b68806b39dde645fdca2a24ed6468440", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/73951b15b68806b39dde645fdca2a24ed6468440", "message": "Rename FhirResourceGetHistory -> FhirResourceListHistory, implement FhirResourceGetHistory.", "committedDate": "2020-04-08T18:13:13Z", "type": "commit"}, {"oid": "4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "message": "Resolve #2456.", "committedDate": "2020-04-08T18:13:13Z", "type": "forcePushed"}, {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "message": "Resolve #2456.", "committedDate": "2020-04-08T18:39:17Z", "type": "commit"}, {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "message": "Resolve #2456.", "committedDate": "2020-04-08T18:39:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0MTk3Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r405741972", "bodyText": "This is fine for tests, but in samples, I'd prefer we used json objects using Guava's GSON, Jackson, or org.json JAVA-Json", "author": "lesv", "createdAt": "2020-04-08T18:52:09Z", "path": "healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java", "diffHunk": "@@ -235,9 +236,25 @@ public void test_FhirResourceGetHistory() throws Exception {\n     FhirResourcePatch.fhirResourcePatch(\n         fhirResourceName,\n         \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\");\n-    FhirResourceGetHistory.fhirResourceGetHistory(fhirResourceName);\n+    // Get versionId from results of fhirResourcePatch.\n+    String versionId;\n+    Matcher idMatcher = Pattern.compile(\"\\\"versionId\\\": \\\"(.*)\\\"\").matcher(bout.toString());", "originalCommit": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a97abd63938329a06d31c5127354fded83568888", "chunk": "diff --git a/healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java b/healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java\nindex 3234cc7d5..506171ab9 100644\n--- a/healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java\n+++ b/healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java\n\n@@ -233,9 +252,13 @@ public class FhirResourceTests {\n \n   @Test\n   public void test_FhirResourceGetHistory() throws Exception {\n-    FhirResourcePatch.fhirResourcePatch(\n-        fhirResourceName,\n-        \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\");\n+    JsonObject json = new JsonObject();\n+    json.add(\"op\", new JsonPrimitive(\"add\"));\n+    json.add(\"path\", new JsonPrimitive(\"/active\"));\n+    json.add(\"value\", new JsonPrimitive(false));\n+    JsonArray jarray = new JsonArray();\n+    jarray.add(json);\n+    FhirResourcePatch.fhirResourcePatch(fhirResourceName, jarray.toString());\n     // Get versionId from results of fhirResourcePatch.\n     String versionId;\n     Matcher idMatcher = Pattern.compile(\"\\\"versionId\\\": \\\"(.*)\\\"\").matcher(bout.toString());\n"}}, {"oid": "a97abd63938329a06d31c5127354fded83568888", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a97abd63938329a06d31c5127354fded83568888", "message": "Use Java 11, and GSON in FhirResourceTests.", "committedDate": "2020-04-08T20:05:51Z", "type": "forcePushed"}, {"oid": "d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "message": "Use Java 11, and GSON in FhirResourceTests.", "committedDate": "2020-04-08T20:12:53Z", "type": "forcePushed"}, {"oid": "c70523e686245660dfc10430fba28d9b7fdb0dc8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c70523e686245660dfc10430fba28d9b7fdb0dc8", "message": "Use Java 11, and GSON in FhirResourceTests.", "committedDate": "2020-04-08T21:18:00Z", "type": "commit"}, {"oid": "c70523e686245660dfc10430fba28d9b7fdb0dc8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c70523e686245660dfc10430fba28d9b7fdb0dc8", "message": "Use Java 11, and GSON in FhirResourceTests.", "committedDate": "2020-04-08T21:18:00Z", "type": "forcePushed"}]}