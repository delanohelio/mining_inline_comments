{"pr_number": 4045, "pr_title": "feat: eventarc generic and eventarc other brushup", "pr_createdAt": "2020-10-21T04:59:22Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045", "timeline": [{"oid": "5b1d1ea1b8b0c15c0179d6c120adc69f1f520384", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/5b1d1ea1b8b0c15c0179d6c120adc69f1f520384", "message": "feat: eventarc generic and eventarc other brushup\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-21T04:56:42Z", "type": "commit"}, {"oid": "b955c1bd31c94cd2ae2ec119a7e770ff9d935c98", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b955c1bd31c94cd2ae2ec119a7e770ff9d935c98", "message": "lint: fix lint issue\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-21T14:01:26Z", "type": "commit"}, {"oid": "6a9997b4fb479dc14ce9c644f49867c03b1592fa", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/6a9997b4fb479dc14ce9c644f49867c03b1592fa", "message": "lint: fix lint issue\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-21T14:14:39Z", "type": "commit"}, {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/7336d434cc2b50459dff1a60f2bf3bd15e076a3b", "message": "lint: fix lint issue\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-21T14:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NDU4NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509394585", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);\n          \n          \n            \n                String msg = \"Detected change in GCS bucket: \" + ceSubject;\n          \n      \n    \n    \n  \n\nString.format has poor performance", "author": "averikitsch", "createdAt": "2020-10-21T15:39:31Z", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -53,7 +52,7 @@\n     }\n \n     String ceSubject = headers.get(\"ce-subject\");\n-    String msg = String.format(\"GCS CloudEvent type: %s.\", ceSubject);\n+    String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);", "originalCommit": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5NjM0Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509596347", "bodyText": "Fixed, thanks.", "author": "grant", "createdAt": "2020-10-21T19:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NDU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6b54d5aae55ca3ef497a3d6c0ead4eca3795700", "chunk": "diff --git a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\nindex ff5fc4c6e..8294e06ad 100644\n--- a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n+++ b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n\n@@ -52,7 +52,7 @@ public class EventController {\n     }\n \n     String ceSubject = headers.get(\"ce-subject\");\n-    String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);\n+    String msg = \"Detected change in GCS bucket: \" + ceSubject;\n     System.out.println(msg);\n     return new ResponseEntity<String>(msg, HttpStatus.OK);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509395297", "bodyText": "Even though this isn't the point of the sample, removing PubSubBody feels like it makes this sample not useful for continued learning and building.", "author": "averikitsch", "createdAt": "2020-10-21T15:40:26Z", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Object body, @RequestHeader Map<String, String> headers) {", "originalCommit": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5NjExMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509596113", "bodyText": "This sample literally does not receive Pub/Sub requests. It receives Cloud Audit Log requests. In this case, the audit log is for a Cloud Storage event.\nThus, it's incorrect to have Pub/Sub in this sample. The sample does not use this body, so the tests have always passed. If we wanted a different POJO, we cannot include a LogEntryData POJO until that library is finished and published.\nWe have a Pub/Sub sample for Pub/Sub events.", "author": "grant", "createdAt": "2020-10-21T19:07:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwMDAzNA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r510400034", "bodyText": "You could build your own POJO for the time being like Pub/Sub.  From this code, I have no idea what it accepts so if possible at least add a content type. We shouldn't use \"Object\", Map<String, String> would at least be useable.", "author": "averikitsch", "createdAt": "2020-10-22T19:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY1NDQ4NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r510654484", "bodyText": "I've changed the type to a Map per suggestion.\n\nThe JSON payload is large for an Audit Log. The POJO would have 14 classes (see link above), unless we construct a custom POJO for this type.\nThe actual contents of an Audit Log is very strange, hard to use, and is not useful for this sample of an audit log for a Cloud Storage event.\nI don't think there's value in adding/maintaining a POJO in Java for this specific event type during public preview and would rather have a generic type until we publish https://github.com/googleapis/google-cloudevents-java/tree/master/google-cloudevent-types/src/main/java/com/google/events/cloud/audit/v1", "author": "grant", "createdAt": "2020-10-23T06:13:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "42d20305c29366eda8986286042f3725330a188c", "chunk": "diff --git a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\nindex ff5fc4c6e..0dfecb294 100644\n--- a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n+++ b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n\n@@ -36,7 +36,7 @@ public class EventController {\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody Object body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Map<String, String>  body, @RequestHeader Map<String, String> headers) {\n     for (String field : requiredFields) {\n       if (headers.get(field) == null) {\n         String msg = String.format(\"Missing expected header: %s.\", field);\n"}}, {"oid": "b6b54d5aae55ca3ef497a3d6c0ead4eca3795700", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b6b54d5aae55ca3ef497a3d6c0ead4eca3795700", "message": "fix: eventarc generic review comments\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-21T19:18:42Z", "type": "commit"}, {"oid": "42d20305c29366eda8986286042f3725330a188c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/42d20305c29366eda8986286042f3725330a188c", "message": "fix: use map for request body type\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-23T06:04:45Z", "type": "commit"}, {"oid": "65372044b5db7a247af2954ace3f824118af795d", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/65372044b5db7a247af2954ace3f824118af795d", "message": "fix: use map for request body type\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-23T06:05:14Z", "type": "commit"}, {"oid": "65372044b5db7a247af2954ace3f824118af795d", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/65372044b5db7a247af2954ace3f824118af795d", "message": "fix: use map for request body type\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-23T06:05:14Z", "type": "forcePushed"}, {"oid": "8ff57f9dacfeb51268d85b361f1b0092b2cac0a5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8ff57f9dacfeb51268d85b361f1b0092b2cac0a5", "message": "Merge branch 'master' into grant_eventarc_generic", "committedDate": "2020-10-23T06:16:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxMzI3OA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r511013278", "bodyText": "I forgot the fields aren't necessary strings, so this should be <String, Object> for the unmarshalling. Will approve for this simple change.", "author": "averikitsch", "createdAt": "2020-10-23T16:50:34Z", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Map<String, String> body, @RequestHeader Map<String, String> headers) {", "originalCommit": "8ff57f9dacfeb51268d85b361f1b0092b2cac0a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxNzc4Mw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r511017783", "bodyText": "Changed to Object.", "author": "grant", "createdAt": "2020-10-23T16:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxMzI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "94124e10d318d614df0660d69702ae0a3987628b", "chunk": "diff --git a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\nindex 4bea25fc7..584a728cd 100644\n--- a/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n+++ b/eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java\n\n@@ -36,7 +36,7 @@ public class EventController {\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody Map<String, String> body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Map<String, Object> body, @RequestHeader Map<String, String> headers) {\n     for (String field : requiredFields) {\n       if (headers.get(field) == null) {\n         String msg = String.format(\"Missing expected header: %s.\", field);\n"}}, {"oid": "94124e10d318d614df0660d69702ae0a3987628b", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/94124e10d318d614df0660d69702ae0a3987628b", "message": "fix: eventarc audit map from string to object\n\nSigned-off-by: Grant Timmerman <timmerman+devrel@google.com>", "committedDate": "2020-10-23T16:58:37Z", "type": "commit"}]}