{"pr_number": 2039, "pr_title": "Add Secret Manager IAM samples", "pr_createdAt": "2020-01-28T06:25:08Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039", "timeline": [{"oid": "18933c51a30080f35ca109d61b6f3ccdc464aa4a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/18933c51a30080f35ca109d61b6f3ccdc464aa4a", "message": "Add Secret Manager IAM samples", "committedDate": "2020-01-28T06:24:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MjE3Ng==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371962176", "bodyText": "nit: better variable name for b", "author": "averikitsch", "createdAt": "2020-01-28T17:54:57Z", "path": "secretmanager/src/main/java/com/example/IamRevokeAccess.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example;\n+\n+// [START secretmanager_iam_revoke_access]\n+import com.google.cloud.secretmanager.v1beta1.SecretManagerServiceClient;\n+import com.google.cloud.secretmanager.v1beta1.SecretName;\n+import com.google.iam.v1.Binding;\n+import com.google.iam.v1.GetIamPolicyRequest;\n+import com.google.iam.v1.Policy;\n+import com.google.iam.v1.SetIamPolicyRequest;\n+import java.io.IOException;\n+\n+public class IamRevokeAccess {\n+\n+  public void iamRevokeAccess() throws IOException {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"your-project-id\";\n+    String secretId = \"your-secret-id\";\n+    String member = \"user:foo@example.com\";\n+    iamRevokeAccess(projectId, secretId, member);\n+  }\n+\n+  // Revoke a member access to a particular secret.\n+  public void iamRevokeAccess(String projectId, String secretId, String member) throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n+    try (SecretManagerServiceClient client = SecretManagerServiceClient.create()) {\n+      // Build the name from the version.\n+      SecretName name = SecretName.of(projectId, secretId);\n+\n+      // Create a request to get the current IAM policy.\n+      GetIamPolicyRequest getRequest =\n+          GetIamPolicyRequest.newBuilder().setResource(name.toString()).build();\n+\n+      // Request the current IAM policy.\n+      Policy policy = client.getIamPolicy(getRequest);\n+\n+      // Search through bindings and remove matches.\n+      String roleToFind = \"roles/secretmanager.secretAccessor\";\n+      for (Binding b : policy.getBindingsList()) {", "originalCommit": "18933c51a30080f35ca109d61b6f3ccdc464aa4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3MDc5OA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371970798", "bodyText": "Done", "author": "sethvargo", "createdAt": "2020-01-28T18:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MjE3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a073f5372aa0f4d2a3b46ecfad8c5ecc757892fa", "chunk": "diff --git a/secretmanager/src/main/java/com/example/IamRevokeAccess.java b/secretmanager/src/main/java/com/example/IamRevokeAccess.java\nindex 5c089de67..9daa0919b 100644\n--- a/secretmanager/src/main/java/com/example/IamRevokeAccess.java\n+++ b/secretmanager/src/main/java/com/example/IamRevokeAccess.java\n\n@@ -53,9 +53,9 @@ public class IamRevokeAccess {\n \n       // Search through bindings and remove matches.\n       String roleToFind = \"roles/secretmanager.secretAccessor\";\n-      for (Binding b : policy.getBindingsList()) {\n-        if (b.getRole() == roleToFind && b.getMembersList().contains(member)) {\n-          b.getMembersList().remove(member);\n+      for (Binding binding : policy.getBindingsList()) {\n+        if (binding.getRole() == roleToFind && binding.getMembersList().contains(member)) {\n+          binding.getMembersList().remove(member);\n         }\n       }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2Mjg4NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371962885", "bodyText": "probably should change this", "author": "averikitsch", "createdAt": "2020-01-28T17:56:14Z", "path": "secretmanager/src/test/java/com/example/SnippetsIT.java", "diffHunk": "@@ -47,6 +47,7 @@\n /** Integration (system) tests for {@link Snippets}. */\n @RunWith(JUnit4.class)\n public class SnippetsIT {\n+  private static final String IAM_USER = \"user:sethvargo@google.com\";", "originalCommit": "18933c51a30080f35ca109d61b6f3ccdc464aa4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3MDI2MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371970261", "bodyText": "Hi @averikitsch - is there a good service account that exists (or could you create one) in the test project please?", "author": "sethvargo", "createdAt": "2020-01-28T18:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2Mjg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NTE4MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371975181", "bodyText": "iam-samples@java-docs-samples-testing.iam.gserviceaccount.com. Currently it has no roles or keys associated with it.", "author": "averikitsch", "createdAt": "2020-01-28T18:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2Mjg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk4MDUyOQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2039#discussion_r371980529", "bodyText": "Done", "author": "sethvargo", "createdAt": "2020-01-28T18:30:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2Mjg4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e1da9fa75eaf57721c0e0ec7d87eaf2e13317c5c", "chunk": "diff --git a/secretmanager/src/test/java/com/example/SnippetsIT.java b/secretmanager/src/test/java/com/example/SnippetsIT.java\nindex e11eae64c..ec78db79f 100644\n--- a/secretmanager/src/test/java/com/example/SnippetsIT.java\n+++ b/secretmanager/src/test/java/com/example/SnippetsIT.java\n\n@@ -47,7 +47,8 @@ import org.junit.runners.JUnit4;\n /** Integration (system) tests for {@link Snippets}. */\n @RunWith(JUnit4.class)\n public class SnippetsIT {\n-  private static final String IAM_USER = \"user:sethvargo@google.com\";\n+  private static final String IAM_USER =\n+      \"iam-samples@java-docs-samples-testing.iam.gserviceaccount.com\";\n   private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n \n   private static Secret TEST_SECRET;\n"}}, {"oid": "a073f5372aa0f4d2a3b46ecfad8c5ecc757892fa", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a073f5372aa0f4d2a3b46ecfad8c5ecc757892fa", "message": "Use a better variable name for binding", "committedDate": "2020-01-28T18:11:41Z", "type": "commit"}, {"oid": "e1da9fa75eaf57721c0e0ec7d87eaf2e13317c5c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e1da9fa75eaf57721c0e0ec7d87eaf2e13317c5c", "message": "Use service account", "committedDate": "2020-01-28T18:30:48Z", "type": "commit"}, {"oid": "d28701febb1323119c858933fea84b5c000af7d5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d28701febb1323119c858933fea84b5c000af7d5", "message": "Add service account prefix", "committedDate": "2020-01-28T18:54:50Z", "type": "commit"}]}