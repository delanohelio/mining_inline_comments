{"pr_number": 2013, "pr_title": "automl-beta: copy v1 samples to beta folder and update imports", "pr_createdAt": "2020-01-21T20:18:56Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2013", "timeline": [{"oid": "d554191074b692efa3aff3202b3a97c45bbf18ad", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d554191074b692efa3aff3202b3a97c45bbf18ad", "message": "automl-beta: copy v1 samples to beta folder and update imports", "committedDate": "2020-01-21T20:17:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5NTM4MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2013#discussion_r372495381", "bodyText": "Delete, not in docs", "author": "nnegrey", "createdAt": "2020-01-29T16:36:41Z", "path": "automl/beta/src/main/java/com/example/automl/GetOperationStatus.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+// [START automl_get_operation_status_beta]\n+import com.google.cloud.automl.v1beta1.AutoMlClient;\n+import com.google.longrunning.Operation;\n+\n+import java.io.IOException;\n+\n+class GetOperationStatus {\n+\n+  static void getOperationStatus() throws IOException {", "originalCommit": "d554191074b692efa3aff3202b3a97c45bbf18ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2616cfc439cbcd15db1d80a4aae91f8c680f24b", "chunk": "diff --git a/automl/beta/src/main/java/com/example/automl/GetOperationStatus.java b/automl/beta/src/main/java/com/example/automl/GetOperationStatus.java\ndeleted file mode 100644\nindex c8ad8c326..000000000\n--- a/automl/beta/src/main/java/com/example/automl/GetOperationStatus.java\n+++ /dev/null\n\n@@ -1,58 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.example.automl;\n-\n-// [START automl_get_operation_status_beta]\n-import com.google.cloud.automl.v1beta1.AutoMlClient;\n-import com.google.longrunning.Operation;\n-\n-import java.io.IOException;\n-\n-class GetOperationStatus {\n-\n-  static void getOperationStatus() throws IOException {\n-    // TODO(developer): Replace these variables before running the sample.\n-    String operationFullId = \"projects/[projectId]/locations/us-central1/operations/[operationId]\";\n-    getOperationStatus(operationFullId);\n-  }\n-\n-  // Get the status of an operation\n-  static void getOperationStatus(String operationFullId) throws IOException {\n-    // Initialize client that will be used to send requests. This client only needs to be created\n-    // once, and can be reused for multiple requests. After completing all of your requests, call\n-    // the \"close\" method on the client to safely clean up any remaining background resources.\n-    try (AutoMlClient client = AutoMlClient.create()) {\n-      // Get the latest state of a long-running operation.\n-      Operation operation = client.getOperationsClient().getOperation(operationFullId);\n-\n-      // Display operation details.\n-      System.out.println(\"Operation details:\");\n-      System.out.format(\"\\tName: %s\\n\", operation.getName());\n-      System.out.format(\"\\tMetadata Type Url: %s\\n\", operation.getMetadata().getTypeUrl());\n-      System.out.format(\"\\tDone: %s\\n\", operation.getDone());\n-      if (operation.hasResponse()) {\n-        System.out.format(\"\\tResponse Type Url: %s\\n\", operation.getResponse().getTypeUrl());\n-      }\n-      if (operation.hasError()) {\n-        System.out.println(\"\\tResponse:\");\n-        System.out.format(\"\\t\\tError code: %s\\n\", operation.getError().getCode());\n-        System.out.format(\"\\t\\tError message: %s\\n\", operation.getError().getMessage());\n-      }\n-    }\n-  }\n-}\n-// [END automl_get_operation_status_beta]\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5NTU5MQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2013#discussion_r372495591", "bodyText": "Delete, not in docs", "author": "nnegrey", "createdAt": "2020-01-29T16:37:03Z", "path": "automl/beta/src/main/java/com/example/automl/ListModelEvaluations.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+// [START automl_video_classification_list_model_evaluations_beta]\n+\n+import com.google.cloud.automl.v1beta1.AutoMlClient;\n+import com.google.cloud.automl.v1beta1.ListModelEvaluationsRequest;\n+import com.google.cloud.automl.v1beta1.ModelEvaluation;\n+import com.google.cloud.automl.v1beta1.ModelName;\n+\n+import java.io.IOException;\n+\n+class ListModelEvaluations {\n+\n+  public static void main(String[] args) throws IOException {", "originalCommit": "d554191074b692efa3aff3202b3a97c45bbf18ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2616cfc439cbcd15db1d80a4aae91f8c680f24b", "chunk": "diff --git a/automl/beta/src/main/java/com/example/automl/ListModelEvaluations.java b/automl/beta/src/main/java/com/example/automl/ListModelEvaluations.java\ndeleted file mode 100644\nindex ca05466f1..000000000\n--- a/automl/beta/src/main/java/com/example/automl/ListModelEvaluations.java\n+++ /dev/null\n\n@@ -1,68 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.example.automl;\n-\n-// [START automl_video_classification_list_model_evaluations_beta]\n-\n-import com.google.cloud.automl.v1beta1.AutoMlClient;\n-import com.google.cloud.automl.v1beta1.ListModelEvaluationsRequest;\n-import com.google.cloud.automl.v1beta1.ModelEvaluation;\n-import com.google.cloud.automl.v1beta1.ModelName;\n-\n-import java.io.IOException;\n-\n-class ListModelEvaluations {\n-\n-  public static void main(String[] args) throws IOException {\n-    // TODO(developer): Replace these variables before running the sample.\n-    String projectId = \"YOUR_PROJECT_ID\";\n-    String modelId = \"YOUR_MODEL_ID\";\n-    listModelEvaluations(projectId, modelId);\n-  }\n-\n-  // List model evaluations\n-  static void listModelEvaluations(String projectId, String modelId) throws IOException {\n-    // Initialize client that will be used to send requests. This client only needs to be created\n-    // once, and can be reused for multiple requests. After completing all of your requests, call\n-    // the \"close\" method on the client to safely clean up any remaining background resources.\n-    try (AutoMlClient client = AutoMlClient.create()) {\n-      // Get the full path of the model.\n-      ModelName modelFullId = ModelName.of(projectId, \"us-central1\", modelId);\n-      ListModelEvaluationsRequest modelEvaluationsrequest =\n-          ListModelEvaluationsRequest.newBuilder().setParent(modelFullId.toString()).build();\n-\n-      // List all the model evaluations in the model by applying filter.\n-      System.out.println(\"List of model evaluations:\");\n-      for (ModelEvaluation modelEvaluation :\n-          client.listModelEvaluations(modelEvaluationsrequest).iterateAll()) {\n-\n-        System.out.format(\"Model Evaluation Name: %s\\n\", modelEvaluation.getName());\n-        System.out.format(\"Model Annotation Spec Id: %s\", modelEvaluation.getAnnotationSpecId());\n-        System.out.println(\"Create Time:\");\n-        System.out.format(\"\\tseconds: %s\\n\", modelEvaluation.getCreateTime().getSeconds());\n-        System.out.format(\"\\tnanos: %s\", modelEvaluation.getCreateTime().getNanos() / 1e9);\n-        System.out.format(\n-            \"Evalution Example Count: %d\\n\", modelEvaluation.getEvaluatedExampleCount());\n-\n-        System.out.format(\n-            \"Classification Model Evaluation Metrics: %s\\n\",\n-            modelEvaluation.getClassificationEvaluationMetrics());\n-      }\n-    }\n-  }\n-}\n-// [END automl_video_classification_list_model_evaluations_beta]\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5NTc2MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2013#discussion_r372495760", "bodyText": "Delete not in docs", "author": "nnegrey", "createdAt": "2020-01-29T16:37:20Z", "path": "automl/beta/src/main/java/com/example/automl/ListOperationStatus.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+// [START automl_list_operation_status_beta]\n+import com.google.cloud.automl.v1beta1.AutoMlClient;\n+import com.google.cloud.automl.v1beta1.LocationName;\n+import com.google.longrunning.ListOperationsRequest;\n+import com.google.longrunning.Operation;\n+\n+import java.io.IOException;\n+\n+class ListOperationStatus {\n+\n+  static void listOperationStatus() throws IOException {", "originalCommit": "d554191074b692efa3aff3202b3a97c45bbf18ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2616cfc439cbcd15db1d80a4aae91f8c680f24b", "chunk": "diff --git a/automl/beta/src/main/java/com/example/automl/ListOperationStatus.java b/automl/beta/src/main/java/com/example/automl/ListOperationStatus.java\ndeleted file mode 100644\nindex 7f630e2ac..000000000\n--- a/automl/beta/src/main/java/com/example/automl/ListOperationStatus.java\n+++ /dev/null\n\n@@ -1,67 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.example.automl;\n-\n-// [START automl_list_operation_status_beta]\n-import com.google.cloud.automl.v1beta1.AutoMlClient;\n-import com.google.cloud.automl.v1beta1.LocationName;\n-import com.google.longrunning.ListOperationsRequest;\n-import com.google.longrunning.Operation;\n-\n-import java.io.IOException;\n-\n-class ListOperationStatus {\n-\n-  static void listOperationStatus() throws IOException {\n-    // TODO(developer): Replace these variables before running the sample.\n-    String projectId = \"YOUR_PROJECT_ID\";\n-    listOperationStatus(projectId);\n-  }\n-\n-  // Get the status of an operation\n-  static void listOperationStatus(String projectId) throws IOException {\n-    // Initialize client that will be used to send requests. This client only needs to be created\n-    // once, and can be reused for multiple requests. After completing all of your requests, call\n-    // the \"close\" method on the client to safely clean up any remaining background resources.\n-    try (AutoMlClient client = AutoMlClient.create()) {\n-      // A resource that represents Google Cloud Platform location.\n-      LocationName projectLocation = LocationName.of(projectId, \"us-central1\");\n-\n-      // Create list operations request.\n-      ListOperationsRequest listrequest =\n-          ListOperationsRequest.newBuilder().setName(projectLocation.toString()).build();\n-\n-      // List all the operations names available in the region by applying filter.\n-      for (Operation operation :\n-          client.getOperationsClient().listOperations(listrequest).iterateAll()) {\n-        System.out.println(\"Operation details:\");\n-        System.out.format(\"\\tName: %s\\n\", operation.getName());\n-        System.out.format(\"\\tMetadata Type Url: %s\\n\", operation.getMetadata().getTypeUrl());\n-        System.out.format(\"\\tDone: %s\\n\", operation.getDone());\n-        if (operation.hasResponse()) {\n-          System.out.format(\"\\tResponse Type Url: %s\\n\", operation.getResponse().getTypeUrl());\n-        }\n-        if (operation.hasError()) {\n-          System.out.println(\"\\tResponse:\");\n-          System.out.format(\"\\t\\tError code: %s\\n\", operation.getError().getCode());\n-          System.out.format(\"\\t\\tError message: %s\\n\\n\", operation.getError().getMessage());\n-        }\n-      }\n-    }\n-  }\n-}\n-// [END automl_list_operation_status_beta]\n"}}, {"oid": "23cb59f194b0251f5d385562669db8fb73a75ff3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/23cb59f194b0251f5d385562669db8fb73a75ff3", "message": "Merge branch 'master' into automl-beta-model", "committedDate": "2020-01-29T18:14:21Z", "type": "commit"}, {"oid": "b2616cfc439cbcd15db1d80a4aae91f8c680f24b", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b2616cfc439cbcd15db1d80a4aae91f8c680f24b", "message": "removed unused files and update the tests", "committedDate": "2020-01-29T18:20:45Z", "type": "commit"}]}