{"pr_number": 3677, "pr_title": "chore(functions/firebase): Add infinite-loop guard + test", "pr_createdAt": "2020-09-09T01:44:22Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677", "timeline": [{"oid": "233abbe6c6ee2abfbb9cd5e020d3b067262cc620", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/233abbe6c6ee2abfbb9cd5e020d3b067262cc620", "message": "Add infinite-loop guard + test", "committedDate": "2020-09-09T01:42:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc3OTUyMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677#discussion_r485779523", "bodyText": "It would be good to explain this a bit.  I know it's in a test and not published, but it's not obvious.", "author": "lesv", "createdAt": "2020-09-09T17:02:50Z", "path": "functions/firebase/firestore-reactive/src/test/java/functions/FirebaseFirestoreReactiveTest.java", "diffHunk": "@@ -92,6 +92,25 @@ public void functionsFirebaseReactive_shouldCapitalizeOriginalValue()  {\n         \"Replacing value: foo --> FOO\");\n   }\n \n+  @Test\n+  public void functionsFirebaseReactive_shouldIgnoreCapitalizedValues()  {\n+\n+    String jsonStr = gson.toJson(Map.of(\"value\",\n+        Map.of(\"fields\",\n+            Map.of(\"original\",\n+                Map.of(\"stringValue\", \"FOO\")))));\n+\n+    MockContext context = new MockContext();\n+    context.resource = \"projects/_/databases/(default)/documents/messages/ABCDE12345\";", "originalCommit": "233abbe6c6ee2abfbb9cd5e020d3b067262cc620", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4MDA4NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677#discussion_r485780085", "bodyText": "Consider a comment about why you are doing this.  Something as simple as \"performance optimization\" will do.", "author": "lesv", "createdAt": "2020-09-09T17:03:50Z", "path": "functions/firebase/firestore-reactive/src/main/java/functions/FirebaseFirestoreReactive.java", "diffHunk": "@@ -79,11 +79,17 @@ public void accept(String json, Context context) {\n \n     String affectedDoc = context.resource().split(\"/documents/\")[1].replace(\"\\\"\", \"\");\n \n-    logger.info(String.format(\"Replacing value: %s --> %s\", currentValue, newValue));\n-    try {\n-      FIRESTORE.document(affectedDoc).set(newFields, SetOptions.merge()).get();\n-    } catch (ExecutionException | InterruptedException e) {\n-      logger.log(Level.SEVERE, \"Error updating Firestore document: \" + e.getMessage(), e);\n+    if (!currentValue.equals(newValue)) {", "originalCommit": "233abbe6c6ee2abfbb9cd5e020d3b067262cc620", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwNzg0Mw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677#discussion_r485907843", "bodyText": "Is the comment in the else clause enough?", "author": "ace-n", "createdAt": "2020-09-09T20:38:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4MDA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTI3Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677#discussion_r485915272", "bodyText": "Since it's kind of important, it makes sense to say it early so they understand why the if is there.", "author": "lesv", "createdAt": "2020-09-09T20:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4MDA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NzYzMg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3677#discussion_r485947632", "bodyText": "Comments reworded, @lesv PTAL?", "author": "ace-n", "createdAt": "2020-09-09T22:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4MDA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d2ef25166642a56ef59b58355b94459dd56adc1a", "chunk": "diff --git a/functions/firebase/firestore-reactive/src/main/java/functions/FirebaseFirestoreReactive.java b/functions/firebase/firestore-reactive/src/main/java/functions/FirebaseFirestoreReactive.java\nindex 166d159cc..dddd39a83 100644\n--- a/functions/firebase/firestore-reactive/src/main/java/functions/FirebaseFirestoreReactive.java\n+++ b/functions/firebase/firestore-reactive/src/main/java/functions/FirebaseFirestoreReactive.java\n\n@@ -80,6 +80,8 @@ public class FirebaseFirestoreReactive implements RawBackgroundFunction {\n     String affectedDoc = context.resource().split(\"/documents/\")[1].replace(\"\\\"\", \"\");\n \n     if (!currentValue.equals(newValue)) {\n+      // The stored value needs to be updated\n+      // Write the upper-cased value to Firestore\n       logger.info(String.format(\"Replacing value: %s --> %s\", currentValue, newValue));\n       try {\n         FIRESTORE.document(affectedDoc).set(newFields, SetOptions.merge()).get();\n"}}, {"oid": "d2ef25166642a56ef59b58355b94459dd56adc1a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d2ef25166642a56ef59b58355b94459dd56adc1a", "message": "Clarify comments", "committedDate": "2020-09-09T22:03:40Z", "type": "commit"}]}