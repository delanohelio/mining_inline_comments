{"pr_number": 3931, "pr_title": "Vulnerability notification example", "pr_createdAt": "2020-10-12T18:03:28Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3931", "timeline": [{"oid": "9c010e20d0202f8a147b2dfb8a447e996b2f8134", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9c010e20d0202f8a147b2dfb8a447e996b2f8134", "message": "added vulnerability notification example", "committedDate": "2020-10-12T16:08:40Z", "type": "commit"}, {"oid": "ccbce3385b6db504cf960c0cca914dd513bff5cd", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ccbce3385b6db504cf960c0cca914dd513bff5cd", "message": "fixed issues", "committedDate": "2020-10-12T16:44:57Z", "type": "commit"}, {"oid": "c4c9b909d75bfebdc2c8991201992904aab313fb", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c4c9b909d75bfebdc2c8991201992904aab313fb", "message": "updated", "committedDate": "2020-10-12T18:01:38Z", "type": "commit"}, {"oid": "1dd178c9df375fd28273f8ce6a5d304bb357e1be", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1dd178c9df375fd28273f8ce6a5d304bb357e1be", "message": "Merge remote-tracking branch 'upstream/master' into vulnerability", "committedDate": "2020-10-12T18:01:48Z", "type": "commit"}, {"oid": "96fe82014285e59c756ee687bb8c3b731d0394c7", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/96fe82014285e59c756ee687bb8c3b731d0394c7", "message": "lint", "committedDate": "2020-10-12T18:02:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1NDYxMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3931#discussion_r503454613", "bodyText": "We try to stay away from this stuff.", "author": "lesv", "createdAt": "2020-10-12T18:05:47Z", "path": "container-registry/vulnerability-notification-function/.mvn/wrapper/MavenWrapperDownloader.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*", "originalCommit": "96fe82014285e59c756ee687bb8c3b731d0394c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNDYwMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3931#discussion_r503514603", "bodyText": "The maven wrapper shouldn't be in our samples.", "author": "lesv", "createdAt": "2020-10-12T20:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1NDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDc5OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3931#discussion_r503540799", "bodyText": "removed", "author": "saturnism", "createdAt": "2020-10-12T21:28:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1NDYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "ec3ffea210414987c5234dc7473ba7c541e38dd9", "chunk": "diff --git a/container-registry/vulnerability-notification-function/.mvn/wrapper/MavenWrapperDownloader.java b/container-registry/vulnerability-notification-function/.mvn/wrapper/MavenWrapperDownloader.java\ndeleted file mode 100644\nindex e76d1f324..000000000\n--- a/container-registry/vulnerability-notification-function/.mvn/wrapper/MavenWrapperDownloader.java\n+++ /dev/null\n\n@@ -1,117 +0,0 @@\n-/*\n- * Copyright 2007-present the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-import java.net.*;\n-import java.io.*;\n-import java.nio.channels.*;\n-import java.util.Properties;\n-\n-public class MavenWrapperDownloader {\n-\n-    private static final String WRAPPER_VERSION = \"0.5.6\";\n-    /**\n-     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n-     */\n-    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n-        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n-\n-    /**\n-     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n-     * use instead of the default one.\n-     */\n-    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n-            \".mvn/wrapper/maven-wrapper.properties\";\n-\n-    /**\n-     * Path where the maven-wrapper.jar will be saved to.\n-     */\n-    private static final String MAVEN_WRAPPER_JAR_PATH =\n-            \".mvn/wrapper/maven-wrapper.jar\";\n-\n-    /**\n-     * Name of the property which should be used to override the default download url for the wrapper.\n-     */\n-    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n-\n-    public static void main(String args[]) {\n-        System.out.println(\"- Downloader started\");\n-        File baseDirectory = new File(args[0]);\n-        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n-\n-        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n-        // wrapperUrl parameter.\n-        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n-        String url = DEFAULT_DOWNLOAD_URL;\n-        if(mavenWrapperPropertyFile.exists()) {\n-            FileInputStream mavenWrapperPropertyFileInputStream = null;\n-            try {\n-                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n-                Properties mavenWrapperProperties = new Properties();\n-                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n-                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n-            } catch (IOException e) {\n-                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n-            } finally {\n-                try {\n-                    if(mavenWrapperPropertyFileInputStream != null) {\n-                        mavenWrapperPropertyFileInputStream.close();\n-                    }\n-                } catch (IOException e) {\n-                    // Ignore ...\n-                }\n-            }\n-        }\n-        System.out.println(\"- Downloading from: \" + url);\n-\n-        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n-        if(!outputFile.getParentFile().exists()) {\n-            if(!outputFile.getParentFile().mkdirs()) {\n-                System.out.println(\n-                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n-            }\n-        }\n-        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n-        try {\n-            downloadFileFromURL(url, outputFile);\n-            System.out.println(\"Done\");\n-            System.exit(0);\n-        } catch (Throwable e) {\n-            System.out.println(\"- Error downloading\");\n-            e.printStackTrace();\n-            System.exit(1);\n-        }\n-    }\n-\n-    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n-        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n-            String username = System.getenv(\"MVNW_USERNAME\");\n-            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n-            Authenticator.setDefault(new Authenticator() {\n-                @Override\n-                protected PasswordAuthentication getPasswordAuthentication() {\n-                    return new PasswordAuthentication(username, password);\n-                }\n-            });\n-        }\n-        URL website = new URL(urlString);\n-        ReadableByteChannel rbc;\n-        rbc = Channels.newChannel(website.openStream());\n-        FileOutputStream fos = new FileOutputStream(destination);\n-        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n-        fos.close();\n-        rbc.close();\n-    }\n-\n-}\n"}}, {"oid": "e1d7577ebb1844461eedb068b7d5bdae52bccec5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e1d7577ebb1844461eedb068b7d5bdae52bccec5", "message": "upgraded libraries bom version", "committedDate": "2020-10-12T18:38:18Z", "type": "commit"}, {"oid": "98fd067600c5febb2cb21f4935215971c647b892", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/98fd067600c5febb2cb21f4935215971c647b892", "message": "license", "committedDate": "2020-10-12T18:41:54Z", "type": "commit"}, {"oid": "ec3ffea210414987c5234dc7473ba7c541e38dd9", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ec3ffea210414987c5234dc7473ba7c541e38dd9", "message": "removed mvnw and license file", "committedDate": "2020-10-12T21:28:02Z", "type": "commit"}, {"oid": "e8f855a42424898519244a21c9e52137475401e9", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e8f855a42424898519244a21c9e52137475401e9", "message": "Updated README", "committedDate": "2020-10-12T21:29:03Z", "type": "commit"}]}