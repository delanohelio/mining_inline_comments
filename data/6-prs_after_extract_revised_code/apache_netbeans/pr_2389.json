{"pr_number": 2389, "pr_title": "Find Usages for LSP languages - both client and (Java) server.", "pr_createdAt": "2020-09-22T05:52:02Z", "pr_url": "https://github.com/apache/netbeans/pull/2389", "timeline": [{"oid": "4737f2cd12789181fd2703abfdfc22e34cbcaead", "url": "https://github.com/apache/netbeans/commit/4737f2cd12789181fd2703abfdfc22e34cbcaead", "message": "Find Usages for LSP languages - both client and (Java) server.", "committedDate": "2020-09-22T05:50:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzkyOA==", "url": "https://github.com/apache/netbeans/pull/2389#discussion_r495583928", "bodyText": "I'm not familiar with the refactoring API, but my reading of the Javadoc is, that:\n\npreCheck\nprepare\ncheckParameters\nfastCheckParameters\n\ndo not raise exceptions, but return \"Problem\" instances. The way they are invoked here, the return value is ignored. Not sure whether this is intenential, but it looks wrong.\nMy reading of\nhttp://bits.netbeans.org/dev/javadoc/org-netbeans-modules-refactoring-api/org/netbeans/modules/refactoring/api/AbstractRefactoring.html#fastCheckParameters--\nis, that the call to checkParameters should do a superset of checks to fastCheckParameters. So if checkParameters is invoked, I would expect the call to fastCheckParameters to be superfluous.", "author": "matthiasblaesing", "createdAt": "2020-09-27T15:25:27Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/text/TextDocumentServiceImpl.java", "diffHunk": "@@ -591,16 +588,69 @@ public static String html2MD(String html) {\n                                                   createPosition(thisFileLineMap[0], end))));\n             }\n         }\n-        return CompletableFuture.completedFuture(result);\n+        return CompletableFuture.completedFuture(Either.forLeft(result));\n     }\n \n     @Override\n-    public CompletableFuture<List<? extends Location>> references(ReferenceParams arg0) {\n-        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    public CompletableFuture<List<? extends Location>> references(ReferenceParams params) {\n+        AtomicBoolean cancel = new AtomicBoolean();\n+        Runnable[] cancelCallback = new Runnable[1];\n+        CompletableFuture<List<? extends Location>> result = new CompletableFuture<List<? extends Location>>() {\n+            @Override\n+            public boolean cancel(boolean mayInterruptIfRunning) {\n+                cancel.set(mayInterruptIfRunning);\n+                if (cancelCallback[0] != null) {\n+                    cancelCallback[0].run();\n+                }\n+                return super.cancel(mayInterruptIfRunning);\n+            }\n+        };\n+        WORKER.post(() -> {\n+            JavaSource js = getSource(params.getTextDocument().getUri());\n+            try {\n+                WhereUsedQuery[] query = new WhereUsedQuery[1];\n+                js.runUserActionTask(cc -> {\n+                    cc.toPhase(JavaSource.Phase.RESOLVED);\n+                    if (cancel.get()) return ;\n+                    Document doc = cc.getSnapshot().getSource().getDocument(true);\n+                    TreePath path = cc.getTreeUtilities().pathFor(getOffset(doc, params.getPosition()));\n+                    query[0] = new WhereUsedQuery(Lookups.singleton(TreePathHandle.create(path, cc)));\n+                }, true);\n+                if (cancel.get()) return ;\n+                cancelCallback[0] = () -> query[0].cancelRequest();\n+                RefactoringSession refactoring = RefactoringSession.create(\"FindUsages\");\n+                query[0].fastCheckParameters();", "originalCommit": "4737f2cd12789181fd2703abfdfc22e34cbcaead", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "929a263210b03fad2b87a4a39036e9728fcc9a74", "chunk": "diff --git a/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/text/TextDocumentServiceImpl.java b/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/text/TextDocumentServiceImpl.java\nindex 22aae027d4..e9c13ac6bb 100644\n--- a/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/text/TextDocumentServiceImpl.java\n+++ b/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/text/TextDocumentServiceImpl.java\n\n@@ -619,13 +620,24 @@ public class TextDocumentServiceImpl implements TextDocumentService, LanguageCli\n                 if (cancel.get()) return ;\n                 cancelCallback[0] = () -> query[0].cancelRequest();\n                 RefactoringSession refactoring = RefactoringSession.create(\"FindUsages\");\n-                query[0].fastCheckParameters();\n+                Problem p;\n+                p = query[0].checkParameters();\n                 if (cancel.get()) return ;\n-                query[0].checkParameters();\n-                if (cancel.get()) return ;\n-                query[0].preCheck();\n+                if (p.isFatal()) {\n+                    result.completeExceptionally(new IllegalStateException(p.getMessage()));\n+                    return ;\n+                }\n+                p = query[0].preCheck();\n+                if (p.isFatal()) {\n+                    result.completeExceptionally(new IllegalStateException(p.getMessage()));\n+                    return ;\n+                }\n                 if (cancel.get()) return ;\n-                query[0].prepare(refactoring);\n+                p = query[0].prepare(refactoring);\n+                if (p.isFatal()) {\n+                    result.completeExceptionally(new IllegalStateException(p.getMessage()));\n+                    return ;\n+                }\n                 List<Location> locations = new ArrayList<>();\n                 for (RefactoringElement re : refactoring.getRefactoringElements()) {\n                     if (cancel.get()) return ;\n"}}, {"oid": "929a263210b03fad2b87a4a39036e9728fcc9a74", "url": "https://github.com/apache/netbeans/commit/929a263210b03fad2b87a4a39036e9728fcc9a74", "message": "Handling Problems during Find Usages computation; including Find Usages action in editor popup for typescript and C/C++.", "committedDate": "2020-10-02T04:58:53Z", "type": "commit"}, {"oid": "4cbee40fe4e6b62220871b62d975e18e34d3cba7", "url": "https://github.com/apache/netbeans/commit/4cbee40fe4e6b62220871b62d975e18e34d3cba7", "message": "Proper null handling.", "committedDate": "2020-10-02T05:16:48Z", "type": "commit"}, {"oid": "737d80b27e5596c57c00710884ea1340eee2c15f", "url": "https://github.com/apache/netbeans/commit/737d80b27e5596c57c00710884ea1340eee2c15f", "message": "Handling include declaration in Java LSP find usages.", "committedDate": "2020-10-03T06:05:01Z", "type": "commit"}, {"oid": "91d9ad681332c41b9b87f1511c8b46dba286eefd", "url": "https://github.com/apache/netbeans/commit/91d9ad681332c41b9b87f1511c8b46dba286eefd", "message": "Merging master into refactoring1", "committedDate": "2020-10-13T19:01:40Z", "type": "commit"}, {"oid": "737b2aae2c294d40ef91be13e45b7755d0ff780d", "url": "https://github.com/apache/netbeans/commit/737b2aae2c294d40ef91be13e45b7755d0ff780d", "message": "Fixing dependencies.", "committedDate": "2020-10-14T19:25:34Z", "type": "commit"}, {"oid": "2646730c39526902dc3886b7b292b655aacd244e", "url": "https://github.com/apache/netbeans/commit/2646730c39526902dc3886b7b292b655aacd244e", "message": "More dependency fixes.", "committedDate": "2020-10-14T19:51:10Z", "type": "commit"}]}