{"pr_number": 2246, "pr_title": "[NETBEANS-2981] Add script paths to code analysis customizer panels", "pr_createdAt": "2020-07-10T12:19:17Z", "pr_url": "https://github.com/apache/netbeans/pull/2246", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1NjQ1OQ==", "url": "https://github.com/apache/netbeans/pull/2246#discussion_r452856459", "bodyText": "Perhaps missing @Nullable? On fields and/or getters...", "author": "tmysik", "createdAt": "2020-07-10T13:50:59Z", "path": "php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodeSnifferParameter.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.php.analysis.options;\n+\n+import org.netbeans.modules.php.analysis.ui.analyzer.CodeSnifferCustomizerPanel;\n+import org.netbeans.modules.php.analysis.ui.options.CodeSnifferOptionsPanel;\n+\n+public final class ValidatorCodeSnifferParameter {", "originalCommit": "56264dfdfd487babef518c217908eb7f1dd0de3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64b56479e49170f748fc5c6605447d7448c2e4b7", "chunk": "diff --git a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodeSnifferParameter.java b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodeSnifferParameter.java\ndeleted file mode 100644\nindex ba08563db5..0000000000\n--- a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodeSnifferParameter.java\n+++ /dev/null\n\n@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.netbeans.modules.php.analysis.options;\n-\n-import org.netbeans.modules.php.analysis.ui.analyzer.CodeSnifferCustomizerPanel;\n-import org.netbeans.modules.php.analysis.ui.options.CodeSnifferOptionsPanel;\n-\n-public final class ValidatorCodeSnifferParameter {\n-\n-    private final String codeSnifferPath;\n-    private final String codeSnifferStandard;\n-\n-    public static ValidatorCodeSnifferParameter create(CodeSnifferOptionsPanel panel) {\n-        return new ValidatorCodeSnifferParameter(panel);\n-    }\n-\n-    public static ValidatorCodeSnifferParameter create(CodeSnifferCustomizerPanel panel) {\n-        return new ValidatorCodeSnifferParameter(panel);\n-    }\n-\n-    private ValidatorCodeSnifferParameter() {\n-        this.codeSnifferPath = null;\n-        this.codeSnifferStandard = null;\n-    }\n-\n-    private ValidatorCodeSnifferParameter(CodeSnifferOptionsPanel panel) {\n-        this.codeSnifferPath = panel.getCodeSnifferPath();\n-        this.codeSnifferStandard = panel.getCodeSnifferStandard();\n-    }\n-\n-    private ValidatorCodeSnifferParameter(CodeSnifferCustomizerPanel panel) {\n-        this.codeSnifferPath = panel.getValidCodeSnifferPath();\n-        this.codeSnifferStandard = panel.getCodeSnifferStandard();\n-    }\n-\n-    public String getCodeSnifferPath() {\n-        return codeSnifferPath;\n-    }\n-\n-    public String getCodeSnifferStandard() {\n-        return codeSnifferStandard;\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1Njg1OQ==", "url": "https://github.com/apache/netbeans/pull/2246#discussion_r452856859", "bodyText": "The same - missing @Nullable?", "author": "tmysik", "createdAt": "2020-07-10T13:51:37Z", "path": "php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodingStandardsFixerParameter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.php.analysis.options;\n+\n+import org.netbeans.modules.php.analysis.ui.analyzer.CodingStandardsFixerCustomizerPanel;\n+import org.netbeans.modules.php.analysis.ui.options.CodingStandardsFixerOptionsPanel;\n+import org.netbeans.modules.php.api.util.StringUtils;\n+\n+public final class ValidatorCodingStandardsFixerParameter {", "originalCommit": "56264dfdfd487babef518c217908eb7f1dd0de3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64b56479e49170f748fc5c6605447d7448c2e4b7", "chunk": "diff --git a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodingStandardsFixerParameter.java b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodingStandardsFixerParameter.java\ndeleted file mode 100644\nindex d0631a551b..0000000000\n--- a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/options/ValidatorCodingStandardsFixerParameter.java\n+++ /dev/null\n\n@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.netbeans.modules.php.analysis.options;\n-\n-import org.netbeans.modules.php.analysis.ui.analyzer.CodingStandardsFixerCustomizerPanel;\n-import org.netbeans.modules.php.analysis.ui.options.CodingStandardsFixerOptionsPanel;\n-import org.netbeans.modules.php.api.util.StringUtils;\n-\n-public final class ValidatorCodingStandardsFixerParameter {\n-\n-    private final String codingStandardsFixerPath;\n-\n-    public static ValidatorCodingStandardsFixerParameter create(CodingStandardsFixerOptionsPanel panel) {\n-        return new ValidatorCodingStandardsFixerParameter(panel);\n-    }\n-\n-    public static ValidatorCodingStandardsFixerParameter create(CodingStandardsFixerCustomizerPanel panel) {\n-        return new ValidatorCodingStandardsFixerParameter(panel);\n-    }\n-\n-    private ValidatorCodingStandardsFixerParameter() {\n-        this.codingStandardsFixerPath = null;\n-    }\n-\n-    private ValidatorCodingStandardsFixerParameter(CodingStandardsFixerOptionsPanel panel) {\n-        this.codingStandardsFixerPath = panel.getCodingStandardsFixerPath();\n-    }\n-\n-    private ValidatorCodingStandardsFixerParameter(CodingStandardsFixerCustomizerPanel panel) {\n-        if (StringUtils.hasText(panel.getCodingStandardsFixerPath())) {\n-            this.codingStandardsFixerPath = panel.getCodingStandardsFixerPath();\n-        } else {\n-            this.codingStandardsFixerPath = AnalysisOptions.getInstance().getCodingStandardsFixerPath();\n-        }\n-    }\n-\n-    public String getCodingStandardsFixerPath() {\n-        return codingStandardsFixerPath;\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2MTEzOQ==", "url": "https://github.com/apache/netbeans/pull/2246#discussion_r452861139", "bodyText": "One day, we could add a method getFirstError() (and getFirstWarning()).", "author": "tmysik", "createdAt": "2020-07-10T13:58:38Z", "path": "php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/CodingStandardsFixerCustomizerPanel.java", "diffHunk": "@@ -169,10 +194,35 @@ private void setOptions() {\n     }\n \n     private void setVersion1ComponentsVisible(boolean isVisible) {\n-        levelLabel.setVisible(isVisible);\n-        levelComboBox.setVisible(isVisible);\n-        configLabel.setVisible(isVisible);\n-        configComboBox.setVisible(isVisible);\n+        for (Component component : getVersion1Components()) {\n+            component.setVisible(isVisible);\n+        }\n+    }\n+\n+    private List<Component> getVersion1Components() {\n+        return Arrays.asList(\n+                levelLabel,\n+                levelComboBox,\n+                configLabel,\n+                configComboBox\n+        );\n+    }\n+\n+    private boolean validateData() {\n+        ValidatorCodingStandardsFixerParameter param = ValidatorCodingStandardsFixerParameter.create(this);\n+        ValidationResult result = new AnalysisOptionsValidator()\n+                .validateCodingStandardsFixer(param)\n+                .getResult();\n+        if (result.hasErrors()) {\n+            context.setError(result.getErrors().get(0).getMessage());", "originalCommit": "56264dfdfd487babef518c217908eb7f1dd0de3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64b56479e49170f748fc5c6605447d7448c2e4b7", "chunk": "diff --git a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/CodingStandardsFixerCustomizerPanel.java b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/CodingStandardsFixerCustomizerPanel.java\nindex 1139cba9e6..7f59f095e8 100644\n--- a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/CodingStandardsFixerCustomizerPanel.java\n+++ b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/CodingStandardsFixerCustomizerPanel.java\n\n@@ -194,35 +169,10 @@ public class CodingStandardsFixerCustomizerPanel extends JPanel {\n     }\n \n     private void setVersion1ComponentsVisible(boolean isVisible) {\n-        for (Component component : getVersion1Components()) {\n-            component.setVisible(isVisible);\n-        }\n-    }\n-\n-    private List<Component> getVersion1Components() {\n-        return Arrays.asList(\n-                levelLabel,\n-                levelComboBox,\n-                configLabel,\n-                configComboBox\n-        );\n-    }\n-\n-    private boolean validateData() {\n-        ValidatorCodingStandardsFixerParameter param = ValidatorCodingStandardsFixerParameter.create(this);\n-        ValidationResult result = new AnalysisOptionsValidator()\n-                .validateCodingStandardsFixer(param)\n-                .getResult();\n-        if (result.hasErrors()) {\n-            context.setError(result.getErrors().get(0).getMessage());\n-            return false;\n-        }\n-        if (result.hasWarnings()) {\n-            context.setError(result.getWarnings().get(0).getMessage());\n-            return false;\n-        }\n-        context.setError(null);\n-        return true;\n+        levelLabel.setVisible(isVisible);\n+        levelComboBox.setVisible(isVisible);\n+        configLabel.setVisible(isVisible);\n+        configComboBox.setVisible(isVisible);\n     }\n \n     private void setAllComponetsEnabled(boolean isEnabled) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2Mjg3Mw==", "url": "https://github.com/apache/netbeans/pull/2246#discussion_r452862873", "bodyText": "Could we avoid using FQN here in this panel, please? It makes the code more readable, I believe. Thank you.", "author": "tmysik", "createdAt": "2020-07-10T14:01:38Z", "path": "php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/PHPStanCustomizerPanel.java", "diffHunk": "@@ -221,6 +216,10 @@ private void initComponents() {\n         phpStanLevelComboBox = new javax.swing.JComboBox<>();\n         phpStanMemoryLimitLabel = new javax.swing.JLabel();\n         phpStanMemoryLimitTextField = new javax.swing.JTextField();\n+        phpStanLabel = new javax.swing.JLabel();", "originalCommit": "56264dfdfd487babef518c217908eb7f1dd0de3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64b56479e49170f748fc5c6605447d7448c2e4b7", "chunk": "diff --git a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/PHPStanCustomizerPanel.java b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/PHPStanCustomizerPanel.java\nindex 0a42ee473c..6912cf04a5 100644\n--- a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/PHPStanCustomizerPanel.java\n+++ b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/analyzer/PHPStanCustomizerPanel.java\n\n@@ -208,130 +220,128 @@ public class PHPStanCustomizerPanel extends JPanel {\n     // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n     private void initComponents() {\n \n-        phpStanEnabledCheckBox = new javax.swing.JCheckBox();\n-        phpStanConfigurationLabel = new javax.swing.JLabel();\n-        phpStanConfigurationTextField = new javax.swing.JTextField();\n-        phpStanConfigurationBrowseButton = new javax.swing.JButton();\n-        phpStanLevelLabel = new javax.swing.JLabel();\n-        phpStanLevelComboBox = new javax.swing.JComboBox<>();\n-        phpStanMemoryLimitLabel = new javax.swing.JLabel();\n-        phpStanMemoryLimitTextField = new javax.swing.JTextField();\n-        phpStanLabel = new javax.swing.JLabel();\n-        phpStanTextField = new javax.swing.JTextField();\n-        phpStanBrowseButton = new javax.swing.JButton();\n-        phpStanSearchButton = new javax.swing.JButton();\n-\n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanEnabledCheckBox, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanEnabledCheckBox.text\")); // NOI18N\n+        phpStanEnabledCheckBox = new JCheckBox();\n+        phpStanConfigurationLabel = new JLabel();\n+        phpStanConfigurationTextField = new JTextField();\n+        phpStanConfigurationBrowseButton = new JButton();\n+        phpStanLevelLabel = new JLabel();\n+        phpStanLevelComboBox = new JComboBox<>();\n+        phpStanMemoryLimitLabel = new JLabel();\n+        phpStanMemoryLimitTextField = new JTextField();\n+        phpStanLabel = new JLabel();\n+        phpStanTextField = new JTextField();\n+        phpStanBrowseButton = new JButton();\n+        phpStanSearchButton = new JButton();\n+\n+        Mnemonics.setLocalizedText(phpStanEnabledCheckBox, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanEnabledCheckBox.text\")); // NOI18N\n \n         phpStanConfigurationLabel.setLabelFor(phpStanConfigurationTextField);\n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanConfigurationLabel, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanConfigurationLabel.text\")); // NOI18N\n+        Mnemonics.setLocalizedText(phpStanConfigurationLabel, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanConfigurationLabel.text\")); // NOI18N\n \n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanConfigurationBrowseButton, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanConfigurationBrowseButton.text\")); // NOI18N\n-        phpStanConfigurationBrowseButton.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+        Mnemonics.setLocalizedText(phpStanConfigurationBrowseButton, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanConfigurationBrowseButton.text\")); // NOI18N\n+        phpStanConfigurationBrowseButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent evt) {\n                 phpStanConfigurationBrowseButtonActionPerformed(evt);\n             }\n         });\n \n         phpStanLevelLabel.setLabelFor(phpStanLevelComboBox);\n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanLevelLabel, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanLevelLabel.text\")); // NOI18N\n+        Mnemonics.setLocalizedText(phpStanLevelLabel, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanLevelLabel.text\")); // NOI18N\n \n-        phpStanLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\" }));\n+        phpStanLevelComboBox.setModel(new DefaultComboBoxModel<>(new String[] { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\" }));\n \n         phpStanMemoryLimitLabel.setLabelFor(phpStanMemoryLimitTextField);\n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanMemoryLimitLabel, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanMemoryLimitLabel.text\")); // NOI18N\n+        Mnemonics.setLocalizedText(phpStanMemoryLimitLabel, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanMemoryLimitLabel.text\")); // NOI18N\n \n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanLabel, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanLabel.text\")); // NOI18N\n+        Mnemonics.setLocalizedText(phpStanLabel, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanLabel.text\")); // NOI18N\n \n-        phpStanTextField.setText(org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanTextField.text\")); // NOI18N\n+        phpStanTextField.setText(NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanTextField.text\")); // NOI18N\n \n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanBrowseButton, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanBrowseButton.text\")); // NOI18N\n-        phpStanBrowseButton.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+        Mnemonics.setLocalizedText(phpStanBrowseButton, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanBrowseButton.text\")); // NOI18N\n+        phpStanBrowseButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent evt) {\n                 phpStanBrowseButtonActionPerformed(evt);\n             }\n         });\n \n-        org.openide.awt.Mnemonics.setLocalizedText(phpStanSearchButton, org.openide.util.NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanSearchButton.text\")); // NOI18N\n-        phpStanSearchButton.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+        Mnemonics.setLocalizedText(phpStanSearchButton, NbBundle.getMessage(PHPStanCustomizerPanel.class, \"PHPStanCustomizerPanel.phpStanSearchButton.text\")); // NOI18N\n+        phpStanSearchButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent evt) {\n                 phpStanSearchButtonActionPerformed(evt);\n             }\n         });\n \n-        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n+        GroupLayout layout = new GroupLayout(this);\n         this.setLayout(layout);\n-        layout.setHorizontalGroup(\n-            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n             .addGroup(layout.createSequentialGroup()\n                 .addComponent(phpStanEnabledCheckBox)\n-                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n+                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n             .addGroup(layout.createSequentialGroup()\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n-                    .addComponent(phpStanLabel, javax.swing.GroupLayout.Alignment.LEADING)\n-                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)\n+                    .addComponent(phpStanLabel, GroupLayout.Alignment.LEADING)\n+                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                         .addComponent(phpStanConfigurationLabel)\n                         .addComponent(phpStanLevelLabel)\n                         .addComponent(phpStanMemoryLimitLabel)))\n-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n                     .addGroup(layout.createSequentialGroup()\n-                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n-                            .addComponent(phpStanLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n-                            .addComponent(phpStanMemoryLimitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))\n+                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n+                            .addComponent(phpStanLevelComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n+                            .addComponent(phpStanMemoryLimitTextField, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))\n                         .addGap(0, 0, Short.MAX_VALUE))\n-                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n-                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n+                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n+                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)\n                             .addComponent(phpStanConfigurationTextField)\n                             .addComponent(phpStanTextField))\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n-                            .addComponent(phpStanBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)\n-                            .addComponent(phpStanConfigurationBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING))\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n+                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n+                            .addComponent(phpStanBrowseButton, GroupLayout.Alignment.TRAILING)\n+                            .addComponent(phpStanConfigurationBrowseButton, GroupLayout.Alignment.TRAILING))\n+                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n                         .addComponent(phpStanSearchButton))))\n         );\n-        layout.setVerticalGroup(\n-            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n             .addGroup(layout.createSequentialGroup()\n                 .addComponent(phpStanEnabledCheckBox)\n-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n                     .addComponent(phpStanLabel)\n-                    .addComponent(phpStanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n+                    .addComponent(phpStanTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                     .addComponent(phpStanBrowseButton)\n                     .addComponent(phpStanSearchButton))\n-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n                     .addComponent(phpStanConfigurationLabel)\n-                    .addComponent(phpStanConfigurationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n+                    .addComponent(phpStanConfigurationTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                     .addComponent(phpStanConfigurationBrowseButton))\n-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n                     .addComponent(phpStanLevelLabel)\n-                    .addComponent(phpStanLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                    .addComponent(phpStanLevelComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n+                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)\n                     .addComponent(phpStanMemoryLimitLabel)\n-                    .addComponent(phpStanMemoryLimitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))\n+                    .addComponent(phpStanMemoryLimitTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))\n         );\n     }// </editor-fold>//GEN-END:initComponents\n \n-    private void phpStanConfigurationBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phpStanConfigurationBrowseButtonActionPerformed\n+    private void phpStanConfigurationBrowseButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_phpStanConfigurationBrowseButtonActionPerformed\n         File file = AnalysisUiUtils.browsePHPStanConfiguration();\n         if (file != null) {\n             phpStanConfigurationTextField.setText(file.getAbsolutePath());\n         }\n     }//GEN-LAST:event_phpStanConfigurationBrowseButtonActionPerformed\n \n-    private void phpStanBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phpStanBrowseButtonActionPerformed\n+    private void phpStanBrowseButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_phpStanBrowseButtonActionPerformed\n         File file = AnalysisUiUtils.browsePHPStan();\n         if (file != null) {\n             phpStanTextField.setText(file.getAbsolutePath());\n         }\n     }//GEN-LAST:event_phpStanBrowseButtonActionPerformed\n \n-    private void phpStanSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phpStanSearchButtonActionPerformed\n+    private void phpStanSearchButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_phpStanSearchButtonActionPerformed\n         String phpStan = AnalysisUiUtils.searchPHPStan();\n         if (phpStan != null) {\n             phpStanTextField.setText(phpStan);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2NzEzNQ==", "url": "https://github.com/apache/netbeans/pull/2246#discussion_r452867135", "bodyText": "Again, FQN used in this panel...", "author": "tmysik", "createdAt": "2020-07-10T14:09:00Z", "path": "php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/options/CodingStandardsFixerOptionsPanel.java", "diffHunk": "@@ -304,20 +301,21 @@ public void mousePressed(java.awt.event.MouseEvent evt) {\n                     .addComponent(codingStandardsFixerVersionLabel))\n                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n-                    .addComponent(codingStandardsFixerOptionsTextField)\n-                    .addGroup(layout.createSequentialGroup()\n-                        .addComponent(codingStandardsFixerTextField)\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                        .addComponent(codingStandardsFixerBrowseButton)\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                        .addComponent(codingStandardsFixerSearchButton))\n                     .addGroup(layout.createSequentialGroup()\n                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                             .addComponent(codingStandardsFixerVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerConfigComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerHintLabel))\n-                        .addGap(0, 0, Short.MAX_VALUE))))\n+                        .addGap(0, 0, Short.MAX_VALUE))\n+                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()", "originalCommit": "56264dfdfd487babef518c217908eb7f1dd0de3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64b56479e49170f748fc5c6605447d7448c2e4b7", "chunk": "diff --git a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/options/CodingStandardsFixerOptionsPanel.java b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/options/CodingStandardsFixerOptionsPanel.java\nindex c143f6fc7c..b1042160aa 100644\n--- a/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/options/CodingStandardsFixerOptionsPanel.java\n+++ b/php/php.code.analysis/src/org/netbeans/modules/php/analysis/ui/options/CodingStandardsFixerOptionsPanel.java\n\n@@ -301,21 +304,20 @@ public class CodingStandardsFixerOptionsPanel extends AnalysisCategoryPanel {\n                     .addComponent(codingStandardsFixerVersionLabel))\n                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                    .addComponent(codingStandardsFixerOptionsTextField)\n+                    .addGroup(layout.createSequentialGroup()\n+                        .addComponent(codingStandardsFixerTextField)\n+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n+                        .addComponent(codingStandardsFixerBrowseButton)\n+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n+                        .addComponent(codingStandardsFixerSearchButton))\n                     .addGroup(layout.createSequentialGroup()\n                         .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                             .addComponent(codingStandardsFixerVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerConfigComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                             .addComponent(codingStandardsFixerHintLabel))\n-                        .addGap(0, 0, Short.MAX_VALUE))\n-                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n-                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n-                            .addComponent(codingStandardsFixerOptionsTextField, javax.swing.GroupLayout.Alignment.LEADING)\n-                            .addComponent(codingStandardsFixerTextField))\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                        .addComponent(codingStandardsFixerBrowseButton)\n-                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n-                        .addComponent(codingStandardsFixerSearchButton))))\n+                        .addGap(0, 0, Short.MAX_VALUE))))\n         );\n \n         layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {codingStandardsFixerBrowseButton, codingStandardsFixerSearchButton});\n"}}, {"oid": "64b56479e49170f748fc5c6605447d7448c2e4b7", "url": "https://github.com/apache/netbeans/commit/64b56479e49170f748fc5c6605447d7448c2e4b7", "message": "[NETBEANS-2981] Add the script path to the PHPStan customizer panel\n\n- Introduce AnalysisDefaultDocumentListener class to avoid duplicating code\n- Introduce AnalysisUiUtils class to avoid duplicating code (Browse and Search files)\n- The default path is used if the customizer path is empty", "committedDate": "2020-07-11T00:13:29Z", "type": "commit"}, {"oid": "26dea463b489dad18e412ddc8d372a07b8d70bf6", "url": "https://github.com/apache/netbeans/commit/26dea463b489dad18e412ddc8d372a07b8d70bf6", "message": "Adjust the PHPStanOptionsPanel", "committedDate": "2020-07-11T00:13:37Z", "type": "commit"}, {"oid": "c656c394a7fe7899b6d3aa9c372be14698b5c08d", "url": "https://github.com/apache/netbeans/commit/c656c394a7fe7899b6d3aa9c372be14698b5c08d", "message": "[NETBEANS-2981] Add the script path to Coding Standards Fixer customizer panel", "committedDate": "2020-07-11T00:13:37Z", "type": "commit"}, {"oid": "84a3d25fbc3919afb0999c041ae54b284ea5fd0a", "url": "https://github.com/apache/netbeans/commit/84a3d25fbc3919afb0999c041ae54b284ea5fd0a", "message": "Use AnalysisDefaultDocumentListener instead of DafaultDocumentListener of inner classes", "committedDate": "2020-07-11T00:16:07Z", "type": "forcePushed"}, {"oid": "35be70e5e4f430f3b899dc600768cce03811f6e3", "url": "https://github.com/apache/netbeans/commit/35be70e5e4f430f3b899dc600768cce03811f6e3", "message": "[NETBEANS-2981] Add the script path to the CodeSniffer customizer panel", "committedDate": "2020-07-11T05:21:02Z", "type": "commit"}, {"oid": "9fddcce3de6b45597d10c8ce1a9813dad678e274", "url": "https://github.com/apache/netbeans/commit/9fddcce3de6b45597d10c8ce1a9813dad678e274", "message": "[NETBEANS-2981] Add the script path to the Mess Detector customizer panel", "committedDate": "2020-07-11T05:22:48Z", "type": "commit"}, {"oid": "23d9fa9ef01a13395448761fe74e0f18eb57ff4e", "url": "https://github.com/apache/netbeans/commit/23d9fa9ef01a13395448761fe74e0f18eb57ff4e", "message": "Use AnalysisDefaultDocumentListener instead of DafaultDocumentListener of inner classes", "committedDate": "2020-07-11T05:22:48Z", "type": "commit"}, {"oid": "23d9fa9ef01a13395448761fe74e0f18eb57ff4e", "url": "https://github.com/apache/netbeans/commit/23d9fa9ef01a13395448761fe74e0f18eb57ff4e", "message": "Use AnalysisDefaultDocumentListener instead of DafaultDocumentListener of inner classes", "committedDate": "2020-07-11T05:22:48Z", "type": "forcePushed"}]}