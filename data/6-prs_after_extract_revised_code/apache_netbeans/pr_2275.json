{"pr_number": 2275, "pr_title": "Better Java file wizards with extension and implementation panels", "pr_createdAt": "2020-07-27T07:23:13Z", "pr_url": "https://github.com/apache/netbeans/pull/2275", "timeline": [{"oid": "2b3f613b602e9618c1f4146e8f37ad53e7cd8d8c", "url": "https://github.com/apache/netbeans/commit/2b3f613b602e9618c1f4146e8f37ad53e7cd8d8c", "message": "Better Java class wizard\n\nA more advanced wizard for creating Java classes that let the user to\nspecify interfaces and superclasses right in the wizard", "committedDate": "2020-07-28T06:18:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MDM3NA==", "url": "https://github.com/apache/netbeans/pull/2275#discussion_r491790374", "bodyText": "This is a change of API and should be documented as such (increment module version, enhance arch.xml, note in apichanges.xml).", "author": "JaroslavTulach", "createdAt": "2020-09-21T04:39:21Z", "path": "java/java.project.ui/src/org/netbeans/modules/java/project/ui/NewJavaFileWizardIterator.java", "diffHunk": "@@ -310,7 +314,12 @@ private void addRequires(FileObject createdFile, Set<String> requiredModuleNames\n             createdFile = dobj.getPrimaryFile();\n         } else {\n             DataObject dTemplate = DataObject.find( template );                \n-            DataObject dobj = dTemplate.createFromTemplate( df, targetName );\n+            String superclass = (String) wiz.getProperty(SUPERCLASS);\n+            String interfaces = (String) wiz.getProperty(INTERFACES);\n+            Map<String, String> parameters = new HashMap<>();\n+            parameters.put(SUPERCLASS, superclass);", "originalCommit": "2b3f613b602e9618c1f4146e8f37ad53e7cd8d8c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "481b5134851657b969cd648c7ae4136a47ba1f0b", "chunk": "diff --git a/java/java.project.ui/src/org/netbeans/modules/java/project/ui/NewJavaFileWizardIterator.java b/java/java.project.ui/src/org/netbeans/modules/java/project/ui/NewJavaFileWizardIterator.java\nindex bd2bce47e9..e288197a4f 100644\n--- a/java/java.project.ui/src/org/netbeans/modules/java/project/ui/NewJavaFileWizardIterator.java\n+++ b/java/java.project.ui/src/org/netbeans/modules/java/project/ui/NewJavaFileWizardIterator.java\n\n@@ -313,12 +325,18 @@ public class NewJavaFileWizardIterator implements WizardDescriptor.AsynchronousI\n                     Collections.singletonMap(\"moduleName\", moduleName)); //NOI18N\n             createdFile = dobj.getPrimaryFile();\n         } else {\n-            DataObject dTemplate = DataObject.find( template );                \n-            String superclass = (String) wiz.getProperty(SUPERCLASS);\n-            String interfaces = (String) wiz.getProperty(INTERFACES);\n-            Map<String, String> parameters = new HashMap<>();\n-            parameters.put(SUPERCLASS, superclass);\n-            parameters.put(INTERFACES, interfaces);\n+            DataObject dTemplate = DataObject.find(template);\n+            Object superclassProperty = wiz.getProperty(SUPERCLASS);\n+            String superclass = superclassProperty != null ? (String) superclassProperty : \"\"; //NOI18N\n+            Object interfacesProperty = wiz.getProperty(INTERFACES);\n+            String interfaces = interfacesProperty != null ? (String) interfacesProperty : \"\"; //NOI18N\n+            Map<String, String> parameters = new HashMap<>(Short.BYTES);\n+            if (!superclass.isEmpty()) {\n+                parameters.put(SUPERCLASS, superclass);\n+            }\n+            if (!interfaces.isEmpty()) {\n+                parameters.put(INTERFACES, interfaces);\n+            }\n             DataObject dobj = dTemplate.createFromTemplate(df, targetName, parameters);\n             createdFile = dobj.getPrimaryFile();\n         }\n"}}, {"oid": "2ae2662dd5898f1735dd043fabb6a78b10f2deb4", "url": "https://github.com/apache/netbeans/commit/2ae2662dd5898f1735dd043fabb6a78b10f2deb4", "message": "Better Java class wizard\n\nA more advanced wizard for creating Java classes that let the user to\nspecify interfaces and superclasses right in the wizard", "committedDate": "2020-10-08T19:50:31Z", "type": "commit"}, {"oid": "481b5134851657b969cd648c7ae4136a47ba1f0b", "url": "https://github.com/apache/netbeans/commit/481b5134851657b969cd648c7ae4136a47ba1f0b", "message": "Java file wizards with extension and implementation panels\n\nThis PR provides the ability to select the superclass and interfaces \nin all relevant wizards from the Java category.", "committedDate": "2020-10-08T19:50:32Z", "type": "commit"}, {"oid": "481b5134851657b969cd648c7ae4136a47ba1f0b", "url": "https://github.com/apache/netbeans/commit/481b5134851657b969cd648c7ae4136a47ba1f0b", "message": "Java file wizards with extension and implementation panels\n\nThis PR provides the ability to select the superclass and interfaces \nin all relevant wizards from the Java category.", "committedDate": "2020-10-08T19:50:32Z", "type": "forcePushed"}]}