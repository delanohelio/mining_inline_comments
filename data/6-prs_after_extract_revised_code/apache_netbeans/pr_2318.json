{"pr_number": 2318, "pr_title": "NETBEANS-4852 add tooltip with code coverage stats", "pr_createdAt": "2020-08-18T19:01:27Z", "pr_url": "https://github.com/apache/netbeans/pull/2318", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcwNDU5MQ==", "url": "https://github.com/apache/netbeans/pull/2318#discussion_r486704591", "bodyText": "Please format. (4 spaces)", "author": "junichi11", "createdAt": "2020-09-11T00:27:04Z", "path": "ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageBar.java", "diffHunk": "@@ -55,9 +59,25 @@\n     private boolean selected;\n     /** Coverage percentage:  0.0f <= x <= 100f */\n     private float coveragePercentage;\n-\n+    private int totalLines;\n+    private int executedLines;\n+    private int partialLines;\n+    private int inferredLines;\n+    \n     public CoverageBar() {\n-        updateUI();\n+      addHierarchyListener(new HierarchyListener() {\n+        @Override\n+        public void hierarchyChanged(HierarchyEvent e) {\n+          if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0) {\n+            if (isShowing()) {\n+              ToolTipManager.sharedInstance().registerComponent(CoverageBar.this);\n+            } else {\n+              ToolTipManager.sharedInstance().unregisterComponent(CoverageBar.this);\n+            }\n+          }\n+        }\n+      });      \n+      updateUI();", "originalCommit": "c07aa22b3b34bca24ed31afc71f107d97dadbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "chunk": "diff --git a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageBar.java b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageBar.java\nindex 6bf911bbe2..3742170deb 100644\n--- a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageBar.java\n+++ b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageBar.java\n\n@@ -42,42 +42,45 @@ import javax.swing.JLabel;\n import javax.swing.ToolTipManager;\n \n /**\n- * Custom component for painting code coverage.\n- * I was initially using a JProgressBar, with the BasicProgressBarUI associated with it\n- * (to get red/green colors set correctly even on OSX), but it was pretty plain\n- * and ugly looking - no nice gradients etc. Hence this component.\n+ * Custom component for painting code coverage. I was initially using a JProgressBar, with the\n+ * BasicProgressBarUI associated with it (to get red/green colors set correctly even on OSX), but it\n+ * was pretty plain and ugly looking - no nice gradients etc. Hence this component.\n+ *\n  * @todo Add a getBaseline\n  *\n  * @author Tor Norbye\n  */\n public class CoverageBar extends JComponent {\n+\n     private static final Color NOT_COVERED_LIGHT = new Color(255, 160, 160);\n     private static final Color NOT_COVERED_DARK = new Color(180, 50, 50);\n     private static final Color COVERED_LIGHT = new Color(160, 255, 160);\n     private static final Color COVERED_DARK = new Color(30, 180, 30);\n     private boolean emphasize;\n     private boolean selected;\n-    /** Coverage percentage:  0.0f <= x <= 100f */\n+    /**\n+     * Coverage percentage: 0.0f <= x <= 100f\n+     */\n     private float coveragePercentage;\n     private int totalLines;\n     private int executedLines;\n     private int partialLines;\n     private int inferredLines;\n-    \n+\n     public CoverageBar() {\n-      addHierarchyListener(new HierarchyListener() {\n-        @Override\n-        public void hierarchyChanged(HierarchyEvent e) {\n-          if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0) {\n-            if (isShowing()) {\n-              ToolTipManager.sharedInstance().registerComponent(CoverageBar.this);\n-            } else {\n-              ToolTipManager.sharedInstance().unregisterComponent(CoverageBar.this);\n+        addHierarchyListener(new HierarchyListener() {\n+            @Override\n+            public void hierarchyChanged(HierarchyEvent e) {\n+                if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0) {\n+                    if (isShowing()) {\n+                        ToolTipManager.sharedInstance().registerComponent(CoverageBar.this);\n+                    } else {\n+                        ToolTipManager.sharedInstance().unregisterComponent(CoverageBar.this);\n+                    }\n+                }\n             }\n-          }\n-        }\n-      });      \n-      updateUI();\n+        });\n+        updateUI();\n     }\n \n     public float getCoveragePercentage() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Mzg4MA==", "url": "https://github.com/apache/netbeans/pull/2318#discussion_r491243880", "bodyText": "Please format.", "author": "junichi11", "createdAt": "2020-09-19T00:28:22Z", "path": "ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java", "diffHunk": "@@ -168,6 +168,9 @@\n         //    }\n \n         totalCoverage.setCoveragePercentage(model.getTotalCoverage());\n+        FileCoverageSummary summary = model.getCoverageSummary();\n+        totalCoverage.setStats(summary.getLineCount(),summary.getExecutedLineCount(),\n+          summary.getPartialCount(),summary.getInferredCount());", "originalCommit": "c07aa22b3b34bca24ed31afc71f107d97dadbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "chunk": "diff --git a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\nindex 3d2e3c2aa2..bdca7176a9 100644\n--- a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n+++ b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n\n@@ -166,11 +166,10 @@ final class CoverageReportTopComponent extends TopComponent {\n         //    for (int i = 0; i < 4; i++) {\n         //        sorter.setComparator(i, comparableComparator);\n         //    }\n-\n         totalCoverage.setCoveragePercentage(model.getTotalCoverage());\n         FileCoverageSummary summary = model.getCoverageSummary();\n-        totalCoverage.setStats(summary.getLineCount(),summary.getExecutedLineCount(),\n-          summary.getPartialCount(),summary.getInferredCount());\n+        totalCoverage.setStats(summary.getLineCount(), summary.getExecutedLineCount(),\n+            summary.getPartialCount(), summary.getInferredCount());\n     }\n \n     public void resizeColumnWidth(JTable table) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0MzkwNQ==", "url": "https://github.com/apache/netbeans/pull/2318#discussion_r491243905", "bodyText": "Please format.", "author": "junichi11", "createdAt": "2020-09-19T00:28:32Z", "path": "ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java", "diffHunk": "@@ -361,6 +364,9 @@ void updateData(List<FileCoverageSummary> results) {\n         model = new CoverageTableModel(results);\n         table.setModel(model);\n         totalCoverage.setCoveragePercentage(model.getTotalCoverage());\n+        FileCoverageSummary summary = model.getCoverageSummary();\n+        totalCoverage.setStats(summary.getLineCount(),summary.getExecutedLineCount(),\n+          summary.getPartialCount(),summary.getInferredCount());", "originalCommit": "c07aa22b3b34bca24ed31afc71f107d97dadbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "chunk": "diff --git a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\nindex 3d2e3c2aa2..bdca7176a9 100644\n--- a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n+++ b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n\n@@ -365,12 +364,13 @@ final class CoverageReportTopComponent extends TopComponent {\n         table.setModel(model);\n         totalCoverage.setCoveragePercentage(model.getTotalCoverage());\n         FileCoverageSummary summary = model.getCoverageSummary();\n-        totalCoverage.setStats(summary.getLineCount(),summary.getExecutedLineCount(),\n-          summary.getPartialCount(),summary.getInferredCount());\n+        totalCoverage.setStats(summary.getLineCount(), summary.getExecutedLineCount(),\n+            summary.getPartialCount(), summary.getInferredCount());\n         resizeColumnWidth(table);\n     }\n \n     private static class CoverageTableModel implements TableModel {\n+\n         List<FileCoverageSummary> results;\n         FileCoverageSummary total;\n         //List<TableModelListener> listeners = new ArrayList<TableModelListener>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0Mzk0MA==", "url": "https://github.com/apache/netbeans/pull/2318#discussion_r491243940", "bodyText": "Please format.", "author": "junichi11", "createdAt": "2020-09-19T00:28:47Z", "path": "ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java", "diffHunk": "@@ -399,19 +405,26 @@ public CoverageTableModel(List<FileCoverageSummary> results) {\n             }\n             this.results = results;\n         }\n+        \n+        FileCoverageSummary getCoverageSummary() {\n+          return total;", "originalCommit": "c07aa22b3b34bca24ed31afc71f107d97dadbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "chunk": "diff --git a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\nindex 3d2e3c2aa2..bdca7176a9 100644\n--- a/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n+++ b/ide/gsf.codecoverage/src/org/netbeans/modules/gsf/codecoverage/CoverageReportTopComponent.java\n\n@@ -397,17 +397,18 @@ final class CoverageReportTopComponent extends TopComponent {\n             if (results.isEmpty()) {\n                 results.add(new FileCoverageSummary(null, NbBundle.getMessage(CoverageReportTopComponent.class, \"NoData\"), 0, 0, 0, 0));\n             } else {\n-                total = new FileCoverageSummary(null, \"<html><b>\" + // NOI18N\n-                        NbBundle.getMessage(CoverageReportTopComponent.class, \"Total\") +\n-                        \"</b></html>\", lineCount, executedLineCount, inferredCount, partialCount); // NOI18N\n+                total = new FileCoverageSummary(null, \"<html><b>\"\n+                    + // NOI18N\n+                    NbBundle.getMessage(CoverageReportTopComponent.class, \"Total\")\n+                    + \"</b></html>\", lineCount, executedLineCount, inferredCount, partialCount); // NOI18N\n                 totalCoverage = total.getCoveragePercentage();\n                 results.add(total);\n             }\n             this.results = results;\n         }\n-        \n+\n         FileCoverageSummary getCoverageSummary() {\n-          return total;\n+            return total;\n         }\n \n         float getTotalCoverage() {\n"}}, {"oid": "991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "url": "https://github.com/apache/netbeans/commit/991fd71ae20a8bce23e1b77dd64804a9c8fcbaf0", "message": "NETBEANS-4852 add tooltip with code coverage stats", "committedDate": "2020-09-27T16:06:33Z", "type": "commit"}]}