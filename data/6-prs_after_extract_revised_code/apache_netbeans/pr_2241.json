{"pr_number": 2241, "pr_title": "[NETBEANS-4503] Code completion does not work in functions declared inside methods", "pr_createdAt": "2020-07-07T05:30:05Z", "pr_url": "https://github.com/apache/netbeans/pull/2241", "timeline": [{"oid": "8e5a4a6bcc508b4720b79fc01a06f6f2bba089cd", "url": "https://github.com/apache/netbeans/commit/8e5a4a6bcc508b4720b79fc01a06f6f2bba089cd", "message": "[NETBEANS-4503] Code completion does not work in functions declared inside methods\n\nNested functions are in a Method/FunctionScope.\nHowever, they are added as elements of a NamespaceScope.\ni.e. Method/FunctionScope doesn't have nested FunctionScopes. NamespaceScope has them.\nSo, (not return the child result simply,) check whether the child result contains the parent result in the `VariableScopeFinder.findWrapper()`.", "committedDate": "2020-07-07T01:14:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450674725", "bodyText": "Maybe better compareAndSet()?", "author": "tmysik", "createdAt": "2020-07-07T07:50:45Z", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);", "originalCommit": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTE0OQ==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450675149", "bodyText": "Ha, it is running in just one thread, right? In such a case, not needed, of course.", "author": "tmysik", "createdAt": "2020-07-07T07:51:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTQ2MQ==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450685461", "bodyText": "yes, will remove.", "author": "junichi11", "createdAt": "2020-07-07T08:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczOTIwNQ==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450739205", "bodyText": "Oops, will change it to your suggestion :)", "author": "junichi11", "createdAt": "2020-07-07T09:41:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1Nzc0OQ==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450757749", "bodyText": "If it is running in only one thread (as here I guess, in the parsing thread) then AtomicBoolean is just a holder for a boolean. So, using compareAndSet() is IMHO not necessary.", "author": "tmysik", "createdAt": "2020-07-07T10:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwODUzOA==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r451208538", "bodyText": "I seem to misunderstand something. Sorry... I'll revert it if I modify this class in the future. Thank you for your review :)", "author": "junichi11", "createdAt": "2020-07-08T00:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5NTE0Ng==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r452195146", "bodyText": "No problem, my fault because of my misleading/confusing comment.", "author": "tmysik", "createdAt": "2020-07-09T12:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fa8489abf12899ad57e22bf1d586d645c25f3cb", "chunk": "diff --git a/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java b/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\nindex 3a7165ec0a..75e47f11cb 100644\n--- a/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\n+++ b/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\n\n@@ -60,13 +61,14 @@ public final class VariableScopeFinder {\n             // so, ParserResult may not be the same instance even if the FileObject is the same.\n             // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n             LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n-            isLazilyScanned.set(false);\n-            variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+            if (isLazilyScanned.compareAndSet(true, false)) {\n+                variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+            }\n         }\n         return variableScope;\n     }\n \n-    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, final AtomicBoolean isLazilyScanned) {\n+    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, @NullAllowed final AtomicBoolean isLazilyScanned) {\n         assert elements != null;\n         assert scopeRangeAcceptor != null;\n         VariableScopeWrapper retval = VariableScopeWrapper.NONE;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTUxNw==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450675517", "bodyText": "Missing @Nullable?", "author": "tmysik", "createdAt": "2020-07-07T07:52:17Z", "path": "php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java", "diffHunk": "@@ -45,10 +51,22 @@ public VariableScope find(final Scope scope, final int offset, final ScopeRangeA\n     }\n \n     public VariableScope find(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n-        return findWrapper(elements, offset, scopeRangeAcceptor).getVariableScope();\n+        AtomicBoolean isLazilyScanned = new AtomicBoolean(false);\n+        VariableScope variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        if (isLazilyScanned.get()) {\n+            // some scopes may be added new elements when LazyBuild elements are scanned.\n+            // so, find again.\n+            // e.g. Source instances are cached as weak references.\n+            // so, ParserResult may not be the same instance even if the FileObject is the same.\n+            // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n+            LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n+            isLazilyScanned.set(false);\n+            variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+        }\n+        return variableScope;\n     }\n \n-    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor) {\n+    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, final AtomicBoolean isLazilyScanned) {", "originalCommit": "117cdec493f2a6685c94c9635eb8b54e5f1d8f0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4Njk2Ng==", "url": "https://github.com/apache/netbeans/pull/2241#discussion_r450686966", "bodyText": "Will add. Thanks!", "author": "junichi11", "createdAt": "2020-07-07T08:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NTUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "9fa8489abf12899ad57e22bf1d586d645c25f3cb", "chunk": "diff --git a/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java b/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\nindex 3a7165ec0a..75e47f11cb 100644\n--- a/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\n+++ b/php/php.editor/src/org/netbeans/modules/php/editor/model/VariableScopeFinder.java\n\n@@ -60,13 +61,14 @@ public final class VariableScopeFinder {\n             // so, ParserResult may not be the same instance even if the FileObject is the same.\n             // it means that new Model and new ModelVisitor are created again. in such case, LazyBuild elements may not be scanned yet.\n             LOGGER.log(Level.FINE, \"(LazyBuild)Scope is scanned.\"); // NOI18N\n-            isLazilyScanned.set(false);\n-            variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+            if (isLazilyScanned.compareAndSet(true, false)) {\n+                variableScope = findWrapper(elements, offset, scopeRangeAcceptor, isLazilyScanned).getVariableScope();\n+            }\n         }\n         return variableScope;\n     }\n \n-    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, final AtomicBoolean isLazilyScanned) {\n+    private VariableScopeWrapper findWrapper(final List<? extends ModelElement> elements, final int offset, final ScopeRangeAcceptor scopeRangeAcceptor, @NullAllowed final AtomicBoolean isLazilyScanned) {\n         assert elements != null;\n         assert scopeRangeAcceptor != null;\n         VariableScopeWrapper retval = VariableScopeWrapper.NONE;\n"}}, {"oid": "9fa8489abf12899ad57e22bf1d586d645c25f3cb", "url": "https://github.com/apache/netbeans/commit/9fa8489abf12899ad57e22bf1d586d645c25f3cb", "message": "Find a VariableScope again if an unscanned scope is scanned", "committedDate": "2020-07-07T09:50:09Z", "type": "commit"}, {"oid": "9fa8489abf12899ad57e22bf1d586d645c25f3cb", "url": "https://github.com/apache/netbeans/commit/9fa8489abf12899ad57e22bf1d586d645c25f3cb", "message": "Find a VariableScope again if an unscanned scope is scanned", "committedDate": "2020-07-07T09:50:09Z", "type": "forcePushed"}]}