{"pr_number": 1877, "pr_title": "[NETBEANS-3604]Supports for Records (JEP 359) in JDK-14\"", "pr_createdAt": "2020-01-16T13:35:43Z", "pr_url": "https://github.com/apache/netbeans/pull/1877", "timeline": [{"oid": "8fb62d9caa878485daa80759730e1232607c4b4c", "url": "https://github.com/apache/netbeans/commit/8fb62d9caa878485daa80759730e1232607c4b4c", "message": "Working on records support.", "committedDate": "2019-10-20T14:40:30Z", "type": "commit"}, {"oid": "14be4a90605aec9ab19c91fdfcf42007626c9d63", "url": "https://github.com/apache/netbeans/commit/14be4a90605aec9ab19c91fdfcf42007626c9d63", "message": "Merge remote-tracking branch 'upstream1/jdk/amber/records'", "committedDate": "2020-01-08T07:10:04Z", "type": "commit"}, {"oid": "27282a6ef6b33c71ef27df888ca102c36bf7756f", "url": "https://github.com/apache/netbeans/commit/27282a6ef6b33c71ef27df888ca102c36bf7756f", "message": "Merge remote-tracking branch 'upstream/master' into record-fix-br", "committedDate": "2020-01-16T11:16:41Z", "type": "commit"}, {"oid": "403d4fb2ea1faeb5237553bc99f77b8b278185a3", "url": "https://github.com/apache/netbeans/commit/403d4fb2ea1faeb5237553bc99f77b8b278185a3", "message": "[NETBEANS-3604]Supports for Records (JEP 359) in JDK-14", "committedDate": "2020-01-16T13:29:09Z", "type": "commit"}, {"oid": "bcdce1510e8c68deb020e322395bf07389dfd1b2", "url": "https://github.com/apache/netbeans/commit/bcdce1510e8c68deb020e322395bf07389dfd1b2", "message": "[NETBEANS-3604]Supports for Records (JEP 359) in JDK-14", "committedDate": "2020-01-17T08:43:24Z", "type": "commit"}, {"oid": "a2a5f82640562ca604075278850ba93bbf5d9905", "url": "https://github.com/apache/netbeans/commit/a2a5f82640562ca604075278850ba93bbf5d9905", "message": "[NETBEANS-3604] : Sync-up with master", "committedDate": "2020-01-17T10:51:10Z", "type": "commit"}, {"oid": "2396970deba7ebeec57f785ee0049b96c9127522", "url": "https://github.com/apache/netbeans/commit/2396970deba7ebeec57f785ee0049b96c9127522", "message": "Merge branch 'master' into record-fix-br", "committedDate": "2020-01-17T11:12:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTE0Mg==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367891142", "bodyText": "Unless this was tried already, and rejected for some reason, I would recommend to add Tree.Kind.RECORD into TreeUtilities.CLASS_TREE_KINDS. The purpose of that constant is to keep all kinds that map to ClassTree.", "author": "lahodaj", "createdAt": "2020-01-17T11:27:35Z", "path": "java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/Utilities.java", "diffHunk": "@@ -557,7 +557,7 @@ private static int findBodyStartImpl(CompilationInfo info, Tree cltree, Compilat\n     \n     public static int findBodyStart(final CompilationInfo info, final Tree cltree, final CompilationUnitTree cu, final SourcePositions positions, final Document doc) {\n         Kind kind = cltree.getKind();\n-        if (!TreeUtilities.CLASS_TREE_KINDS.contains(kind) && kind != Kind.METHOD)\n+        if (!TreeUtilities.CLASS_TREE_KINDS.contains(kind) && kind != Kind.METHOD && !cltree.getKind().toString().equals(\"RECORD\"))", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjgzOQ==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236839", "bodyText": "Tree.Kind.RECORD is a final Enumset, So adding RECORD here as a preview feature would result a compilation failure for the versions below 14.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:58:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTE0Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTY0MQ==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367891641", "bodyText": "There should be a SourceVersion check, or something along those lines, and the test case should be skipped if the current javac does not support records. Otherwise, the test will fail when running e.g. with nb-javac without records. (Dtto the other occurrence below.)", "author": "lahodaj", "createdAt": "2020-01-17T11:28:54Z", "path": "java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/DetectorTest.java", "diffHunk": "@@ -508,6 +508,62 @@ public void testIncDecReading230408() throws Exception {\n         performTest(\"IncDecReading230408\");\n     }\n \n+    public void testRecord1() throws Exception {\n+        //TODO: check records are available, skip if they are not.", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjM1MQ==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236351", "bodyText": "Comment addressed.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb7f0b8bed9f03301602da99540ef5f42b092660", "chunk": "diff --git a/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/DetectorTest.java b/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/DetectorTest.java\nindex cfd8961cd6..52d3538067 100644\n--- a/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/DetectorTest.java\n+++ b/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/DetectorTest.java\n\n@@ -509,7 +509,13 @@ public class DetectorTest extends TestBase {\n     }\n \n     public void testRecord1() throws Exception {\n-        //TODO: check records are available, skip if they are not.\n+        try {\n+            SourceVersion.valueOf(\"RELEASE_14\"); //NOI18N\n+        } catch (IllegalArgumentException ex) {\n+            //OK, no RELEASE_14, skip tests\n+            return ;\n+        }\n+        setSourceLevel(\"14\");\n         performTest(\"Record\",\n                     \"public record Test(String s) {}\\n\" +\n                     \"class T {\\n\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTgwNw==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367891807", "bodyText": "Ideally, unnecessary changes should be undone.", "author": "lahodaj", "createdAt": "2020-01-17T11:29:21Z", "path": "java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/TestBase.java", "diffHunk": "@@ -35,6 +35,7 @@\n import java.util.Collection;\n import java.util.Comparator;\n import java.util.EnumSet;\n+import java.util.Iterator;", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjM2Mg==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236362", "bodyText": "Comment addressed.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MTgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "fb7f0b8bed9f03301602da99540ef5f42b092660", "chunk": "diff --git a/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/TestBase.java b/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/TestBase.java\nindex ccfa50a595..1ef26b6e7d 100644\n--- a/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/TestBase.java\n+++ b/java/java.editor.base/test/unit/src/org/netbeans/modules/java/editor/base/semantic/TestBase.java\n\n@@ -34,8 +34,6 @@ import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Comparator;\n-import java.util.EnumSet;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MjMxNg==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367892316", "bodyText": "I wonder if the reflection should be separated into TreeShims. But this can wait.", "author": "lahodaj", "createdAt": "2020-01-17T11:30:43Z", "path": "java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java", "diffHunk": "@@ -381,6 +385,35 @@ public static Context resolveContext(CompilationInfo controller, Document doc, i\n                             el = e;\n                         }\n                     }\n+                    if (el != null && el.getKind() == ElementKind.METHOD) {\n+                        for (Element peer : el.getEnclosingElement().getEnclosedElements()) {\n+                            if (peer.getKind().name().contains(\"RECORD_COMPONENT\")) {\n+                                try {\n+                                    Class<?> recordComponent = Class.forName(\"javax.lang.model.element.RecordComponentElement\", true, VariableTree.class.getClassLoader());\n+                                    Method getAccessor = recordComponent.getDeclaredMethod(\"getAccessor\");\n+                                    Method getRecordComponents = TypeElement.class.getDeclaredMethod(\"getRecordComponents\");", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjQ1Nw==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236457", "bodyText": "It would be good if we wait and fix this at later stage.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MjMxNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzA2Mw==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367893063", "bodyText": "Ideally comments like \"//To change...\" should be deleted.", "author": "lahodaj", "createdAt": "2020-01-17T11:32:53Z", "path": "java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java", "diffHunk": "@@ -986,6 +1020,14 @@ public Void visitTypeParameter(TypeParameterElement e, Boolean highlightName) {\n             return null;\n         }\n         \n+        @Override\n+        public Void visitUnknown(Element e, Boolean p) {\n+            if (TreeShims.isRecordComponent(e)) {\n+                return visitVariable((VariableElement) e, p);\n+            }\n+            return super.visitUnknown(e, p); //To change body of generated methods, choose Tools | Templates.", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjQ2OQ==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236469", "bodyText": "Comment addressed.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzA2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fb7f0b8bed9f03301602da99540ef5f42b092660", "chunk": "diff --git a/java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java b/java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java\nindex a2c6fdcfc3..4fd3a3a701 100644\n--- a/java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java\n+++ b/java/java.editor/src/org/netbeans/modules/editor/java/GoToSupport.java\n\n@@ -1025,7 +1025,7 @@ public class GoToSupport {\n             if (TreeShims.isRecordComponent(e)) {\n                 return visitVariable((VariableElement) e, p);\n             }\n-            return super.visitUnknown(e, p); //To change body of generated methods, choose Tools | Templates.\n+            return super.visitUnknown(e, p);\n         }\n         \n         private void modifier(Set<Modifier> modifiers) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzM1NA==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367893354", "bodyText": "This should be (presumably?) uncomentted. (Dtto the other occurrences below.)", "author": "lahodaj", "createdAt": "2020-01-17T11:33:41Z", "path": "java/java.editor/test/unit/src/org/netbeans/modules/editor/java/GoToSupportTest.java", "diffHunk": "@@ -1282,4 +1297,223 @@ private static boolean hasPatterns() {\n             return false;\n         }\n     }\n+    \n+    public void testRecords1() throws Exception {\n+//        try {", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjQ4MA==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236480", "bodyText": "Comment addressed.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:51:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MzM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "1d05cde0d2a83b8437fcfb558b9a08be1374e1b2", "chunk": "diff --git a/java/java.editor/test/unit/src/org/netbeans/modules/editor/java/GoToSupportTest.java b/java/java.editor/test/unit/src/org/netbeans/modules/editor/java/GoToSupportTest.java\nindex bde8a4ad52..6ed8670672 100644\n--- a/java/java.editor/test/unit/src/org/netbeans/modules/editor/java/GoToSupportTest.java\n+++ b/java/java.editor/test/unit/src/org/netbeans/modules/editor/java/GoToSupportTest.java\n\n@@ -1288,23 +1288,8 @@ public class GoToSupportTest extends NbTestCase {\n         \n     }\n     \n-    private static boolean hasPatterns() {\n-        try {\n-            SourceVersion.valueOf(\"RELEASE_14\"); //NOI18N\n-            return true;\n-        } catch (IllegalArgumentException ex) {\n-            //OK, no RELEASE_14, skip tests\n-            return false;\n-        }\n-    }\n-    \n     public void testRecords1() throws Exception {\n-//        try {\n-//            SourceVersion.valueOf(\"RELEASE_14\");\n-//        } catch (IllegalArgumentException ex) {\n-//            //OK, no RELEASE_10, skip test:\n-//            return ;\n-//        }\n+        if (!hasRecords()) return ;\n         final boolean[] wasCalled = new boolean[1];\n         this.sourceLevel = \"1.14\";\n         final String code = \"package test;\\n\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5NDI2NQ==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r367894265", "bodyText": "Can TreeShims.toRecordComponent be used here?", "author": "lahodaj", "createdAt": "2020-01-17T11:36:15Z", "path": "java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/SemanticHighlighterBase.java", "diffHunk": "@@ -573,6 +582,27 @@ private void addModifiers(Element decl, Collection<ColoringAttributes> c) {\n             return null;\n         }\n \n+        private boolean isRecordComponent(ElementKind kind) {\n+            return \"RECORD_COMPONENT\".equals(kind.name());\n+        }\n+\n+        private Element toRecordComponent(Element el) {", "originalCommit": "2396970deba7ebeec57f785ee0049b96c9127522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjQ5NA==", "url": "https://github.com/apache/netbeans/pull/1877#discussion_r368236494", "bodyText": "Comment addressed.", "author": "singh-akhilesh", "createdAt": "2020-01-18T16:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5NDI2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb7f0b8bed9f03301602da99540ef5f42b092660", "chunk": "diff --git a/java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/SemanticHighlighterBase.java b/java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/SemanticHighlighterBase.java\nindex 6a8b39554f..51bf0a4da7 100644\n--- a/java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/SemanticHighlighterBase.java\n+++ b/java/java.editor.base/src/org/netbeans/modules/java/editor/base/semantic/SemanticHighlighterBase.java\n\n@@ -582,10 +582,6 @@ public abstract class SemanticHighlighterBase extends JavaParserResultTask {\n             return null;\n         }\n \n-        private boolean isRecordComponent(ElementKind kind) {\n-            return \"RECORD_COMPONENT\".equals(kind.name());\n-        }\n-\n         private Element toRecordComponent(Element el) {\n             if (el == null ||el.getKind() != ElementKind.FIELD) {\n                 return el;\n"}}, {"oid": "fb7f0b8bed9f03301602da99540ef5f42b092660", "url": "https://github.com/apache/netbeans/commit/fb7f0b8bed9f03301602da99540ef5f42b092660", "message": "NETBEANS-3604 : Addressed code review comments", "committedDate": "2020-01-18T02:12:05Z", "type": "commit"}, {"oid": "ce6e89af4de546475086fb4445dcdeb923398fdc", "url": "https://github.com/apache/netbeans/commit/ce6e89af4de546475086fb4445dcdeb923398fdc", "message": "Fixing broken merge.", "committedDate": "2020-01-19T07:05:04Z", "type": "commit"}, {"oid": "1d05cde0d2a83b8437fcfb558b9a08be1374e1b2", "url": "https://github.com/apache/netbeans/commit/1d05cde0d2a83b8437fcfb558b9a08be1374e1b2", "message": "Fixing GoToSupportTest", "committedDate": "2020-01-19T08:02:50Z", "type": "commit"}]}