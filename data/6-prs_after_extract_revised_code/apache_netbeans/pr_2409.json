{"pr_number": 2409, "pr_title": "[NETBEANS-4881] Automatically detect & list Payara Platform version in the server registration panel", "pr_createdAt": "2020-09-29T21:01:40Z", "pr_url": "https://github.com/apache/netbeans/pull/2409", "timeline": [{"oid": "40d510d0262f4ad72475c1ba8b53a1fe5c3d8375", "url": "https://github.com/apache/netbeans/commit/40d510d0262f4ad72475c1ba8b53a1fe5c3d8375", "message": "Automatically detect & list Payara Server version from Apache NetBeans IDE", "committedDate": "2020-09-29T20:56:36Z", "type": "commit"}, {"oid": "c4b02e843cee10c9a0816caf02e2fa85f55066b1", "url": "https://github.com/apache/netbeans/commit/c4b02e843cee10c9a0816caf02e2fa85f55066b1", "message": "NETBEANS-4881 Automatically list Payara Micro version", "committedDate": "2020-10-13T17:53:52Z", "type": "commit"}, {"oid": "5920c118a2aee11acd9c239271fe6cedc3f2eb0b", "url": "https://github.com/apache/netbeans/commit/5920c118a2aee11acd9c239271fe6cedc3f2eb0b", "message": "NETBEANS-4881 release version increment", "committedDate": "2020-10-15T05:22:18Z", "type": "commit"}, {"oid": "09ee25ca008bb1f466b6f051f29fff0bc4659a2f", "url": "https://github.com/apache/netbeans/commit/09ee25ca008bb1f466b6f051f29fff0bc4659a2f", "message": "Merge branch 'master' into FISH-253", "committedDate": "2020-10-15T20:02:41Z", "type": "commit"}, {"oid": "7bd9c2f739218f6bdba96e62a4119086b0da2cf4", "url": "https://github.com/apache/netbeans/commit/7bd9c2f739218f6bdba96e62a4119086b0da2cf4", "message": "NETBEANS-4881 Fixes master branch conflicts", "committedDate": "2020-10-16T06:21:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxMDU1Ng==", "url": "https://github.com/apache/netbeans/pull/2409#discussion_r512410556", "bodyText": "To keep compatibility one would have to:\n\nkeep the public enum PayaraVersion\nmake it implement Comparable\nIntroduce new (package private) class PayaraVersionImproved\nextract common functionality into interface PayaraVersionApi\nmake both enum and \"improved\" class implement the API interface", "author": "JaroslavTulach", "createdAt": "2020-10-27T04:31:29Z", "path": "enterprise/payara.tooling/src/org/netbeans/modules/payara/tooling/data/PayaraVersion.java", "diffHunk": "@@ -18,354 +18,203 @@\n  */\n package org.netbeans.modules.payara.tooling.data;\n \n-import java.util.HashMap;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.TreeMap;\n+import org.apache.maven.artifact.repository.metadata.Metadata;\n+import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;\n import org.netbeans.api.annotations.common.CheckForNull;\n import org.netbeans.api.annotations.common.NonNull;\n-import org.netbeans.modules.payara.tooling.utils.EnumUtils;\n-import org.openide.util.Parameters;\n+import org.openide.util.Exceptions;\n \n /**\n  * Payara server version.\n  * <p/>\n  * @author Tomas Kraus, Peter Benedikovic\n  * @author Gaurav Gupta\n  */\n-public enum PayaraVersion {\n-\n-    //add new version\n-    ////////////////////////////////////////////////////////////////////////////\n-    // Enum values                                                            //\n-    ////////////////////////////////////////////////////////////////////////////\n-    /** Payara 4.1.144 */\n-    PF_4_1_144 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 14, (short) 4, (short) 0, PayaraVersion.PF_4_1_144_STR),\n-    /** Payara 4.1.151 */\n-    PF_4_1_151 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 1, (short) 0, PayaraVersion.PF_4_1_151_STR),\n-    /** Payara 4.1.152 */\n-    PF_4_1_152 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 2, (short) 0, PayaraVersion.PF_4_1_152_STR),\n-    /** Payara 4.1.153 */\n-    PF_4_1_153 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 3, (short) 0, PayaraVersion.PF_4_1_153_STR),\n-    /** Payara 4.1.1.154 */\n-    PF_4_1_1_154 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 15, (short) 4, (short) 0, PayaraVersion.PF_4_1_1_154_STR),\n-    /** Payara 4.1.1.161 */\n-    PF_4_1_1_161 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 1, (short) 0, PayaraVersion.PF_4_1_1_161_STR),\n-    /** Payara 4.1.1.162 */\n-    PF_4_1_1_162 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 2, (short) 0, PayaraVersion.PF_4_1_1_162_STR),\n-    /** Payara 4.1.1.163 */\n-    PF_4_1_1_163 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 3, (short) 0, PayaraVersion.PF_4_1_1_163_STR),\n-    /** Payara 4.1.1.164 */\n-    PF_4_1_1_164 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 4, (short) 0, PayaraVersion.PF_4_1_1_164_STR),\n-    /** Payara 4.1.1.171 */\n-    PF_4_1_1_171 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 17, (short) 1, (short) 0, PayaraVersion.PF_4_1_1_171_STR),\n-    /** Payara 4.1.2.172 */\n-    PF_4_1_2_172 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 2, (short) 0, PayaraVersion.PF_4_1_2_172_STR),\n-    /** Payara 4.1.2.173 */\n-    PF_4_1_2_173 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 3, (short) 0, PayaraVersion.PF_4_1_2_173_STR),\n-    /** Payara 4.1.2.174 */\n-    PF_4_1_2_174 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 4, (short) 0, PayaraVersion.PF_4_1_2_174_STR),\n-    /** Payara 4.1.2.181 */\n-    PF_4_1_2_181 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 18, (short) 1, (short) 0, PayaraVersion.PF_4_1_2_181_STR),\n-    /** Payara 5.181 */\n-    PF_5_181 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 1, (short) 0, PayaraVersion.PF_5_181_STR),\n-    /** Payara 5.182 */\n-    PF_5_182 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 2, (short) 0, PayaraVersion.PF_5_182_STR),\n-    /** Payara 5.183 */\n-    PF_5_183 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 3, (short) 0, PayaraVersion.PF_5_183_STR),\n-    /** Payara 5.184 */\n-    PF_5_184 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 4, (short) 0, PayaraVersion.PF_5_184_STR),\n-    /** Payara 5.191 */\n-    PF_5_191 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 1, (short) 0, PayaraVersion.PF_5_191_STR),\n-    /** Payara 5.192 */\n-    PF_5_192 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 2, (short) 0, PayaraVersion.PF_5_192_STR),\n-    /** Payara 5.193 */\n-    PF_5_193 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 3, (short) 0, PayaraVersion.PF_5_193_STR),\n-    /** Payara 5.194 */\n-    PF_5_194 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 4, (short) 0, PayaraVersion.PF_5_194_STR),\n-    /** Payara 5.201 */\n-    PF_5_201 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 20, (short) 1, (short) 0, PayaraVersion.PF_5_201_STR),\n-    /** Payara 5.202 */\n-    PF_5_202 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 20, (short) 2, (short) 0, PayaraVersion.PF_5_202_STR);\n-\n-    //add new version\n-    /**  A <code>String</code> representation of PF_4_1_144 value. */\n-    static final String PF_4_1_144_STR = \"4.1.144\";\n-    /** Additional <code>String</code> representations of 4.1.144 value. */\n-    static final String PF_4_1_144_STR_NEXT[] = {\"4.1.144.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_151 value. */\n-    static final String PF_4_1_151_STR = \"4.1.151\";\n-    /** Additional <code>String</code> representations of 4.1.151 value. */\n-    static final String PF_4_1_151_STR_NEXT[] = {\"4.1.151.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_152 value. */\n-    static final String PF_4_1_152_STR = \"4.1.152\";\n-    /** Additional <code>String</code> representations of 4.1.152 value. */\n-    static final String PF_4_1_152_STR_NEXT[] = {\"4.1.152.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_153 value. */\n-    static final String PF_4_1_153_STR = \"4.1.153\";\n-    /** Additional <code>String</code> representations of 4.1.153 value. */\n-    static final String PF_4_1_153_STR_NEXT[] = {\"4.1.153.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_154 value. */\n-    static final String PF_4_1_1_154_STR = \"4.1.1.154\";\n-    /** Additional <code>String</code> representations of 4.1.1.154 value. */\n-    static final String PF_4_1_1_154_STR_NEXT[] = {\"4.1.1.154.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_161 value. */\n-    static final String PF_4_1_1_161_STR = \"4.1.1.161\";\n-    /** Additional <code>String</code> representations of 4.1.1.161 value. */\n-    static final String PF_4_1_1_161_STR_NEXT[] = {\"4.1.1.161.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_162 value. */\n-    static final String PF_4_1_1_162_STR = \"4.1.1.162\";\n-    /** Additional <code>String</code> representations of 4.1.1.162 value. */\n-    static final String PF_4_1_1_162_STR_NEXT[] = {\"4.1.1.162.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_163 value. */\n-    static final String PF_4_1_1_163_STR = \"4.1.1.163\";\n-    /** Additional <code>String</code> representations of 4.1.1.163 value. */\n-    static final String PF_4_1_1_163_STR_NEXT[] = {\"4.1.1.163.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_164 value. */\n-    static final String PF_4_1_1_164_STR = \"4.1.1.164\";\n-    /** Additional <code>String</code> representations of 4.1.1.164 value. */\n-    static final String PF_4_1_1_164_STR_NEXT[] = {\"4.1.1.164.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_1_171 value. */\n-    static final String PF_4_1_1_171_STR = \"4.1.1.171\";\n-    /** Additional <code>String</code> representations of 4.1.1.171 value. */\n-    static final String PF_4_1_1_171_STR_NEXT[] = {\"4.1.1.171.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_2_172 value. */\n-    static final String PF_4_1_2_172_STR = \"4.1.2.172\";\n-    /** Additional <code>String</code> representations of 4.1.2.172 value. */\n-    static final String PF_4_1_2_172_STR_NEXT[] = {\"4.1.2.172.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_2_173 value. */\n-    static final String PF_4_1_2_173_STR = \"4.1.2.173\";\n-    /** Additional <code>String</code> representations of 4.1.2.173 value. */\n-    static final String PF_4_1_2_173_STR_NEXT[] = {\"4.1.2.173.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_2_174 value. */\n-    static final String PF_4_1_2_174_STR = \"4.1.2.174\";\n-    /** Additional <code>String</code> representations of 4.1.2.174 value. */\n-    static final String PF_4_1_2_174_STR_NEXT[] = {\"4.1.2.174.0\"};\n-    /**  A <code>String</code> representation of PF_4_1_2_181 value. */\n-    static final String PF_4_1_2_181_STR = \"4.1.2.181\";\n-    /** Additional <code>String</code> representations of 4.1.2.181 value. */\n-    static final String PF_4_1_2_181_STR_NEXT[] = {\"4.1.2.181.0\"};\n-    /**  A <code>String</code> representation of PF_5_181 value. */\n-    static final String PF_5_181_STR = \"5.181\";\n-    /** Additional <code>String</code> representations of 5.181 value. */\n-    static final String PF_5_181_STR_NEXT[] = {\"5.181.0\"};\n-    /**  A <code>String</code> representation of PF_5_182 value. */\n-    static final String PF_5_182_STR = \"5.182\";\n-    /** Additional <code>String</code> representations of 5.182 value. */\n-    static final String PF_5_182_STR_NEXT[] = {\"5.182.0\"};\n-    /**  A <code>String</code> representation of PF_5_183 value. */\n-    static final String PF_5_183_STR = \"5.183\";\n-    /** Additional <code>String</code> representations of 5.183 value. */\n-    static final String PF_5_183_STR_NEXT[] = {\"5.183.0\"};\n-    /**  A <code>String</code> representation of PF_5_184 value. */\n-    static final String PF_5_184_STR = \"5.184\";\n-    /** Additional <code>String</code> representations of 5.184 value. */\n-    static final String PF_5_184_STR_NEXT[] = {\"5.184.0\"};\n-    /**  A <code>String</code> representation of PF_5_191 value. */\n-    static final String PF_5_191_STR = \"5.191\";\n-    /** Additional <code>String</code> representations of 5.191 value. */\n-    static final String PF_5_191_STR_NEXT[] = {\"5.191.0\"};\n-    /**  A <code>String</code> representation of PF_5_192 value. */\n-    static final String PF_5_192_STR = \"5.192\";\n-    /** Additional <code>String</code> representations of 5.192 value. */\n-    static final String PF_5_192_STR_NEXT[] = {\"5.192.0\"};\n-    /**  A <code>String</code> representation of PF_5_193 value. */\n-    static final String PF_5_193_STR = \"5.193\";\n-    /** Additional <code>String</code> representations of 5.193 value. */\n-    static final String PF_5_193_STR_NEXT[] = {\"5.193.0\"};\n-    /**  A <code>String</code> representation of PF_5_194 value. */\n-    static final String PF_5_194_STR = \"5.194\";\n-    /** Additional <code>String</code> representations of 5.194 value. */\n-    static final String PF_5_194_STR_NEXT[] = {\"5.194.0\"};\n-    /**  A <code>String</code> representation of PF_5_201 value. */\n-    static final String PF_5_201_STR = \"5.201\";\n-    /** Additional <code>String</code> representations of 5.201 value. */\n-    static final String PF_5_201_STR_NEXT[] = {\"5.201.0\"};\n-    /**  A <code>String</code> representation of PF_5_202 value. */\n-    static final String PF_5_202_STR = \"5.202\";\n-    /** Additional <code>String</code> representations of 5.202 value. */\n-    static final String PF_5_202_STR_NEXT[] = {\"5.202.0\"};\n-\n+public class PayaraVersion implements Comparable<PayaraVersion> {", "originalCommit": "7bd9c2f739218f6bdba96e62a4119086b0da2cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecc02f4f201b0d9d97f54b0bd57276980fbc24e4", "chunk": "diff --git a/enterprise/payara.tooling/src/org/netbeans/modules/payara/tooling/data/PayaraVersion.java b/enterprise/payara.tooling/src/org/netbeans/modules/payara/tooling/data/PayaraVersion.java\nindex 84c3dacf1c..c8f71ac16d 100644\n--- a/enterprise/payara.tooling/src/org/netbeans/modules/payara/tooling/data/PayaraVersion.java\n+++ b/enterprise/payara.tooling/src/org/netbeans/modules/payara/tooling/data/PayaraVersion.java\n\n@@ -18,203 +18,357 @@\n  */\n package org.netbeans.modules.payara.tooling.data;\n \n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.List;\n+import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n-import java.util.TreeMap;\n-import org.apache.maven.artifact.repository.metadata.Metadata;\n-import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;\n import org.netbeans.api.annotations.common.CheckForNull;\n import org.netbeans.api.annotations.common.NonNull;\n-import org.openide.util.Exceptions;\n+import static org.netbeans.modules.payara.tooling.data.PayaraVersion.values;\n+import org.netbeans.modules.payara.tooling.utils.EnumUtils;\n+import org.openide.util.Parameters;\n \n /**\n- * Payara server version.\n+ * Payara server version is now deprecated and replaced by.PayaraPlatformVersion\n+ * class.\n  * <p/>\n  * @author Tomas Kraus, Peter Benedikovic\n  * @author Gaurav Gupta\n  */\n-public class PayaraVersion implements Comparable<PayaraVersion> {\n+@Deprecated\n+public enum PayaraVersion implements PayaraPlatformVersionAPI {\n \n-    \n+    //add new version\n     ////////////////////////////////////////////////////////////////////////////\n-    // Class attributes                                                       //\n+    // Enum values                                                            //\n     ////////////////////////////////////////////////////////////////////////////\n-    /**\n-     * Version elements separator character.\n-     */\n-    public static final char SEPARATOR = '.';\n-\n-    /**\n-     * Version elements separator REGEX pattern.\n-     */\n-    public static final String SEPARATOR_PATTERN = \"\\\\.\";\n+    /** Payara 4.1.144 */\n+    PF_4_1_144 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 14, (short) 4, (short) 0, PayaraVersion.PF_4_1_144_STR),\n+    /** Payara 4.1.151 */\n+    PF_4_1_151 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 1, (short) 0, PayaraVersion.PF_4_1_151_STR),\n+    /** Payara 4.1.152 */\n+    PF_4_1_152 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 2, (short) 0, PayaraVersion.PF_4_1_152_STR),\n+    /** Payara 4.1.153 */\n+    PF_4_1_153 ((short) 4, (short) 1, (short) 0, (short) 0, (short) 15, (short) 3, (short) 0, PayaraVersion.PF_4_1_153_STR),\n+    /** Payara 4.1.1.154 */\n+    PF_4_1_1_154 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 15, (short) 4, (short) 0, PayaraVersion.PF_4_1_1_154_STR),\n+    /** Payara 4.1.1.161 */\n+    PF_4_1_1_161 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 1, (short) 0, PayaraVersion.PF_4_1_1_161_STR),\n+    /** Payara 4.1.1.162 */\n+    PF_4_1_1_162 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 2, (short) 0, PayaraVersion.PF_4_1_1_162_STR),\n+    /** Payara 4.1.1.163 */\n+    PF_4_1_1_163 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 3, (short) 0, PayaraVersion.PF_4_1_1_163_STR),\n+    /** Payara 4.1.1.164 */\n+    PF_4_1_1_164 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 16, (short) 4, (short) 0, PayaraVersion.PF_4_1_1_164_STR),\n+    /** Payara 4.1.1.171 */\n+    PF_4_1_1_171 ((short) 4, (short) 1, (short) 1, (short) 0, (short) 17, (short) 1, (short) 0, PayaraVersion.PF_4_1_1_171_STR),\n+    /** Payara 4.1.2.172 */\n+    PF_4_1_2_172 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 2, (short) 0, PayaraVersion.PF_4_1_2_172_STR),\n+    /** Payara 4.1.2.173 */\n+    PF_4_1_2_173 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 3, (short) 0, PayaraVersion.PF_4_1_2_173_STR),\n+    /** Payara 4.1.2.174 */\n+    PF_4_1_2_174 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 17, (short) 4, (short) 0, PayaraVersion.PF_4_1_2_174_STR),\n+    /** Payara 4.1.2.181 */\n+    PF_4_1_2_181 ((short) 4, (short) 1, (short) 2, (short) 0, (short) 18, (short) 1, (short) 0, PayaraVersion.PF_4_1_2_181_STR),\n+    /** Payara 5.181 */\n+    PF_5_181 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 1, (short) 0, PayaraVersion.PF_5_181_STR),\n+    /** Payara 5.182 */\n+    PF_5_182 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 2, (short) 0, PayaraVersion.PF_5_182_STR),\n+    /** Payara 5.183 */\n+    PF_5_183 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 3, (short) 0, PayaraVersion.PF_5_183_STR),\n+    /** Payara 5.184 */\n+    PF_5_184 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 18, (short) 4, (short) 0, PayaraVersion.PF_5_184_STR),\n+    /** Payara 5.191 */\n+    PF_5_191 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 1, (short) 0, PayaraVersion.PF_5_191_STR),\n+    /** Payara 5.192 */\n+    PF_5_192 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 2, (short) 0, PayaraVersion.PF_5_192_STR),\n+    /** Payara 5.193 */\n+    PF_5_193 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 3, (short) 0, PayaraVersion.PF_5_193_STR),\n+    /** Payara 5.194 */\n+    PF_5_194 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 19, (short) 4, (short) 0, PayaraVersion.PF_5_194_STR),\n+    /** Payara 5.201 */\n+    PF_5_201 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 20, (short) 1, (short) 0, PayaraVersion.PF_5_201_STR),\n+    /** Payara 5.202 */\n+    PF_5_202 ((short) 5, (short) 0, (short) 0, (short) 0, (short) 20, (short) 2, (short) 0, PayaraVersion.PF_5_202_STR);\n+\n+    //add new version\n+    /**  A <code>String</code> representation of PF_4_1_144 value. */\n+    static final String PF_4_1_144_STR = \"4.1.144\";\n+    /** Additional <code>String</code> representations of 4.1.144 value. */\n+    static final String PF_4_1_144_STR_NEXT[] = {\"4.1.144.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_151 value. */\n+    static final String PF_4_1_151_STR = \"4.1.151\";\n+    /** Additional <code>String</code> representations of 4.1.151 value. */\n+    static final String PF_4_1_151_STR_NEXT[] = {\"4.1.151.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_152 value. */\n+    static final String PF_4_1_152_STR = \"4.1.152\";\n+    /** Additional <code>String</code> representations of 4.1.152 value. */\n+    static final String PF_4_1_152_STR_NEXT[] = {\"4.1.152.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_153 value. */\n+    static final String PF_4_1_153_STR = \"4.1.153\";\n+    /** Additional <code>String</code> representations of 4.1.153 value. */\n+    static final String PF_4_1_153_STR_NEXT[] = {\"4.1.153.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_154 value. */\n+    static final String PF_4_1_1_154_STR = \"4.1.1.154\";\n+    /** Additional <code>String</code> representations of 4.1.1.154 value. */\n+    static final String PF_4_1_1_154_STR_NEXT[] = {\"4.1.1.154.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_161 value. */\n+    static final String PF_4_1_1_161_STR = \"4.1.1.161\";\n+    /** Additional <code>String</code> representations of 4.1.1.161 value. */\n+    static final String PF_4_1_1_161_STR_NEXT[] = {\"4.1.1.161.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_162 value. */\n+    static final String PF_4_1_1_162_STR = \"4.1.1.162\";\n+    /** Additional <code>String</code> representations of 4.1.1.162 value. */\n+    static final String PF_4_1_1_162_STR_NEXT[] = {\"4.1.1.162.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_163 value. */\n+    static final String PF_4_1_1_163_STR = \"4.1.1.163\";\n+    /** Additional <code>String</code> representations of 4.1.1.163 value. */\n+    static final String PF_4_1_1_163_STR_NEXT[] = {\"4.1.1.163.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_164 value. */\n+    static final String PF_4_1_1_164_STR = \"4.1.1.164\";\n+    /** Additional <code>String</code> representations of 4.1.1.164 value. */\n+    static final String PF_4_1_1_164_STR_NEXT[] = {\"4.1.1.164.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_1_171 value. */\n+    static final String PF_4_1_1_171_STR = \"4.1.1.171\";\n+    /** Additional <code>String</code> representations of 4.1.1.171 value. */\n+    static final String PF_4_1_1_171_STR_NEXT[] = {\"4.1.1.171.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_2_172 value. */\n+    static final String PF_4_1_2_172_STR = \"4.1.2.172\";\n+    /** Additional <code>String</code> representations of 4.1.2.172 value. */\n+    static final String PF_4_1_2_172_STR_NEXT[] = {\"4.1.2.172.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_2_173 value. */\n+    static final String PF_4_1_2_173_STR = \"4.1.2.173\";\n+    /** Additional <code>String</code> representations of 4.1.2.173 value. */\n+    static final String PF_4_1_2_173_STR_NEXT[] = {\"4.1.2.173.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_2_174 value. */\n+    static final String PF_4_1_2_174_STR = \"4.1.2.174\";\n+    /** Additional <code>String</code> representations of 4.1.2.174 value. */\n+    static final String PF_4_1_2_174_STR_NEXT[] = {\"4.1.2.174.0\"};\n+    /**  A <code>String</code> representation of PF_4_1_2_181 value. */\n+    static final String PF_4_1_2_181_STR = \"4.1.2.181\";\n+    /** Additional <code>String</code> representations of 4.1.2.181 value. */\n+    static final String PF_4_1_2_181_STR_NEXT[] = {\"4.1.2.181.0\"};\n+    /**  A <code>String</code> representation of PF_5_181 value. */\n+    static final String PF_5_181_STR = \"5.181\";\n+    /** Additional <code>String</code> representations of 5.181 value. */\n+    static final String PF_5_181_STR_NEXT[] = {\"5.181.0\"};\n+    /**  A <code>String</code> representation of PF_5_182 value. */\n+    static final String PF_5_182_STR = \"5.182\";\n+    /** Additional <code>String</code> representations of 5.182 value. */\n+    static final String PF_5_182_STR_NEXT[] = {\"5.182.0\"};\n+    /**  A <code>String</code> representation of PF_5_183 value. */\n+    static final String PF_5_183_STR = \"5.183\";\n+    /** Additional <code>String</code> representations of 5.183 value. */\n+    static final String PF_5_183_STR_NEXT[] = {\"5.183.0\"};\n+    /**  A <code>String</code> representation of PF_5_184 value. */\n+    static final String PF_5_184_STR = \"5.184\";\n+    /** Additional <code>String</code> representations of 5.184 value. */\n+    static final String PF_5_184_STR_NEXT[] = {\"5.184.0\"};\n+    /**  A <code>String</code> representation of PF_5_191 value. */\n+    static final String PF_5_191_STR = \"5.191\";\n+    /** Additional <code>String</code> representations of 5.191 value. */\n+    static final String PF_5_191_STR_NEXT[] = {\"5.191.0\"};\n+    /**  A <code>String</code> representation of PF_5_192 value. */\n+    static final String PF_5_192_STR = \"5.192\";\n+    /** Additional <code>String</code> representations of 5.192 value. */\n+    static final String PF_5_192_STR_NEXT[] = {\"5.192.0\"};\n+    /**  A <code>String</code> representation of PF_5_193 value. */\n+    static final String PF_5_193_STR = \"5.193\";\n+    /** Additional <code>String</code> representations of 5.193 value. */\n+    static final String PF_5_193_STR_NEXT[] = {\"5.193.0\"};\n+    /**  A <code>String</code> representation of PF_5_194 value. */\n+    static final String PF_5_194_STR = \"5.194\";\n+    /** Additional <code>String</code> representations of 5.194 value. */\n+    static final String PF_5_194_STR_NEXT[] = {\"5.194.0\"};\n+    /**  A <code>String</code> representation of PF_5_201 value. */\n+    static final String PF_5_201_STR = \"5.201\";\n+    /** Additional <code>String</code> representations of 5.201 value. */\n+    static final String PF_5_201_STR_NEXT[] = {\"5.201.0\"};\n+    /**  A <code>String</code> representation of PF_5_202 value. */\n+    static final String PF_5_202_STR = \"5.202\";\n+    /** Additional <code>String</code> representations of 5.202 value. */\n+    static final String PF_5_202_STR_NEXT[] = {\"5.202.0\"};\n \n-    /**\n-     * Payara Server artifact download url\n-     */\n-    private static final String DOWNLOAD_URL = \"https://oss.sonatype.org/service/local/repositories/releases/content/fish/payara/distributions/payara/%s/payara-%s.zip\"; // NOI18N\n \n-    private static final String METADATA_URL = \"https://repo1.maven.org/maven2/fish/payara/distributions/payara/maven-metadata.xml\"; // NOI18N\n+    ////////////////////////////////////////////////////////////////////////////\n+    // Class attributes                                                       //\n+    ////////////////////////////////////////////////////////////////////////////\n \n-    private static final String CDDL_LICENSE = \"https://raw.githubusercontent.com/payara/Payara/master/LICENSE.txt\"; // NOI18N\n+    /** Payara version enumeration length. */\n+    public static final int length = PayaraVersion.values().length;\n+    \n+    /** Version elements separator character. */\n+    public static final char SEPARATOR = '.';\n \n-    public static final PayaraVersion EMPTY = new PayaraVersion((short) 0, (short) 0, (short) 0, (short) 0, \"\", \"\");\n+    /** Version elements separator REGEX pattern. */\n+    public static final String SEPARATOR_PATTERN = \"\\\\.\";\n \n-    private static PayaraVersion latestVersion;\n \n-    private static final Map<String, PayaraVersion> versions = new TreeMap<>();\n+    /** \n+     * Stored <code>String</code> values for backward <code>String</code>\n+     * conversion.\n+     */\n+    private static final Map<String, PayaraVersion> stringValuesMap\n+            = new HashMap<>(2 * values().length);\n \n-    public static PayaraVersion getLatestVersion() {\n-        if (!getVersions().isEmpty()) {\n-            return latestVersion;\n-        } else {\n-            return null;\n+    // Initialize backward String conversion Map.\n+    static {\n+        for (PayaraVersion state : PayaraVersion.values()) {\n+            stringValuesMap.put(state.toString().toUpperCase(), state);\n         }\n+        //add new version\n+        initStringValuesMapFromArray(PF_4_1_144, PF_4_1_144_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_151, PF_4_1_151_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_152, PF_4_1_152_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_153, PF_4_1_153_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_154, PF_4_1_1_154_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_161, PF_4_1_1_161_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_162, PF_4_1_1_162_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_163, PF_4_1_1_163_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_164, PF_4_1_1_164_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_1_171, PF_4_1_1_171_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_2_172, PF_4_1_2_172_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_2_173, PF_4_1_2_173_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_2_174, PF_4_1_2_174_STR_NEXT);\n+        initStringValuesMapFromArray(PF_4_1_2_181, PF_4_1_2_181_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_181, PF_5_181_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_182, PF_5_182_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_183, PF_5_183_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_184, PF_5_184_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_191, PF_5_191_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_192, PF_5_192_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_193, PF_5_193_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_194, PF_5_194_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_201, PF_5_201_STR_NEXT);\n+        initStringValuesMapFromArray(PF_5_202, PF_5_202_STR_NEXT);\n     }\n \n-    public static Map<String, PayaraVersion> getVersionMap() {\n-        if (!getVersions().isEmpty()) {\n-            return Collections.unmodifiableMap(versions);\n-        } else {\n-            return Collections.emptyMap();\n-        }\n-    }\n+    ////////////////////////////////////////////////////////////////////////////\n+    // Static methods                                                         //\n+    ////////////////////////////////////////////////////////////////////////////\n \n-    public static List<PayaraVersion> getVersions() {\n-        if (versions.isEmpty()) {\n-            InputStream input = null;\n-            try {\n-                MetadataXpp3Reader reader = new MetadataXpp3Reader();\n-                input = new URL(METADATA_URL).openStream();\n-                Metadata data = reader.read(new InputStreamReader(input));\n-                versions.clear();\n-                for (String version : data.getVersioning().getVersions()) {\n-                    if (version.contains(\"Alpha\") || version.contains(\"Beta\")) { // NOI18N\n-                        continue;\n-                    }\n-                    PayaraVersion payaraVersion = PayaraVersion.toValue(version);\n-                    versions.put(version, payaraVersion);\n-                    if (version.equals(data.getVersioning().getLatest())) {\n-                        latestVersion = payaraVersion;\n-                    }\n-                }\n-            } catch (Exception ex) {\n-                Exceptions.printStackTrace(ex);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException ex) {\n-                    Exceptions.printStackTrace(ex);\n-                }\n-            }\n+    /**\n+     * Helper method to initialize backward String conversion <code>Map</code> with\n+     * additional values using additional string values arrays.\n+     * <p/>\n+     * @param version Target version for additional values.\n+     * @param values  Array containing source <code>String</code> values.\n+     */\n+    private static void initStringValuesMapFromArray(\n+            final PayaraVersion version, final String[] values) {\n+        for (String value : values) {\n+            stringValuesMap.put(value, version);\n         }\n-        return new ArrayList<>(versions.values());\n     }\n \n     /**\n      * Returns a <code>PayaraVersion</code> with a value represented by the\n      * specified <code>String</code>. The <code>PayaraVersion</code> returned\n-     * represents existing value only if specified <code>String</code> matches\n-     * any <code>String</code> returned by <code>toString</code> method.\n+     * represents existing value only if specified <code>String</code>\n+     * matches any <code>String</code> returned by <code>toString</code> method.\n      * Otherwise <code>null</code> value is returned.\n      * <p/>\n      * @param versionStr Value containing version <code>String</code>\n-     * representation.\n+     *                   representation.\n      * @return <code>PayaraVersion</code> value represented by\n-     * <code>String</code> or <code>null</code> if value was not recognized.\n+     *         <code>String</code> or <code>null</code> if value was\n+     *         not recognized.\n      */\n     @CheckForNull\n     public static PayaraVersion toValue(@NonNull final String versionStr) {\n-        if(versionStr.trim().isEmpty()) {\n-            return EMPTY;\n-        }\n+        Parameters.notNull(\"versionStr\", versionStr);\n+\n         PayaraVersion version\n-                = versions.get(versionStr.toUpperCase(Locale.ENGLISH));\n+                = stringValuesMap.get(versionStr.toUpperCase(Locale.ENGLISH));\n         if (version == null) {\n-            String[] versionComps = versionStr.split(SEPARATOR_PATTERN);\n-\n-            short major = Short.valueOf(versionComps[0]);\n-            short minor = Short.valueOf(versionComps[1]);\n-            short update = 0, build = 0;\n-            if (versionComps.length > 2) {\n-                update = Short.valueOf(versionComps[2]);\n+            String[] versionNumbers = versionStr.split(\"\\\\\"+SEPARATOR);\n+            for (int i = versionNumbers.length - 1;\n+                    version == null && i > 0; i--) {\n+                int versionStrLen = i - 1;\n+                for (int j = 0; j < i; j++) {\n+                    versionStrLen += versionNumbers[j].length();\n+                }\n+                StringBuilder sb = new StringBuilder(versionStrLen);\n+                for (int j = 0; j < i; j++) {\n+                    if (j > 0) {\n+                        sb.append(SEPARATOR);\n+                    }\n+                    try {\n+                        Integer.parseInt(versionNumbers[j]);\n+                        sb.append(versionNumbers[j]);\n+                    } catch (NumberFormatException ex) {\n+                        break;\n+                    }\n+                }\n+                version = stringValuesMap.get(sb.toString().toUpperCase(Locale.ENGLISH));\n             }\n-            if (versionComps.length > 3) {\n-                build = Short.valueOf(versionComps[3]);\n+            if (version == null) {\n+                // fallback attempt\n+                int dot = versionStr.indexOf('.');\n+                if (dot > 0) {\n+                    try {\n+                        int major = Integer.parseInt(versionStr.substring(0, dot));\n+                        // this needs enum to be properly ordered latest versions last\n+                        for (PayaraVersion v : values()) {\n+                            if (v.major <= major) {\n+                                version = v;\n+                            } else if (v.major > major) {\n+                                break;\n+                            }\n+                        }\n+                    } catch (NumberFormatException ex) {\n+                        // noop\n+                    }\n+                }\n             }\n-            version = new PayaraVersion(\n-                    major, minor, update, build,\n-                    major >= 5 ? \"deployer:pfv5ee8\" : \"deployer:pfv4ee7\",\n-                    versionStr\n-            );\n         }\n         return version;\n     }\n+\n     ////////////////////////////////////////////////////////////////////////////\n     // Instance attributes                                                    //\n     ////////////////////////////////////////////////////////////////////////////\n-    /**\n-     * Major version number.\n-     */\n+\n+    /** Major version number. */\n     private final short major;\n \n-    /**\n-     * Minor version number.\n-     */\n+    /** Minor version number. */\n     private final short minor;\n \n-    /**\n-     * Update version number.\n-     */\n+    /** Update version number. */\n     private final short update;\n \n-    /**\n-     * Build version number.\n-     */\n+    /** Build version number. */\n     private final short build;\n \n-    private final String uriFragment;\n-\n-    private final String indirectUrl;\n-\n-    private final String directUrl;\n-\n     private final String value;\n \n     ////////////////////////////////////////////////////////////////////////////\n     // Constructors                                                           //\n     ////////////////////////////////////////////////////////////////////////////\n+\n     /**\n      * Constructs an instance of Payara server version.\n      * <p/>\n-     * @param major Major version number.\n-     * @param minor Minor version number.\n+     * @param major  Major version number.\n+     * @param minor  Minor version number.\n      * @param update Update version number.\n-     * @param build Build version number.\n+     * @param build  Build version number.\n      */\n     private PayaraVersion(final short major, final short minor,\n-            final short update, final short build, String uriFragment, final String value) {\n+            final short update, final short build, \n+            final short year, final short quarter, \n+            final short month, final String value) {\n         this.major = major;\n         this.minor = minor;\n         this.update = update;\n         this.build = build;\n-        this.uriFragment = uriFragment;\n         this.value = value;\n-        this.indirectUrl = null;\n-        this.directUrl = String.format(DOWNLOAD_URL, value, value);\n     }\n \n     ////////////////////////////////////////////////////////////////////////////\n     // Getters                                                                //\n     ////////////////////////////////////////////////////////////////////////////\n+\n     /**\n      * Get major version number.\n      *\n"}}, {"oid": "696e4c8a995251cde6435dfc384ea1458297fda2", "url": "https://github.com/apache/netbeans/commit/696e4c8a995251cde6435dfc384ea1458297fda2", "message": "[NETBEANS-4881] Mark javaeeVersion property as deprecated", "committedDate": "2020-10-29T17:30:27Z", "type": "commit"}, {"oid": "0c390d66feffeec43470bbbace8c51f374bc6362", "url": "https://github.com/apache/netbeans/commit/0c390d66feffeec43470bbbace8c51f374bc6362", "message": "[NETBEANS-4881] Formatting signatures", "committedDate": "2020-10-29T17:32:37Z", "type": "commit"}, {"oid": "5c44c8fb282f246244e99df9da4547e59c515c96", "url": "https://github.com/apache/netbeans/commit/5c44c8fb282f246244e99df9da4547e59c515c96", "message": "Merge branch 'FISH-253' of https://github.com/jGauravGupta/netbeans into FISH-253", "committedDate": "2020-10-29T17:32:44Z", "type": "commit"}, {"oid": "ecc02f4f201b0d9d97f54b0bd57276980fbc24e4", "url": "https://github.com/apache/netbeans/commit/ecc02f4f201b0d9d97f54b0bd57276980fbc24e4", "message": "[NETBEANS-4881] PayaraVersion & ServerDetails enum compatible API added", "committedDate": "2020-10-30T06:03:50Z", "type": "commit"}, {"oid": "3eacfb9fe59f91ad01f080ab3c8916e0a6bbcce0", "url": "https://github.com/apache/netbeans/commit/3eacfb9fe59f91ad01f080ab3c8916e0a6bbcce0", "message": "[NETBEANS-4881] Increment org.netbeans.modules.maven.embedder version", "committedDate": "2020-10-30T06:21:11Z", "type": "commit"}, {"oid": "c3f7ca46f3b3390a7dd3ab631735bbfb64550aad", "url": "https://github.com/apache/netbeans/commit/c3f7ca46f3b3390a7dd3ab631735bbfb64550aad", "message": "[NETBEANS-4881] Set the HTTP based Admin Interface", "committedDate": "2020-10-30T07:33:06Z", "type": "commit"}, {"oid": "fb0ca2e6a1d8093917f87976426d2c3c62d66019", "url": "https://github.com/apache/netbeans/commit/fb0ca2e6a1d8093917f87976426d2c3c62d66019", "message": "[NETBEANS-4881] Compatible API added in signature", "committedDate": "2020-11-03T07:23:02Z", "type": "commit"}, {"oid": "17b8eaf3dac9d8cc40fecfa98cc3391b5e7c8753", "url": "https://github.com/apache/netbeans/commit/17b8eaf3dac9d8cc40fecfa98cc3391b5e7c8753", "message": "[NETBEANS-4881] Payara Tooling compatible API added in signature", "committedDate": "2020-11-03T08:29:31Z", "type": "commit"}, {"oid": "e7b80f9159c7bb8460717bf0c9a44c20712de9d0", "url": "https://github.com/apache/netbeans/commit/e7b80f9159c7bb8460717bf0c9a44c20712de9d0", "message": "[NETBEANS-4881] Polish", "committedDate": "2020-11-03T12:42:48Z", "type": "commit"}, {"oid": "bd9b4ddf8f319ad1eba431770b7149492109cc85", "url": "https://github.com/apache/netbeans/commit/bd9b4ddf8f319ad1eba431770b7149492109cc85", "message": "Merge branch 'master' into FISH-253", "committedDate": "2021-02-14T03:22:48Z", "type": "commit"}, {"oid": "bc5c193da12f53061a47b2687433862c031ecdc2", "url": "https://github.com/apache/netbeans/commit/bc5c193da12f53061a47b2687433862c031ecdc2", "message": "Merge branch 'master' into FISH-253", "committedDate": "2021-03-26T10:32:23Z", "type": "commit"}]}