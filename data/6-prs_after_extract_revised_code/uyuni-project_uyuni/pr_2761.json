{"pr_number": 2761, "pr_title": "Maintain list of synced images in pillar", "pr_createdAt": "2020-10-27T10:35:36Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2761", "timeline": [{"oid": "f83a8f0ce3c88ad7c78c2da544c26d512dcf7f06", "url": "https://github.com/uyuni-project/uyuni/commit/f83a8f0ce3c88ad7c78c2da544c26d512dcf7f06", "message": "Maintain list of synced images in pillar", "committedDate": "2020-10-27T11:00:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NjE1Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r512666156", "bodyText": "Nitpick: Nothing wrong with this but instead of using isPresent and then get method, better use ifPresent like here. It's more concise and more compatible with functional style.", "author": "admd", "createdAt": "2020-10-27T12:53:25Z", "path": "java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.suse.manager.reactor.messaging;\n+\n+import com.redhat.rhn.common.messaging.EventMessage;\n+import com.redhat.rhn.common.messaging.MessageAction;\n+import com.redhat.rhn.domain.server.ServerFactory;\n+import com.redhat.rhn.domain.server.ServerGroupFactory;\n+import com.redhat.rhn.domain.server.ManagedServerGroup;\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.MinionServerFactory;\n+import com.suse.manager.webui.services.SaltStateGeneratorService;\n+import com.suse.manager.webui.utils.salt.custom.ImageSyncedEvent;\n+import org.apache.log4j.Logger;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * Logic responsible for reacting to 'image deployed' event.\n+ */\n+public class ImageSyncedEventMessageAction implements MessageAction {\n+\n+    private static final Logger LOG = Logger.getLogger(ImageSyncedEventMessageAction.class);\n+\n+\n+    @Override\n+    public void execute(EventMessage msg) {\n+        ImageSyncedEvent imageSyncedEvent = ((ImageSyncedEventMessage) msg).getImageSyncedEvent();\n+\n+        String minionId = imageSyncedEvent.getMinionId();\n+\n+        Optional<MinionServer> minionOpt = MinionServerFactory.findByMinionId(minionId);\n+        if (minionOpt.isPresent()) {\n+            MinionServer minion = minionOpt.get();", "originalCommit": "f83a8f0ce3c88ad7c78c2da544c26d512dcf7f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMjk1OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r516532959", "bodyText": "fixed", "author": "nadvornik", "createdAt": "2020-11-03T09:39:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NjE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e069c8e08910c18c0aa5c922428c6fa99a1b2052", "chunk": "diff --git a/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java b/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\nindex 33c2c75aa29..7a5369d6dd4 100644\n--- a/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\n+++ b/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\n\n@@ -17,7 +17,6 @@ package com.suse.manager.reactor.messaging;\n \n import com.redhat.rhn.common.messaging.EventMessage;\n import com.redhat.rhn.common.messaging.MessageAction;\n-import com.redhat.rhn.domain.server.ServerFactory;\n import com.redhat.rhn.domain.server.ServerGroupFactory;\n import com.redhat.rhn.domain.server.ManagedServerGroup;\n import com.redhat.rhn.domain.server.MinionServer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3MjA1OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r512672058", "bodyText": "Any particular reason to use TreeMap instead of HashMap? Do you need to maintain order? Moreover, if a map is going to have only one entry, may be better user collections's singletonMap method like here", "author": "admd", "createdAt": "2020-10-27T13:02:17Z", "path": "java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java", "diffHunk": "@@ -193,6 +193,58 @@ private String getImagePillarFileName(OSImageInspectSlsResult.Bundle bundle) {\n                 bundle.getId().replace('.', '-') + \".\" + PILLAR_IMAGE_DATA_FILE_EXT;\n     }\n \n+    public void createImageSyncedPillar(ServerGroup branch, String name, String version) {\n+\n+        try {\n+            SaltPillar pillar = new SaltPillar();\n+            Map<String, Object> imagePillar = new TreeMap<String, Object>();", "originalCommit": "f83a8f0ce3c88ad7c78c2da544c26d512dcf7f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMzA5NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r516533095", "bodyText": "fixed", "author": "nadvornik", "createdAt": "2020-11-03T09:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3MjA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "e069c8e08910c18c0aa5c922428c6fa99a1b2052", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java b/java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java\nindex 9b5e9608d72..bcd9a95719e 100644\n--- a/java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java\n+++ b/java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java\n\n@@ -193,17 +200,20 @@ public enum SaltStateGeneratorService {\n                 bundle.getId().replace('.', '-') + \".\" + PILLAR_IMAGE_DATA_FILE_EXT;\n     }\n \n+    /**\n+     * Generate OS Image specific pillar for Branch group, containing synced flag\n+     * @param branch the ServerGroup for which the pillar is created\n+     * @param name the OS image name\n+     * @param version the OS image version\n+     */\n     public void createImageSyncedPillar(ServerGroup branch, String name, String version) {\n \n         try {\n             SaltPillar pillar = new SaltPillar();\n-            Map<String, Object> imagePillar = new TreeMap<String, Object>();\n-            Map<String, Object> imagePillarBase = new TreeMap<String, Object>();\n-            Map<String, Object> imagePillarDetails = new TreeMap<String, Object>();\n+            Map<String, Object> imagePillarDetails = Collections.singletonMap(\"synced\", true);\n+            Map<String, Object> imagePillarBase = Collections.singletonMap(version, imagePillarDetails);\n+            Map<String, Object> imagePillar = Collections.singletonMap(name, imagePillarBase);\n \n-            imagePillarDetails.put(\"synced\", true);\n-            imagePillarBase.put(version, imagePillarDetails);\n-            imagePillar.put(name, imagePillarBase);\n             pillar.add(\"images\", imagePillar);\n \n             Path dirPath = Paths.get(SUMA_PILLAR_IMAGES_DATA_PATH).resolve(\n"}}, {"oid": "e069c8e08910c18c0aa5c922428c6fa99a1b2052", "url": "https://github.com/uyuni-project/uyuni/commit/e069c8e08910c18c0aa5c922428c6fa99a1b2052", "message": "Handle group- and org-specific image pillars", "committedDate": "2020-10-29T16:18:19Z", "type": "forcePushed"}, {"oid": "c74a5ec74ebd0051a16ef3bd488da7aaa0970a32", "url": "https://github.com/uyuni-project/uyuni/commit/c74a5ec74ebd0051a16ef3bd488da7aaa0970a32", "message": "Handle group- and org-specific image pillars", "committedDate": "2020-10-30T12:31:26Z", "type": "forcePushed"}, {"oid": "3c7f0d4b57c6e2932f1c1afe4777f87359ed7fea", "url": "https://github.com/uyuni-project/uyuni/commit/3c7f0d4b57c6e2932f1c1afe4777f87359ed7fea", "message": "Unit test for ImageSyncedPillar", "committedDate": "2020-10-30T16:02:25Z", "type": "forcePushed"}, {"oid": "0f9e8b66f84a6d3b02b29d861a9ebcd015a9b0d4", "url": "https://github.com/uyuni-project/uyuni/commit/0f9e8b66f84a6d3b02b29d861a9ebcd015a9b0d4", "message": "Update changelog", "committedDate": "2020-11-03T09:35:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r516862491", "bodyText": "Nitpic, is the warning enough? Shouldn't this be an error?", "author": "aaannz", "createdAt": "2020-11-03T18:09:51Z", "path": "java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.suse.manager.reactor.messaging;\n+\n+import com.redhat.rhn.common.messaging.EventMessage;\n+import com.redhat.rhn.common.messaging.MessageAction;\n+import com.redhat.rhn.domain.server.ServerGroupFactory;\n+import com.redhat.rhn.domain.server.ManagedServerGroup;\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.MinionServerFactory;\n+import com.suse.manager.webui.services.SaltStateGeneratorService;\n+import com.suse.manager.webui.utils.salt.custom.ImageSyncedEvent;\n+import org.apache.log4j.Logger;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Logic responsible for reacting to 'image synced' event.\n+ */\n+public class ImageSyncedEventMessageAction implements MessageAction {\n+\n+    private static final Logger LOG = Logger.getLogger(ImageSyncedEventMessageAction.class);\n+\n+\n+    @Override\n+    public void execute(EventMessage msg) {\n+        ImageSyncedEvent imageSyncedEvent = ((ImageSyncedEventMessage) msg).getImageSyncedEvent();\n+\n+        String minionId = imageSyncedEvent.getMinionId();\n+\n+        Optional<MinionServer> minionOpt = MinionServerFactory.findByMinionId(minionId);\n+        minionOpt.ifPresent(minion -> {\n+            ManagedServerGroup branchGroup = ServerGroupFactory.lookupByNameAndOrg(imageSyncedEvent.getBranch(),\n+                minion.getOrg());\n+\n+            if (!minion.getGroups().contains(branchGroup)) {\n+                LOG.warn(\"Branch server \" + minionId + \" is not in group \" + imageSyncedEvent.getBranch());", "originalCommit": "55a55201446fca7ce9da66cbbd23e84c0eae433b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwOTQ1Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2761#discussion_r517209456", "bodyText": "You are right, fixed.", "author": "nadvornik", "createdAt": "2020-11-04T09:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a29afff852d7ce87ca4931573ed4e020322da1b7", "chunk": "diff --git a/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java b/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\nindex 1b739757b4e..425607af25c 100644\n--- a/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\n+++ b/java/code/src/com/suse/manager/reactor/messaging/ImageSyncedEventMessageAction.java\n\n@@ -47,7 +47,7 @@ public class ImageSyncedEventMessageAction implements MessageAction {\n                 minion.getOrg());\n \n             if (!minion.getGroups().contains(branchGroup)) {\n-                LOG.warn(\"Branch server \" + minionId + \" is not in group \" + imageSyncedEvent.getBranch());\n+                LOG.error(\"Branch server \" + minionId + \" is not in group \" + imageSyncedEvent.getBranch());\n                 return;\n             }\n \n"}}, {"oid": "a29afff852d7ce87ca4931573ed4e020322da1b7", "url": "https://github.com/uyuni-project/uyuni/commit/a29afff852d7ce87ca4931573ed4e020322da1b7", "message": "Maintain list of synced images in pillar", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "69bf2b64e64990be1e01359d29ebfc7b5c5ae983", "url": "https://github.com/uyuni-project/uyuni/commit/69bf2b64e64990be1e01359d29ebfc7b5c5ae983", "message": "Make image pillar visible only in buildhost org", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "db2876edfa61d58a3f8873a4e0e47494628e91ef", "url": "https://github.com/uyuni-project/uyuni/commit/db2876edfa61d58a3f8873a4e0e47494628e91ef", "message": "Handle group- and org-specific image pillars", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "b87bb1658309c10087308f6f263f92af39836326", "url": "https://github.com/uyuni-project/uyuni/commit/b87bb1658309c10087308f6f263f92af39836326", "message": "Unit test for ImageSyncedPillar", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "5fdc7ce1c93cc9c1de61fb5ee386420897b6d41e", "url": "https://github.com/uyuni-project/uyuni/commit/5fdc7ce1c93cc9c1de61fb5ee386420897b6d41e", "message": "Test for ImageSyncedEventMessageAction", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "eb4d31633d6fe96324a233d74786fb2e4bf646cd", "url": "https://github.com/uyuni-project/uyuni/commit/eb4d31633d6fe96324a233d74786fb2e4bf646cd", "message": "Update changelog", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "bbe57813f41e7ea8d7e87396de133b45dccc4465", "url": "https://github.com/uyuni-project/uyuni/commit/bbe57813f41e7ea8d7e87396de133b45dccc4465", "message": "Fix JobReturnEventMessageActionTest", "committedDate": "2020-11-04T09:31:50Z", "type": "commit"}, {"oid": "bbe57813f41e7ea8d7e87396de133b45dccc4465", "url": "https://github.com/uyuni-project/uyuni/commit/bbe57813f41e7ea8d7e87396de133b45dccc4465", "message": "Fix JobReturnEventMessageActionTest", "committedDate": "2020-11-04T09:31:50Z", "type": "forcePushed"}]}