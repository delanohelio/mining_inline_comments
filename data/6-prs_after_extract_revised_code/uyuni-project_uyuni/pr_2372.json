{"pr_number": 2372, "pr_title": "Maintenance schedules system assignment UI", "pr_createdAt": "2020-06-30T19:28:14Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2372", "timeline": [{"oid": "0bfb6f90105d53d811416bc2645b5ef182759fe5", "url": "https://github.com/uyuni-project/uyuni/commit/0bfb6f90105d53d811416bc2645b5ef182759fe5", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-02T22:23:29Z", "type": "forcePushed"}, {"oid": "3af64cffde8822641a2f53b0138a431b78983e85", "url": "https://github.com/uyuni-project/uyuni/commit/3af64cffde8822641a2f53b0138a431b78983e85", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-02T22:49:27Z", "type": "forcePushed"}, {"oid": "34654eddf4266a4710a3d729b1f993ca324c93ad", "url": "https://github.com/uyuni-project/uyuni/commit/34654eddf4266a4710a3d729b1f993ca324c93ad", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-03T00:01:18Z", "type": "forcePushed"}, {"oid": "1e3a88b51504ad877854d8eeac7a23e3eb66ed85", "url": "https://github.com/uyuni-project/uyuni/commit/1e3a88b51504ad877854d8eeac7a23e3eb66ed85", "message": "fixup! Add maintenance schedule form controls to system properties edit page", "committedDate": "2020-07-06T16:46:50Z", "type": "forcePushed"}, {"oid": "4bd7aedfa3dd11b39022b5709d7f567c6e69107d", "url": "https://github.com/uyuni-project/uyuni/commit/4bd7aedfa3dd11b39022b5709d7f567c6e69107d", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-06T16:48:45Z", "type": "forcePushed"}, {"oid": "19737707dddee6f7f983d1c7ff21e46084380dde", "url": "https://github.com/uyuni-project/uyuni/commit/19737707dddee6f7f983d1c7ff21e46084380dde", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-07T11:13:43Z", "type": "forcePushed"}, {"oid": "cffde60a4ac510bde5186882e23122c2c48b5fb9", "url": "https://github.com/uyuni-project/uyuni/commit/cffde60a4ac510bde5186882e23122c2c48b5fb9", "message": "Remove Hibernate rollback when reschedule strategies fail", "committedDate": "2020-07-08T18:17:21Z", "type": "forcePushed"}, {"oid": "1975f5ef71a23d3d058f8b19ed704e2a2f9c698b", "url": "https://github.com/uyuni-project/uyuni/commit/1975f5ef71a23d3d058f8b19ed704e2a2f9c698b", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-08T18:30:59Z", "type": "forcePushed"}, {"oid": "3260e542a9aebef65ef62a035cb58ddcc5ee0468", "url": "https://github.com/uyuni-project/uyuni/commit/3260e542a9aebef65ef62a035cb58ddcc5ee0468", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-09T11:29:33Z", "type": "forcePushed"}, {"oid": "1dd053988f6b0387b7f4798426b6dbf5a927566a", "url": "https://github.com/uyuni-project/uyuni/commit/1dd053988f6b0387b7f4798426b6dbf5a927566a", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-09T12:51:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MTg1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2372#discussion_r452061850", "bodyText": "Instead of propagating the error message directly, I would prefer to have a custom message that can be translated (I just realized I need to adapt this in one place as well)", "author": "parlt91", "createdAt": "2020-07-09T08:46:43Z", "path": "java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java", "diffHunk": "@@ -233,6 +240,59 @@ public static String deleteSchedule(Request request, Response response, User use\n         return json(response, ResultJson.success());\n     }\n \n+    private class SystemAssignmentRequest {\n+        private List<Long> systemIds;\n+        private boolean cancelActions;\n+    }\n+\n+    /**\n+     * Assign a schedule to systems\n+     *\n+     * @param request the request object\n+     * @param response the response obejct\n+     * @param user the authorized user\n+     * @return string containing the JSON response\n+     */\n+    public static String assignSchedule(Request request, Response response, User user) {\n+        response.type(\"application/json\");\n+        SystemAssignmentRequest reqData = GSON.fromJson(request.body(), SystemAssignmentRequest.class);\n+        List<Long> systemIds = reqData.systemIds;\n+\n+        Long scheduleId = Long.parseLong(request.params(\"id\"));\n+        MM.lookupScheduleByUserAndId(user, scheduleId).ifPresentOrElse(\n+                schedule -> {\n+                    try {\n+                        MM.assignScheduleToSystems(user, schedule, new HashSet<>(systemIds), reqData.cancelActions);\n+                    }\n+                    catch (LookupException | IllegalArgumentException e) {\n+                        Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));", "originalCommit": "e5baf9023bb2b48acdc8d6ffa1d8f60b2c6e731a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "034969bffe7eef78c6340a505bff4f4a014bc721", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\nindex 7215894d21b..880e1431946 100644\n--- a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n+++ b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n\n@@ -240,59 +228,6 @@ public class MaintenanceScheduleController {\n         return json(response, ResultJson.success());\n     }\n \n-    private class SystemAssignmentRequest {\n-        private List<Long> systemIds;\n-        private boolean cancelActions;\n-    }\n-\n-    /**\n-     * Assign a schedule to systems\n-     *\n-     * @param request the request object\n-     * @param response the response obejct\n-     * @param user the authorized user\n-     * @return string containing the JSON response\n-     */\n-    public static String assignSchedule(Request request, Response response, User user) {\n-        response.type(\"application/json\");\n-        SystemAssignmentRequest reqData = GSON.fromJson(request.body(), SystemAssignmentRequest.class);\n-        List<Long> systemIds = reqData.systemIds;\n-\n-        Long scheduleId = Long.parseLong(request.params(\"id\"));\n-        MM.lookupScheduleByUserAndId(user, scheduleId).ifPresentOrElse(\n-                schedule -> {\n-                    try {\n-                        MM.assignScheduleToSystems(user, schedule, new HashSet<>(systemIds), reqData.cancelActions);\n-                    }\n-                    catch (LookupException | IllegalArgumentException e) {\n-                        Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));\n-                    }\n-                },\n-                () -> Spark.halt(HttpStatus.SC_NOT_FOUND)\n-        );\n-        return json(response, ResultJson.success());\n-    }\n-\n-    /**\n-     * Unassign a schedule from systems\n-     *\n-     * @param request the request object\n-     * @param response the response obejct\n-     * @param user the authorized user\n-     * @return string containing the JSON response\n-     */\n-    public static String unassignSchedule(Request request, Response response, User user) {\n-        response.type(\"application/json\");\n-        List<Long> systemIds = Arrays.asList(GSON.fromJson(request.body(), Long[].class));\n-        try {\n-            MM.retractScheduleFromSystems(user, new HashSet<>(systemIds));\n-        }\n-        catch (LookupException e) {\n-            Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));\n-        }\n-        return json(response, ResultJson.success());\n-    }\n-\n     private static List<MaintenanceScheduleJson> schedulesToJson(List<MaintenanceSchedule> schedules) {\n         return schedules.stream().map(MaintenanceScheduleController::scheduleToJson).collect(Collectors.toList());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MjAxNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2372#discussion_r452062015", "bodyText": "Same here", "author": "parlt91", "createdAt": "2020-07-09T08:46:58Z", "path": "java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java", "diffHunk": "@@ -233,6 +240,59 @@ public static String deleteSchedule(Request request, Response response, User use\n         return json(response, ResultJson.success());\n     }\n \n+    private class SystemAssignmentRequest {\n+        private List<Long> systemIds;\n+        private boolean cancelActions;\n+    }\n+\n+    /**\n+     * Assign a schedule to systems\n+     *\n+     * @param request the request object\n+     * @param response the response obejct\n+     * @param user the authorized user\n+     * @return string containing the JSON response\n+     */\n+    public static String assignSchedule(Request request, Response response, User user) {\n+        response.type(\"application/json\");\n+        SystemAssignmentRequest reqData = GSON.fromJson(request.body(), SystemAssignmentRequest.class);\n+        List<Long> systemIds = reqData.systemIds;\n+\n+        Long scheduleId = Long.parseLong(request.params(\"id\"));\n+        MM.lookupScheduleByUserAndId(user, scheduleId).ifPresentOrElse(\n+                schedule -> {\n+                    try {\n+                        MM.assignScheduleToSystems(user, schedule, new HashSet<>(systemIds), reqData.cancelActions);\n+                    }\n+                    catch (LookupException | IllegalArgumentException e) {\n+                        Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));\n+                    }\n+                },\n+                () -> Spark.halt(HttpStatus.SC_NOT_FOUND)\n+        );\n+        return json(response, ResultJson.success());\n+    }\n+\n+    /**\n+     * Unassign a schedule from systems\n+     *\n+     * @param request the request object\n+     * @param response the response obejct\n+     * @param user the authorized user\n+     * @return string containing the JSON response\n+     */\n+    public static String unassignSchedule(Request request, Response response, User user) {\n+        response.type(\"application/json\");\n+        List<Long> systemIds = Arrays.asList(GSON.fromJson(request.body(), Long[].class));\n+        try {\n+            MM.retractScheduleFromSystems(user, new HashSet<>(systemIds));\n+        }\n+        catch (LookupException e) {\n+            Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));", "originalCommit": "e5baf9023bb2b48acdc8d6ffa1d8f60b2c6e731a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "034969bffe7eef78c6340a505bff4f4a014bc721", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\nindex 7215894d21b..880e1431946 100644\n--- a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n+++ b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n\n@@ -240,59 +228,6 @@ public class MaintenanceScheduleController {\n         return json(response, ResultJson.success());\n     }\n \n-    private class SystemAssignmentRequest {\n-        private List<Long> systemIds;\n-        private boolean cancelActions;\n-    }\n-\n-    /**\n-     * Assign a schedule to systems\n-     *\n-     * @param request the request object\n-     * @param response the response obejct\n-     * @param user the authorized user\n-     * @return string containing the JSON response\n-     */\n-    public static String assignSchedule(Request request, Response response, User user) {\n-        response.type(\"application/json\");\n-        SystemAssignmentRequest reqData = GSON.fromJson(request.body(), SystemAssignmentRequest.class);\n-        List<Long> systemIds = reqData.systemIds;\n-\n-        Long scheduleId = Long.parseLong(request.params(\"id\"));\n-        MM.lookupScheduleByUserAndId(user, scheduleId).ifPresentOrElse(\n-                schedule -> {\n-                    try {\n-                        MM.assignScheduleToSystems(user, schedule, new HashSet<>(systemIds), reqData.cancelActions);\n-                    }\n-                    catch (LookupException | IllegalArgumentException e) {\n-                        Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));\n-                    }\n-                },\n-                () -> Spark.halt(HttpStatus.SC_NOT_FOUND)\n-        );\n-        return json(response, ResultJson.success());\n-    }\n-\n-    /**\n-     * Unassign a schedule from systems\n-     *\n-     * @param request the request object\n-     * @param response the response obejct\n-     * @param user the authorized user\n-     * @return string containing the JSON response\n-     */\n-    public static String unassignSchedule(Request request, Response response, User user) {\n-        response.type(\"application/json\");\n-        List<Long> systemIds = Arrays.asList(GSON.fromJson(request.body(), Long[].class));\n-        try {\n-            MM.retractScheduleFromSystems(user, new HashSet<>(systemIds));\n-        }\n-        catch (LookupException e) {\n-            Spark.halt(HttpStatus.SC_BAD_REQUEST, GSON.toJson(ResultJson.error(e.getMessage())));\n-        }\n-        return json(response, ResultJson.success());\n-    }\n-\n     private static List<MaintenanceScheduleJson> schedulesToJson(List<MaintenanceSchedule> schedules) {\n         return schedules.stream().map(MaintenanceScheduleController::scheduleToJson).collect(Collectors.toList());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwNTE2Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2372#discussion_r452205167", "bodyText": "I wonder whether we should move this one to the SsmController instead. At least that's where I would expect this to be found.", "author": "parlt91", "createdAt": "2020-07-09T13:10:49Z", "path": "java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java", "diffHunk": "@@ -115,6 +118,22 @@ public static ModelAndView maintenanceSchedules(Request request, Response respon\n         return new ModelAndView(params, \"templates/schedule/maintenance-windows.jade\");\n     }\n \n+    /**\n+     * Handler for the SSM schedule assignment page.\n+     *\n+     * @param request the request object\n+     * @param response the response object\n+     * @param user the current user\n+     * @return the ModelAndView object to render the page\n+     */\n+    public static ModelAndView ssmSchedules(Request request, Response response, User user) {", "originalCommit": "3abd5e7e85ac9cc4fef4514c1e507b498ce434d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5NTcyOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2372#discussion_r455695729", "bodyText": "SSM is generally structured as a collection of operations from various domains and every domain adds it's own functionality from it's own namespace. For example: ssm/highstate is served from MinionController.", "author": "cbbayburt", "createdAt": "2020-07-16T10:45:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwNTE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "034969bffe7eef78c6340a505bff4f4a014bc721", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\nindex 0ee88cbb50c..880e1431946 100644\n--- a/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n+++ b/java/code/src/com/suse/manager/webui/controllers/maintenance/MaintenanceScheduleController.java\n\n@@ -118,22 +103,6 @@ public class MaintenanceScheduleController {\n         return new ModelAndView(params, \"templates/schedule/maintenance-windows.jade\");\n     }\n \n-    /**\n-     * Handler for the SSM schedule assignment page.\n-     *\n-     * @param request the request object\n-     * @param response the response object\n-     * @param user the current user\n-     * @return the ModelAndView object to render the page\n-     */\n-    public static ModelAndView ssmSchedules(Request request, Response response, User user) {\n-        List<Long> systemIds = SsmManager.listServerIds(user);\n-\n-        Map<String, Object> data = new HashMap<>();\n-        data.put(\"systems\", GSON.toJson(systemIds));\n-        return new ModelAndView(data, \"templates/ssm/schedules.jade\");\n-    }\n-\n     /**\n      * Processes a GET request to get a list of all Maintenance Schedules visible to given user\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1MjcxNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2372#discussion_r452852714", "bodyText": "Nit: Maybe debug would be more fitting in these 3 scenarios?", "author": "hustodemon", "createdAt": "2020-07-10T13:44:44Z", "path": "java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java", "diffHunk": "@@ -167,6 +175,31 @@ else if (selectedEnt.equals(UNENTITLE)) {\n         s.getLocation().setRoom(daForm.getString(ROOM));\n         s.getLocation().setRack(daForm.getString(RACK));\n \n+        // Assign maintenance schedule\n+        Long scheduleId = (Long) daForm.get(MAINTENANCE_SCHEDULE);\n+\n+        if (scheduleId != null && scheduleId != 0) {\n+            // Assign schedule\n+            MaintenanceSchedule schedule = maintenanceManager.lookupScheduleByUserAndId(user, scheduleId).get();\n+            boolean cancelAffected = Boolean.TRUE.equals(daForm.get(MAINTENANCE_CANCEL_AFFECTED));\n+            try {\n+                maintenanceManager.assignScheduleToSystems(user, schedule, Collections.singleton(s.getId()),\n+                        cancelAffected);\n+                log.info(String.format(\"System %s assigned to schedule %s.\", s.getId(), schedule.getName()));", "originalCommit": "bfe79d976f4f18e851329a28f21e6aea08fc28ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "034969bffe7eef78c6340a505bff4f4a014bc721", "chunk": "diff --git a/java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java b/java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java\nindex c6393662962..19274b79481 100644\n--- a/java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java\n+++ b/java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemDetailsEditAction.java\n\n@@ -175,31 +167,6 @@ public class SystemDetailsEditAction extends RhnAction {\n         s.getLocation().setRoom(daForm.getString(ROOM));\n         s.getLocation().setRack(daForm.getString(RACK));\n \n-        // Assign maintenance schedule\n-        Long scheduleId = (Long) daForm.get(MAINTENANCE_SCHEDULE);\n-\n-        if (scheduleId != null && scheduleId != 0) {\n-            // Assign schedule\n-            MaintenanceSchedule schedule = maintenanceManager.lookupScheduleByUserAndId(user, scheduleId).get();\n-            boolean cancelAffected = Boolean.TRUE.equals(daForm.get(MAINTENANCE_CANCEL_AFFECTED));\n-            try {\n-                maintenanceManager.assignScheduleToSystems(user, schedule, Collections.singleton(s.getId()),\n-                        cancelAffected);\n-                log.info(String.format(\"System %s assigned to schedule %s.\", s.getId(), schedule.getName()));\n-            }\n-            catch (IllegalArgumentException e) {\n-                log.info(e);\n-                getStrutsDelegate().addError(\"maintenance.action.assign.error.fail\", errors);\n-                success = false;\n-            }\n-        }\n-        else if (s.getMaintenanceScheduleOpt().isPresent()) {\n-            // Retract schedule\n-            String scheduleName = s.getMaintenanceScheduleOpt().get().getName();\n-            maintenanceManager.retractScheduleFromSystems(user, Collections.singleton(s.getId()));\n-            log.info(String.format(\"System %s unassigned from schedule %s.\", s.getId(), scheduleName));\n-        }\n-\n         /* If the server does not have a Base Entitlement\n          * the user should not be updating these values\n          * no matter what the form they are submitting looks\n"}}, {"oid": "034969bffe7eef78c6340a505bff4f4a014bc721", "url": "https://github.com/uyuni-project/uyuni/commit/034969bffe7eef78c6340a505bff4f4a014bc721", "message": "Change execution order in the 'assignScheduleToSystemWithPendingActions' test", "committedDate": "2020-07-16T11:13:36Z", "type": "commit"}, {"oid": "acc5fb6da54e236aeb0840784fc147b9b92cf768", "url": "https://github.com/uyuni-project/uyuni/commit/acc5fb6da54e236aeb0840784fc147b9b92cf768", "message": "Add option to cancel affected actions when assigning schedules to systems", "committedDate": "2020-07-16T11:13:37Z", "type": "commit"}, {"oid": "49f915529cce85633dc35d233c0728798910539f", "url": "https://github.com/uyuni-project/uyuni/commit/49f915529cce85633dc35d233c0728798910539f", "message": "Add reschedule strategy parameter to the system assignment XMLRPC endpoint", "committedDate": "2020-07-16T11:13:37Z", "type": "commit"}, {"oid": "6a6ff46e861a494bd658fe1d16545ad2def7a28f", "url": "https://github.com/uyuni-project/uyuni/commit/6a6ff46e861a494bd658fe1d16545ad2def7a28f", "message": "API endpoints for assigning maintenance schedules to systems", "committedDate": "2020-07-16T11:16:09Z", "type": "commit"}, {"oid": "076c5a3eb377f15596cb720a86060af7f08a50a4", "url": "https://github.com/uyuni-project/uyuni/commit/076c5a3eb377f15596cb720a86060af7f08a50a4", "message": "Add maintenance schedule assignment page under 'Misc' tab to SSM", "committedDate": "2020-07-16T11:17:59Z", "type": "commit"}, {"oid": "7dea483034f532ed652b20cbbbe763c548f03d98", "url": "https://github.com/uyuni-project/uyuni/commit/7dea483034f532ed652b20cbbbe763c548f03d98", "message": "Show currently assigned maintenance schedule in system properties panel", "committedDate": "2020-07-16T11:18:00Z", "type": "commit"}, {"oid": "a3c0e450312f87e0ff16b5a377d572af1b50d88e", "url": "https://github.com/uyuni-project/uyuni/commit/a3c0e450312f87e0ff16b5a377d572af1b50d88e", "message": "Add maintenance schedule form controls to system properties edit page", "committedDate": "2020-07-16T11:18:00Z", "type": "commit"}, {"oid": "d2ad16d06db90bbef60b454a52b8d1c433575533", "url": "https://github.com/uyuni-project/uyuni/commit/d2ad16d06db90bbef60b454a52b8d1c433575533", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-16T11:38:28Z", "type": "commit"}, {"oid": "d2ad16d06db90bbef60b454a52b8d1c433575533", "url": "https://github.com/uyuni-project/uyuni/commit/d2ad16d06db90bbef60b454a52b8d1c433575533", "message": "Add system assignment tab to maintenance schedule details page", "committedDate": "2020-07-16T11:38:28Z", "type": "forcePushed"}]}