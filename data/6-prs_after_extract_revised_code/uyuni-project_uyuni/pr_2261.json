{"pr_number": 2261, "pr_title": "allow channel change event to apply the new channel state", "pr_createdAt": "2020-05-27T14:16:08Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2261", "timeline": [{"oid": "4e7cd85b60f3b9b55e3c1d96101274f321f36e54", "url": "https://github.com/uyuni-project/uyuni/commit/4e7cd85b60f3b9b55e3c1d96101274f321f36e54", "message": "unproxy action", "committedDate": "2020-05-27T15:34:07Z", "type": "forcePushed"}, {"oid": "a03642c5bf12f67396e53d9c2302e11ad6a69799", "url": "https://github.com/uyuni-project/uyuni/commit/a03642c5bf12f67396e53d9c2302e11ad6a69799", "message": "fix unit test", "committedDate": "2020-05-28T08:59:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg1Njg3Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2261#discussion_r431856872", "bodyText": "Nit: For an immutable collection of fixed-size elements, you can use neater way: List.of(<varargs>) (analogous: Set.of(...), Map.of(...)).", "author": "hustodemon", "createdAt": "2020-05-28T13:59:27Z", "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "diffHunk": "@@ -112,8 +114,17 @@ public void checkMaintenanceWindows(Set<Long> systemIds, Action action) {\n         Date scheduleDate = action.getEarliestAction();\n \n         // we only take maintenance-mode-only actions and actions that don't have prerequisite\n-        // (first actions in action choins) into account\n+        // (first actions in action chains) into account\n         if (action.getActionType().isMaintenancemodeOnly() && action.getPrerequisite() == null) {\n+            // Special Case: we want to allow channel changing but it calls a state.apply\n+            if (action.getActionType().equals(ActionFactory.TYPE_APPLY_STATES)) {\n+                ApplyStatesAction applyStatesAction = (ApplyStatesAction) HibernateFactory.unproxy(action);\n+                if (applyStatesAction.getDetails() != null &&\n+                        applyStatesAction.getDetails().getMods().equals(\n+                            Collections.singletonList(ApplyStatesEventMessage.CHANNELS))) {", "originalCommit": "5d7bb1b218ae55214aef93796dedbba4dedf3c29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc0MjY5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2261#discussion_r433742699", "bodyText": "good to know. Changed and rebased.", "author": "mcalmer", "createdAt": "2020-06-02T09:27:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg1Njg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6e581f5febb0cd2cf7e6d6d5fc40364ac9849d07", "chunk": "diff --git a/java/code/src/com/suse/manager/maintenance/MaintenanceManager.java b/java/code/src/com/suse/manager/maintenance/MaintenanceManager.java\nindex 94eee5bcc4e..4c8498c039f 100644\n--- a/java/code/src/com/suse/manager/maintenance/MaintenanceManager.java\n+++ b/java/code/src/com/suse/manager/maintenance/MaintenanceManager.java\n\n@@ -118,10 +118,10 @@ public class MaintenanceManager {\n         if (action.getActionType().isMaintenancemodeOnly() && action.getPrerequisite() == null) {\n             // Special Case: we want to allow channel changing but it calls a state.apply\n             if (action.getActionType().equals(ActionFactory.TYPE_APPLY_STATES)) {\n-                ApplyStatesAction applyStatesAction = (ApplyStatesAction) HibernateFactory.unproxy(action);\n+                ApplyStatesAction applyStatesAction = (ApplyStatesAction) action;\n                 if (applyStatesAction.getDetails() != null &&\n                         applyStatesAction.getDetails().getMods().equals(\n-                            Collections.singletonList(ApplyStatesEventMessage.CHANNELS))) {\n+                            List.of(ApplyStatesEventMessage.CHANNELS))) {\n                     return;\n                 }\n             }\n"}}, {"oid": "6e581f5febb0cd2cf7e6d6d5fc40364ac9849d07", "url": "https://github.com/uyuni-project/uyuni/commit/6e581f5febb0cd2cf7e6d6d5fc40364ac9849d07", "message": "allow channel change event to apply the new channel state", "committedDate": "2020-06-02T09:26:29Z", "type": "commit"}, {"oid": "20f58260e725d39908ae2f5480ea716084d7c909", "url": "https://github.com/uyuni-project/uyuni/commit/20f58260e725d39908ae2f5480ea716084d7c909", "message": "fix unit test", "committedDate": "2020-06-02T09:26:29Z", "type": "commit"}, {"oid": "5896641ada24b502c619268fdd8cc8a5d75d7306", "url": "https://github.com/uyuni-project/uyuni/commit/5896641ada24b502c619268fdd8cc8a5d75d7306", "message": "workaround race condition in DebReleaseWriterTest", "committedDate": "2020-06-02T09:26:29Z", "type": "commit"}, {"oid": "6f351fca3373391f52777f99c872beac2100ab70", "url": "https://github.com/uyuni-project/uyuni/commit/6f351fca3373391f52777f99c872beac2100ab70", "message": "unit test: schedule state.apply with just channels", "committedDate": "2020-06-02T09:26:29Z", "type": "commit"}, {"oid": "6f351fca3373391f52777f99c872beac2100ab70", "url": "https://github.com/uyuni-project/uyuni/commit/6f351fca3373391f52777f99c872beac2100ab70", "message": "unit test: schedule state.apply with just channels", "committedDate": "2020-06-02T09:26:29Z", "type": "forcePushed"}]}