{"pr_number": 1984, "pr_title": "Virt pool refresh", "pr_createdAt": "2020-03-05T13:57:48Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/1984", "timeline": [{"oid": "b1c9a5ed8313554ab2280feda2a5a69f47dda695", "url": "https://github.com/uyuni-project/uyuni/commit/b1c9a5ed8313554ab2280feda2a5a69f47dda695", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-05T14:06:19Z", "type": "forcePushed"}, {"oid": "8b5c42785291e7edd6e1a26b6eb639f1b83067f9", "url": "https://github.com/uyuni-project/uyuni/commit/8b5c42785291e7edd6e1a26b6eb639f1b83067f9", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-05T16:15:04Z", "type": "forcePushed"}, {"oid": "6d46c8642351d4638441e0ac7eddd04422efe0bb", "url": "https://github.com/uyuni-project/uyuni/commit/6d46c8642351d4638441e0ac7eddd04422efe0bb", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-05T17:19:41Z", "type": "forcePushed"}, {"oid": "5cc829468c1c1a60afc3b760379445277b3724b3", "url": "https://github.com/uyuni-project/uyuni/commit/5cc829468c1c1a60afc3b760379445277b3724b3", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-06T13:39:19Z", "type": "forcePushed"}, {"oid": "738e045fd8af0832d8f44f15c85a69e112d820f6", "url": "https://github.com/uyuni-project/uyuni/commit/738e045fd8af0832d8f44f15c85a69e112d820f6", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-09T13:56:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcwMjc2MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r389702760", "bodyText": "We have 2020 :-)", "author": "mcalmer", "createdAt": "2020-03-09T14:02:52Z", "path": "java/code/src/com/redhat/rhn/domain/action/virtualization/BaseVirtualizationPoolAction.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "originalCommit": "738e045fd8af0832d8f44f15c85a69e112d820f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3OTExNA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r389779114", "bodyText": "oh right... old commit only now submitted for review. I'll fix them", "author": "cbosdo", "createdAt": "2020-03-09T15:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcwMjc2MA=="}], "type": "inlineReview", "revised_code": {"commit": "d392522c8cc542208b64cbcb9cdd9ad4df146fcb", "chunk": "diff --git a/java/code/src/com/redhat/rhn/domain/action/virtualization/BaseVirtualizationPoolAction.java b/java/code/src/com/redhat/rhn/domain/action/virtualization/BaseVirtualizationPoolAction.java\nindex 4e3b57ab329..bc919351be3 100644\n--- a/java/code/src/com/redhat/rhn/domain/action/virtualization/BaseVirtualizationPoolAction.java\n+++ b/java/code/src/com/redhat/rhn/domain/action/virtualization/BaseVirtualizationPoolAction.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright (c) 2019 SUSE LLC\n+ * Copyright (c) 2020 SUSE LLC\n  *\n  * This software is licensed to you under the GNU General Public License,\n  * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcwMjk3NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r389702975", "bodyText": "2020", "author": "mcalmer", "createdAt": "2020-03-09T14:03:04Z", "path": "java/code/src/com/redhat/rhn/domain/action/virtualization/VirtualizationPoolRefreshAction.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "originalCommit": "738e045fd8af0832d8f44f15c85a69e112d820f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d392522c8cc542208b64cbcb9cdd9ad4df146fcb", "chunk": "diff --git a/java/code/src/com/redhat/rhn/domain/action/virtualization/VirtualizationPoolRefreshAction.java b/java/code/src/com/redhat/rhn/domain/action/virtualization/VirtualizationPoolRefreshAction.java\nindex 06ef91a5ac7..58226a9dae0 100644\n--- a/java/code/src/com/redhat/rhn/domain/action/virtualization/VirtualizationPoolRefreshAction.java\n+++ b/java/code/src/com/redhat/rhn/domain/action/virtualization/VirtualizationPoolRefreshAction.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright (c) 2019 SUSE LLC\n+ * Copyright (c) 2020 SUSE LLC\n  *\n  * This software is licensed to you under the GNU General Public License,\n  * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3MjYyMA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r389772620", "bodyText": "2020", "author": "mcalmer", "createdAt": "2020-03-09T15:36:38Z", "path": "java/code/src/com/suse/manager/webui/utils/gson/VirtualPoolBaseActionJson.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "originalCommit": "738e045fd8af0832d8f44f15c85a69e112d820f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d392522c8cc542208b64cbcb9cdd9ad4df146fcb", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/utils/gson/VirtualPoolBaseActionJson.java b/java/code/src/com/suse/manager/webui/utils/gson/VirtualPoolBaseActionJson.java\nindex d263d7a0475..e06f93950b8 100644\n--- a/java/code/src/com/suse/manager/webui/utils/gson/VirtualPoolBaseActionJson.java\n+++ b/java/code/src/com/suse/manager/webui/utils/gson/VirtualPoolBaseActionJson.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright (c) 2019 SUSE LLC\n+ * Copyright (c) 2020 SUSE LLC\n  *\n  * This software is licensed to you under the GNU General Public License,\n  * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n"}}, {"oid": "d392522c8cc542208b64cbcb9cdd9ad4df146fcb", "url": "https://github.com/uyuni-project/uyuni/commit/d392522c8cc542208b64cbcb9cdd9ad4df146fcb", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-09T16:49:17Z", "type": "forcePushed"}, {"oid": "86d2f629d96acccab7ef9ba360bf43a2846e9b91", "url": "https://github.com/uyuni-project/uyuni/commit/86d2f629d96acccab7ef9ba360bf43a2846e9b91", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-10T10:11:11Z", "type": "forcePushed"}, {"oid": "9b7cab21275f8b3d81fab91056ba66563753b043", "url": "https://github.com/uyuni-project/uyuni/commit/9b7cab21275f8b3d81fab91056ba66563753b043", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-11T15:20:01Z", "type": "forcePushed"}, {"oid": "0985b2bf2caf7c0e950cce1b85d82e2af8aeebc0", "url": "https://github.com/uyuni-project/uyuni/commit/0985b2bf2caf7c0e950cce1b85d82e2af8aeebc0", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-11T16:18:13Z", "type": "forcePushed"}, {"oid": "39232ff63117d0c6b4bfac87e3d1782b386dec4a", "url": "https://github.com/uyuni-project/uyuni/commit/39232ff63117d0c6b4bfac87e3d1782b386dec4a", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-12T07:13:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NTc5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391495799", "bodyText": "How big is typically the job result (in case of both success and error)? (I suppose it's pretty small.)", "author": "hustodemon", "createdAt": "2020-03-12T09:32:13Z", "path": "java/code/src/com/suse/manager/utils/SaltUtils.java", "diffHunk": "@@ -659,6 +660,12 @@ else if (action instanceof BaseVirtualizationAction) {\n             String key = result.keySet().iterator().next();\n             serverAction.setResultMsg(result.get(key).getAsJsonObject().get(\"comment\").getAsString());\n         }\n+        else if (action instanceof BaseVirtualizationPoolAction) {\n+            // Tell VirtNotifications that we got a pool action change, passing action\n+            VirtNotifications.spreadActionUpdate(action);\n+            // Intentionally don't get only the comment since the changes value could be interesting\n+            serverAction.setResultMsg(getJsonResultWithPrettyPrint(jsonResult));", "originalCommit": "166923f5bec17e34f96ca240b4018e12049e55d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzMTQzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391531430", "bodyText": "It's rather small here.", "author": "cbosdo", "createdAt": "2020-03-12T10:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NTc5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c786ff8197f7e5e26de777e9485b0ec7ac512a6", "chunk": "diff --git a/java/code/src/com/suse/manager/utils/SaltUtils.java b/java/code/src/com/suse/manager/utils/SaltUtils.java\nindex 43a657c58f1..a99b805da11 100644\n--- a/java/code/src/com/suse/manager/utils/SaltUtils.java\n+++ b/java/code/src/com/suse/manager/utils/SaltUtils.java\n\n@@ -660,12 +660,6 @@ public class SaltUtils {\n             String key = result.keySet().iterator().next();\n             serverAction.setResultMsg(result.get(key).getAsJsonObject().get(\"comment\").getAsString());\n         }\n-        else if (action instanceof BaseVirtualizationPoolAction) {\n-            // Tell VirtNotifications that we got a pool action change, passing action\n-            VirtNotifications.spreadActionUpdate(action);\n-            // Intentionally don't get only the comment since the changes value could be interesting\n-            serverAction.setResultMsg(getJsonResultWithPrettyPrint(jsonResult));\n-        }\n         else {\n            serverAction.setResultMsg(getJsonResultWithPrettyPrint(jsonResult));\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNTc3MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391515770", "bodyText": "I wonder about the behavior of the pool-refreshed.sls (and in turn of the virt.pool_refresh execution module as well) if the pool name is null. Does it refresh all pools/the default one/...?", "author": "hustodemon", "createdAt": "2020-03-12T10:07:08Z", "path": "java/code/src/com/suse/manager/webui/controllers/VirtualPoolsController.java", "diffHunk": "@@ -220,4 +269,68 @@ private static ModelAndView renderPage(Request request, Response response, User\n \n         return new ModelAndView(data, String.format(\"templates/virtualization/pools/%s.jade\", template));\n     }\n+\n+    private static String poolAction(Request request, Response response, User user,\n+            Function<VirtualPoolBaseActionJson, BaseVirtualizationPoolAction> actionCreator) {\n+        return poolAction(request, response, user, actionCreator, VirtualPoolBaseActionJson.class);\n+    }\n+\n+    private static String poolAction(Request request, Response response, User user,\n+            Function<VirtualPoolBaseActionJson, BaseVirtualizationPoolAction> actionCreator,\n+            Class<? extends VirtualPoolBaseActionJson> jsonClass) {\n+        Long serverId;\n+\n+        try {\n+            serverId = Long.parseLong(request.params(\"sid\"));\n+        }\n+        catch (NumberFormatException e) {\n+            throw new NotFoundException();\n+        }\n+        Server host = SystemManager.lookupByIdAndUser(serverId, user);\n+\n+        VirtualPoolBaseActionJson data;\n+        try {\n+            data = GSON.fromJson(request.body(), jsonClass);\n+        }\n+        catch (JsonParseException e) {\n+            throw Spark.halt(HttpStatus.SC_BAD_REQUEST);\n+        }\n+\n+        if (!data.getPoolNames().isEmpty()) {\n+            Map<String, String> actionsResults = data.getPoolNames().stream().collect(\n+                    Collectors.toMap(Function.identity(),\n+                poolName -> {\n+                    return scheduleAction(poolName, user, host, actionCreator, data);\n+                }\n+            ));\n+            return json(response, actionsResults);\n+        }\n+\n+        String result = scheduleAction(null, user, host, actionCreator, data);", "originalCommit": "bade3e08fc622c6f2e3829cb48ac5817617c4c02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzNjkyMg==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391536922", "bodyText": "That should not happen since the UI prevents that. But if that really happens, salt will happily pass it to libvirt which in turn will raise an exception.", "author": "cbosdo", "createdAt": "2020-03-12T10:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU4ODA0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391588040", "bodyText": "In this case, why do we need this code here? Is this for other types of pool actions (in other PRs)?", "author": "hustodemon", "createdAt": "2020-03-12T12:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU4OTE4Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/1984#discussion_r391589186", "bodyText": "yes it's for the other types of pool actions", "author": "cbosdo", "createdAt": "2020-03-12T12:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNTc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "4c786ff8197f7e5e26de777e9485b0ec7ac512a6", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/controllers/VirtualPoolsController.java b/java/code/src/com/suse/manager/webui/controllers/VirtualPoolsController.java\nindex a149c65f74d..99a363f43b8 100644\n--- a/java/code/src/com/suse/manager/webui/controllers/VirtualPoolsController.java\n+++ b/java/code/src/com/suse/manager/webui/controllers/VirtualPoolsController.java\n\n@@ -269,68 +228,4 @@ public class VirtualPoolsController {\n \n         return new ModelAndView(data, String.format(\"templates/virtualization/pools/%s.jade\", template));\n     }\n-\n-    private static String poolAction(Request request, Response response, User user,\n-            Function<VirtualPoolBaseActionJson, BaseVirtualizationPoolAction> actionCreator) {\n-        return poolAction(request, response, user, actionCreator, VirtualPoolBaseActionJson.class);\n-    }\n-\n-    private static String poolAction(Request request, Response response, User user,\n-            Function<VirtualPoolBaseActionJson, BaseVirtualizationPoolAction> actionCreator,\n-            Class<? extends VirtualPoolBaseActionJson> jsonClass) {\n-        Long serverId;\n-\n-        try {\n-            serverId = Long.parseLong(request.params(\"sid\"));\n-        }\n-        catch (NumberFormatException e) {\n-            throw new NotFoundException();\n-        }\n-        Server host = SystemManager.lookupByIdAndUser(serverId, user);\n-\n-        VirtualPoolBaseActionJson data;\n-        try {\n-            data = GSON.fromJson(request.body(), jsonClass);\n-        }\n-        catch (JsonParseException e) {\n-            throw Spark.halt(HttpStatus.SC_BAD_REQUEST);\n-        }\n-\n-        if (!data.getPoolNames().isEmpty()) {\n-            Map<String, String> actionsResults = data.getPoolNames().stream().collect(\n-                    Collectors.toMap(Function.identity(),\n-                poolName -> {\n-                    return scheduleAction(poolName, user, host, actionCreator, data);\n-                }\n-            ));\n-            return json(response, actionsResults);\n-        }\n-\n-        String result = scheduleAction(null, user, host, actionCreator, data);\n-        return json(response, result);\n-    }\n-\n-    private static String scheduleAction(String poolName, User user, Server host,\n-            Function<VirtualPoolBaseActionJson, BaseVirtualizationPoolAction> actionCreator,\n-            VirtualPoolBaseActionJson data) {\n-        BaseVirtualizationPoolAction action = actionCreator.apply(data);\n-        action.setOrg(user.getOrg());\n-        action.setSchedulerUser(user);\n-        action.setEarliestAction(MinionActionUtils.getScheduleDate(data.getEarliest()));\n-        action.setPoolName(poolName);\n-\n-        Optional<ActionChain> actionChain = data.getActionChain()\n-                .filter(StringUtils::isNotEmpty)\n-                .map(label -> ActionChainFactory.getOrCreateActionChain(label, user));\n-\n-        String status = \"Failed\";\n-        try {\n-            VirtualizationActionCommand.schedule(action, host, actionChain);\n-            status = action.getId().toString();\n-        }\n-        catch (TaskomaticApiException e) {\n-            LOG.error(\"Could not schedule virtualization action:\", e);\n-        }\n-        return status;\n-    }\n }\n"}}, {"oid": "5476b39185609eca6241ff22ab343004b4d7e594", "url": "https://github.com/uyuni-project/uyuni/commit/5476b39185609eca6241ff22ab343004b4d7e594", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-12T12:36:19Z", "type": "forcePushed"}, {"oid": "c1a71e7cc954fe26443dac01e9831894b685d631", "url": "https://github.com/uyuni-project/uyuni/commit/c1a71e7cc954fe26443dac01e9831894b685d631", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-13T15:59:10Z", "type": "forcePushed"}, {"oid": "4c786ff8197f7e5e26de777e9485b0ec7ac512a6", "url": "https://github.com/uyuni-project/uyuni/commit/4c786ff8197f7e5e26de777e9485b0ec7ac512a6", "message": "Add cucumber steps to work with trees", "committedDate": "2020-03-23T07:43:26Z", "type": "commit"}, {"oid": "97c64f73205d6de2cbc0e66d304d4c7164cac3ef", "url": "https://github.com/uyuni-project/uyuni/commit/97c64f73205d6de2cbc0e66d304d4c7164cac3ef", "message": "Add virtual pool refresh action\n\nAdd the base virtual pool action class and the refresh action", "committedDate": "2020-03-23T07:43:26Z", "type": "commit"}, {"oid": "167c3d6e3477cbec24a3acc84864df4581071d9a", "url": "https://github.com/uyuni-project/uyuni/commit/167c3d6e3477cbec24a3acc84864df4581071d9a", "message": "Add virtual pool refresh action Salt implementation", "committedDate": "2020-03-23T07:43:27Z", "type": "commit"}, {"oid": "361d0b28dc1cadce51e4fb73be689ccb7671a344", "url": "https://github.com/uyuni-project/uyuni/commit/361d0b28dc1cadce51e4fb73be689ccb7671a344", "message": "Handle VirtNotifications for pool actions", "committedDate": "2020-03-23T07:43:27Z", "type": "commit"}, {"oid": "facf168a23e3bc8b845cf6cda035a92002b487a5", "url": "https://github.com/uyuni-project/uyuni/commit/facf168a23e3bc8b845cf6cda035a92002b487a5", "message": "Add REST API to trigger virtual pool refresh action", "committedDate": "2020-03-23T08:21:41Z", "type": "commit"}, {"oid": "a36f61fdb75cf309cef84dfb17be23dcf74683f4", "url": "https://github.com/uyuni-project/uyuni/commit/a36f61fdb75cf309cef84dfb17be23dcf74683f4", "message": "Add virtual pool refresh action UI and cucumber test", "committedDate": "2020-03-23T08:21:43Z", "type": "commit"}, {"oid": "5030ac022b9277a2af9427f49ea384b6d4beb91c", "url": "https://github.com/uyuni-project/uyuni/commit/5030ac022b9277a2af9427f49ea384b6d4beb91c", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-23T08:21:43Z", "type": "commit"}, {"oid": "5030ac022b9277a2af9427f49ea384b6d4beb91c", "url": "https://github.com/uyuni-project/uyuni/commit/5030ac022b9277a2af9427f49ea384b6d4beb91c", "message": "Add actions status notification in virt storage pool list\n\nSince the actions status will need to be reported, add notification\nusing the useVirtNotification hook.\nAlso add a column with no title for the actions status.", "committedDate": "2020-03-23T08:21:43Z", "type": "forcePushed"}]}