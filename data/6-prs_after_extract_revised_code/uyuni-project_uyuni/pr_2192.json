{"pr_number": 2192, "pr_title": "CLM AppStream filters: module picker controls", "pr_createdAt": "2020-05-07T22:23:29Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2192", "timeline": [{"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a", "url": "https://github.com/uyuni-project/uyuni/commit/4337f2be7c5b0d5ebf4504110c2e32e80b3b291a", "message": "Implement module picker controls for CLM AppStream filters", "committedDate": "2020-05-07T22:26:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzMDMzMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r422130331", "bodyText": "Nit: is the return needed? AFAIK, Spark.halt throws an exception.", "author": "hustodemon", "createdAt": "2020-05-08T13:03:44Z", "path": "java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.controllers.contentmanagement.handlers;\n+\n+import com.redhat.rhn.domain.channel.Channel;\n+import com.redhat.rhn.domain.contentmgmt.modulemd.ModulemdApi;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.manager.channel.ChannelManager;\n+import com.suse.manager.webui.utils.gson.ResultJson;\n+import org.apache.http.HttpStatus;\n+import spark.Request;\n+import spark.Response;\n+import spark.Spark;\n+\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.json;\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.withUser;\n+import static spark.Spark.get;\n+\n+/**\n+ * Spark controller ContentManagement AppStreams API\n+ */\n+public class AppStreamsApiController {\n+\n+    private static ModulemdApi api = new ModulemdApi();\n+\n+    private AppStreamsApiController() { }\n+\n+    /** Init routes for ContentManagement AppStreams Api.*/\n+    public static void initRoutes() {\n+        get(\"/manager/api/contentmanagement/appstreams/:channelId\",\n+                withUser(AppStreamsApiController::getModulesInChannel));\n+    }\n+\n+    /**\n+     * Return the JSON with all the available module streams for a specified modular channel\n+     *\n+     * @param req the http request\n+     * @param res the http response\n+     * @param user the current user\n+     * @return the JSON data\n+     */\n+    public static String getModulesInChannel(Request req, Response res, User user) {\n+        try {\n+            Channel channel = ChannelManager.lookupByIdAndUser(Long.parseLong(req.params(\"channelId\")), user);\n+            return json(res, ResultJson.success(api.getAllModulesInChannel(channel)));\n+        }\n+        catch (NumberFormatException e) {\n+            Spark.halt(HttpStatus.SC_BAD_REQUEST);\n+            return null;", "originalCommit": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0MjQ0NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r423542445", "bodyText": "Agreed, this is not needed", "author": "cbosdo", "createdAt": "2020-05-12T08:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzMDMzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8b0058790aa66f4989c81ec81146a007092c1979", "chunk": "diff --git a/java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java b/java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java\ndeleted file mode 100644\nindex 2f3d8a8bed2..00000000000\n--- a/java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java\n+++ /dev/null\n\n@@ -1,65 +0,0 @@\n-/**\n- * Copyright (c) 2019 SUSE LLC\n- *\n- * This software is licensed to you under the GNU General Public License,\n- * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n- * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n- * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n- * along with this software; if not, see\n- * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n- *\n- * Red Hat trademarks are not licensed under GPLv2. No permission is\n- * granted to use or replicate Red Hat trademarks that are incorporated\n- * in this software or its documentation.\n- */\n-package com.suse.manager.webui.controllers.contentmanagement.handlers;\n-\n-import com.redhat.rhn.domain.channel.Channel;\n-import com.redhat.rhn.domain.contentmgmt.modulemd.ModulemdApi;\n-import com.redhat.rhn.domain.user.User;\n-import com.redhat.rhn.manager.channel.ChannelManager;\n-import com.suse.manager.webui.utils.gson.ResultJson;\n-import org.apache.http.HttpStatus;\n-import spark.Request;\n-import spark.Response;\n-import spark.Spark;\n-\n-import static com.suse.manager.webui.utils.SparkApplicationHelper.json;\n-import static com.suse.manager.webui.utils.SparkApplicationHelper.withUser;\n-import static spark.Spark.get;\n-\n-/**\n- * Spark controller ContentManagement AppStreams API\n- */\n-public class AppStreamsApiController {\n-\n-    private static ModulemdApi api = new ModulemdApi();\n-\n-    private AppStreamsApiController() { }\n-\n-    /** Init routes for ContentManagement AppStreams Api.*/\n-    public static void initRoutes() {\n-        get(\"/manager/api/contentmanagement/appstreams/:channelId\",\n-                withUser(AppStreamsApiController::getModulesInChannel));\n-    }\n-\n-    /**\n-     * Return the JSON with all the available module streams for a specified modular channel\n-     *\n-     * @param req the http request\n-     * @param res the http response\n-     * @param user the current user\n-     * @return the JSON data\n-     */\n-    public static String getModulesInChannel(Request req, Response res, User user) {\n-        try {\n-            Channel channel = ChannelManager.lookupByIdAndUser(Long.parseLong(req.params(\"channelId\")), user);\n-            return json(res, ResultJson.success(api.getAllModulesInChannel(channel)));\n-        }\n-        catch (NumberFormatException e) {\n-            Spark.halt(HttpStatus.SC_BAD_REQUEST);\n-            return null;\n-        }\n-    }\n-\n-}\n"}}, {"oid": "8b0058790aa66f4989c81ec81146a007092c1979", "url": "https://github.com/uyuni-project/uyuni/commit/8b0058790aa66f4989c81ec81146a007092c1979", "message": "Reformat 'list_modules' output object in mgr-libmod", "committedDate": "2020-05-22T10:09:55Z", "type": "commit"}, {"oid": "74656a5aa9e3c220cfce0ebf35a6c39846e4c2a3", "url": "https://github.com/uyuni-project/uyuni/commit/74656a5aa9e3c220cfce0ebf35a6c39846e4c2a3", "message": "Add an endpoint to Channels API to retrieve modular channels", "committedDate": "2020-05-22T10:09:59Z", "type": "commit"}, {"oid": "c3c817a77b9c50b3a85ee03c0bf4ae49a3894123", "url": "https://github.com/uyuni-project/uyuni/commit/c3c817a77b9c50b3a85ee03c0bf4ae49a3894123", "message": "Implement 'list_modules' mgr-libmod call", "committedDate": "2020-05-22T10:09:59Z", "type": "commit"}, {"oid": "926d6e3d17a9409ad9b720b5139864661c9f6959", "url": "https://github.com/uyuni-project/uyuni/commit/926d6e3d17a9409ad9b720b5139864661c9f6959", "message": "Implement module picker controls for CLM AppStream filters", "committedDate": "2020-05-22T10:10:50Z", "type": "commit"}, {"oid": "926d6e3d17a9409ad9b720b5139864661c9f6959", "url": "https://github.com/uyuni-project/uyuni/commit/926d6e3d17a9409ad9b720b5139864661c9f6959", "message": "Implement module picker controls for CLM AppStream filters", "committedDate": "2020-05-22T10:10:50Z", "type": "forcePushed"}]}