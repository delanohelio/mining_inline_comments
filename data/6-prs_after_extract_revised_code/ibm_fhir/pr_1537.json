{"pr_number": 1537, "pr_title": "issue #1445 - Add language registry utility", "pr_createdAt": "2020-09-30T14:57:03Z", "pr_url": "https://github.com/IBM/FHIR/pull/1537", "timeline": [{"oid": "d77954c1a6551bd4f123e2a0fad32cec35e84ee4", "url": "https://github.com/IBM/FHIR/commit/d77954c1a6551bd4f123e2a0fad32cec35e84ee4", "message": "issue #1445 - Add language registry utility\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-09-30T14:42:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyNTk4MQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497625981", "bodyText": "have you thought about calling this in the FHIRServletContextListener? that way it's activated on startup", "author": "prb112", "createdAt": "2020-09-30T16:01:20Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistryUtil.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.lang.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility class for language registry.\n+ */\n+public class LanguageRegistryUtil {", "originalCommit": "d77954c1a6551bd4f123e2a0fad32cec35e84ee4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyODQyNQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497628425", "bodyText": "Didn't really know about it.  But I can.", "author": "tbieste", "createdAt": "2020-09-30T16:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyNTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYzNTU2Mg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497635562", "bodyText": "give it a peek - if it makes sense to activate and load before any requests, that's where to put it", "author": "prb112", "createdAt": "2020-09-30T16:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyNTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY0MDY4MQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497640681", "bodyText": "Added.", "author": "tbieste", "createdAt": "2020-09-30T16:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyNTk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistryUtil.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistryUtil.java\nindex 0fce9bd3da..0181a344a9 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistryUtil.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistryUtil.java\n\n@@ -17,6 +17,14 @@ public class LanguageRegistryUtil {\n     private LanguageRegistryUtil() {\n     }\n \n+    /**\n+     * Loads the class in the classloader in order to initialize static members in LanguageRegistry.\n+     * Call this before using the class in order to avoid a slight performance hit on first use.\n+     */\n+    public static void init() {\n+        LanguageRegistry.init();\n+    }\n+\n     /**\n      * Determines if the tag is a valid language tag registered with BCP-47.\n      * If the tag contains any extensions or private-use subtags, it is not considered valid.\n"}}, {"oid": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "url": "https://github.com/IBM/FHIR/commit/b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "message": "issue #1445 - Initialize LanguageRegistry at startup\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-09-30T16:10:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MTAxNg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497791016", "bodyText": "I think you left out 'contents' in first line: \"Class that represents contents of the BCP-47....\"", "author": "michaelwschroeder", "createdAt": "2020-09-30T20:48:32Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java", "diffHunk": "@@ -0,0 +1,9012 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.lang.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Class that represents of the BCP-47 language registry, with all subtags in lowercase.", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI1ODA0NQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498258045", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-01T13:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MTAxNg=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\nindex cd95334035..417d2dd766 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n\n@@ -15,7 +15,7 @@ import java.util.Map;\n import java.util.Set;\n \n /**\n- * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Class that represents the BCP-47 language registry, with all subtags in lowercase.\n  * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n  * Private and deprecated tags/subtags are not included.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497795116", "bodyText": "General question: Was there a reason the contents of this class were generated by another class? Seems it would have been more straight-forward to read/parse the language-subtag-registry.txt file in this class and load the various tag sets/maps directly.", "author": "michaelwschroeder", "createdAt": "2020-09-30T20:56:02Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java", "diffHunk": "@@ -0,0 +1,9012 @@\n+/*", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3ODYxNA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498278614", "bodyText": "I went back and forth on this, and since the contents of IANA registry will be static, I leaned toward avoiding reading from a file during runtime to just make it as fast as possible, plus it allowed me to look at the generated lists/maps to confirm nothing was missing during the parsing. This intermediate step could certainly be removed, and just parse the file directly each time at runtime, but since I have it generated, I felt leaving it that way was fine.", "author": "tbieste", "createdAt": "2020-10-01T14:15:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyOTU2Mg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498329562", "bodyText": "My preference would be removing the intermediate step and just parse at runtime, but ok with it either way. If you do leave as is, I would suggest documenting in this class which contents are generated by the LanguageRegistryGenerator class, and in that class documenting what gets generated and where it gets copied to in this class, just to avoid any future confusion.", "author": "michaelwschroeder", "createdAt": "2020-10-01T15:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MTc3Ng==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498381776", "bodyText": "I'd rather parse ahead of time - the reason is the first request that activates the code path is truly going to be delayed.  Loading this up ahead of time and populating the maps ensures when the context is finished activating the app is truly ready to service a request.", "author": "prb112", "createdAt": "2020-10-01T16:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NDkzNg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498384936", "bodyText": "The parsing of file would still happen at startup via FHIRServletContextListener, I think, so does that change your opinion?", "author": "tbieste", "createdAt": "2020-10-01T16:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NzcxOQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498387719", "bodyText": "Then I agree with Mike. I think that makes sense", "author": "prb112", "createdAt": "2020-10-01T16:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTExNg=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\nindex cd95334035..417d2dd766 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n\n@@ -15,7 +15,7 @@ import java.util.Map;\n import java.util.Set;\n \n /**\n- * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Class that represents the BCP-47 language registry, with all subtags in lowercase.\n  * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n  * Private and deprecated tags/subtags are not included.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTczOA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497795738", "bodyText": "update comment - returns string", "author": "michaelwschroeder", "createdAt": "2020-09-30T20:57:12Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java", "diffHunk": "@@ -0,0 +1,9012 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.lang.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n+ * Private and deprecated tags/subtags are not included.\n+ */\n+class LanguageRegistry {\n+\n+    private static final Set<String> languages = buildLanguages();\n+    private static final Map<String, String> extLangs = buildExtLangs();\n+    private static final Set<String> scripts = buildScripts();\n+    private static final Set<String> regions = buildRegions();\n+    private static final Map<String, List<String>> variants = buildVariants();\n+    private static final Set<String> grandfathereds = buildGrandfathereds();\n+\n+    private LanguageRegistry() {\n+    }\n+\n+    /**\n+     * Loads the class in the classloader in order to initialize static members.\n+     * Call this before using the class in order to avoid a slight performance hit on first use.\n+     */\n+    static void init() {\n+        // allows us to initialize this class during startup\n+    }\n+\n+    /**\n+     * Determines if the language subtag exists.\n+     * \n+     * @param subtag\n+     *            the language subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isLanguageSubtag(String subtag) {\n+        return languages.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the extlang subtag exists.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isExtlangSubtag(String subtag) {\n+        return extLangs.containsKey(subtag);\n+    }\n+\n+    /**\n+     * Gets the prefix tag (in lowercase) for the extlang.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI1OTk3NA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498259974", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-01T13:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTczOA=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\nindex cd95334035..417d2dd766 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n\n@@ -15,7 +15,7 @@ import java.util.Map;\n import java.util.Set;\n \n /**\n- * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Class that represents the BCP-47 language registry, with all subtags in lowercase.\n  * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n  * Private and deprecated tags/subtags are not included.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NjE5Nw==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497796197", "bodyText": "update comment - returns list", "author": "michaelwschroeder", "createdAt": "2020-09-30T20:57:59Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java", "diffHunk": "@@ -0,0 +1,9012 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.lang.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n+ * Private and deprecated tags/subtags are not included.\n+ */\n+class LanguageRegistry {\n+\n+    private static final Set<String> languages = buildLanguages();\n+    private static final Map<String, String> extLangs = buildExtLangs();\n+    private static final Set<String> scripts = buildScripts();\n+    private static final Set<String> regions = buildRegions();\n+    private static final Map<String, List<String>> variants = buildVariants();\n+    private static final Set<String> grandfathereds = buildGrandfathereds();\n+\n+    private LanguageRegistry() {\n+    }\n+\n+    /**\n+     * Loads the class in the classloader in order to initialize static members.\n+     * Call this before using the class in order to avoid a slight performance hit on first use.\n+     */\n+    static void init() {\n+        // allows us to initialize this class during startup\n+    }\n+\n+    /**\n+     * Determines if the language subtag exists.\n+     * \n+     * @param subtag\n+     *            the language subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isLanguageSubtag(String subtag) {\n+        return languages.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the extlang subtag exists.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isExtlangSubtag(String subtag) {\n+        return extLangs.containsKey(subtag);\n+    }\n+\n+    /**\n+     * Gets the prefix tag (in lowercase) for the extlang.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static String getExtLangPrefix(String subtag) {\n+        return extLangs.get(subtag);\n+    }\n+\n+    /**\n+     * Determines if the script subtag exists.\n+     * \n+     * @param subtag\n+     *            the script subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isScriptSubtag(String subtag) {\n+        return scripts.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the region subtag exists.\n+     * \n+     * @param subtag\n+     *            the region subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isRegionSubtag(String subtag) {\n+        return regions.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the variant subtag exists.\n+     * \n+     * @param subtag\n+     *            the variant subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isVariantSubtag(String subtag) {\n+        return variants.containsKey(subtag);\n+    }\n+\n+    /**\n+     * Gets a list of prefix tags (in lowercase) for the variant.\n+     * \n+     * @param subtag\n+     *            the variant subtag (in lowercase)\n+     * @return true or false", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2MTEwMg==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498261102", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-01T13:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NjE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\nindex cd95334035..417d2dd766 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n\n@@ -15,7 +15,7 @@ import java.util.Map;\n import java.util.Set;\n \n /**\n- * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Class that represents the BCP-47 language registry, with all subtags in lowercase.\n  * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n  * Private and deprecated tags/subtags are not included.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDI1MQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497800251", "bodyText": "Add @param tags (same comment for other methods in this class as well)", "author": "michaelwschroeder", "createdAt": "2020-09-30T21:06:01Z", "path": "fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java", "diffHunk": "@@ -0,0 +1,324 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.FileWriter;\n+import java.nio.file.Files;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Class that generates the contents of the static initializer methods of the LanguageRegistry class\n+ * from the contents of the language-subtag-registry.txt file.\n+ * It does not generate the entire Java class, but rather just the sets/maps that need to be built by\n+ * the static initializer methods. The generated code can be copied/pasted into those methods of the\n+ * LanguageRegistry class.\n+ */\n+public class LanguageRegistryGenerator {\n+\n+    private static final String FILE_DATE_ROW = \"File-Date:\";\n+    private static final String RECORD_DELIMITER = \"%%\";\n+    private static final String ROW_DELIMITER = \": \";\n+    private static final String TYPE = \"Type\";\n+    private static final String LANGUAGE = \"language\";\n+    private static final String EXTLANG = \"extlang\";\n+    private static final String SCRIPT = \"script\";\n+    private static final String REGION = \"region\";\n+    private static final String VARIANT = \"variant\";\n+    private static final String GRANDFATHERED = \"grandfathered\";\n+    private static final String DEPRECATED = \"Deprecated\";\n+    private static final String SUBTAG = \"Subtag\";\n+    private static final String PREFIX = \"Prefix\";\n+    private static final String TAG = \"Tag\";\n+    private static final String PRIVATE_USE_LANG_SUBTAG = \"qaa..qtz\";\n+    private static final String PRIVATE_USE_SCRIPT_SUBTAG = \"Qaaa..Qabx\";\n+    private static final String PRIVATE_USE_REGION_SUBTAG_1 = \"QM..QZ\";\n+    private static final String PRIVATE_USE_REGION_SUBTAG_2 = \"XA..XZ\";\n+    private final List<Map<String, String>> languageSubTagRegistry;\n+\n+    /**\n+     * Instantiates a LanguageTagGenerator.\n+     * \n+     * @param languageSubTagRegistry\n+     */\n+    public LanguageRegistryGenerator(List<Map<String, String>> languageSubTagRegistry) {\n+        this.languageSubTagRegistry = languageSubTagRegistry;\n+    }\n+\n+    /**\n+     * Generates the Language Tag classes.\n+     */", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2NTc0OA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498265748", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-01T13:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java b/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\nindex d71d459ccf..e3a9556b50 100644\n--- a/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\n+++ b/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\n\n@@ -50,6 +50,7 @@ public class LanguageRegistryGenerator {\n      * Instantiates a LanguageTagGenerator.\n      * \n      * @param languageSubTagRegistry\n+     *            map of language registry entries\n      */\n     public LanguageRegistryGenerator(List<Map<String, String>> languageSubTagRegistry) {\n         this.languageSubTagRegistry = languageSubTagRegistry;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDcyOA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r497800728", "bodyText": "spelling: \"grandfathered\"", "author": "michaelwschroeder", "createdAt": "2020-09-30T21:06:55Z", "path": "fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java", "diffHunk": "@@ -0,0 +1,324 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.FileWriter;\n+import java.nio.file.Files;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Class that generates the contents of the static initializer methods of the LanguageRegistry class\n+ * from the contents of the language-subtag-registry.txt file.\n+ * It does not generate the entire Java class, but rather just the sets/maps that need to be built by\n+ * the static initializer methods. The generated code can be copied/pasted into those methods of the\n+ * LanguageRegistry class.\n+ */\n+public class LanguageRegistryGenerator {\n+\n+    private static final String FILE_DATE_ROW = \"File-Date:\";\n+    private static final String RECORD_DELIMITER = \"%%\";\n+    private static final String ROW_DELIMITER = \": \";\n+    private static final String TYPE = \"Type\";\n+    private static final String LANGUAGE = \"language\";\n+    private static final String EXTLANG = \"extlang\";\n+    private static final String SCRIPT = \"script\";\n+    private static final String REGION = \"region\";\n+    private static final String VARIANT = \"variant\";\n+    private static final String GRANDFATHERED = \"grandfathered\";\n+    private static final String DEPRECATED = \"Deprecated\";\n+    private static final String SUBTAG = \"Subtag\";\n+    private static final String PREFIX = \"Prefix\";\n+    private static final String TAG = \"Tag\";\n+    private static final String PRIVATE_USE_LANG_SUBTAG = \"qaa..qtz\";\n+    private static final String PRIVATE_USE_SCRIPT_SUBTAG = \"Qaaa..Qabx\";\n+    private static final String PRIVATE_USE_REGION_SUBTAG_1 = \"QM..QZ\";\n+    private static final String PRIVATE_USE_REGION_SUBTAG_2 = \"XA..XZ\";\n+    private final List<Map<String, String>> languageSubTagRegistry;\n+\n+    /**\n+     * Instantiates a LanguageTagGenerator.\n+     * \n+     * @param languageSubTagRegistry\n+     */\n+    public LanguageRegistryGenerator(List<Map<String, String>> languageSubTagRegistry) {\n+        this.languageSubTagRegistry = languageSubTagRegistry;\n+    }\n+\n+    /**\n+     * Generates the Language Tag classes.\n+     */\n+    public void generate(String basePath) {\n+        String packageName = \"com.ibm.fhir.model.lang.util\";\n+        generateLanguages(basePath, packageName);\n+        generateExtLangs(basePath, packageName);\n+        generateScripts(basePath, packageName);\n+        generateRegions(basePath, packageName);\n+        generateVariants(basePath, packageName);\n+        generateGrandfathereds(basePath, packageName);\n+    }\n+\n+    /**\n+     * Generate languages.\n+     */\n+    private void generateLanguages(String basePath, String packageName) {\n+        CodeBuilder cb = new CodeBuilder();\n+\n+        List<String> lines = new ArrayList<>();\n+        for (Map<String, String> entryMap : languageSubTagRegistry) {\n+            if (LANGUAGE.equals(entryMap.get(TYPE))) {\n+                String subTag = entryMap.get(SUBTAG);\n+                String deprecated = entryMap.get(DEPRECATED);\n+                if (subTag != null && !PRIVATE_USE_LANG_SUBTAG.equalsIgnoreCase(subTag) && deprecated == null) {\n+                    lines.add(\"l.add(\" + CodeBuilder.quote(subTag.toLowerCase()) + \");\");\n+                }\n+            }\n+        }\n+        lines.add(0, \"Set<String> l = new HashSet<>(\" + lines.size() + \");\");\n+        lines.add(\"return l;\");\n+        cb.lines(lines);\n+\n+        String className = \"Languages\";\n+        writeFile(cb, basePath, packageName, className);\n+    }\n+\n+    /**\n+     * Generate language extensions.\n+     */\n+    private void generateExtLangs(String basePath, String packageName) {\n+        CodeBuilder cb = new CodeBuilder();\n+\n+        List<String> lines = new ArrayList<>();\n+        for (Map<String, String> entryMap : languageSubTagRegistry) {\n+            if (EXTLANG.equals(entryMap.get(TYPE))) {\n+                String subTag = entryMap.get(SUBTAG);\n+                String prefix = entryMap.get(PREFIX);\n+                String deprecated = entryMap.get(DEPRECATED);\n+                if (subTag != null && prefix != null && deprecated == null) {\n+                    lines.add(\"e.put(\" + CodeBuilder.quote(subTag.toLowerCase()) + \", \" + CodeBuilder.quote(prefix.toLowerCase()) + \");\");\n+                }\n+            }\n+        }\n+        lines.add(0, \"Map<String, String> e = new HashMap<>(\" + lines.size() + \");\");\n+        lines.add(\"return e;\");\n+        cb.lines(lines);\n+\n+        String className = \"ExtLangs\";\n+        writeFile(cb, basePath, packageName, className);\n+    }\n+\n+    /**\n+     * Generate scripts.\n+     */\n+    private void generateScripts(String basePath, String packageName) {\n+        CodeBuilder cb = new CodeBuilder();\n+\n+        List<String> lines = new ArrayList<>();\n+        for (Map<String, String> entryMap : languageSubTagRegistry) {\n+            if (SCRIPT.equals(entryMap.get(TYPE))) {\n+                String subTag = entryMap.get(SUBTAG);\n+                String deprecated = entryMap.get(DEPRECATED);\n+                if (subTag != null && !PRIVATE_USE_SCRIPT_SUBTAG.equalsIgnoreCase(subTag) && deprecated == null) {\n+                    lines.add(\"s.add(\" + CodeBuilder.quote(subTag.toLowerCase()) + \");\");\n+                }\n+            }\n+        }\n+        lines.add(0, \"Set<String> s = new HashSet<>(\" + lines.size() + \");\");\n+        lines.add(\"return s;\");\n+        cb.lines(lines);\n+\n+        String className = \"Scripts\";\n+        writeFile(cb, basePath, packageName, className);\n+    }\n+\n+    /**\n+     * Generate regions.\n+     */\n+    private void generateRegions(String basePath, String packageName) {\n+        CodeBuilder cb = new CodeBuilder();\n+\n+        List<String> lines = new ArrayList<>();\n+        for (Map<String, String> entryMap : languageSubTagRegistry) {\n+            if (REGION.equals(entryMap.get(TYPE))) {\n+                String subTag = entryMap.get(SUBTAG);\n+                String deprecated = entryMap.get(DEPRECATED);\n+                if (subTag != null && !PRIVATE_USE_REGION_SUBTAG_1.equalsIgnoreCase(subTag) && !PRIVATE_USE_REGION_SUBTAG_2.equalsIgnoreCase(subTag) && deprecated == null) {\n+                    lines.add(\"r.add(\" + CodeBuilder.quote(subTag.toLowerCase()) + \");\");\n+                }\n+            }\n+        }\n+        lines.add(0, \"Set<String> r = new HashSet<>(\" + lines.size() + \");\");\n+        lines.add(\"return r;\");\n+        cb.lines(lines);\n+\n+        String className = \"Regions\";\n+        writeFile(cb, basePath, packageName, className);\n+    }\n+\n+    /**\n+     * Generate variants.\n+     */\n+    private void generateVariants(String basePath, String packageName) {\n+        CodeBuilder cb = new CodeBuilder();\n+\n+        List<String> lines = new ArrayList<>();\n+        for (Map<String, String> entryMap : languageSubTagRegistry) {\n+            if (VARIANT.equals(entryMap.get(TYPE))) {\n+                String subTag = entryMap.get(SUBTAG);\n+                String deprecated = entryMap.get(DEPRECATED);\n+                if (subTag != null && deprecated == null) {\n+                    String prefix = entryMap.get(PREFIX);\n+                    if (prefix != null) {\n+                        StringBuilder prefixesSb = new StringBuilder();\n+                        String[] prefixes = prefix.split(\",\");\n+                        for (String prefixPart : prefixes) {\n+                            prefixesSb.append(CodeBuilder.quote(prefixPart.trim().toLowerCase())).append(\", \");\n+                        }\n+                        prefixesSb.setLength(prefixesSb.length() - 2);\n+                        lines.add(\"v.put(\" + CodeBuilder.quote(subTag.toLowerCase()) + \", Arrays.asList(\" + prefixesSb + \"));\");\n+                    } else {\n+                        lines.add(\"v.put(\" + CodeBuilder.quote(subTag.toLowerCase()) + \", Collections.emptyList());\");\n+                    }\n+                }\n+            }\n+        }\n+        lines.add(0, \"Map<String, List<String>> v = new HashMap<>(\" + lines.size() + \");\");\n+        lines.add(\"return v;\");\n+        cb.lines(lines);\n+\n+        String className = \"Variants\";\n+        writeFile(cb, basePath, packageName, className);\n+    }\n+\n+    /**\n+     * Generate granfathered.", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI2MjY5MQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498262691", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-01T13:54:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "chunk": "diff --git a/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java b/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\nindex d71d459ccf..e3a9556b50 100644\n--- a/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\n+++ b/fhir-tools/src/main/java/com/ibm/fhir/tools/LanguageRegistryGenerator.java\n\n@@ -50,6 +50,7 @@ public class LanguageRegistryGenerator {\n      * Instantiates a LanguageTagGenerator.\n      * \n      * @param languageSubTagRegistry\n+     *            map of language registry entries\n      */\n     public LanguageRegistryGenerator(List<Map<String, String>> languageSubTagRegistry) {\n         this.languageSubTagRegistry = languageSubTagRegistry;\n"}}, {"oid": "53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "url": "https://github.com/IBM/FHIR/commit/53822d96eef40b9d3ef85e8fa1ed5a99f4d6a617", "message": "issue #1445 - Updates after code review\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-01T13:58:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4Mjg4NA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498382884", "bodyText": "read this from a file... please", "author": "prb112", "createdAt": "2020-10-01T16:46:16Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java", "diffHunk": "@@ -0,0 +1,9012 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.lang.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Class that represents of the BCP-47 language registry, with all subtags in lowercase.\n+ * Generated from \"http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\".\n+ * Private and deprecated tags/subtags are not included.\n+ */\n+class LanguageRegistry {\n+\n+    private static final Set<String> languages = buildLanguages();\n+    private static final Map<String, String> extLangs = buildExtLangs();\n+    private static final Set<String> scripts = buildScripts();\n+    private static final Set<String> regions = buildRegions();\n+    private static final Map<String, List<String>> variants = buildVariants();\n+    private static final Set<String> grandfathereds = buildGrandfathereds();\n+\n+    private LanguageRegistry() {\n+    }\n+\n+    /**\n+     * Loads the class in the classloader in order to initialize static members.\n+     * Call this before using the class in order to avoid a slight performance hit on first use.\n+     */\n+    static void init() {\n+        // allows us to initialize this class during startup\n+    }\n+\n+    /**\n+     * Determines if the language subtag exists.\n+     * \n+     * @param subtag\n+     *            the language subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isLanguageSubtag(String subtag) {\n+        return languages.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the extlang subtag exists.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isExtlangSubtag(String subtag) {\n+        return extLangs.containsKey(subtag);\n+    }\n+\n+    /**\n+     * Gets the prefix tag (in lowercase) for the extlang.\n+     * \n+     * @param subtag\n+     *            the extlang subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static String getExtLangPrefix(String subtag) {\n+        return extLangs.get(subtag);\n+    }\n+\n+    /**\n+     * Determines if the script subtag exists.\n+     * \n+     * @param subtag\n+     *            the script subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isScriptSubtag(String subtag) {\n+        return scripts.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the region subtag exists.\n+     * \n+     * @param subtag\n+     *            the region subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isRegionSubtag(String subtag) {\n+        return regions.contains(subtag);\n+    }\n+\n+    /**\n+     * Determines if the variant subtag exists.\n+     * \n+     * @param subtag\n+     *            the variant subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isVariantSubtag(String subtag) {\n+        return variants.containsKey(subtag);\n+    }\n+\n+    /**\n+     * Gets a list of prefix tags (in lowercase) for the variant.\n+     * \n+     * @param subtag\n+     *            the variant subtag (in lowercase)\n+     * @return true or false\n+     */\n+    static List<String> getVariantPrefixes(String subtag) {\n+        return variants.get(subtag);\n+    }\n+\n+    /**\n+     * Determines if the grandfathered tag exists.\n+     * \n+     * @param tag\n+     *            the tag (in lowercase)\n+     * @return true or false\n+     */\n+    static boolean isGrandfatheredTag(String tag) {\n+        return grandfathereds.contains(tag);\n+    }\n+\n+    /**\n+     * Builds the set of language subtags. Since the number of subtags is so large,\n+     * this method needed to be split into multiple methods to avoid exceeding the\n+     * Java limit for method size.\n+     * \n+     * @return the set\n+     */\n+    private static Set<String> buildLanguages() {\n+        Set<String> l = new HashSet<>(7983);\n+        buildLanguagesPart1(l);\n+        buildLanguagesPart2(l);\n+        return l;\n+    }\n+\n+    private static void buildLanguagesPart1(Set<String> l) {\n+        l.add(\"aa\");\n+        l.add(\"ab\");\n+        l.add(\"ae\");\n+        l.add(\"af\");\n+        l.add(\"ak\");\n+        l.add(\"am\");\n+        l.add(\"an\");\n+        l.add(\"ar\");\n+        l.add(\"as\");\n+        l.add(\"av\");\n+        l.add(\"ay\");\n+        l.add(\"az\");\n+        l.add(\"ba\");\n+        l.add(\"be\");\n+        l.add(\"bg\");\n+        l.add(\"bh\");\n+        l.add(\"bi\");\n+        l.add(\"bm\");\n+        l.add(\"bn\");\n+        l.add(\"bo\");\n+        l.add(\"br\");\n+        l.add(\"bs\");\n+        l.add(\"ca\");\n+        l.add(\"ce\");\n+        l.add(\"ch\");\n+        l.add(\"co\");\n+        l.add(\"cr\");\n+        l.add(\"cs\");\n+        l.add(\"cu\");\n+        l.add(\"cv\");\n+        l.add(\"cy\");\n+        l.add(\"da\");\n+        l.add(\"de\");\n+        l.add(\"dv\");\n+        l.add(\"dz\");\n+        l.add(\"ee\");\n+        l.add(\"el\");\n+        l.add(\"en\");\n+        l.add(\"eo\");\n+        l.add(\"es\");\n+        l.add(\"et\");\n+        l.add(\"eu\");\n+        l.add(\"fa\");\n+        l.add(\"ff\");\n+        l.add(\"fi\");\n+        l.add(\"fj\");\n+        l.add(\"fo\");\n+        l.add(\"fr\");\n+        l.add(\"fy\");\n+        l.add(\"ga\");\n+        l.add(\"gd\");\n+        l.add(\"gl\");\n+        l.add(\"gn\");\n+        l.add(\"gu\");\n+        l.add(\"gv\");\n+        l.add(\"ha\");\n+        l.add(\"he\");\n+        l.add(\"hi\");\n+        l.add(\"ho\");\n+        l.add(\"hr\");\n+        l.add(\"ht\");\n+        l.add(\"hu\");\n+        l.add(\"hy\");\n+        l.add(\"hz\");\n+        l.add(\"ia\");\n+        l.add(\"id\");\n+        l.add(\"ie\");\n+        l.add(\"ig\");\n+        l.add(\"ii\");\n+        l.add(\"ik\");\n+        l.add(\"io\");\n+        l.add(\"is\");\n+        l.add(\"it\");\n+        l.add(\"iu\");\n+        l.add(\"ja\");\n+        l.add(\"jv\");\n+        l.add(\"ka\");\n+        l.add(\"kg\");\n+        l.add(\"ki\");\n+        l.add(\"kj\");\n+        l.add(\"kk\");\n+        l.add(\"kl\");\n+        l.add(\"km\");\n+        l.add(\"kn\");\n+        l.add(\"ko\");\n+        l.add(\"kr\");\n+        l.add(\"ks\");\n+        l.add(\"ku\");\n+        l.add(\"kv\");\n+        l.add(\"kw\");\n+        l.add(\"ky\");\n+        l.add(\"la\");\n+        l.add(\"lb\");\n+        l.add(\"lg\");\n+        l.add(\"li\");\n+        l.add(\"ln\");\n+        l.add(\"lo\");\n+        l.add(\"lt\");\n+        l.add(\"lu\");\n+        l.add(\"lv\");\n+        l.add(\"mg\");\n+        l.add(\"mh\");\n+        l.add(\"mi\");\n+        l.add(\"mk\");\n+        l.add(\"ml\");\n+        l.add(\"mn\");\n+        l.add(\"mr\");\n+        l.add(\"ms\");\n+        l.add(\"mt\");\n+        l.add(\"my\");\n+        l.add(\"na\");\n+        l.add(\"nb\");\n+        l.add(\"nd\");\n+        l.add(\"ne\");\n+        l.add(\"ng\");\n+        l.add(\"nl\");\n+        l.add(\"nn\");\n+        l.add(\"no\");\n+        l.add(\"nr\");\n+        l.add(\"nv\");\n+        l.add(\"ny\");\n+        l.add(\"oc\");\n+        l.add(\"oj\");\n+        l.add(\"om\");\n+        l.add(\"or\");\n+        l.add(\"os\");\n+        l.add(\"pa\");\n+        l.add(\"pi\");\n+        l.add(\"pl\");\n+        l.add(\"ps\");\n+        l.add(\"pt\");\n+        l.add(\"qu\");\n+        l.add(\"rm\");\n+        l.add(\"rn\");\n+        l.add(\"ro\");\n+        l.add(\"ru\");\n+        l.add(\"rw\");\n+        l.add(\"sa\");\n+        l.add(\"sc\");\n+        l.add(\"sd\");\n+        l.add(\"se\");\n+        l.add(\"sg\");\n+        l.add(\"sh\");\n+        l.add(\"si\");\n+        l.add(\"sk\");\n+        l.add(\"sl\");\n+        l.add(\"sm\");\n+        l.add(\"sn\");\n+        l.add(\"so\");\n+        l.add(\"sq\");\n+        l.add(\"sr\");\n+        l.add(\"ss\");\n+        l.add(\"st\");\n+        l.add(\"su\");\n+        l.add(\"sv\");\n+        l.add(\"sw\");\n+        l.add(\"ta\");\n+        l.add(\"te\");\n+        l.add(\"tg\");\n+        l.add(\"th\");\n+        l.add(\"ti\");\n+        l.add(\"tk\");\n+        l.add(\"tl\");\n+        l.add(\"tn\");\n+        l.add(\"to\");\n+        l.add(\"tr\");\n+        l.add(\"ts\");\n+        l.add(\"tt\");\n+        l.add(\"tw\");\n+        l.add(\"ty\");\n+        l.add(\"ug\");\n+        l.add(\"uk\");\n+        l.add(\"ur\");\n+        l.add(\"uz\");\n+        l.add(\"ve\");\n+        l.add(\"vi\");\n+        l.add(\"vo\");\n+        l.add(\"wa\");\n+        l.add(\"wo\");\n+        l.add(\"xh\");\n+        l.add(\"yi\");\n+        l.add(\"yo\");\n+        l.add(\"za\");\n+        l.add(\"zh\");\n+        l.add(\"zu\");\n+        l.add(\"aaa\");\n+        l.add(\"aab\");\n+        l.add(\"aac\");\n+        l.add(\"aad\");\n+        l.add(\"aae\");\n+        l.add(\"aaf\");\n+        l.add(\"aag\");\n+        l.add(\"aah\");\n+        l.add(\"aai\");\n+        l.add(\"aak\");\n+        l.add(\"aal\");\n+        l.add(\"aan\");\n+        l.add(\"aao\");\n+        l.add(\"aap\");\n+        l.add(\"aaq\");\n+        l.add(\"aas\");\n+        l.add(\"aat\");\n+        l.add(\"aau\");\n+        l.add(\"aav\");\n+        l.add(\"aaw\");\n+        l.add(\"aax\");\n+        l.add(\"aaz\");\n+        l.add(\"aba\");\n+        l.add(\"abb\");\n+        l.add(\"abc\");\n+        l.add(\"abd\");\n+        l.add(\"abe\");\n+        l.add(\"abf\");\n+        l.add(\"abg\");\n+        l.add(\"abh\");\n+        l.add(\"abi\");\n+        l.add(\"abj\");\n+        l.add(\"abl\");\n+        l.add(\"abm\");\n+        l.add(\"abn\");\n+        l.add(\"abo\");\n+        l.add(\"abp\");\n+        l.add(\"abq\");\n+        l.add(\"abr\");\n+        l.add(\"abs\");\n+        l.add(\"abt\");\n+        l.add(\"abu\");\n+        l.add(\"abv\");\n+        l.add(\"abw\");\n+        l.add(\"abx\");\n+        l.add(\"aby\");\n+        l.add(\"abz\");\n+        l.add(\"aca\");\n+        l.add(\"acb\");\n+        l.add(\"acd\");\n+        l.add(\"ace\");\n+        l.add(\"acf\");\n+        l.add(\"ach\");\n+        l.add(\"aci\");\n+        l.add(\"ack\");\n+        l.add(\"acl\");\n+        l.add(\"acm\");\n+        l.add(\"acn\");\n+        l.add(\"acp\");\n+        l.add(\"acq\");\n+        l.add(\"acr\");\n+        l.add(\"acs\");\n+        l.add(\"act\");\n+        l.add(\"acu\");\n+        l.add(\"acv\");\n+        l.add(\"acw\");\n+        l.add(\"acx\");\n+        l.add(\"acy\");\n+        l.add(\"acz\");\n+        l.add(\"ada\");\n+        l.add(\"adb\");\n+        l.add(\"add\");\n+        l.add(\"ade\");\n+        l.add(\"adf\");\n+        l.add(\"adg\");\n+        l.add(\"adh\");\n+        l.add(\"adi\");\n+        l.add(\"adj\");\n+        l.add(\"adl\");\n+        l.add(\"adn\");\n+        l.add(\"ado\");\n+        l.add(\"adq\");\n+        l.add(\"adr\");\n+        l.add(\"ads\");\n+        l.add(\"adt\");\n+        l.add(\"adu\");\n+        l.add(\"adw\");\n+        l.add(\"adx\");\n+        l.add(\"ady\");\n+        l.add(\"adz\");\n+        l.add(\"aea\");\n+        l.add(\"aeb\");\n+        l.add(\"aec\");\n+        l.add(\"aed\");\n+        l.add(\"aee\");\n+        l.add(\"aek\");\n+        l.add(\"ael\");\n+        l.add(\"aem\");\n+        l.add(\"aen\");\n+        l.add(\"aeq\");\n+        l.add(\"aer\");\n+        l.add(\"aes\");\n+        l.add(\"aeu\");\n+        l.add(\"aew\");\n+        l.add(\"aey\");\n+        l.add(\"aez\");\n+        l.add(\"afa\");\n+        l.add(\"afb\");\n+        l.add(\"afd\");\n+        l.add(\"afe\");\n+        l.add(\"afg\");\n+        l.add(\"afh\");\n+        l.add(\"afi\");\n+        l.add(\"afk\");\n+        l.add(\"afn\");\n+        l.add(\"afo\");\n+        l.add(\"afp\");\n+        l.add(\"afs\");\n+        l.add(\"aft\");\n+        l.add(\"afu\");\n+        l.add(\"afz\");\n+        l.add(\"aga\");\n+        l.add(\"agb\");\n+        l.add(\"agc\");\n+        l.add(\"agd\");\n+        l.add(\"age\");\n+        l.add(\"agf\");\n+        l.add(\"agg\");\n+        l.add(\"agh\");\n+        l.add(\"agi\");\n+        l.add(\"agj\");\n+        l.add(\"agk\");\n+        l.add(\"agl\");\n+        l.add(\"agm\");\n+        l.add(\"agn\");\n+        l.add(\"ago\");\n+        l.add(\"agq\");\n+        l.add(\"agr\");\n+        l.add(\"ags\");\n+        l.add(\"agt\");\n+        l.add(\"agu\");\n+        l.add(\"agv\");\n+        l.add(\"agw\");\n+        l.add(\"agx\");\n+        l.add(\"agy\");\n+        l.add(\"agz\");\n+        l.add(\"aha\");\n+        l.add(\"ahb\");\n+        l.add(\"ahg\");\n+        l.add(\"ahh\");\n+        l.add(\"ahi\");\n+        l.add(\"ahk\");\n+        l.add(\"ahl\");\n+        l.add(\"ahm\");\n+        l.add(\"ahn\");\n+        l.add(\"aho\");\n+        l.add(\"ahp\");\n+        l.add(\"ahr\");\n+        l.add(\"ahs\");\n+        l.add(\"aht\");\n+        l.add(\"aia\");\n+        l.add(\"aib\");\n+        l.add(\"aic\");\n+        l.add(\"aid\");\n+        l.add(\"aie\");\n+        l.add(\"aif\");\n+        l.add(\"aig\");\n+        l.add(\"aih\");\n+        l.add(\"aii\");\n+        l.add(\"aij\");\n+        l.add(\"aik\");\n+        l.add(\"ail\");\n+        l.add(\"aim\");\n+        l.add(\"ain\");\n+        l.add(\"aio\");\n+        l.add(\"aip\");\n+        l.add(\"aiq\");\n+        l.add(\"air\");\n+        l.add(\"ait\");\n+        l.add(\"aiw\");\n+        l.add(\"aix\");\n+        l.add(\"aiy\");\n+        l.add(\"aja\");\n+        l.add(\"ajg\");\n+        l.add(\"aji\");\n+        l.add(\"ajn\");\n+        l.add(\"ajp\");\n+        l.add(\"ajt\");\n+        l.add(\"aju\");\n+        l.add(\"ajw\");\n+        l.add(\"ajz\");\n+        l.add(\"akb\");\n+        l.add(\"akc\");\n+        l.add(\"akd\");\n+        l.add(\"ake\");\n+        l.add(\"akf\");\n+        l.add(\"akg\");\n+        l.add(\"akh\");\n+        l.add(\"aki\");\n+        l.add(\"akj\");\n+        l.add(\"akk\");\n+        l.add(\"akl\");\n+        l.add(\"akm\");\n+        l.add(\"ako\");\n+        l.add(\"akp\");\n+        l.add(\"akq\");\n+        l.add(\"akr\");\n+        l.add(\"aks\");\n+        l.add(\"akt\");\n+        l.add(\"aku\");\n+        l.add(\"akv\");\n+        l.add(\"akw\");\n+        l.add(\"akx\");\n+        l.add(\"aky\");\n+        l.add(\"akz\");\n+        l.add(\"ala\");\n+        l.add(\"alc\");\n+        l.add(\"ald\");\n+        l.add(\"ale\");\n+        l.add(\"alf\");\n+        l.add(\"alg\");\n+        l.add(\"alh\");\n+        l.add(\"ali\");\n+        l.add(\"alj\");\n+        l.add(\"alk\");\n+        l.add(\"all\");\n+        l.add(\"alm\");\n+        l.add(\"aln\");\n+        l.add(\"alo\");\n+        l.add(\"alp\");\n+        l.add(\"alq\");\n+        l.add(\"alr\");\n+        l.add(\"als\");\n+        l.add(\"alt\");\n+        l.add(\"alu\");\n+        l.add(\"alv\");\n+        l.add(\"alw\");\n+        l.add(\"alx\");\n+        l.add(\"aly\");\n+        l.add(\"alz\");\n+        l.add(\"ama\");\n+        l.add(\"amb\");\n+        l.add(\"amc\");\n+        l.add(\"ame\");\n+        l.add(\"amf\");\n+        l.add(\"amg\");\n+        l.add(\"ami\");\n+        l.add(\"amj\");\n+        l.add(\"amk\");\n+        l.add(\"aml\");\n+        l.add(\"amm\");\n+        l.add(\"amn\");\n+        l.add(\"amo\");\n+        l.add(\"amp\");\n+        l.add(\"amq\");\n+        l.add(\"amr\");\n+        l.add(\"ams\");\n+        l.add(\"amt\");\n+        l.add(\"amu\");\n+        l.add(\"amv\");\n+        l.add(\"amw\");\n+        l.add(\"amx\");\n+        l.add(\"amy\");\n+        l.add(\"amz\");\n+        l.add(\"ana\");\n+        l.add(\"anb\");\n+        l.add(\"anc\");\n+        l.add(\"and\");\n+        l.add(\"ane\");\n+        l.add(\"anf\");\n+        l.add(\"ang\");\n+        l.add(\"anh\");\n+        l.add(\"ani\");\n+        l.add(\"anj\");\n+        l.add(\"ank\");\n+        l.add(\"anl\");\n+        l.add(\"anm\");\n+        l.add(\"ann\");\n+        l.add(\"ano\");\n+        l.add(\"anp\");\n+        l.add(\"anq\");\n+        l.add(\"anr\");\n+        l.add(\"ans\");\n+        l.add(\"ant\");\n+        l.add(\"anu\");\n+        l.add(\"anv\");\n+        l.add(\"anw\");\n+        l.add(\"anx\");\n+        l.add(\"any\");\n+        l.add(\"anz\");\n+        l.add(\"aoa\");\n+        l.add(\"aob\");\n+        l.add(\"aoc\");\n+        l.add(\"aod\");\n+        l.add(\"aoe\");\n+        l.add(\"aof\");\n+        l.add(\"aog\");\n+        l.add(\"aoi\");\n+        l.add(\"aoj\");\n+        l.add(\"aok\");\n+        l.add(\"aol\");\n+        l.add(\"aom\");\n+        l.add(\"aon\");\n+        l.add(\"aor\");\n+        l.add(\"aos\");\n+        l.add(\"aot\");\n+        l.add(\"aou\");\n+        l.add(\"aox\");\n+        l.add(\"aoz\");\n+        l.add(\"apa\");\n+        l.add(\"apb\");\n+        l.add(\"apc\");\n+        l.add(\"apd\");\n+        l.add(\"ape\");\n+        l.add(\"apf\");\n+        l.add(\"apg\");\n+        l.add(\"aph\");\n+        l.add(\"api\");\n+        l.add(\"apj\");\n+        l.add(\"apk\");\n+        l.add(\"apl\");\n+        l.add(\"apm\");\n+        l.add(\"apn\");\n+        l.add(\"apo\");\n+        l.add(\"app\");\n+        l.add(\"apq\");\n+        l.add(\"apr\");\n+        l.add(\"aps\");\n+        l.add(\"apt\");\n+        l.add(\"apu\");\n+        l.add(\"apv\");\n+        l.add(\"apw\");\n+        l.add(\"apx\");\n+        l.add(\"apy\");\n+        l.add(\"apz\");\n+        l.add(\"aqa\");\n+        l.add(\"aqc\");\n+        l.add(\"aqd\");\n+        l.add(\"aqg\");\n+        l.add(\"aql\");\n+        l.add(\"aqm\");\n+        l.add(\"aqn\");\n+        l.add(\"aqp\");\n+        l.add(\"aqr\");\n+        l.add(\"aqt\");\n+        l.add(\"aqz\");\n+        l.add(\"arb\");\n+        l.add(\"arc\");\n+        l.add(\"ard\");\n+        l.add(\"are\");\n+        l.add(\"arh\");\n+        l.add(\"ari\");\n+        l.add(\"arj\");\n+        l.add(\"ark\");\n+        l.add(\"arl\");\n+        l.add(\"arn\");\n+        l.add(\"aro\");\n+        l.add(\"arp\");\n+        l.add(\"arq\");\n+        l.add(\"arr\");\n+        l.add(\"ars\");\n+        l.add(\"art\");\n+        l.add(\"aru\");\n+        l.add(\"arv\");\n+        l.add(\"arw\");\n+        l.add(\"arx\");\n+        l.add(\"ary\");\n+        l.add(\"arz\");\n+        l.add(\"asa\");\n+        l.add(\"asb\");\n+        l.add(\"asc\");\n+        l.add(\"ase\");\n+        l.add(\"asf\");\n+        l.add(\"asg\");\n+        l.add(\"ash\");\n+        l.add(\"asi\");\n+        l.add(\"asj\");\n+        l.add(\"ask\");\n+        l.add(\"asl\");\n+        l.add(\"asn\");\n+        l.add(\"aso\");\n+        l.add(\"asp\");\n+        l.add(\"asq\");\n+        l.add(\"asr\");\n+        l.add(\"ass\");\n+        l.add(\"ast\");\n+        l.add(\"asu\");\n+        l.add(\"asv\");\n+        l.add(\"asw\");\n+        l.add(\"asx\");\n+        l.add(\"asy\");\n+        l.add(\"asz\");\n+        l.add(\"ata\");\n+        l.add(\"atb\");\n+        l.add(\"atc\");\n+        l.add(\"atd\");\n+        l.add(\"ate\");\n+        l.add(\"atg\");\n+        l.add(\"ath\");\n+        l.add(\"ati\");\n+        l.add(\"atj\");\n+        l.add(\"atk\");\n+        l.add(\"atl\");\n+        l.add(\"atm\");\n+        l.add(\"atn\");\n+        l.add(\"ato\");\n+        l.add(\"atp\");\n+        l.add(\"atq\");\n+        l.add(\"atr\");\n+        l.add(\"ats\");\n+        l.add(\"att\");\n+        l.add(\"atu\");\n+        l.add(\"atv\");\n+        l.add(\"atw\");\n+        l.add(\"atx\");\n+        l.add(\"aty\");\n+        l.add(\"atz\");\n+        l.add(\"aua\");\n+        l.add(\"aub\");\n+        l.add(\"auc\");\n+        l.add(\"aud\");\n+        l.add(\"auf\");\n+        l.add(\"aug\");\n+        l.add(\"auh\");\n+        l.add(\"aui\");\n+        l.add(\"auj\");\n+        l.add(\"auk\");\n+        l.add(\"aul\");\n+        l.add(\"aum\");\n+        l.add(\"aun\");\n+        l.add(\"auo\");\n+        l.add(\"aup\");\n+        l.add(\"auq\");\n+        l.add(\"aur\");\n+        l.add(\"aus\");\n+        l.add(\"aut\");\n+        l.add(\"auu\");\n+        l.add(\"auw\");\n+        l.add(\"aux\");\n+        l.add(\"auy\");\n+        l.add(\"auz\");\n+        l.add(\"avb\");\n+        l.add(\"avd\");\n+        l.add(\"avi\");\n+        l.add(\"avk\");\n+        l.add(\"avl\");\n+        l.add(\"avm\");\n+        l.add(\"avn\");\n+        l.add(\"avo\");\n+        l.add(\"avs\");\n+        l.add(\"avt\");\n+        l.add(\"avu\");\n+        l.add(\"avv\");\n+        l.add(\"awa\");\n+        l.add(\"awb\");\n+        l.add(\"awc\");\n+        l.add(\"awd\");\n+        l.add(\"awe\");\n+        l.add(\"awg\");\n+        l.add(\"awh\");\n+        l.add(\"awi\");\n+        l.add(\"awk\");\n+        l.add(\"awm\");\n+        l.add(\"awn\");\n+        l.add(\"awo\");\n+        l.add(\"awr\");\n+        l.add(\"aws\");\n+        l.add(\"awt\");\n+        l.add(\"awu\");\n+        l.add(\"awv\");\n+        l.add(\"aww\");\n+        l.add(\"awx\");\n+        l.add(\"awy\");\n+        l.add(\"axb\");\n+        l.add(\"axe\");\n+        l.add(\"axg\");\n+        l.add(\"axk\");\n+        l.add(\"axl\");\n+        l.add(\"axm\");\n+        l.add(\"axx\");\n+        l.add(\"aya\");\n+        l.add(\"ayb\");\n+        l.add(\"ayc\");\n+        l.add(\"ayd\");\n+        l.add(\"aye\");\n+        l.add(\"ayg\");\n+        l.add(\"ayh\");\n+        l.add(\"ayi\");\n+        l.add(\"ayk\");\n+        l.add(\"ayl\");\n+        l.add(\"ayn\");\n+        l.add(\"ayo\");\n+        l.add(\"ayp\");\n+        l.add(\"ayq\");\n+        l.add(\"ayr\");\n+        l.add(\"ays\");\n+        l.add(\"ayt\");\n+        l.add(\"ayu\");\n+        l.add(\"ayz\");\n+        l.add(\"aza\");\n+        l.add(\"azb\");\n+        l.add(\"azc\");\n+        l.add(\"azd\");\n+        l.add(\"azg\");\n+        l.add(\"azj\");\n+        l.add(\"azm\");\n+        l.add(\"azn\");\n+        l.add(\"azo\");\n+        l.add(\"azt\");\n+        l.add(\"azz\");\n+        l.add(\"baa\");\n+        l.add(\"bab\");\n+        l.add(\"bac\");\n+        l.add(\"bad\");\n+        l.add(\"bae\");\n+        l.add(\"baf\");\n+        l.add(\"bag\");\n+        l.add(\"bah\");\n+        l.add(\"bai\");\n+        l.add(\"baj\");\n+        l.add(\"bal\");\n+        l.add(\"ban\");\n+        l.add(\"bao\");\n+        l.add(\"bap\");\n+        l.add(\"bar\");\n+        l.add(\"bas\");\n+        l.add(\"bat\");\n+        l.add(\"bau\");\n+        l.add(\"bav\");\n+        l.add(\"baw\");\n+        l.add(\"bax\");\n+        l.add(\"bay\");\n+        l.add(\"bba\");\n+        l.add(\"bbb\");\n+        l.add(\"bbc\");\n+        l.add(\"bbd\");\n+        l.add(\"bbe\");\n+        l.add(\"bbf\");\n+        l.add(\"bbg\");\n+        l.add(\"bbh\");\n+        l.add(\"bbi\");\n+        l.add(\"bbj\");\n+        l.add(\"bbk\");\n+        l.add(\"bbl\");\n+        l.add(\"bbm\");\n+        l.add(\"bbn\");\n+        l.add(\"bbo\");\n+        l.add(\"bbp\");\n+        l.add(\"bbq\");\n+        l.add(\"bbr\");\n+        l.add(\"bbs\");\n+        l.add(\"bbt\");\n+        l.add(\"bbu\");\n+        l.add(\"bbv\");\n+        l.add(\"bbw\");\n+        l.add(\"bbx\");\n+        l.add(\"bby\");\n+        l.add(\"bca\");\n+        l.add(\"bcb\");\n+        l.add(\"bcc\");\n+        l.add(\"bcd\");\n+        l.add(\"bce\");\n+        l.add(\"bcf\");\n+        l.add(\"bcg\");\n+        l.add(\"bch\");\n+        l.add(\"bci\");\n+        l.add(\"bcj\");\n+        l.add(\"bck\");\n+        l.add(\"bcl\");\n+        l.add(\"bcm\");\n+        l.add(\"bcn\");\n+        l.add(\"bco\");\n+        l.add(\"bcp\");\n+        l.add(\"bcq\");\n+        l.add(\"bcr\");\n+        l.add(\"bcs\");\n+        l.add(\"bct\");\n+        l.add(\"bcu\");\n+        l.add(\"bcv\");\n+        l.add(\"bcw\");\n+        l.add(\"bcy\");\n+        l.add(\"bcz\");\n+        l.add(\"bda\");\n+        l.add(\"bdb\");\n+        l.add(\"bdc\");\n+        l.add(\"bdd\");\n+        l.add(\"bde\");\n+        l.add(\"bdf\");\n+        l.add(\"bdg\");\n+        l.add(\"bdh\");\n+        l.add(\"bdi\");\n+        l.add(\"bdj\");\n+        l.add(\"bdk\");\n+        l.add(\"bdl\");\n+        l.add(\"bdm\");\n+        l.add(\"bdn\");\n+        l.add(\"bdo\");\n+        l.add(\"bdp\");\n+        l.add(\"bdq\");\n+        l.add(\"bdr\");\n+        l.add(\"bds\");\n+        l.add(\"bdt\");\n+        l.add(\"bdu\");\n+        l.add(\"bdv\");\n+        l.add(\"bdw\");\n+        l.add(\"bdx\");\n+        l.add(\"bdy\");\n+        l.add(\"bdz\");\n+        l.add(\"bea\");\n+        l.add(\"beb\");\n+        l.add(\"bec\");\n+        l.add(\"bed\");\n+        l.add(\"bee\");\n+        l.add(\"bef\");\n+        l.add(\"beg\");\n+        l.add(\"beh\");\n+        l.add(\"bei\");\n+        l.add(\"bej\");\n+        l.add(\"bek\");\n+        l.add(\"bem\");\n+        l.add(\"beo\");\n+        l.add(\"bep\");\n+        l.add(\"beq\");\n+        l.add(\"ber\");\n+        l.add(\"bes\");\n+        l.add(\"bet\");\n+        l.add(\"beu\");\n+        l.add(\"bev\");\n+        l.add(\"bew\");\n+        l.add(\"bex\");\n+        l.add(\"bey\");\n+        l.add(\"bez\");\n+        l.add(\"bfa\");\n+        l.add(\"bfb\");\n+        l.add(\"bfc\");\n+        l.add(\"bfd\");\n+        l.add(\"bfe\");\n+        l.add(\"bff\");\n+        l.add(\"bfg\");\n+        l.add(\"bfh\");\n+        l.add(\"bfi\");\n+        l.add(\"bfj\");\n+        l.add(\"bfk\");\n+        l.add(\"bfl\");\n+        l.add(\"bfm\");\n+        l.add(\"bfn\");\n+        l.add(\"bfo\");\n+        l.add(\"bfp\");\n+        l.add(\"bfq\");\n+        l.add(\"bfr\");\n+        l.add(\"bfs\");\n+        l.add(\"bft\");\n+        l.add(\"bfu\");\n+        l.add(\"bfw\");\n+        l.add(\"bfx\");\n+        l.add(\"bfy\");\n+        l.add(\"bfz\");\n+        l.add(\"bga\");\n+        l.add(\"bgb\");\n+        l.add(\"bgc\");\n+        l.add(\"bgd\");\n+        l.add(\"bge\");\n+        l.add(\"bgf\");\n+        l.add(\"bgg\");\n+        l.add(\"bgi\");\n+        l.add(\"bgj\");\n+        l.add(\"bgk\");\n+        l.add(\"bgl\");\n+        l.add(\"bgn\");\n+        l.add(\"bgo\");\n+        l.add(\"bgp\");\n+        l.add(\"bgq\");\n+        l.add(\"bgr\");\n+        l.add(\"bgs\");\n+        l.add(\"bgt\");\n+        l.add(\"bgu\");\n+        l.add(\"bgv\");\n+        l.add(\"bgw\");\n+        l.add(\"bgx\");\n+        l.add(\"bgy\");\n+        l.add(\"bgz\");\n+        l.add(\"bha\");\n+        l.add(\"bhb\");\n+        l.add(\"bhc\");\n+        l.add(\"bhd\");\n+        l.add(\"bhe\");\n+        l.add(\"bhf\");\n+        l.add(\"bhg\");\n+        l.add(\"bhh\");\n+        l.add(\"bhi\");\n+        l.add(\"bhj\");\n+        l.add(\"bhl\");\n+        l.add(\"bhm\");\n+        l.add(\"bhn\");\n+        l.add(\"bho\");\n+        l.add(\"bhp\");\n+        l.add(\"bhq\");\n+        l.add(\"bhr\");\n+        l.add(\"bhs\");\n+        l.add(\"bht\");\n+        l.add(\"bhu\");\n+        l.add(\"bhv\");\n+        l.add(\"bhw\");\n+        l.add(\"bhx\");\n+        l.add(\"bhy\");\n+        l.add(\"bhz\");\n+        l.add(\"bia\");\n+        l.add(\"bib\");\n+        l.add(\"bic\");\n+        l.add(\"bid\");\n+        l.add(\"bie\");\n+        l.add(\"bif\");\n+        l.add(\"big\");\n+        l.add(\"bij\");\n+        l.add(\"bik\");\n+        l.add(\"bil\");\n+        l.add(\"bim\");\n+        l.add(\"bin\");\n+        l.add(\"bio\");\n+        l.add(\"bip\");\n+        l.add(\"biq\");\n+        l.add(\"bir\");\n+        l.add(\"bit\");\n+        l.add(\"biu\");\n+        l.add(\"biv\");\n+        l.add(\"biw\");\n+        l.add(\"bix\");\n+        l.add(\"biy\");\n+        l.add(\"biz\");\n+        l.add(\"bja\");\n+        l.add(\"bjb\");\n+        l.add(\"bjc\");\n+        l.add(\"bje\");\n+        l.add(\"bjf\");\n+        l.add(\"bjg\");\n+        l.add(\"bjh\");\n+        l.add(\"bji\");\n+        l.add(\"bjj\");\n+        l.add(\"bjk\");\n+        l.add(\"bjl\");\n+        l.add(\"bjm\");\n+        l.add(\"bjn\");\n+        l.add(\"bjo\");\n+        l.add(\"bjp\");\n+        l.add(\"bjr\");\n+        l.add(\"bjs\");\n+        l.add(\"bjt\");\n+        l.add(\"bju\");\n+        l.add(\"bjv\");\n+        l.add(\"bjw\");\n+        l.add(\"bjx\");\n+        l.add(\"bjy\");\n+        l.add(\"bjz\");\n+        l.add(\"bka\");\n+        l.add(\"bkc\");\n+        l.add(\"bkd\");\n+        l.add(\"bkf\");\n+        l.add(\"bkg\");\n+        l.add(\"bkh\");\n+        l.add(\"bki\");\n+        l.add(\"bkj\");\n+        l.add(\"bkk\");\n+        l.add(\"bkl\");\n+        l.add(\"bkm\");\n+        l.add(\"bkn\");\n+        l.add(\"bko\");\n+        l.add(\"bkp\");\n+        l.add(\"bkq\");\n+        l.add(\"bkr\");\n+        l.add(\"bks\");\n+        l.add(\"bkt\");\n+        l.add(\"bku\");\n+        l.add(\"bkv\");\n+        l.add(\"bkw\");\n+        l.add(\"bkx\");\n+        l.add(\"bky\");\n+        l.add(\"bkz\");\n+        l.add(\"bla\");\n+        l.add(\"blb\");\n+        l.add(\"blc\");\n+        l.add(\"bld\");\n+        l.add(\"ble\");\n+        l.add(\"blf\");\n+        l.add(\"blg\");\n+        l.add(\"blh\");\n+        l.add(\"bli\");\n+        l.add(\"blj\");\n+        l.add(\"blk\");\n+        l.add(\"bll\");\n+        l.add(\"blm\");\n+        l.add(\"bln\");\n+        l.add(\"blo\");\n+        l.add(\"blp\");\n+        l.add(\"blq\");\n+        l.add(\"blr\");\n+        l.add(\"bls\");\n+        l.add(\"blt\");\n+        l.add(\"blv\");\n+        l.add(\"blw\");\n+        l.add(\"blx\");\n+        l.add(\"bly\");\n+        l.add(\"blz\");\n+        l.add(\"bma\");\n+        l.add(\"bmb\");\n+        l.add(\"bmc\");\n+        l.add(\"bmd\");\n+        l.add(\"bme\");\n+        l.add(\"bmf\");\n+        l.add(\"bmg\");\n+        l.add(\"bmh\");\n+        l.add(\"bmi\");\n+        l.add(\"bmj\");\n+        l.add(\"bmk\");\n+        l.add(\"bml\");\n+        l.add(\"bmm\");\n+        l.add(\"bmn\");\n+        l.add(\"bmo\");\n+        l.add(\"bmp\");\n+        l.add(\"bmq\");\n+        l.add(\"bmr\");\n+        l.add(\"bms\");\n+        l.add(\"bmt\");\n+        l.add(\"bmu\");\n+        l.add(\"bmv\");\n+        l.add(\"bmw\");\n+        l.add(\"bmx\");\n+        l.add(\"bmz\");\n+        l.add(\"bna\");\n+        l.add(\"bnb\");\n+        l.add(\"bnc\");\n+        l.add(\"bnd\");\n+        l.add(\"bne\");\n+        l.add(\"bnf\");\n+        l.add(\"bng\");\n+        l.add(\"bni\");\n+        l.add(\"bnj\");\n+        l.add(\"bnk\");\n+        l.add(\"bnl\");\n+        l.add(\"bnm\");\n+        l.add(\"bnn\");\n+        l.add(\"bno\");\n+        l.add(\"bnp\");\n+        l.add(\"bnq\");\n+        l.add(\"bnr\");\n+        l.add(\"bns\");\n+        l.add(\"bnt\");\n+        l.add(\"bnu\");\n+        l.add(\"bnv\");\n+        l.add(\"bnw\");\n+        l.add(\"bnx\");\n+        l.add(\"bny\");\n+        l.add(\"bnz\");\n+        l.add(\"boa\");\n+        l.add(\"bob\");\n+        l.add(\"boe\");\n+        l.add(\"bof\");\n+        l.add(\"bog\");\n+        l.add(\"boh\");\n+        l.add(\"boi\");\n+        l.add(\"boj\");\n+        l.add(\"bok\");\n+        l.add(\"bol\");\n+        l.add(\"bom\");\n+        l.add(\"bon\");\n+        l.add(\"boo\");\n+        l.add(\"bop\");\n+        l.add(\"boq\");\n+        l.add(\"bor\");\n+        l.add(\"bot\");\n+        l.add(\"bou\");\n+        l.add(\"bov\");\n+        l.add(\"bow\");\n+        l.add(\"box\");\n+        l.add(\"boy\");\n+        l.add(\"boz\");\n+        l.add(\"bpa\");\n+        l.add(\"bpd\");\n+        l.add(\"bpg\");\n+        l.add(\"bph\");\n+        l.add(\"bpi\");\n+        l.add(\"bpj\");\n+        l.add(\"bpk\");\n+        l.add(\"bpl\");\n+        l.add(\"bpm\");\n+        l.add(\"bpn\");\n+        l.add(\"bpo\");\n+        l.add(\"bpp\");\n+        l.add(\"bpq\");\n+        l.add(\"bpr\");\n+        l.add(\"bps\");\n+        l.add(\"bpt\");\n+        l.add(\"bpu\");\n+        l.add(\"bpv\");\n+        l.add(\"bpw\");\n+        l.add(\"bpx\");\n+        l.add(\"bpy\");\n+        l.add(\"bpz\");\n+        l.add(\"bqa\");\n+        l.add(\"bqb\");\n+        l.add(\"bqc\");\n+        l.add(\"bqd\");\n+        l.add(\"bqf\");\n+        l.add(\"bqg\");\n+        l.add(\"bqh\");\n+        l.add(\"bqi\");\n+        l.add(\"bqj\");\n+        l.add(\"bqk\");\n+        l.add(\"bql\");\n+        l.add(\"bqm\");\n+        l.add(\"bqn\");\n+        l.add(\"bqo\");\n+        l.add(\"bqp\");\n+        l.add(\"bqq\");\n+        l.add(\"bqr\");\n+        l.add(\"bqs\");\n+        l.add(\"bqt\");\n+        l.add(\"bqu\");\n+        l.add(\"bqv\");\n+        l.add(\"bqw\");\n+        l.add(\"bqx\");\n+        l.add(\"bqy\");\n+        l.add(\"bqz\");\n+        l.add(\"bra\");\n+        l.add(\"brb\");\n+        l.add(\"brc\");\n+        l.add(\"brd\");\n+        l.add(\"brf\");\n+        l.add(\"brg\");\n+        l.add(\"brh\");\n+        l.add(\"bri\");\n+        l.add(\"brj\");\n+        l.add(\"brk\");\n+        l.add(\"brl\");\n+        l.add(\"brm\");\n+        l.add(\"brn\");\n+        l.add(\"bro\");\n+        l.add(\"brp\");\n+        l.add(\"brq\");\n+        l.add(\"brr\");\n+        l.add(\"brs\");\n+        l.add(\"brt\");\n+        l.add(\"bru\");\n+        l.add(\"brv\");\n+        l.add(\"brw\");\n+        l.add(\"brx\");\n+        l.add(\"bry\");\n+        l.add(\"brz\");\n+        l.add(\"bsa\");\n+        l.add(\"bsb\");\n+        l.add(\"bsc\");\n+        l.add(\"bse\");\n+        l.add(\"bsf\");\n+        l.add(\"bsg\");\n+        l.add(\"bsh\");\n+        l.add(\"bsi\");\n+        l.add(\"bsj\");\n+        l.add(\"bsk\");\n+        l.add(\"bsl\");\n+        l.add(\"bsm\");\n+        l.add(\"bsn\");\n+        l.add(\"bso\");\n+        l.add(\"bsp\");\n+        l.add(\"bsq\");\n+        l.add(\"bsr\");\n+        l.add(\"bss\");\n+        l.add(\"bst\");\n+        l.add(\"bsu\");\n+        l.add(\"bsv\");\n+        l.add(\"bsw\");\n+        l.add(\"bsx\");\n+        l.add(\"bsy\");\n+        l.add(\"bta\");\n+        l.add(\"btc\");\n+        l.add(\"btd\");\n+        l.add(\"bte\");\n+        l.add(\"btf\");\n+        l.add(\"btg\");\n+        l.add(\"bth\");\n+        l.add(\"bti\");\n+        l.add(\"btj\");\n+        l.add(\"btk\");\n+        l.add(\"btm\");\n+        l.add(\"btn\");\n+        l.add(\"bto\");\n+        l.add(\"btp\");\n+        l.add(\"btq\");\n+        l.add(\"btr\");\n+        l.add(\"bts\");\n+        l.add(\"btt\");\n+        l.add(\"btu\");\n+        l.add(\"btv\");\n+        l.add(\"btw\");\n+        l.add(\"btx\");\n+        l.add(\"bty\");\n+        l.add(\"btz\");\n+        l.add(\"bua\");\n+        l.add(\"bub\");\n+        l.add(\"buc\");\n+        l.add(\"bud\");\n+        l.add(\"bue\");\n+        l.add(\"buf\");\n+        l.add(\"bug\");\n+        l.add(\"buh\");\n+        l.add(\"bui\");\n+        l.add(\"buj\");\n+        l.add(\"buk\");\n+        l.add(\"bum\");\n+        l.add(\"bun\");\n+        l.add(\"buo\");\n+        l.add(\"bup\");\n+        l.add(\"buq\");\n+        l.add(\"bus\");\n+        l.add(\"but\");\n+        l.add(\"buu\");\n+        l.add(\"buv\");\n+        l.add(\"buw\");\n+        l.add(\"bux\");\n+        l.add(\"buy\");\n+        l.add(\"buz\");\n+        l.add(\"bva\");\n+        l.add(\"bvb\");\n+        l.add(\"bvc\");\n+        l.add(\"bvd\");\n+        l.add(\"bve\");\n+        l.add(\"bvf\");\n+        l.add(\"bvg\");\n+        l.add(\"bvh\");\n+        l.add(\"bvi\");\n+        l.add(\"bvj\");\n+        l.add(\"bvk\");\n+        l.add(\"bvl\");\n+        l.add(\"bvm\");\n+        l.add(\"bvn\");\n+        l.add(\"bvo\");\n+        l.add(\"bvp\");\n+        l.add(\"bvq\");\n+        l.add(\"bvr\");\n+        l.add(\"bvt\");\n+        l.add(\"bvu\");\n+        l.add(\"bvv\");\n+        l.add(\"bvw\");\n+        l.add(\"bvx\");\n+        l.add(\"bvy\");\n+        l.add(\"bvz\");\n+        l.add(\"bwa\");\n+        l.add(\"bwb\");\n+        l.add(\"bwc\");\n+        l.add(\"bwd\");\n+        l.add(\"bwe\");\n+        l.add(\"bwf\");\n+        l.add(\"bwg\");\n+        l.add(\"bwh\");\n+        l.add(\"bwi\");\n+        l.add(\"bwj\");\n+        l.add(\"bwk\");\n+        l.add(\"bwl\");\n+        l.add(\"bwm\");\n+        l.add(\"bwn\");\n+        l.add(\"bwo\");\n+        l.add(\"bwp\");\n+        l.add(\"bwq\");\n+        l.add(\"bwr\");\n+        l.add(\"bws\");\n+        l.add(\"bwt\");\n+        l.add(\"bwu\");\n+        l.add(\"bww\");\n+        l.add(\"bwx\");\n+        l.add(\"bwy\");\n+        l.add(\"bwz\");\n+        l.add(\"bxa\");\n+        l.add(\"bxb\");\n+        l.add(\"bxc\");\n+        l.add(\"bxd\");\n+        l.add(\"bxe\");\n+        l.add(\"bxf\");\n+        l.add(\"bxg\");\n+        l.add(\"bxh\");\n+        l.add(\"bxi\");\n+        l.add(\"bxj\");\n+        l.add(\"bxk\");\n+        l.add(\"bxl\");\n+        l.add(\"bxm\");\n+        l.add(\"bxn\");\n+        l.add(\"bxo\");\n+        l.add(\"bxp\");\n+        l.add(\"bxq\");\n+        l.add(\"bxr\");\n+        l.add(\"bxs\");\n+        l.add(\"bxu\");\n+        l.add(\"bxv\");\n+        l.add(\"bxw\");\n+        l.add(\"bxz\");\n+        l.add(\"bya\");\n+        l.add(\"byb\");\n+        l.add(\"byc\");\n+        l.add(\"byd\");\n+        l.add(\"bye\");\n+        l.add(\"byf\");\n+        l.add(\"byg\");\n+        l.add(\"byh\");\n+        l.add(\"byi\");\n+        l.add(\"byj\");\n+        l.add(\"byk\");\n+        l.add(\"byl\");\n+        l.add(\"bym\");\n+        l.add(\"byn\");\n+        l.add(\"byo\");\n+        l.add(\"byp\");\n+        l.add(\"byq\");\n+        l.add(\"byr\");\n+        l.add(\"bys\");\n+        l.add(\"byt\");\n+        l.add(\"byv\");\n+        l.add(\"byw\");\n+        l.add(\"byx\");\n+        l.add(\"byz\");\n+        l.add(\"bza\");\n+        l.add(\"bzb\");\n+        l.add(\"bzc\");\n+        l.add(\"bzd\");\n+        l.add(\"bze\");\n+        l.add(\"bzf\");\n+        l.add(\"bzg\");\n+        l.add(\"bzh\");\n+        l.add(\"bzi\");\n+        l.add(\"bzj\");\n+        l.add(\"bzk\");\n+        l.add(\"bzl\");\n+        l.add(\"bzm\");\n+        l.add(\"bzn\");\n+        l.add(\"bzo\");\n+        l.add(\"bzp\");\n+        l.add(\"bzq\");\n+        l.add(\"bzr\");\n+        l.add(\"bzs\");\n+        l.add(\"bzt\");\n+        l.add(\"bzu\");\n+        l.add(\"bzv\");\n+        l.add(\"bzw\");\n+        l.add(\"bzx\");\n+        l.add(\"bzy\");\n+        l.add(\"bzz\");\n+        l.add(\"caa\");\n+        l.add(\"cab\");\n+        l.add(\"cac\");\n+        l.add(\"cad\");\n+        l.add(\"cae\");\n+        l.add(\"caf\");\n+        l.add(\"cag\");\n+        l.add(\"cah\");\n+        l.add(\"cai\");\n+        l.add(\"caj\");\n+        l.add(\"cak\");\n+        l.add(\"cal\");\n+        l.add(\"cam\");\n+        l.add(\"can\");\n+        l.add(\"cao\");\n+        l.add(\"cap\");\n+        l.add(\"caq\");\n+        l.add(\"car\");\n+        l.add(\"cas\");\n+        l.add(\"cau\");\n+        l.add(\"cav\");\n+        l.add(\"caw\");\n+        l.add(\"cax\");\n+        l.add(\"cay\");\n+        l.add(\"caz\");\n+        l.add(\"cba\");\n+        l.add(\"cbb\");\n+        l.add(\"cbc\");\n+        l.add(\"cbd\");\n+        l.add(\"cbg\");\n+        l.add(\"cbi\");\n+        l.add(\"cbj\");\n+        l.add(\"cbk\");\n+        l.add(\"cbl\");\n+        l.add(\"cbn\");\n+        l.add(\"cbo\");\n+        l.add(\"cbq\");\n+        l.add(\"cbr\");\n+        l.add(\"cbs\");\n+        l.add(\"cbt\");\n+        l.add(\"cbu\");\n+        l.add(\"cbv\");\n+        l.add(\"cbw\");\n+        l.add(\"cby\");\n+        l.add(\"ccc\");\n+        l.add(\"ccd\");\n+        l.add(\"cce\");\n+        l.add(\"ccg\");\n+        l.add(\"cch\");\n+        l.add(\"ccj\");\n+        l.add(\"ccl\");\n+        l.add(\"ccm\");\n+        l.add(\"ccn\");\n+        l.add(\"cco\");\n+        l.add(\"ccp\");\n+        l.add(\"ccr\");\n+        l.add(\"ccs\");\n+        l.add(\"cda\");\n+        l.add(\"cdc\");\n+        l.add(\"cdd\");\n+        l.add(\"cde\");\n+        l.add(\"cdf\");\n+        l.add(\"cdh\");\n+        l.add(\"cdi\");\n+        l.add(\"cdj\");\n+        l.add(\"cdm\");\n+        l.add(\"cdn\");\n+        l.add(\"cdo\");\n+        l.add(\"cdr\");\n+        l.add(\"cds\");\n+        l.add(\"cdy\");\n+        l.add(\"cdz\");\n+        l.add(\"cea\");\n+        l.add(\"ceb\");\n+        l.add(\"ceg\");\n+        l.add(\"cek\");\n+        l.add(\"cel\");\n+        l.add(\"cen\");\n+        l.add(\"cet\");\n+        l.add(\"cey\");\n+        l.add(\"cfa\");\n+        l.add(\"cfd\");\n+        l.add(\"cfg\");\n+        l.add(\"cfm\");\n+        l.add(\"cga\");\n+        l.add(\"cgc\");\n+        l.add(\"cgg\");\n+        l.add(\"cgk\");\n+        l.add(\"chb\");\n+        l.add(\"chc\");\n+        l.add(\"chd\");\n+        l.add(\"chf\");\n+        l.add(\"chg\");\n+        l.add(\"chh\");\n+        l.add(\"chj\");\n+        l.add(\"chk\");\n+        l.add(\"chl\");\n+        l.add(\"chm\");\n+        l.add(\"chn\");\n+        l.add(\"cho\");\n+        l.add(\"chp\");\n+        l.add(\"chq\");\n+        l.add(\"chr\");\n+        l.add(\"cht\");\n+        l.add(\"chw\");\n+        l.add(\"chx\");\n+        l.add(\"chy\");\n+        l.add(\"chz\");\n+        l.add(\"cia\");\n+        l.add(\"cib\");\n+        l.add(\"cic\");\n+        l.add(\"cid\");\n+        l.add(\"cie\");\n+        l.add(\"cih\");\n+        l.add(\"cik\");\n+        l.add(\"cim\");\n+        l.add(\"cin\");\n+        l.add(\"cip\");\n+        l.add(\"cir\");\n+        l.add(\"ciw\");\n+        l.add(\"ciy\");\n+        l.add(\"cja\");\n+        l.add(\"cje\");\n+        l.add(\"cjh\");\n+        l.add(\"cji\");\n+        l.add(\"cjk\");\n+        l.add(\"cjm\");\n+        l.add(\"cjn\");\n+        l.add(\"cjo\");\n+        l.add(\"cjp\");\n+        l.add(\"cjs\");\n+        l.add(\"cjv\");\n+        l.add(\"cjy\");\n+        l.add(\"ckb\");\n+        l.add(\"ckh\");\n+        l.add(\"ckl\");\n+        l.add(\"ckm\");\n+        l.add(\"ckn\");\n+        l.add(\"cko\");\n+        l.add(\"ckq\");\n+        l.add(\"ckr\");\n+        l.add(\"cks\");\n+        l.add(\"ckt\");\n+        l.add(\"cku\");\n+        l.add(\"ckv\");\n+        l.add(\"ckx\");\n+        l.add(\"cky\");\n+        l.add(\"ckz\");\n+        l.add(\"cla\");\n+        l.add(\"clc\");\n+        l.add(\"cld\");\n+        l.add(\"cle\");\n+        l.add(\"clh\");\n+        l.add(\"cli\");\n+        l.add(\"clj\");\n+        l.add(\"clk\");\n+        l.add(\"cll\");\n+        l.add(\"clm\");\n+        l.add(\"clo\");\n+        l.add(\"clt\");\n+        l.add(\"clu\");\n+        l.add(\"clw\");\n+        l.add(\"cly\");\n+        l.add(\"cma\");\n+        l.add(\"cmc\");\n+        l.add(\"cme\");\n+        l.add(\"cmg\");\n+        l.add(\"cmi\");\n+        l.add(\"cml\");\n+        l.add(\"cmm\");\n+        l.add(\"cmn\");\n+        l.add(\"cmo\");\n+        l.add(\"cmr\");\n+        l.add(\"cms\");\n+        l.add(\"cmt\");\n+        l.add(\"cna\");\n+        l.add(\"cnb\");\n+        l.add(\"cnc\");\n+        l.add(\"cng\");\n+        l.add(\"cnh\");\n+        l.add(\"cni\");\n+        l.add(\"cnk\");\n+        l.add(\"cnl\");\n+        l.add(\"cno\");\n+        l.add(\"cnp\");\n+        l.add(\"cnr\");\n+        l.add(\"cns\");\n+        l.add(\"cnt\");\n+        l.add(\"cnu\");\n+        l.add(\"cnw\");\n+        l.add(\"cnx\");\n+        l.add(\"coa\");\n+        l.add(\"cob\");\n+        l.add(\"coc\");\n+        l.add(\"cod\");\n+        l.add(\"coe\");\n+        l.add(\"cof\");\n+        l.add(\"cog\");\n+        l.add(\"coh\");\n+        l.add(\"coj\");\n+        l.add(\"cok\");\n+        l.add(\"col\");\n+        l.add(\"com\");\n+        l.add(\"con\");\n+        l.add(\"coo\");\n+        l.add(\"cop\");\n+        l.add(\"coq\");\n+        l.add(\"cot\");\n+        l.add(\"cou\");\n+        l.add(\"cov\");\n+        l.add(\"cow\");\n+        l.add(\"cox\");\n+        l.add(\"coz\");\n+        l.add(\"cpa\");\n+        l.add(\"cpb\");\n+        l.add(\"cpc\");\n+        l.add(\"cpe\");\n+        l.add(\"cpf\");\n+        l.add(\"cpg\");\n+        l.add(\"cpi\");\n+        l.add(\"cpn\");\n+        l.add(\"cpo\");\n+        l.add(\"cpp\");\n+        l.add(\"cps\");\n+        l.add(\"cpu\");\n+        l.add(\"cpx\");\n+        l.add(\"cpy\");\n+        l.add(\"cqd\");\n+        l.add(\"cra\");\n+        l.add(\"crb\");\n+        l.add(\"crc\");\n+        l.add(\"crd\");\n+        l.add(\"crf\");\n+        l.add(\"crg\");\n+        l.add(\"crh\");\n+        l.add(\"cri\");\n+        l.add(\"crj\");\n+        l.add(\"crk\");\n+        l.add(\"crl\");\n+        l.add(\"crm\");\n+        l.add(\"crn\");\n+        l.add(\"cro\");\n+        l.add(\"crp\");\n+        l.add(\"crq\");\n+        l.add(\"crr\");\n+        l.add(\"crs\");\n+        l.add(\"crt\");\n+        l.add(\"crv\");\n+        l.add(\"crw\");\n+        l.add(\"crx\");\n+        l.add(\"cry\");\n+        l.add(\"crz\");\n+        l.add(\"csa\");\n+        l.add(\"csb\");\n+        l.add(\"csc\");\n+        l.add(\"csd\");\n+        l.add(\"cse\");\n+        l.add(\"csf\");\n+        l.add(\"csg\");\n+        l.add(\"csh\");\n+        l.add(\"csi\");\n+        l.add(\"csj\");\n+        l.add(\"csk\");\n+        l.add(\"csl\");\n+        l.add(\"csm\");\n+        l.add(\"csn\");\n+        l.add(\"cso\");\n+        l.add(\"csp\");\n+        l.add(\"csq\");\n+        l.add(\"csr\");\n+        l.add(\"css\");\n+        l.add(\"cst\");\n+        l.add(\"csu\");\n+        l.add(\"csv\");\n+        l.add(\"csw\");\n+        l.add(\"csy\");\n+        l.add(\"csz\");\n+        l.add(\"cta\");\n+        l.add(\"ctc\");\n+        l.add(\"ctd\");\n+        l.add(\"cte\");\n+        l.add(\"ctg\");\n+        l.add(\"cth\");\n+        l.add(\"ctl\");\n+        l.add(\"ctm\");\n+        l.add(\"ctn\");\n+        l.add(\"cto\");\n+        l.add(\"ctp\");\n+        l.add(\"cts\");\n+        l.add(\"ctt\");\n+        l.add(\"ctu\");\n+        l.add(\"ctz\");\n+        l.add(\"cua\");\n+        l.add(\"cub\");\n+        l.add(\"cuc\");\n+        l.add(\"cug\");\n+        l.add(\"cuh\");\n+        l.add(\"cui\");\n+        l.add(\"cuj\");\n+        l.add(\"cuk\");\n+        l.add(\"cul\");\n+        l.add(\"cuo\");\n+        l.add(\"cup\");\n+        l.add(\"cuq\");\n+        l.add(\"cur\");\n+        l.add(\"cus\");\n+        l.add(\"cut\");\n+        l.add(\"cuu\");\n+        l.add(\"cuv\");\n+        l.add(\"cuw\");\n+        l.add(\"cux\");\n+        l.add(\"cuy\");\n+        l.add(\"cvg\");\n+        l.add(\"cvn\");\n+        l.add(\"cwa\");\n+        l.add(\"cwb\");\n+        l.add(\"cwd\");\n+        l.add(\"cwe\");\n+        l.add(\"cwg\");\n+        l.add(\"cwt\");\n+        l.add(\"cya\");\n+        l.add(\"cyb\");\n+        l.add(\"cyo\");\n+        l.add(\"czh\");\n+        l.add(\"czk\");\n+        l.add(\"czn\");\n+        l.add(\"czo\");\n+        l.add(\"czt\");\n+        l.add(\"daa\");\n+        l.add(\"dac\");\n+        l.add(\"dad\");\n+        l.add(\"dae\");\n+        l.add(\"dag\");\n+        l.add(\"dah\");\n+        l.add(\"dai\");\n+        l.add(\"daj\");\n+        l.add(\"dak\");\n+        l.add(\"dal\");\n+        l.add(\"dam\");\n+        l.add(\"dao\");\n+        l.add(\"daq\");\n+        l.add(\"dar\");\n+        l.add(\"das\");\n+        l.add(\"dau\");\n+        l.add(\"dav\");\n+        l.add(\"daw\");\n+        l.add(\"dax\");\n+        l.add(\"day\");\n+        l.add(\"daz\");\n+        l.add(\"dba\");\n+        l.add(\"dbb\");\n+        l.add(\"dbd\");\n+        l.add(\"dbe\");\n+        l.add(\"dbf\");\n+        l.add(\"dbg\");\n+        l.add(\"dbi\");\n+        l.add(\"dbj\");\n+        l.add(\"dbl\");\n+        l.add(\"dbm\");\n+        l.add(\"dbn\");\n+        l.add(\"dbo\");\n+        l.add(\"dbp\");\n+        l.add(\"dbq\");\n+        l.add(\"dbr\");\n+        l.add(\"dbt\");\n+        l.add(\"dbu\");\n+        l.add(\"dbv\");\n+        l.add(\"dbw\");\n+        l.add(\"dby\");\n+        l.add(\"dcc\");\n+        l.add(\"dcr\");\n+        l.add(\"dda\");\n+        l.add(\"ddd\");\n+        l.add(\"dde\");\n+        l.add(\"ddg\");\n+        l.add(\"ddi\");\n+        l.add(\"ddj\");\n+        l.add(\"ddn\");\n+        l.add(\"ddo\");\n+        l.add(\"ddr\");\n+        l.add(\"dds\");\n+        l.add(\"ddw\");\n+        l.add(\"dec\");\n+        l.add(\"ded\");\n+        l.add(\"dee\");\n+        l.add(\"def\");\n+        l.add(\"deg\");\n+        l.add(\"deh\");\n+        l.add(\"dei\");\n+        l.add(\"dek\");\n+        l.add(\"del\");\n+        l.add(\"dem\");\n+        l.add(\"den\");\n+        l.add(\"dep\");\n+        l.add(\"deq\");\n+        l.add(\"der\");\n+        l.add(\"des\");\n+        l.add(\"dev\");\n+        l.add(\"dez\");\n+        l.add(\"dga\");\n+        l.add(\"dgb\");\n+        l.add(\"dgc\");\n+        l.add(\"dgd\");\n+        l.add(\"dge\");\n+        l.add(\"dgg\");\n+        l.add(\"dgh\");\n+        l.add(\"dgi\");\n+        l.add(\"dgk\");\n+        l.add(\"dgl\");\n+        l.add(\"dgn\");\n+        l.add(\"dgo\");\n+        l.add(\"dgr\");\n+        l.add(\"dgs\");\n+        l.add(\"dgt\");\n+        l.add(\"dgw\");\n+        l.add(\"dgx\");\n+        l.add(\"dgz\");\n+        l.add(\"dhd\");\n+        l.add(\"dhg\");\n+        l.add(\"dhi\");\n+        l.add(\"dhl\");\n+        l.add(\"dhm\");\n+        l.add(\"dhn\");\n+        l.add(\"dho\");\n+        l.add(\"dhr\");\n+        l.add(\"dhs\");\n+        l.add(\"dhu\");\n+        l.add(\"dhv\");\n+        l.add(\"dhw\");\n+        l.add(\"dhx\");\n+        l.add(\"dia\");\n+        l.add(\"dib\");\n+        l.add(\"dic\");\n+        l.add(\"did\");\n+        l.add(\"dif\");\n+        l.add(\"dig\");\n+        l.add(\"dih\");\n+        l.add(\"dii\");\n+        l.add(\"dij\");\n+        l.add(\"dik\");\n+        l.add(\"dil\");\n+        l.add(\"dim\");\n+        l.add(\"din\");\n+        l.add(\"dio\");\n+        l.add(\"dip\");\n+        l.add(\"diq\");\n+        l.add(\"dir\");\n+        l.add(\"dis\");\n+        l.add(\"diu\");\n+        l.add(\"diw\");\n+        l.add(\"dix\");\n+        l.add(\"diy\");\n+        l.add(\"diz\");\n+        l.add(\"dja\");\n+        l.add(\"djb\");\n+        l.add(\"djc\");\n+        l.add(\"djd\");\n+        l.add(\"dje\");\n+        l.add(\"djf\");\n+        l.add(\"dji\");\n+        l.add(\"djj\");\n+        l.add(\"djk\");\n+        l.add(\"djm\");\n+        l.add(\"djn\");\n+        l.add(\"djo\");\n+        l.add(\"djr\");\n+        l.add(\"dju\");\n+        l.add(\"djw\");\n+        l.add(\"dka\");\n+        l.add(\"dkk\");\n+        l.add(\"dkr\");\n+        l.add(\"dks\");\n+        l.add(\"dkx\");\n+        l.add(\"dlg\");\n+        l.add(\"dlk\");\n+        l.add(\"dlm\");\n+        l.add(\"dln\");\n+        l.add(\"dma\");\n+        l.add(\"dmb\");\n+        l.add(\"dmc\");\n+        l.add(\"dmd\");\n+        l.add(\"dme\");\n+        l.add(\"dmf\");\n+        l.add(\"dmg\");\n+        l.add(\"dmk\");\n+        l.add(\"dml\");\n+        l.add(\"dmm\");\n+        l.add(\"dmn\");\n+        l.add(\"dmo\");\n+        l.add(\"dmr\");\n+        l.add(\"dms\");\n+        l.add(\"dmu\");\n+        l.add(\"dmv\");\n+        l.add(\"dmw\");\n+        l.add(\"dmx\");\n+        l.add(\"dmy\");\n+        l.add(\"dna\");\n+        l.add(\"dnd\");\n+        l.add(\"dne\");\n+        l.add(\"dng\");\n+        l.add(\"dni\");\n+        l.add(\"dnj\");\n+        l.add(\"dnk\");\n+        l.add(\"dnn\");\n+        l.add(\"dno\");\n+        l.add(\"dnr\");\n+        l.add(\"dnt\");\n+        l.add(\"dnu\");\n+        l.add(\"dnv\");\n+        l.add(\"dnw\");\n+        l.add(\"dny\");\n+        l.add(\"doa\");\n+        l.add(\"dob\");\n+        l.add(\"doc\");\n+        l.add(\"doe\");\n+        l.add(\"dof\");\n+        l.add(\"doh\");\n+        l.add(\"doi\");\n+        l.add(\"dok\");\n+        l.add(\"dol\");\n+        l.add(\"don\");\n+        l.add(\"doo\");\n+        l.add(\"dop\");\n+        l.add(\"doq\");\n+        l.add(\"dor\");\n+        l.add(\"dos\");\n+        l.add(\"dot\");\n+        l.add(\"dov\");\n+        l.add(\"dow\");\n+        l.add(\"dox\");\n+        l.add(\"doy\");\n+        l.add(\"doz\");\n+        l.add(\"dpp\");\n+        l.add(\"dra\");\n+        l.add(\"drb\");\n+        l.add(\"drc\");\n+        l.add(\"drd\");\n+        l.add(\"dre\");\n+        l.add(\"drg\");\n+        l.add(\"dri\");\n+        l.add(\"drl\");\n+        l.add(\"drn\");\n+        l.add(\"dro\");\n+        l.add(\"drq\");\n+        l.add(\"drs\");\n+        l.add(\"drt\");\n+        l.add(\"dru\");\n+        l.add(\"dry\");\n+        l.add(\"dsb\");\n+        l.add(\"dse\");\n+        l.add(\"dsh\");\n+        l.add(\"dsi\");\n+        l.add(\"dsl\");\n+        l.add(\"dsn\");\n+        l.add(\"dso\");\n+        l.add(\"dsq\");\n+        l.add(\"dta\");\n+        l.add(\"dtb\");\n+        l.add(\"dtd\");\n+        l.add(\"dth\");\n+        l.add(\"dti\");\n+        l.add(\"dtk\");\n+        l.add(\"dtm\");\n+        l.add(\"dtn\");\n+        l.add(\"dto\");\n+        l.add(\"dtp\");\n+        l.add(\"dtr\");\n+        l.add(\"dts\");\n+        l.add(\"dtt\");\n+        l.add(\"dtu\");\n+        l.add(\"dty\");\n+        l.add(\"dua\");\n+        l.add(\"dub\");\n+        l.add(\"duc\");\n+        l.add(\"due\");\n+        l.add(\"duf\");\n+        l.add(\"dug\");\n+        l.add(\"duh\");\n+        l.add(\"dui\");\n+        l.add(\"duk\");\n+        l.add(\"dul\");\n+        l.add(\"dum\");\n+        l.add(\"dun\");\n+        l.add(\"duo\");\n+        l.add(\"dup\");\n+        l.add(\"duq\");\n+        l.add(\"dur\");\n+        l.add(\"dus\");\n+        l.add(\"duu\");\n+        l.add(\"duv\");\n+        l.add(\"duw\");\n+        l.add(\"dux\");\n+        l.add(\"duy\");\n+        l.add(\"duz\");\n+        l.add(\"dva\");\n+        l.add(\"dwa\");\n+        l.add(\"dwk\");\n+        l.add(\"dwr\");\n+        l.add(\"dws\");\n+        l.add(\"dwu\");\n+        l.add(\"dww\");\n+        l.add(\"dwy\");\n+        l.add(\"dwz\");\n+        l.add(\"dya\");\n+        l.add(\"dyb\");\n+        l.add(\"dyd\");\n+        l.add(\"dyg\");\n+        l.add(\"dyi\");\n+        l.add(\"dym\");\n+        l.add(\"dyn\");\n+        l.add(\"dyo\");\n+        l.add(\"dyu\");\n+        l.add(\"dyy\");\n+        l.add(\"dza\");\n+        l.add(\"dze\");\n+        l.add(\"dzg\");\n+        l.add(\"dzl\");\n+        l.add(\"dzn\");\n+        l.add(\"eaa\");\n+        l.add(\"ebc\");\n+        l.add(\"ebg\");\n+        l.add(\"ebk\");\n+        l.add(\"ebo\");\n+        l.add(\"ebr\");\n+        l.add(\"ebu\");\n+        l.add(\"ecr\");\n+        l.add(\"ecs\");\n+        l.add(\"ecy\");\n+        l.add(\"eee\");\n+        l.add(\"efa\");\n+        l.add(\"efe\");\n+        l.add(\"efi\");\n+        l.add(\"ega\");\n+        l.add(\"egl\");\n+        l.add(\"ego\");\n+        l.add(\"egx\");\n+        l.add(\"egy\");\n+        l.add(\"ehu\");\n+        l.add(\"eip\");\n+        l.add(\"eit\");\n+        l.add(\"eiv\");\n+        l.add(\"eja\");\n+        l.add(\"eka\");\n+        l.add(\"eke\");\n+        l.add(\"ekg\");\n+        l.add(\"eki\");\n+        l.add(\"ekk\");\n+        l.add(\"ekl\");\n+        l.add(\"ekm\");\n+        l.add(\"eko\");\n+        l.add(\"ekp\");\n+        l.add(\"ekr\");\n+        l.add(\"eky\");\n+        l.add(\"ele\");\n+        l.add(\"elh\");\n+        l.add(\"eli\");\n+        l.add(\"elk\");\n+        l.add(\"elm\");\n+        l.add(\"elo\");\n+        l.add(\"elu\");\n+        l.add(\"elx\");\n+        l.add(\"ema\");\n+        l.add(\"emb\");\n+        l.add(\"eme\");\n+        l.add(\"emg\");\n+        l.add(\"emi\");\n+        l.add(\"emk\");\n+        l.add(\"emm\");\n+        l.add(\"emn\");\n+        l.add(\"emp\");\n+        l.add(\"ems\");\n+        l.add(\"emu\");\n+        l.add(\"emw\");\n+        l.add(\"emx\");\n+        l.add(\"emy\");\n+        l.add(\"ena\");\n+        l.add(\"enb\");\n+        l.add(\"enc\");\n+        l.add(\"end\");\n+        l.add(\"enf\");\n+        l.add(\"enh\");\n+        l.add(\"enl\");\n+        l.add(\"enm\");\n+        l.add(\"enn\");\n+        l.add(\"eno\");\n+        l.add(\"enq\");\n+        l.add(\"enr\");\n+        l.add(\"enu\");\n+        l.add(\"env\");\n+        l.add(\"enw\");\n+        l.add(\"enx\");\n+        l.add(\"eot\");\n+        l.add(\"epi\");\n+        l.add(\"era\");\n+        l.add(\"erg\");\n+        l.add(\"erh\");\n+        l.add(\"eri\");\n+        l.add(\"erk\");\n+        l.add(\"ero\");\n+        l.add(\"err\");\n+        l.add(\"ers\");\n+        l.add(\"ert\");\n+        l.add(\"erw\");\n+        l.add(\"ese\");\n+        l.add(\"esg\");\n+        l.add(\"esh\");\n+        l.add(\"esi\");\n+        l.add(\"esk\");\n+        l.add(\"esl\");\n+        l.add(\"esm\");\n+        l.add(\"esn\");\n+        l.add(\"eso\");\n+        l.add(\"esq\");\n+        l.add(\"ess\");\n+        l.add(\"esu\");\n+        l.add(\"esx\");\n+        l.add(\"esy\");\n+        l.add(\"etb\");\n+        l.add(\"etc\");\n+        l.add(\"eth\");\n+        l.add(\"etn\");\n+        l.add(\"eto\");\n+        l.add(\"etr\");\n+        l.add(\"ets\");\n+        l.add(\"ett\");\n+        l.add(\"etu\");\n+        l.add(\"etx\");\n+        l.add(\"etz\");\n+        l.add(\"euq\");\n+        l.add(\"eve\");\n+        l.add(\"evh\");\n+        l.add(\"evn\");\n+        l.add(\"ewo\");\n+        l.add(\"ext\");\n+        l.add(\"eya\");\n+        l.add(\"eyo\");\n+        l.add(\"eza\");\n+        l.add(\"eze\");\n+        l.add(\"faa\");\n+        l.add(\"fab\");\n+        l.add(\"fad\");\n+        l.add(\"faf\");\n+        l.add(\"fag\");\n+        l.add(\"fah\");\n+        l.add(\"fai\");\n+        l.add(\"faj\");\n+        l.add(\"fak\");\n+        l.add(\"fal\");\n+        l.add(\"fam\");\n+        l.add(\"fan\");\n+        l.add(\"fap\");\n+        l.add(\"far\");\n+        l.add(\"fat\");\n+        l.add(\"fau\");\n+        l.add(\"fax\");\n+        l.add(\"fay\");\n+        l.add(\"faz\");\n+        l.add(\"fbl\");\n+        l.add(\"fcs\");\n+        l.add(\"fer\");\n+        l.add(\"ffi\");\n+        l.add(\"ffm\");\n+        l.add(\"fgr\");\n+        l.add(\"fia\");\n+        l.add(\"fie\");\n+        l.add(\"fif\");\n+        l.add(\"fil\");\n+        l.add(\"fip\");\n+        l.add(\"fir\");\n+        l.add(\"fit\");\n+        l.add(\"fiu\");\n+        l.add(\"fiw\");\n+        l.add(\"fkk\");\n+        l.add(\"fkv\");\n+        l.add(\"fla\");\n+        l.add(\"flh\");\n+        l.add(\"fli\");\n+        l.add(\"fll\");\n+        l.add(\"fln\");\n+        l.add(\"flr\");\n+        l.add(\"fly\");\n+        l.add(\"fmp\");\n+        l.add(\"fmu\");\n+        l.add(\"fnb\");\n+        l.add(\"fng\");\n+        l.add(\"fni\");\n+        l.add(\"fod\");\n+        l.add(\"foi\");\n+        l.add(\"fom\");\n+        l.add(\"fon\");\n+        l.add(\"for\");\n+        l.add(\"fos\");\n+        l.add(\"fox\");\n+        l.add(\"fpe\");\n+        l.add(\"fqs\");\n+        l.add(\"frc\");\n+        l.add(\"frd\");\n+        l.add(\"frk\");\n+        l.add(\"frm\");\n+        l.add(\"fro\");\n+        l.add(\"frp\");\n+        l.add(\"frq\");\n+        l.add(\"frr\");\n+        l.add(\"frs\");\n+        l.add(\"frt\");\n+        l.add(\"fse\");\n+        l.add(\"fsl\");\n+        l.add(\"fss\");\n+        l.add(\"fub\");\n+        l.add(\"fuc\");\n+        l.add(\"fud\");\n+        l.add(\"fue\");\n+        l.add(\"fuf\");\n+        l.add(\"fuh\");\n+        l.add(\"fui\");\n+        l.add(\"fuj\");\n+        l.add(\"fum\");\n+        l.add(\"fun\");\n+        l.add(\"fuq\");\n+        l.add(\"fur\");\n+        l.add(\"fut\");\n+        l.add(\"fuu\");\n+        l.add(\"fuv\");\n+        l.add(\"fuy\");\n+        l.add(\"fvr\");\n+        l.add(\"fwa\");\n+        l.add(\"fwe\");\n+        l.add(\"gaa\");\n+        l.add(\"gab\");\n+        l.add(\"gac\");\n+        l.add(\"gad\");\n+        l.add(\"gae\");\n+        l.add(\"gaf\");\n+        l.add(\"gag\");\n+        l.add(\"gah\");\n+        l.add(\"gai\");\n+        l.add(\"gaj\");\n+        l.add(\"gak\");\n+        l.add(\"gal\");\n+        l.add(\"gam\");\n+        l.add(\"gan\");\n+        l.add(\"gao\");\n+        l.add(\"gap\");\n+        l.add(\"gaq\");\n+        l.add(\"gar\");\n+        l.add(\"gas\");\n+        l.add(\"gat\");\n+        l.add(\"gau\");\n+        l.add(\"gaw\");\n+        l.add(\"gax\");\n+        l.add(\"gay\");\n+        l.add(\"gaz\");\n+        l.add(\"gba\");\n+        l.add(\"gbb\");\n+        l.add(\"gbd\");\n+        l.add(\"gbe\");\n+        l.add(\"gbf\");\n+        l.add(\"gbg\");\n+        l.add(\"gbh\");\n+        l.add(\"gbi\");\n+        l.add(\"gbj\");\n+        l.add(\"gbk\");\n+        l.add(\"gbl\");\n+        l.add(\"gbm\");\n+        l.add(\"gbn\");\n+        l.add(\"gbo\");\n+        l.add(\"gbp\");\n+        l.add(\"gbq\");\n+        l.add(\"gbr\");\n+        l.add(\"gbs\");\n+        l.add(\"gbu\");\n+        l.add(\"gbv\");\n+        l.add(\"gbw\");\n+        l.add(\"gbx\");\n+        l.add(\"gby\");\n+        l.add(\"gbz\");\n+        l.add(\"gcc\");\n+        l.add(\"gcd\");\n+        l.add(\"gce\");\n+        l.add(\"gcf\");\n+        l.add(\"gcl\");\n+        l.add(\"gcn\");\n+        l.add(\"gcr\");\n+        l.add(\"gct\");\n+        l.add(\"gda\");\n+        l.add(\"gdb\");\n+        l.add(\"gdc\");\n+        l.add(\"gdd\");\n+        l.add(\"gde\");\n+        l.add(\"gdf\");\n+        l.add(\"gdg\");\n+        l.add(\"gdh\");\n+        l.add(\"gdi\");\n+        l.add(\"gdj\");\n+        l.add(\"gdk\");\n+        l.add(\"gdl\");\n+        l.add(\"gdm\");\n+        l.add(\"gdn\");\n+        l.add(\"gdo\");\n+        l.add(\"gdq\");\n+        l.add(\"gdr\");\n+        l.add(\"gds\");\n+        l.add(\"gdt\");\n+        l.add(\"gdu\");\n+        l.add(\"gdx\");\n+        l.add(\"gea\");\n+        l.add(\"geb\");\n+        l.add(\"gec\");\n+        l.add(\"ged\");\n+        l.add(\"gef\");\n+        l.add(\"geg\");\n+        l.add(\"geh\");\n+        l.add(\"gei\");\n+        l.add(\"gej\");\n+        l.add(\"gek\");\n+        l.add(\"gel\");\n+        l.add(\"gem\");\n+        l.add(\"geq\");\n+        l.add(\"ges\");\n+        l.add(\"gev\");\n+        l.add(\"gew\");\n+        l.add(\"gex\");\n+        l.add(\"gey\");\n+        l.add(\"gez\");\n+        l.add(\"gfk\");\n+        l.add(\"gft\");\n+        l.add(\"gga\");\n+        l.add(\"ggb\");\n+        l.add(\"ggd\");\n+        l.add(\"gge\");\n+        l.add(\"ggg\");\n+        l.add(\"ggk\");\n+        l.add(\"ggl\");\n+        l.add(\"ggt\");\n+        l.add(\"ggu\");\n+        l.add(\"ggw\");\n+        l.add(\"gha\");\n+        l.add(\"ghc\");\n+        l.add(\"ghe\");\n+        l.add(\"ghh\");\n+        l.add(\"ghk\");\n+        l.add(\"ghl\");\n+        l.add(\"ghn\");\n+        l.add(\"gho\");\n+        l.add(\"ghr\");\n+        l.add(\"ghs\");\n+        l.add(\"ght\");\n+        l.add(\"gia\");\n+        l.add(\"gib\");\n+        l.add(\"gic\");\n+        l.add(\"gid\");\n+        l.add(\"gie\");\n+        l.add(\"gig\");\n+        l.add(\"gih\");\n+        l.add(\"gil\");\n+        l.add(\"gim\");\n+        l.add(\"gin\");\n+        l.add(\"gip\");\n+        l.add(\"giq\");\n+        l.add(\"gir\");\n+        l.add(\"gis\");\n+        l.add(\"git\");\n+        l.add(\"giu\");\n+        l.add(\"giw\");\n+        l.add(\"gix\");\n+        l.add(\"giy\");\n+        l.add(\"giz\");\n+        l.add(\"gji\");\n+        l.add(\"gjk\");\n+        l.add(\"gjm\");\n+        l.add(\"gjn\");\n+        l.add(\"gjr\");\n+        l.add(\"gju\");\n+        l.add(\"gka\");\n+        l.add(\"gkd\");\n+        l.add(\"gke\");\n+        l.add(\"gkn\");\n+        l.add(\"gko\");\n+        l.add(\"gkp\");\n+        l.add(\"gku\");\n+        l.add(\"glc\");\n+        l.add(\"gld\");\n+        l.add(\"glh\");\n+        l.add(\"glj\");\n+        l.add(\"glk\");\n+        l.add(\"gll\");\n+        l.add(\"glo\");\n+        l.add(\"glr\");\n+        l.add(\"glu\");\n+        l.add(\"glw\");\n+        l.add(\"gly\");\n+        l.add(\"gma\");\n+        l.add(\"gmb\");\n+        l.add(\"gmd\");\n+        l.add(\"gme\");\n+        l.add(\"gmg\");\n+        l.add(\"gmh\");\n+        l.add(\"gml\");\n+        l.add(\"gmm\");\n+        l.add(\"gmn\");\n+        l.add(\"gmq\");\n+        l.add(\"gmr\");\n+        l.add(\"gmu\");\n+        l.add(\"gmv\");\n+        l.add(\"gmw\");\n+        l.add(\"gmx\");\n+        l.add(\"gmy\");\n+        l.add(\"gmz\");\n+        l.add(\"gna\");\n+        l.add(\"gnb\");\n+        l.add(\"gnc\");\n+        l.add(\"gnd\");\n+        l.add(\"gne\");\n+        l.add(\"gng\");\n+        l.add(\"gnh\");\n+        l.add(\"gni\");\n+        l.add(\"gnj\");\n+        l.add(\"gnk\");\n+        l.add(\"gnl\");\n+        l.add(\"gnm\");\n+        l.add(\"gnn\");\n+        l.add(\"gno\");\n+        l.add(\"gnq\");\n+        l.add(\"gnr\");\n+        l.add(\"gnt\");\n+        l.add(\"gnu\");\n+        l.add(\"gnw\");\n+        l.add(\"gnz\");\n+        l.add(\"goa\");\n+        l.add(\"gob\");\n+        l.add(\"goc\");\n+        l.add(\"god\");\n+        l.add(\"goe\");\n+        l.add(\"gof\");\n+        l.add(\"gog\");\n+        l.add(\"goh\");\n+        l.add(\"goi\");\n+        l.add(\"goj\");\n+        l.add(\"gok\");\n+        l.add(\"gol\");\n+        l.add(\"gom\");\n+        l.add(\"gon\");\n+        l.add(\"goo\");\n+        l.add(\"gop\");\n+        l.add(\"goq\");\n+        l.add(\"gor\");\n+        l.add(\"gos\");\n+        l.add(\"got\");\n+        l.add(\"gou\");\n+        l.add(\"gow\");\n+        l.add(\"gox\");\n+        l.add(\"goy\");\n+        l.add(\"goz\");\n+        l.add(\"gpa\");\n+        l.add(\"gpe\");\n+        l.add(\"gpn\");\n+        l.add(\"gqa\");\n+        l.add(\"gqi\");\n+        l.add(\"gqn\");\n+        l.add(\"gqr\");\n+        l.add(\"gqu\");\n+        l.add(\"gra\");\n+        l.add(\"grb\");\n+        l.add(\"grc\");\n+        l.add(\"grd\");\n+        l.add(\"grg\");\n+        l.add(\"grh\");\n+        l.add(\"gri\");\n+        l.add(\"grj\");\n+        l.add(\"grk\");\n+        l.add(\"grm\");\n+        l.add(\"gro\");\n+        l.add(\"grq\");\n+        l.add(\"grr\");\n+        l.add(\"grs\");\n+        l.add(\"grt\");\n+        l.add(\"gru\");\n+        l.add(\"grv\");\n+        l.add(\"grw\");\n+        l.add(\"grx\");\n+        l.add(\"gry\");\n+        l.add(\"grz\");\n+        l.add(\"gse\");\n+        l.add(\"gsg\");\n+        l.add(\"gsl\");\n+        l.add(\"gsm\");\n+        l.add(\"gsn\");\n+        l.add(\"gso\");\n+        l.add(\"gsp\");\n+        l.add(\"gss\");\n+        l.add(\"gsw\");\n+        l.add(\"gta\");\n+        l.add(\"gtu\");\n+        l.add(\"gua\");\n+        l.add(\"gub\");\n+        l.add(\"guc\");\n+        l.add(\"gud\");\n+        l.add(\"gue\");\n+        l.add(\"guf\");\n+        l.add(\"gug\");\n+        l.add(\"guh\");\n+        l.add(\"gui\");\n+        l.add(\"guk\");\n+        l.add(\"gul\");\n+        l.add(\"gum\");\n+        l.add(\"gun\");\n+        l.add(\"guo\");\n+        l.add(\"gup\");\n+        l.add(\"guq\");\n+        l.add(\"gur\");\n+        l.add(\"gus\");\n+        l.add(\"gut\");\n+        l.add(\"guu\");\n+        l.add(\"guw\");\n+        l.add(\"gux\");\n+        l.add(\"guz\");\n+        l.add(\"gva\");\n+        l.add(\"gvc\");\n+        l.add(\"gve\");\n+        l.add(\"gvf\");\n+        l.add(\"gvj\");\n+        l.add(\"gvl\");\n+        l.add(\"gvm\");\n+        l.add(\"gvn\");\n+        l.add(\"gvo\");\n+        l.add(\"gvp\");\n+        l.add(\"gvr\");\n+        l.add(\"gvs\");\n+        l.add(\"gvy\");\n+        l.add(\"gwa\");\n+        l.add(\"gwb\");\n+        l.add(\"gwc\");\n+        l.add(\"gwd\");\n+        l.add(\"gwe\");\n+        l.add(\"gwf\");\n+        l.add(\"gwg\");\n+        l.add(\"gwi\");\n+        l.add(\"gwj\");\n+        l.add(\"gwm\");\n+        l.add(\"gwn\");\n+        l.add(\"gwr\");\n+        l.add(\"gwt\");\n+        l.add(\"gwu\");\n+        l.add(\"gww\");\n+        l.add(\"gwx\");\n+        l.add(\"gxx\");\n+        l.add(\"gya\");\n+        l.add(\"gyb\");\n+        l.add(\"gyd\");\n+        l.add(\"gye\");\n+        l.add(\"gyf\");\n+        l.add(\"gyg\");\n+        l.add(\"gyi\");\n+        l.add(\"gyl\");\n+        l.add(\"gym\");\n+        l.add(\"gyn\");\n+        l.add(\"gyo\");\n+        l.add(\"gyr\");\n+        l.add(\"gyy\");\n+        l.add(\"gza\");\n+        l.add(\"gzi\");\n+        l.add(\"gzn\");\n+        l.add(\"haa\");\n+        l.add(\"hab\");\n+        l.add(\"hac\");\n+        l.add(\"had\");\n+        l.add(\"hae\");\n+        l.add(\"haf\");\n+        l.add(\"hag\");\n+        l.add(\"hah\");\n+        l.add(\"hai\");\n+        l.add(\"haj\");\n+        l.add(\"hak\");\n+        l.add(\"hal\");\n+        l.add(\"ham\");\n+        l.add(\"han\");\n+        l.add(\"hao\");\n+        l.add(\"hap\");\n+        l.add(\"haq\");\n+        l.add(\"har\");\n+        l.add(\"has\");\n+        l.add(\"hav\");\n+        l.add(\"haw\");\n+        l.add(\"hax\");\n+        l.add(\"hay\");\n+        l.add(\"haz\");\n+        l.add(\"hba\");\n+        l.add(\"hbb\");\n+        l.add(\"hbn\");\n+        l.add(\"hbo\");\n+        l.add(\"hbu\");\n+        l.add(\"hca\");\n+        l.add(\"hch\");\n+        l.add(\"hdn\");\n+        l.add(\"hds\");\n+        l.add(\"hdy\");\n+        l.add(\"hea\");\n+        l.add(\"hed\");\n+        l.add(\"heg\");\n+        l.add(\"heh\");\n+        l.add(\"hei\");\n+        l.add(\"hem\");\n+        l.add(\"hgm\");\n+        l.add(\"hgw\");\n+        l.add(\"hhi\");\n+        l.add(\"hhr\");\n+        l.add(\"hhy\");\n+        l.add(\"hia\");\n+        l.add(\"hib\");\n+        l.add(\"hid\");\n+        l.add(\"hif\");\n+        l.add(\"hig\");\n+        l.add(\"hih\");\n+        l.add(\"hii\");\n+        l.add(\"hij\");\n+        l.add(\"hik\");\n+        l.add(\"hil\");\n+        l.add(\"him\");\n+        l.add(\"hio\");\n+        l.add(\"hir\");\n+        l.add(\"hit\");\n+        l.add(\"hiw\");\n+        l.add(\"hix\");\n+        l.add(\"hji\");\n+        l.add(\"hka\");\n+        l.add(\"hke\");", "originalCommit": "b9f8c5cc1c446cf18ad337327fa9e6e0ab74629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MzM4NQ==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498383385", "bodyText": "The byte code is going to embed all of this... if you externalize to src/main/resources at least it's not in the core byte code", "author": "prb112", "createdAt": "2020-10-01T16:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4Mjg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM5MjA2NA==", "url": "https://github.com/IBM/FHIR/pull/1537#discussion_r498392064", "bodyText": "Will do.  Thanks!", "author": "tbieste", "createdAt": "2020-10-01T17:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4Mjg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "b768c31399c1d3b50066e6830e4219c1c68b6e77", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\nindex cd95334035..b06874a719 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/lang/util/LanguageRegistry.java\n\n@@ -6,8 +6,12 @@\n \n package com.ibm.fhir.model.lang.util;\n \n-import java.util.Arrays;\n-import java.util.Collections;\n+import java.io.BufferedReader;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n"}}, {"oid": "b768c31399c1d3b50066e6830e4219c1c68b6e77", "url": "https://github.com/IBM/FHIR/commit/b768c31399c1d3b50066e6830e4219c1c68b6e77", "message": "issue #1445 - Remove tool for generating class\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-01T18:18:47Z", "type": "commit"}]}