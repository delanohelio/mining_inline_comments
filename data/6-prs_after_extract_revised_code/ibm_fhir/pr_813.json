{"pr_number": 813, "pr_title": "Prepopulate ResourceType Names in Tenant Allocation #811", "pr_createdAt": "2020-03-18T16:48:47Z", "pr_url": "https://github.com/IBM/FHIR/pull/813", "timeline": [{"oid": "619594863b8d33a3181f7cb11cdc05162a4bb139", "url": "https://github.com/IBM/FHIR/commit/619594863b8d33a3181f7cb11cdc05162a4bb139", "message": "Prepopulate ResourceType Names in Tenant Allocation #811\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-03-18T16:48:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzQ1Mg==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r394587452", "bodyText": "can we use one try here?", "author": "albertwang-ibm", "createdAt": "2020-03-18T19:25:24Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -816,6 +817,23 @@ protected void allocateTenant() {\n         // Fill any static data tables (which are also partitioned by tenant)\n         populateStaticTables(gen, tenantKey);\n \n+        // Prepopulate the Resource Type Tables\n+        try (ITransaction tx = TransactionFactory.openTransaction(connectionPool)) {\n+            try {\n+                Connection c = connectionPool.getConnection();", "originalCommit": "619594863b8d33a3181f7cb11cdc05162a4bb139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODY2OQ==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r394588669", "bodyText": "it's the pattern that Robin follows through the code. thus the transaction factory, and then the nested tries", "author": "prb112", "createdAt": "2020-03-18T19:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5MDQyMg==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r394590422", "bodyText": "not sure if we need to close the connection or put it back to the connection pool ...", "author": "albertwang-ibm", "createdAt": "2020-03-18T19:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5OTYyNg==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r395199626", "bodyText": "We do not need to put it back in the pool... from what I've reviewed in the code, however, you are correct that we need to do autocloseable.", "author": "prb112", "createdAt": "2020-03-19T17:30:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwMDgxMw==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r395200813", "bodyText": "fixed", "author": "prb112", "createdAt": "2020-03-19T17:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzQ1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9dd32fe00baa417838533ce7722f423ce31fc72d", "chunk": "diff --git a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java\nindex 390bdc904c..be300b1fa8 100644\n--- a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java\n+++ b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java\n\n@@ -819,8 +819,8 @@ public class Main {\n \n         // Prepopulate the Resource Type Tables\n         try (ITransaction tx = TransactionFactory.openTransaction(connectionPool)) {\n-            try {\n-                Connection c = connectionPool.getConnection();\n+            try (Connection c = connectionPool.getConnection();) {\n+                \n                 Db2PopulateResourceTypes populateResourceTypes \n                     = new Db2PopulateResourceTypes(adminSchemaName, schemaName, tenantId);\n                 populateResourceTypes.run(translator, c);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODE2MA==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r394588160", "bodyText": "better to remove the empty lines.", "author": "albertwang-ibm", "createdAt": "2020-03-18T19:26:43Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.control;\n+\n+import java.sql.CallableStatement;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.sql.Types;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+import com.ibm.fhir.model.type.code.FHIRResourceType;\n+\n+/**\n+ * Populates the Resource Types Table\n+ */\n+public class Db2PopulateResourceTypes implements IDatabaseStatement {\n+    private final String adminSchemaName;\n+    private final String schemaName;\n+    private final int tenantId;\n+\n+    public Db2PopulateResourceTypes(String adminSchemaName, String schemaName, int tenantId) {\n+        this.adminSchemaName = adminSchemaName;\n+        this.schemaName      = schemaName;\n+        this.tenantId        = tenantId;\n+    }\n+\n+    @Override\n+    public void run(IDatabaseTranslator translator, Connection c) {\n+        try (Statement s = c.createStatement()) {\n+            s.execute(\"SET \" + adminSchemaName + \".SV_TENANT_ID = \" + tenantId);\n+            // Create tables for each resource type\n+\n+            for (FHIRResourceType.ValueSet rt : FHIRResourceType.ValueSet.values()) {\n+                String resourceType = rt.value();\n+                String callableStr = \"CALL \" + schemaName + \" .add_resource_type(?, ?)\";\n+                try (CallableStatement cStmt = c.prepareCall(callableStr);) {\n+                    cStmt.setString(1, resourceType);\n+                    cStmt.registerOutParameter(2, Types.INTEGER);\n+                    cStmt.execute();\n+                }\n+            }\n+        } catch (SQLException x) {\n+            throw translator.translate(x);\n+        }\n+", "originalCommit": "619594863b8d33a3181f7cb11cdc05162a4bb139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODQxOQ==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r394588419", "bodyText": "will do.", "author": "prb112", "createdAt": "2020-03-18T19:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NjMzNw==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r395186337", "bodyText": "fixed in my local commit", "author": "prb112", "createdAt": "2020-03-19T17:10:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "a966772fc847cecc13a3cb6f2385515955fa59b8", "chunk": "diff --git a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\nindex 47c1aa6fb0..ad7b6a28e1 100644\n--- a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\n+++ b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\n\n@@ -6,11 +6,19 @@\n \n package com.ibm.fhir.schema.control;\n \n-import java.sql.CallableStatement;\n+import java.io.IOException;\n+import java.io.InputStream;\n import java.sql.Connection;\n+import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import java.sql.Statement;\n-import java.sql.Types;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Properties;\n+import java.util.Set;\n+import java.util.logging.Logger;\n \n import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n"}}, {"oid": "a966772fc847cecc13a3cb6f2385515955fa59b8", "url": "https://github.com/IBM/FHIR/commit/a966772fc847cecc13a3cb6f2385515955fa59b8", "message": "Prepopulate ResourceType Names in Tenant Allocation #811\n\n- The resource_types.properties map is introduces to cache the reserved\nlogical_ids\n- A corresponding correctness test is introduced into the build process\n- Modify the CommonDatabaseAdapter to start at 1000\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-03-19T17:28:31Z", "type": "commit"}, {"oid": "9dd32fe00baa417838533ce7722f423ce31fc72d", "url": "https://github.com/IBM/FHIR/commit/9dd32fe00baa417838533ce7722f423ce31fc72d", "message": "Prepopulate ResourceType Names in Tenant Allocation #811\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-03-19T17:31:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDQzOQ==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r395250439", "bodyText": "maybe it should be Level.SEVERE and rollback?  Is there a case where we'd see this and want to keep going?", "author": "lmsurpre", "createdAt": "2020-03-19T18:55:14Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.control;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Properties;\n+import java.util.Set;\n+import java.util.logging.Logger;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+import com.ibm.fhir.model.type.code.FHIRResourceType;\n+\n+/**\n+ * Populates the Resource Types Table\n+ */\n+public class Db2PopulateResourceTypes implements IDatabaseStatement {\n+    private static final Logger LOGGER = Logger.getLogger(Db2PopulateResourceTypes.class.getName());\n+    private final String adminSchemaName;\n+    private final String schemaName;\n+    private final int tenantId;\n+\n+    public Db2PopulateResourceTypes(String adminSchemaName, String schemaName, int tenantId) {\n+        this.adminSchemaName = adminSchemaName;\n+        this.schemaName      = schemaName;\n+        this.tenantId        = tenantId;\n+    }\n+\n+    @Override\n+    public void run(IDatabaseTranslator translator, Connection c) {\n+        final String stmtVariable = String.format(\"SET %s.SV_TENANT_ID = %d\", adminSchemaName, tenantId);\n+        final String stmtResourceTypeInsert =\n+                String.format(\n+                        \"INSERT INTO %s.resource_types (mt_id, resource_type_id, resource_type) \" +\n+                                \"VALUES %s.sv_tenant_id, ?, ?);\",\n+                        schemaName, adminSchemaName);\n+        try (Statement s = c.createStatement(); PreparedStatement batch = c.prepareStatement(stmtResourceTypeInsert)) {\n+            s.execute(stmtVariable);\n+            try (InputStream fis =\n+                    Db2PopulateResourceTypes.class.getClassLoader().getResourceAsStream(\"resource_types.properties\")) {\n+                Properties props = new Properties();\n+                props.load(fis);\n+\n+                for (Entry<Object, Object> valueEntry : props.entrySet()) {\n+                    Integer curVal = Integer.parseInt((String) valueEntry.getValue());\n+                    String resource = (String) valueEntry.getKey();\n+                    batch.setString(1, resource);\n+                    batch.setLong(2, curVal);\n+                }\n+\n+                // Check Error Codes. \n+                int[] codes = batch.executeBatch();\n+                int errorCodes = 0;\n+                for (int code : codes) {\n+                    if (code != 0) {\n+                        errorCodes++;\n+                    }\n+                }\n+                if (errorCodes > 0) {\n+                    LOGGER.warning(\"at least one of the Resource Types are not populated [\" + errorCodes + \"]\");", "originalCommit": "9dd32fe00baa417838533ce7722f423ce31fc72d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MzU4Nw==", "url": "https://github.com/IBM/FHIR/pull/813#discussion_r395253587", "bodyText": "You are right - fixing", "author": "prb112", "createdAt": "2020-03-19T19:00:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "fa1ffd3603031146ed0d82301589c6e125dc3119", "chunk": "diff --git a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\nindex ad7b6a28e1..159a374419 100644\n--- a/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\n+++ b/fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/Db2PopulateResourceTypes.java\n\n@@ -70,7 +70,8 @@ public class Db2PopulateResourceTypes implements IDatabaseStatement {\n                     }\n                 }\n                 if (errorCodes > 0) {\n-                    LOGGER.warning(\"at least one of the Resource Types are not populated [\" + errorCodes + \"]\");\n+                    LOGGER.severe(\"at least one of the Resource Types are not populated [\" + errorCodes + \"]\");\n+                    c.rollback();\n                 }\n             } catch (IOException e) {\n                 // Wrap and Send downstream \n"}}, {"oid": "fa1ffd3603031146ed0d82301589c6e125dc3119", "url": "https://github.com/IBM/FHIR/commit/fa1ffd3603031146ed0d82301589c6e125dc3119", "message": "Prepopulate ResourceType Names in Tenant Allocation #811\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-03-19T19:12:43Z", "type": "commit"}]}