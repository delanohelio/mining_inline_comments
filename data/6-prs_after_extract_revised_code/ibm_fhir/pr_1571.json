{"pr_number": 1571, "pr_title": "Issue 1570 - Fix issues with Reference search and add comprehensive tests", "pr_createdAt": "2020-10-08T01:16:23Z", "pr_url": "https://github.com/IBM/FHIR/pull/1571", "timeline": [{"oid": "3c573224ced296b138e63966d44bf559d7f701e2", "url": "https://github.com/IBM/FHIR/commit/3c573224ced296b138e63966d44bf559d7f701e2", "message": "fix: introduce some regressions with issue 300\n\n- fixed and added tests to confirm the behavior\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-08T00:07:55Z", "type": "commit"}, {"oid": "7ac153874f8ef4229df9af1e0309514f2a5bf6ab", "url": "https://github.com/IBM/FHIR/commit/7ac153874f8ef4229df9af1e0309514f2a5bf6ab", "message": "Merge branch 'master' of github.com:IBM/FHIR", "committedDate": "2020-10-08T00:09:53Z", "type": "commit"}, {"oid": "2ada78c5b986bfcf6d4edfb1be7b914b00b0cd53", "url": "https://github.com/IBM/FHIR/commit/2ada78c5b986bfcf6d4edfb1be7b914b00b0cd53", "message": "FHIR Search using Reference Behavior working in unexpected ways #1570\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-08T01:15:39Z", "type": "commit"}, {"oid": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e", "url": "https://github.com/IBM/FHIR/commit/f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e", "message": "fix: missed an add/commit for the unit tests\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-08T12:17:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0Mzk2Mg==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502043962", "bodyText": "should it be a log statement?  or remove altogether?", "author": "lmsurpre", "createdAt": "2020-10-08T22:19:43Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -529,6 +527,7 @@ private SqlQueryData processReferenceParm(Class<?> resourceType, QueryParameter\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n+                System.out.println(queryParm.getType());", "originalCommit": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDcyNQ==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502080725", "bodyText": "fixed  - it was meant  for debugging, and then I wanted to remove it.  Thanks for the eagle eyes", "author": "prb112", "createdAt": "2020-10-08T23:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0Mzk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ab7f7f1efa41377f11d0c1802567d1302c3e2726", "chunk": "diff --git a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\nindex 7a3d9b2be0..ece7250099 100644\n--- a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n+++ b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n\n@@ -527,7 +527,6 @@ public class JDBCQueryBuilder extends AbstractQueryBuilder<SqlQueryData> {\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n-                System.out.println(queryParm.getType());\n                 if (!SearchConstants.Type.REFERENCE.equals(queryParm.getType())) {\n                     // Not a Reference\n                     searchValue =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDM3MQ==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502080371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            System.out.println(queryParm.getType());", "author": "prb112", "createdAt": "2020-10-08T23:39:36Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -529,6 +527,7 @@ private SqlQueryData processReferenceParm(Class<?> resourceType, QueryParameter\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n+                System.out.println(queryParm.getType());", "originalCommit": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab7f7f1efa41377f11d0c1802567d1302c3e2726", "chunk": "diff --git a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\nindex 7a3d9b2be0..ece7250099 100644\n--- a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n+++ b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n\n@@ -527,7 +527,6 @@ public class JDBCQueryBuilder extends AbstractQueryBuilder<SqlQueryData> {\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n-                System.out.println(queryParm.getType());\n                 if (!SearchConstants.Type.REFERENCE.equals(queryParm.getType())) {\n                     // Not a Reference\n                     searchValue =\n"}}, {"oid": "ab7f7f1efa41377f11d0c1802567d1302c3e2726", "url": "https://github.com/IBM/FHIR/commit/ab7f7f1efa41377f11d0c1802567d1302c3e2726", "message": "Update fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-08T23:39:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNjgzOQ==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502126839", "bodyText": "I assume the limit here is for performance reasons?\nThe longest resource type I found is 30 chars, but I still wonder if we should bump this to like 48 or 64 just to be catious.\nAlternatively, we could check the actual list of resource names from the resourceTypes valueset and then use the one with max length, but thats probably overkill.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n          \n          \n            \n                private static final String REGEX = \"/([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "author": "lmsurpre", "createdAt": "2020-10-09T01:43:33Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java", "diffHunk": "@@ -18,11 +18,11 @@\n  * http://server/Patient/1\n  * -> http://server/Patient/1\n  * -> Patient/1\n- * -> 1\n+ * -> 1 (only when there is one target)\n  */\n public class UrlHandlerImpl implements ParameterValueHandler {\n \n-    private static final String REGEX = \"/[A-z][a-z]{2,10}/[A-Za-z0-9\\\\-\\\\.]{1,64}$\";\n+    private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "originalCommit": "ab7f7f1efa41377f11d0c1802567d1302c3e2726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNzk2NA==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502127964", "bodyText": "we also have a related URL pattern in FHIRUtil.buildReferencePattern()\nsb.append(\")\\\\/[A-Za-z0-9\\\\-\\\\.]{1,64}(\\\\/_history\\\\/[A-Za-z0-9\\\\-\\\\.]{1,64})?\");\n\nalthough i'm not sure why the / chars are escaped in that one...", "author": "lmsurpre", "createdAt": "2020-10-09T01:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNjgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "45d871b9f8f69f15ef5e180913260a772abf6f65", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java b/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java\nindex cfe866d47a..4ea5edb338 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java\n\n@@ -22,7 +22,7 @@ import com.ibm.fhir.search.parameters.QueryParameterValue;\n  */\n public class UrlHandlerImpl implements ParameterValueHandler {\n \n-    private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n+    private static final String REGEX = \"/([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n     private static final Pattern PATTERN = Pattern.compile(REGEX);\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyOTAwOA==", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502129008", "bodyText": "same comment about erring on the side of caution on referencetype length\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String REGEX = \"^([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n          \n          \n            \n                private static final String REGEX = \"^([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "author": "lmsurpre", "createdAt": "2020-10-09T01:53:08Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java", "diffHunk": "@@ -6,18 +6,26 @@\n package com.ibm.fhir.search.reference.value;\n \n import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n import com.ibm.fhir.search.parameters.QueryParameterValue;\n \n /**\n  * The supported cases are:\n  * Patient/1\n  * -> http://server/Patient/1\n+ * -> 1 (only when there is one target)\n  */\n public class TypeIdHandlerImpl implements ParameterValueHandler {\n+\n+    private static final String REGEX = \"^([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "originalCommit": "ab7f7f1efa41377f11d0c1802567d1302c3e2726", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d871b9f8f69f15ef5e180913260a772abf6f65", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java b/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java\nindex f9f1868629..26230c2a76 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java\n\n@@ -19,7 +19,7 @@ import com.ibm.fhir.search.parameters.QueryParameterValue;\n  */\n public class TypeIdHandlerImpl implements ParameterValueHandler {\n \n-    private static final String REGEX = \"^([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n+    private static final String REGEX = \"^([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n     private static final Pattern PATTERN = Pattern.compile(REGEX);\n \n     @Override\n"}}, {"oid": "45d871b9f8f69f15ef5e180913260a772abf6f65", "url": "https://github.com/IBM/FHIR/commit/45d871b9f8f69f15ef5e180913260a772abf6f65", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-10-09T12:17:26Z", "type": "commit"}, {"oid": "a4c753fcfb272f211003d6cb28b1ce93f09f20e3", "url": "https://github.com/IBM/FHIR/commit/a4c753fcfb272f211003d6cb28b1ce93f09f20e3", "message": "fix: update per code review\n\n- added support for Url with history\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-12T14:00:22Z", "type": "commit"}, {"oid": "171ba4acb2cd530b5b5984191659784426998e0f", "url": "https://github.com/IBM/FHIR/commit/171ba4acb2cd530b5b5984191659784426998e0f", "message": "fix: group counts always matched and now we only check to see if its\nvalid\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-12T14:17:29Z", "type": "commit"}, {"oid": "1252bbece0cbdbcb4ed58c5a2c01de76aab7f2a9", "url": "https://github.com/IBM/FHIR/commit/1252bbece0cbdbcb4ed58c5a2c01de76aab7f2a9", "message": "fix: add type id handler support for vread\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-10-12T19:31:37Z", "type": "commit"}]}