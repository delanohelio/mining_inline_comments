{"pr_number": 1335, "pr_title": "Issue #1327 Improve execution plans for search", "pr_createdAt": "2020-07-16T19:57:17Z", "pr_url": "https://github.com/IBM/FHIR/pull/1335", "timeline": [{"oid": "230b5dff1675435289fb9939877f508e9a15750b", "url": "https://github.com/IBM/FHIR/commit/230b5dff1675435289fb9939877f508e9a15750b", "message": "issue #1327 replace EXISTS with top level DISTINCT for better search execution plans\n\nSigned-off-by: Robin Arnold <robin.arnold23@ibm.com>", "committedDate": "2020-07-16T18:51:48Z", "type": "commit"}, {"oid": "cfa1bc1df851224a02440b8b9fb2d01b5242a718", "url": "https://github.com/IBM/FHIR/commit/cfa1bc1df851224a02440b8b9fb2d01b5242a718", "message": "Merge remote-tracking branch 'origin/master' into issue-1327b", "committedDate": "2020-07-16T18:54:01Z", "type": "commit"}, {"oid": "cf852a9a056465d8f61412388e108c02d75125eb", "url": "https://github.com/IBM/FHIR/commit/cf852a9a056465d8f61412388e108c02d75125eb", "message": "issue #1327 reordered LR and R joins in system search to match parameter order\n\nSigned-off-by: Robin Arnold <robin.arnold23@ibm.com>", "committedDate": "2020-07-16T19:53:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0MzU5Ng==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456043596", "bodyText": "I'm ok with it left there, probably should wrap in is loggable fine and log.fine", "author": "prb112", "createdAt": "2020-07-16T20:00:19Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -648,8 +648,13 @@ protected SqlQueryData processChainedReferenceParm(QueryParameter queryParm) thr\n             } else {\n                 // This logic processes the LAST parameter in the chain.\n                 // Build this piece: CPx.PARAMETER_NAME_ID = x AND CPx.STR_VALUE = ?\n+                if (chainedParmVar == null) {\n+                    chainedParmVar            = CP + 1;\n+                }\n                 Class<?> chainedResourceType = ModelSupport.getResourceType(resourceTypeName);\n                 SqlQueryData sqlQueryData = buildQueryParm(chainedResourceType, currentParm, chainedParmVar);\n+\n+                // log.info(\"chained sqlQueryData[\" + chainedParmVar + \"] = \" + sqlQueryData.getQueryString());", "originalCommit": "cf852a9a056465d8f61412388e108c02d75125eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1MjQ5Mg==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456052492", "bodyText": "wrapped and changed to fine", "author": "punktilious", "createdAt": "2020-07-16T20:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0MzU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0a5454373edc69ca6ee6a707ecc0757b4ab6f59e", "chunk": "diff --git a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\nindex 7e89b55e9c..f2caf0bd93 100644\n--- a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n+++ b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java\n\n@@ -654,7 +655,9 @@ public class JDBCQueryBuilder extends AbstractQueryBuilder<SqlQueryData> {\n                 Class<?> chainedResourceType = ModelSupport.getResourceType(resourceTypeName);\n                 SqlQueryData sqlQueryData = buildQueryParm(chainedResourceType, currentParm, chainedParmVar);\n \n-                // log.info(\"chained sqlQueryData[\" + chainedParmVar + \"] = \" + sqlQueryData.getQueryString());\n+                if (log.isLoggable(Level.FINE)) {\n+                    log.fine(\"chained sqlQueryData[\" + chainedParmVar + \"] = \" + sqlQueryData.getQueryString());\n+                }\n                 whereClauseSegment.append(sqlQueryData.getQueryString());\n                 bindVariables.addAll(sqlQueryData.getBindVariables());\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0MzkxMA==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456043910", "bodyText": "Copyright 2019", "author": "prb112", "createdAt": "2020-07-16T20:00:55Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/type/LocationParmBehaviorUtil.java", "diffHunk": "@@ -46,7 +46,7 @@ public LocationParmBehaviorUtil() {\n      * @param boundingAreas\n      */\n     public void buildLocationSearchQuery(String populateNameIdSubSegment, StringBuilder whereClauseSegment,\n-            List<Object> bindVariables, List<Bounding> boundingAreas) {", "originalCommit": "cf852a9a056465d8f61412388e108c02d75125eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1MjU4Mg==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456052582", "bodyText": "fixed", "author": "punktilious", "createdAt": "2020-07-16T20:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0MzkxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NDA3Mg==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456044072", "bodyText": "2020 copyright", "author": "prb112", "createdAt": "2020-07-16T20:01:19Z", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/test/util/LocationParmBehaviorUtilTest.java", "diffHunk": "@@ -37,7 +39,7 @@ private void runTestBoundingBox(List<Object> expectedBindVariables, String expec\n         List<Object> actualBindVariables = new ArrayList<>();\n \n         LocationParmBehaviorUtil util = new LocationParmBehaviorUtil();\n-        util.buildQueryForBoundingBox(actualWhereClauseSegment, actualBindVariables, boundingBox);\n+        util.buildQueryForBoundingBox(actualWhereClauseSegment, actualBindVariables, boundingBox, JDBCConstants.PARAMETER_TABLE_ALIAS);", "originalCommit": "cf852a9a056465d8f61412388e108c02d75125eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1MjY3NA==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456052674", "bodyText": "fixed", "author": "punktilious", "createdAt": "2020-07-16T20:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NDA3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NDUzMw==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456044533", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-07-16T20:02:13Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/util/AbstractQueryBuilder.java", "diffHunk": "@@ -233,7 +233,7 @@ protected T1 buildQueryParm(Class<?> resourceType, QueryParameter queryParm)\n      * @return T1 - A query segment related to a LocationPosition\n      * @throws FHIRPersistenceException\n      */\n-    protected T1 processLocationPosition(List<QueryParameter> queryParameters) throws FHIRPersistenceException {\n+    protected T1 processLocationPosition(List<QueryParameter> queryParameters, String paramTableAlias) throws FHIRPersistenceException {", "originalCommit": "cf852a9a056465d8f61412388e108c02d75125eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1Mjc1MA==", "url": "https://github.com/IBM/FHIR/pull/1335#discussion_r456052750", "bodyText": "fixed", "author": "punktilious", "createdAt": "2020-07-16T20:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NDUzMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0a5454373edc69ca6ee6a707ecc0757b4ab6f59e", "url": "https://github.com/IBM/FHIR/commit/0a5454373edc69ca6ee6a707ecc0757b4ab6f59e", "message": "issue #1327 copyright and logging per review\n\nSigned-off-by: Robin Arnold <robin.arnold23@ibm.com>", "committedDate": "2020-07-16T20:16:11Z", "type": "commit"}]}