{"pr_number": 1225, "pr_title": "Issue 1210a", "pr_createdAt": "2020-06-12T14:59:49Z", "pr_url": "https://github.com/IBM/FHIR/pull/1225", "timeline": [{"oid": "59ef9a07f9501dfea2e1a68103cb8d545e3ba5e0", "url": "https://github.com/IBM/FHIR/commit/59ef9a07f9501dfea2e1a68103cb8d545e3ba5e0", "message": "Capability Statement Takes Too Long #1210\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-06-12T14:57:21Z", "type": "commit"}, {"oid": "afa67a2d07be03c339574fb53f368c105407064a", "url": "https://github.com/IBM/FHIR/commit/afa67a2d07be03c339574fb53f368c105407064a", "message": "Capability Statement Takes Too Long #1210\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-06-12T14:58:27Z", "type": "commit"}, {"oid": "d15d9634dcd2dd6abba420f556fe303242ced727", "url": "https://github.com/IBM/FHIR/commit/d15d9634dcd2dd6abba420f556fe303242ced727", "message": "Capability Statement Takes Too Long #1210\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-06-12T18:51:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MzUwNg==", "url": "https://github.com/IBM/FHIR/pull/1225#discussion_r439593506", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Set<Canonical> checkOrCreateSet(String k, Set<Canonical> v,FHIRRegistryResource registryResource){\n          \n          \n            \n                private Set<Canonical> checkOrCreateSet(String k, Set<Canonical> v, FHIRRegistryResource registryResource) {", "author": "lmsurpre", "createdAt": "2020-06-12T19:00:12Z", "path": "fhir-registry/src/main/java/com/ibm/fhir/registry/FHIRRegistry.java", "diffHunk": "@@ -270,4 +274,31 @@ private Resource getResource(FHIRRegistryResource registryResource, String url,\n         }\n         return providers;\n     }\n-}\n+\n+    /**\n+     * Given the list of providers, the method scans through the list to find all profile resource, and merge them together\n+     * in order to develop a list of resource specific canonical URLs.\n+     * @return\n+     */\n+    public Map<String,Set<Canonical>> getProfileResources() {\n+        Map<String,Set<Canonical>> resourceTypeWithCanonicalUrls = new HashMap<>();\n+        providers.stream().map(provider -> provider.getProfileResources())\n+                .flatMap(Collection::stream)\n+                .forEach(r -> processResource(r, resourceTypeWithCanonicalUrls));\n+        return resourceTypeWithCanonicalUrls;\n+    }\n+\n+    private void processResource(FHIRRegistryResource registryResource, Map<String,Set<Canonical>> resourceTypeWithCanonicalUrls) {\n+        String type = registryResource.getType();\n+        resourceTypeWithCanonicalUrls.compute(type, (k,v) -> checkOrCreateSet(k,v,registryResource));\n+    }\n+\n+    private Set<Canonical> checkOrCreateSet(String k, Set<Canonical> v,FHIRRegistryResource registryResource){", "originalCommit": "d15d9634dcd2dd6abba420f556fe303242ced727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYwMDc4NA==", "url": "https://github.com/IBM/FHIR/pull/1225#discussion_r439600784", "bodyText": "Doing this locally..", "author": "prb112", "createdAt": "2020-06-12T19:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MzUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYwMjA4Mg==", "url": "https://github.com/IBM/FHIR/pull/1225#discussion_r439602082", "bodyText": "Fixed", "author": "prb112", "createdAt": "2020-06-12T19:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MzUwNg=="}], "type": "inlineReview", "revised_code": {"commit": "3b1b52c59fbfe2e7c6617bb70d1661a847ef4be0", "chunk": "diff --git a/fhir-registry/src/main/java/com/ibm/fhir/registry/FHIRRegistry.java b/fhir-registry/src/main/java/com/ibm/fhir/registry/FHIRRegistry.java\nindex ce7f51b59d..55eea9cb26 100644\n--- a/fhir-registry/src/main/java/com/ibm/fhir/registry/FHIRRegistry.java\n+++ b/fhir-registry/src/main/java/com/ibm/fhir/registry/FHIRRegistry.java\n\n@@ -280,7 +280,7 @@ public final class FHIRRegistry {\n      * in order to develop a list of resource specific canonical URLs.\n      * @return\n      */\n-    public Map<String,Set<Canonical>> getProfileResources() {\n+    public Map<String,Set<Canonical>> getProfiles() {\n         Map<String,Set<Canonical>> resourceTypeWithCanonicalUrls = new HashMap<>();\n         providers.stream().map(provider -> provider.getProfileResources())\n                 .flatMap(Collection::stream)\n"}}, {"oid": "3b1b52c59fbfe2e7c6617bb70d1661a847ef4be0", "url": "https://github.com/IBM/FHIR/commit/3b1b52c59fbfe2e7c6617bb70d1661a847ef4be0", "message": "Capability Statement Takes Too Long #1210\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-06-12T19:20:49Z", "type": "commit"}]}