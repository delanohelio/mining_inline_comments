{"pr_number": 1394, "pr_title": "Fix javadoc and parameter name and add warning to FHIRUtil.getRandomKey", "pr_createdAt": "2020-07-31T19:03:11Z", "pr_url": "https://github.com/IBM/FHIR/pull/1394", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4NTUxNQ==", "url": "https://github.com/IBM/FHIR/pull/1394#discussion_r463785515", "bodyText": "I know it's not related to this change, but why are we seeding here? Potential OWASP because currentTimeMillis isn't sufficiently random.", "author": "punktilious", "createdAt": "2020-07-31T19:14:10Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java", "diffHunk": "@@ -570,17 +570,19 @@ public static boolean isFailure(IssueSeverity severity) {\n     }\n \n     /**\n-     * Generate a random AES key or 32 byte value encoded as a Base64 string.\n+     * Generate a random key using the passed algorithm or, if that algorithm isn't supported, a random 32 byte value.\n+     * In either case, the resulting value is encoded as a Base64 string before returning.\n      *\n-     * @return\n+     * @return a base64-encoded random key string\n      */\n-    public static String getRandomKey(String key) {\n+    public static String getRandomKey(String algorithm) {\n         KeyGenerator keyGen;\n         try {\n-            keyGen = KeyGenerator.getInstance(key);\n+            keyGen = KeyGenerator.getInstance(algorithm);\n             keyGen.init(256);\n             return Base64.getEncoder().encodeToString(keyGen.generateKey().getEncoded());\n         } catch (NoSuchAlgorithmException e) {\n+            log.warning(\"Algorithm '\" + algorithm + \"' is not supported; using SecureRandom instead\");\n             byte[] buffer = new byte[32];\n             RANDOM.setSeed(System.currentTimeMillis());", "originalCommit": "ee6c87751105c17fd5a054997b176f5bcb043332", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4Njk4Nw==", "url": "https://github.com/IBM/FHIR/pull/1394#discussion_r463786987", "bodyText": "I was wondering the same thing, which is why i added the warning...i'm not even sure it should fallback to SecureRandom", "author": "lmsurpre", "createdAt": "2020-07-31T19:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4NTUxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4NzY2MQ==", "url": "https://github.com/IBM/FHIR/pull/1394#discussion_r463787661", "bodyText": "I don't think this should be in FHIRUtil -- it should go into bulkdata, and be hidden away.", "author": "prb112", "createdAt": "2020-07-31T19:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4NTUxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b9b13228451489924c5ad7e588f8c112d5a138ed", "chunk": "diff --git a/fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java b/fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java\nindex fe93d8bc73..e708e0b18a 100644\n--- a/fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java\n+++ b/fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java\n\n@@ -576,15 +576,13 @@ public class FHIRUtil {\n      * @return a base64-encoded random key string\n      */\n     public static String getRandomKey(String algorithm) {\n-        KeyGenerator keyGen;\n         try {\n-            keyGen = KeyGenerator.getInstance(algorithm);\n+            KeyGenerator keyGen = KeyGenerator.getInstance(algorithm);\n             keyGen.init(256);\n             return Base64.getEncoder().encodeToString(keyGen.generateKey().getEncoded());\n         } catch (NoSuchAlgorithmException e) {\n             log.warning(\"Algorithm '\" + algorithm + \"' is not supported; using SecureRandom instead\");\n             byte[] buffer = new byte[32];\n-            RANDOM.setSeed(System.currentTimeMillis());\n             RANDOM.nextBytes(buffer);\n             return Base64.getEncoder().encodeToString(buffer);\n         }\n"}}, {"oid": "b9b13228451489924c5ad7e588f8c112d5a138ed", "url": "https://github.com/IBM/FHIR/commit/b9b13228451489924c5ad7e588f8c112d5a138ed", "message": "Fix javadoc and parameter name and add warning to FHIRUtil.getRandomKey\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-07-31T19:23:18Z", "type": "commit"}, {"oid": "b9b13228451489924c5ad7e588f8c112d5a138ed", "url": "https://github.com/IBM/FHIR/commit/b9b13228451489924c5ad7e588f8c112d5a138ed", "message": "Fix javadoc and parameter name and add warning to FHIRUtil.getRandomKey\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-07-31T19:23:18Z", "type": "forcePushed"}, {"oid": "0e52ab584c99ba93f65ecac4e3cba8d99f09e2c5", "url": "https://github.com/IBM/FHIR/commit/0e52ab584c99ba93f65ecac4e3cba8d99f09e2c5", "message": "deprecated FHIRUtil.getRandomKey\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-07-31T19:39:57Z", "type": "commit"}, {"oid": "0e52ab584c99ba93f65ecac4e3cba8d99f09e2c5", "url": "https://github.com/IBM/FHIR/commit/0e52ab584c99ba93f65ecac4e3cba8d99f09e2c5", "message": "deprecated FHIRUtil.getRandomKey\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-07-31T19:39:57Z", "type": "forcePushed"}]}