{"pr_number": 1008, "pr_title": "issue #1007 minor enhancement to resourceTypesCache", "pr_createdAt": "2020-04-30T23:09:03Z", "pr_url": "https://github.com/IBM/FHIR/pull/1008", "timeline": [{"oid": "beee57134b4a23907c1e85d1512df4017ee61727", "url": "https://github.com/IBM/FHIR/commit/beee57134b4a23907c1e85d1512df4017ee61727", "message": "issue #1007 minor enhancement to resourceTypesCache\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-30T23:06:39Z", "type": "commit"}, {"oid": "83f6feb81f29101d0a3025195225f177521ac25c", "url": "https://github.com/IBM/FHIR/commit/83f6feb81f29101d0a3025195225f177521ac25c", "message": "issue #1007 minor update\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-30T23:19:03Z", "type": "commit"}, {"oid": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "url": "https://github.com/IBM/FHIR/commit/702e443ecfe53bf66b475793396c41acfe5cbdd2", "message": "issue #1007 fix tab issue\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-01T02:50:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwNTkxMQ==", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418605911", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Integer resourceTypeId;\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    Integer resourceTypeId= ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If not found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n      \n    \n    \n  \n\nhonestly, it should never hit newResourceTypeIds with the change in PR1010, but seems reasonable.\nsmall edits above", "author": "prb112", "createdAt": "2020-05-01T15:58:05Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -460,6 +460,19 @@ public void addResourceTypeCacheCandidate(String resourceType, Integer resourceT\n         log.exiting(CLASSNAME, METHODNAME);\n \n     }\n+    \n+    protected  Integer getResourceTypeIdFromCaches(String resourceType) {\n+        Integer resourceTypeId;\n+        // Get resourceTypeId from ResourceTypesCache first.\n+        resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n+        // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds", "originalCommit": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "chunk": "diff --git a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java\nindex 4de9997541..d68a2096cf 100644\n--- a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java\n+++ b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java\n\n@@ -462,9 +462,8 @@ public class ResourceDAOImpl extends FHIRDbDAOImpl implements ResourceDAO {\n     }\n     \n     protected  Integer getResourceTypeIdFromCaches(String resourceType) {\n-        Integer resourceTypeId;\n         // Get resourceTypeId from ResourceTypesCache first.\n-        resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n+    \tInteger resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n         // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n         // but has not been updated to ResourceTypesCache yet. newResourceTypeIds is updated to ResourceTypesCache only when the\n         // current transaction is committed.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyOTI5MQ==", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418629291", "bodyText": "Maybe a bit more description in the error message?   Like \"Error while getting or inserting parameterName '\" + parameterName + \"'\" ?", "author": "lmsurpre", "createdAt": "2020-05-01T16:51:19Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java", "diffHunk": "@@ -42,18 +42,7 @@ public int readOrAddParameterNameId(String parameterName) throws FHIRPersistence\n                     stmt.executeUpdate();\n                 }\n             } catch (SQLException e) {\n-                if (\"23505\".equals(e.getSQLState())) {\n-                    // another thread snuck in and created the record, so we need to fetch the correct id\n-                    result = getParameterId(parameterName);\n-\n-                    if (result == null) {\n-                        // would be extremely weird, but good to protect against anyway\n-                        throw new IllegalStateException(\"No parameter id returned after duplicate found!\");\n-                    }\n-                }\n-                else {\n-                    throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);\n-                }\n+                throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);", "originalCommit": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "chunk": "diff --git a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java\nindex b58ffae3d6..57c2897dc8 100644\n--- a/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java\n+++ b/fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java\n\n@@ -42,7 +42,7 @@ public class PostgreSqlParameterNamesDAO extends ParameterNameDAOImpl {\n                     stmt.executeUpdate();\n                 }\n             } catch (SQLException e) {\n-                throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);\n+                throw new FHIRPersistenceDataAccessException(\"Error while getting or inserting parameterName '\" + parameterName + \"'\", e);\n             }\n         }\n \n"}}, {"oid": "8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "url": "https://github.com/IBM/FHIR/commit/8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "message": "issue #1007 updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-01T18:30:24Z", "type": "commit"}]}