{"pr_number": 1552, "pr_title": "issue-1517 - Support for variables in JSON configuration files like 'fhir-server-config.json'", "pr_createdAt": "2020-10-01T15:54:10Z", "pr_url": "https://github.com/IBM/FHIR/pull/1552", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r498413614", "bodyText": "I think as a pattern we should probably prefix with something...\na small addition so it does something like this\nSystem.getenv().entrySet().stream().filter(es -> es.getKey().startsWith(\"FHIR.\")).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue))", "author": "prb112", "createdAt": "2020-10-01T17:42:33Z", "path": "fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java", "diffHunk": "@@ -53,7 +58,9 @@ public static PropertyGroup loadConfiguration(String filename) throws Exception\n      *            an InputStream to the input JSON file\n      */\n     public static PropertyGroup loadConfiguration(InputStream is) throws Exception {\n-        try (JsonReader reader = JSON_READER_FACTORY.createReader(is)) {\n+        String templatedJson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+        String resolvedJson = StringSubstitutor.replace(templatedJson, System.getenv());", "originalCommit": "685793711e97f879e408d18e75c6c2f8e27c3d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzkxNw==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r498413917", "bodyText": "we could also throw it in a Map and strip the prefix", "author": "prb112", "createdAt": "2020-10-01T17:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyNTg0Ng==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499125846", "bodyText": "The use of such a prefix is of course possible and might be helpful to distinct environment variables targeted for the FHIR server from the rest - yet I am just not convinced whether this should be mandatory. Rather I believe that such hard-coded prefix could possibly restrict the user from fully following and complying to his/her own, local naming conventions for variables. Also OpenLiberty itself does not stipulate any prefix either for (environment) variables used in its XML configuration files, if I see that correctly. What do you think?", "author": "holger-stenzhorn", "createdAt": "2020-10-03T07:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2MDgwMA==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499560800", "bodyText": "I think it's best to prefix.  While it constrains the environment, it doesn't permit needless introspection into the environment variables that may be beyond the scope of the application.\nMaybe it's best to have a second reviewer comment? @lmsurpre thoughts?", "author": "prb112", "createdAt": "2020-10-05T12:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwMTMwMg==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499601302", "bodyText": "I am sorry but I must admit that I do not understand what you mean with \"permit needless introspection into the environment variables that may be beyond the scope of the application\". The substitution of the variables within the JSON configuration files happens directly \"on-the-fly\" when loading those files within ConfigurationService.loadConfiguration(InputStream is) and hence the actual application, i.e. the FHIR server, does not see the variables themselves but only their (final) values and thus does not have to perform any further introspection.", "author": "holger-stenzhorn", "createdAt": "2020-10-05T13:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwNTgzOA==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499605838", "bodyText": "Right, I understand that, however this code also is permitted to run in a non-docker environment.  An attacker could conceivably gain access to more info than required, if not prefixed.", "author": "prb112", "createdAt": "2020-10-05T13:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MDQ5Mw==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499690493", "bodyText": "I am sorry again for my ignorance but I am do not get the point how a prefix FHIR. could help to have an attacker gain access to less information. For example, using postgres.password as plain environment variable is definitely \"suboptimal\" security-wise but I do not understand how FHIR.postgres.password would ameliorates things. Can you perhaps give me an example/use case with a \"malicious\" variable so that I can better get what you mean? That would be great!", "author": "holger-stenzhorn", "createdAt": "2020-10-05T15:36:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NzY1Mg==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499697652", "bodyText": "So it's a reference to a secondary attack, where you inject a new configuration which may have access to an unexpected or unscoped environment variable.\nAlso, a good lesson from CERT https://wiki.sei.cmu.edu/confluence/display/c/ENV02-C.+Beware+of+multiple+environment+variables+with+the+same+effective+name and more specific to java https://wiki.sei.cmu.edu/confluence/display/java/ENV02-J.+Do+not+trust+the+values+of+environment+variables\nI like the thought of scoping it as it is an intent to use versus a side effect.\nPRO\nno changes, user defines completely\nCON\nindirect re-use of environment variables (potential overrides)\npotential conflicts with other Environment variables\nI'm still leaning towards scoping the environment variables.", "author": "prb112", "createdAt": "2020-10-05T15:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0MzU2NQ==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499743565", "bodyText": "Thanks a lot for providing me with the information and links. Yet I do not understand how the prefix could solve the linked issues: Following the first link, this only makes the case for having clearly distinct environment variable names without relying on case difference - so if you have FHIR.some.variable set to a certain value then a malicious attacker could also analogously change the prefix casing to \"redefine\" that value by simply setting e.g. Fhir.some.variable, right? The second link makes the case for using pre-defined Java system properties and does not mention the usage of prefixes at all - and so at the end of the day it boils down to simply not use freely defined environment variables at all - no matter if prefixed or not, right? So in the end the coping by introducing the prefix seems to be actually only a pure naming convention but would have no restrictive effect or similar - or am I still missing anything possibly?", "author": "holger-stenzhorn", "createdAt": "2020-10-05T17:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NDY1MA==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r499794650", "bodyText": "I'm still leaning towards prefixing.  I'll leave it to John and Lee to make the final call.", "author": "prb112", "createdAt": "2020-10-05T18:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "c3741e71b27a848772a300deb84549f7a7fd1a47", "chunk": "diff --git a/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java b/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\nindex e940f3c4b0..a822983385 100644\n--- a/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\n+++ b/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\n\n@@ -59,7 +60,7 @@ public class ConfigurationService {\n      */\n     public static PropertyGroup loadConfiguration(InputStream is) throws Exception {\n         String templatedJson = IOUtils.toString(is, StandardCharsets.UTF_8);\n-        String resolvedJson = StringSubstitutor.replace(templatedJson, System.getenv());\n+        String resolvedJson = StringSubstitutor.replace(templatedJson, EnvironmentVariables.get());\n         try (JsonReader reader = JSON_READER_FACTORY.createReader(new StringReader(resolvedJson))) {\n             JsonObject jsonObj = reader.readObject();\n             reader.close();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxNDU2Mg==", "url": "https://github.com/IBM/FHIR/pull/1552#discussion_r498414562", "bodyText": "note, we should probably change the copyright year to 2020", "author": "prb112", "createdAt": "2020-10-01T17:44:06Z", "path": "fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java", "diffHunk": "@@ -6,11 +6,16 @@\n \n package com.ibm.fhir.config;\n \n+import org.apache.commons.io.IOUtils;", "originalCommit": "685793711e97f879e408d18e75c6c2f8e27c3d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5b93c450016d7a20d4b4565b6e7380d9e845203", "chunk": "diff --git a/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java b/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\nindex e940f3c4b0..8e7d2b1f0b 100644\n--- a/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\n+++ b/fhir-config/src/main/java/com/ibm/fhir/config/ConfigurationService.java\n\n@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2016,2020\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n"}}, {"oid": "6e1b4ea4ccbb0e8421fc67ef536963564a07d994", "url": "https://github.com/IBM/FHIR/commit/6e1b4ea4ccbb0e8421fc67ef536963564a07d994", "message": "issue-1517 - Support for variables in JSON configuration files like 'fhir-server-config.json'\n\nUse Apache Commons Text\u2019s StringSubstitutor in ConfigurationService\u2019s loadConfiguration method to replace variables in JSON configuration files with the values of the respective envirnoment variables.\n\nSigned-off-by: Holger Stenzhorn <holger.stenzhorn@uks.eu>", "committedDate": "2020-10-03T17:14:08Z", "type": "commit"}, {"oid": "5a3ab31478e055fc4db1cceaf9401ef80390d9ee", "url": "https://github.com/IBM/FHIR/commit/5a3ab31478e055fc4db1cceaf9401ef80390d9ee", "message": "Remove duplicate declaration of Maven dependency\n\nCo-authored-by: Paul Bastide <paul@bastide.org>\nSigned-off-by: Holger Stenzhorn <holger.stenzhorn@uks.eu>", "committedDate": "2020-10-03T17:14:08Z", "type": "commit"}, {"oid": "a5b93c450016d7a20d4b4565b6e7380d9e845203", "url": "https://github.com/IBM/FHIR/commit/a5b93c450016d7a20d4b4565b6e7380d9e845203", "message": "Update ConfigurationService.java\n\nChanged copyright years to current one\n\nSigned-off-by: Holger Stenzhorn <holger.stenzhorn@uks.eu>", "committedDate": "2020-10-03T17:14:08Z", "type": "commit"}, {"oid": "c3741e71b27a848772a300deb84549f7a7fd1a47", "url": "https://github.com/IBM/FHIR/commit/c3741e71b27a848772a300deb84549f7a7fd1a47", "message": "Fix ConfigurationServiceTest failing on Java 11\n\nThe initial commit used PowerMock 1.7.4 which is not compatible with Java 11 and this still applies for (current) 2.0.7. Luckily Mockito 3.5.13 provides the needed functionality out-of-the-box.\n\nSigned-off-by: Holger Stenzhorn <holger.stenzhorn@uks.eu>", "committedDate": "2020-10-03T17:14:08Z", "type": "commit"}]}