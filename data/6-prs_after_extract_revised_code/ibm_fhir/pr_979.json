{"pr_number": 979, "pr_title": "issue #944 add import counts to job exit status", "pr_createdAt": "2020-04-23T19:25:06Z", "pr_url": "https://github.com/IBM/FHIR/pull/979", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MDYzMA==", "url": "https://github.com/IBM/FHIR/pull/979#discussion_r414070630", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_ok_file.ndjson\");\n          \n          \n            \n                    this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_oo_success.ndjson\");", "author": "prb112", "createdAt": "2020-04-23T19:37:13Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java", "diffHunk": "@@ -62,9 +62,14 @@ public ImportCheckPointData(String importPartitionWorkitem, int numOfProcessedRe\n         this.importPartitionWorkitem = importPartitionWorkitem;\n         this.numOfProcessedResources = numOfProcessedResources;\n         this.importPartitionResourceType = importPartitionResourceType;\n-        String ramdomID = FHIRUtil.getRandomKey(\"AES\");\n-        this.setUniqueIDForImportOperationOutcomes(ramdomID + \"_ok_file.ndjson\");\n-        this.setUniqueIDForImportFailureOperationOutcomes(ramdomID + \"_error_file.ndjson\");\n+\n+        // This naming pattern is used in bulkdata operation to generate file links for import OperationOutcomes.\n+        // e.g, for input file test1.ndjson, if there is any error during the importing, then the errors are in \n+        // test1.ndjson_errors.ndjson\n+        // Note: for those good imports, we don't really generate any meaningful OperationOutcome, so only error import \n+        //       OperationOutcomes are supported for now.\n+        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_ok_file.ndjson\");", "originalCommit": "d053bcf76585eef215bed94e6eecdbebc864408f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2385903dc9240533bc5c596522b51f7e711de937", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\nindex 1039d4ae99..416d40d770 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\n\n@@ -68,7 +68,7 @@ public class ImportCheckPointData implements Serializable {\n         // test1.ndjson_errors.ndjson\n         // Note: for those good imports, we don't really generate any meaningful OperationOutcome, so only error import \n         //       OperationOutcomes are supported for now.\n-        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_ok_file.ndjson\");\n+        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_oo_success.ndjson\");\n         this.setUniqueIDForImportFailureOperationOutcomes(importPartitionWorkitem + \"_errors.ndjson\");\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MDc3MQ==", "url": "https://github.com/IBM/FHIR/pull/979#discussion_r414070771", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.setUniqueIDForImportFailureOperationOutcomes(importPartitionWorkitem + \"_errors.ndjson\");\n          \n          \n            \n                    this.setUniqueIDForImportFailureOperationOutcomes(importPartitionWorkitem + \"_oo_errors.ndjson\");", "author": "prb112", "createdAt": "2020-04-23T19:37:27Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java", "diffHunk": "@@ -62,9 +62,14 @@ public ImportCheckPointData(String importPartitionWorkitem, int numOfProcessedRe\n         this.importPartitionWorkitem = importPartitionWorkitem;\n         this.numOfProcessedResources = numOfProcessedResources;\n         this.importPartitionResourceType = importPartitionResourceType;\n-        String ramdomID = FHIRUtil.getRandomKey(\"AES\");\n-        this.setUniqueIDForImportOperationOutcomes(ramdomID + \"_ok_file.ndjson\");\n-        this.setUniqueIDForImportFailureOperationOutcomes(ramdomID + \"_error_file.ndjson\");\n+\n+        // This naming pattern is used in bulkdata operation to generate file links for import OperationOutcomes.\n+        // e.g, for input file test1.ndjson, if there is any error during the importing, then the errors are in \n+        // test1.ndjson_errors.ndjson\n+        // Note: for those good imports, we don't really generate any meaningful OperationOutcome, so only error import \n+        //       OperationOutcomes are supported for now.\n+        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_ok_file.ndjson\");\n+        this.setUniqueIDForImportFailureOperationOutcomes(importPartitionWorkitem + \"_errors.ndjson\");", "originalCommit": "d053bcf76585eef215bed94e6eecdbebc864408f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MTAwMA==", "url": "https://github.com/IBM/FHIR/pull/979#discussion_r414071000", "bodyText": "trying to avoid the word OK and _file, and be consistent.", "author": "prb112", "createdAt": "2020-04-23T19:37:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MDc3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2385903dc9240533bc5c596522b51f7e711de937", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\nindex 1039d4ae99..416d40d770 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\n\n@@ -68,7 +68,7 @@ public class ImportCheckPointData implements Serializable {\n         // test1.ndjson_errors.ndjson\n         // Note: for those good imports, we don't really generate any meaningful OperationOutcome, so only error import \n         //       OperationOutcomes are supported for now.\n-        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_ok_file.ndjson\");\n+        this.setUniqueIDForImportOperationOutcomes(importPartitionWorkitem + \"_oo_success.ndjson\");\n         this.setUniqueIDForImportFailureOperationOutcomes(importPartitionWorkitem + \"_errors.ndjson\");\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MjU2OA==", "url": "https://github.com/IBM/FHIR/pull/979#discussion_r414072568", "bodyText": "82-85 is repeated in many locations.  It seems that it is ideal for a small utility method shared across Jobs. and could use try-catch-close", "author": "prb112", "createdAt": "2020-04-23T19:40:26Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java", "diffHunk": "@@ -60,6 +77,30 @@ public void afterJob() {\n             return;\n         }\n \n+        // Generate import summary and pass it into ExitStatus of the job execution.\n+        // e.g, [3:0, 4:1] means 3 resources imported and 0 failures for the 1st file, and 4 imported and 1 failure for the 2nd file.\n+        JsonReader reader = Json.createReader(new StringReader(", "originalCommit": "d053bcf76585eef215bed94e6eecdbebc864408f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNjk3Mw==", "url": "https://github.com/IBM/FHIR/pull/979#discussion_r414106973", "bodyText": "yes,it's used by both listener and mapper. let me create a util function for it.", "author": "albertwang-ibm", "createdAt": "2020-04-23T20:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MjU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "6eb2d5158fd8c8409a1379583d692e4dad7a6a81", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java\nindex 13faedd23a..6780efb4f7 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java\n\n@@ -79,10 +75,7 @@ public class ImportJobListener implements JobListener {\n \n         // Generate import summary and pass it into ExitStatus of the job execution.\n         // e.g, [3:0, 4:1] means 3 resources imported and 0 failures for the 1st file, and 4 imported and 1 failure for the 2nd file.\n-        JsonReader reader = Json.createReader(new StringReader(\n-                new String(Base64.getDecoder().decode(dataSourcesInfo), StandardCharsets.UTF_8)));\n-        JsonArray dataSourceArray = reader.readArray();\n-        reader.close();\n+        JsonArray dataSourceArray = BulkDataUtils.getDataSourcesFromJobInput(dataSourcesInfo);\n \n         Map<String, Integer> inputUrlSequenceMap = new HashMap<>();\n         int sequnceNum = 0;\n"}}, {"oid": "0054de71d35dbb851bd7d659b3e2ff317706afdb", "url": "https://github.com/IBM/FHIR/commit/0054de71d35dbb851bd7d659b3e2ff317706afdb", "message": "issue #944 add import counts to job exit status\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:45:47Z", "type": "commit"}, {"oid": "2385903dc9240533bc5c596522b51f7e711de937", "url": "https://github.com/IBM/FHIR/commit/2385903dc9240533bc5c596522b51f7e711de937", "message": "Update fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java\r\n\r\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>\n\nCo-Authored-By: Paul Bastide <pbastide@us.ibm.com>\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:45:47Z", "type": "commit"}, {"oid": "1cdabee864bd94ed1d1b8b51b92434ba1a6ef5de", "url": "https://github.com/IBM/FHIR/commit/1cdabee864bd94ed1d1b8b51b92434ba1a6ef5de", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>\n\nCo-Authored-By: Paul Bastide <pbastide@us.ibm.com>\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:45:47Z", "type": "commit"}, {"oid": "6eb2d5158fd8c8409a1379583d692e4dad7a6a81", "url": "https://github.com/IBM/FHIR/commit/6eb2d5158fd8c8409a1379583d692e4dad7a6a81", "message": "issue #944 updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:45:47Z", "type": "commit"}, {"oid": "6eb2d5158fd8c8409a1379583d692e4dad7a6a81", "url": "https://github.com/IBM/FHIR/commit/6eb2d5158fd8c8409a1379583d692e4dad7a6a81", "message": "issue #944 updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:45:47Z", "type": "forcePushed"}, {"oid": "860f56f8a0269c97f9649de882481053d74fcbc6", "url": "https://github.com/IBM/FHIR/commit/860f56f8a0269c97f9649de882481053d74fcbc6", "message": "issue #944 minor update to comments to align with the codes\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-23T20:49:36Z", "type": "commit"}]}