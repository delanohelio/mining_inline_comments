{"pr_number": 1840, "pr_title": "issues #1839 and #1743 - support search parameter disambiguation", "pr_createdAt": "2020-12-23T17:25:44Z", "pr_url": "https://github.com/IBM/FHIR/pull/1840", "timeline": [{"oid": "2a6e351be2f7f4df1c8882c552b96b3f4ae18348", "url": "https://github.com/IBM/FHIR/commit/2a6e351be2f7f4df1c8882c552b96b3f4ae18348", "message": "issues #1839 and #1743 - support search parameter disambiguation\n\n1. Update ParametersMap to support storing multiple search parameters\nwith the same code\n2. Address #1743 by collecting to a map instead of a list\n3. Update SearchUtil.getSearchParameter to lookup the search parameter\nby URI from the config if possible (instead of applying the filter to\nthe full set of built-in parameters).\n4. Update the docs to reflect that search parameter filtering now\napplies to tenant-specific search parameters as well. This should help\nus move toward https://github.com/IBM/FHIR/issues/1596\n\nAlso fixed a bad trace message and did some minor formatting / javadoc.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-12-23T17:24:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NTgxMQ==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551355811", "bodyText": "want to use extension-search-parameters.json instead of extension-search-parameters.xml ?", "author": "michaelwschroeder", "createdAt": "2021-01-04T14:40:47Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -125,28 +125,17 @@\n     private static final Sort sort = new Sort();\n \n     /*\n-     * This is our in-memory cache of SearchParameter objects. The cache is\n-     * organized at the top level by tenant-id,\n-     * with the built-in (FHIR spec-defined) SearchParameters stored under the\n-     * \"built-in\" pseudo-tenant-id.\n-     * SearchParameters contained in the default tenant's\n-     * extension-search-parameters.xml file are stored under the\n-     * \"default\" tenant-id, and other tenants' SearchParameters (defined in their\n-     * tenant-specific\n-     * extension-search-parameters.xml files) will be stored under their respective\n-     * tenant-ids as well. The objects\n-     * stored in our cache are of type CachedObjectHolder, with each one containing\n-     * a Map<String, Map<String,\n-     * SearchParameter>>. This map is keyed by resource type (simple name, e.g.\n-     * \"Patient\"). Each object stored in this\n-     * map contains the SearchParameters for that resource type, keyed by\n-     * SearchParameter name (e.g. \"_lastUpdated\").\n-     * When getSearchParameter(resourceType, name) is called, we'll need to first\n-     * search in the current tenant's map,\n-     * then if not found, look in the \"built-in\" tenant's map. Also, when\n-     * getSearchParameters(resourceType) is called,\n-     * we'll need to return a List that contains SearchParameters from the current\n-     * tenant's map (if present) plus those\n+     * This is our in-memory cache of SearchParameter objects. The cache is organized at the top level by tenant-id,\n+     * with the built-in (FHIR spec-defined) SearchParameters stored under the \"built-in\" pseudo-tenant-id.\n+     * SearchParameters contained in the default tenant's extension-search-parameters.xml file are stored under the", "originalCommit": "2a6e351be2f7f4df1c8882c552b96b3f4ae18348", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4NDc3Nw==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551384777", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * SearchParameters contained in the default tenant's extension-search-parameters.xml file are stored under the\n          \n          \n            \n                 * SearchParameters contained in the default tenant's extension-search-parameters.json file are stored under the", "author": "lmsurpre", "createdAt": "2021-01-04T15:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NTgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\nindex e167463203..8b250391bf 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n\n@@ -127,9 +127,9 @@ public class SearchUtil {\n     /*\n      * This is our in-memory cache of SearchParameter objects. The cache is organized at the top level by tenant-id,\n      * with the built-in (FHIR spec-defined) SearchParameters stored under the \"built-in\" pseudo-tenant-id.\n-     * SearchParameters contained in the default tenant's extension-search-parameters.xml file are stored under the\n+     * SearchParameters contained in the default tenant's extension-search-parameters.json file are stored under the\n      * \"default\" tenant-id, and other tenants' SearchParameters (defined in their tenant-specific\n-     * extension-search-parameters.xml files) will be stored under their respective tenant-ids as well. The objects\n+     * extension-search-parameters.json files) will be stored under their respective tenant-ids as well. The objects\n      * stored in our cache are of type CachedObjectHolder, with each one containing a Map<String, Map<String,\n      * SearchParameter>>. This map is keyed by resource type (simple name, e.g. \"Patient\"). Each object stored in this\n      * map contains the SearchParameters for that resource type, keyed by SearchParameter name (e.g. \"_lastUpdated\").\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NjA4NA==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551356084", "bodyText": "same as above", "author": "michaelwschroeder", "createdAt": "2021-01-04T14:41:17Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -125,28 +125,17 @@\n     private static final Sort sort = new Sort();\n \n     /*\n-     * This is our in-memory cache of SearchParameter objects. The cache is\n-     * organized at the top level by tenant-id,\n-     * with the built-in (FHIR spec-defined) SearchParameters stored under the\n-     * \"built-in\" pseudo-tenant-id.\n-     * SearchParameters contained in the default tenant's\n-     * extension-search-parameters.xml file are stored under the\n-     * \"default\" tenant-id, and other tenants' SearchParameters (defined in their\n-     * tenant-specific\n-     * extension-search-parameters.xml files) will be stored under their respective\n-     * tenant-ids as well. The objects\n-     * stored in our cache are of type CachedObjectHolder, with each one containing\n-     * a Map<String, Map<String,\n-     * SearchParameter>>. This map is keyed by resource type (simple name, e.g.\n-     * \"Patient\"). Each object stored in this\n-     * map contains the SearchParameters for that resource type, keyed by\n-     * SearchParameter name (e.g. \"_lastUpdated\").\n-     * When getSearchParameter(resourceType, name) is called, we'll need to first\n-     * search in the current tenant's map,\n-     * then if not found, look in the \"built-in\" tenant's map. Also, when\n-     * getSearchParameters(resourceType) is called,\n-     * we'll need to return a List that contains SearchParameters from the current\n-     * tenant's map (if present) plus those\n+     * This is our in-memory cache of SearchParameter objects. The cache is organized at the top level by tenant-id,\n+     * with the built-in (FHIR spec-defined) SearchParameters stored under the \"built-in\" pseudo-tenant-id.\n+     * SearchParameters contained in the default tenant's extension-search-parameters.xml file are stored under the\n+     * \"default\" tenant-id, and other tenants' SearchParameters (defined in their tenant-specific\n+     * extension-search-parameters.xml files) will be stored under their respective tenant-ids as well. The objects", "originalCommit": "2a6e351be2f7f4df1c8882c552b96b3f4ae18348", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4NDkxMg==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551384912", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * extension-search-parameters.xml files) will be stored under their respective tenant-ids as well. The objects\n          \n          \n            \n                 * extension-search-parameters.json files) will be stored under their respective tenant-ids as well. The objects", "author": "lmsurpre", "createdAt": "2021-01-04T15:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NjA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\nindex e167463203..8b250391bf 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n\n@@ -127,9 +127,9 @@ public class SearchUtil {\n     /*\n      * This is our in-memory cache of SearchParameter objects. The cache is organized at the top level by tenant-id,\n      * with the built-in (FHIR spec-defined) SearchParameters stored under the \"built-in\" pseudo-tenant-id.\n-     * SearchParameters contained in the default tenant's extension-search-parameters.xml file are stored under the\n+     * SearchParameters contained in the default tenant's extension-search-parameters.json file are stored under the\n      * \"default\" tenant-id, and other tenants' SearchParameters (defined in their tenant-specific\n-     * extension-search-parameters.xml files) will be stored under their respective tenant-ids as well. The objects\n+     * extension-search-parameters.json files) will be stored under their respective tenant-ids as well. The objects\n      * stored in our cache are of type CachedObjectHolder, with each one containing a Map<String, Map<String,\n      * SearchParameter>>. This map is keyed by resource type (simple name, e.g. \"Patient\"). Each object stored in this\n      * map contains the SearchParameters for that resource type, keyed by SearchParameter name (e.g. \"_lastUpdated\").\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NzM3NQ==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551357375", "bodyText": "Do you want to use log.fine here, since that's what you're checking against in the line above?", "author": "michaelwschroeder", "createdAt": "2021-01-04T14:43:38Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -301,23 +282,27 @@ public static void init() {\n                 if (includedSPs.containsKey(code)) {\n                     String configuredUrl = includedSPs.get(code);\n                     if (configuredUrl != null && configuredUrl.equals(url)) {\n-                        results.add(sp);\n-                    } else {\n+                        results.put(code, sp);\n+                    } else if (log.isLoggable(Level.FINE)) {\n                         log.info(\"Skipping search parameter with id='\" + sp.getId() + \"'. \"", "originalCommit": "2a6e351be2f7f4df1c8882c552b96b3f4ae18348", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4NTIyOQ==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551385229", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    log.info(\"Skipping search parameter with id='\" + sp.getId() + \"'. \"\n          \n          \n            \n                                    log.fine(\"Skipping search parameter with id='\" + sp.getId() + \"'. \"", "author": "lmsurpre", "createdAt": "2021-01-04T15:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NzM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\nindex e167463203..8b250391bf 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\n\n@@ -284,7 +284,7 @@ public class SearchUtil {\n                     if (configuredUrl != null && configuredUrl.equals(url)) {\n                         results.put(code, sp);\n                     } else if (log.isLoggable(Level.FINE)) {\n-                        log.info(\"Skipping search parameter with id='\" + sp.getId() + \"'. \"\n+                        log.fine(\"Skipping search parameter with id='\" + sp.getId() + \"'. \"\n                                 + \"Tenant configuration for resource='\" + resourceType + \"' code='\" + code + \"' \"\n                                 + \"does not match url '\" + url + \"'\");\n                     }\n"}}, {"oid": "578c40e3a7ac1ad852bf07a1624d9d893fbe501b", "url": "https://github.com/IBM/FHIR/commit/578c40e3a7ac1ad852bf07a1624d9d893fbe501b", "message": "issues #1839 and #1743 - support search parameter disambiguation\n\n1. Update ParametersMap to support storing multiple search parameters\nwith the same code\n2. Address #1743 by collecting to a map instead of a list\n3. Update SearchUtil.getSearchParameter to lookup the search parameter\nby URI from the config if possible (instead of applying the filter to\nthe full set of built-in parameters).\n4. Update the docs to reflect that search parameter filtering now\napplies to tenant-specific search parameters as well. This should help\nus move toward https://github.com/IBM/FHIR/issues/1596\n\nAlso fixed a bad trace message and did some minor formatting / javadoc.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-04T21:35:54Z", "type": "commit"}, {"oid": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "url": "https://github.com/IBM/FHIR/commit/80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-04T21:35:54Z", "type": "commit"}, {"oid": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "url": "https://github.com/IBM/FHIR/commit/80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-04T21:35:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDcxMA==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551940710", "bodyText": "Minor. This Set is mutable. Could make this immutable on return. That may have performance implications given how much this stuff gets used. Perhaps use a custom class which is a HashSet and implements an interface with only the getters you need.", "author": "punktilious", "createdAt": "2021-01-05T13:46:09Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/parameters/ParametersMap.java", "diffHunk": "@@ -97,12 +71,12 @@ public void insert(String code, SearchParameter parameter) {\n      * @implSpec package-private to prevent insertion from outside the package\n      */\n     public void insertAll(ParametersMap map) {\n-        for (Entry<String, SearchParameter> entry : map.codeMap.entrySet()) {\n-            insert(entry.getKey(), entry.getValue());\n+        for (SearchParameter sp : map.urlMap.values()) {\n+            insert(sp.getCode().getValue(), sp);\n         }\n     }\n \n-    public SearchParameter lookupByCode(String searchParameterCode) {", "originalCommit": "80ea4a8839bca31d72ea8a36e4f9b82a9c0a93db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3NjgyMQ==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r551976821", "bodyText": "Good call.  I think wrapping the set via Collections.immutableSet should be fine.", "author": "lmsurpre", "createdAt": "2021-01-05T14:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExOTM3Nw==", "url": "https://github.com/IBM/FHIR/pull/1840#discussion_r552119377", "bodyText": "done", "author": "lmsurpre", "createdAt": "2021-01-05T18:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "f166128a8373749f74f3bf63b86d434a34f42f2c", "chunk": "diff --git a/fhir-search/src/main/java/com/ibm/fhir/search/parameters/ParametersMap.java b/fhir-search/src/main/java/com/ibm/fhir/search/parameters/ParametersMap.java\nindex f134989999..e8c2d9f177 100644\n--- a/fhir-search/src/main/java/com/ibm/fhir/search/parameters/ParametersMap.java\n+++ b/fhir-search/src/main/java/com/ibm/fhir/search/parameters/ParametersMap.java\n\n@@ -67,12 +65,11 @@ public class ParametersMap {\n         urlMap.put(url, parameter);\n     }\n \n-    /**\n-     * @implSpec package-private to prevent insertion from outside the package\n-     */\n     public void insertAll(ParametersMap map) {\n-        for (SearchParameter sp : map.urlMap.values()) {\n-            insert(sp.getCode().getValue(), sp);\n+        for (Entry<String, Set<SearchParameter>> entry : map.codeEntries()) {\n+            for (SearchParameter sp : entry.getValue()) {\n+                insert(entry.getKey(), sp);\n+            }\n         }\n     }\n \n"}}, {"oid": "49b6e554ac44fa96623c24276eb86bd8e42a0c62", "url": "https://github.com/IBM/FHIR/commit/49b6e554ac44fa96623c24276eb86bd8e42a0c62", "message": "merge suggestions into rebased branch\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-05T14:53:35Z", "type": "commit"}, {"oid": "f166128a8373749f74f3bf63b86d434a34f42f2c", "url": "https://github.com/IBM/FHIR/commit/f166128a8373749f74f3bf63b86d434a34f42f2c", "message": "Add unit tests for the ParametersMap\n\nAlso made a minor change to insertAll so it gets the code from the\nexisting ParametersMap instead of from the SearchParameters in the map.\nUsually these are the same, but they can differ.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-05T18:42:37Z", "type": "commit"}, {"oid": "f166128a8373749f74f3bf63b86d434a34f42f2c", "url": "https://github.com/IBM/FHIR/commit/f166128a8373749f74f3bf63b86d434a34f42f2c", "message": "Add unit tests for the ParametersMap\n\nAlso made a minor change to insertAll so it gets the code from the\nexisting ParametersMap instead of from the SearchParameters in the map.\nUsually these are the same, but they can differ.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2021-01-05T18:42:37Z", "type": "forcePushed"}]}