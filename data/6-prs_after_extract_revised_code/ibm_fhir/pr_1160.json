{"pr_number": 1160, "pr_title": "issue #1111 export patient resources for patient/group exports", "pr_createdAt": "2020-05-28T11:43:18Z", "pr_url": "https://github.com/IBM/FHIR/pull/1160", "timeline": [{"oid": "43f5574f71acedfe3c1b1d94cee0ab38348b39b6", "url": "https://github.com/IBM/FHIR/commit/43f5574f71acedfe3c1b1d94cee0ab38348b39b6", "message": "issue #1111 export patient resources for patient/group exports\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-28T11:42:23Z", "type": "commit"}, {"oid": "c0864f5fbc7d4bb9f02a7a2540dab095513254d9", "url": "https://github.com/IBM/FHIR/commit/c0864f5fbc7d4bb9f02a7a2540dab095513254d9", "message": "issue #1111 minor updates\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-28T13:05:51Z", "type": "commit"}, {"oid": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "url": "https://github.com/IBM/FHIR/commit/5ae344be7d83326e7af880a7775f1418ac01eb0b", "message": "issue #1111 minor refactoring\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-28T13:17:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTkyNA==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431831924", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Patients = fhirPersistence.search(persistenceContext, Patient.class).getResource();\n          \n          \n            \n                    patients = fhirPersistence.search(persistenceContext, Patient.class).getResource();", "author": "prb112", "createdAt": "2020-05-28T13:25:17Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java", "diffHunk": "@@ -96,6 +97,25 @@ private Group findGroupByID(String fhirTenant, String fhirDatastoreId, String gr\n         }\n     }\n \n+    private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n+        FHIRSearchContext searchContext;\n+        FHIRPersistenceContext persistenceContext;\n+        List<Resource> Patients;\n+        Map<String, List<String>> queryParameters = new HashMap<>();\n+\n+        queryParameters.put(\"_id\", patientIds);\n+        searchContext = SearchUtil.parseQueryParameters(Patient.class, queryParameters);\n+        searchContext.setPageSize(pageSize);\n+        FHIRTransactionHelper txn = new FHIRTransactionHelper(fhirPersistence.getTransaction());\n+\n+        txn.enroll();\n+        persistenceContext = FHIRPersistenceContextFactory.createPersistenceContext(null, searchContext);\n+        Patients = fhirPersistence.search(persistenceContext, Patient.class).getResource();", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MTc4OQ==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431861789", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-05-28T14:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTkyNA=="}], "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\nindex 2064465bb7..ed28e33988 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n\n@@ -100,7 +100,7 @@ public class ChunkReader extends com.ibm.fhir.bulkexport.patient.ChunkReader {\n     private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n         FHIRSearchContext searchContext;\n         FHIRPersistenceContext persistenceContext;\n-        List<Resource> Patients;\n+        List<Resource> patients;\n         Map<String, List<String>> queryParameters = new HashMap<>();\n \n         queryParameters.put(\"_id\", patientIds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjAyNA==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431832024", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<Resource> Patients;\n          \n          \n            \n                    List<Resource> patients;", "author": "prb112", "createdAt": "2020-05-28T13:25:26Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java", "diffHunk": "@@ -96,6 +97,25 @@ private Group findGroupByID(String fhirTenant, String fhirDatastoreId, String gr\n         }\n     }\n \n+    private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n+        FHIRSearchContext searchContext;\n+        FHIRPersistenceContext persistenceContext;\n+        List<Resource> Patients;", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MTg5Nw==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431861897", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-05-28T14:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\nindex 2064465bb7..ed28e33988 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n\n@@ -100,7 +100,7 @@ public class ChunkReader extends com.ibm.fhir.bulkexport.patient.ChunkReader {\n     private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n         FHIRSearchContext searchContext;\n         FHIRPersistenceContext persistenceContext;\n-        List<Resource> Patients;\n+        List<Resource> patients;\n         Map<String, List<String>> queryParameters = new HashMap<>();\n \n         queryParameters.put(\"_id\", patientIds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjEyNg==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431832126", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Patients;\n          \n          \n            \n                    return patients;", "author": "prb112", "createdAt": "2020-05-28T13:25:36Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java", "diffHunk": "@@ -96,6 +97,25 @@ private Group findGroupByID(String fhirTenant, String fhirDatastoreId, String gr\n         }\n     }\n \n+    private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n+        FHIRSearchContext searchContext;\n+        FHIRPersistenceContext persistenceContext;\n+        List<Resource> Patients;\n+        Map<String, List<String>> queryParameters = new HashMap<>();\n+\n+        queryParameters.put(\"_id\", patientIds);\n+        searchContext = SearchUtil.parseQueryParameters(Patient.class, queryParameters);\n+        searchContext.setPageSize(pageSize);\n+        FHIRTransactionHelper txn = new FHIRTransactionHelper(fhirPersistence.getTransaction());\n+\n+        txn.enroll();\n+        persistenceContext = FHIRPersistenceContextFactory.createPersistenceContext(null, searchContext);\n+        Patients = fhirPersistence.search(persistenceContext, Patient.class).getResource();\n+        txn.unenroll();\n+\n+        return Patients;", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\nindex 2064465bb7..ed28e33988 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n\n@@ -100,7 +100,7 @@ public class ChunkReader extends com.ibm.fhir.bulkexport.patient.ChunkReader {\n     private List<Resource> patientIdsToPatients(List<String> patientIds) throws Exception {\n         FHIRSearchContext searchContext;\n         FHIRPersistenceContext persistenceContext;\n-        List<Resource> Patients;\n+        List<Resource> patients;\n         Map<String, List<String>> queryParameters = new HashMap<>();\n \n         queryParameters.put(\"_id\", patientIds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjQ3NA==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431832474", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                List <Resource> resources = patientIdsToPatients(patientIds);\n          \n          \n            \n                                List<Resource> resources = patientIdsToPatients(patientIds);", "author": "prb112", "createdAt": "2020-05-28T13:26:04Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java", "diffHunk": "@@ -135,7 +155,14 @@ public Object readItem() throws Exception {\n             List<String> patientIds = patientPageMembers.stream().filter(patientRef -> patientRef != null).map(patientRef\n                     -> patientRef.getEntity().getReference().getValue().substring(8)).collect(Collectors.toList());\n             if (patientIds != null && patientIds.size() > 0) {\n-                fillChunkDataBuffer(patientIds);\n+                if (fhirResourceType.equalsIgnoreCase(\"patient\")) {\n+                    List <Resource> resources = patientIdsToPatients(patientIds);", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MjA2MQ==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431862061", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-05-28T14:06:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\nindex 2064465bb7..ed28e33988 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/group/ChunkReader.java\n\n@@ -155,14 +155,11 @@ public class ChunkReader extends com.ibm.fhir.bulkexport.patient.ChunkReader {\n             List<String> patientIds = patientPageMembers.stream().filter(patientRef -> patientRef != null).map(patientRef\n                     -> patientRef.getEntity().getReference().getValue().substring(8)).collect(Collectors.toList());\n             if (patientIds != null && patientIds.size() > 0) {\n+                List<Resource> resources = null;\n                 if (fhirResourceType.equalsIgnoreCase(\"patient\")) {\n-                    List <Resource> resources = patientIdsToPatients(patientIds);\n-                    if (resources != null) {\n-                        fillChunkPatientDataBuffer(resources);\n-                    }\n-                } else {\n-                    fillChunkDataBuffer(patientIds);\n+                    resources = patientIdsToPatients(patientIds);\n                 }\n+                fillChunkData(resources, patientIds);\n             }\n         } else {\n             logger.fine(\"readItem: End of reading!\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjk2OQ==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431832969", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected\n          \n          \n            \n                String fhirResourceType;\n          \n          \n            \n                protected String fhirResourceType;", "author": "prb112", "createdAt": "2020-05-28T13:26:49Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -88,6 +88,7 @@\n      */\n     @Inject\n     @BatchProperty(name = Constants.PARTITION_RESOURCE_TYPE)\n+    protected\n     String fhirResourceType;", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MjE1Ng==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431862156", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-05-28T14:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\nindex 72b11d1f70..577ad1b0ea 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\n\n@@ -72,24 +72,21 @@ public class ChunkReader extends AbstractItemReader {\n      */\n     @Inject\n     @BatchProperty(name = Constants.FHIR_TENANT)\n-    protected\n-    String fhirTenant;\n+    protected String fhirTenant;\n \n     /**\n      * Fhir data store id.\n      */\n     @Inject\n     @BatchProperty(name = Constants.FHIR_DATASTORE_ID)\n-    protected\n-    String fhirDatastoreId;\n+    protected String fhirDatastoreId;\n \n     /**\n      * Fhir resource type to process.\n      */\n     @Inject\n     @BatchProperty(name = Constants.PARTITION_RESOURCE_TYPE)\n-    protected\n-    String fhirResourceType;\n+    protected String fhirResourceType;\n \n     /**\n      * Fhir Search from date.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzNDQzNg==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431834436", "bodyText": "This may be candidate to go in a common class as it's consistent with some of the code in group", "author": "prb112", "createdAt": "2020-05-28T13:29:02Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -269,7 +300,11 @@ public Object readItem() throws Exception {\n \n             List<String> patientIds = resources.stream().filter(item -> item.getId() != null).map(item -> item.getId()).collect(Collectors.toList());\n             if (patientIds != null && patientIds.size() > 0) {\n-                fillChunkDataBuffer(patientIds);\n+                if (fhirResourceType.equalsIgnoreCase(\"patient\")) {\n+                    fillChunkPatientDataBuffer(resources);\n+                } else {\n+                    fillChunkDataBuffer(patientIds);\n+                }", "originalCommit": "5ae344be7d83326e7af880a7775f1418ac01eb0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzNDY3NQ==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431834675", "bodyText": "No need to refactor here, just a thought going forward", "author": "prb112", "createdAt": "2020-05-28T13:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzNDQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MjI4NQ==", "url": "https://github.com/IBM/FHIR/pull/1160#discussion_r431862285", "bodyText": "also done", "author": "albertwang-ibm", "createdAt": "2020-05-28T14:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzNDQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "f93f470cfca006cc10d62a6feccac4cda12a6320", "chunk": "diff --git a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\nindex 72b11d1f70..577ad1b0ea 100644\n--- a/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\n+++ b/fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java\n\n@@ -300,11 +305,7 @@ public class ChunkReader extends AbstractItemReader {\n \n             List<String> patientIds = resources.stream().filter(item -> item.getId() != null).map(item -> item.getId()).collect(Collectors.toList());\n             if (patientIds != null && patientIds.size() > 0) {\n-                if (fhirResourceType.equalsIgnoreCase(\"patient\")) {\n-                    fillChunkPatientDataBuffer(resources);\n-                } else {\n-                    fillChunkDataBuffer(patientIds);\n-                }\n+                fillChunkData(resources, patientIds);\n             }\n         } else {\n             logger.fine(\"readItem: End of reading!\");\n"}}, {"oid": "f93f470cfca006cc10d62a6feccac4cda12a6320", "url": "https://github.com/IBM/FHIR/commit/f93f470cfca006cc10d62a6feccac4cda12a6320", "message": "issue #1111 updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-28T14:05:46Z", "type": "commit"}, {"oid": "67f46594769e0e87ece3272f9a724e1d057f84a1", "url": "https://github.com/IBM/FHIR/commit/67f46594769e0e87ece3272f9a724e1d057f84a1", "message": "issue #1111 minor updates\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-28T14:09:55Z", "type": "commit"}]}