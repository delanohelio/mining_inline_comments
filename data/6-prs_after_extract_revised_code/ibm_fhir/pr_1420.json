{"pr_number": 1420, "pr_title": "issue #694 - Added ANTLR4 grammar for UCUM code syntax validation", "pr_createdAt": "2020-08-18T14:21:13Z", "pr_url": "https://github.com/IBM/FHIR/pull/1420", "timeline": [{"oid": "d0352fbee7fe0e5e3fbccb04acc5af3e6b1cc31e", "url": "https://github.com/IBM/FHIR/commit/d0352fbee7fe0e5e3fbccb04acc5af3e6b1cc31e", "message": "issue #694 - Added ANTLR4 grammar for UCUM code syntax validation\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-08-18T14:08:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3OTM1MQ==", "url": "https://github.com/IBM/FHIR/pull/1420#discussion_r472279351", "bodyText": "Not familiar with antlr lexer/parser, so don't know if it's a big deal or not - is there not a way to avoid instantiating a new lexer/parser every time you want to parse a string?", "author": "michaelwschroeder", "createdAt": "2020-08-18T15:21:14Z", "path": "fhir-model/src/main/java/com/ibm/fhir/model/ucum/util/UCUMUtil.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.ucum.util;\n+\n+import org.antlr.v4.runtime.ANTLRErrorListener;\n+import org.antlr.v4.runtime.BaseErrorListener;\n+import org.antlr.v4.runtime.CharStreams;\n+import org.antlr.v4.runtime.CommonTokenStream;\n+import org.antlr.v4.runtime.RecognitionException;\n+import org.antlr.v4.runtime.Recognizer;\n+import org.antlr.v4.runtime.misc.ParseCancellationException;\n+\n+import com.ibm.fhir.model.ucum.UCUMLexer;\n+import com.ibm.fhir.model.ucum.UCUMParser;\n+import com.ibm.fhir.model.ucum.UCUMParser.MainTermContext;\n+\n+/**\n+ * Utility class for UCUM.\n+ */\n+public class UCUMUtil {\n+\n+    private static final ANTLRErrorListener SYNTAX_ERROR_LISTENER = new BaseErrorListener() {\n+\n+        @Override\n+        public void syntaxError(Recognizer<?, ?> recognizer, Object offendingSymbol, int line, int charPositionInLine, String msg, RecognitionException e) {\n+            throw new ParseCancellationException(String.format(\"line %d:%d %s\", line, charPositionInLine, msg), e);\n+        }\n+    };\n+\n+    private UCUMUtil() {\n+    }\n+\n+    /**\n+     * Determines if the string is a valid UCUM string.\n+     * \n+     * @param ucumString\n+     *            the string\n+     * @return true or false\n+     */\n+    public static boolean isValidUcum(String ucumString) {", "originalCommit": "d0352fbee7fe0e5e3fbccb04acc5af3e6b1cc31e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwNzc2OQ==", "url": "https://github.com/IBM/FHIR/pull/1420#discussion_r472307769", "bodyText": "I followed the same flow as FHIRPathUtil.java, which instantiated a new lexer/parser each time, and that appears to be how it needs to work.", "author": "tbieste", "createdAt": "2020-08-18T16:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3OTM1MQ=="}], "type": "inlineReview", "revised_code": null}]}