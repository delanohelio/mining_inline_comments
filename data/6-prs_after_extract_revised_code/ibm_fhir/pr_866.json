{"pr_number": 866, "pr_title": "issue #833 - add db2 migration test and fix issues", "pr_createdAt": "2020-03-30T16:51:58Z", "pr_url": "https://github.com/IBM/FHIR/pull/866", "timeline": [{"oid": "e8e849065b496af41907f306298abbde2a1833da", "url": "https://github.com/IBM/FHIR/commit/e8e849065b496af41907f306298abbde2a1833da", "message": "issue #833 - add db2 migration test and fix issues\n\nIntroduced variant of e2e-db2 test for testing migration which:\n1. creates a db2 instance and deploys the previous version of the schema\n2. runs migration\n3. executes the e2e tests\n\nThis uncovered a couple different issues with our existing migrations:\n1. `DB2 SQL Error: SQLCODE=-2310, SQLSTATE=     , SQLERRMC=-668`\n    while executing runstats after dropping a column\n2. `DB2 SQL Error: SQLCODE=-108, SQLSTATE=42601,\nSQLERRMC=FK_OBSERVATION_COMPOSITES_DATE`\n    while executing DropForeignKeyConstraint\n3. `DB2 SQL Error: SQLCODE=-204, SQLSTATE=42704,\nSQLERRMC=FK_OBSERVATION_COMPOSITES_DATE`\n    while executing DropForeignKeyConstraint\n\nFor number 1, the fix was to avoid executing RUNSTATS until after the\ntable with the dropped column has been REORGed.\n\nFor number 2, the fix was to stop qualifying the constraintName with the\nschema name.\n\nFor number 3, the fix was to avoid hard-coding Observation in the FK\nnames being dropped.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T16:57:21Z", "type": "commit"}, {"oid": "e8e849065b496af41907f306298abbde2a1833da", "url": "https://github.com/IBM/FHIR/commit/e8e849065b496af41907f306298abbde2a1833da", "message": "issue #833 - add db2 migration test and fix issues\n\nIntroduced variant of e2e-db2 test for testing migration which:\n1. creates a db2 instance and deploys the previous version of the schema\n2. runs migration\n3. executes the e2e tests\n\nThis uncovered a couple different issues with our existing migrations:\n1. `DB2 SQL Error: SQLCODE=-2310, SQLSTATE=     , SQLERRMC=-668`\n    while executing runstats after dropping a column\n2. `DB2 SQL Error: SQLCODE=-108, SQLSTATE=42601,\nSQLERRMC=FK_OBSERVATION_COMPOSITES_DATE`\n    while executing DropForeignKeyConstraint\n3. `DB2 SQL Error: SQLCODE=-204, SQLSTATE=42704,\nSQLERRMC=FK_OBSERVATION_COMPOSITES_DATE`\n    while executing DropForeignKeyConstraint\n\nFor number 1, the fix was to avoid executing RUNSTATS until after the\ntable with the dropped column has been REORGed.\n\nFor number 2, the fix was to stop qualifying the constraintName with the\nschema name.\n\nFor number 3, the fix was to avoid hard-coding Observation in the FK\nnames being dropped.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T16:57:21Z", "type": "forcePushed"}, {"oid": "268f41b7af57b00dc9c327aad16ad8196ac9c836", "url": "https://github.com/IBM/FHIR/commit/268f41b7af57b00dc9c327aad16ad8196ac9c836", "message": "Move \"copy-test-operations\" later in pre-test scripts\n\nIn the migration one, we were removing everything in the \"volumes\"\nfolder which wiped out this dir.\n\nAlso fixed formatting error in .github/workflows/build.yml\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T18:43:56Z", "type": "forcePushed"}, {"oid": "b44502e9b636086e35ed7fc7660f194920e5248a", "url": "https://github.com/IBM/FHIR/commit/b44502e9b636086e35ed7fc7660f194920e5248a", "message": "Move \"copy-test-operations\" later in pre-test scripts\n\nIn the migration one, we were removing everything in the \"volumes\"\nfolder which wiped out this dir.\n\nAlso fixed formatting error in .github/workflows/build.yml\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T19:21:09Z", "type": "forcePushed"}, {"oid": "d17578614003258e00c531bf3b9aa86552d5451b", "url": "https://github.com/IBM/FHIR/commit/d17578614003258e00c531bf3b9aa86552d5451b", "message": "Move \"copy-test-operations\" later in pre-test scripts\n\nIn the migration one, we were removing everything in the \"volumes\"\nfolder which wiped out this dir.\n\nAlso fixed formatting error in .github/workflows/build.yml\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T19:29:04Z", "type": "forcePushed"}, {"oid": "932c8360c57147dcb6680fc9ed7ba2b48cdeecab", "url": "https://github.com/IBM/FHIR/commit/932c8360c57147dcb6680fc9ed7ba2b48cdeecab", "message": "Move \"copy-test-operations\" later in pre-test scripts\n\nIn the migration one, we were removing everything in the \"volumes\"\nfolder which wiped out this dir.\n\nAlso fixed formatting error in .github/workflows/build.yml, switched to\njdk8 to improve speed, and renamed the logs to avoid conflict with\n`e2e-db2` results\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T20:04:17Z", "type": "commit"}, {"oid": "932c8360c57147dcb6680fc9ed7ba2b48cdeecab", "url": "https://github.com/IBM/FHIR/commit/932c8360c57147dcb6680fc9ed7ba2b48cdeecab", "message": "Move \"copy-test-operations\" later in pre-test scripts\n\nIn the migration one, we were removing everything in the \"volumes\"\nfolder which wiped out this dir.\n\nAlso fixed formatting error in .github/workflows/build.yml, switched to\njdk8 to improve speed, and renamed the logs to avoid conflict with\n`e2e-db2` results\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T20:04:17Z", "type": "forcePushed"}, {"oid": "03bb893fc4acedeb3b1d89ccb469133de9a0261b", "url": "https://github.com/IBM/FHIR/commit/03bb893fc4acedeb3b1d89ccb469133de9a0261b", "message": "Set reduced poolsize from deploySchemaAndTenant.sh\n\nIn PR #841 we reduced the default to 1 in order to avoid issue #845\nbut the db2-migration-test is pulling down an older version with a\npool-size of 80 and so we were hitting intermittent deadlocks.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T20:34:53Z", "type": "commit"}, {"oid": "03bb893fc4acedeb3b1d89ccb469133de9a0261b", "url": "https://github.com/IBM/FHIR/commit/03bb893fc4acedeb3b1d89ccb469133de9a0261b", "message": "Set reduced poolsize from deploySchemaAndTenant.sh\n\nIn PR #841 we reduced the default to 1 in order to avoid issue #845\nbut the db2-migration-test is pulling down an older version with a\npool-size of 80 and so we were hitting intermittent deadlocks.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T20:34:53Z", "type": "forcePushed"}, {"oid": "66cd850024d41b3aa39549f2251a9399f93af902", "url": "https://github.com/IBM/FHIR/commit/66cd850024d41b3aa39549f2251a9399f93af902", "message": "Update permission after updating tables\n\nWithout this, db2 was failing on updates and deletes with errors like:\n> DB2 SQL Error: SQLCODE=-5188, SQLSTATE=560D0,\n> SQLERRMC=FHIRDATA.MEDICATION_NUMBER_VALUES_TENANT;PERMISSION`\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-30T22:23:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400574739", "bodyText": "Is the purpose of this change to make it possible to run grant access multiple times for the same tenant?", "author": "albertwang-ibm", "createdAt": "2020-03-31T00:34:36Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IDatabaseAdapter.java", "diffHunk": "@@ -185,7 +185,7 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n      * @param tableName\n      * @param predicate\n      */\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate);\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate);", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMzQyMw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400613423", "bodyText": "no, its so that we can call it after updating the table (e.g. adding or removing columns).\ni found that without calling createOrReplacePermission after adjusting the table, then db2 would complain about the permission.", "author": "lmsurpre", "createdAt": "2020-03-31T02:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4OTMyMw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400889323", "bodyText": "ha, this is really interesting finding! I don't know this before, I thought we don't use column access control, so should not have to ...", "author": "albertwang-ibm", "createdAt": "2020-03-31T12:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400589067", "bodyText": "great catch! seems we have never noticed this before!!", "author": "albertwang-ibm", "createdAt": "2020-03-31T01:26:09Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -679,12 +679,12 @@ public void addComposites(List<IDatabaseObject> group, String prefix) {\n                 }\n \n                 statements.add(new DropForeignKeyConstraint(schemaName, tableName,\n-                        \"FK_OBSERVATION_COMPOSITES_DATE\",\n-                        \"FK_OBSERVATION_COMPOSITES_LATLNG\",\n-                        \"FK_OBSERVATION_COMPOSITES_NUMBER\",\n-                        \"FK_OBSERVATION_COMPOSITES_QUANTITY\",\n-                        \"FK_OBSERVATION_COMPOSITES_STR\",\n-                        \"FK_OBSERVATION_COMPOSITES_TOKEN\"));\n+                        FK + tableName + _STR,\n+                        FK + tableName + _NUMBER,\n+                        FK + tableName + _DATE,\n+                        FK + tableName + _TOKEN,\n+                        FK + tableName + _QUANTITY,\n+                        FK + tableName + _LATLNG));", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQzMw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400594433", "bodyText": "and it could be nicer if we can keep the order for the FKs - still from _D to _T", "author": "albertwang-ibm", "createdAt": "2020-03-31T01:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNDg2OA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400614868", "bodyText": "i didn't quite follow the order comment; i reordered these so that the order matches the order in the statements above it (in the same method)...did you want something different?", "author": "lmsurpre", "createdAt": "2020-03-31T03:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTcxNw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400891717", "bodyText": "I mean in the original codes, they are alphabet ordered.", "author": "albertwang-ibm", "createdAt": "2020-03-31T12:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MDcxMw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400590713", "bodyText": "make a lot sense, as I remember, most of the alter table operations requires reorg before the table is really usable ... otherwise it will always show reorg pending error for sql ...", "author": "albertwang-ibm", "createdAt": "2020-03-31T01:31:26Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -456,12 +456,10 @@ public void runStatement(IDatabaseStatement stmt) {\n \n             String qname = ((DropColumn) stmt).getSchemaName() + \".\" + ((DropColumn) stmt).getTableName();\n \n-            Db2AdminCommand runstats = new Db2AdminCommand(\"RUNSTATS ON TABLE \" + qname + \" WITH DISTRIBUTION AND DETAILED INDEXES ALL\");\n-            super.runStatement(runstats);\n-\n             String reorgCommand = \"REORG TABLE \" + qname;\n             super.runStatement(new Db2AdminCommand(reorgCommand));\n \n+            Db2AdminCommand runstats = new Db2AdminCommand(\"RUNSTATS ON TABLE \" + qname + \" WITH DISTRIBUTION AND DETAILED INDEXES ALL\");", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400591748", "bodyText": "this does remember me of one question, should we force all db connections to drop first before we run reorg during migration?", "author": "albertwang-ibm", "createdAt": "2020-03-31T01:34:51Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNTM1Nw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400615357", "bodyText": "this is an excellent question.  the migration seems to work now without that.  my biggest concern is that calling the reorg command is actually committing the migrations under the covers because that would break our \"do all the migrations within a single transaction\" model.\nstill, i'd prefer to punt on that one for now so we can get this in for 4.1.0...maybe open it as a separate issue?", "author": "lmsurpre", "createdAt": "2020-03-31T03:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMDkyMw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400820923", "bodyText": "I think we should probably add to the documentation stating that.", "author": "prb112", "createdAt": "2020-03-31T10:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NTYwNw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400895607", "bodyText": "which documentation.  i did add it here in the javadoc but not in the readme", "author": "lmsurpre", "createdAt": "2020-03-31T13:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzOTE2NQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400939165", "bodyText": "I was thinking to the design considerations in Db2MultitenantSchema... Essentially what we discussed is 'offline' updates.", "author": "prb112", "createdAt": "2020-03-31T14:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2ODczNA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r401168734", "bodyText": "I updated the doc", "author": "lmsurpre", "createdAt": "2020-03-31T19:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNTA1NA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400815054", "bodyText": "2020", "author": "prb112", "createdAt": "2020-03-31T10:44:33Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTY3NA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935674", "bodyText": "done", "author": "lmsurpre", "createdAt": "2020-03-31T13:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNTA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "fb4258c42c95411c8250e6ce41b9720c645d16c7", "chunk": "diff --git a/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java b/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\nindex c63fc59ce2..8aa3801f6c 100644\n--- a/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\n+++ b/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\n\n@@ -112,8 +112,8 @@ public class Db2Adapter extends CommonDatabaseAdapter {\n \n         final String ddl = \"\"\n                 + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName\n-                + \"                          ON \" + qualifiedTableName\n-                + \"              FOR ROWS WHERE \" + predicate\n+                + \" ON \" + qualifiedTableName\n+                + \" FOR ROWS WHERE \" + predicate\n                 + \" ENFORCED FOR ALL ACCESS ENABLE \";\n         runStatement(ddl);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400816147", "bodyText": "Interesting... it's left aligned in the output.\nCREATE PERMISSION FHIRAPP.STR_VALUES_TENANT                      ON FHIRAPP.STR_VALUES          FOR ROWS WHERE FHIRAPP.STR_VALUES.MT_ID = FHIR_ADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;", "author": "prb112", "createdAt": "2020-03-31T10:46:41Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTk5Mw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400891993", "bodyText": "i think this format is wonky...i just tried preservign what was there", "author": "lmsurpre", "createdAt": "2020-03-31T12:58:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NTExMg==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400895112", "bodyText": "actually, now i can't seem to find where i inhereted this from...will change", "author": "lmsurpre", "createdAt": "2020-03-31T13:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwNDUwNg==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400904506", "bodyText": "so sorry it was an observation - not intended to change.", "author": "prb112", "createdAt": "2020-03-31T13:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTUzNQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935535", "bodyText": "updated", "author": "lmsurpre", "createdAt": "2020-03-31T13:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fb4258c42c95411c8250e6ce41b9720c645d16c7", "chunk": "diff --git a/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java b/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\nindex c63fc59ce2..8aa3801f6c 100644\n--- a/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\n+++ b/fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java\n\n@@ -112,8 +112,8 @@ public class Db2Adapter extends CommonDatabaseAdapter {\n \n         final String ddl = \"\"\n                 + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName\n-                + \"                          ON \" + qualifiedTableName\n-                + \"              FOR ROWS WHERE \" + predicate\n+                + \" ON \" + qualifiedTableName\n+                + \" FOR ROWS WHERE \" + predicate\n                 + \" ENFORCED FOR ALL ACCESS ENABLE \";\n         runStatement(ddl);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400817721", "bodyText": "I think the prior line 45 was good defensive programming\nit asserts if the passed schemaName and constraintName are valid", "author": "prb112", "createdAt": "2020-03-31T10:49:44Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -42,8 +42,7 @@ public void run(IDatabaseTranslator translator, Connection c) {\n \n         for (String constraintName : constraintNames) {\n             StringBuilder ddl = new StringBuilder(\"ALTER TABLE \" + qTableName);\n-            String qConstraintName = DataDefinitionUtil.getQualifiedName(schemaName, constraintName);\n-            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + qConstraintName);\n+            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + constraintName);", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4OTI5Mw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400889293", "bodyText": "It was computing the qualified name which we don't want.  I will add DataDefinitionUtil.assertValidName(constraintName) in a loop in the constructor for the input validation.", "author": "lmsurpre", "createdAt": "2020-03-31T12:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTc5NA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935794", "bodyText": "done", "author": "lmsurpre", "createdAt": "2020-03-31T13:58:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400822198", "bodyText": "Any specific reasons other than whitespace for this update?", "author": "prb112", "createdAt": "2020-03-31T10:58:04Z", "path": "fhir-notification-kafka/src/main/java/com/ibm/fhir/notifications/kafka/impl/FHIRNotificationKafkaPublisher.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2016, 2020", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNDU0Nw==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400914547", "bodyText": "nope.  i had the edits sitting around and thought i might as well include them.  happy to remove if you prefer.", "author": "lmsurpre", "createdAt": "2020-03-31T13:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNDk3MQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400934971", "bodyText": "I didn't want to miss anything :) or the commit to.  This is A-OK!", "author": "prb112", "createdAt": "2020-03-31T13:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjQ1NQ==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400822455", "bodyText": "Whitespace?", "author": "prb112", "createdAt": "2020-03-31T10:58:23Z", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/search/test/JDBCSearchCompositeTest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2018,2019\n+ * (C) Copyright IBM Corp. 2018, 2020", "originalCommit": "66cd850024d41b3aa39549f2251a9399f93af902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNDk0NA==", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400914944", "bodyText": "yeah, i had the edits sitting around and thought i might as well include them. happy to remove if you prefer.", "author": "lmsurpre", "createdAt": "2020-03-31T13:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjQ1NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fb4258c42c95411c8250e6ce41b9720c645d16c7", "url": "https://github.com/IBM/FHIR/commit/fb4258c42c95411c8250e6ce41b9720c645d16c7", "message": "Updates per PR feedback\n\nAdded \"Testing migrations\" section to DB2SchemaMigration.md\n\nModified ddl formatting, removed unnecessary env var in ci jobs, and\nfixed more copyrights\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-31T14:20:56Z", "type": "commit"}, {"oid": "fb4258c42c95411c8250e6ce41b9720c645d16c7", "url": "https://github.com/IBM/FHIR/commit/fb4258c42c95411c8250e6ce41b9720c645d16c7", "message": "Updates per PR feedback\n\nAdded \"Testing migrations\" section to DB2SchemaMigration.md\n\nModified ddl formatting, removed unnecessary env var in ci jobs, and\nfixed more copyrights\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-31T14:20:56Z", "type": "forcePushed"}, {"oid": "26a373ed9a021e677644c5837a0d5c46847a17af", "url": "https://github.com/IBM/FHIR/commit/26a373ed9a021e677644c5837a0d5c46847a17af", "message": "Added migration details to Managing TABLE section\n\nAdded info on setting up automated migrations and recommendations to:\n1. avoid destructive changes like dropping columns;\n2. backup the database before invoking a migration; and\n3. perform the migration off-line\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-31T16:27:41Z", "type": "forcePushed"}, {"oid": "dfc74dde879fb35716ee502401be720f1888dfb9", "url": "https://github.com/IBM/FHIR/commit/dfc74dde879fb35716ee502401be720f1888dfb9", "message": "Added migration details to Managing TABLE section\n\nAdded info on setting up automated migrations and recommendations to:\n1. avoid destructive changes like dropping columns;\n2. backup the database before invoking a migration; and\n3. perform the migration off-line\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-31T16:33:44Z", "type": "commit"}, {"oid": "dfc74dde879fb35716ee502401be720f1888dfb9", "url": "https://github.com/IBM/FHIR/commit/dfc74dde879fb35716ee502401be720f1888dfb9", "message": "Added migration details to Managing TABLE section\n\nAdded info on setting up automated migrations and recommendations to:\n1. avoid destructive changes like dropping columns;\n2. backup the database before invoking a migration; and\n3. perform the migration off-line\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-03-31T16:33:44Z", "type": "forcePushed"}]}