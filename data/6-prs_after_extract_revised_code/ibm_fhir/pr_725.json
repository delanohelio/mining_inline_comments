{"pr_number": 725, "pr_title": " issue #723 #728 upgrade COS client and fix Base64BinaryTest ", "pr_createdAt": "2020-02-25T12:57:01Z", "pr_url": "https://github.com/IBM/FHIR/pull/725", "timeline": [{"oid": "9064d9d5c9207489bbc320c18cb617b09ac3fc35", "url": "https://github.com/IBM/FHIR/commit/9064d9d5c9207489bbc320c18cb617b09ac3fc35", "message": "Merge pull request #724 from IBM/issue-723\n\nIssue 723", "committedDate": "2020-02-25T02:22:06Z", "type": "commit"}, {"oid": "eaf2beb7ee7af5ac84cdd17cd2dc1e565d316f18", "url": "https://github.com/IBM/FHIR/commit/eaf2beb7ee7af5ac84cdd17cd2dc1e565d316f18", "message": "issue #723 upgrade COS client and abort objectinputstream\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-02-25T12:50:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4OTQwNQ==", "url": "https://github.com/IBM/FHIR/pull/725#discussion_r383889405", "bodyText": "Is abort for exception handling logic? if so, why is it in the main try?", "author": "prb112", "createdAt": "2020-02-25T13:50:32Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/BulkDataUtils.java", "diffHunk": "@@ -157,8 +158,11 @@ public static int readFhirResourceFromObjectStore(AmazonS3 cosClient, String buc\n            int numOfLinesToSkip, List<Resource> fhirResources) {\n         int exported;\n         S3Object item = cosClient.getObject(new GetObjectRequest(bucketName, itemName));\n-        try (BufferedReader resReader = new BufferedReader(new InputStreamReader(item.getObjectContent()))) {\n+        try (S3ObjectInputStream s3InStream = item.getObjectContent();\n+             BufferedReader resReader = new BufferedReader(new InputStreamReader(s3InStream))) {\n             exported = getFhirResourceFromBufferReader(resReader, numOfLinesToSkip, fhirResources);\n+            // Notify s3 client to abort and prevent the server from keeping on sending data.\n+            s3InStream.abort();", "originalCommit": "eaf2beb7ee7af5ac84cdd17cd2dc1e565d316f18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MTI3NA==", "url": "https://github.com/IBM/FHIR/pull/725#discussion_r383971274", "bodyText": "it's not for exception handling logic, if exception happens, the exported will be 0, and the job will be finished with error message in the log, so there will be no issue.   This is for the normal flow of the chunk job, e.g, in first chunk, the job opens the objectstream, read 1000 lines and then abort the stream, and then writes to fhir server, persistence 1000 to checkpoint as the tobeskipped lines, and then in the following second chunk, the job opens the objectstream again, skip 1000 lines first, then read 1000 lines and then abort the stream, and then writes to fhir server, and persistence 2000 to checkpoint as the tobeskipped lines, repeat the above steps till all the lines are processed.      Note: In current implementation,  I didn't provide option to reuse the inputstream/reader across all the chunk operations, because I thought the to-be-imported file can be very huge, and this can cause the connection to be occupied by the import job for too long time which in theory may cause issue for the server if too many concurrent huge files are imported at the same time.  But I did have opened issue #726 to provide option(e.g, controlled by a switch) to reuse the inputstream/reader across all chunk operations if the job is not paused or stopped and continued.", "author": "albertwang-ibm", "createdAt": "2020-02-25T15:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4OTQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MzI1NA==", "url": "https://github.com/IBM/FHIR/pull/725#discussion_r384093254", "bodyText": "I get it! this makes sense.", "author": "prb112", "createdAt": "2020-02-25T19:57:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4OTQwNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9708c774a4451212c96cde6355a7645faf3ec5ae", "url": "https://github.com/IBM/FHIR/commit/9708c774a4451212c96cde6355a7645faf3ec5ae", "message": "issue #728 test changes\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-02-25T18:41:04Z", "type": "commit"}, {"oid": "2785ae9ca2bb948c7fce1a12c3c84a39821c2fec", "url": "https://github.com/IBM/FHIR/commit/2785ae9ca2bb948c7fce1a12c3c84a39821c2fec", "message": "issue #728 fix reference verification error for Bast64BinaryTest\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-02-25T18:59:13Z", "type": "commit"}]}