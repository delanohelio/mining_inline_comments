{"pr_number": 1416, "pr_title": "Issue 1413 - improve error response for unsupported modifiers", "pr_createdAt": "2020-08-14T21:40:24Z", "pr_url": "https://github.com/IBM/FHIR/pull/1416", "timeline": [{"oid": "6c5f44f74fbe4816861a9c09b51ba9dc706ba857", "url": "https://github.com/IBM/FHIR/commit/6c5f44f74fbe4816861a9c09b51ba9dc706ba857", "message": "issue #1413 - improve error message for unsupported modifiers and test it\n\n1. uncomment the chained_missing search tests from the fhir-persistence module\n2. update FHIRPersistenceJDBCImpl.checkModifiers to throw a FHIRPersistenceNotSupportedException for chained params with a modifier\n3. override these search tests in the fhir-persistence-jdbc concrete subtypes and add an exception expectation\n\nseparately, i found and opened issue #1415 and made a similar fix:\n4. add a search test to AbstractWholeSystemSearchTest\n5. update FHIRPersistenceJDBCImpl.checkModifiers to throw a FHIRPersistenceNotSupportedException for whole-system search params with the missing modifier\n6. override that search test in JDBCWholeSystemSearchTest to expect that exception\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-08-14T19:45:54Z", "type": "commit"}, {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "url": "https://github.com/IBM/FHIR/commit/12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "message": "issue #1413 - set NOT_SUPPORTED and return 400 for unsupported modifiers\n\n1. added javadoc for Element.is\n\n2. added issue of type NOT_SUPPORTED to\nFHIRPersistenceNotSupportedException for unsupported modifiers\n\n3. added not-supported-detail extension for requests to unsupported\nresource type endpoints and flipped logic in IssueTypeToHttpStatusMapper\nso that only NOT_SUPPORTED issues with the \"resource\" extension are\nturned into 404 (NOT_FOUND) errors\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-08-15T20:43:22Z", "type": "commit"}, {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "url": "https://github.com/IBM/FHIR/commit/12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "message": "issue #1413 - set NOT_SUPPORTED and return 400 for unsupported modifiers\n\n1. added javadoc for Element.is\n\n2. added issue of type NOT_SUPPORTED to\nFHIRPersistenceNotSupportedException for unsupported modifiers\n\n3. added not-supported-detail extension for requests to unsupported\nresource type endpoints and flipped logic in IssueTypeToHttpStatusMapper\nso that only NOT_SUPPORTED issues with the \"resource\" extension are\nturned into 404 (NOT_FOUND) errors\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-08-15T20:43:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNjIzMw==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472136233", "bodyText": "this is our internal Status... not HTTPStatus (removed my prior comment)", "author": "prb112", "createdAt": "2020-08-18T12:22:52Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -54,16 +54,16 @@\n                             FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {\n                         return Status.PRECONDITION_FAILED;\n                     } else if (issueType == IssueType.ValueSet.NOT_SUPPORTED &&\n-                            \"interaction\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n-                        return Status.BAD_REQUEST;\n+                            \"resource\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n+                        return Status.NOT_FOUND;", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE2NTI1Mg==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472165252", "bodyText": "this class maps IssueTypes to HTTP statuses, but in some cases IssueTypes can't be mapped cleanly.  so I invented this approach of adding an extension to the IssueType which carries the extra information needed to map it into a proper HTTPStatus.\nin this case, the extra detail is about \"what isn't supported\" for the NOT_SUPPORTED value.  it isn't a perfect semantic fit with 404, but in practice we only set this detail extension to \"resource\" in cases where we receive a request to a [base]/ResourceType endpoint for a resource type that isn't supported...hence the mapping to 404 instead of 400 for this case.", "author": "lmsurpre", "createdAt": "2020-08-18T12:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNjIzMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNzE3NA==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472137174", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-08-18T12:24:39Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/parameters/QueryParameter.java", "diffHunk": "@@ -19,7 +19,7 @@\n import com.ibm.fhir.search.SearchConstants.Type;\n \n /**\n- * general type of parameter. \n+ * general type of parameter.", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzODczNg==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472138736", "bodyText": "there is a high amount of duplication, just a small suggestion to push it down into the method buildUnsupportedResourceTypeException and make it a void method.", "author": "prb112", "createdAt": "2020-08-18T12:27:15Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -913,7 +914,7 @@ public Bundle doSearch(String type, String compartment, String compartmentId,\n             // Check to see if it's supported, else, throw a bad request.\n             // If this is removed, it'll result in nullpointer when processing the request\n             if (!ModelSupport.isResourceType(type)) {\n-                throw buildUnsupportedResourceTypeException(type, IssueType.NOT_SUPPORTED);\n+                throw buildUnsupportedResourceTypeException(type);\n             }", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTM5MQ==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139391", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-08-18T12:28:29Z", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchURITest.java", "diffHunk": "@@ -21,14 +21,16 @@\n \n /**\n  * <a href=\"https://hl7.org/fhir/r4/search.html#uri\">FHIR Specification: Search - uri</a>\n- * ", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTc4Ng==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139786", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-08-18T12:29:14Z", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchStringTest.java", "diffHunk": "@@ -26,103 +26,99 @@\n  */\n public abstract class AbstractSearchStringTest extends AbstractPLSearchTest {\n \n+    @Override", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTk3MQ==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139971", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-08-18T12:29:33Z", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchReferenceTest.java", "diffHunk": "@@ -24,30 +24,32 @@\n  */\n public abstract class AbstractSearchReferenceTest extends AbstractPLSearchTest {\n \n+    @Override\n     protected Basic getBasicResource() throws Exception {\n         return TestUtil.readExampleResource(\"json/ibm/basic/BasicReference.json\");\n     }\n \n+    @Override\n     protected void setTenant() throws Exception {\n         FHIRRequestContext.get().setTenantId(\"reference\");\n     }\n \n     @Test\n     public void testSearchReference_Reference_relative() throws Exception {\n-        // Reference by id really only works when the system knows which resource type(s) \n+        // Reference by id really only works when the system knows which resource type(s)", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0MDU3Mg==", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472140572", "bodyText": "Copyright", "author": "prb112", "createdAt": "2020-08-18T12:30:31Z", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchDateTest.java", "diffHunk": "@@ -26,22 +26,24 @@\n  * - Date</a> Tests\n  */\n public abstract class AbstractSearchDateTest extends AbstractPLSearchTest {\n+    @Override\n     protected Basic getBasicResource() throws Exception {\n         return TestUtil.readExampleResource(\"json/ibm/basic/BasicDate.json\");\n     }\n+    @Override", "originalCommit": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "fd0a9e477d6b9cbcd8eb38650240450ff2c573d5", "url": "https://github.com/IBM/FHIR/commit/fd0a9e477d6b9cbcd8eb38650240450ff2c573d5", "message": "update copyrights\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-08-18T12:51:43Z", "type": "commit"}, {"oid": "fd0a9e477d6b9cbcd8eb38650240450ff2c573d5", "url": "https://github.com/IBM/FHIR/commit/fd0a9e477d6b9cbcd8eb38650240450ff2c573d5", "message": "update copyrights\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-08-18T12:51:43Z", "type": "forcePushed"}]}