{"pr_number": 2007, "pr_title": "Fix some issues with FulgoraGraphComputer", "pr_createdAt": "2020-03-03T12:28:49Z", "pr_url": "https://github.com/JanusGraph/janusgraph/pull/2007", "timeline": [{"oid": "e577d84ad67d0534784baf03e7f323b71bed58dc", "url": "https://github.com/JanusGraph/janusgraph/commit/e577d84ad67d0534784baf03e7f323b71bed58dc", "message": "Fix some issues with FulgoraGraphComputer\n\nAdd support for job without combiner - just combine message into list\nDetach elements before it will be written into graph for avoid serialization issue\n\nNow ConnectedComponentTest and ShortestPathVertexProgramTest passed\n\nSigned-off-by: Pavel Ershov <owner.mad.epa@gmail.com>", "committedDate": "2020-03-03T12:18:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxNzU4Mw==", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r387017583", "bodyText": "Why did you remove this opt-in?", "author": "FlorianHockmann", "createdAt": "2020-03-03T13:28:38Z", "path": "janusgraph-core/src/main/java/org/janusgraph/core/JanusGraph.java", "diffHunk": "@@ -30,7 +30,6 @@\n @Graph.OptIn(Graph.OptIn.SUITE_STRUCTURE_STANDARD)\n @Graph.OptIn(Graph.OptIn.SUITE_PROCESS_STANDARD)\n @Graph.OptIn(Graph.OptIn.SUITE_PROCESS_COMPUTER)\n-@Graph.OptIn(\"org.janusgraph.blueprints.process.traversal.strategy.JanusGraphStrategySuite\")", "originalCommit": "e577d84ad67d0534784baf03e7f323b71bed58dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NTQ2NA==", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r388145464", "bodyText": "This file does not exists in the repo", "author": "mad", "createdAt": "2020-03-05T08:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxNzU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0Nzc3Ng==", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r388147776", "bodyText": "Strange, but ok, that's of course a good reason to remove this.", "author": "FlorianHockmann", "createdAt": "2020-03-05T08:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxNzU4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5MDM3Mw==", "url": "https://github.com/JanusGraph/janusgraph/pull/2007#discussion_r387090373", "bodyText": "(nitpick) I tried to understand what this function does but failed. If you can move some of this into its own method and give that a good name that tells what the code does, then that would be helpful to any future reader in my opinion.\nHowever, all the Fulgora code is written this way so this added code fits in nicely here \ud83d\ude05", "author": "FlorianHockmann", "createdAt": "2020-03-03T15:18:26Z", "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/olap/computer/FulgoraGraphComputer.java", "diffHunk": "@@ -373,13 +378,21 @@ private Graph writeMutatedPropertiesBackIntoGraph() {\n             }\n \n             //TODO: Filter based on VertexProgram\n+            HaltedTraverserStrategy haltedTraverserStrategy = HaltedTraverserStrategy.reference();\n             Map<Long, Map<String, Object>> mutatedProperties = Maps.transformValues(vertexMemory.getMutableVertexProperties(),\n-                new Function<Map<String, Object>, Map<String, Object>>() {\n-                    @Nullable\n-                    @Override\n-                    public Map<String, Object> apply(final Map<String, Object> o) {\n-                        return Maps.filterKeys(o, s -> !VertexProgramHelper.isTransientVertexComputeKey(s, vertexProgram.getVertexComputeKeys()));\n-                    }\n+                (Function<Map<String, Object>, Map<String, Object>>) o -> {\n+                    Map<String, Object> nonTransientKeys =", "originalCommit": "e577d84ad67d0534784baf03e7f323b71bed58dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}