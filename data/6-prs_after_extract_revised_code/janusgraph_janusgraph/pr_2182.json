{"pr_number": 2182, "pr_title": "Fix testNestedWrites testcase in JanusGraphIndexTest", "pr_createdAt": "2020-08-09T03:49:16Z", "pr_url": "https://github.com/JanusGraph/janusgraph/pull/2182", "timeline": [{"oid": "d32db08b5c4322c49887faf245a0b4848a9e906e", "url": "https://github.com/JanusGraph/janusgraph/commit/d32db08b5c4322c49887faf245a0b4848a9e906e", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>", "committedDate": "2020-08-09T03:52:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0MzU3Mg==", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475343572", "bodyText": "What if there are valid non-ghost vertices within the Iterable that just have no neighbors?\nI think they are considered \"removed\" here, right? Should they?", "author": "rngcntr", "createdAt": "2020-08-24T05:00:29Z", "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -1809,14 +1810,39 @@ private void testNestedWrites(String initialValue, String updatedValue, TestInfo\n         propDeleter.commit();\n \n         // The vertex must not exist after deletion\n+        // See https://github.com/JanusGraph/janusgraph/issues/2176. The vertex is deleted from storage backend, but\n+        // may not be deleted from index backend\n         graph.tx().rollback();\n         assertNull(getV(graph, id));\n-        assertEmpty(graph.query().has(propName).vertices());\n+        assertTrue(verticesRemoved(graph.query().has(propName).vertices()));\n         if (null != updatedValue)\n-            assertEmpty(graph.query().has(propName, updatedValue).vertices());\n+            assertTrue(verticesRemoved(graph.query().has(propName, updatedValue).vertices()));\n         graph.tx().rollback();\n     }\n \n+    /**\n+     * Check whether given iterable does not contain any valid vertex\n+     * This function returns true if either of the following conditions holds:\n+     * 1) the iterable is empty\n+     * 2) all vertices in the iterable are phantom vertices\n+     * @param vertices An iterable of vertices\n+     * @return boolean indicating if given vertices do not exist\n+     */\n+    private boolean verticesRemoved(Iterable<JanusGraphVertex> vertices) {\n+        if (Iterables.isEmpty(vertices)) {\n+            return true;\n+        }\n+        StandardJanusGraphTx queryTx = (StandardJanusGraphTx) graph.newTransaction();\n+        for (JanusGraphVertex v : vertices) {\n+            if (!graph.edgeQuery(v.longId(), graph.vertexExistenceQuery, queryTx.getTxHandle()).isEmpty()) {", "originalCommit": "d32db08b5c4322c49887faf245a0b4848a9e906e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU2MzE3NQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475563175", "bodyText": "I guess you are misguided by the method name, \"edgeQuery\". It does not check neighbors, the method name is \"edgeQuery\" because almost everything is an edge in JanusGraph to my understanding. The method queries \"edgeStore\", which stores all vertices, properties, and edges.", "author": "li-boxuan", "createdAt": "2020-08-24T12:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0MzU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU2NTE0NQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475565145", "bodyText": "Thanks for pointing that out! You are completely right, I misunderstood edgeQuery.", "author": "rngcntr", "createdAt": "2020-08-24T12:33:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0MzU3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NDA3Mw==", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475344073", "bodyText": "What's the logical difference between this line and the original one?", "author": "rngcntr", "createdAt": "2020-08-24T05:02:31Z", "path": "janusgraph-backend-testutils/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java", "diffHunk": "@@ -1785,7 +1786,7 @@ private void testNestedWrites(String initialValue, String updatedValue, TestInfo\n \n         // Write schema and one vertex\n         final PropertyKey prop = makeKey(propName, String.class);\n-        createExternalVertexIndex(prop, INDEX);\n+        mgmt.buildIndex(\"mixed\", Vertex.class).addKey(prop, Mapping.STRING.asParameter()).buildMixedIndex(INDEX);", "originalCommit": "d32db08b5c4322c49887faf245a0b4848a9e906e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU2MTQ2Ng==", "url": "https://github.com/JanusGraph/janusgraph/pull/2182#discussion_r475561466", "bodyText": "The original one builds a mixed index backed by TEXT, which supports full-text search but not equality check. Therefore, original line 1816\nassertEmpty(graph.query().has(propName, updatedValue).vertices());\ndoes a full scan without using mixed index.", "author": "li-boxuan", "createdAt": "2020-08-24T12:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NDA3Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "bc2c1e0c79e836948c206d383d3e1c287d4e1283", "url": "https://github.com/JanusGraph/janusgraph/commit/bc2c1e0c79e836948c206d383d3e1c287d4e1283", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>", "committedDate": "2020-08-30T15:34:34Z", "type": "commit"}, {"oid": "bc2c1e0c79e836948c206d383d3e1c287d4e1283", "url": "https://github.com/JanusGraph/janusgraph/commit/bc2c1e0c79e836948c206d383d3e1c287d4e1283", "message": "Fix testNestedWrites testcase in JanusGraphIndexTest\n\nThe test case builds a mixed index using TEXT mapping, but uses\nequality condition in query (which does not use this mixed\nindex). This makes one assertion does not work as expected, and\nas a consequence, passes the test by chance. This commit fixes the\nmixed index usage and the assertion to uncover the real problem.\n\nRelated to #2176\n\nSigned-off-by: Boxuan Li <liboxuan@connect.hku.hk>", "committedDate": "2020-08-30T15:34:34Z", "type": "forcePushed"}]}