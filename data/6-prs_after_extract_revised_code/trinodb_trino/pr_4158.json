{"pr_number": 4158, "pr_title": "Fix Iceberg ORC timestamps", "pr_createdAt": "2020-06-22T21:41:49Z", "pr_url": "https://github.com/trinodb/trino/pull/4158", "timeline": [{"oid": "6b92a49514a5f450fe06369bb0ecca7c94a900f5", "url": "https://github.com/trinodb/trino/commit/6b92a49514a5f450fe06369bb0ecca7c94a900f5", "message": "Fix Iceberg ORC timestamps\n\nThis commit enables Timestamp columns in Iceberg ORC data files,\nand fixes two bugs in handling of Iceberg ORC timestamps,\nboth a consequence of performing conversion from the\nPresto representation to/from the ORC representation twice.\n\nTimestamps in Parquet are still handled incorrectly - -\nthe Presto Parquet writer is attempting to write the timestamp\nas a string, but it should be a long.  The proper fix is to\nswitch to use the Parquet writer.\n\nThis uncomments the timestamp test in TestIcebergSmoke.  However,\nit leaves timestamps in testCreatePartitionedTable commented out\nuntil writing Parquet timestamps is fixed.", "committedDate": "2020-06-22T21:38:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NDM5Ng==", "url": "https://github.com/trinodb/trino/pull/4158#discussion_r443844396", "bodyText": "We should consider adding support for variable-precision timestamps (or, at least, expose this as timestamp(6), since we're dealing with microseconds)", "author": "martint", "createdAt": "2020-06-22T21:46:30Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/IcebergPageSource.java", "diffHunk": "@@ -215,7 +216,7 @@ private static Object deserializePartitionValue(Type type, String valueString, S\n                 return parseLong(valueString);\n             }\n             if (type.equals(TIMESTAMP)) {\n-                return parseLong(valueString);\n+                return MICROSECONDS.toMillis(parseLong(valueString));", "originalCommit": "6b92a49514a5f450fe06369bb0ecca7c94a900f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NDAxOA==", "url": "https://github.com/trinodb/trino/pull/4158#discussion_r443874018", "bodyText": "I'll consult with @electrum as to how to get this done.", "author": "djsstarburst", "createdAt": "2020-06-22T23:12:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NDM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MDU0OQ==", "url": "https://github.com/trinodb/trino/pull/4158#discussion_r444560549", "bodyText": "Agreed. This should should simplify the various TupleDomain and value conversions, but will require support in the readers and writers for ORC and Parquet, so it's not a trivial project.", "author": "electrum", "createdAt": "2020-06-23T23:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NDM5Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2ODQ3Mw==", "url": "https://github.com/trinodb/trino/pull/4158#discussion_r444568473", "bodyText": "I just realized that this code is actually correct. The problem is that we aren't doing any conversion between millis and micros when reading and writing the data files. With the removal of this conversion code, we are now pushing a millis value into the Iceberg predicate code, which works because the files are written with a millis value.\nSo it works from a round trip perspective, but it's not valid from an Iceberg format perspective. This is where having integration tests against Spark, or read/write directly with the Iceberg library, would be helpful.", "author": "electrum", "createdAt": "2020-06-23T23:49:09Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/ExpressionConverter.java", "diffHunk": "@@ -168,14 +162,6 @@ else if (highBound == BELOW && high.getValueBlock().isPresent()) {\n \n     private static Object getValue(Type type, Marker marker, ConnectorSession session)\n     {\n-        if (type instanceof TimestampWithTimeZoneType || type instanceof TimeWithTimeZoneType) {\n-            return MILLISECONDS.toMicros(unpackMillisUtc((Long) marker.getValue()));\n-        }\n-\n-        if (type instanceof TimestampType || type instanceof TimeType) {", "originalCommit": "6b92a49514a5f450fe06369bb0ecca7c94a900f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4OTE2NQ==", "url": "https://github.com/trinodb/trino/pull/4158#discussion_r444589165", "bodyText": "Nevermind, as @lxynov pointed out, ORC supports timestamps natively, so we're reading and writing them correctly.", "author": "electrum", "createdAt": "2020-06-24T01:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2ODQ3Mw=="}], "type": "inlineReview", "revised_code": null}]}