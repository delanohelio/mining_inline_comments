{"pr_number": 6303, "pr_title": "Test multiple set sizes in testLargeIn", "pr_createdAt": "2020-12-11T13:40:54Z", "pr_url": "https://github.com/trinodb/trino/pull/6303", "timeline": [{"oid": "128a7e877732cb70d61f5e876eb582888fd1d416", "url": "https://github.com/trinodb/trino/commit/128a7e877732cb70d61f5e876eb582888fd1d416", "message": "Test multiple set sizes in testLargeIn\n\nIt is possible that connector has mechanisms which ensure that very\nlarge value sets (>5000) work fine, yet it would still fail for smaller,\nyet not tiny sets. Adding coverage for that.", "committedDate": "2020-12-11T13:55:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA3OTUyNw==", "url": "https://github.com/trinodb/trino/pull/6303#discussion_r541079527", "bodyText": "We should be able to enable the test now for memsql.\n(make a PR from inside the repo to have memsql tests run)", "author": "findepi", "createdAt": "2020-12-11T16:42:49Z", "path": "presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlDistributedQueries.java", "diffHunk": "@@ -130,7 +130,7 @@ protected boolean isColumnNameRejected(Exception exception, String columnName, b\n     }\n \n     @Override\n-    public void testLargeIn()\n+    public void testLargeIn(int valuesCount)", "originalCommit": "128a7e877732cb70d61f5e876eb582888fd1d416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMzE3Ng==", "url": "https://github.com/trinodb/trino/pull/6303#discussion_r541103176", "bodyText": "#6313", "author": "losipiuk", "createdAt": "2020-12-11T17:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA3OTUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "dccfdca03e98f6cf4a5a33f7e82cc7b7f301548c", "chunk": "diff --git a/presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlDistributedQueries.java b/presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlDistributedQueries.java\nindex 0c0ac52fba..1a59b5cc35 100644\n--- a/presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlDistributedQueries.java\n+++ b/presto-memsql/src/test/java/io/prestosql/plugin/memsql/TestMemSqlDistributedQueries.java\n\n@@ -129,13 +129,6 @@ public class TestMemSqlDistributedQueries\n         return nullToEmpty(exception.getMessage()).matches(\".*Incorrect column name.*\");\n     }\n \n-    @Override\n-    public void testLargeIn(int valuesCount)\n-    {\n-        // Caused by: java.sql.SQLException: Thread stack overrun:  Used: 1048713 of a 1048576 stack. Use 'memsqld --thread_stack=#' to specify a bigger stack if needed.\n-        throw new SkipException(\"MemSQL's default thread stack is not large enough\");\n-    }\n-\n     @Override\n     public void testInsertUnicode()\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA3OTkwMw==", "url": "https://github.com/trinodb/trino/pull/6303#discussion_r541079903", "bodyText": "We should be able to enable the test now for phoenix, provided that @sopel39 's capping works for phoenix too.", "author": "findepi", "createdAt": "2020-12-11T16:43:29Z", "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java", "diffHunk": "@@ -75,7 +75,7 @@ protected TestTable createTableWithDefaultColumns()\n     }\n \n     @Override\n-    public void testLargeIn()\n+    public void testLargeIn(int valuesCount)", "originalCommit": "128a7e877732cb70d61f5e876eb582888fd1d416", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f00d4058fdc8928b3f4177dda3f870f144ffde15", "chunk": "diff --git a/presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java b/presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java\nindex 4c4be36e86..dfc054837d 100644\n--- a/presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java\n+++ b/presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java\n\n@@ -74,13 +74,6 @@ public class TestPhoenixDistributedQueries\n         throw new SkipException(\"Phoenix connector does not support column default values\");\n     }\n \n-    @Override\n-    public void testLargeIn(int valuesCount)\n-    {\n-        // TODO https://github.com/prestosql/presto/issues/1641\n-        throw new SkipException(\"test disabled\");\n-    }\n-\n     @Override\n     public void testRenameTable()\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4MDY1Mw==", "url": "https://github.com/trinodb/trino/pull/6303#discussion_r541080653", "bodyText": "would it be possible to calc expected values without h2? would that improve test runtime?\nlike:\nassertThat(query(\".....\"))\n  .matches( materialized result )\n\n(treat this optional)", "author": "findepi", "createdAt": "2020-12-11T16:44:33Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestQueries.java", "diffHunk": "@@ -652,10 +653,10 @@ public void testIn()\n         assertQuery(\"SELECT orderkey FROM orders WHERE totalprice IN (1, 2, 3)\");\n     }\n \n-    @Test\n-    public void testLargeIn()\n+    @Test(dataProvider = \"largeInValuesCount\")\n+    public void testLargeIn(int valuesCount)\n     {\n-        String longValues = range(0, 5000)\n+        String longValues = range(0, valuesCount)\n                 .mapToObj(Integer::toString)\n                 .collect(joining(\", \"));\n         assertQuery(\"SELECT orderkey FROM orders WHERE orderkey IN (\" + longValues + \")\");", "originalCommit": "128a7e877732cb70d61f5e876eb582888fd1d416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMjc4Ng==", "url": "https://github.com/trinodb/trino/pull/6303#discussion_r541102786", "bodyText": "I will skip this one. Materialized rows for \"not in\" are kinda painful.", "author": "losipiuk", "createdAt": "2020-12-11T17:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4MDY1Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "4c217e8e7cb117ac9c9b54b812db83d1f4e0f4d5", "url": "https://github.com/trinodb/trino/commit/4c217e8e7cb117ac9c9b54b812db83d1f4e0f4d5", "message": "Test multiple set sizes in testLargeIn\n\nIt is possible that connector has mechanisms which ensure that very\nlarge value sets (>5000) work fine, yet it would still fail for smaller,\nyet not tiny sets. Adding coverage for that.", "committedDate": "2020-12-11T18:03:36Z", "type": "commit"}, {"oid": "dccfdca03e98f6cf4a5a33f7e82cc7b7f301548c", "url": "https://github.com/trinodb/trino/commit/dccfdca03e98f6cf4a5a33f7e82cc7b7f301548c", "message": "Enable testLargeIn for MemSql", "committedDate": "2020-12-11T18:03:36Z", "type": "commit"}, {"oid": "f00d4058fdc8928b3f4177dda3f870f144ffde15", "url": "https://github.com/trinodb/trino/commit/f00d4058fdc8928b3f4177dda3f870f144ffde15", "message": "Enable testLargeIn for Phoenix", "committedDate": "2020-12-11T18:03:36Z", "type": "commit"}, {"oid": "f00d4058fdc8928b3f4177dda3f870f144ffde15", "url": "https://github.com/trinodb/trino/commit/f00d4058fdc8928b3f4177dda3f870f144ffde15", "message": "Enable testLargeIn for Phoenix", "committedDate": "2020-12-11T18:03:36Z", "type": "forcePushed"}]}