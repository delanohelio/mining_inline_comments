{"pr_number": 2846, "pr_title": "Ensure no overflow for Date type", "pr_createdAt": "2020-02-16T11:25:52Z", "pr_url": "https://github.com/trinodb/trino/pull/2846", "timeline": [{"oid": "c62194a3de7254993feb77374f29c796bdb69b0e", "url": "https://github.com/trinodb/trino/commit/c62194a3de7254993feb77374f29c796bdb69b0e", "message": "Ensure no overflow for Date type", "committedDate": "2020-02-16T11:22:53Z", "type": "commit"}, {"oid": "9dd7ff5669d31c63d8aab4108ff000cd290927d1", "url": "https://github.com/trinodb/trino/commit/9dd7ff5669d31c63d8aab4108ff000cd290927d1", "message": "Reuse converted value\n\nThis silences a warning in the code.", "committedDate": "2020-02-16T11:23:10Z", "type": "commit"}, {"oid": "d14827bba0f6f96f889483257bfcef4bd602a2a6", "url": "https://github.com/trinodb/trino/commit/d14827bba0f6f96f889483257bfcef4bd602a2a6", "message": "Remove ineffective replace invocation\n\n`Long.toBinaryString` does not produce leading (nor any other) spaces,\nso the `replace` call was a no-op.", "committedDate": "2020-02-16T11:24:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA==", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r379912480", "bodyText": "toIntExact(value) ?", "author": "wendigo", "createdAt": "2020-02-16T15:44:21Z", "path": "presto-spi/src/main/java/io/prestosql/spi/type/AbstractIntType.java", "diffHunk": "@@ -64,6 +67,13 @@ public final Slice getSlice(Block block, int position)\n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n+        if (value > Integer.MAX_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));\n+        }\n+        if (value < Integer.MIN_VALUE) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));\n+        }\n+\n         blockBuilder.writeInt((int) value).closeEntry();", "originalCommit": "d14827bba0f6f96f889483257bfcef4bd602a2a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMDk5Mg==", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r379920992", "bodyText": "The value is already verified explicitly above, so not needed. Also, intellij recognizes this and doesn't emit a warning here.", "author": "findepi", "createdAt": "2020-02-16T17:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMTI0MA==", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r380221240", "bodyText": "\ud83d\udc4d", "author": "wendigo", "createdAt": "2020-02-17T14:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMjE2Mw==", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r386302163", "bodyText": "I've seen that. Wasn't that on purpose (I guess not)?", "author": "sopel39", "createdAt": "2020-03-02T10:12:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTg1Mw==", "url": "https://github.com/trinodb/trino/pull/2846#discussion_r386875853", "bodyText": "discussed offline", "author": "findepi", "createdAt": "2020-03-03T08:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjQ4MA=="}], "type": "inlineReview", "revised_code": null}]}