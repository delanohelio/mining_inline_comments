{"pr_number": 6041, "pr_title": "Simplify BlockEncodingSerde by merging TypeSerde into BlockEncodingSerde", "pr_createdAt": "2020-11-21T20:53:01Z", "pr_url": "https://github.com/trinodb/trino/pull/6041", "timeline": [{"oid": "09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "url": "https://github.com/trinodb/trino/commit/09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "message": "Simplify BlockEncodingSerde\n\nMerge TypeSerde into BlockEncodingSerde", "committedDate": "2020-11-21T23:07:45Z", "type": "commit"}, {"oid": "09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "url": "https://github.com/trinodb/trino/commit/09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "message": "Simplify BlockEncodingSerde\n\nMerge TypeSerde into BlockEncodingSerde", "committedDate": "2020-11-21T23:07:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTY3OA==", "url": "https://github.com/trinodb/trino/pull/6041#discussion_r528615678", "bodyText": "Why do we have HiveBlockEncodingSerde? What is it used for?", "author": "sopel39", "createdAt": "2020-11-23T10:51:17Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBlockEncodingSerde.java", "diffHunk": "@@ -30,20 +31,35 @@\n import io.prestosql.spi.block.ShortArrayBlockEncoding;\n import io.prestosql.spi.block.SingleRowBlockEncoding;\n import io.prestosql.spi.block.VariableWidthBlockEncoding;\n+import io.prestosql.spi.type.Type;\n+import io.prestosql.spi.type.TypeId;\n \n import javax.inject.Inject;\n \n+import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n import static com.google.common.base.Preconditions.checkArgument;\n+import static io.prestosql.spi.type.BigintType.BIGINT;\n+import static io.prestosql.spi.type.BooleanType.BOOLEAN;\n+import static io.prestosql.spi.type.DateType.DATE;\n+import static io.prestosql.spi.type.DoubleType.DOUBLE;\n+import static io.prestosql.spi.type.HyperLogLogType.HYPER_LOG_LOG;\n+import static io.prestosql.spi.type.IntegerType.INTEGER;\n+import static io.prestosql.spi.type.TimestampType.TIMESTAMP_MILLIS;\n+import static io.prestosql.spi.type.TimestampWithTimeZoneType.TIMESTAMP_WITH_TIME_ZONE;\n+import static io.prestosql.spi.type.VarbinaryType.VARBINARY;\n+import static io.prestosql.spi.type.VarcharType.VARCHAR;\n import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.util.Objects.requireNonNull;", "originalCommit": "09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxOTIyMQ==", "url": "https://github.com/trinodb/trino/pull/6041#discussion_r528619221", "bodyText": "funny\n// This class is exactly the same as BlockEncodingManager\npublic final class HiveBlockEncodingSerde\n\nbut the referenced class does not exist", "author": "findepi", "createdAt": "2020-11-23T10:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjgzNA==", "url": "https://github.com/trinodb/trino/pull/6041#discussion_r532932834", "bodyText": "Seems to exist only for RecordingHiveMetastoreModule... I have no idea who added that, but it looks like @findepi was involved in the refactor that made it a top level class.", "author": "dain", "createdAt": "2020-11-30T22:03:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2MTY4Mg==", "url": "https://github.com/trinodb/trino/pull/6041#discussion_r532961682", "bodyText": "did you mean me?", "author": "findepi", "createdAt": "2020-11-30T23:06:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTY3OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk3NzUzMA==", "url": "https://github.com/trinodb/trino/pull/6041#discussion_r533977530", "bodyText": "Preexisting, but it seems weird to decode type from the data stream, since type should be statically known.\nDo we have plans to change this?", "author": "findepi", "createdAt": "2020-12-02T08:26:42Z", "path": "presto-spi/src/main/java/io/prestosql/spi/block/MapBlockEncoding.java", "diffHunk": "@@ -84,7 +75,7 @@ public void writeBlock(BlockEncodingSerde blockEncodingSerde, SliceOutput sliceO\n     @Override\n     public Block readBlock(BlockEncodingSerde blockEncodingSerde, SliceInput sliceInput)\n     {\n-        MapType mapType = (MapType) TypeSerde.readType(typeManager, sliceInput);\n+        MapType mapType = (MapType) blockEncodingSerde.readType(sliceInput);", "originalCommit": "09cbf057e462a294dd8cdd68b40a6d3f56b2b698", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}