{"pr_number": 5861, "pr_title": "Support SQL UPDATE in the Presto Engine and Hive ACID Tables", "pr_createdAt": "2020-11-06T15:20:24Z", "pr_url": "https://github.com/trinodb/trino/pull/5861", "timeline": [{"oid": "af17e514745d1480e22a8fee14ded1cd267a72b9", "url": "https://github.com/trinodb/trino/commit/af17e514745d1480e22a8fee14ded1cd267a72b9", "message": "Support SQL UPDATE in the Presto Engine\n\nThis commit adds parsing, analysis and query planning for SQL\nUPDATE statements.  A second commit on top of this commit adds Hive ACID\nsupport for UPDATE, and product tests that show UPDATE works\nas expected.\n\nThis commit includes a new developer documentation page for connector\ndevelopers, delete-and-update.rst, that explains in detail how DELETE\nand UPDATE work.  This document refers to the Hive ACID implementation of\nUPDATE, coming in the second commit.\n\nOne note for the reader: before this commit, method ConnectorMetadata method\ngetUpdateRowIdColumnHandle() was used to get the rowId column handle for DELETE operations.\nThis was renamed to getDeleteRowIdColumnHandle(), to make way for the new\ngetUpdateRowIdColumnHandle(), used to get the rowId column handle for UPDATE operations.", "committedDate": "2021-02-03T16:58:25Z", "type": "commit"}, {"oid": "7d8e8acbae62b0e1ce361c7184456e945c284c55", "url": "https://github.com/trinodb/trino/commit/7d8e8acbae62b0e1ce361c7184456e945c284c55", "message": "Implement SQL UPDATE for Hive ACID Tables\n\nThis commit implements SQL UPDATE for Hive ACID Tables, and adds\nproduct tests that demonstrate that it works as expected.  Those tests\ncheck:\no Expected failures cases - - e.g., non-transactional table; updating\n  partition or bucket columns.\no Some or all columns of the table updated.\no A spanning set of cases of overlap between dependency columns and\n  updated columns.\no A spanning set of cases of overlap between dependency columns and\n  non-updated columns.\no Permuted order of columns updated compared to table declaration order.\no Unpartitioned, partitioned and bucketed table updates.\no Some or all columns updated to either litereal or computed NULLs.", "committedDate": "2021-02-03T18:46:00Z", "type": "commit"}, {"oid": "7d8e8acbae62b0e1ce361c7184456e945c284c55", "url": "https://github.com/trinodb/trino/commit/7d8e8acbae62b0e1ce361c7184456e945c284c55", "message": "Implement SQL UPDATE for Hive ACID Tables\n\nThis commit implements SQL UPDATE for Hive ACID Tables, and adds\nproduct tests that demonstrate that it works as expected.  Those tests\ncheck:\no Expected failures cases - - e.g., non-transactional table; updating\n  partition or bucket columns.\no Some or all columns of the table updated.\no A spanning set of cases of overlap between dependency columns and\n  updated columns.\no A spanning set of cases of overlap between dependency columns and\n  non-updated columns.\no Permuted order of columns updated compared to table declaration order.\no Unpartitioned, partitioned and bucketed table updates.\no Some or all columns updated to either litereal or computed NULLs.", "committedDate": "2021-02-03T18:46:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTU3ODU4Ng==", "url": "https://github.com/trinodb/trino/pull/5861#discussion_r599578586", "bodyText": "Add some info how this list should be decomposed, perhaps as a javadoc", "author": "findepi", "createdAt": "2021-03-23T13:42:28Z", "path": "core/trino-spi/src/main/java/io/trino/spi/connector/UpdatablePageSource.java", "diffHunk": "@@ -14,15 +14,25 @@\n package io.trino.spi.connector;\n \n import io.airlift.slice.Slice;\n+import io.trino.spi.Page;\n import io.trino.spi.block.Block;\n \n import java.util.Collection;\n+import java.util.List;\n import java.util.concurrent.CompletableFuture;\n \n public interface UpdatablePageSource\n         extends ConnectorPageSource\n {\n-    void deleteRows(Block rowIds);\n+    default void deleteRows(Block rowIds)\n+    {\n+        throw new UnsupportedOperationException(\"This connector does not support row-level delete\");\n+    }\n+\n+    default void updateRows(Page page, List<Integer> columnValueAndRowIdChannels)", "originalCommit": "7d8e8acbae62b0e1ce361c7184456e945c284c55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}