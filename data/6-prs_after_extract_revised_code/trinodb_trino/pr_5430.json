{"pr_number": 5430, "pr_title": "Hide Delta Lake tables", "pr_createdAt": "2020-10-06T12:52:52Z", "pr_url": "https://github.com/trinodb/trino/pull/5430", "timeline": [{"oid": "7f4e4baee4fc7475112264365b0c066bd975fb84", "url": "https://github.com/trinodb/trino/commit/7f4e4baee4fc7475112264365b0c066bd975fb84", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all.", "committedDate": "2020-10-06T15:33:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1MzAzNQ==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500453035", "bodyText": "This looks like the wrong binding", "author": "electrum", "createdAt": "2020-10-06T16:56:27Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java", "diffHunk": "@@ -28,6 +29,7 @@\n     @Override\n     public void configure(Binder binder)\n     {\n+        configBinder(binder).bindConfig(HiveConfig.class);", "originalCommit": "c4eaa5907ef008061e5b211a65483258ceefa41c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java\nindex 7a4b83f177..3dbbb385e0 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileMetastoreModule.java\n\n@@ -29,7 +28,6 @@ public class FileMetastoreModule\n     @Override\n     public void configure(Binder binder)\n     {\n-        configBinder(binder).bindConfig(HiveConfig.class);\n         configBinder(binder).bindConfig(FileHiveMetastoreConfig.class);\n         binder.bind(HiveMetastore.class).annotatedWith(ForCachingHiveMetastore.class).to(FileHiveMetastore.class).in(Scopes.SINGLETON);\n         binder.install(new CachingHiveMetastoreModule());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NDc5Ng==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500454796", "bodyText": "MetastoreConfig is the wrong class to use. Today, it configures which metastore type to use. This information would not be useful to metastore implementations. The new config you want should be in a different config class. (perhaps MetastoreConfig should be renamed to MetastoreTypeConfig so you can use the MetastoreConfig name)", "author": "electrum", "createdAt": "2020-10-06T16:59:13Z", "path": "presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java", "diffHunk": "@@ -16,6 +16,7 @@\n import alluxio.client.table.TableMasterClient;\n import alluxio.conf.PropertyKey;\n import io.prestosql.plugin.hive.authentication.NoHdfsAuthentication;\n+import io.prestosql.plugin.hive.metastore.MetastoreConfig;", "originalCommit": "c4eaa5907ef008061e5b211a65483258ceefa41c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java b/presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java\nindex 82d82879a8..020777a633 100644\n--- a/presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java\n+++ b/presto-hive-hadoop2/src/test/java/io/prestosql/plugin/hive/TestHiveAlluxioMetastore.java\n\n@@ -16,7 +16,6 @@ package io.prestosql.plugin.hive;\n import alluxio.client.table.TableMasterClient;\n import alluxio.conf.PropertyKey;\n import io.prestosql.plugin.hive.authentication.NoHdfsAuthentication;\n-import io.prestosql.plugin.hive.metastore.MetastoreConfig;\n import io.prestosql.plugin.hive.metastore.alluxio.AlluxioHiveMetastore;\n import io.prestosql.plugin.hive.metastore.alluxio.AlluxioHiveMetastoreConfig;\n import io.prestosql.plugin.hive.metastore.alluxio.AlluxioMetastoreModule;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2MjY3Ng==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500462676", "bodyText": "This variable doesn't seem necessary", "author": "electrum", "createdAt": "2020-10-06T17:11:57Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -442,6 +440,21 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n                 .collect(toImmutableList());\n     }\n \n+    private synchronized List<String> listAllTables(String databaseName)\n+    {\n+        requireNonNull(databaseName, \"databaseName is null\");\n+\n+        Optional<Database> database = getDatabase(databaseName);\n+        if (database.isEmpty()) {\n+            return ImmutableList.of();\n+        }\n+\n+        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);", "originalCommit": "7f4e4baee4fc7475112264365b0c066bd975fb84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Njc0Ng==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500856746", "bodyText": "i split out extract method as a separate commti", "author": "findepi", "createdAt": "2020-10-07T09:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2MjY3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\nindex 169cc699c2..78fd63fe1f 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\n\n@@ -440,7 +429,8 @@ public class FileHiveMetastore\n                 .collect(toImmutableList());\n     }\n \n-    private synchronized List<String> listAllTables(String databaseName)\n+    @GuardedBy(\"this\")\n+    private List<String> listAllTables(String databaseName)\n     {\n         requireNonNull(databaseName, \"databaseName is null\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NDcyOQ==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500464729", "bodyText": "Do we even support File Hive metastore for Delta Lake?", "author": "electrum", "createdAt": "2020-10-06T17:15:18Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java", "diffHunk": "@@ -411,18 +416,11 @@ public synchronized void updatePartitionStatistics(HiveIdentity identity, Table\n     @Override\n     public synchronized List<String> getAllTables(String databaseName)\n     {\n-        requireNonNull(databaseName, \"databaseName is null\");\n-\n-        Optional<Database> database = getDatabase(databaseName);\n-        if (database.isEmpty()) {\n-            return ImmutableList.of();\n-        }\n-\n-        Path databaseMetadataDirectory = getDatabaseMetadataDirectory(databaseName);\n-        List<String> tables = getChildSchemaDirectories(databaseMetadataDirectory).stream()\n-                .map(Path::getName)\n+        return listAllTables(databaseName).stream()", "originalCommit": "7f4e4baee4fc7475112264365b0c066bd975fb84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1ODMwNQ==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500858305", "bodyText": "Not sure what this question is about?", "author": "findepi", "createdAt": "2020-10-07T09:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NDcyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\nindex 169cc699c2..78fd63fe1f 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/file/FileHiveMetastore.java\n\n@@ -416,11 +409,7 @@ public class FileHiveMetastore\n     @Override\n     public synchronized List<String> getAllTables(String databaseName)\n     {\n-        return listAllTables(databaseName).stream()\n-                .filter(hideDeltaLakeTables\n-                        ? Predicate.not(ImmutableSet.copyOf(getTablesWithParameter(databaseName, SPARK_TABLE_PROVIDER_KEY, DELTA_LAKE_PROVIDER))::contains)\n-                        : tableName -> true)\n-                .collect(toImmutableList());\n+        return listAllTables(databaseName);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NTc5Nw==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500465797", "bodyText": "While we're changing this\n.map(Table::getName)\n.forEach(tableNames::add);", "author": "electrum", "createdAt": "2020-10-06T17:16:59Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java", "diffHunk": "@@ -406,7 +410,11 @@ public void updatePartitionStatistics(HiveIdentity identity, Table table, String\n                             .withCatalogId(catalogId)\n                             .withDatabaseName(databaseName)\n                             .withNextToken(nextToken));\n-                    result.getTableList().forEach(table -> tableNames.add(table.getName()));\n+                    result.getTableList().stream()\n+                            .filter(hideDeltaLakeTables\n+                                    ? table -> !table.getParameters().getOrDefault(SPARK_TABLE_PROVIDER_KEY, \"\").equalsIgnoreCase(DELTA_LAKE_PROVIDER)\n+                                    : table -> true)\n+                            .forEach(table -> tableNames.add(table.getName()));", "originalCommit": "7f4e4baee4fc7475112264365b0c066bd975fb84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java\nindex dc8c002b16..f6ffde9c50 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java\n\n@@ -410,11 +403,7 @@ public class GlueHiveMetastore\n                             .withCatalogId(catalogId)\n                             .withDatabaseName(databaseName)\n                             .withNextToken(nextToken));\n-                    result.getTableList().stream()\n-                            .filter(hideDeltaLakeTables\n-                                    ? table -> !table.getParameters().getOrDefault(SPARK_TABLE_PROVIDER_KEY, \"\").equalsIgnoreCase(DELTA_LAKE_PROVIDER)\n-                                    : table -> true)\n-                            .forEach(table -> tableNames.add(table.getName()));\n+                    result.getTableList().forEach(table -> tableNames.add(table.getName()));\n                     nextToken = result.getNextToken();\n                 }\n                 while (nextToken != null);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NzM5Mg==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500467392", "bodyText": "Delta Lake", "author": "electrum", "createdAt": "2020-10-06T17:19:36Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -227,6 +227,7 @@ public ThriftHiveMetastore(\n         requireNonNull(hiveConfig, \"hiveConfig is null\");\n         this.translateHiveViews = hiveConfig.isTranslateHiveViews();\n         requireNonNull(metastoreConfig, \"metastoreConfig is null\");\n+        checkArgument(!metastoreConfig.isHideDeltaLakeTables(), \"Hiding delta tables is not supported\"); // TODO", "originalCommit": "7f4e4baee4fc7475112264365b0c066bd975fb84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java\nindex bd2289ab1b..087df10c93 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java\n\n@@ -224,10 +210,7 @@ public class ThriftHiveMetastore\n         this.maxRetries = thriftConfig.getMaxRetries();\n         this.impersonationEnabled = thriftConfig.isImpersonationEnabled();\n         this.deleteFilesOnDrop = thriftConfig.isDeleteFilesOnDrop();\n-        requireNonNull(hiveConfig, \"hiveConfig is null\");\n         this.translateHiveViews = hiveConfig.isTranslateHiveViews();\n-        requireNonNull(metastoreConfig, \"metastoreConfig is null\");\n-        checkArgument(!metastoreConfig.isHideDeltaLakeTables(), \"Hiding delta tables is not supported\"); // TODO\n         this.maxWaitForLock = thriftConfig.getMaxWaitForTransactionLock();\n         this.authenticationEnabled = authenticationEnabled;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2ODE4MA==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500468180", "bodyText": "Do we want to add this here? It means users could set it directly", "author": "electrum", "createdAt": "2020-10-06T17:20:55Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java", "diffHunk": "@@ -153,6 +155,7 @@ public HiveTableProperties(\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR, \"TEXTFILE field separator character\", null, false),\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR_ESCAPE, \"TEXTFILE field separator escape character\", null, false),\n                 stringProperty(NULL_FORMAT_PROPERTY, \"Serialization format for NULL value\", null, false),\n+                stringProperty(SPARK_TABLE_PROVIDER, \"Internal Hive connector property\", null, true),", "originalCommit": "7f4e4baee4fc7475112264365b0c066bd975fb84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwNDI3MQ==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r500504271", "bodyText": "I am aware. It's hidden. I see no other way to test this. Please advise.", "author": "findepi", "createdAt": "2020-10-06T18:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2ODE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxNjQ1OQ==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501316459", "bodyText": "I thought I commented on the test code, but looks like that got lost. The test can use getMetastoreClient() to call the metastore directly to create the table, rather than going through ConnectorMetadata. This means we don't need to add the table property.", "author": "electrum", "createdAt": "2020-10-07T21:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2ODE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxNTg2Ng==", "url": "https://github.com/trinodb/trino/pull/5430#discussion_r501615866", "bodyText": "Done", "author": "findepi", "createdAt": "2020-10-08T10:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2ODE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "4c6b63c31573462a839fcf53fa627d1bea06c815", "chunk": "diff --git a/presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java b/presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java\nindex fdfb37afe4..a7176a1d98 100644\n--- a/presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java\n+++ b/presto-hive/src/main/java/io/prestosql/plugin/hive/HiveTableProperties.java\n\n@@ -155,7 +153,6 @@ public class HiveTableProperties\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR, \"TEXTFILE field separator character\", null, false),\n                 stringProperty(TEXTFILE_FIELD_SEPARATOR_ESCAPE, \"TEXTFILE field separator escape character\", null, false),\n                 stringProperty(NULL_FORMAT_PROPERTY, \"Serialization format for NULL value\", null, false),\n-                stringProperty(SPARK_TABLE_PROVIDER, \"Internal Hive connector property\", null, true),\n                 stringProperty(CSV_SEPARATOR, \"CSV separator character\", null, false),\n                 stringProperty(CSV_QUOTE, \"CSV quote character\", null, false),\n                 stringProperty(CSV_ESCAPE, \"CSV escape character\", null, false),\n"}}, {"oid": "4c6b63c31573462a839fcf53fa627d1bea06c815", "url": "https://github.com/trinodb/trino/commit/4c6b63c31573462a839fcf53fa627d1bea06c815", "message": "Extract method", "committedDate": "2020-10-08T17:05:23Z", "type": "commit"}, {"oid": "1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "url": "https://github.com/trinodb/trino/commit/1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all.", "committedDate": "2020-10-08T21:16:18Z", "type": "commit"}, {"oid": "1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "url": "https://github.com/trinodb/trino/commit/1f4681b46ebeb0867c0523ab3ef6910d459c0e82", "message": "Hide Delta Lake tables\n\nHive connector cannot read from Delta Lake tables and some users prefer\nnot to see such tables at all.", "committedDate": "2020-10-08T21:16:18Z", "type": "forcePushed"}]}