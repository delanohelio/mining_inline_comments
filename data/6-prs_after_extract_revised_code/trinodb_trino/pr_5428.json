{"pr_number": 5428, "pr_title": "Validate that same dynamic filter domain is set", "pr_createdAt": "2020-10-06T12:15:10Z", "pr_url": "https://github.com/trinodb/trino/pull/5428", "timeline": [{"oid": "53c81eb2ace6ebcaf1bad1820161938fe5c3dc97", "url": "https://github.com/trinodb/trino/commit/53c81eb2ace6ebcaf1bad1820161938fe5c3dc97", "message": "Validate that same dynamic filter domain is set\n\nDynamicFilterFetcher can make two subsequent requests\nwith same local DF version (triggered by TaskStatus\nupdates). In such case same DF might be received twice.", "committedDate": "2020-10-06T12:09:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzMTYyNg==", "url": "https://github.com/trinodb/trino/pull/5428#discussion_r500231626", "bodyText": "Change looks ok to me.\nOne doubt, why don't we just do taskDomains.putIfAbsent and avoid this status check ?", "author": "raunaqmorarka", "createdAt": "2020-10-06T12:23:40Z", "path": "presto-main/src/main/java/io/prestosql/server/DynamicFilterService.java", "diffHunk": "@@ -659,7 +659,8 @@ private void addTaskDynamicFilters(TaskId taskId, Map<DynamicFilterId, Domain> n\n                 // Narrowing down of task dynamic filter is not supported.\n                 // Currently, task dynamic filters are derived from join and semi-join,\n                 // which produce just a single version of dynamic filter.\n-                checkState(taskDomains.put(taskId, domain) == null, \"Task dynamic filter is set twice\");\n+                Domain previousDomain = taskDomains.put(taskId, domain);\n+                checkState(previousDomain == null || domain.equals(previousDomain), \"Different task domains were set\");", "originalCommit": "53c81eb2ace6ebcaf1bad1820161938fe5c3dc97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzNDE3Nw==", "url": "https://github.com/trinodb/trino/pull/5428#discussion_r500234177", "bodyText": "One doubt, why don't we just do taskDomains.putIfAbsent and avoid this status check ?\n\nThat would mean invariant that there is one version of DF is broken somewhere. We want to enforce that invariant.", "author": "sopel39", "createdAt": "2020-10-06T12:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzMTYyNg=="}], "type": "inlineReview", "revised_code": null}]}