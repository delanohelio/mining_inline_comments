{"pr_number": 5407, "pr_title": "Cleanup use of executors", "pr_createdAt": "2020-10-04T18:13:14Z", "pr_url": "https://github.com/trinodb/trino/pull/5407", "timeline": [{"oid": "e7da195a2730023dffe14fd7bd4fce5d6f3ab294", "url": "https://github.com/trinodb/trino/commit/e7da195a2730023dffe14fd7bd4fce5d6f3ab294", "message": "Give executors identifiable names", "committedDate": "2020-10-03T21:17:26Z", "type": "commit"}, {"oid": "b7318bb54237314caf67431f4419c4d9ee108683", "url": "https://github.com/trinodb/trino/commit/b7318bb54237314caf67431f4419c4d9ee108683", "message": "Shutdown executor after test", "committedDate": "2020-10-04T18:11:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Nzg4Nw==", "url": "https://github.com/trinodb/trino/pull/5407#discussion_r499277887", "bodyText": "why exception is swallowed?", "author": "kokosing", "createdAt": "2020-10-04T19:02:30Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/metastore/cache/TestReentrantBoundedExecutor.java", "diffHunk": "@@ -31,25 +32,31 @@ public void testReentrantBoundedExecutor()\n     {\n         AtomicInteger callCounter = new AtomicInteger();\n         SettableFuture<Object> future = SettableFuture.create();\n-        Executor reentrantExecutor = new ReentrantBoundedExecutor(newCachedThreadPool(), 1);\n-        reentrantExecutor.execute(() -> {\n-            callCounter.incrementAndGet();\n+        ExecutorService executor = newCachedThreadPool();\n+        try {\n+            Executor reentrantExecutor = new ReentrantBoundedExecutor(executor, 1);\n             reentrantExecutor.execute(() -> {\n                 callCounter.incrementAndGet();\n-                future.set(null);\n+                reentrantExecutor.execute(() -> {\n+                    callCounter.incrementAndGet();\n+                    future.set(null);\n+                });\n+                try {\n+                    future.get();\n+                }\n+                catch (Exception ignored) {", "originalCommit": "b7318bb54237314caf67431f4419c4d9ee108683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MjMyOQ==", "url": "https://github.com/trinodb/trino/pull/5407#discussion_r499282329", "bodyText": "pre-existing, i have only added try-finally here.\nwould need to ask test's author, @sopel39", "author": "findepi", "createdAt": "2020-10-04T19:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Nzg4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNzU1Nw==", "url": "https://github.com/trinodb/trino/pull/5407#discussion_r499427557", "bodyText": "It's settable future used only in test. It cannot throw", "author": "sopel39", "createdAt": "2020-10-05T08:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Nzg4Nw=="}], "type": "inlineReview", "revised_code": null}]}