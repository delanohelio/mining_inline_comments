{"pr_number": 6372, "pr_title": "Allow custom bind expression in WriteFunction", "pr_createdAt": "2020-12-17T08:39:35Z", "pr_url": "https://github.com/trinodb/trino/pull/6372", "timeline": [{"oid": "15e1de8f5992e123f900152ecd0fe73161e33ae0", "url": "https://github.com/trinodb/trino/commit/15e1de8f5992e123f900152ecd0fe73161e33ae0", "message": "Rename class\n\nRename class in preparation to change of the internal structure.\nThe new name describes the purpose, but not how the information is\nactually captured.", "committedDate": "2020-12-17T08:38:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyNzgyNg==", "url": "https://github.com/trinodb/trino/pull/6372#discussion_r544927826", "bodyText": "I love getting rid of ands from names", "author": "skrzypo987", "createdAt": "2020-12-17T09:13:25Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/QueryBuilder.java", "diffHunk": "@@ -54,13 +54,13 @@\n \n     private final JdbcClient client;\n \n-    private static class TypeAndValue\n+    private static class BoundValue", "originalCommit": "15e1de8f5992e123f900152ecd0fe73161e33ae0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d84c8025caf8e983907f0e1395fc32a536e709c", "chunk": "diff --git a/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/QueryBuilder.java b/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/QueryBuilder.java\nindex b8c131447a..9a3713994a 100644\n--- a/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/QueryBuilder.java\n+++ b/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/QueryBuilder.java\n\n@@ -56,25 +55,18 @@ public class QueryBuilder\n \n     private static class BoundValue\n     {\n-        private final Type type;\n-        private final JdbcTypeHandle typeHandle;\n+        private final WriteFunction writeFunction;\n         private final Object value;\n \n-        public BoundValue(Type type, JdbcTypeHandle typeHandle, Object value)\n+        public BoundValue(WriteFunction writeFunction, Object value)\n         {\n-            this.type = requireNonNull(type, \"type is null\");\n-            this.typeHandle = requireNonNull(typeHandle, \"typeHandle is null\");\n+            this.writeFunction = requireNonNull(writeFunction, \"writeFunction is null\");\n             this.value = requireNonNull(value, \"value is null\");\n         }\n \n-        public Type getType()\n+        public WriteFunction getWriteFunction()\n         {\n-            return type;\n-        }\n-\n-        public JdbcTypeHandle getTypeHandle()\n-        {\n-            return typeHandle;\n+            return writeFunction;\n         }\n \n         public Object getValue()\n"}}, {"oid": "8d84c8025caf8e983907f0e1395fc32a536e709c", "url": "https://github.com/trinodb/trino/commit/8d84c8025caf8e983907f0e1395fc32a536e709c", "message": "Allow custom bind expression in WriteFunction", "committedDate": "2020-12-17T09:24:46Z", "type": "commit"}, {"oid": "899273b0c8b1af9b64a0c8fe9765c629f36561fc", "url": "https://github.com/trinodb/trino/commit/899273b0c8b1af9b64a0c8fe9765c629f36561fc", "message": "Migrate from PGobject to bind expression in PostgreSQL connector", "committedDate": "2020-12-17T09:24:46Z", "type": "commit"}, {"oid": "899273b0c8b1af9b64a0c8fe9765c629f36561fc", "url": "https://github.com/trinodb/trino/commit/899273b0c8b1af9b64a0c8fe9765c629f36561fc", "message": "Migrate from PGobject to bind expression in PostgreSQL connector", "committedDate": "2020-12-17T09:24:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyODI4Mg==", "url": "https://github.com/trinodb/trino/pull/6372#discussion_r546228282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    checkArgument(handle.getColumnNames().size() == columnWriters.size(), \"handle and columnWriters mismatch: %s, %s\", handle, columnWriters);\n          \n          \n            \n                    checkArgument(handle.getColumnNames().size() == columnWriters.size(), \"columnNames and columnWriters mismatch: %s, %s\", handle.getColumnNames(), columnWriters);", "author": "wendigo", "createdAt": "2020-12-19T11:36:44Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -709,15 +708,18 @@ public void rollbackCreateTable(ConnectorSession session, JdbcOutputTableHandle\n     }\n \n     @Override\n-    public String buildInsertSql(JdbcOutputTableHandle handle)\n+    public String buildInsertSql(JdbcOutputTableHandle handle, List<WriteFunction> columnWriters)\n     {\n+        checkArgument(handle.getColumnNames().size() == columnWriters.size(), \"handle and columnWriters mismatch: %s, %s\", handle, columnWriters);", "originalCommit": "8d84c8025caf8e983907f0e1395fc32a536e709c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4Mjg4MQ==", "url": "https://github.com/trinodb/trino/pull/6372#discussion_r546282881", "bodyText": "i intentionally log whole handle, hoping to capture more of the useful information", "author": "findepi", "createdAt": "2020-12-19T21:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyODI4Mg=="}], "type": "inlineReview", "revised_code": null}]}