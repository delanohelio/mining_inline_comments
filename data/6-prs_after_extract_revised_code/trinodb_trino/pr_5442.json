{"pr_number": 5442, "pr_title": "Cleanups in testFilesForAbortedTransactionsIgnored", "pr_createdAt": "2020-10-07T09:58:46Z", "pr_url": "https://github.com/trinodb/trino/pull/5442", "timeline": [{"oid": "9aa991a66827b17e0d9956994e1a61ed0cba58dd", "url": "https://github.com/trinodb/trino/commit/9aa991a66827b17e0d9956994e1a61ed0cba58dd", "message": "Cleanups in testFilesForAbortedTransactionsIgnored", "committedDate": "2020-10-07T09:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDEwMA==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890100", "bodyText": "can getTablePath be smart enough for that?", "author": "findepi", "createdAt": "2020-10-07T10:02:09Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -399,6 +394,8 @@ public void testFilesForAbortedTransactionsIgnored()\n             QueryResult onePartitionQueryResult = query(selectFromOnePartitionsSql);\n             assertThat(onePartitionQueryResult).containsExactly(row(1), row(2));\n \n+            String tableLocation = getTablePath(tableName, 1); // pass 1 to trim /delta_... suffix", "originalCommit": "9aa991a66827b17e0d9956994e1a61ed0cba58dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwMzg5Mg==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500903892", "bodyText": "AC as a2e1871", "author": "losipiuk", "createdAt": "2020-10-07T10:25:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "a2e18711bc4b48293e1a04e8e7bcce9ce66af894", "chunk": "diff --git a/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java b/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java\nindex 0665c93086..b4f0a5048e 100644\n--- a/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java\n+++ b/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java\n\n@@ -394,7 +394,7 @@ public class TestHiveTransactionalTable\n             QueryResult onePartitionQueryResult = query(selectFromOnePartitionsSql);\n             assertThat(onePartitionQueryResult).containsExactly(row(1), row(2));\n \n-            String tableLocation = getTablePath(tableName, 1); // pass 1 to trim /delta_... suffix\n+            String tableLocation = getTablePath(tableName);\n \n             // Insert data to create a valid delta, which creates `delta-B`\n             onHive().executeQuery(\"INSERT INTO TABLE \" + tableName + \" SELECT 3\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890452", "bodyText": "why gone?", "author": "findepi", "createdAt": "2020-10-07T10:02:41Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -407,26 +404,23 @@ public void testFilesForAbortedTransactionsIgnored()\n             client.allocateTableWriteIds(\"default\", tableName, Collections.singletonList(transaction)).get(0).getWriteId();\n             client.abortTransaction(transaction);\n \n-            String deltaA = warehouseDirectory + \"/\" + tableName + \"/delta_0000001_0000001_0000/bucket_00000\";\n-            String deltaB = warehouseDirectory + \"/\" + tableName + \"/delta_0000002_0000002_0000/bucket_00000\";\n-            String deltaC = warehouseDirectory + \"/\" + tableName + \"/delta_0000003_0000003_0000/bucket_00000\";\n+            String deltaA = tableLocation + \"/delta_0000001_0000001_0000\";\n+            String deltaB = tableLocation + \"/delta_0000002_0000002_0000\";\n+            String deltaC = tableLocation + \"/delta_0000003_0000003_0000\";\n \n             // Delete original `delta-B`, `delta-C`\n-            hdfsClient.delete(deltaB);\n-            hdfsClient.delete(deltaC);\n-\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            hdfsClient.loadFile(deltaA, byteArrayOutputStream);", "originalCommit": "9aa991a66827b17e0d9956994e1a61ed0cba58dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NDI0OA==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500894248", "bodyText": "Files are read as part of hdfsCopyAll", "author": "losipiuk", "createdAt": "2020-10-07T10:09:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NjYyOQ==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500896629", "bodyText": "here we were creating empty delta_0000001_0000001_0000/bucket_00000 file. who does that now?", "author": "findepi", "createdAt": "2020-10-07T10:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwNDYwOQ==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500904609", "bodyText": "No we were not. delta_0000001_0000001_0000 were created on initial insert. And so it remains.\nloadFile is 'read file from hdfs'. Yeah - naming could be better.", "author": "losipiuk", "createdAt": "2020-10-07T10:27:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDQ1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500890970", "bodyText": "target.parent ?", "author": "findepi", "createdAt": "2020-10-07T10:03:36Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -438,6 +432,28 @@ public void testFilesForAbortedTransactionsIgnored()\n         }\n     }\n \n+    private void hdfsDeleteAll(String directory)\n+    {\n+        if (!hdfsClient.exist(directory)) {\n+            return;\n+        }\n+        for (String file : hdfsClient.listDirectory(directory)) {\n+            hdfsClient.delete(directory + \"/\" + file);\n+        }\n+    }\n+\n+    private void hdfsCopyAll(String source, String target)\n+    {\n+        if (!hdfsClient.exist(target)) {\n+            hdfsClient.createDirectory(target);", "originalCommit": "9aa991a66827b17e0d9956994e1a61ed0cba58dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5NTYwMg==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500895602", "bodyText": "Not needed for current usecases. As this is local helper function I do not want to bloat it too much. If we decide to make a general helper util from it it would need to be smareter.\nBut then probably it should just be extension of HdfsClient interface.", "author": "losipiuk", "createdAt": "2020-10-07T10:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5ODM4NA==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500898384", "bodyText": "i misread the code", "author": "findepi", "createdAt": "2020-10-07T10:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MTc2Mg==", "url": "https://github.com/trinodb/trino/pull/5442#discussion_r500891762", "bodyText": "folow up We should try to remove warehouse_directory_path property\ncc @wendigo", "author": "findepi", "createdAt": "2020-10-07T10:05:02Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -71,10 +70,6 @@\n     @Inject\n     private TestHiveMetastoreClientFactory testHiveMetastoreClientFactory;\n \n-    @Inject\n-    @Named(\"databases.hive.warehouse_directory_path\")\n-    private String warehouseDirectory;", "originalCommit": "9aa991a66827b17e0d9956994e1a61ed0cba58dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "a2e18711bc4b48293e1a04e8e7bcce9ce66af894", "url": "https://github.com/trinodb/trino/commit/a2e18711bc4b48293e1a04e8e7bcce9ce66af894", "message": "Detect ACID tables in getTablePath", "committedDate": "2020-10-07T10:21:30Z", "type": "commit"}]}