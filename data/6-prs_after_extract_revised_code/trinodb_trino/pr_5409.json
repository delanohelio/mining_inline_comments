{"pr_number": 5409, "pr_title": "Allow to extend how caching JDBC client is created", "pr_createdAt": "2020-10-04T18:18:59Z", "pr_url": "https://github.com/trinodb/trino/pull/5409", "timeline": [{"oid": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "url": "https://github.com/trinodb/trino/commit/4eb03f634c4bd72a20fa3b6c5686fc3395652697", "message": "Allow to extend how caching JDBC client is created", "committedDate": "2020-10-04T18:17:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499479466", "bodyText": "Where does 1d come from?\nsounds like \"almost infinity\"\nuse io.prestosql.plugin.jdbc.BaseJdbcConfig#getMetadataCacheTtl here", "author": "findepi", "createdAt": "2020-10-05T09:55:36Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject\n+    public DefaultCachingJdbcClientFactory(JdbcClient jdbcClient)\n+    {\n+        this.jdbcClient = requireNonNull(jdbcClient, \"jdbcClient is null\");\n+    }\n+\n+    @Override\n+    public JdbcClient create()\n+    {\n+        return new CachingJdbcClient(jdbcClient, new Duration(1, TimeUnit.DAYS), true);", "originalCommit": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4OTAzMA==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499489030", "bodyText": "sounds like \"almost infinity\"\n\nThat makes sense within single transaction. The value was moved from previous code version (see JdbcMetadataFactory)", "author": "sopel39", "createdAt": "2020-10-05T10:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NDYxNg==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499494616", "bodyText": "1d is neither \"reasonably short for something\" not \"infinite\"\nI am OK not changing this, but maybe \"TODO use infinity for in-transaction cache\"", "author": "findepi", "createdAt": "2020-10-05T10:22:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5Njk2NQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499496965", "bodyText": "I am OK not changing this, but maybe \"TODO use infinity for in-transaction cache\"\n\nI don't think planner will ask for stats after one day ;)", "author": "sopel39", "createdAt": "2020-10-05T10:26:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODk3MQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499498971", "bodyText": "this is about any caching, not related to stats\nif i have a very long running transaction, it does not make sense to flush state after 24h.\nif we want to limit trx length, we should do this explciitly (& somewhere else)", "author": "findepi", "createdAt": "2020-10-05T10:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTQ2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTk1MQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499479951", "bodyText": "Does it mean CachingJdbcClient is no longer @Inject-ed and https://github.com/prestosql/presto/blob/142c8e20fb14535064667f8a7978525aa6e1f6f5/presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClient.java#L62-L66 ctor should be removed?\nor (likely), this is only for per-trnasaction cache?\nthen what about other cache?", "author": "findepi", "createdAt": "2020-10-05T09:56:27Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory\n+        implements CachingJdbcClientFactory\n+{\n+    private final JdbcClient jdbcClient;\n+\n+    @Inject", "originalCommit": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4OTU5OQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499489599", "bodyText": "CachingJdbcClient is still created by Guava. There are two caches:\n\nper-transaction cache\nglobal cache (created by Guava) that is cross transactions.\n\nThis is similar mechanism to what we have in Hive", "author": "sopel39", "createdAt": "2020-10-05T10:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTk1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyODg5MA==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499428890", "bodyText": "Why do you stress it is caching related. I guess it should be generic and should be named JdbcClientFactory.", "author": "kokosing", "createdAt": "2020-10-05T08:33:02Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory", "originalCommit": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NzU4MQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499497581", "bodyText": "Guice wants to know what you bind.", "author": "findepi", "createdAt": "2020-10-05T10:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyODg5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyOTM1Mg==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499429352", "bodyText": "TransactionalCachingJdbcClientFactory?", "author": "kokosing", "createdAt": "2020-10-05T08:33:55Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/DefaultCachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+import io.airlift.units.Duration;\n+\n+import javax.inject.Inject;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class DefaultCachingJdbcClientFactory", "originalCommit": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODQ0Mg==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499498442", "bodyText": "\"Default....\" indicates this is the default impl\n\"Transactional...\" indicates the role -- it's suitable within interface name (which is used for managing Guice binds)", "author": "findepi", "createdAt": "2020-10-05T10:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyOTM1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499482511", "bodyText": "Should JdbcClient become closeable?", "author": "kokosing", "createdAt": "2020-10-05T10:00:39Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClientFactory.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.jdbc;\n+\n+public interface CachingJdbcClientFactory\n+{\n+    JdbcClient create();", "originalCommit": "4eb03f634c4bd72a20fa3b6c5686fc3395652697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NzYzMw==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499497633", "bodyText": "is in-transaction state explicitly closed?", "author": "findepi", "createdAt": "2020-10-05T10:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0ODQ1MQ==", "url": "https://github.com/trinodb/trino/pull/5409#discussion_r499548451", "bodyText": "Should JdbcClient become closeable?\n\nYou shouldn't close delegate JdbcClient, which is shared", "author": "sopel39", "createdAt": "2020-10-05T12:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MjUxMQ=="}], "type": "inlineReview", "revised_code": null}]}