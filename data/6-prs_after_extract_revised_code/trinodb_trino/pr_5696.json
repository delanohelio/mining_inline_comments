{"pr_number": 5696, "pr_title": "Fix handling of negative offsets for time w/ tz", "pr_createdAt": "2020-10-26T18:07:08Z", "pr_url": "https://github.com/trinodb/trino/pull/5696", "timeline": [{"oid": "00bcbe2b67c8116cf52fe0f84ed5ca3e8f4fcbc7", "url": "https://github.com/trinodb/trino/commit/00bcbe2b67c8116cf52fe0f84ed5ca3e8f4fcbc7", "message": "Organize methods", "committedDate": "2020-10-26T21:59:41Z", "type": "commit"}, {"oid": "0a508f83b22e9e2cff1c825fef9a04a76743bb06", "url": "https://github.com/trinodb/trino/commit/0a508f83b22e9e2cff1c825fef9a04a76743bb06", "message": "Add tests for negative offsets for timestamp w/ tz", "committedDate": "2020-10-26T21:59:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3Mjg4NQ==", "url": "https://github.com/trinodb/trino/pull/5696#discussion_r512472885", "bodyText": "we should test timezone_hour too, as the function is not hidden", "author": "findepi", "createdAt": "2020-10-27T07:45:14Z", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java", "diffHunk": "@@ -269,6 +269,21 @@ public void testTimeZoneHour()\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n+\n+        // negative offsets\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1234 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1234567 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1234567891 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 -08:35')\")).matches(\"BIGINT '-8'\");\n+        assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 -08:35')\")).matches(\"BIGINT '-8'\");", "originalCommit": "0a508f83b22e9e2cff1c825fef9a04a76743bb06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "chunk": "diff --git a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\nindex 71c7222ca3..d489dc654f 100644\n--- a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n+++ b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n\n@@ -270,7 +270,21 @@ public class TestExtract\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n \n-        // negative offsets\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234567 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345678 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456789 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n+\n+        // negative offset\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56 -08:35')\")).matches(\"BIGINT '-8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1 -08:35')\")).matches(\"BIGINT '-8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12 -08:35')\")).matches(\"BIGINT '-8'\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MzMyOQ==", "url": "https://github.com/trinodb/trino/pull/5696#discussion_r512473329", "bodyText": "offsets -> offset", "author": "findepi", "createdAt": "2020-10-27T07:46:11Z", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java", "diffHunk": "@@ -269,6 +269,21 @@ public void testTimeZoneHour()\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n+\n+        // negative offsets", "originalCommit": "0a508f83b22e9e2cff1c825fef9a04a76743bb06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "chunk": "diff --git a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\nindex 71c7222ca3..d489dc654f 100644\n--- a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n+++ b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n\n@@ -270,7 +270,21 @@ public class TestExtract\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n \n-        // negative offsets\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234567 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345678 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456789 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '8'\");\n+        assertThat(assertions.expression(\"timezone_hour(TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '8'\");\n+\n+        // negative offset\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56 -08:35')\")).matches(\"BIGINT '-8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.1 -08:35')\")).matches(\"BIGINT '-8'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_HOUR FROM TIMESTAMP '2020-05-10 12:34:56.12 -08:35')\")).matches(\"BIGINT '-8'\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MzM2NA==", "url": "https://github.com/trinodb/trino/pull/5696#discussion_r512473364", "bodyText": "offsets -> offset", "author": "findepi", "createdAt": "2020-10-27T07:46:15Z", "path": "presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java", "diffHunk": "@@ -287,6 +302,36 @@ public void testTimeZoneMinute()\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '35'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '35'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '35'\");\n+\n+        // negative offsets", "originalCommit": "0a508f83b22e9e2cff1c825fef9a04a76743bb06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "chunk": "diff --git a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\nindex 71c7222ca3..d489dc654f 100644\n--- a/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n+++ b/presto-main/src/test/java/io/prestosql/operator/scalar/timestamptz/TestExtract.java\n\n@@ -303,7 +331,21 @@ public class TestExtract\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '35'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '35'\");\n \n-        // negative offsets\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.1 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.12 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.123 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.1234 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.12345 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.123456 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.1234567 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.12345678 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.123456789 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.1234567891 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.12345678912 +08:35')\")).matches(\"BIGINT '35'\");\n+        assertThat(assertions.expression(\"timezone_minute(TIMESTAMP '2020-05-10 12:34:56.123456789123 +08:35')\")).matches(\"BIGINT '35'\");\n+\n+        // negative offset\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56 -08:35')\")).matches(\"BIGINT '-35'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.1 -08:35')\")).matches(\"BIGINT '-35'\");\n         assertThat(assertions.expression(\"EXTRACT(TIMEZONE_MINUTE FROM TIMESTAMP '2020-05-10 12:34:56.12 -08:35')\")).matches(\"BIGINT '-35'\");\n"}}, {"oid": "d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "url": "https://github.com/trinodb/trino/commit/d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "message": "Fix handling of negative offsets for time w/ tz\n\nThere were two issues:\n* The parsing logic had a deficiency that prevented it from handling offsets of the\n  shape -00:XX. The sign was being lost\n* The conversion from offset hour and offset minute to offset minutes was incorrect.\n  It was not calculating a proper negative offset because it was adding positive minutes\n  (towards 0) in the case of a negative offset.", "committedDate": "2020-10-27T19:31:27Z", "type": "commit"}, {"oid": "d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "url": "https://github.com/trinodb/trino/commit/d9c91a5f08f64a9b7ffb05d151adf07dc2ddb3e8", "message": "Fix handling of negative offsets for time w/ tz\n\nThere were two issues:\n* The parsing logic had a deficiency that prevented it from handling offsets of the\n  shape -00:XX. The sign was being lost\n* The conversion from offset hour and offset minute to offset minutes was incorrect.\n  It was not calculating a proper negative offset because it was adding positive minutes\n  (towards 0) in the case of a negative offset.", "committedDate": "2020-10-27T19:31:27Z", "type": "forcePushed"}]}