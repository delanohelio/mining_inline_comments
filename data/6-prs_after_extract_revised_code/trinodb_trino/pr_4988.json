{"pr_number": 4988, "pr_title": "Fetch dynamic filters continuously", "pr_createdAt": "2020-08-26T13:40:20Z", "pr_url": "https://github.com/trinodb/trino/pull/4988", "timeline": [{"oid": "fd0bdcbc448c237eec883af638439d9cfb893416", "url": "https://github.com/trinodb/trino/commit/fd0bdcbc448c237eec883af638439d9cfb893416", "message": "Fetch dynamic filters continuously\n\nA new task resource endpoint is added\nthat provides task collected dynamic filters.\nDynamic filters are versioned and only\nnew dynamic filters are returned.\nDynamic filters version is obtained continuously\nas part of TaskStatus request.", "committedDate": "2020-09-16T09:03:05Z", "type": "commit"}, {"oid": "fd0bdcbc448c237eec883af638439d9cfb893416", "url": "https://github.com/trinodb/trino/commit/fd0bdcbc448c237eec883af638439d9cfb893416", "message": "Fetch dynamic filters continuously\n\nA new task resource endpoint is added\nthat provides task collected dynamic filters.\nDynamic filters are versioned and only\nnew dynamic filters are returned.\nDynamic filters version is obtained continuously\nas part of TaskStatus request.", "committedDate": "2020-09-16T09:03:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNTM0Ng==", "url": "https://github.com/trinodb/trino/pull/4988#discussion_r489335346", "bodyText": "should there be simplify after intersect too?", "author": "rohangarg", "createdAt": "2020-09-16T10:32:31Z", "path": "presto-main/src/main/java/io/prestosql/execution/DynamicFiltersCollector.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.execution;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+import io.prestosql.spi.predicate.Domain;\n+import io.prestosql.sql.planner.plan.DynamicFilterId;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.google.common.collect.ImmutableMap.toImmutableMap;\n+import static java.lang.Math.max;\n+import static java.util.Objects.requireNonNull;\n+\n+public class DynamicFiltersCollector\n+{\n+    public static final long INITIAL_DYNAMIC_FILTERS_VERSION = 0L;\n+    public static final VersionedDynamicFilterDomains INITIAL_DYNAMIC_FILTER_DOMAINS =\n+            new VersionedDynamicFilterDomains(INITIAL_DYNAMIC_FILTERS_VERSION, ImmutableMap.of());\n+\n+    private final Runnable notifyTaskStatusChanged;\n+    @GuardedBy(\"this\")\n+    private final Map<DynamicFilterId, VersionedDomain> dynamicFilterDomains = new HashMap<>();\n+    @GuardedBy(\"this\")\n+    private long currentVersion;\n+\n+    public DynamicFiltersCollector(Runnable notifyTaskStatusChanged)\n+    {\n+        this.notifyTaskStatusChanged = requireNonNull(notifyTaskStatusChanged, \"notifyTaskStatusChanged is null\");\n+    }\n+\n+    public void updateDomains(Map<DynamicFilterId, Domain> newDynamicFilterDomains)\n+    {\n+        if (newDynamicFilterDomains.isEmpty()) {\n+            return;\n+        }\n+\n+        synchronized (this) {\n+            long currentVersion = ++this.currentVersion;\n+            for (Map.Entry<DynamicFilterId, Domain> entry : newDynamicFilterDomains.entrySet()) {\n+                dynamicFilterDomains.merge(\n+                        entry.getKey(),\n+                        new VersionedDomain(currentVersion, entry.getValue().simplify()),\n+                        (oldDomain, newDomain) -> new VersionedDomain(\n+                                max(oldDomain.getVersion(), newDomain.getVersion()),\n+                                oldDomain.getDomain().intersect(newDomain.getDomain())));", "originalCommit": "fd0bdcbc448c237eec883af638439d9cfb893416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzODE5OA==", "url": "https://github.com/trinodb/trino/pull/4988#discussion_r489338198", "bodyText": "should there be simplify after intersect too?\n\nCurrently there is only one (final) DF version.", "author": "sopel39", "createdAt": "2020-09-16T10:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNTM0Ng=="}], "type": "inlineReview", "revised_code": null}]}