{"pr_number": 4748, "pr_title": "Refactor HiveMetastore API and Implementations", "pr_createdAt": "2020-08-08T01:27:16Z", "pr_url": "https://github.com/trinodb/trino/pull/4748", "timeline": [{"oid": "43843b2499bfe6d6245df51efd4bf82f54db424e", "url": "https://github.com/trinodb/trino/commit/43843b2499bfe6d6245df51efd4bf82f54db424e", "message": "Refactor HiveMetastore API and Implementations\n\nThis commit changes the HiveMetastore API to remove methods to methods\ngetPartionNames() and getPartitionNamesByParts() and replace with\ngetPartitionNamesByFilter(). Each implementation is updated as well as\nall callsites. The previous behavior is maintained as far as\ntranslation of any non-equal Domain values to the wildcard value.\nA subsequent commit will implement translation of a Domain into a\nproper Glue expression for the GlueHiveMetastore GetPartitions API in\nthe Glue Data Catalog.", "committedDate": "2020-08-27T01:22:21Z", "type": "commit"}, {"oid": "43843b2499bfe6d6245df51efd4bf82f54db424e", "url": "https://github.com/trinodb/trino/commit/43843b2499bfe6d6245df51efd4bf82f54db424e", "message": "Refactor HiveMetastore API and Implementations\n\nThis commit changes the HiveMetastore API to remove methods to methods\ngetPartionNames() and getPartitionNamesByParts() and replace with\ngetPartitionNamesByFilter(). Each implementation is updated as well as\nall callsites. The previous behavior is maintained as far as\ntranslation of any non-equal Domain values to the wildcard value.\nA subsequent commit will implement translation of a Domain into a\nproper Glue expression for the GlueHiveMetastore GetPartitions API in\nthe Glue Data Catalog.", "committedDate": "2020-08-27T01:22:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3Nzg4OA==", "url": "https://github.com/trinodb/trino/pull/4748#discussion_r507677888", "bodyText": "the \"getPartitionNamesByParts\", stats.getGetPartitionNamesByParts()... above should be renamed too.", "author": "findepi", "createdAt": "2020-10-19T11:39:26Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/thrift/ThriftHiveMetastore.java", "diffHunk": "@@ -1141,39 +1146,31 @@ public void alterTable(HiveIdentity identity, String databaseName, String tableN\n     }\n \n     @Override\n-    public Optional<List<String>> getPartitionNames(HiveIdentity identity, String databaseName, String tableName)\n+    public Optional<List<String>> getPartitionNamesByFilter(HiveIdentity identity, String databaseName, String tableName, List<String> columnNames, TupleDomain<String> partitionKeysFilter)\n     {\n-        try {\n-            return retry()\n-                    .stopOn(NoSuchObjectException.class)\n-                    .stopOnIllegalExceptions()\n-                    .run(\"getPartitionNames\", stats.getGetPartitionNames().wrap(() -> {\n-                        try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            return Optional.of(client.getPartitionNames(databaseName, tableName));\n-                        }\n-                    }));\n-        }\n-        catch (NoSuchObjectException e) {\n-            return Optional.empty();\n-        }\n-        catch (TException e) {\n-            throw new PrestoException(HIVE_METASTORE_ERROR, e);\n-        }\n-        catch (Exception e) {\n-            throw propagate(e);\n+        Optional<List<String>> parts = partitionKeyFilterToStringList(columnNames, partitionKeysFilter, assumeCanonicalPartitionKeys);\n+        Preconditions.checkArgument(!columnNames.isEmpty() || partitionKeysFilter.isAll(), \"must pass in all columnNames or the filter must be all\");\n+        if (parts.isEmpty()) {\n+            return Optional.of(ImmutableList.of());\n         }\n-    }\n \n-    @Override\n-    public Optional<List<String>> getPartitionNamesByParts(HiveIdentity identity, String databaseName, String tableName, List<String> parts)\n-    {\n         try {\n+            if (partitionKeysFilter.isAll()) {\n+                return retry()\n+                        .stopOn(NoSuchObjectException.class)\n+                        .stopOnIllegalExceptions()\n+                        .run(\"getPartitionNames\", stats.getGetPartitionNames().wrap(() -> {\n+                            try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n+                                return Optional.of(client.getPartitionNames(databaseName, tableName));\n+                            }\n+                        }));\n+            }\n             return retry()\n                     .stopOn(NoSuchObjectException.class)\n                     .stopOnIllegalExceptions()\n                     .run(\"getPartitionNamesByParts\", stats.getGetPartitionNamesByParts().wrap(() -> {\n                         try (ThriftMetastoreClient client = createMetastoreClient(identity)) {\n-                            return Optional.of(client.getPartitionNamesFiltered(databaseName, tableName, parts));\n+                            return Optional.of(client.getPartitionNamesFiltered(databaseName, tableName, parts.get()));", "originalCommit": "43843b2499bfe6d6245df51efd4bf82f54db424e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3ODM5OQ==", "url": "https://github.com/trinodb/trino/pull/4748#discussion_r507678399", "bodyText": "nvrm, i see this is pre-existing... still worth updating", "author": "findepi", "createdAt": "2020-10-19T11:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3Nzg4OA=="}], "type": "inlineReview", "revised_code": null}]}