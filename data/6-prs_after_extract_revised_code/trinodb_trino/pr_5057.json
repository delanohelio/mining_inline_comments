{"pr_number": 5057, "pr_title": "TupleDomain small improvements", "pr_createdAt": "2020-09-02T11:25:30Z", "pr_url": "https://github.com/trinodb/trino/pull/5057", "timeline": [{"oid": "5a8b1dea63e136f85048fdc6a2658e407b2eb12a", "url": "https://github.com/trinodb/trino/commit/5a8b1dea63e136f85048fdc6a2658e407b2eb12a", "message": "Validate parameter", "committedDate": "2020-09-02T11:21:05Z", "type": "commit"}, {"oid": "50a645c20b6bc55e7d31843be994c0f31c5af0da", "url": "https://github.com/trinodb/trino/commit/50a645c20b6bc55e7d31843be994c0f31c5af0da", "message": "Short-circuit intersect when one of the operands is ALL", "committedDate": "2020-09-02T11:21:22Z", "type": "commit"}, {"oid": "ee267cbf52e2c3eb06fe4ed2192194fc67746167", "url": "https://github.com/trinodb/trino/commit/ee267cbf52e2c3eb06fe4ed2192194fc67746167", "message": "Introduce NONE and ALL singletons", "committedDate": "2020-09-02T11:24:39Z", "type": "commit"}, {"oid": "2a314dbf0c478d7d08a1a259ec417959b2f9ee86", "url": "https://github.com/trinodb/trino/commit/2a314dbf0c478d7d08a1a259ec417959b2f9ee86", "message": "Short-circuit transform when domain is ALL", "committedDate": "2020-09-02T11:29:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzAyMQ==", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r482013021", "bodyText": "what about none?", "author": "sopel39", "createdAt": "2020-09-02T11:58:20Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/TupleDomain.java", "diffHunk": "@@ -76,17 +80,23 @@ private TupleDomain(Optional<Map<T, Domain>> domains)\n \n     public static <T> TupleDomain<T> withColumnDomains(Map<T, Domain> domains)\n     {\n-        return new TupleDomain<>(Optional.of(requireNonNull(domains, \"domains is null\")));\n+        requireNonNull(domains, \"domains is null\");\n+        if (domains.isEmpty()) {", "originalCommit": "ee267cbf52e2c3eb06fe4ed2192194fc67746167", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3ODc5OA==", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r483078798", "bodyText": "This method takes Map, not Optinal(Map) so there is no none case here.", "author": "findepi", "createdAt": "2020-09-03T15:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzAyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzU3NA==", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r482013574", "bodyText": "just use .get()? It cannot be empty at this point", "author": "sopel39", "createdAt": "2020-09-02T11:59:26Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/TupleDomain.java", "diffHunk": "@@ -434,12 +434,16 @@ else if (isNone()) {\n \n     public <U> TupleDomain<U> transform(Function<T, U> function)\n     {\n-        if (domains.isEmpty()) {\n-            return TupleDomain.none();\n+        if (isNone()) {\n+            return none();\n+        }\n+        if (isAll()) {\n+            return all();\n         }\n \n-        HashMap<U, Domain> result = new LinkedHashMap<>(domains.get().size());\n-        for (Map.Entry<T, Domain> entry : domains.get().entrySet()) {\n+        Map<T, Domain> domains = this.domains.orElseThrow();", "originalCommit": "2a314dbf0c478d7d08a1a259ec417959b2f9ee86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3OTM1MQ==", "url": "https://github.com/trinodb/trino/pull/5057#discussion_r482179351", "bodyText": "IntelliJ doesn't know that because of the change to that remove the if (domains.isEmpty()) block.", "author": "dain", "createdAt": "2020-09-02T15:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxMzU3NA=="}], "type": "inlineReview", "revised_code": null}]}