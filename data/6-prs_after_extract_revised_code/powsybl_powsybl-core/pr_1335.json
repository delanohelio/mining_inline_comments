{"pr_number": 1335, "pr_title": "Refactoring getLines(), getLineStream(), getDanglingLines(), getDanglingLineStream() in Merging View", "pr_createdAt": "2020-06-05T14:03:55Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1335", "timeline": [{"oid": "5dda62c2b036822295b267072c9cf3ca01b831d4", "url": "https://github.com/powsybl/powsybl-core/commit/5dda62c2b036822295b267072c9cf3ca01b831d4", "message": "Refactoring getLines(), getLineStream(), getDanglingLines(), getDanglingLineStream() in Merging View\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\ntmp\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-06-08T08:20:13Z", "type": "commit"}, {"oid": "5dda62c2b036822295b267072c9cf3ca01b831d4", "url": "https://github.com/powsybl/powsybl-core/commit/5dda62c2b036822295b267072c9cf3ca01b831d4", "message": "Refactoring getLines(), getLineStream(), getDanglingLines(), getDanglingLineStream() in Merging View\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\ntmp\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-06-08T08:20:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2MzM1MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1335#discussion_r438063350", "bodyText": "Is it the optimize way to implement this? Could we simply sum the lineCount of the underlying networks and add the number of mergedLine? I don't know if it's really better, but it avoids to iterate over all the lines", "author": "mathbagu", "createdAt": "2020-06-10T11:52:11Z", "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java", "diffHunk": "@@ -693,17 +693,17 @@ public LineAdder newLine() {\n \n     @Override\n     public Iterable<Line> getLines() {\n-        return Collections.unmodifiableCollection(index.getLines());\n+        return index.getLines();\n     }\n \n     @Override\n     public Stream<Line> getLineStream() {\n-        return index.getLines().stream();\n+        return index.getLineStream();\n     }\n \n     @Override\n     public int getLineCount() {\n-        return index.getLines().size();\n+        return (int) index.getLineStream().count();", "originalCommit": "5dda62c2b036822295b267072c9cf3ca01b831d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6671c7525af9dd05f82a5f6bd379c64e7395f8e", "chunk": "diff --git a/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java b/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\nindex 7e29ab96d1..ca435b4de1 100644\n--- a/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\n+++ b/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\n\n@@ -703,7 +703,7 @@ public final class MergingView implements Network {\n \n     @Override\n     public int getLineCount() {\n-        return (int) index.getLineStream().count();\n+        return index.getLineCount();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2MzczOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1335#discussion_r438063739", "bodyText": "Same kind of remark: we could sum the danglingLine count, avec remove 2 times the mergedLine. (1 merged Line = 2 danglingLine).", "author": "mathbagu", "createdAt": "2020-06-10T11:52:58Z", "path": "iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java", "diffHunk": "@@ -714,17 +714,17 @@ public Line getLine(final String id) {\n     // DanglingLines\n     @Override\n     public Iterable<DanglingLine> getDanglingLines() {\n-        return Collections.unmodifiableCollection(index.getDanglingLines());\n+        return index.getDanglingLines();\n     }\n \n     @Override\n     public Stream<DanglingLine> getDanglingLineStream() {\n-        return index.getDanglingLines().stream();\n+        return index.getDanglingLineStream();\n     }\n \n     @Override\n     public int getDanglingLineCount() {\n-        return index.getDanglingLines().size();\n+        return (int) index.getDanglingLineStream().count();", "originalCommit": "5dda62c2b036822295b267072c9cf3ca01b831d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6671c7525af9dd05f82a5f6bd379c64e7395f8e", "chunk": "diff --git a/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java b/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\nindex 7e29ab96d1..ca435b4de1 100644\n--- a/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\n+++ b/iidm/iidm-mergingview/src/main/java/com/powsybl/iidm/mergingview/MergingView.java\n\n@@ -724,7 +724,7 @@ public final class MergingView implements Network {\n \n     @Override\n     public int getDanglingLineCount() {\n-        return (int) index.getDanglingLineStream().count();\n+        return index.getDanglingLineCount();\n     }\n \n     @Override\n"}}, {"oid": "f6671c7525af9dd05f82a5f6bd379c64e7395f8e", "url": "https://github.com/powsybl/powsybl-core/commit/f6671c7525af9dd05f82a5f6bd379c64e7395f8e", "message": "Optimize getLineCount and getDanglingLineCount of MergingView\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-06-16T08:25:49Z", "type": "commit"}]}