{"pr_number": 1535, "pr_title": "Allows to log error rather than throwing exceptions when there is an IIDM-XML version incompatibility during export", "pr_createdAt": "2020-11-03T10:19:33Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1535", "timeline": [{"oid": "948c6e90cdd0a2b85dade611eb1de4b43be2f712", "url": "https://github.com/powsybl/powsybl-core/commit/948c6e90cdd0a2b85dade611eb1de4b43be2f712", "message": "Add in ExportOptions the possibility to chose the behavior when there is an IIDM version incompatibility\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-03T10:07:39Z", "type": "commit"}, {"oid": "b832ea556f7c600b1b23d5d97367f7fc6364f5c2", "url": "https://github.com/powsybl/powsybl-core/commit/b832ea556f7c600b1b23d5d97367f7fc6364f5c2", "message": "Add the option in XMLExporter\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-03T10:18:29Z", "type": "commit"}, {"oid": "93a2638f6b3a4f595a7f24db275965c07c808aff", "url": "https://github.com/powsybl/powsybl-core/commit/93a2638f6b3a4f595a7f24db275965c07c808aff", "message": "Fix code smells\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-03T13:11:14Z", "type": "commit"}, {"oid": "77075d7b534e45d4666056523cfeac6986b5c612", "url": "https://github.com/powsybl/powsybl-core/commit/77075d7b534e45d4666056523cfeac6986b5c612", "message": "Refactoring\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-03T13:24:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxNzM4Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1535#discussion_r519717382", "bodyText": "I'm not totally sure this is OK. The new shunt API wasn't available before XIIDM v1.3. If the model is non-linear, should we throw an exception instead? From my point of view, it's not equivalent and should not be supported", "author": "mathbagu", "createdAt": "2020-11-09T10:51:36Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java", "diffHunk": "@@ -51,8 +51,11 @@ protected void writeRootElementAttributes(ShuntCompensator sc, VoltageLevel vl,\n             IidmXmlUtil.assertMinimumVersion(getRootElementName(), SHUNT_NON_LINEAR_MODEL, IidmXmlUtil.ErrorMessage.NOT_SUPPORTED, IidmXmlVersion.V_1_3, context);\n         }\n         IidmXmlUtil.runUntilMaximumVersion(IidmXmlVersion.V_1_2, context, () -> {\n-            XmlUtil.writeDouble(B_PER_SECTION, sc.getModel(ShuntCompensatorLinearModel.class).getBPerSection(), context.getWriter());\n-            context.getWriter().writeAttribute(MAXIMUM_SECTION_COUNT, Integer.toString(sc.getMaximumSectionCount()));\n+            ShuntCompensatorModel model = sc.getModel();\n+            double bPerSection = model instanceof ShuntCompensatorLinearModel ? ((ShuntCompensatorLinearModel) model).getBPerSection() : sc.getB();\n+            XmlUtil.writeDouble(B_PER_SECTION, bPerSection, context.getWriter());\n+            int maximumSectionCount = model instanceof ShuntCompensatorLinearModel ? sc.getMaximumSectionCount() : 1;\n+            context.getWriter().writeAttribute(MAXIMUM_SECTION_COUNT, Integer.toString(maximumSectionCount));\n             context.getWriter().writeAttribute(\"currentSectionCount\", Integer.toString(sc.getSectionCount()));", "originalCommit": "77075d7b534e45d4666056523cfeac6986b5c612", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c1b74a3216b39f174aedf88f53816d60f9cb686", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java\nindex 1bca0b0e6..169368326 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java\n\n@@ -56,7 +56,8 @@ class ShuntXml extends AbstractConnectableXml<ShuntCompensator, ShuntCompensator\n             XmlUtil.writeDouble(B_PER_SECTION, bPerSection, context.getWriter());\n             int maximumSectionCount = model instanceof ShuntCompensatorLinearModel ? sc.getMaximumSectionCount() : 1;\n             context.getWriter().writeAttribute(MAXIMUM_SECTION_COUNT, Integer.toString(maximumSectionCount));\n-            context.getWriter().writeAttribute(\"currentSectionCount\", Integer.toString(sc.getSectionCount()));\n+            int currentSectionCount = model instanceof ShuntCompensatorLinearModel ? sc.getSectionCount() : 1;\n+            context.getWriter().writeAttribute(\"currentSectionCount\", Integer.toString(currentSectionCount));\n         });\n         IidmXmlUtil.runFromMinimumVersion(IidmXmlVersion.V_1_3, context, () -> context.getWriter().writeAttribute(\"sectionCount\", Integer.toString(sc.getSectionCount())));\n         IidmXmlUtil.writeBooleanAttributeFromMinimumVersion(ROOT_ELEMENT_NAME, \"voltageRegulatorOn\", sc.isVoltageRegulatorOn(), false, IidmXmlUtil.ErrorMessage.NOT_DEFAULT_NOT_SUPPORTED, IidmXmlVersion.V_1_2, context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxODcyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1535#discussion_r519718721", "bodyText": "If we encounter a non linear model, and should export it in a previous version, we silently ignore it. Should we throw an exception? The exported network is not equivalent then.", "author": "mathbagu", "createdAt": "2020-11-09T10:53:54Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/ShuntXml.java", "diffHunk": "@@ -81,13 +84,15 @@ private static void writeModel(ShuntCompensator sc, NetworkXmlWriterContext cont\n             XmlUtil.writeDouble(\"gPerSection\", sc.getModel(ShuntCompensatorLinearModel.class).getGPerSection(), context.getWriter());\n             context.getWriter().writeAttribute(MAXIMUM_SECTION_COUNT, Integer.toString(sc.getMaximumSectionCount()));\n         } else if (sc.getModelType() == ShuntCompensatorModelType.NON_LINEAR) {\n-            context.getWriter().writeStartElement(context.getVersion().getNamespaceURI(), SHUNT_NON_LINEAR_MODEL);\n-            for (ShuntCompensatorNonLinearModel.Section s : sc.getModel(ShuntCompensatorNonLinearModel.class).getAllSections()) {\n-                context.getWriter().writeEmptyElement(context.getVersion().getNamespaceURI(), \"section\");\n-                XmlUtil.writeDouble(\"b\", s.getB(), context.getWriter());\n-                XmlUtil.writeDouble(\"g\", s.getG(), context.getWriter());\n-            }\n-            context.getWriter().writeEndElement();\n+            IidmXmlUtil.runFromMinimumVersion(IidmXmlVersion.V_1_3, context, () -> {\n+                context.getWriter().writeStartElement(context.getVersion().getNamespaceURI(), SHUNT_NON_LINEAR_MODEL);\n+                for (ShuntCompensatorNonLinearModel.Section s : sc.getModel(ShuntCompensatorNonLinearModel.class).getAllSections()) {\n+                    context.getWriter().writeEmptyElement(context.getVersion().getNamespaceURI(), \"section\");\n+                    XmlUtil.writeDouble(\"b\", s.getB(), context.getWriter());\n+                    XmlUtil.writeDouble(\"g\", s.getG(), context.getWriter());\n+                }\n+                context.getWriter().writeEndElement();\n+            });", "originalCommit": "77075d7b534e45d4666056523cfeac6986b5c612", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyODc4OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1535#discussion_r519928788", "bodyText": "No, we don't, a log is made (l.51) but it is considered a shunt with a unique section which has the current susceptance", "author": "miovd", "createdAt": "2020-11-09T16:07:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxODcyMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "859422b4d4a8d34d589cf05a68bf9a0dd0947bbf", "url": "https://github.com/powsybl/powsybl-core/commit/859422b4d4a8d34d589cf05a68bf9a0dd0947bbf", "message": "Add generation fields in backward best effort\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-09T16:05:12Z", "type": "commit"}, {"oid": "9c1b74a3216b39f174aedf88f53816d60f9cb686", "url": "https://github.com/powsybl/powsybl-core/commit/9c1b74a3216b39f174aedf88f53816d60f9cb686", "message": "Correction: current section for non linear shunt is always 1\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-09T16:14:35Z", "type": "commit"}, {"oid": "79696009e33b9e2ca1d7a69e266449669275d31f", "url": "https://github.com/powsybl/powsybl-core/commit/79696009e33b9e2ca1d7a69e266449669275d31f", "message": "Add tests and javadoc\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-10T10:28:22Z", "type": "commit"}, {"oid": "57f43cae429963fb635ea0acd8ceb7735cbfc110", "url": "https://github.com/powsybl/powsybl-core/commit/57f43cae429963fb635ea0acd8ceb7735cbfc110", "message": "Add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-10T11:04:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAxNTM0Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1535#discussion_r524015342", "bodyText": "There is no good reason to create a supplier if you always call the get() method. I would replace it by a simple string and check if ERROR level is enabled", "author": "mathbagu", "createdAt": "2020-11-16T09:23:21Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "diffHunk": "@@ -57,92 +66,196 @@ default void run() {\n         }\n     }\n \n+    private static String message(String elementName, ErrorMessage type, IidmXmlVersion version, IidmXmlVersion contextVersion, String reason) {\n+        return elementName + \" is \" + type.message + \" for IIDM-XML version \" + contextVersion.toString(\".\") + \". \" + reason + version.toString(\".\");\n+    }\n+\n     private static PowsyblException createException(String rootElementName, String elementName, ErrorMessage type, IidmXmlVersion version, IidmXmlVersion contextVersion, String reason) {\n         return createException(rootElementName + \".\" + elementName, type, version, contextVersion, reason);\n     }\n \n     private static PowsyblException createException(String elementName, ErrorMessage type, IidmXmlVersion version, IidmXmlVersion contextVersion, String reason) {\n-        return new PowsyblException(elementName + \" is \" + type.message + \" for IIDM-XML version \" + contextVersion.toString(\".\") + \". \" + reason + version.toString(\".\"));\n+        return new PowsyblException(message(elementName, type, version, contextVersion, reason));\n+    }\n+\n+    private static void createExceptionOrLogError(String rootElementName, String elementName, ErrorMessage type, IidmXmlVersion refVersion, String reason, NetworkXmlWriterContext context) {\n+        createExceptionOrLogError(rootElementName + \".\" + elementName, type, refVersion, reason, context);\n+    }\n+\n+    private static void createExceptionOrLogError(String elementName, ErrorMessage type, IidmXmlVersion refVersion, String reason, NetworkXmlWriterContext context) {\n+        if (context.getOptions().getIidmVersionIncompatibilityBehavior() == ExportOptions.IidmVersionIncompatibilityBehavior.THROW_EXCEPTION) {\n+            throw createException(elementName, type, refVersion, context.getVersion(), reason);\n+        } else if (context.getOptions().getIidmVersionIncompatibilityBehavior() == ExportOptions.IidmVersionIncompatibilityBehavior.LOG_ERROR) {\n+            Supplier<String> message = () -> message(elementName, type, refVersion, context.getVersion(), reason);\n+            LOGGER.error(message.get());", "originalCommit": "57f43cae429963fb635ea0acd8ceb7735cbfc110", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc340a15fc1cb35145e268ce54908762f23d789d", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\nindex 370cf8fe8..91fbc254c 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\n\n@@ -86,8 +85,9 @@ public final class IidmXmlUtil {\n         if (context.getOptions().getIidmVersionIncompatibilityBehavior() == ExportOptions.IidmVersionIncompatibilityBehavior.THROW_EXCEPTION) {\n             throw createException(elementName, type, refVersion, context.getVersion(), reason);\n         } else if (context.getOptions().getIidmVersionIncompatibilityBehavior() == ExportOptions.IidmVersionIncompatibilityBehavior.LOG_ERROR) {\n-            Supplier<String> message = () -> message(elementName, type, refVersion, context.getVersion(), reason);\n-            LOGGER.error(message.get());\n+            if (LOGGER.isErrorEnabled()) {\n+                LOGGER.error(message(elementName, type, refVersion, context.getVersion(), reason));\n+            }\n         } else {\n             throw new AssertionError(\"Unexpected behaviour: \" + context.getOptions().getIidmVersionIncompatibilityBehavior());\n         }\n"}}, {"oid": "fc340a15fc1cb35145e268ce54908762f23d789d", "url": "https://github.com/powsybl/powsybl-core/commit/fc340a15fc1cb35145e268ce54908762f23d789d", "message": "Reviewer's comment: not using a supplier, only check error level is enabled\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-11-16T09:50:33Z", "type": "commit"}, {"oid": "5c1945d4cb54bb4950154ee58a117e1b9e2569c1", "url": "https://github.com/powsybl/powsybl-core/commit/5c1945d4cb54bb4950154ee58a117e1b9e2569c1", "message": "Merge branch 'master' into version_compatibility_error_level", "committedDate": "2020-11-16T09:53:03Z", "type": "commit"}]}