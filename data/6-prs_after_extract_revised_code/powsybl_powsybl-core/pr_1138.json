{"pr_number": 1138, "pr_title": "Support writing IIDM-XML network extensions in previous versions", "pr_createdAt": "2020-01-31T17:03:11Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1138", "timeline": [{"oid": "44fe9d52101afec19a76e780cebf3fa3cbbac7db", "url": "https://github.com/powsybl/powsybl-core/commit/44fe9d52101afec19a76e780cebf3fa3cbbac7db", "message": "Support writing IIDM-XML network extensions in previous versions\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T12:32:12Z", "type": "commit"}, {"oid": "33ff7a982d7c970f4ce3cbe34d6a9d2593bcf984", "url": "https://github.com/powsybl/powsybl-core/commit/33ff7a982d7c970f4ce3cbe34d6a9d2593bcf984", "message": "Add control on ExportOptions.addExtensionVersion\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T12:32:12Z", "type": "commit"}, {"oid": "05e8c8b102d506b432346aece63069e88e087334", "url": "https://github.com/powsybl/powsybl-core/commit/05e8c8b102d506b432346aece63069e88e087334", "message": "Add tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T12:32:12Z", "type": "commit"}, {"oid": "3bcf9901406faebe7a011ba201ff067e3853d026", "url": "https://github.com/powsybl/powsybl-core/commit/3bcf9901406faebe7a011ba201ff067e3853d026", "message": "always take options extension version into account\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T12:32:13Z", "type": "commit"}, {"oid": "3bcf9901406faebe7a011ba201ff067e3853d026", "url": "https://github.com/powsybl/powsybl-core/commit/3bcf9901406faebe7a011ba201ff067e3853d026", "message": "always take options extension version into account\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T12:32:13Z", "type": "forcePushed"}, {"oid": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003", "url": "https://github.com/powsybl/powsybl-core/commit/59f6d8c221b96ed7bf9b694efc1ff52c138f1003", "message": "small correction in tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-18T10:39:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r381237831", "bodyText": "I don't understand how these two methods will be used. Could you explain it to me?", "author": "mathbagu", "createdAt": "2020-02-19T11:36:58Z", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,18 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n+        if (extensions != null && !extensions.contains(extensionName)) {\n+            throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n+        }\n+        extensionsVersions.put(extensionName, extensionVersion);\n+        return this;\n+    }\n+\n+    public Optional<String> getExtensionVersion(String extensionName) {\n+        return Optional.ofNullable(extensionsVersions.get(extensionName));\n+    }\n+", "originalCommit": "59f6d8c221b96ed7bf9b694efc1ff52c138f1003", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI1ODI3Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r381258272", "bodyText": "addExtensionVersion  is to add a particular extension's version in which you want the extension to be serialized e.g. if you want to serialize  CoordinatedReactiveControl in its 1.0 version, you can use options.addExtensionVersion(\"coordinatedReactiveControl\", \"1.0\");. It is different from the IIDM-XML version which is by default 1.1.\ngetExtensionVersion is to get the extension's version in which you want the extension to be serialized if it has been defined (return an empty Optional if it has not been defined).", "author": "miovd", "createdAt": "2020-02-19T12:24:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0NjA2MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383146061", "bodyText": "Then if for some reason someone calls addExtensionVersion twice with two different versions for the same extension, that extension will be serialized twice, one for each version?", "author": "agnesLeroy", "createdAt": "2020-02-24T09:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MzY3Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383343677", "bodyText": "Good observation, I didn't think about this case! With the current implementation, the last call to the method is kept... Maybe an exception should be thrown or at least a warning should be written? This case should not happen (the version of an extension is unique for each file/export).", "author": "miovd", "createdAt": "2020-02-24T15:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTAwNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383351004", "bodyText": "I believe an exception would be better than a warning, since this would correspond to an erroneous use of the feature.", "author": "agnesLeroy", "createdAt": "2020-02-24T15:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIzNzgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e87e3c8937cafcb91cd321956baf341790851abc", "chunk": "diff --git a/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java b/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\nindex 602a51c4c..03a3a4e6d 100644\n--- a/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\n+++ b/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\n\n@@ -156,7 +156,9 @@ public class ExportOptions extends AbstractOptions<ExportOptions> {\n         if (extensions != null && !extensions.contains(extensionName)) {\n             throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n         }\n-        extensionsVersions.put(extensionName, extensionVersion);\n+        if (extensionsVersions.putIfAbsent(extensionName, extensionVersion) != null) {\n+            throw new PowsyblException(\"The version of \" + extensionName + \"'s XML serializer has already been set.\");\n+        }\n         return this;\n     }\n \n"}}, {"oid": "50bce76f47e09693d959366d0eaf8f98bb1da2c4", "url": "https://github.com/powsybl/powsybl-core/commit/50bce76f47e09693d959366d0eaf8f98bb1da2c4", "message": "add NetworkXmlWriterContext.getExtensionVersion() and check the version exists before writing\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-20T14:30:22Z", "type": "commit"}, {"oid": "1fe38a2db54fd7922ab2cbc77626abfdaf907c12", "url": "https://github.com/powsybl/powsybl-core/commit/1fe38a2db54fd7922ab2cbc77626abfdaf907c12", "message": "add test for unsupported extension version\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-20T14:48:54Z", "type": "commit"}, {"oid": "e605d0fc126069fa078512c8c26f33a609be21e4", "url": "https://github.com/powsybl/powsybl-core/commit/e605d0fc126069fa078512c8c26f33a609be21e4", "message": "support config extensions version on config file + add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-20T15:47:52Z", "type": "commit"}, {"oid": "014cd0dc1bcf304d8201d14bf9f867cb5f830aef", "url": "https://github.com/powsybl/powsybl-core/commit/014cd0dc1bcf304d8201d14bf9f867cb5f830aef", "message": "typo\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-20T15:51:18Z", "type": "commit"}, {"oid": "7c5c45726f05147c17e92faf7b226a02d20dca99", "url": "https://github.com/powsybl/powsybl-core/commit/7c5c45726f05147c17e92faf7b226a02d20dca99", "message": "sonar issues\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-20T16:07:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNDkyNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383124927", "bodyText": "Maybe replace \"exists\" by \"Supported\"?", "author": "mathbagu", "createdAt": "2020-02-24T08:15:34Z", "path": "commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java", "diffHunk": "@@ -69,4 +70,13 @@ default String getName() {\n     default String getVersion() {\n         return \"1.0\";\n     }\n+\n+    /**\n+     * Check that a given extension version exists.\n+     */\n+    default void checkExtensionVersionExists(String extensionVersion) {", "originalCommit": "7c5c45726f05147c17e92faf7b226a02d20dca99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e87e3c8937cafcb91cd321956baf341790851abc", "chunk": "diff --git a/commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java b/commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java\nindex 404d8509d..b2365b5de 100644\n--- a/commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java\n+++ b/commons/src/main/java/com/powsybl/commons/extensions/ExtensionXmlSerializer.java\n\n@@ -74,7 +74,7 @@ public interface ExtensionXmlSerializer<T extends Extendable, E extends Extensio\n     /**\n      * Check that a given extension version exists.\n      */\n-    default void checkExtensionVersionExists(String extensionVersion) {\n+    default void checkExtensionVersionSupported(String extensionVersion) {\n         if (!\"1.0\".equals(extensionVersion)) {\n             throw new PowsyblException(\"The version \" + extensionVersion + \" of the \" + getExtensionName() + \" extension's XML serializer is not supported.\");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNTY4MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383125680", "bodyText": "Rewrite this method in two lines to make it simpler:\nString version = options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\");\nreturn getNamespaceUri(extensionXmlSerializer, options, version);", "author": "mathbagu", "createdAt": "2020-02-24T08:18:04Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -215,6 +223,27 @@ private static ExtensionXmlSerializer getExtensionXmlSerializer(ExportOptions op\n         return extensionXmlSerializer;\n     }\n \n+    private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSerializer, ExportOptions options) {\n+        return getNamespaceUri(extensionXmlSerializer, options,\n+                options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\"));\n+    }", "originalCommit": "7c5c45726f05147c17e92faf7b226a02d20dca99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e87e3c8937cafcb91cd321956baf341790851abc", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java\nindex 01d954de1..965a7fd6f 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java\n\n@@ -224,8 +224,8 @@ public final class NetworkXml {\n     }\n \n     private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSerializer, ExportOptions options) {\n-        return getNamespaceUri(extensionXmlSerializer, options,\n-                options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\"));\n+        IidmXmlVersion networkVersion = options.getVersion() == null ? IidmXmlConstants.CURRENT_IIDM_XML_VERSION : IidmXmlVersion.of(options.getVersion(), \".\");\n+        return getNamespaceUri(extensionXmlSerializer, options, networkVersion);\n     }\n \n     private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSerializer, ExportOptions options, IidmXmlVersion networkVersion) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMTYyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383221621", "bodyText": "Another possible name : BEGIN_VERSION_INCOMPATBILITY_MESSAGE", "author": "agnesLeroy", "createdAt": "2020-02-24T11:50:32Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/extensions/AbstractVersionableNetworkExtensionXmlSerializer.java", "diffHunk": "@@ -25,6 +25,8 @@\n  */\n public abstract class AbstractVersionableNetworkExtensionXmlSerializer<T extends Extendable, E extends Extension<T>> implements ExtensionXmlSerializer<T, E> {\n \n+    private static final String INCOMPATIBILITY_NETWORK_VERSION_MESSAGE = \"IIDM-XML version of network (\";", "originalCommit": "7c5c45726f05147c17e92faf7b226a02d20dca99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2NTkwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383265900", "bodyText": "It is a string used 3 times (error's message), Sonar considers not creating a variable as a code smell.", "author": "miovd", "createdAt": "2020-02-24T13:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMTYyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383222494", "bodyText": "Why do you create this variable here, and why use memoize?", "author": "agnesLeroy", "createdAt": "2020-02-24T11:52:36Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/XMLExporter.java", "diffHunk": "@@ -63,6 +67,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(XMLExporter.class);\n \n+    private static final Supplier<ExtensionProviders<ExtensionXmlSerializer>> EXTENSIONS_SUPPLIER = Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionXmlSerializer.class, \"network\"));", "originalCommit": "7c5c45726f05147c17e92faf7b226a02d20dca99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjcwOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383346709", "bodyText": "This supplier provides in runtime the XML serializers of network extensions available in the dependencies of the module in which it is called. memoize allows to use lazy loading: the serializers are only loaded when first called (if never called, they are never loaded and once loaded, they are kept in memory).", "author": "miovd", "createdAt": "2020-02-24T15:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjE1Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383352157", "bodyText": "Ok, thank you for the explanation!", "author": "agnesLeroy", "createdAt": "2020-02-24T15:58:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjQ5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383272808", "bodyText": "Uncompatible should be Incompatible. Why didn't you use the same name basis as the two other tests below?", "author": "agnesLeroy", "createdAt": "2020-02-24T13:46:45Z", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -191,26 +194,48 @@ public void testTerminalExtension() throws IOException {\n         assertSame(loadXml.getTerminal(), terminalMockExtXml.getTerminal());\n \n         // backward compatibility 1.0\n-        //roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0); // TODO add versions mechanism for extensions\n+        roundTripVersionnedXmlTest(\"eurostag-tutorial-example1-with-terminalMock-ext.xml\", IidmXmlVersion.V_1_0);\n         roundTripXmlTest(NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_0)\n                         + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\")),\n                 NetworkXml::writeAndValidate,\n                 NetworkXml::validateAndRead,\n                 getVersionDir(IidmXmlConstants.CURRENT_IIDM_XML_VERSION) + \"eurostag-tutorial-example1-with-terminalMock-ext.xml\");\n     }\n \n+    @Test\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        MemDataSource dataSource = new MemDataSource();\n+        Properties properties = new Properties();\n+        properties.put(\"iidm.export.xml.version\", \"1.1\");\n+        new XMLExporter().export(network, properties, dataSource);\n+        try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n+            assertNotNull(is);\n+            compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n+                    is);\n+        }\n+    }\n+\n     @Test\n     public void testThrowErrorUncompatibleExtensionVersion() {", "originalCommit": "7c5c45726f05147c17e92faf7b226a02d20dca99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NDI2Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383274262", "bodyText": "What is the difference between the two resource files in this test? Why do you use MemDataSource?", "author": "agnesLeroy", "createdAt": "2020-02-24T13:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1OTEwNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383359106", "bodyText": "Why didn't you use the same name basis as the two other tests below?\n\nFor this test specifically, the version of the extension is supported, just not compatible with the given network version.\n\nWhat is the difference between the two resource files in this test? Why do you use MemDataSource?\n\nI'm assuming you are talking about the test above. The difference between the two resource files is the version of the loadMock extension (1.2 for the imported file and 1.1 for the reference of the exported file). I am using MemDataSource because when exporting, I don't want the file to be physically on my machine but to be in memory (which MemDataSource allows to do).", "author": "miovd", "createdAt": "2020-02-24T16:09:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM3NTExOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383375118", "bodyText": "Comments have been added in tests to explain more in detail what is done", "author": "miovd", "createdAt": "2020-02-24T16:34:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MjgwOA=="}], "type": "inlineReview", "revised_code": {"commit": "e87e3c8937cafcb91cd321956baf341790851abc", "chunk": "diff --git a/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java b/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\nindex 60affca85..d8ef4836a 100644\n--- a/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\n+++ b/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\n\n@@ -204,23 +204,33 @@ public class IdentifiableExtensionXmlSerializerTest extends AbstractXmlConverter\n \n     @Test\n     public void testNotLatestVersionTerminalExtension() throws IOException {\n+        // import XIIDM file with loadMock v1.2\n         Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+\n         MemDataSource dataSource = new MemDataSource();\n+\n+        // properties specify that IIDM-XML network version to export is 1.1\n         Properties properties = new Properties();\n         properties.put(\"iidm.export.xml.version\", \"1.1\");\n+\n+        // XMLExporter here take default test configuration (cf. /resources/com/powsybl/config/test/config.yml)\n+        // this default test configuration asserts that loadMock should be exported in v1.1\n         new XMLExporter().export(network, properties, dataSource);\n+\n         try (InputStream is = new ByteArrayInputStream(dataSource.getData(null, \"xiidm\"))) {\n             assertNotNull(is);\n+            // check that loadMock has been serialized in v1.1\n             compareXml(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-loadMockExt-1_1.xml\"),\n                     is);\n         }\n     }\n \n     @Test\n-    public void testThrowErrorUncompatibleExtensionVersion() {\n+    public void testThrowErrorIncompatibleExtensionVersion() {\n         exception.expect(PowsyblException.class);\n         exception.expectMessage(\"IIDM-XML version of network (1.1)\"\n                 + \" is not compatible with the loadMock extension's namespace URI.\");\n+        // should fail while trying to import a file in IIDM-XML network version 1.1 and loadMock in v1.0 (not compatible)\n         NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) + \"eurostag-tutorial-example1-with-bad-loadMockExt.xml\"));\n     }\n \n"}}, {"oid": "e87e3c8937cafcb91cd321956baf341790851abc", "url": "https://github.com/powsybl/powsybl-core/commit/e87e3c8937cafcb91cd321956baf341790851abc", "message": "apply review corrections\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-24T16:32:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NDIyNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383774226", "bodyText": "Should you use getVersionDir(IidmXmlVersion.V1_1) also there?\nMaybe we should introduce a method somewhere to get a network resource based on a version and a filename:\nInputStream getNetworkAsStream(String filename, IidmVersion version) {\n    return getClass().getResourceAsStream(version + \"/\" + filename);\n}", "author": "mathbagu", "createdAt": "2020-02-25T09:59:44Z", "path": "iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java", "diffHunk": "@@ -200,17 +203,51 @@ public void testTerminalExtension() throws IOException {\n     }\n \n     @Test\n-    public void testThrowErrorUncompatibleExtensionVersion() {\n+    public void testNotLatestVersionTerminalExtension() throws IOException {\n+        // import XIIDM file with loadMock v1.2\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));", "originalCommit": "e87e3c8937cafcb91cd321956baf341790851abc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4MjgxNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383782816", "bodyText": "Yes, I will make the change you suggested and introduce the new method in a new PR to prevent confusion in this one.", "author": "miovd", "createdAt": "2020-02-25T10:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NDIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "340f560dd8e7e59a998bae95f12b962f1006d738", "chunk": "diff --git a/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java b/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\nindex d8ef4836a..0701aafa1 100644\n--- a/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\n+++ b/iidm/iidm-xml-converter/src/test/java/com/powsybl/iidm/xml/IdentifiableExtensionXmlSerializerTest.java\n\n@@ -205,7 +205,8 @@ public class IdentifiableExtensionXmlSerializerTest extends AbstractXmlConverter\n     @Test\n     public void testNotLatestVersionTerminalExtension() throws IOException {\n         // import XIIDM file with loadMock v1.2\n-        Network network = NetworkXml.read(getClass().getResourceAsStream(\"/V1_1/eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n+        Network network = NetworkXml.read(getClass().getResourceAsStream(getVersionDir(IidmXmlVersion.V_1_1) +\n+                \"eurostag-tutorial-example1-with-loadMockExt-1_2.xml\"));\n \n         MemDataSource dataSource = new MemDataSource();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NzI0OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1138#discussion_r383777248", "bodyText": "Could you add documentation about the usage of this method. I'm sorry but I never remember how and when to use this", "author": "mathbagu", "createdAt": "2020-02-25T10:05:10Z", "path": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java", "diffHunk": "@@ -153,6 +152,20 @@ public ExportOptions setVersion(String version) {\n         return this;\n     }\n \n+    public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {", "originalCommit": "e87e3c8937cafcb91cd321956baf341790851abc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "340f560dd8e7e59a998bae95f12b962f1006d738", "chunk": "diff --git a/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java b/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\nindex 03a3a4e6d..d2ee25c9b 100644\n--- a/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\n+++ b/iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java\n\n@@ -152,6 +152,15 @@ public class ExportOptions extends AbstractOptions<ExportOptions> {\n         return this;\n     }\n \n+    /**\n+     * Add a given version in which the extension with the given name will be exported if\n+     * this version is supported by the extension's XML serializer and if it is compatible\n+     * with the IIDM version in which the network will be exported.\n+     * If the version is not added for an extension configured to be serialized, the extension will be serialized in the\n+     * most recent version compatible with the IIDM version in which the network will be exported.\n+     * If a version is added for an extension configured <b>not</b> to be serialized, the version will be ignored.\n+     * If a version has already been added for the extension, throw an exception.\n+     */\n     public ExportOptions addExtensionVersion(String extensionName, String extensionVersion) {\n         if (extensions != null && !extensions.contains(extensionName)) {\n             throw new PowsyblException(extensionName + \" is not an extension you have passed in the extensions list to export.\");\n"}}, {"oid": "340f560dd8e7e59a998bae95f12b962f1006d738", "url": "https://github.com/powsybl/powsybl-core/commit/340f560dd8e7e59a998bae95f12b962f1006d738", "message": "add javadoc for exportOptions + small change in test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-25T10:48:56Z", "type": "commit"}, {"oid": "364f66ec4c8c139d63d818f723b3042e1ae4cb22", "url": "https://github.com/powsybl/powsybl-core/commit/364f66ec4c8c139d63d818f723b3042e1ae4cb22", "message": "Merge branch 'master' into write_network_ext_versioning", "committedDate": "2020-02-25T10:48:37Z", "type": "commit"}]}