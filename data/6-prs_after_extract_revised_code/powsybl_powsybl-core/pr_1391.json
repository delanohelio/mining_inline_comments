{"pr_number": 1391, "pr_title": "Change Tap Changers checks", "pr_createdAt": "2020-07-09T13:14:05Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1391", "timeline": [{"oid": "06b1e9ebe956d3feea7462888e2be66376ad819e", "url": "https://github.com/powsybl/powsybl-core/commit/06b1e9ebe956d3feea7462888e2be66376ad819e", "message": "Change Tap Changers checks\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-07-09T13:12:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNjQyOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455016429", "bodyText": "In this case, do:\nalpha1 = twt.getOptionalPhaseTapChanger().map(ptc -> Math.toRadians(ptc.getCurrentStep().getAlpha())).orElse(0f);", "author": "MioRtia", "createdAt": "2020-07-15T12:34:35Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -193,7 +193,7 @@ public BranchData(TwoWindingsTransformer twt, int phaseAngleClock, double epsilo\n         u2 = bus2 != null ? bus2.getV() : Double.NaN;\n         theta1 = bus1 != null ? Math.toRadians(bus1.getAngle()) : Double.NaN;\n         theta2 = bus2 != null ? Math.toRadians(bus2.getAngle()) : Double.NaN;\n-        alpha1 = twt.getPhaseTapChanger() != null ? Math.toRadians(twt.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;\n+        alpha1 = twt.hasPhaseTapChanger() ? Math.toRadians(twt.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -193,7 +193,7 @@ public class BranchData {\n         u2 = bus2 != null ? bus2.getV() : Double.NaN;\n         theta1 = bus1 != null ? Math.toRadians(bus1.getAngle()) : Double.NaN;\n         theta2 = bus2 != null ? Math.toRadians(bus2.getAngle()) : Double.NaN;\n-        alpha1 = twt.hasPhaseTapChanger() ? Math.toRadians(twt.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;\n+        alpha1 = twt.getOptionalPhaseTapChanger().map(ptc -> Math.toRadians(ptc.getCurrentStep().getAlpha())).orElse(0d);\n         alpha2 = 0f;\n         g1 = getG1(twt, twtSplitShuntAdmittance);\n         g2 = getG2(twt, twtSplitShuntAdmittance);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNjgwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455016800", "bodyText": "Same remark: use getOptionalRatioTapChanger()", "author": "MioRtia", "createdAt": "2020-07-15T12:35:09Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNjg1Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455016856", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T12:35:15Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNjkzMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455016933", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T12:35:22Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNjk5MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455016990", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T12:35:30Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjI0Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455042247", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:16:15Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjMxMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455042310", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:16:21Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjM2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455042365", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:16:27Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjQ1OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455042458", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:16:38Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java", "diffHunk": "@@ -244,46 +244,46 @@ private double getValue(double initialValue, double rtcStepValue, double ptcStep\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.getRatioTapChanger() != null ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.getPhaseTapChanger() != null ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n+                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\nindex 86f783a52..5f23eb1e3 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/BranchData.java\n\n@@ -244,48 +244,44 @@ public class BranchData {\n \n     private double getR(TwoWindingsTransformer twt) {\n         return getValue(twt.getR(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getR() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private double getX(TwoWindingsTransformer twt) {\n         return getValue(twt.getX(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getX() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private double getG1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : twt.getG(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB1(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : twt.getB(),\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getG2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getG() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getG() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private double getB2(TwoWindingsTransformer twt, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? twt.getB() / 2 : 0,\n-                        twt.hasRatioTapChanger() ? twt.getRatioTapChanger().getCurrentStep().getB() : 0,\n-                        twt.hasPhaseTapChanger() ? twt.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+                        twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+                        twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private double getRho1(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (twt.hasPhaseTapChanger()) {\n-            rho *= twt.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= twt.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDE4OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455044189", "bodyText": "You can refactor it:\nreturn twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1);", "author": "MioRtia", "createdAt": "2020-07-15T13:19:03Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java", "diffHunk": "@@ -22,39 +22,39 @@\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n         }\n         return rho;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\nindex 78166829a..f3dec9a00 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n\n@@ -21,43 +21,23 @@ import org.apache.commons.math3.complex.ComplexUtils;\n public class SV {\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n-        double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        return rho;\n+        return twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n-        double r = twt.getR();\n-        if (twt.hasRatioTapChanger()) {\n-            r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n-        }\n-        return r;\n+        return twt.getR() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getR() / 100).orElse(1d);\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n-        double x = twt.getX();\n-        if (twt.hasRatioTapChanger()) {\n-            x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n-        }\n-        return x;\n+        return twt.getX() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getX() / 100).orElse(1d);\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n-        double g = twt.getG();\n-        if (twt.hasRatioTapChanger()) {\n-            g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n-        }\n-        return g;\n+        return twt.getG() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getG() / 100).orElse(1d);\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n-        double b = twt.getB();\n-        if (twt.hasRatioTapChanger()) {\n-            b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n-        }\n-        return b;\n+        return twt.getB() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getB() / 100).orElse(1d);\n     }\n \n     double p;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDMwNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455044307", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:19:13Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java", "diffHunk": "@@ -22,39 +22,39 @@\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n         }\n         return rho;\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n         double r = twt.getR();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n         }\n         return r;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\nindex 78166829a..f3dec9a00 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n\n@@ -21,43 +21,23 @@ import org.apache.commons.math3.complex.ComplexUtils;\n public class SV {\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n-        double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        return rho;\n+        return twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n-        double r = twt.getR();\n-        if (twt.hasRatioTapChanger()) {\n-            r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n-        }\n-        return r;\n+        return twt.getR() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getR() / 100).orElse(1d);\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n-        double x = twt.getX();\n-        if (twt.hasRatioTapChanger()) {\n-            x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n-        }\n-        return x;\n+        return twt.getX() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getX() / 100).orElse(1d);\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n-        double g = twt.getG();\n-        if (twt.hasRatioTapChanger()) {\n-            g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n-        }\n-        return g;\n+        return twt.getG() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getG() / 100).orElse(1d);\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n-        double b = twt.getB();\n-        if (twt.hasRatioTapChanger()) {\n-            b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n-        }\n-        return b;\n+        return twt.getB() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getB() / 100).orElse(1d);\n     }\n \n     double p;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDUwNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455044507", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:19:27Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java", "diffHunk": "@@ -22,39 +22,39 @@\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n         }\n         return rho;\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n         double r = twt.getR();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n         }\n         return r;\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n         double x = twt.getX();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n         }\n         return x;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\nindex 78166829a..f3dec9a00 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n\n@@ -21,43 +21,23 @@ import org.apache.commons.math3.complex.ComplexUtils;\n public class SV {\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n-        double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        return rho;\n+        return twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n-        double r = twt.getR();\n-        if (twt.hasRatioTapChanger()) {\n-            r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n-        }\n-        return r;\n+        return twt.getR() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getR() / 100).orElse(1d);\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n-        double x = twt.getX();\n-        if (twt.hasRatioTapChanger()) {\n-            x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n-        }\n-        return x;\n+        return twt.getX() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getX() / 100).orElse(1d);\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n-        double g = twt.getG();\n-        if (twt.hasRatioTapChanger()) {\n-            g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n-        }\n-        return g;\n+        return twt.getG() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getG() / 100).orElse(1d);\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n-        double b = twt.getB();\n-        if (twt.hasRatioTapChanger()) {\n-            b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n-        }\n-        return b;\n+        return twt.getB() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getB() / 100).orElse(1d);\n     }\n \n     double p;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDY4Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455044683", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:19:39Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java", "diffHunk": "@@ -22,39 +22,39 @@\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n         }\n         return rho;\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n         double r = twt.getR();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n         }\n         return r;\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n         double x = twt.getX();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n         }\n         return x;\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n         double g = twt.getG();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n         }\n         return g;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\nindex 78166829a..f3dec9a00 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n\n@@ -21,43 +21,23 @@ import org.apache.commons.math3.complex.ComplexUtils;\n public class SV {\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n-        double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        return rho;\n+        return twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n-        double r = twt.getR();\n-        if (twt.hasRatioTapChanger()) {\n-            r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n-        }\n-        return r;\n+        return twt.getR() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getR() / 100).orElse(1d);\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n-        double x = twt.getX();\n-        if (twt.hasRatioTapChanger()) {\n-            x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n-        }\n-        return x;\n+        return twt.getX() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getX() / 100).orElse(1d);\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n-        double g = twt.getG();\n-        if (twt.hasRatioTapChanger()) {\n-            g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n-        }\n-        return g;\n+        return twt.getG() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getG() / 100).orElse(1d);\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n-        double b = twt.getB();\n-        if (twt.hasRatioTapChanger()) {\n-            b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n-        }\n-        return b;\n+        return twt.getB() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getB() / 100).orElse(1d);\n     }\n \n     double p;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDgwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455044800", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:19:49Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java", "diffHunk": "@@ -22,39 +22,39 @@\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n         double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n         }\n         return rho;\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n         double r = twt.getR();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n         }\n         return r;\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n         double x = twt.getX();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n         }\n         return x;\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n         double g = twt.getG();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n         }\n         return g;\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n         double b = twt.getB();\n-        if (twt.getRatioTapChanger() != null) {\n+        if (twt.hasRatioTapChanger()) {\n             b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n         }\n         return b;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\nindex 78166829a..f3dec9a00 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/SV.java\n\n@@ -21,43 +21,23 @@ import org.apache.commons.math3.complex.ComplexUtils;\n public class SV {\n \n     public static double getRatio(TwoWindingsTransformer twt) {\n-        double rho = twt.getRatedU2() / twt.getRatedU1();\n-        if (twt.hasRatioTapChanger()) {\n-            rho *= twt.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        return rho;\n+        return twt.getRatedU2() / twt.getRatedU1() * twt.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n     }\n \n     public static double getR(TwoWindingsTransformer twt) {\n-        double r = twt.getR();\n-        if (twt.hasRatioTapChanger()) {\n-            r *= 1 + twt.getRatioTapChanger().getCurrentStep().getR() / 100;\n-        }\n-        return r;\n+        return twt.getR() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getR() / 100).orElse(1d);\n     }\n \n     public static double getX(TwoWindingsTransformer twt) {\n-        double x = twt.getX();\n-        if (twt.hasRatioTapChanger()) {\n-            x *= 1 + twt.getRatioTapChanger().getCurrentStep().getX() / 100;\n-        }\n-        return x;\n+        return twt.getX() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getX() / 100).orElse(1d);\n     }\n \n     public static double getG(TwoWindingsTransformer twt) {\n-        double g = twt.getG();\n-        if (twt.hasRatioTapChanger()) {\n-            g *= 1 + twt.getRatioTapChanger().getCurrentStep().getG() / 100;\n-        }\n-        return g;\n+        return twt.getG() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getG() / 100).orElse(1d);\n     }\n \n     public static double getB(TwoWindingsTransformer twt) {\n-        double b = twt.getB();\n-        if (twt.hasRatioTapChanger()) {\n-            b *= 1 + twt.getRatioTapChanger().getCurrentStep().getB() / 100;\n-        }\n-        return b;\n+        return twt.getB() * twt.getOptionalRatioTapChanger().map(rtc -> 1 + rtc.getCurrentStep().getB() / 100).orElse(1d);\n     }\n \n     double p;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTMxNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455045315", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:20:27Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java", "diffHunk": "@@ -361,17 +361,17 @@ private static double getTheta(Leg leg) {\n \n     private static double rho(Leg leg, double ratedU0) {\n         double rho = ratedU0 / leg.getRatedU();\n-        if (leg.getRatioTapChanger() != null) {\n+        if (leg.hasRatioTapChanger()) {\n             rho *= leg.getRatioTapChanger().getCurrentStep().getRho();\n         }\n-        if (leg.getPhaseTapChanger() != null) {\n+        if (leg.hasPhaseTapChanger()) {\n             rho *= leg.getPhaseTapChanger().getCurrentStep().getRho();\n         }\n         return rho;\n     }\n \n     private static double alpha(Leg leg) {\n-        return leg.getPhaseTapChanger() != null ? Math.toRadians(leg.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;\n+        return leg.hasPhaseTapChanger() ? Math.toRadians(leg.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\nindex d35801087..5b8e1d0b4 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\n\n@@ -361,17 +361,13 @@ public class TwtData {\n \n     private static double rho(Leg leg, double ratedU0) {\n         double rho = ratedU0 / leg.getRatedU();\n-        if (leg.hasRatioTapChanger()) {\n-            rho *= leg.getRatioTapChanger().getCurrentStep().getRho();\n-        }\n-        if (leg.hasPhaseTapChanger()) {\n-            rho *= leg.getPhaseTapChanger().getCurrentStep().getRho();\n-        }\n+        rho *= leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getRho()).orElse(1d);\n+        rho *= leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getRho()).orElse(1d);\n         return rho;\n     }\n \n     private static double alpha(Leg leg) {\n-        return leg.hasPhaseTapChanger() ? Math.toRadians(leg.getPhaseTapChanger().getCurrentStep().getAlpha()) : 0f;\n+        return leg.getOptionalPhaseTapChanger().map(ptc -> Math.toRadians(ptc.getCurrentStep().getAlpha())).orElse(0d);\n     }\n \n     private static double getValue(double initialValue, double rtcStepValue, double ptcStepValue) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTQ5Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455045492", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-15T13:20:41Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java", "diffHunk": "@@ -380,38 +380,38 @@ private static double getValue(double initialValue, double rtcStepValue, double\n \n     private static double getR(Leg leg) {\n         return getValue(leg.getR(),\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getR() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getR() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getR() : 0);\n     }\n \n     private static double getX(Leg leg) {\n         return getValue(leg.getX(),\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getX() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getX() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getX() : 0);\n     }\n \n     private static double getG1(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getG() / 2 : leg.getG(),\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private static double getB1(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getB() / 2 : leg.getB(),\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);\n     }\n \n     private static double getG2(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getG() / 2 : 0.0,\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n     }\n \n     private static double getB2(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getB() / 2 : 0.0,\n-            leg.getRatioTapChanger() != null ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n-            leg.getPhaseTapChanger() != null ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n+            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\nindex d35801087..5b8e1d0b4 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/TwtData.java\n\n@@ -380,38 +376,38 @@ public class TwtData {\n \n     private static double getR(Leg leg) {\n         return getValue(leg.getR(),\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getR() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getR() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getR()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getR()).orElse(0d));\n     }\n \n     private static double getX(Leg leg) {\n         return getValue(leg.getX(),\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getX() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getX() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getX()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getX()).orElse(0d));\n     }\n \n     private static double getG1(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getG() / 2 : leg.getG(),\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private static double getB1(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getB() / 2 : leg.getB(),\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private static double getG2(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getG() / 2 : 0.0,\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getG() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getG() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getG()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getG()).orElse(0d));\n     }\n \n     private static double getB2(Leg leg, boolean twtSplitShuntAdmittance) {\n         return getValue(twtSplitShuntAdmittance ? leg.getB() / 2 : 0.0,\n-            leg.hasRatioTapChanger() ? leg.getRatioTapChanger().getCurrentStep().getB() : 0,\n-            leg.hasPhaseTapChanger() ? leg.getPhaseTapChanger().getCurrentStep().getB() : 0);\n+            leg.getOptionalRatioTapChanger().map(rtc -> rtc.getCurrentStep().getB()).orElse(0d),\n+            leg.getOptionalPhaseTapChanger().map(ptc -> ptc.getCurrentStep().getB()).orElse(0d));\n     }\n \n     private static boolean isMainComponent(Leg leg) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NzEwNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1391#discussion_r455047104", "bodyText": "You can do:\nUctePhaseRegulation uctePhaseRegulation = twoWindingsTransformer.getOptionalRatioTapChanger().map(rtc -> convertRatioTapChanger(twoWindingsTransformer)).orElse(null);\nSame for UcteAngleRegulation", "author": "MioRtia", "createdAt": "2020-07-15T13:22:59Z", "path": "ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java", "diffHunk": "@@ -592,13 +592,13 @@ private static void convertTwoWindingsTransformer(UcteNetwork ucteNetwork, TwoWi\n      * @param twoWindingsTransformer The TwoWindingTransformer we want to convert\n      */\n     private static void convertRegulation(UcteNetwork ucteNetwork, UcteElementId ucteElementId, TwoWindingsTransformer twoWindingsTransformer) {\n-        if (twoWindingsTransformer.getRatioTapChanger() != null || twoWindingsTransformer.getPhaseTapChanger() != null) {\n+        if (twoWindingsTransformer.hasRatioTapChanger() || twoWindingsTransformer.hasPhaseTapChanger()) {\n             UctePhaseRegulation uctePhaseRegulation = null;\n             UcteAngleRegulation ucteAngleRegulation = null;\n-            if (twoWindingsTransformer.getRatioTapChanger() != null) {\n+            if (twoWindingsTransformer.hasRatioTapChanger()) {\n                 uctePhaseRegulation = convertRatioTapChanger(twoWindingsTransformer);\n             }\n-            if (twoWindingsTransformer.getPhaseTapChanger() != null) {\n+            if (twoWindingsTransformer.hasPhaseTapChanger()) {\n                 ucteAngleRegulation = convertPhaseTapChanger(twoWindingsTransformer);\n             }", "originalCommit": "06b1e9ebe956d3feea7462888e2be66376ad819e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ca15b1e02bce899de393ad1c7becee744c41c2b", "chunk": "diff --git a/ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java b/ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java\nindex 5d76a2235..2db8adf50 100644\n--- a/ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java\n+++ b/ucte/ucte-converter/src/main/java/com/powsybl/ucte/converter/UcteExporter.java\n\n@@ -593,14 +593,10 @@ public class UcteExporter implements Exporter {\n      */\n     private static void convertRegulation(UcteNetwork ucteNetwork, UcteElementId ucteElementId, TwoWindingsTransformer twoWindingsTransformer) {\n         if (twoWindingsTransformer.hasRatioTapChanger() || twoWindingsTransformer.hasPhaseTapChanger()) {\n-            UctePhaseRegulation uctePhaseRegulation = null;\n-            UcteAngleRegulation ucteAngleRegulation = null;\n-            if (twoWindingsTransformer.hasRatioTapChanger()) {\n-                uctePhaseRegulation = convertRatioTapChanger(twoWindingsTransformer);\n-            }\n-            if (twoWindingsTransformer.hasPhaseTapChanger()) {\n-                ucteAngleRegulation = convertPhaseTapChanger(twoWindingsTransformer);\n-            }\n+            UctePhaseRegulation uctePhaseRegulation = twoWindingsTransformer.getOptionalRatioTapChanger()\n+                    .map(rtc -> convertRatioTapChanger(twoWindingsTransformer)).orElse(null);\n+            UcteAngleRegulation ucteAngleRegulation = twoWindingsTransformer.getOptionalPhaseTapChanger()\n+                    .map(ptc -> convertPhaseTapChanger(twoWindingsTransformer)).orElse(null);\n             UcteRegulation ucteRegulation = new UcteRegulation(ucteElementId, uctePhaseRegulation, ucteAngleRegulation);\n             ucteNetwork.addRegulation(ucteRegulation);\n         }\n"}}, {"oid": "1493f2abbf5588f17c7d490a2f141333a6f7c720", "url": "https://github.com/powsybl/powsybl-core/commit/1493f2abbf5588f17c7d490a2f141333a6f7c720", "message": "take remarks in account\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-07-15T15:17:03Z", "type": "commit"}, {"oid": "0ca15b1e02bce899de393ad1c7becee744c41c2b", "url": "https://github.com/powsybl/powsybl-core/commit/0ca15b1e02bce899de393ad1c7becee744c41c2b", "message": "add missing correction on ucteExporter\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-07-16T07:46:49Z", "type": "commit"}, {"oid": "c0dbbf216b52caa9e96020182192ee9fc4f6ccf5", "url": "https://github.com/powsybl/powsybl-core/commit/c0dbbf216b52caa9e96020182192ee9fc4f6ccf5", "message": "Merge branch 'master' into issue_1368_change_tapChanger_checks", "committedDate": "2020-07-16T15:29:26Z", "type": "commit"}]}