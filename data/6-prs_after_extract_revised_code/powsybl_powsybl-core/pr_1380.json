{"pr_number": 1380, "pr_title": "Add double property", "pr_createdAt": "2020-07-06T10:49:00Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1380", "timeline": [{"oid": "302111c51e38fcddbcef7c94adfe836962c125d6", "url": "https://github.com/powsybl/powsybl-core/commit/302111c51e38fcddbcef7c94adfe836962c125d6", "message": "Add double property\n\nSigned-off-by: Agn\u00e8s Leroy <agnes.leroy@rte-france.com>", "committedDate": "2020-07-06T09:25:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MDU2Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450160567", "bodyText": "It's better to return an OptionalDouble instead of Optional", "author": "mathbagu", "createdAt": "2020-07-06T11:34:40Z", "path": "commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java", "diffHunk": "@@ -32,6 +29,13 @@ private ModuleConfigUtil() {\n         return getOptionalProperty(moduleConfig, names, moduleConfig::getOptionalStringListProperty);\n     }\n \n+    public static Optional<Double> getOptionalDoubleProperty(ModuleConfig moduleConfig, List<String> names) {", "originalCommit": "302111c51e38fcddbcef7c94adfe836962c125d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MzA2Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450163066", "bodyText": "I don't think I can here, because of the way getOptionalProperty is defined: it returns <T> Optional<T>", "author": "agnesLeroy", "createdAt": "2020-07-06T11:40:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MDU2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "283740d1c32ee6c84f7f08970e80807f1c4d6c7e", "chunk": "diff --git a/commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java b/commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java\nindex 7eddd4e14..55517b467 100644\n--- a/commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java\n+++ b/commons/src/main/java/com/powsybl/commons/config/ModuleConfigUtil.java\n\n@@ -29,23 +31,22 @@ public final class ModuleConfigUtil {\n         return getOptionalProperty(moduleConfig, names, moduleConfig::getOptionalStringListProperty);\n     }\n \n-    public static Optional<Double> getOptionalDoubleProperty(ModuleConfig moduleConfig, List<String> names) {\n-        return getOptionalProperty(moduleConfig, names, name -> {\n-            OptionalDouble optionalDouble = moduleConfig.getOptionalDoubleProperty(name);\n-            return optionalDouble.isPresent() ? Optional.of(optionalDouble.getAsDouble()) : Optional.empty();\n-        });\n+    public static OptionalDouble getOptionalDoubleProperty(ModuleConfig moduleConfig, List<String> names) {\n+        return getOptionalProperty(moduleConfig, names, moduleConfig::getOptionalDoubleProperty, OptionalDouble::empty, OptionalDouble::isPresent);\n     }\n \n     private static <T> Optional<T> getOptionalProperty(ModuleConfig moduleConfig, List<String> names, Function<String, Optional<T>> supplier) {\n+        return getOptionalProperty(moduleConfig, names, supplier, Optional::empty, Optional::isPresent);\n+    }\n+\n+    private static <T> T getOptionalProperty(ModuleConfig moduleConfig, List<String> names, Function<String, T> supplier, Supplier<T> factory, Predicate<T> isPresent) {\n         Objects.requireNonNull(moduleConfig);\n         Objects.requireNonNull(names);\n-\n-        Optional<T> res = Optional.empty();\n+        T res = factory.get();\n         Iterator<String> it = names.iterator();\n-        while (!res.isPresent() && it.hasNext()) {\n+        while (!isPresent.test(res) && it.hasNext()) {\n             res = supplier.apply(it.next());\n         }\n-\n         return res;\n     }\n }\n"}}, {"oid": "96306203ef1b28a0765465eefe6b744960f215da", "url": "https://github.com/powsybl/powsybl-core/commit/96306203ef1b28a0765465eefe6b744960f215da", "message": "Add a test on the parameters conversion\n\nSigned-off-by: Agn\u00e8s Leroy <agnes.leroy@rte-france.com>", "committedDate": "2020-07-06T12:46:32Z", "type": "commit"}, {"oid": "96306203ef1b28a0765465eefe6b744960f215da", "url": "https://github.com/powsybl/powsybl-core/commit/96306203ef1b28a0765465eefe6b744960f215da", "message": "Add a test on the parameters conversion\n\nSigned-off-by: Agn\u00e8s Leroy <agnes.leroy@rte-france.com>", "committedDate": "2020-07-06T12:46:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5OTMyOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450199329", "bodyText": "Maybe the default value for this parameter should not be stringList to prevent false positive in the test?", "author": "MioRtia", "createdAt": "2020-07-06T12:53:19Z", "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm;\n+\n+import com.powsybl.iidm.parameters.Parameter;\n+import com.powsybl.iidm.parameters.ParameterDefaultValueConfig;\n+import com.powsybl.iidm.parameters.ParameterType;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+public class ConversionParametersTest {\n+    @Test\n+    public void testConversionParameters() {\n+        Properties properties = new Properties();\n+        properties.put(\"test-param-boolean\", \"true\");\n+        Parameter paramBoolean = new Parameter(\"test-param-boolean\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        Parameter paramBoolean2 = new Parameter(\"test-param-boolean2\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        assertTrue(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean, ParameterDefaultValueConfig.INSTANCE));\n+        assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        properties.put(\"test-param-string\", \"TestProperty\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n+        assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n+        assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"Test1Property\");\n+        stringList.add(\"Test2Property\");\n+        List<String> stringList2 = new ArrayList<>();\n+        stringList2.add(\"Test1Param\");\n+        stringList2.add(\"Test2Param\");\n+        properties.put(\"test-param-string-list\", stringList);\n+        Parameter paramStringList = new Parameter(\"test-param-string-list\", ParameterType.STRING_LIST, \"\", stringList);", "originalCommit": "96306203ef1b28a0765465eefe6b744960f215da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebcc2d76a9ef083062d4577930d51e5346d90a09", "chunk": "diff --git a/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java b/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\nindex d78777e3b..b129186ad 100644\n--- a/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\n+++ b/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\n\n@@ -31,7 +31,7 @@ public class ConversionParametersTest {\n         assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n \n         properties.put(\"test-param-string\", \"TestProperty\");\n-        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"TestParam\");\n         Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n         assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n         assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5OTQ2Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1380#discussion_r450199462", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-07-06T12:53:32Z", "path": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm;\n+\n+import com.powsybl.iidm.parameters.Parameter;\n+import com.powsybl.iidm.parameters.ParameterDefaultValueConfig;\n+import com.powsybl.iidm.parameters.ParameterType;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * @author Agnes Leroy <agnes.leroy at rte-france.com>\n+ */\n+public class ConversionParametersTest {\n+    @Test\n+    public void testConversionParameters() {\n+        Properties properties = new Properties();\n+        properties.put(\"test-param-boolean\", \"true\");\n+        Parameter paramBoolean = new Parameter(\"test-param-boolean\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        Parameter paramBoolean2 = new Parameter(\"test-param-boolean2\", ParameterType.BOOLEAN, \"\", Boolean.FALSE);\n+        assertTrue(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean, ParameterDefaultValueConfig.INSTANCE));\n+        assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        properties.put(\"test-param-string\", \"TestProperty\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n+        assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n+        assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"Test1Property\");\n+        stringList.add(\"Test2Property\");\n+        List<String> stringList2 = new ArrayList<>();\n+        stringList2.add(\"Test1Param\");\n+        stringList2.add(\"Test2Param\");\n+        properties.put(\"test-param-string-list\", stringList);\n+        Parameter paramStringList = new Parameter(\"test-param-string-list\", ParameterType.STRING_LIST, \"\", stringList);\n+        Parameter paramStringList2 = new Parameter(\"test-param-string-list2\", ParameterType.STRING_LIST, \"\", stringList2);\n+        assertEquals(\"Test2Property\", ConversionParameters.readStringListParameter(\"TEST\", properties, paramStringList, ParameterDefaultValueConfig.INSTANCE).get(1));\n+        assertEquals(\"Test1Param\", ConversionParameters.readStringListParameter(\"TEST\", properties, paramStringList2, ParameterDefaultValueConfig.INSTANCE).get(0));\n+\n+        properties.put(\"test-param-double\", 0.06);\n+        Parameter paramDouble = new Parameter(\"test-param-double\", ParameterType.DOUBLE, \"\", 0.06);", "originalCommit": "96306203ef1b28a0765465eefe6b744960f215da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebcc2d76a9ef083062d4577930d51e5346d90a09", "chunk": "diff --git a/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java b/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\nindex d78777e3b..b129186ad 100644\n--- a/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\n+++ b/iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/ConversionParametersTest.java\n\n@@ -31,7 +31,7 @@ public class ConversionParametersTest {\n         assertFalse(ConversionParameters.readBooleanParameter(\"TEST\", properties, paramBoolean2, ParameterDefaultValueConfig.INSTANCE));\n \n         properties.put(\"test-param-string\", \"TestProperty\");\n-        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"Test\");\n+        Parameter paramString = new Parameter(\"test-param-string\", ParameterType.STRING, \"\", \"TestParam\");\n         Parameter paramString2 = new Parameter(\"test-param-string2\", ParameterType.STRING, \"\", \"TestParam\");\n         assertEquals(\"TestProperty\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString, ParameterDefaultValueConfig.INSTANCE));\n         assertEquals(\"TestParam\", ConversionParameters.readStringParameter(\"TEST\", properties, paramString2, ParameterDefaultValueConfig.INSTANCE));\n"}}, {"oid": "ebcc2d76a9ef083062d4577930d51e5346d90a09", "url": "https://github.com/powsybl/powsybl-core/commit/ebcc2d76a9ef083062d4577930d51e5346d90a09", "message": "Fix in the test to avoid false positive\n\nSigned-off-by: Agn\u00e8s Leroy <agnes.leroy@rte-france.com>", "committedDate": "2020-07-06T13:01:01Z", "type": "commit"}, {"oid": "283740d1c32ee6c84f7f08970e80807f1c4d6c7e", "url": "https://github.com/powsybl/powsybl-core/commit/283740d1c32ee6c84f7f08970e80807f1c4d6c7e", "message": "Refactor based on Mathieu's review\n\nSigned-off-by: Agn\u00e8s Leroy <agnes.leroy@rte-france.com>", "committedDate": "2020-07-06T15:33:50Z", "type": "commit"}, {"oid": "de3d9b3a2c86a35e4f9b7d1f91fe134fe7307bf3", "url": "https://github.com/powsybl/powsybl-core/commit/de3d9b3a2c86a35e4f9b7d1f91fe134fe7307bf3", "message": "Add more unit-tests\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-07-07T14:36:49Z", "type": "commit"}, {"oid": "4ff24f8f8e8de345d6f39ed36573884a54744b76", "url": "https://github.com/powsybl/powsybl-core/commit/4ff24f8f8e8de345d6f39ed36573884a54744b76", "message": "Merge branch 'master' into add_double_property", "committedDate": "2020-07-07T14:37:11Z", "type": "commit"}, {"oid": "a838a8b784cc008b32f2ce6659870e29910e6cef", "url": "https://github.com/powsybl/powsybl-core/commit/a838a8b784cc008b32f2ce6659870e29910e6cef", "message": "Merge branch 'master' into add_double_property", "committedDate": "2020-07-07T14:57:09Z", "type": "commit"}]}