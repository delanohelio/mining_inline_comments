{"pr_number": 1255, "pr_title": "Migration IIDM extensions to new extension API on CoordinatedReactiveControl", "pr_createdAt": "2020-04-02T09:07:52Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1255", "timeline": [{"oid": "5367d2e3d653c1657a1357a08077fe8fdf2201d0", "url": "https://github.com/powsybl/powsybl-core/commit/5367d2e3d653c1657a1357a08077fe8fdf2201d0", "message": "To implementation new Extension API on CoordinatedReactiveControl\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>\nSigned-off-by: tadam <tadam@silicom.fr>", "committedDate": "2020-04-02T08:59:58Z", "type": "commit"}, {"oid": "142f4cc89a1427da037127cae8f809350766dfa8", "url": "https://github.com/powsybl/powsybl-core/commit/142f4cc89a1427da037127cae8f809350766dfa8", "message": "Increase code coverage\n\nSigned-off-by: Thomas ADAM <tadam@silicom.fr>", "committedDate": "2020-04-02T09:17:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzMDgxMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1255#discussion_r404630810", "bodyText": "I think we should use the new design here to be sure that the extension use the same NetworkFactory (persistent or transient) than the network", "author": "mathbagu", "createdAt": "2020-04-07T08:29:50Z", "path": "cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java", "diffHunk": "@@ -112,7 +113,7 @@ private boolean setRegulatingControlVoltage(String controlId,\n \n         // add qPercent as an extension\n         if (!Double.isNaN(qPercent)) {\n-            CoordinatedReactiveControl coordinatedReactiveControl = new CoordinatedReactiveControl(gen, qPercent);\n+            CoordinatedReactiveControl coordinatedReactiveControl = new CoordinatedReactiveControlImpl(gen, qPercent);\n             gen.addExtension(CoordinatedReactiveControl.class, coordinatedReactiveControl);", "originalCommit": "142f4cc89a1427da037127cae8f809350766dfa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4ade17f06006d140ed5e1d2fac34774fd6d0171", "chunk": "diff --git a/cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java b/cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java\nindex 785f110e4..8e756f8c1 100644\n--- a/cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java\n+++ b/cgmes/cgmes-conversion/src/main/java/com/powsybl/cgmes/conversion/RegulatingControlMappingForGenerators.java\n\n@@ -113,8 +112,9 @@ public class RegulatingControlMappingForGenerators {\n \n         // add qPercent as an extension\n         if (!Double.isNaN(qPercent)) {\n-            CoordinatedReactiveControl coordinatedReactiveControl = new CoordinatedReactiveControlImpl(gen, qPercent);\n-            gen.addExtension(CoordinatedReactiveControl.class, coordinatedReactiveControl);\n+            gen.newExtension(CoordinatedReactiveControlAdder.class)\n+                    .withQPercent(qPercent)\n+                    .add();\n         }\n \n         return true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzMTE3MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1255#discussion_r404631171", "bodyText": "I think we should add javadoc to this interface", "author": "mathbagu", "createdAt": "2020-04-07T08:30:23Z", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControl.java", "diffHunk": "@@ -6,42 +6,20 @@\n  */\n package com.powsybl.iidm.network.extensions;\n \n-import com.powsybl.commons.PowsyblException;\n-import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.commons.extensions.Extension;\n import com.powsybl.iidm.network.Generator;\n \n /**\n- * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ * @author Thomas ADAM <tadam at silicom.fr>\n  */\n-public class CoordinatedReactiveControl extends AbstractExtension<Generator> {\n-\n-    private double qPercent;\n-\n-    public CoordinatedReactiveControl(Generator generator, double qPercent) {\n-        super(generator);\n-        this.qPercent = checkQPercent(qPercent);\n-    }\n+public interface CoordinatedReactiveControl extends Extension<Generator> {\n \n     @Override\n-    public String getName() {\n+    default String getName() {\n         return \"coordinatedReactiveControl\";\n     }\n \n-    public double getQPercent() {\n-        return qPercent;\n-    }\n+    double getQPercent();\n \n-    public void setQPercent(double qPercent) {\n-        this.qPercent = checkQPercent(qPercent);\n-    }\n-\n-    private static double checkQPercent(double qPercent) {\n-        if (Double.isNaN(qPercent)) {\n-            throw new PowsyblException(\"Undefined value for qPercent\");\n-        }\n-        if (qPercent < 0.0 || qPercent > 100.0) {\n-            throw new PowsyblException(\"Unexpected value for qPercent: \" + qPercent);\n-        }\n-        return qPercent;\n-    }\n+    void setQPercent(double qPercent);", "originalCommit": "142f4cc89a1427da037127cae8f809350766dfa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e00f6f56896de01d8835b55a3878bb101af93a1d", "chunk": "diff --git a/iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControl.java b/iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControl.java\nindex 28ed76730..c6ca54264 100644\n--- a/iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControl.java\n+++ b/iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControl.java\n\n@@ -19,7 +19,15 @@ public interface CoordinatedReactiveControl extends Extension<Generator> {\n         return \"coordinatedReactiveControl\";\n     }\n \n+    /**\n+     * Get the percent of the coordinated reactive control that comes\n+     * from the generator to which this extension is linked.\n+     */\n     double getQPercent();\n \n+    /**\n+     * Set the percent of the coordinated reactive control that comes\n+     * from the generator to which this extension is linked.\n+     */\n     void setQPercent(double qPercent);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNDEzMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1255#discussion_r404634131", "bodyText": "I think we should use the new design there", "author": "mathbagu", "createdAt": "2020-04-07T08:35:11Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControlXmlTest.java", "diffHunk": "@@ -22,25 +22,30 @@\n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n-public class CoordinatedReactiveControlXmlSerializerTest extends AbstractConverterTest {\n+public class CoordinatedReactiveControlXmlTest extends AbstractConverterTest {\n \n     @Test\n     public void test() throws IOException {\n         Network network = EurostagTutorialExample1Factory.create();\n         network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n         Generator gen = network.getGenerator(\"GEN\");\n+        assertNotNull(gen);\n \n-        CoordinatedReactiveControl control = new CoordinatedReactiveControl(gen, 100.0);\n-        gen.addExtension(CoordinatedReactiveControl.class, control);\n+        CoordinatedReactiveControl coordinatedReactiveControl = new CoordinatedReactiveControlImpl(gen, 100.0);\n+        gen.addExtension(CoordinatedReactiveControl.class, coordinatedReactiveControl);", "originalCommit": "142f4cc89a1427da037127cae8f809350766dfa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4ade17f06006d140ed5e1d2fac34774fd6d0171", "chunk": "diff --git a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControlXmlTest.java b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControlXmlTest.java\nindex 55320b2b9..e6ec31ac5 100644\n--- a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControlXmlTest.java\n+++ b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/CoordinatedReactiveControlXmlTest.java\n\n@@ -31,8 +31,7 @@ public class CoordinatedReactiveControlXmlTest extends AbstractConverterTest {\n         Generator gen = network.getGenerator(\"GEN\");\n         assertNotNull(gen);\n \n-        CoordinatedReactiveControl coordinatedReactiveControl = new CoordinatedReactiveControlImpl(gen, 100.0);\n-        gen.addExtension(CoordinatedReactiveControl.class, coordinatedReactiveControl);\n+        gen.newExtension(CoordinatedReactiveControlAdder.class).withQPercent(100.0).add();\n \n         Network network2 = roundTripXmlTest(network,\n                 NetworkXml::writeAndValidate,\n"}}, {"oid": "a4ade17f06006d140ed5e1d2fac34774fd6d0171", "url": "https://github.com/powsybl/powsybl-core/commit/a4ade17f06006d140ed5e1d2fac34774fd6d0171", "message": "use new mecanism for CoordinatedReactiveControl use\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-04-07T13:40:49Z", "type": "commit"}, {"oid": "e00f6f56896de01d8835b55a3878bb101af93a1d", "url": "https://github.com/powsybl/powsybl-core/commit/e00f6f56896de01d8835b55a3878bb101af93a1d", "message": "Add javadoc\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-04-07T13:51:39Z", "type": "commit"}, {"oid": "81b6c209032c528a13a4ee9a1dabb77531808a14", "url": "https://github.com/powsybl/powsybl-core/commit/81b6c209032c528a13a4ee9a1dabb77531808a14", "message": "Merge branch 'master' into issue_1206_CoordinatedReactiveControl", "committedDate": "2020-04-08T07:43:20Z", "type": "commit"}]}