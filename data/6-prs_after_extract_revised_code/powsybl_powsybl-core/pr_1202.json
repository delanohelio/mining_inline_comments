{"pr_number": 1202, "pr_title": "Introduction of non linear shunt compensators", "pr_createdAt": "2020-03-04T08:03:33Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1202", "timeline": [{"oid": "76ea2726951bf4a2fcee435896d7c345484db9ed", "url": "https://github.com/powsybl/powsybl-core/commit/76ea2726951bf4a2fcee435896d7c345484db9ed", "message": "Change of shunt API, impl and use\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-04T08:11:57Z", "type": "forcePushed"}, {"oid": "dca9f3a06322825a81a2fd240e8d3381273b82de", "url": "https://github.com/powsybl/powsybl-core/commit/dca9f3a06322825a81a2fd240e8d3381273b82de", "message": "add tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-04T12:29:55Z", "type": "forcePushed"}, {"oid": "8a332a111325e8a2762e64978bca3a75f804ba79", "url": "https://github.com/powsybl/powsybl-core/commit/8a332a111325e8a2762e64978bca3a75f804ba79", "message": "add tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\nadd tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-04T14:51:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2MDgyMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388160820", "bodyText": "Are these two methods really public?", "author": "mathbagu", "createdAt": "2020-03-05T09:10:47Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorLinearModelImpl.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.iidm.network.ShuntCompensatorLinearModel;\n+import com.powsybl.iidm.network.ShuntCompensatorModelType;\n+import com.powsybl.iidm.network.Validable;\n+import com.powsybl.iidm.network.ValidationUtil;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+class ShuntCompensatorLinearModelImpl extends AbstractShuntCompensatorModel implements ShuntCompensatorLinearModel {\n+\n+    private double bPerSection;\n+\n+    private double gPerSection;\n+\n+    private int maximumSectionCount;\n+\n+    ShuntCompensatorLinearModelImpl(double bPerSection, double gPerSection, int maximumSectionCount) {\n+        this.bPerSection = bPerSection;\n+        this.gPerSection = gPerSection;\n+        this.maximumSectionCount = maximumSectionCount;\n+    }\n+\n+    @Override\n+    public double getbPerSection() {\n+        return bPerSection;\n+    }\n+\n+    @Override\n+    public ShuntCompensatorLinearModel setbPerSection(double bPerSection) {\n+        ValidationUtil.checkbPerSection(shuntCompensator, bPerSection);\n+        double oldValue = this.bPerSection;\n+        this.bPerSection = bPerSection;\n+        shuntCompensator.notifyUpdate(\"bPerSection\", oldValue, bPerSection);\n+        return this;\n+    }\n+\n+    @Override\n+    public double getgPerSection() {\n+        return gPerSection;\n+    }\n+\n+    @Override\n+    public ShuntCompensatorLinearModel setgPerSection(double gPerSection) {\n+        double oldValue = this.gPerSection;\n+        this.gPerSection = gPerSection;\n+        shuntCompensator.notifyUpdate(\"gPerSection\", oldValue, gPerSection);\n+        return this;\n+    }\n+\n+    @Override\n+    public int getMaximumSectionCount() {\n+        return maximumSectionCount;\n+    }\n+\n+    @Override\n+    public ShuntCompensatorLinearModel setMaximumSectionCount(int maximumSectionCount) {\n+        ValidationUtil.checkSections(shuntCompensator, shuntCompensator.getCurrentSectionCount(), maximumSectionCount);\n+        int oldValue = this.maximumSectionCount;\n+        this.maximumSectionCount = maximumSectionCount;\n+        shuntCompensator.notifyUpdate(\"maximumSectionCount\", oldValue, maximumSectionCount);\n+        return this;\n+    }\n+\n+    @Override\n+    public ShuntCompensatorModelType getType() {\n+        return ShuntCompensatorModelType.LINEAR;\n+    }\n+\n+    @Override\n+    public void checkCurrentSection(int currentSectionCount) {\n+        checkCurrentSection(shuntCompensator, currentSectionCount);\n+    }\n+\n+    @Override\n+    public void checkCurrentSection(Validable validable, int currentSectionCount) {\n+        ValidationUtil.checkSections(validable, currentSectionCount, maximumSectionCount);\n+    }", "originalCommit": "8a332a111325e8a2762e64978bca3a75f804ba79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorLinearModelImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorLinearModelImpl.java\nindex a6e337179..2130c9343 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorLinearModelImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorLinearModelImpl.java\n\n@@ -74,16 +74,6 @@ class ShuntCompensatorLinearModelImpl extends AbstractShuntCompensatorModel impl\n         return ShuntCompensatorModelType.LINEAR;\n     }\n \n-    @Override\n-    public void checkCurrentSection(int currentSectionCount) {\n-        checkCurrentSection(shuntCompensator, currentSectionCount);\n-    }\n-\n-    @Override\n-    public void checkCurrentSection(Validable validable, int currentSectionCount) {\n-        ValidationUtil.checkSections(validable, currentSectionCount, maximumSectionCount);\n-    }\n-\n     @Override\n     public double getB(int sectionNum) {\n         return bPerSection * sectionNum;\n"}}, {"oid": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "url": "https://github.com/powsybl/powsybl-core/commit/44ec378cd400bfc7d53bb2b7e2a647b306dda722", "message": "add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-05T13:30:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzYzNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388777636", "bodyText": "I went to the website documentation about shunt compensators to better understand your changes, but it was not enough for me to understand... I guess you have edited that page of the website in a branch to update that doc for the next release: maybe we should discuss it.", "author": "agnesLeroy", "createdAt": "2020-03-06T08:49:22Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorModel.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public interface ShuntCompensatorModel {\n+\n+    /**\n+     * Get the maximum number of sections.\n+     */\n+    int getMaximumSectionCount();\n+\n+    /**\n+     * Get the susceptance in S of the section with a given section number if it exists.\n+     * Throw an exception if such a section does not exist.\n+     */\n+    double getB(int sectionNum);\n+\n+    /**\n+     * Get the conductance in S of the section with a given section number if it exists.\n+     * Throw an exception if such a section does not exist.\n+     */\n+    double getG(int sectionNum);\n+}", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0NDQ3Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389644476", "bodyText": "I am keeping your comment for now since I have not yet submitted a documentation PR as the APIs are still in construction. I will get back to you after the APIs are fixed.", "author": "miovd", "createdAt": "2020-03-09T13:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzYzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyNDc2OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r397224769", "bodyText": "I have created a PR for documentation (and assigned you as reviewer): powsybl/powsybl.github.io#125. Could you please take a look at it to see if it is clearer now?", "author": "miovd", "createdAt": "2020-03-24T15:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzYzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0MDMwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r397240300", "bodyText": "@MioRtia I just approved that PR, it looks much clearer to me with your changes.", "author": "agnesLeroy", "createdAt": "2020-03-24T15:25:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3NzYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorModel.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorModel.java\nindex e6e407b1b..286579554 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorModel.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorModel.java\n\n@@ -11,11 +11,6 @@ package com.powsybl.iidm.network;\n  */\n public interface ShuntCompensatorModel {\n \n-    /**\n-     * Get the maximum number of sections.\n-     */\n-    int getMaximumSectionCount();\n-\n     /**\n      * Get the susceptance in S of the section with a given section number if it exists.\n      * Throw an exception if such a section does not exist.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjM3Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388782377", "bodyText": "We could imagine having only this model and using it to create either linear or non-linear shunts, or am I wrong?", "author": "agnesLeroy", "createdAt": "2020-03-06T09:00:01Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorNonLinearModel.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public interface ShuntCompensatorNonLinearModel extends ShuntCompensatorModel {\n+\n+    interface Section {\n+\n+        /**\n+         * Get the susceptance in S of the section.\n+         */\n+        double getB();\n+\n+        /**\n+         * Get the conductance in S of the section.\n+         */\n+        double getG();\n+    }\n+\n+    /**\n+     * Get the maximum susceptance for a section in S.\n+     */\n+    double getMaximumB();\n+\n+    /**\n+     * Get the maximum conductance for a section in S.\n+     */\n+    double getMaximumG();\n+\n+    /**\n+     * Get an optional of the section associated with a given section number if it exists.\n+     * If such a section does not exist, return an empty optional.\n+     *\n+     */\n+    Optional<Section> getSection(int sectionNum);\n+\n+    /**\n+     * Get all the sections associated with their section number.\n+     */\n+    Map<Integer, Section> getSections();\n+\n+    /**\n+     * For a given section number, add a section with a given susceptance and conductance in S to the model.\n+     * If a section already exists for this section number, respectively replace its susceptance and conductance with the given susceptance and conductance.\n+     */\n+    ShuntCompensatorNonLinearModel addOrReplaceSection(int sectionNum, double b, double g);\n+\n+    /**\n+     * Remove the section associated with a given section number if it exists <b>and</b> the current section count is different of the given section number.\n+     * Else, throw an exception.\n+     */\n+    ShuntCompensatorNonLinearModel removeSection(int sectionNum);\n+}", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMTg0Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388811847", "bodyText": "Should the getMaximumSectionCount be on the Shunt API instead of the Model API? Is it specific to a model?", "author": "mathbagu", "createdAt": "2020-03-06T09:59:27Z", "path": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java", "diffHunk": "@@ -1336,11 +1340,11 @@ private void writeShunts(AmplExportContext context) throws IOException {\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n                 double b1 = 0;\n-                double b2 = sc.getbPerSection() * sc.getMaximumSectionCount() * zb;\n+                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getbPerSection() * sc.getModel().getMaximumSectionCount() * zb;", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwNzEwMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389607101", "bodyText": "Indeed, I will put in on the Shunt API.", "author": "miovd", "createdAt": "2020-03-09T11:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMTg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java b/ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java\nindex 822aa52e7..05de8af7f 100644\n--- a/ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java\n+++ b/ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkWriter.java\n\n@@ -1340,11 +1340,11 @@ public class AmplNetworkWriter {\n                 double vb = t.getVoltageLevel().getNominalV();\n                 double zb = vb * vb / AmplConstants.SB;\n                 double b1 = 0;\n-                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getbPerSection() * sc.getModel().getMaximumSectionCount() * zb;\n+                double b2 = sc.getModel(ShuntCompensatorLinearModel.class).getbPerSection() * sc.getMaximumSectionCount() * zb;\n                 double minB = Math.min(b1, b2);\n                 double maxB = Math.max(b1, b2);\n                 double b = sc.getCurrentB() * zb;\n-                int points = sc.getModel().getMaximumSectionCount() < 1 ? 0 : sc.getModel().getMaximumSectionCount() - 1;\n+                int points = sc.getMaximumSectionCount() < 1 ? 0 : sc.getMaximumSectionCount() - 1;\n                 formatter.writeCell(variantIndex)\n                         .writeCell(num)\n                         .writeCell(busNum)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388812728", "bodyText": "Should you add a default behaviour? Or do we decide that the API breaks", "author": "mathbagu", "createdAt": "2020-03-06T10:01:13Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensator.java", "diffHunk": "@@ -53,35 +40,32 @@\n     ShuntCompensator setCurrentSectionCount(int currentSectionCount);\n \n     /**\n-     * Get the susceptance per section in S.\n+     * Get the susceptance for the current section count.\n+     * <p>\n+     * Depends on the working variant.\n+     * @see VariantManager\n      */\n-    double getbPerSection();\n+    double getCurrentB();\n \n     /**\n-     * Set the susceptance per section in S.\n-     *\n-     * @param bPerSection the susceptance per section\n-     * @return the shunt compensator to chain method calls.\n+     * Get the conductance for the current section count.\n+     * <p>\n+     * Depends on the working variant.\n+     * @see VariantManager\n      */\n-    ShuntCompensator setbPerSection(double bPerSection);\n+    double getCurrentG();\n \n     /**\n-     * Get the susceptance for the maximum section count.\n-     *\n-     * @deprecated Use {@link #getbPerSection()} * {@link #getMaximumSectionCount()} instead.\n+     * Get the model type of the shunt compensator (linear or non-linear)\n      */\n-    @Deprecated\n-    default double getMaximumB() {\n-        return getbPerSection() * getMaximumSectionCount();\n-    }\n+    ShuntCompensatorModelType getModelType();\n \n     /**\n-     * Get the susceptance for the current section counts.\n-     * <p>\n-     * Depends on the working variant.\n-     * @see VariantManager\n+     * Get the shunt model.\n      */\n-    double getCurrentB();\n+    ShuntCompensatorModel getModel();\n+\n+    <M extends ShuntCompensatorModel> M getModel(Class<M> modelType);", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgzMDQzMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388830430", "bodyText": "For me, it would be clearer to break the API because I think keeping a mix between the old and new APIs would lead to more errors.", "author": "miovd", "createdAt": "2020-03-06T10:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNzY5OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388927698", "bodyText": "Why do you create getModel() and getModelType? Couldn't the model be able to inform about its type?", "author": "agnesLeroy", "createdAt": "2020-03-06T14:19:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0NTQzNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389645434", "bodyText": "Yes but when calling it (from ShuntCompensator), we do not have this information, hence these two methods to retrieve it.", "author": "miovd", "createdAt": "2020-03-09T13:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczNjQ2OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389736468", "bodyText": "Maybe  getModelType should be renamed getShuntType then?", "author": "agnesLeroy", "createdAt": "2020-03-09T14:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNTE5OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r391715198", "bodyText": "Isn't it a bit redundant to put \"shuntType\" in a method that only exists for shunts? (I put getModelType() because getType() already exists and returns which kind of connectable it is).", "author": "miovd", "createdAt": "2020-03-12T15:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMjcyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMzMyNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388813327", "bodyText": "To be discussed: should we design the API like we did for the extension:\nnewModel(ShuntCompensatorLinearModelAdder.class);", "author": "mathbagu", "createdAt": "2020-03-06T10:02:28Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/ShuntCompensatorAdder.java", "diffHunk": "@@ -26,9 +26,9 @@\n  */\n public interface ShuntCompensatorAdder extends InjectionAdder<ShuntCompensatorAdder> {\n \n-    ShuntCompensatorAdder setbPerSection(double bPerSection);\n+    ShuntCompensatorLinearModelAdder newLinearModel();\n \n-    ShuntCompensatorAdder setMaximumSectionCount(int maximumSectionCount);\n+    ShuntCompensatorNonLinearModelAdder newNonLinearModel();", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMDE5MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388930190", "bodyText": "Do you think that choosing the same design here could improve the user experience?", "author": "agnesLeroy", "createdAt": "2020-03-06T14:23:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMzMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MjUxOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389542519", "bodyText": "It is mostly to keep an easy way to add a custom model... but doesn't it make the API more complex? (as in, it may make it more difficult to understand what \"model\" refers to)? Maybe we should keep newLinearModel, newNonLinearModel and add newModel(...)?\nEDIT I am not sure that the denomination \"shunt model\" is standard. In CGMES for example, \"shunt models\" are not mentioned, the concepts are directly \"non linear shunt\" and \"linear shunt\".", "author": "miovd", "createdAt": "2020-03-09T09:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMzMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3MTU1Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389671557", "bodyText": "After some thinking, I do not think it is a good idea to implement a newModel(...) method, I am not sure we want to extend the possibilities of shunt models. It is different from extensions where this is the purpose of the API.", "author": "miovd", "createdAt": "2020-03-09T13:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxMzMyNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNDk2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388814965", "bodyText": "I'm not sure about this: the model should be attached to the ShuntCompensator in the constructor, like it's done for tap changer", "author": "mathbagu", "createdAt": "2020-03-06T10:05:38Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.iidm.network.ShuntCompensatorModel;\n+import com.powsybl.iidm.network.Validable;\n+import com.powsybl.iidm.network.ValidationException;\n+\n+import java.util.Objects;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+\n+    protected ShuntCompensatorImpl shuntCompensator;\n+\n+    @Override\n+    public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n+    }", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3MjE3NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389572174", "bodyText": "It doesn't work as tapchangers are created when the transformer is already built, which is not the case for models (they are created at the same time since it does not make sense to create a shunt without model).", "author": "miovd", "createdAt": "2020-03-09T10:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwNTg5Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389605896", "bodyText": "I can check however that the shunt is only defined once. Is it enough for you?", "author": "miovd", "createdAt": "2020-03-09T11:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNDk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\nindex e33a8a898..2f289340a 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n\n@@ -6,44 +6,22 @@\n  */\n package com.powsybl.iidm.network.impl;\n \n-import com.powsybl.iidm.network.ShuntCompensatorModel;\n-import com.powsybl.iidm.network.Validable;\n-import com.powsybl.iidm.network.ValidationException;\n+import com.powsybl.commons.PowsyblException;\n \n import java.util.Objects;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n-abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelWrapper {\n \n     protected ShuntCompensatorImpl shuntCompensator;\n \n     @Override\n     public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n-        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n-    }\n-\n-    @Override\n-    public ShuntCompensatorModel getModel() {\n-        return this;\n-    }\n-\n-    @Override\n-    public <M extends ShuntCompensatorModel> M getModel(Class<M> modelType) {\n-        if (modelType == null) {\n-            throw new IllegalArgumentException(\"shunt compensator model type is null\");\n-        }\n-        if (modelType.isInstance(this)) {\n-            return modelType.cast(this);\n+        if (this.shuntCompensator != null) {\n+            throw new PowsyblException(\"Owner (shunt compensator) already defined\");\n         }\n-        throw new ValidationException(shuntCompensator, \"incorrect shunt compensator model type \" +\n-                modelType.getName() + \", expected \" + getClass());\n-    }\n-\n-    void checkCurrentSection(int currentSectionCount) {\n-        checkCurrentSection(shuntCompensator, currentSectionCount);\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n     }\n-\n-    abstract void checkCurrentSection(Validable validable, int currentSectionCount);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNTM3MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388815370", "bodyText": "Not private-package, but protected instead?", "author": "mathbagu", "createdAt": "2020-03-06T10:06:23Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.iidm.network.ShuntCompensatorModel;\n+import com.powsybl.iidm.network.Validable;\n+import com.powsybl.iidm.network.ValidationException;\n+\n+import java.util.Objects;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+\n+    protected ShuntCompensatorImpl shuntCompensator;\n+\n+    @Override\n+    public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n+    }\n+\n+    @Override\n+    public ShuntCompensatorModel getModel() {\n+        return this;\n+    }\n+\n+    @Override\n+    public <M extends ShuntCompensatorModel> M getModel(Class<M> modelType) {\n+        if (modelType == null) {\n+            throw new IllegalArgumentException(\"shunt compensator model type is null\");\n+        }\n+        if (modelType.isInstance(this)) {\n+            return modelType.cast(this);\n+        }\n+        throw new ValidationException(shuntCompensator, \"incorrect shunt compensator model type \" +\n+                modelType.getName() + \", expected \" + getClass());\n+    }\n+\n+    void checkCurrentSection(int currentSectionCount) {", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwNzU4Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389607587", "bodyText": "After changing a bit the implementation, I deleted this method.", "author": "miovd", "createdAt": "2020-03-09T11:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNTM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\nindex e33a8a898..2f289340a 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n\n@@ -6,44 +6,22 @@\n  */\n package com.powsybl.iidm.network.impl;\n \n-import com.powsybl.iidm.network.ShuntCompensatorModel;\n-import com.powsybl.iidm.network.Validable;\n-import com.powsybl.iidm.network.ValidationException;\n+import com.powsybl.commons.PowsyblException;\n \n import java.util.Objects;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n-abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelWrapper {\n \n     protected ShuntCompensatorImpl shuntCompensator;\n \n     @Override\n     public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n-        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n-    }\n-\n-    @Override\n-    public ShuntCompensatorModel getModel() {\n-        return this;\n-    }\n-\n-    @Override\n-    public <M extends ShuntCompensatorModel> M getModel(Class<M> modelType) {\n-        if (modelType == null) {\n-            throw new IllegalArgumentException(\"shunt compensator model type is null\");\n-        }\n-        if (modelType.isInstance(this)) {\n-            return modelType.cast(this);\n+        if (this.shuntCompensator != null) {\n+            throw new PowsyblException(\"Owner (shunt compensator) already defined\");\n         }\n-        throw new ValidationException(shuntCompensator, \"incorrect shunt compensator model type \" +\n-                modelType.getName() + \", expected \" + getClass());\n-    }\n-\n-    void checkCurrentSection(int currentSectionCount) {\n-        checkCurrentSection(shuntCompensator, currentSectionCount);\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n     }\n-\n-    abstract void checkCurrentSection(Validable validable, int currentSectionCount);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNTQ2Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388815462", "bodyText": "Same question there", "author": "mathbagu", "createdAt": "2020-03-06T10:06:35Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.iidm.network.ShuntCompensatorModel;\n+import com.powsybl.iidm.network.Validable;\n+import com.powsybl.iidm.network.ValidationException;\n+\n+import java.util.Objects;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+\n+    protected ShuntCompensatorImpl shuntCompensator;\n+\n+    @Override\n+    public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n+    }\n+\n+    @Override\n+    public ShuntCompensatorModel getModel() {\n+        return this;\n+    }\n+\n+    @Override\n+    public <M extends ShuntCompensatorModel> M getModel(Class<M> modelType) {\n+        if (modelType == null) {\n+            throw new IllegalArgumentException(\"shunt compensator model type is null\");\n+        }\n+        if (modelType.isInstance(this)) {\n+            return modelType.cast(this);\n+        }\n+        throw new ValidationException(shuntCompensator, \"incorrect shunt compensator model type \" +\n+                modelType.getName() + \", expected \" + getClass());\n+    }\n+\n+    void checkCurrentSection(int currentSectionCount) {\n+        checkCurrentSection(shuntCompensator, currentSectionCount);\n+    }\n+\n+    abstract void checkCurrentSection(Validable validable, int currentSectionCount);", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\nindex e33a8a898..2f289340a 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/AbstractShuntCompensatorModel.java\n\n@@ -6,44 +6,22 @@\n  */\n package com.powsybl.iidm.network.impl;\n \n-import com.powsybl.iidm.network.ShuntCompensatorModel;\n-import com.powsybl.iidm.network.Validable;\n-import com.powsybl.iidm.network.ValidationException;\n+import com.powsybl.commons.PowsyblException;\n \n import java.util.Objects;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n-abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelHolder {\n+abstract class AbstractShuntCompensatorModel implements ShuntCompensatorModelWrapper {\n \n     protected ShuntCompensatorImpl shuntCompensator;\n \n     @Override\n     public void setShuntCompensator(ShuntCompensatorImpl shuntCompensator) {\n-        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n-    }\n-\n-    @Override\n-    public ShuntCompensatorModel getModel() {\n-        return this;\n-    }\n-\n-    @Override\n-    public <M extends ShuntCompensatorModel> M getModel(Class<M> modelType) {\n-        if (modelType == null) {\n-            throw new IllegalArgumentException(\"shunt compensator model type is null\");\n-        }\n-        if (modelType.isInstance(this)) {\n-            return modelType.cast(this);\n+        if (this.shuntCompensator != null) {\n+            throw new PowsyblException(\"Owner (shunt compensator) already defined\");\n         }\n-        throw new ValidationException(shuntCompensator, \"incorrect shunt compensator model type \" +\n-                modelType.getName() + \", expected \" + getClass());\n-    }\n-\n-    void checkCurrentSection(int currentSectionCount) {\n-        checkCurrentSection(shuntCompensator, currentSectionCount);\n+        this.shuntCompensator = Objects.requireNonNull(shuntCompensator);\n     }\n-\n-    abstract void checkCurrentSection(Validable validable, int currentSectionCount);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNjQ2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388816465", "bodyText": "It's strange to not replace the section whereas it's totally allowed later? It's not really important but it's questioning me", "author": "mathbagu", "createdAt": "2020-03-06T10:08:32Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java", "diffHunk": "@@ -46,16 +43,106 @@ protected String getTypeDescription() {\n         return \"Shunt compensator\";\n     }\n \n+    class ShuntCompensatorLinearModelAdderImpl implements ShuntCompensatorLinearModelAdder {\n+\n+        private double bPerSection = Double.NaN;\n+\n+        private double gPerSection = Double.NaN;\n+\n+        private int maximumSectionCount = -1;\n+\n+        @Override\n+        public ShuntCompensatorLinearModelAdder setbPerSection(double bPerSection) {\n+            this.bPerSection = bPerSection;\n+            return this;\n+        }\n+\n+        @Override\n+        public ShuntCompensatorLinearModelAdder setgPerSection(double gPerSection) {\n+            this.gPerSection = gPerSection;\n+            return this;\n+        }\n+\n+        @Override\n+        public ShuntCompensatorLinearModelAdder setMaximumSectionCount(int maximumSectionCount) {\n+            this.maximumSectionCount = maximumSectionCount;\n+            return this;\n+        }\n+\n+        @Override\n+        public ShuntCompensatorAdder add() {\n+            ValidationUtil.checkbPerSection(ShuntCompensatorAdderImpl.this, bPerSection);\n+            ValidationUtil.checkMaximumSectionCount(ShuntCompensatorAdderImpl.this, maximumSectionCount);\n+            model = new ShuntCompensatorLinearModelImpl(bPerSection, gPerSection, maximumSectionCount);\n+            return ShuntCompensatorAdderImpl.this;\n+        }\n+    }\n+\n+    class ShuntCompensatorNonLinearModelAdderImpl implements ShuntCompensatorNonLinearModelAdder {\n+\n+        private final TreeMap<Integer, ShuntCompensatorNonLinearModelImpl.SectionImpl> sections = new TreeMap<>();\n+\n+        class SectionAdderImpl implements SectionAdder {\n+\n+            private int sectionNum = -1;\n+\n+            private double b = Double.NaN;\n+\n+            private double g = Double.NaN;\n+\n+            @Override\n+            public SectionAdder setSectionNum(int sectionNum) {\n+                this.sectionNum = sectionNum;\n+                return this;\n+            }\n+\n+            @Override\n+            public SectionAdder setB(double b) {\n+                this.b = b;\n+                return this;\n+            }\n+\n+            @Override\n+            public SectionAdder setG(double g) {\n+                this.g = g;\n+                return this;\n+            }\n+\n+            @Override\n+            public ShuntCompensatorNonLinearModelAdder endSection() {\n+                ValidationUtil.checkSectionNumber(ShuntCompensatorAdderImpl.this, sectionNum);\n+                if (sections.containsKey(sectionNum)) {\n+                    throw new ValidationException(ShuntCompensatorAdderImpl.this, \"a section is already defined at this number\");\n+                }", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU1NjAwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389556000", "bodyText": "Not sure if choosing to replace a section in a built model and creating the same section twice while building the whole model is the same thing? I think the second case is more probably an error but I may be mistaken. We can delete this validation condition and consider it is allowed to rewrite a section while building the model.", "author": "miovd", "createdAt": "2020-03-09T09:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNjQ2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNzk4OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388817989", "bodyText": "model.getModel() is really stange design: is the variable name is the good one? The adder set this variable with a model implementation, so I don't understand why the model is able to return a model...\nI think you look to the ReactiveLimitsHolder? The design is a bit different because we instanciate ReactiveLimitsHolderImpl?", "author": "mathbagu", "createdAt": "2020-03-06T10:11:40Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java", "diffHunk": "@@ -92,16 +179,19 @@ public ShuntCompensatorAdder setTargetDeadband(double targetDeadband) {\n     public ShuntCompensatorImpl add() {\n         String id = checkAndGetUniqueId();\n         TerminalExt terminal = checkAndGetTerminal();\n-        ValidationUtil.checkbPerSection(this, bPerSection);\n-        ValidationUtil.checkSections(this, currentSectionCount, maximumSectionCount);\n+        if (model == null) {\n+            throw new ValidationException(this, \"the shunt compensator model has not been defined\");\n+        }\n+        model.getModel(AbstractShuntCompensatorModel.class).checkCurrentSection(this, currentSectionCount);", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU1NjI0MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389556241", "bodyText": "Yes, I may have not named the objects well, I will change a bit the design in my next commit", "author": "miovd", "createdAt": "2020-03-09T09:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNzk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\nindex fdf7dd59e..d59f737ce 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\n\n@@ -182,7 +182,10 @@ class ShuntCompensatorAdderImpl extends AbstractInjectionAdder<ShuntCompensatorA\n         if (model == null) {\n             throw new ValidationException(this, \"the shunt compensator model has not been defined\");\n         }\n-        model.getModel(AbstractShuntCompensatorModel.class).checkCurrentSection(this, currentSectionCount);\n+        ValidationUtil.checkSections(this, currentSectionCount, model.getMaximumSectionCount());\n+        if (!model.containsSection(currentSectionCount)) {\n+            throw new ValidationException(this, \"unexpected section number (\" + currentSectionCount + \"): no existing associated section\");\n+        }\n         ValidationUtil.checkRegulatingTerminal(this, regulatingTerminal, getNetwork());\n         ValidationUtil.checkVoltageControl(this, voltageRegulatorOn, targetV);\n         ValidationUtil.checkTargetDeadband(this, \"shunt compensator\", voltageRegulatorOn, targetDeadband);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgyMTc5NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r388821794", "bodyText": "Not sure this method should be available", "author": "mathbagu", "createdAt": "2020-03-06T10:19:17Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelHolder.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl;\n+\n+import com.powsybl.iidm.network.ShuntCompensatorModel;\n+import com.powsybl.iidm.network.ShuntCompensatorModelType;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+interface ShuntCompensatorModelHolder extends ShuntCompensatorModel {\n+\n+    ShuntCompensatorModelType getType();\n+\n+    ShuntCompensatorModel getModel();\n+\n+    <M extends ShuntCompensatorModel> M getModel(Class<M> modelType);\n+\n+    void setShuntCompensator(ShuntCompensatorImpl shuntCompensator);", "originalCommit": "44ec378cd400bfc7d53bb2b7e2a647b306dda722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwNzc0MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r389607741", "bodyText": "See comment above", "author": "miovd", "createdAt": "2020-03-09T11:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgyMTc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "af7c34969f95a60194987b4151658fc812b30518", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelHolder.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelWrapper.java\nsimilarity index 68%\nrename from iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelHolder.java\nrename to iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelWrapper.java\nindex c5095e68b..6bb98f387 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelHolder.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorModelWrapper.java\n\n@@ -12,13 +12,13 @@ import com.powsybl.iidm.network.ShuntCompensatorModelType;\n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n-interface ShuntCompensatorModelHolder extends ShuntCompensatorModel {\n+interface ShuntCompensatorModelWrapper extends ShuntCompensatorModel {\n \n     ShuntCompensatorModelType getType();\n \n-    ShuntCompensatorModel getModel();\n+    void setShuntCompensator(ShuntCompensatorImpl owner);\n \n-    <M extends ShuntCompensatorModel> M getModel(Class<M> modelType);\n+    boolean containsSection(int sectionNumber);\n \n-    void setShuntCompensator(ShuntCompensatorImpl shuntCompensator);\n+    int getMaximumSectionCount();\n }\n"}}, {"oid": "af7c34969f95a60194987b4151658fc812b30518", "url": "https://github.com/powsybl/powsybl-core/commit/af7c34969f95a60194987b4151658fc812b30518", "message": "Change shunt impl design + getMaximumSectionCount in Shunt API\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-09T12:24:58Z", "type": "forcePushed"}, {"oid": "118e4c8ad20723fa6697076be505b33cbbd06ea7", "url": "https://github.com/powsybl/powsybl-core/commit/118e4c8ad20723fa6697076be505b33cbbd06ea7", "message": "Corrections after rebasing master\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-12T09:16:27Z", "type": "forcePushed"}, {"oid": "b120df23e87c27ab0fdc2666d70fbf8b8f9e40ca", "url": "https://github.com/powsybl/powsybl-core/commit/b120df23e87c27ab0fdc2666d70fbf8b8f9e40ca", "message": "Corrections after rebasing master\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-18T10:24:11Z", "type": "forcePushed"}, {"oid": "de1d1931bd876a25c70addbd168de3f981d97641", "url": "https://github.com/powsybl/powsybl-core/commit/de1d1931bd876a25c70addbd168de3f981d97641", "message": "Corrections after rebasing master\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-20T14:21:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwOTk4NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r397109984", "bodyText": "I think this should be done in the constructor, what do you think?", "author": "mathbagu", "createdAt": "2020-03-24T12:20:31Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java", "diffHunk": "@@ -92,16 +179,22 @@ public ShuntCompensatorAdder setTargetDeadband(double targetDeadband) {\n     public ShuntCompensatorImpl add() {\n         String id = checkAndGetUniqueId();\n         TerminalExt terminal = checkAndGetTerminal();\n-        ValidationUtil.checkbPerSection(this, bPerSection);\n-        ValidationUtil.checkSections(this, currentSectionCount, maximumSectionCount);\n+        if (model == null) {\n+            throw new ValidationException(this, \"the shunt compensator model has not been defined\");\n+        }\n+        ValidationUtil.checkSections(this, currentSectionCount, model.getMaximumSectionCount());\n+        if (!model.containsSection(currentSectionCount)) {\n+            throw new ValidationException(this, \"unexpected section number (\" + currentSectionCount + \"): no existing associated section\");\n+        }\n         ValidationUtil.checkRegulatingTerminal(this, regulatingTerminal, getNetwork());\n         ValidationUtil.checkVoltageControl(this, voltageRegulatorOn, targetV);\n         ValidationUtil.checkTargetDeadband(this, \"shunt compensator\", voltageRegulatorOn, targetDeadband);\n         ShuntCompensatorImpl shunt\n                 = new ShuntCompensatorImpl(getNetwork().getRef(),\n-                id, getName(), isFictitious(), bPerSection, maximumSectionCount,\n+                id, getName(), isFictitious(), model,\n                 currentSectionCount, regulatingTerminal == null ? terminal : regulatingTerminal,\n                 voltageRegulatorOn, targetV, targetDeadband);\n+        model.setShuntCompensator(shunt);", "originalCommit": "9b23d718b0d949eb8b85443e79d0f16c091948d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bbf30b6481790224c96b472ee07fd171ee796d9a", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\nindex b61bbdb51..e22827ee0 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorAdderImpl.java\n\n@@ -182,10 +182,7 @@ class ShuntCompensatorAdderImpl extends AbstractInjectionAdder<ShuntCompensatorA\n         if (model == null) {\n             throw new ValidationException(this, \"the shunt compensator model has not been defined\");\n         }\n-        ValidationUtil.checkSections(this, currentSectionCount, model.getMaximumSectionCount());\n-        if (!model.containsSection(currentSectionCount)) {\n-            throw new ValidationException(this, \"unexpected section number (\" + currentSectionCount + \"): no existing associated section\");\n-        }\n+        model.checkCurrentSection(this, currentSectionCount);\n         ValidationUtil.checkRegulatingTerminal(this, regulatingTerminal, getNetwork());\n         ValidationUtil.checkVoltageControl(this, voltageRegulatorOn, targetV);\n         ValidationUtil.checkTargetDeadband(this, \"shunt compensator\", voltageRegulatorOn, targetDeadband);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzExMDUxMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1202#discussion_r397110511", "bodyText": "Attach the model this this shunt compensator, like it's done between HvdcLine and HvdcConverterStation", "author": "mathbagu", "createdAt": "2020-03-24T12:21:32Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorImpl.java", "diffHunk": "@@ -47,13 +39,12 @@\n     private final TDoubleArrayList targetDeadband;\n \n     ShuntCompensatorImpl(Ref<? extends VariantManagerHolder> network,\n-                         String id, String name, boolean fictitious, double bPerSection, int maximumSectionCount,\n+                         String id, String name, boolean fictitious, ShuntCompensatorModelWrapper model,\n                          int currentSectionCount, TerminalExt regulatingTerminal, boolean voltageRegulatorOn,\n                          double targetV, double targetDeadband) {\n         super(id, name, fictitious);\n         this.network = network;\n-        this.bPerSection = bPerSection;\n-        this.maximumSectionCount = maximumSectionCount;\n+        this.model = model;", "originalCommit": "9b23d718b0d949eb8b85443e79d0f16c091948d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bbf30b6481790224c96b472ee07fd171ee796d9a", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorImpl.java\nindex cf96bfd95..f81bc36f0 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/ShuntCompensatorImpl.java\n\n@@ -39,7 +39,7 @@ class ShuntCompensatorImpl extends AbstractConnectable<ShuntCompensator> impleme\n     private final TDoubleArrayList targetDeadband;\n \n     ShuntCompensatorImpl(Ref<? extends VariantManagerHolder> network,\n-                         String id, String name, boolean fictitious, ShuntCompensatorModelWrapper model,\n+                         String id, String name, boolean fictitious, ShuntCompensatorModelHolder model,\n                          int currentSectionCount, TerminalExt regulatingTerminal, boolean voltageRegulatorOn,\n                          double targetV, double targetDeadband) {\n         super(id, name, fictitious);\n"}}, {"oid": "bbf30b6481790224c96b472ee07fd171ee796d9a", "url": "https://github.com/powsybl/powsybl-core/commit/bbf30b6481790224c96b472ee07fd171ee796d9a", "message": "Change of shunt API, impl and use\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\ncheck shunt model type before reading it in AMPL\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\nadd getCurrentG method + minor corrections\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "70c4b87c5da6c28fc040a41eb132ee207e27132f", "url": "https://github.com/powsybl/powsybl-core/commit/70c4b87c5da6c28fc040a41eb132ee207e27132f", "message": "add tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>\n\nadd tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "ed5dda4416113475a9a4db3d3c8d9366beba9238", "url": "https://github.com/powsybl/powsybl-core/commit/ed5dda4416113475a9a4db3d3c8d9366beba9238", "message": "refactoring\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "05494ed8c7d987273e49567a7b694fd1a2b8cbc3", "url": "https://github.com/powsybl/powsybl-core/commit/05494ed8c7d987273e49567a7b694fd1a2b8cbc3", "message": "Apply reviewer comments: make checkCurrentSection package-private + explicit error message in groovy bindings\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "fb2aaef0ee9ffec424baeb30d691464186aa1907", "url": "https://github.com/powsybl/powsybl-core/commit/fb2aaef0ee9ffec424baeb30d691464186aa1907", "message": "add groovy bindings tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "f82c4d2b49a84dd77e768fd638dae2f8d260a9f9", "url": "https://github.com/powsybl/powsybl-core/commit/f82c4d2b49a84dd77e768fd638dae2f8d260a9f9", "message": "add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:58Z", "type": "commit"}, {"oid": "50b704bdff26866062c492f27a06aab660d09354", "url": "https://github.com/powsybl/powsybl-core/commit/50b704bdff26866062c492f27a06aab660d09354", "message": "Change shunt impl design + getMaximumSectionCount in Shunt API\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:59Z", "type": "commit"}, {"oid": "c87286313ae579425cc2bbd8eaf6f09ecb54584a", "url": "https://github.com/powsybl/powsybl-core/commit/c87286313ae579425cc2bbd8eaf6f09ecb54584a", "message": "Corrections after rebasing master\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:59Z", "type": "commit"}, {"oid": "4abe6173bdb3bc0e7fe6f9e454dab89d864f51ae", "url": "https://github.com/powsybl/powsybl-core/commit/4abe6173bdb3bc0e7fe6f9e454dab89d864f51ae", "message": "Add merging view adapter for shunt models' adders\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:59Z", "type": "commit"}, {"oid": "0ab60196dc4670b79d021216ce9a92c805dd5cbf", "url": "https://github.com/powsybl/powsybl-core/commit/0ab60196dc4670b79d021216ce9a92c805dd5cbf", "message": "corrections\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:59Z", "type": "commit"}, {"oid": "106bab2829c4a6e770b8ebb4aa60230d7c4bb747", "url": "https://github.com/powsybl/powsybl-core/commit/106bab2829c4a6e770b8ebb4aa60230d7c4bb747", "message": "add tests\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:01:59Z", "type": "commit"}, {"oid": "eb35f46ec35f9bd5e6ba2238ad830d5988922da9", "url": "https://github.com/powsybl/powsybl-core/commit/eb35f46ec35f9bd5e6ba2238ad830d5988922da9", "message": "Attach the model to the shunt in the constructor\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:20:45Z", "type": "commit"}, {"oid": "eb35f46ec35f9bd5e6ba2238ad830d5988922da9", "url": "https://github.com/powsybl/powsybl-core/commit/eb35f46ec35f9bd5e6ba2238ad830d5988922da9", "message": "Attach the model to the shunt in the constructor\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-03-24T14:20:45Z", "type": "forcePushed"}, {"oid": "0456c7669b780fe5dca3801ce2f2a1e907bc8ed8", "url": "https://github.com/powsybl/powsybl-core/commit/0456c7669b780fe5dca3801ce2f2a1e907bc8ed8", "message": "Merge branch 'master' into new_shunt_api", "committedDate": "2020-03-24T16:40:04Z", "type": "commit"}]}