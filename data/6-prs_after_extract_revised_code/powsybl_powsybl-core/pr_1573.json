{"pr_number": 1573, "pr_title": "Add alphabetical sort criterion to determine the main node in order to have name invariance of a substation", "pr_createdAt": "2020-12-14T17:29:04Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1573", "timeline": [{"oid": "145881dcf3bbe063d57fedf156b846e4d54cd72e", "url": "https://github.com/powsybl/powsybl-core/commit/145881dcf3bbe063d57fedf156b846e4d54cd72e", "message": "Add alphabetical sort criterion to determine the main node in order to have name invariance of a substation\n\nSigned-off-by: Slimane AMAR <slimane.amar@rte-france.com>", "committedDate": "2020-12-14T17:32:47Z", "type": "commit"}, {"oid": "145881dcf3bbe063d57fedf156b846e4d54cd72e", "url": "https://github.com/powsybl/powsybl-core/commit/145881dcf3bbe063d57fedf156b846e4d54cd72e", "message": "Add alphabetical sort criterion to determine the main node in order to have name invariance of a substation\n\nSigned-off-by: Slimane AMAR <slimane.amar@rte-france.com>", "committedDate": "2020-12-14T17:32:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1NDE4Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r542654183", "bodyText": "Use IntStream.range(0, 100) instead of IntStream.iterate(0, i -> i + 1).limit(100)", "author": "mathbagu", "createdAt": "2020-12-14T19:03:18Z", "path": "ucte/ucte-converter/src/test/java/com/powsybl/ucte/converter/UcteImporterTest.java", "diffHunk": "@@ -176,5 +179,16 @@ public void testVoltageRegulatingXnode() {\n         assertEquals(1.0, dl.getGeneration().getReactiveLimits().getMaxQ(dl.getGeneration().getTargetP()), 0.01);\n         assertEquals(-1.0, dl.getGeneration().getReactiveLimits().getMinQ(dl.getGeneration().getTargetP()), 0.01);\n     }\n+\n+    @Test\n+    public void substationNameInvariance() {\n+        ResourceDataSource dataSource = new ResourceDataSource(\"VLsCreationIssue\", new ResourceSet(\"/\", \"VLsCreationIssue.uct\"));\n+\n+        IntStream.iterate(0, i -> i + 1).limit(100).forEach(i -> {", "originalCommit": "145881dcf3bbe063d57fedf156b846e4d54cd72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEyNjc2OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543126768", "bodyText": "Done", "author": "SlimaneAmar", "createdAt": "2020-12-15T08:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1NDE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ce166802644c0a9c6cd687c5c9fe0aeb73ea2d8d", "chunk": "diff --git a/ucte/ucte-converter/src/test/java/com/powsybl/ucte/converter/UcteImporterTest.java b/ucte/ucte-converter/src/test/java/com/powsybl/ucte/converter/UcteImporterTest.java\nindex 276980bb0..89fb3d757 100644\n--- a/ucte/ucte-converter/src/test/java/com/powsybl/ucte/converter/UcteImporterTest.java\n+++ b/ucte/ucte-converter/src/test/java/com/powsybl/ucte/converter/UcteImporterTest.java\n\n@@ -184,11 +182,11 @@ public class UcteImporterTest {\n     public void substationNameInvariance() {\n         ResourceDataSource dataSource = new ResourceDataSource(\"VLsCreationIssue\", new ResourceSet(\"/\", \"VLsCreationIssue.uct\"));\n \n-        IntStream.iterate(0, i -> i + 1).limit(100).forEach(i -> {\n-            Network network = new UcteImporter().importData(dataSource, new NetworkFactoryImpl(), null);\n-            assertNotNull(network.getSubstation(\"FTESTU\"));\n-            assertNull(network.getSubstation(\"F1TEST\"));\n-        });\n+        Network network = new UcteImporter().importData(dataSource, new NetworkFactoryImpl(), null);\n+        assertEquals(2, network.getSubstationCount());\n+        assertNotNull(network.getSubstation(\"F1TEST\"));\n+        assertNotNull(network.getSubstation(\"FTESTA\"));\n+        assertNull(network.getSubstation(\"FTESTB\"));\n     }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r542692188", "bodyText": "Looking to the code, this algorithm doesn't return the first node in the alphabetic order. I change your unit test like this:\n##C 2007.05.01\nTest case for UCTE import issue in PowSyBl core package\nWhen multiples VLs with the same nominal voltage are present in a substation, only one is created\ncontact : slimane.amar@rte-france.com\n\n##N\n##ZFR\nF1TEST11 1TEST11 1    0 0        0.15546 72.7296 0.00000 0.00000\nF1TEST21 1TEST21 1    0 0        0.15546 72.7296 0.00000 0.00000\nF1TEST2A 1TEST2A 1    0 0        0.15546 72.7296 0.00000 0.00000\nFTESTA11 TESTAP7      0 0        0.00000 0.00000 0.00000 0.00000\nFTESTU11 TESTUP7 1-2  0 0        0.00000 0.00000 0.00000 0.00000\n\n##T\nF1TEST11 FTESTU11 1 0 380.0 380.0 1186. 0.1280 44.280 0.000000 0.0000   1803 TESTUY771\nFTESTA11 FTESTU11 1 0 380.0 380.0 1186. 0.1280 44.280 0.000000 0.0000   1803 TESTAY771\n\nWith your proposal, it returns FTESTU11 but the first node in alphabetical order is F1TEST11. I think you have to fix the implementation to be simpler to understand or to explain what you expect.\nThis is my proposal:\n\nfirst, extract this lambda to a well named method and replace the sorted + findfirst by a min()\nthen change the implementation of the lambda:\n\nPrefer the real node rather than an XNODE (line 196-201 of the current implementation)\nPrefer the highest voltage level (line 178)\nPrefer the first busbar number: numbers before letters (line 181 has to be fixed)\nPrefer the first nodeCode : use the alphabetical order", "author": "mathbagu", "createdAt": "2020-12-14T19:37:24Z", "path": "ucte/ucte-network/src/main/java/com/powsybl/ucte/network/ext/UcteNetworkExt.java", "diffHunk": "@@ -201,7 +200,8 @@ private void updateSubstation() {\n                                     nodeCode2.getUcteCountryCode() == UcteCountryCode.XX) {\n                                 return -1;\n                             } else {\n-                                return compareVoltageLevelThenBusbar(nodeCode1, nodeCode2);\n+                                int c = compareVoltageLevelThenBusbar(nodeCode1, nodeCode2);\n+                                return (c != 0) ? c : nodeCode2.compareTo(nodeCode1); // Alphabetical order to always have the same main node (invariant)\n                             }\n                         })\n                         .findFirst()", "originalCommit": "145881dcf3bbe063d57fedf156b846e4d54cd72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMTQ5Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543131493", "bodyText": "In the description above it is the lexicographically greater therefore the last and not the first.", "author": "SlimaneAmar", "createdAt": "2020-12-15T08:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3OTY1Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543179656", "bodyText": "This choice is to give preference to a name that does not contain a number or with a right most number.\nBut it's not necessary.", "author": "SlimaneAmar", "createdAt": "2020-12-15T09:25:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE4MDQzNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543180434", "bodyText": "I let you decide.", "author": "SlimaneAmar", "createdAt": "2020-12-15T09:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NTM1OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543565359", "bodyText": "What is the requirements: to have a deterministic order whatever how it is implemented? If it's the case, your proposal wouldn't return the first VL for that example.\nA UCTE node code is constituted of:\n\na geographical spot (2nd-6th character)\na voltage level (7th character)\na busbar code (8th character)\n\nIn that case, I propose to change the implementation again to:\n\nget the highest voltage level\nget the lower geographical spot (lexicographic order)\nget the lower busbar code\n\nDo you agree?", "author": "mathbagu", "createdAt": "2020-12-15T18:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzI3Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1573#discussion_r543613276", "bodyText": "The only requirement is to generate a name of a susbstation in a deterministic way in order to be able to perform comparison tests of 2 imports.\nSo i think your fix is a sufficient solution.", "author": "SlimaneAmar", "createdAt": "2020-12-15T19:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjE4OA=="}], "type": "inlineReview", "revised_code": {"commit": "ce166802644c0a9c6cd687c5c9fe0aeb73ea2d8d", "chunk": "diff --git a/ucte/ucte-network/src/main/java/com/powsybl/ucte/network/ext/UcteNetworkExt.java b/ucte/ucte-network/src/main/java/com/powsybl/ucte/network/ext/UcteNetworkExt.java\nindex eb61950bd..74fd96e0d 100644\n--- a/ucte/ucte-network/src/main/java/com/powsybl/ucte/network/ext/UcteNetworkExt.java\n+++ b/ucte/ucte-network/src/main/java/com/powsybl/ucte/network/ext/UcteNetworkExt.java\n\n@@ -189,22 +214,8 @@ public class UcteNetworkExt implements UcteNetwork {\n             node2voltageLevel = new TreeMap<>();\n             Graph<UcteNodeCode, Object> graph = createSubstationGraph(network);\n             for (Set<UcteNodeCode> substationNodes : new ConnectivityInspector<>(graph).connectedSets()) {\n-                // the main node of the substation is not an xnode and the one with the highest voltage\n-                // level and the lowest busbar number.\n                 UcteNodeCode mainNode = substationNodes.stream()\n-                        .sorted((nodeCode1, nodeCode2) -> {\n-                            if (nodeCode1.getUcteCountryCode() == UcteCountryCode.XX &&\n-                                    nodeCode2.getUcteCountryCode() != UcteCountryCode.XX) {\n-                                return 1;\n-                            } else if (nodeCode1.getUcteCountryCode() != UcteCountryCode.XX &&\n-                                    nodeCode2.getUcteCountryCode() == UcteCountryCode.XX) {\n-                                return -1;\n-                            } else {\n-                                int c = compareVoltageLevelThenBusbar(nodeCode1, nodeCode2);\n-                                return (c != 0) ? c : nodeCode2.compareTo(nodeCode1); // Alphabetical order to always have the same main node (invariant)\n-                            }\n-                        })\n-                        .findFirst()\n+                        .min(UcteNetworkExt::compareUcteNodeCode)\n                         .orElseThrow(AssertionError::new);\n \n                 Multimap<UcteVoltageLevelCode, UcteNodeCode> nodesByVoltageLevel\n"}}, {"oid": "ce166802644c0a9c6cd687c5c9fe0aeb73ea2d8d", "url": "https://github.com/powsybl/powsybl-core/commit/ce166802644c0a9c6cd687c5c9fe0aeb73ea2d8d", "message": "Fix implementation\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-12-14T19:52:50Z", "type": "commit"}, {"oid": "70e5214bd5e41d1a721a9bf0fb886870ced198ff", "url": "https://github.com/powsybl/powsybl-core/commit/70e5214bd5e41d1a721a9bf0fb886870ced198ff", "message": "Fix implementation\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-12-17T12:24:39Z", "type": "commit"}, {"oid": "9fc56ba1f8e8b95186dedc5f631ef56ed3b4d95f", "url": "https://github.com/powsybl/powsybl-core/commit/9fc56ba1f8e8b95186dedc5f631ef56ed3b4d95f", "message": "Merge branch 'master' into substation_name_invariance_for_ucte_import", "committedDate": "2020-12-17T12:26:10Z", "type": "commit"}, {"oid": "759eaf16fa8ebb6433693d04f4006446f34d6707", "url": "https://github.com/powsybl/powsybl-core/commit/759eaf16fa8ebb6433693d04f4006446f34d6707", "message": "Rename the test file (#1573)\n\nSigned-off-by: Slimane AMAR <slimane.amar@rte-france.com>", "committedDate": "2020-12-18T13:27:18Z", "type": "commit"}, {"oid": "d29ef4da53bd7a6ebdbd53d69aa012f9a7c84fb1", "url": "https://github.com/powsybl/powsybl-core/commit/d29ef4da53bd7a6ebdbd53d69aa012f9a7c84fb1", "message": "Merge branch 'master' into substation_name_invariance_for_ucte_import", "committedDate": "2021-01-07T14:46:39Z", "type": "commit"}]}