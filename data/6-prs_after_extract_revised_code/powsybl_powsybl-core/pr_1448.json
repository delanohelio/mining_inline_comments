{"pr_number": 1448, "pr_title": "Make LoadDetail extension multi variant", "pr_createdAt": "2020-08-20T11:28:08Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1448", "timeline": [{"oid": "910c1d833fbe32f3adfcf489709cc147ca139fa0", "url": "https://github.com/powsybl/powsybl-core/commit/910c1d833fbe32f3adfcf489709cc147ca139fa0", "message": "Make LoadDetail extension multi variant\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-08-20T11:27:23Z", "type": "commit"}, {"oid": "328326e96949218d2368c961c07aae5bbb86d8cd", "url": "https://github.com/powsybl/powsybl-core/commit/328326e96949218d2368c961c07aae5bbb86d8cd", "message": "Add test\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-08-20T12:36:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzMzE4Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476333182", "bodyText": "You could use TFloatArrayList instead. Or shouldn't we rather use a ArrayList of POJOs containing the four power values? That would allow a simple solution for variants with undefined LoadDetail, by using a null POJO.", "author": "flo-dup", "createdAt": "2020-08-25T10:05:28Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.iidm.network.Load;\n+import com.powsybl.iidm.network.extensions.LoadDetail;\n+import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n+import gnu.trove.list.array.TDoubleArrayList;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n+\n+    private final TDoubleArrayList fixedActivePower;\n+\n+    private final TDoubleArrayList fixedReactivePower;\n+\n+    private final TDoubleArrayList variableActivePower;\n+\n+    private final TDoubleArrayList variableReactivePower;", "originalCommit": "328326e96949218d2368c961c07aae5bbb86d8cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NDczNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476454736", "bodyText": "I used TFloatArrayList to be consistent with other similar equipments/implementations", "author": "miovd", "createdAt": "2020-08-25T13:37:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzMzE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a75b912808ead75e55994cb6cf06528716709062", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\nindex 6359477c3b..4fba38a862 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\n\n@@ -9,29 +9,29 @@ package com.powsybl.iidm.network.impl.extensions;\n import com.powsybl.iidm.network.Load;\n import com.powsybl.iidm.network.extensions.LoadDetail;\n import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n-import gnu.trove.list.array.TDoubleArrayList;\n+import gnu.trove.list.array.TFloatArrayList;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n \n-    private final TDoubleArrayList fixedActivePower;\n+    private final TFloatArrayList fixedActivePower;\n \n-    private final TDoubleArrayList fixedReactivePower;\n+    private final TFloatArrayList fixedReactivePower;\n \n-    private final TDoubleArrayList variableActivePower;\n+    private final TFloatArrayList variableActivePower;\n \n-    private final TDoubleArrayList variableReactivePower;\n+    private final TFloatArrayList variableReactivePower;\n \n     public LoadDetailImpl(Load load, float fixedActivePower, float fixedReactivePower,\n                           float variableActivePower, float variableReactivePower) {\n         super(load);\n         int variantArraySize = getVariantManagerHolder().getVariantManager().getVariantArraySize();\n-        this.fixedActivePower = new TDoubleArrayList(variantArraySize);\n-        this.fixedReactivePower = new TDoubleArrayList(variantArraySize);\n-        this.variableActivePower = new TDoubleArrayList(variantArraySize);\n-        this.variableReactivePower = new TDoubleArrayList(variantArraySize);\n+        this.fixedActivePower = new TFloatArrayList(variantArraySize);\n+        this.fixedReactivePower = new TFloatArrayList(variantArraySize);\n+        this.variableActivePower = new TFloatArrayList(variantArraySize);\n+        this.variableReactivePower = new TFloatArrayList(variantArraySize);\n         for (int i = 0; i < variantArraySize; i++) {\n             this.fixedActivePower.add(checkPower(fixedActivePower, \"Invalid fixedActivePower\"));\n             this.fixedReactivePower.add(checkPower(fixedReactivePower, \"Invalid fixedReactivePower\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzNzYwOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476337608", "bodyText": "Should it be a TODO? as something needs to be done here one day, doesn't it?", "author": "flo-dup", "createdAt": "2020-08-25T10:13:44Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.impl.extensions;\n+\n+import com.powsybl.iidm.network.Load;\n+import com.powsybl.iidm.network.extensions.LoadDetail;\n+import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n+import gnu.trove.list.array.TDoubleArrayList;\n+\n+/**\n+ * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n+ */\n+public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n+\n+    private final TDoubleArrayList fixedActivePower;\n+\n+    private final TDoubleArrayList fixedReactivePower;\n+\n+    private final TDoubleArrayList variableActivePower;\n+\n+    private final TDoubleArrayList variableReactivePower;\n+\n+    public LoadDetailImpl(Load load, float fixedActivePower, float fixedReactivePower,\n+                          float variableActivePower, float variableReactivePower) {\n+        super(load);\n+        int variantArraySize = getVariantManagerHolder().getVariantManager().getVariantArraySize();\n+        this.fixedActivePower = new TDoubleArrayList(variantArraySize);\n+        this.fixedReactivePower = new TDoubleArrayList(variantArraySize);\n+        this.variableActivePower = new TDoubleArrayList(variantArraySize);\n+        this.variableReactivePower = new TDoubleArrayList(variantArraySize);\n+        for (int i = 0; i < variantArraySize; i++) {\n+            this.fixedActivePower.add(checkPower(fixedActivePower, \"Invalid fixedActivePower\"));\n+            this.fixedReactivePower.add(checkPower(fixedReactivePower, \"Invalid fixedReactivePower\"));\n+            this.variableActivePower.add(checkPower(variableActivePower, \"Invalid variableActivePower\"));\n+            this.variableReactivePower.add(checkPower(variableReactivePower, \"Invalid variableReactivePower\"));\n+        }\n+    }\n+\n+    public float getFixedActivePower() {\n+        return (float) fixedActivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setFixedActivePower(float fixedActivePower) {\n+        checkPower(fixedActivePower, \"Invalid fixedActivePower\");\n+        this.fixedActivePower.set(getVariantIndex(), fixedActivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getFixedReactivePower() {\n+        return (float) fixedReactivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setFixedReactivePower(float fixedReactivePower) {\n+        checkPower(fixedReactivePower, \"Invalid fixedReactivePower\");\n+        this.fixedReactivePower.set(getVariantIndex(), fixedReactivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getVariableActivePower() {\n+        return (float) variableActivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setVariableActivePower(float variableActivePower) {\n+        checkPower(variableActivePower, \"Invalid variableActivePower\");\n+        this.variableActivePower.set(getVariantIndex(), variableActivePower);\n+        return this;\n+    }\n+\n+    @Override\n+    public float getVariableReactivePower() {\n+        return (float) variableReactivePower.get(getVariantIndex());\n+    }\n+\n+    @Override\n+    public LoadDetail setVariableReactivePower(float variableReactivePower) {\n+        checkPower(variableReactivePower, \"Invalid variableReactivePower\");\n+        this.variableReactivePower.set(getVariantIndex(), variableReactivePower);\n+        return this;\n+    }\n+\n+    private static float checkPower(float power, String errorMessage) {\n+        if (Float.isNaN(power)) {\n+            throw new IllegalArgumentException(errorMessage);\n+        }\n+        return power;\n+    }\n+\n+    @Override\n+    public void extendVariantArraySize(int initVariantArraySize, int number, int sourceIndex) {\n+        fixedActivePower.ensureCapacity(fixedActivePower.size() + number);\n+        fixedReactivePower.ensureCapacity(fixedReactivePower.size() + number);\n+        variableActivePower.ensureCapacity(variableActivePower.size() + number);\n+        variableReactivePower.ensureCapacity(variableReactivePower.size() + number);\n+        for (int i = 0; i < number; ++i) {\n+            fixedActivePower.add(fixedActivePower.get(sourceIndex));\n+            fixedReactivePower.add(fixedReactivePower.get(sourceIndex));\n+            variableActivePower.add(variableActivePower.get(sourceIndex));\n+            variableReactivePower.add(variableReactivePower.get(sourceIndex));\n+        }\n+    }\n+\n+    @Override\n+    public void reduceVariantArraySize(int number) {\n+        fixedActivePower.remove(fixedActivePower.size() - number, number);\n+        fixedReactivePower.remove(fixedReactivePower.size() - number, number);\n+        variableActivePower.remove(variableActivePower.size() - number, number);\n+        variableReactivePower.remove(variableReactivePower.size() - number, number);\n+    }\n+\n+    @Override\n+    public void deleteVariantArrayElement(int index) {\n+        // Nothing to do", "originalCommit": "328326e96949218d2368c961c07aae5bbb86d8cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a75b912808ead75e55994cb6cf06528716709062", "chunk": "diff --git a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\nindex 6359477c3b..4fba38a862 100644\n--- a/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\n+++ b/iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/LoadDetailImpl.java\n\n@@ -9,29 +9,29 @@ package com.powsybl.iidm.network.impl.extensions;\n import com.powsybl.iidm.network.Load;\n import com.powsybl.iidm.network.extensions.LoadDetail;\n import com.powsybl.iidm.network.impl.AbstractMultiVariantIdentifiableExtension;\n-import gnu.trove.list.array.TDoubleArrayList;\n+import gnu.trove.list.array.TFloatArrayList;\n \n /**\n  * @author Miora Ralambotiana <miora.ralambotiana at rte-france.com>\n  */\n public class LoadDetailImpl extends AbstractMultiVariantIdentifiableExtension<Load> implements LoadDetail {\n \n-    private final TDoubleArrayList fixedActivePower;\n+    private final TFloatArrayList fixedActivePower;\n \n-    private final TDoubleArrayList fixedReactivePower;\n+    private final TFloatArrayList fixedReactivePower;\n \n-    private final TDoubleArrayList variableActivePower;\n+    private final TFloatArrayList variableActivePower;\n \n-    private final TDoubleArrayList variableReactivePower;\n+    private final TFloatArrayList variableReactivePower;\n \n     public LoadDetailImpl(Load load, float fixedActivePower, float fixedReactivePower,\n                           float variableActivePower, float variableReactivePower) {\n         super(load);\n         int variantArraySize = getVariantManagerHolder().getVariantManager().getVariantArraySize();\n-        this.fixedActivePower = new TDoubleArrayList(variantArraySize);\n-        this.fixedReactivePower = new TDoubleArrayList(variantArraySize);\n-        this.variableActivePower = new TDoubleArrayList(variantArraySize);\n-        this.variableReactivePower = new TDoubleArrayList(variantArraySize);\n+        this.fixedActivePower = new TFloatArrayList(variantArraySize);\n+        this.fixedReactivePower = new TFloatArrayList(variantArraySize);\n+        this.variableActivePower = new TFloatArrayList(variantArraySize);\n+        this.variableReactivePower = new TFloatArrayList(variantArraySize);\n         for (int i = 0; i < variantArraySize; i++) {\n             this.fixedActivePower.add(checkPower(fixedActivePower, \"Invalid fixedActivePower\"));\n             this.fixedReactivePower.add(checkPower(fixedReactivePower, \"Invalid fixedReactivePower\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1ODU4Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476358586", "bodyText": "Shouldn't the test be in package com.powsybl.iidm.network.impl.extensions of iidm-impl?", "author": "flo-dup", "createdAt": "2020-08-25T10:54:54Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java", "diffHunk": "@@ -6,12 +6,18 @@\n  */\n package com.powsybl.iidm.network.extensions;", "originalCommit": "328326e96949218d2368c961c07aae5bbb86d8cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NDI2MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476454260", "bodyText": "Not sure about it, because it isn't a test specific to the in-memory implementation (it should also work with a persistent for example) however I was not sure if its place was in iidm-tck so I left it here.", "author": "miovd", "createdAt": "2020-08-25T13:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1ODU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3NzA3Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r477177072", "bodyText": "Ah you're right, but then SlackTerminalTest should not be in iidm-impl either :/", "author": "flo-dup", "createdAt": "2020-08-26T09:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1ODU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a75b912808ead75e55994cb6cf06528716709062", "chunk": "diff --git a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\nindex e5d12a4376..dfd0792bff 100644\n--- a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\n+++ b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\n\n@@ -11,7 +11,7 @@ import com.powsybl.iidm.network.*;\n import org.joda.time.DateTime;\n import org.junit.Test;\n \n-import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n \n import static com.powsybl.iidm.network.VariantManagerConstants.INITIAL_VARIANT_ID;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1OTQ4NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1448#discussion_r476359484", "bodyText": "Could be replaced by Arrays.asList(variant1, variant3)", "author": "flo-dup", "createdAt": "2020-08-25T10:56:39Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java", "diffHunk": "@@ -73,4 +79,64 @@ public void test() {\n         assertEquals(40f, detail.getVariableActivePower(), 0f);\n         assertEquals(20f, detail.getVariableReactivePower(), 0f);\n     }\n+\n+    @Test\n+    public void variantsCloneTest() {\n+        String variant1 = \"variant1\";\n+        String variant2 = \"variant2\";\n+        String variant3 = \"variant3\";\n+\n+        // Creates the extension\n+        Network network = createTestNetwork();\n+        LoadDetail ld = network.getLoad(\"L\").getExtension(LoadDetail.class);\n+        assertNotNull(ld);\n+\n+        // Testing variant cloning\n+        VariantManager variantManager = network.getVariantManager();\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, variant1);\n+        variantManager.cloneVariant(variant1, variant2);\n+        variantManager.setWorkingVariant(variant1);\n+        assertEquals(40f, ld.getFixedActivePower(), 0f);\n+        assertEquals(20f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(60f, ld.getVariableActivePower(), 0f);\n+        assertEquals(30f, ld.getVariableReactivePower(), 0f);\n+\n+        // Testing setting different values in the cloned variant and going back to the initial one\n+        ld.setFixedActivePower(60f).setFixedReactivePower(30f).setVariableActivePower(40f).setVariableReactivePower(20f);\n+        assertEquals(60f, ld.getFixedActivePower(), 0f);\n+        assertEquals(30f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(40f, ld.getVariableActivePower(), 0f);\n+        assertEquals(20f, ld.getVariableReactivePower(), 0f);\n+        variantManager.setWorkingVariant(INITIAL_VARIANT_ID);\n+        assertEquals(40f, ld.getFixedActivePower(), 0f);\n+        assertEquals(20f, ld.getFixedReactivePower(), 0f);\n+        assertEquals(60f, ld.getVariableActivePower(), 0f);\n+        assertEquals(30f, ld.getVariableReactivePower(), 0f);\n+\n+        // Removes a variant then adds another variant to test variant recycling (hence calling allocateVariantArrayElement)\n+        variantManager.removeVariant(variant1);\n+        List<String> targetVariantIds = new ArrayList<>();\n+        targetVariantIds.add(variant1);\n+        targetVariantIds.add(variant3);\n+        variantManager.cloneVariant(INITIAL_VARIANT_ID, targetVariantIds);", "originalCommit": "328326e96949218d2368c961c07aae5bbb86d8cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a75b912808ead75e55994cb6cf06528716709062", "chunk": "diff --git a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\nindex e5d12a4376..dfd0792bff 100644\n--- a/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\n+++ b/iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/LoadDetailTest.java\n\n@@ -115,9 +115,7 @@ public class LoadDetailTest {\n \n         // Removes a variant then adds another variant to test variant recycling (hence calling allocateVariantArrayElement)\n         variantManager.removeVariant(variant1);\n-        List<String> targetVariantIds = new ArrayList<>();\n-        targetVariantIds.add(variant1);\n-        targetVariantIds.add(variant3);\n+        List<String> targetVariantIds = Arrays.asList(variant1, variant3);\n         variantManager.cloneVariant(INITIAL_VARIANT_ID, targetVariantIds);\n         variantManager.setWorkingVariant(variant1);\n         assertEquals(40f, ld.getFixedActivePower(), 0f);\n"}}, {"oid": "a75b912808ead75e55994cb6cf06528716709062", "url": "https://github.com/powsybl/powsybl-core/commit/a75b912808ead75e55994cb6cf06528716709062", "message": "Reviewer's comment: corrections\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-08-25T14:02:38Z", "type": "commit"}, {"oid": "7671e0fb799992763f84fbf7958cc52e68cf33a4", "url": "https://github.com/powsybl/powsybl-core/commit/7671e0fb799992763f84fbf7958cc52e68cf33a4", "message": "Merge branch 'master' into make_load_detail_multivariant", "committedDate": "2020-08-27T08:49:29Z", "type": "commit"}]}