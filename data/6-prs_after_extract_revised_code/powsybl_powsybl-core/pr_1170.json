{"pr_number": 1170, "pr_title": "Voltage and angle by bus in node/breaker topology", "pr_createdAt": "2020-02-21T15:07:58Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1170", "timeline": [{"oid": "32c7aa69a9cb9738b5b865ee77bb1e317944b68b", "url": "https://github.com/powsybl/powsybl-core/commit/32c7aa69a9cb9738b5b865ee77bb1e317944b68b", "message": "Add a function to get the nodes of each buses, from the BusView\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-02-17T10:18:30Z", "type": "commit"}, {"oid": "7459308ab5845c428af71039e151e3ddba6ea190", "url": "https://github.com/powsybl/powsybl-core/commit/7459308ab5845c428af71039e151e3ddba6ea190", "message": "Export of bus in node/breaker topology with voltage, angle and nodes.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-17T10:18:30Z", "type": "commit"}, {"oid": "d64ac2ded5ca8ee89d3a34e1f0a1a5e7a0845c0f", "url": "https://github.com/powsybl/powsybl-core/commit/d64ac2ded5ca8ee89d3a34e1f0a1a5e7a0845c0f", "message": "Voltage and angle by bus instead of busbar sections in node/breaker topology during the XIIDM import.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-17T10:18:30Z", "type": "commit"}, {"oid": "98747775df99c8a0a1138336ca4836669b8e82b5", "url": "https://github.com/powsybl/powsybl-core/commit/98747775df99c8a0a1138336ca4836669b8e82b5", "message": "Corrections.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-17T10:18:30Z", "type": "commit"}, {"oid": "72999cf052519112adb4e5635e71cf06f513294f", "url": "https://github.com/powsybl/powsybl-core/commit/72999cf052519112adb4e5635e71cf06f513294f", "message": "add IidmXmlUtil.assertMaximumVersion and IidmXmlUtil.readOptionalDoubleUntilMaximumVersion\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T10:40:06Z", "type": "commit"}, {"oid": "77d1dab423faba89d25c589c057330a016b10af4", "url": "https://github.com/powsybl/powsybl-core/commit/77d1dab423faba89d25c589c057330a016b10af4", "message": "add IidmXmlUtil.runFromMinimumVersion and IidmXmlUtil.runUntilMaximumVersion\n\nSigned-off-by: RALAMBOTIANA MIORA <miora.ralambotiana@rte-france.com>", "committedDate": "2020-02-17T11:56:45Z", "type": "commit"}, {"oid": "684b3a3f78808e72c65b34e6defe0c4aad855118", "url": "https://github.com/powsybl/powsybl-core/commit/684b3a3f78808e72c65b34e6defe0c4aad855118", "message": "Backward compatibility management and unitary tests update.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-21T14:32:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyODg5MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383128890", "bodyText": "We should assert that the minimum version is 1.1, because this is not allowed in 1.0", "author": "mathbagu", "createdAt": "2020-02-24T08:27:56Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java", "diffHunk": "@@ -235,6 +256,25 @@ protected void readSubElements(VoltageLevel vl, NetworkXmlReaderContext context)\n                                 NodeBreakerViewInternalConnectionXml.INSTANCE.read(vl, context);\n                                 break;\n \n+                            case BusXml.ROOT_ELEMENT_NAME:", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDIxMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385134212", "bodyText": "Done.", "author": "annetill", "createdAt": "2020-02-27T13:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyODg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\nindex 42c9e944f..283be2629 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\n\n@@ -257,6 +263,7 @@ class VoltageLevelXml extends AbstractIdentifiableXml<VoltageLevel, VoltageLevel\n                                 break;\n \n                             case BusXml.ROOT_ELEMENT_NAME:\n+                                IidmXmlUtil.assertMinimumVersion(ROOT_ELEMENT_NAME, BusXml.ROOT_ELEMENT_NAME, IidmXmlUtil.ErrorMessage.NOT_SUPPORTED, IidmXmlVersion.V_1_1, context);\n                                 double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n                                 double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");\n                                 String nodesString = context.getReader().getAttributeValue(null, \"nodes\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc1NzI1Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383757252", "bodyText": "Maybe add in the javadoc that if no bus is associated to a node, it is not included in any list.", "author": "MioRtia", "createdAt": "2020-02-25T09:34:12Z", "path": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/Networks.java", "diffHunk": "@@ -344,4 +341,70 @@ public static void printGeneratorsSetpointDiff(Network network, Logger logger) {\n         }\n     }\n \n+    /**\n+     * Return the list of nodes (N/B topology) for each bus of a the Bus view", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTAzOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385135039", "bodyText": "Done.", "author": "annetill", "createdAt": "2020-02-27T13:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc1NzI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/Networks.java b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/Networks.java\nindex bfa985cab..c0337c541 100644\n--- a/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/Networks.java\n+++ b/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/util/Networks.java\n\n@@ -343,6 +343,7 @@ public final class Networks {\n \n     /**\n      * Return the list of nodes (N/B topology) for each bus of a the Bus view\n+     * If a node is not associated to a bus, it is not included in any list.\n      * @param voltageLevel The voltage level to traverse\n      * @return the list of nodes (N/B topology) for each bus of a Bus view\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDMyNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383770324", "bodyText": "You can replace this by a forEach and an intermediary method writeCalculatedBus(Bus, Set<Integer>, NetworkXmlWriterContext) (with a stream, it will also be easier to filter bus with a voltage or angle non NaN).", "author": "MioRtia", "createdAt": "2020-02-25T09:53:14Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java", "diffHunk": "@@ -84,6 +90,21 @@ private void writeNodeBreakerTopology(VoltageLevel vl, NetworkXmlWriterContext c\n             NodeBreakerViewSwitchXml.INSTANCE.write(sw, vl, context);\n         }\n         writeNodeBreakerTopologyInternalConnections(vl, context);\n+\n+        IidmXmlUtil.runFromMinimumVersion(IidmXmlVersion.V_1_1, context, () -> {\n+            Map<String, Set<Integer>> nodesByBus = Networks.getNodesByBus(vl);\n+            for (Bus bus : vl.getBusView().getBuses()) {\n+                try {\n+                    context.getWriter().writeEmptyElement(context.getVersion().getNamespaceURI(), \"bus\");\n+                    XmlUtil.writeDouble(\"v\", bus.getV(), context.getWriter());\n+                    XmlUtil.writeDouble(\"angle\", bus.getAngle(), context.getWriter());\n+                    Set<Integer> nodes = nodesByBus.get(bus.getId());\n+                    context.getWriter().writeAttribute(\"nodes\", StringUtils.join(nodes.toArray(), ','));\n+                } catch (XMLStreamException e) {\n+                    throw new UncheckedXmlStreamException(e);\n+                }\n+            }", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzOTgyMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r384039820", "bodyText": "This method could be declared as a static method in BusXml.", "author": "mathbagu", "createdAt": "2020-02-25T18:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTMyMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385135320", "bodyText": "Done, but in VoltageLevelXml.java.", "author": "annetill", "createdAt": "2020-02-27T13:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\nindex 42c9e944f..283be2629 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/VoltageLevelXml.java\n\n@@ -93,21 +93,27 @@ class VoltageLevelXml extends AbstractIdentifiableXml<VoltageLevel, VoltageLevel\n \n         IidmXmlUtil.runFromMinimumVersion(IidmXmlVersion.V_1_1, context, () -> {\n             Map<String, Set<Integer>> nodesByBus = Networks.getNodesByBus(vl);\n-            for (Bus bus : vl.getBusView().getBuses()) {\n-                try {\n-                    context.getWriter().writeEmptyElement(context.getVersion().getNamespaceURI(), \"bus\");\n-                    XmlUtil.writeDouble(\"v\", bus.getV(), context.getWriter());\n-                    XmlUtil.writeDouble(\"angle\", bus.getAngle(), context.getWriter());\n-                    Set<Integer> nodes = nodesByBus.get(bus.getId());\n-                    context.getWriter().writeAttribute(\"nodes\", StringUtils.join(nodes.toArray(), ','));\n-                } catch (XMLStreamException e) {\n-                    throw new UncheckedXmlStreamException(e);\n-                }\n-            }\n+            vl.getBusView().getBusStream()\n+                    .filter(bus -> !Double.isNaN(bus.getV()) || !Double.isNaN(bus.getAngle()))\n+                    .forEach(bus -> {\n+                        Set<Integer> nodes = nodesByBus.get(bus.getId());\n+                        writeCalculatedBus(bus, nodes, context);\n+                    });\n         });\n         context.getWriter().writeEndElement();\n     }\n \n+    private static void writeCalculatedBus(Bus bus, Set<Integer> nodes, NetworkXmlWriterContext context) {\n+        try {\n+            context.getWriter().writeEmptyElement(context.getVersion().getNamespaceURI(), \"bus\");\n+            XmlUtil.writeDouble(\"v\", bus.getV(), context.getWriter());\n+            XmlUtil.writeDouble(\"angle\", bus.getAngle(), context.getWriter());\n+            context.getWriter().writeAttribute(\"nodes\", StringUtils.join(nodes.toArray(), ','));\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+    }\n+\n     private void writeNodeBreakerTopologyInternalConnections(VoltageLevel vl, NetworkXmlWriterContext context) throws XMLStreamException {\n         for (VoltageLevel.NodeBreakerView.InternalConnection ic : vl.getNodeBreakerView().getInternalConnections()) {\n             NodeBreakerViewInternalConnectionXml.INSTANCE.write(ic.getNode1(), ic.getNode2(), context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODQ0NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383778444", "bodyText": "Add javadoc (it should be inspired from assertMinimumVersion javadoc)", "author": "MioRtia", "createdAt": "2020-02-25T10:07:16Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java", "diffHunk": "@@ -34,6 +34,13 @@\n         }\n     }\n \n+    public static <C extends AbstractNetworkXmlContext> void assertMaximumVersion(String rootElementName, String elementName, ErrorMessage type, IidmXmlVersion maxVersion, C context) {", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTc4OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385135789", "bodyText": "Done.", "author": "annetill", "createdAt": "2020-02-27T13:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\nindex 6897ba8f8..47903b708 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/util/IidmXmlUtil.java\n\n@@ -34,6 +34,10 @@ public final class IidmXmlUtil {\n         }\n     }\n \n+    /**\n+     * Assert that the context's IIDM-XML version equals or is less recent than a given IIDM-XML version.\n+     * If not, throw an exception with a given type of error message.\n+     */\n     public static <C extends AbstractNetworkXmlContext> void assertMaximumVersion(String rootElementName, String elementName, ErrorMessage type, IidmXmlVersion maxVersion, C context) {\n         if (context.getVersion().compareTo(maxVersion) > 0) {\n             throw new PowsyblException(rootElementName + \".\" + elementName + \" is \" + type.message + \" for IIDM-XML version \" + context.getVersion().toString(\".\") + \". \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383779583", "bodyText": "Use IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion to ensure that maximum version 1.0 is asserted when reading this attribute", "author": "MioRtia", "createdAt": "2020-02-25T10:09:18Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java", "diffHunk": "@@ -49,16 +57,20 @@ protected BusbarSectionAdder createAdder(VoltageLevel vl) {\n     @Override\n     protected BusbarSection readRootElementAttributes(BusbarSectionAdder adder, NetworkXmlReaderContext context) {\n         int node = XmlUtil.readIntAttribute(context.getReader(), \"node\");\n-        double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n-        double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");\n         BusbarSection bbs = adder.setNode(node)\n                 .add();\n-        context.getEndTasks().add(() -> {\n-            Bus b = bbs.getTerminal().getBusView().getBus();\n-            if (b != null) {\n-                b.setV(v).setAngle(angle);\n-            }\n+\n+        IidmXmlUtil.runUntilMaximumVersion(IidmXmlVersion.V_1_0, context, () -> {\n+            double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0MTU1OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r384041559", "bodyText": "@MioRtia It looks totally equivalent? Maybe the proposition @annetill mades is better because you clearly see that these two attributes are linked.", "author": "mathbagu", "createdAt": "2020-02-25T18:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1NjI1NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r384356255", "bodyText": "Not really: here if attributes are present in 1.1, they are not read but the import does not notice the file is invalid (unless there is validation after import) which contradicts what we did elsewhere. If we want to throw an exception if the attributes are present for version >= 1.1, a check outside the runUntilMaximumVersion method should be done.", "author": "miovd", "createdAt": "2020-02-26T09:05:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2OTY0MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r384369640", "bodyText": "In IIDM v1.0, if I put a dummy attribute on an equipment, let's say the busbar section, the code will never throw an exception because we never assert that it's a valid/invalid attribute. This is the responsibility of the XSD to assert that the attribute is not valid. But, you're right, it's not totally equivalent to what we did elsewhere.\nYou cannot simply replace readOptionDoubleAttribute by readOptionalDoubleAttributeUntilMaximumVersion in the lambda, because the runnable is run only if the version is 1.0. This piece of code should be rewritten. What you propose is (pseudo-java-code):\n// Read v or throw if attribute is not expected\ndouble v = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(IidmXmlVersion.V_1_0, \"v\");\n// Read angle or throw if attribute is not expected\ndouble angle = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(IidmXmlVersion.V_1_0, \"angle\");\nif (IidmVersionXml == IidmXmlVersion.V_1_0) {\n// if (!Double.isNan(v) || !Double.isNaN(angle)) {\n            context.getEndTasks().add(() -> {\n                Bus b = bbs.getTerminal().getBusView().getBus();\n                if (b != null) {\n                    b.setV(v).setAngle(angle);\n                }\n            });\n}", "author": "mathbagu", "createdAt": "2020-02-26T09:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3MzA5Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r384373096", "bodyText": "Yes, we should do something like that to be consistent with other compatibility checks.", "author": "miovd", "createdAt": "2020-02-26T09:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyNjMxMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385126313", "bodyText": "After some thinking, I think what we should do is:\n\nassert the version when there is a deletion or an addition of an XML element\nnot assert anything where there is a deletion or an addition of an XML attribute\n\nI will make the modification for the reading of T3W for this.\nSo @annetill you can keep your original code", "author": "miovd", "createdAt": "2020-02-27T13:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNjI2OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385136269", "bodyText": "Ok !", "author": "annetill", "createdAt": "2020-02-27T13:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\nindex 88e10e7eb..f131f33ac 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\n\n@@ -61,8 +61,12 @@ class BusbarSectionXml extends AbstractIdentifiableXml<BusbarSection, BusbarSect\n                 .add();\n \n         IidmXmlUtil.runUntilMaximumVersion(IidmXmlVersion.V_1_0, context, () -> {\n-            double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n-            double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");\n+            // Read v or throw if attribute is not expected.\n+            double v = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(ROOT_ELEMENT_NAME, \"v\",\n+                    IidmXmlVersion.V_1_0, context);\n+            // Read angle or throw if attribute is not expected.\n+            double angle = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(ROOT_ELEMENT_NAME, \"angle\",\n+                    IidmXmlVersion.V_1_0, context);\n             context.getEndTasks().add(() -> {\n                 Bus b = bbs.getTerminal().getBusView().getBus();\n                 if (b != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTYzNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r383779637", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-02-25T10:09:24Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java", "diffHunk": "@@ -49,16 +57,20 @@ protected BusbarSectionAdder createAdder(VoltageLevel vl) {\n     @Override\n     protected BusbarSection readRootElementAttributes(BusbarSectionAdder adder, NetworkXmlReaderContext context) {\n         int node = XmlUtil.readIntAttribute(context.getReader(), \"node\");\n-        double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n-        double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");\n         BusbarSection bbs = adder.setNode(node)\n                 .add();\n-        context.getEndTasks().add(() -> {\n-            Bus b = bbs.getTerminal().getBusView().getBus();\n-            if (b != null) {\n-                b.setV(v).setAngle(angle);\n-            }\n+\n+        IidmXmlUtil.runUntilMaximumVersion(IidmXmlVersion.V_1_0, context, () -> {\n+            double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n+            double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");", "originalCommit": "684b3a3f78808e72c65b34e6defe0c4aad855118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyNjUzMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1170#discussion_r385126531", "bodyText": "Same as above, you can ignore this comment", "author": "miovd", "createdAt": "2020-02-27T13:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTYzNw=="}], "type": "inlineReview", "revised_code": {"commit": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "chunk": "diff --git a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\nindex 88e10e7eb..f131f33ac 100644\n--- a/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\n+++ b/iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/BusbarSectionXml.java\n\n@@ -61,8 +61,12 @@ class BusbarSectionXml extends AbstractIdentifiableXml<BusbarSection, BusbarSect\n                 .add();\n \n         IidmXmlUtil.runUntilMaximumVersion(IidmXmlVersion.V_1_0, context, () -> {\n-            double v = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"v\");\n-            double angle = XmlUtil.readOptionalDoubleAttribute(context.getReader(), \"angle\");\n+            // Read v or throw if attribute is not expected.\n+            double v = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(ROOT_ELEMENT_NAME, \"v\",\n+                    IidmXmlVersion.V_1_0, context);\n+            // Read angle or throw if attribute is not expected.\n+            double angle = IidmXmlUtil.readOptionalDoubleAttributeUntilMaximumVersion(ROOT_ELEMENT_NAME, \"angle\",\n+                    IidmXmlVersion.V_1_0, context);\n             context.getEndTasks().add(() -> {\n                 Bus b = bbs.getTerminal().getBusView().getBus();\n                 if (b != null) {\n"}}, {"oid": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "url": "https://github.com/powsybl/powsybl-core/commit/e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "message": "Corrections after reviews.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-27T13:25:21Z", "type": "commit"}, {"oid": "e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "url": "https://github.com/powsybl/powsybl-core/commit/e4dba752ae8cd13a6fa18d485e036929a7fb8a5c", "message": "Corrections after reviews.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-27T13:25:21Z", "type": "forcePushed"}, {"oid": "168ec6457f4313027270a7f4549aad3b5e0a96fe", "url": "https://github.com/powsybl/powsybl-core/commit/168ec6457f4313027270a7f4549aad3b5e0a96fe", "message": "Merge branch 'master' into voltages-by-bus", "committedDate": "2020-02-27T13:34:32Z", "type": "commit"}, {"oid": "4143798100820b39c626c8ba853ff18abe781643", "url": "https://github.com/powsybl/powsybl-core/commit/4143798100820b39c626c8ba853ff18abe781643", "message": "Not assert anything where there is a deletion or an addition of an XML attribute.\n\nSigned-off-by: Anne Tilloy <atilloy@gmail.com>", "committedDate": "2020-02-27T14:17:18Z", "type": "commit"}, {"oid": "0d9283bdecaed6dc9d47162e69c376c428d9abc0", "url": "https://github.com/powsybl/powsybl-core/commit/0d9283bdecaed6dc9d47162e69c376c428d9abc0", "message": "Add unit tests\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-02-27T18:19:54Z", "type": "commit"}, {"oid": "80799511e9c1a2fa3e7388d9bfe4562905cf95f0", "url": "https://github.com/powsybl/powsybl-core/commit/80799511e9c1a2fa3e7388d9bfe4562905cf95f0", "message": "Solve last code smell (complexity)\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-02-28T09:05:30Z", "type": "commit"}, {"oid": "36f632b4f803cef00181272633a9a2712d9f8d29", "url": "https://github.com/powsybl/powsybl-core/commit/36f632b4f803cef00181272633a9a2712d9f8d29", "message": "Merge branch 'master' into voltages-by-bus", "committedDate": "2020-02-28T09:27:08Z", "type": "commit"}]}