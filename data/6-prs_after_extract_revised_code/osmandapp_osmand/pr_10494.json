{"pr_number": 10494, "pr_title": "Fix opening links to maps \"geo:0,0\"", "pr_createdAt": "2020-12-30T11:37:46Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/10494", "timeline": [{"oid": "2da563815d554248c34e5c5b82f5f189fd4254f3", "url": "https://github.com/osmandapp/OsmAnd/commit/2da563815d554248c34e5c5b82f5f189fd4254f3", "message": "fix of the opportunity to find an address from external sources using google maps links", "committedDate": "2020-12-30T11:31:41Z", "type": "commit"}, {"oid": "0205628a486fabb96b2dae5d637909d8292fcb2f", "url": "https://github.com/osmandapp/OsmAnd/commit/0205628a486fabb96b2dae5d637909d8292fcb2f", "message": "rolled back previous changes;\nfix address uri without lat & lon in searchRequest (example: geo:0,0?q=Van+Bleiswijkstraat+66,+2582+LG+The+Hague)", "committedDate": "2020-12-31T13:15:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4OTc2Mw==", "url": "https://github.com/osmandapp/OsmAnd/pull/10494#discussion_r550489763", "bodyText": "here should be a comment why do we set lat / lon to 0?\nI'm not sure if it's correct or not (probably it is)", "author": "vshcherb", "createdAt": "2020-12-31T14:04:43Z", "path": "OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java", "diffHunk": "@@ -558,6 +558,10 @@ public static GeoParsedPoint parse(final String uriString) {\n \t\t\t\tif (lat == 0.0 && lon == 0.0 && positionInSearchRequestMatcher.find()) {\n \t\t\t\t\tlat = Double.valueOf(positionInSearchRequestMatcher.group(1));\n \t\t\t\t\tlon = Double.valueOf(positionInSearchRequestMatcher.group(2));", "originalCommit": "0205628a486fabb96b2dae5d637909d8292fcb2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2MDEwMA==", "url": "https://github.com/osmandapp/OsmAnd/pull/10494#discussion_r550760100", "bodyText": "because from the line \"geo:0,0?q=Van+Bleiswijkstraat+66,+2582+LG+The+Hague\" in any case 66 and 2582 will be taken as latitude and longitude, which is wrong, because this is an address and there are a lot of such addresses. I decided to compare the minimum and maximum values \u200b\u200bfor coordinates in order to minimize the creation of incorrect coordinates.  maybe this is a temporary solution, maybe there are addresses that are in the min/max range, but nevertheless, similar addresses as from the issue are now processed normally, because further in the method there is a check for equality to 0.0 and the creation of a GeoParsedPoint from the searchRequest string", "author": "Skalii", "createdAt": "2021-01-01T11:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4OTc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3566ec765254ceaa1150463ab12fa8463fb4aa1b", "chunk": "diff --git a/OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java b/OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java\nindex f46f4f6f70..3906aff004 100644\n--- a/OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java\n+++ b/OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java\n\n@@ -553,14 +553,19 @@ public class GeoPointParserUtil {\n \t\t\t}\n \n \t\t\tif (searchRequest != null) {\n+\t\t\t\tString searchPattern = Pattern.compile(\"(?:\\\\.|,|\\\\s+|\\\\+|[+-]?\\\\d+(?:\\\\.\\\\d+)?)\").pattern();\n+\t\t\t\tString[] search = searchRequest.split(searchPattern);\n+\t\t\t\tif (search.length > 0) {\n+\t\t\t\t\treturn new GeoParsedPoint(searchRequest);\n+\t\t\t\t}\n \t\t\t\tfinal Matcher positionInSearchRequestMatcher =\n \t\t\t\t\t\tpositionPattern.matcher(searchRequest);\n \t\t\t\tif (lat == 0.0 && lon == 0.0 && positionInSearchRequestMatcher.find()) {\n-\t\t\t\t\tlat = Double.valueOf(positionInSearchRequestMatcher.group(1));\n-\t\t\t\t\tlon = Double.valueOf(positionInSearchRequestMatcher.group(2));\n-\t\t\t\t\tif (lat < -90 || lat > 90 || lon < -180 || lon > 180) {\n-\t\t\t\t\t\tlat = 0.0;\n-\t\t\t\t\t\tlon = 0.0;\n+\t\t\t\t\tdouble tempLat = Double.valueOf(positionInSearchRequestMatcher.group(1));\n+\t\t\t\t\tdouble tempLon = Double.valueOf(positionInSearchRequestMatcher.group(2));\n+\t\t\t\t\tif (tempLat >= -90 && tempLat <= 90 && tempLon >= -180 && tempLon <= 180) {\n+\t\t\t\t\t\tlat = tempLat;\n+\t\t\t\t\t\tlon = tempLon;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n"}}, {"oid": "53b3addcb5627e505bd93c3366bb4e1fb1441542", "url": "https://github.com/osmandapp/OsmAnd/commit/53b3addcb5627e505bd93c3366bb4e1fb1441542", "message": "Merge remote-tracking branch 'origin/master' into fix_using_google_maps_links", "committedDate": "2021-01-08T16:56:03Z", "type": "commit"}, {"oid": "3566ec765254ceaa1150463ab12fa8463fb4aa1b", "url": "https://github.com/osmandapp/OsmAnd/commit/3566ec765254ceaa1150463ab12fa8463fb4aa1b", "message": "fix previous changes;\nadd new check;", "committedDate": "2021-01-08T17:05:02Z", "type": "commit"}]}