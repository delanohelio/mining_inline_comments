{"pr_number": 9321, "pr_title": "Option to use volume buttons as zoom", "pr_createdAt": "2020-06-25T13:43:04Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/9321", "timeline": [{"oid": "0c0233fc6348e1ee6b665fddbc7cb1b50515046c", "url": "https://github.com/osmandapp/OsmAnd/commit/0c0233fc6348e1ee6b665fddbc7cb1b50515046c", "message": "Add preference and UI", "committedDate": "2020-06-25T09:53:34Z", "type": "commit"}, {"oid": "9cbb11493d1821b0dae85aede8432313ea90f7e9", "url": "https://github.com/osmandapp/OsmAnd/commit/9cbb11493d1821b0dae85aede8432313ea90f7e9", "message": "Add keycode", "committedDate": "2020-06-25T13:39:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY1NTcyNg==", "url": "https://github.com/osmandapp/OsmAnd/pull/9321#discussion_r445655726", "bodyText": "Again code in map activity should be moved out", "author": "vshcherb", "createdAt": "2020-06-25T15:43:40Z", "path": "OsmAnd/src/net/osmand/plus/activities/MapActivity.java", "diffHunk": "@@ -1546,6 +1546,14 @@ public void run() {\n \t\t\t\tuiHandler.sendMessageDelayed(msg, LONG_KEYPRESS_DELAY);\n \t\t\t}\n \t\t\treturn true;\n+\t\t} else if (settings.USE_VOLUME_BUTTONS_AS_ZOOM.get()) {", "originalCommit": "9cbb11493d1821b0dae85aede8432313ea90f7e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca67fb4b8a8559e09669f0217214cdf161eaf233", "chunk": "diff --git a/OsmAnd/src/net/osmand/plus/activities/MapActivity.java b/OsmAnd/src/net/osmand/plus/activities/MapActivity.java\nindex c077006585..e31a4c1b98 100644\n--- a/OsmAnd/src/net/osmand/plus/activities/MapActivity.java\n+++ b/OsmAnd/src/net/osmand/plus/activities/MapActivity.java\n\n@@ -1532,86 +1524,26 @@ public class MapActivity extends OsmandActionBarActivity implements DownloadEven\n \n \t}\n \n+\tpublic ScrollHelper getMapScrollHelper() {\n+\t\treturn mapScrollHelper;\n+\t}\n+\n \t@Override\n \tpublic boolean onKeyDown(int keyCode, KeyEvent event) {\n-\t\tif (keyCode == KeyEvent.KEYCODE_DPAD_CENTER && app.accessibilityEnabled()) {\n-\t\t\tif (!uiHandler.hasMessages(LONG_KEYPRESS_MSG_ID)) {\n-\t\t\t\tMessage msg = Message.obtain(uiHandler, new Runnable() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\tapp.getLocationProvider().emitNavigationHint();\n-\t\t\t\t\t}\n-\t\t\t\t});\n-\t\t\t\tmsg.what = LONG_KEYPRESS_MSG_ID;\n-\t\t\t\tuiHandler.sendMessageDelayed(msg, LONG_KEYPRESS_DELAY);\n-\t\t\t}\n-\t\t\treturn true;\n-\t\t} else if (settings.USE_VOLUME_BUTTONS_AS_ZOOM.get()) {\n-\t\t\tif (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {\n-\t\t\t\tchangeZoom(-1);\n-\t\t\t\treturn true;\n-\t\t\t} else if (keyCode == KeyEvent.KEYCODE_VOLUME_UP) {\n-\t\t\t\tchangeZoom(1);\n+\t\tif (mapActivityKeyListener != null) {\n+\t\t\tif (mapActivityKeyListener.onKeyDown(keyCode, event)) {\n \t\t\t\treturn true;\n \t\t\t}\n-\t\t} else if (mapScrollHelper.isScrollingDirectionKeyCode(keyCode)) {\n-\t\t\treturn mapScrollHelper.onKeyDown(keyCode, event);\n \t\t}\n \t\treturn super.onKeyDown(keyCode, event);\n \t}\n \n \t@Override\n \tpublic boolean onKeyUp(int keyCode, KeyEvent event) {\n-\t\tif (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {\n-\t\t\tif (!app.accessibilityEnabled()) {\n-\t\t\t\tmapActions.contextMenuPoint(mapView.getLatitude(), mapView.getLongitude());\n-\t\t\t} else if (uiHandler.hasMessages(LONG_KEYPRESS_MSG_ID)) {\n-\t\t\t\tuiHandler.removeMessages(LONG_KEYPRESS_MSG_ID);\n-\t\t\t\tmapActions.contextMenuPoint(mapView.getLatitude(), mapView.getLongitude());\n-\t\t\t}\n-\t\t\treturn true;\n-\t\t} else if (keyCode == KeyEvent.KEYCODE_MENU /*&& event.getRepeatCount() == 0*/) {\n-\t\t\t// repeat count 0 doesn't work for samsung, 1 doesn't work for lg\n-\t\t\ttoggleDrawer();\n-\t\t\treturn true;\n-\t\t} else if (keyCode == KeyEvent.KEYCODE_C) {\n-\t\t\tmapViewTrackingUtilities.backToLocationImpl();\n-\t\t} else if (settings.EXTERNAL_INPUT_DEVICE.get() == PARROT_EXTERNAL_DEVICE) {\n-\t\t\t// Parrot device has only dpad left and right\n-\t\t\tif (keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {\n-\t\t\t\tchangeZoom(-1);\n-\t\t\t\treturn true;\n-\t\t\t} else if (keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {\n-\t\t\t\tchangeZoom(1);\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t} else if (settings.EXTERNAL_INPUT_DEVICE.get() == WUNDERLINQ_EXTERNAL_DEVICE) {\n-\t\t\t// WunderLINQ device, motorcycle smart phone control\n-\t\t\tif (keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {\n-\t\t\t\tchangeZoom(-1);\n-\t\t\t\treturn true;\n-\t\t\t} else if (keyCode == KeyEvent.KEYCODE_DPAD_UP) {\n-\t\t\t\tchangeZoom(1);\n-\t\t\t\treturn true;\n-\t\t\t} else if (keyCode == KeyEvent.KEYCODE_ESCAPE) {\n-\t\t\t\tString callingApp = \"wunderlinq://datagrid\";\n-\t\t\t\tIntent intent = new Intent(Intent.ACTION_VIEW);\n-\t\t\t\tintent.setData(Uri.parse(callingApp));\n-\t\t\t\tstartActivity(intent);\n+\t\tif (mapActivityKeyListener != null) {\n+\t\t\tif (mapActivityKeyListener.onKeyUp(keyCode, event)) {\n \t\t\t\treturn true;\n \t\t\t}\n-\t\t} else if (mapScrollHelper.isScrollingDirectionKeyCode(keyCode)) {\n-\t\t\treturn mapScrollHelper.onKeyUp(keyCode, event);\n-\t\t} else if (settings.EXTERNAL_INPUT_DEVICE.get() == GENERIC_EXTERNAL_DEVICE) {\n-\t\t\tif (keyCode == KeyEvent.KEYCODE_MINUS) {\n-\t\t\t\tchangeZoom(-1);\n-\t\t\t\treturn true;\n-\t\t\t} else if (keyCode == KeyEvent.KEYCODE_PLUS) {\n-\t\t\t\tchangeZoom(1);\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t} else if (OsmandPlugin.onMapActivityKeyUp(this, keyCode)) {\n-\t\t\treturn true;\n \t\t}\n \t\treturn super.onKeyUp(keyCode, event);\n \t}\n"}}, {"oid": "ca67fb4b8a8559e09669f0217214cdf161eaf233", "url": "https://github.com/osmandapp/OsmAnd/commit/ca67fb4b8a8559e09669f0217214cdf161eaf233", "message": "Map activity refactoring", "committedDate": "2020-06-25T18:56:06Z", "type": "commit"}]}