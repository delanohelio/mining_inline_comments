{"pr_number": 10218, "pr_title": "Issue 251 Add photo change visibility to hidden", "pr_createdAt": "2020-11-17T13:44:46Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/10218", "timeline": [{"oid": "a0534c7232fe979d50109593fb0dd4fa9f9fedda", "url": "https://github.com/osmandapp/OsmAnd/commit/a0534c7232fe979d50109593fb0dd4fa9f9fedda", "message": "move started", "committedDate": "2020-11-16T17:16:06Z", "type": "commit"}, {"oid": "bc6bcbcc59cae192dd986011b5e9005380672a8c", "url": "https://github.com/osmandapp/OsmAnd/commit/bc6bcbcc59cae192dd986011b5e9005380672a8c", "message": "opr files added", "committedDate": "2020-11-16T17:24:06Z", "type": "commit"}, {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "url": "https://github.com/osmandapp/OsmAnd/commit/8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "message": "add photo hidden", "committedDate": "2020-11-17T13:42:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NTQ3Mg==", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525165472", "bodyText": "Here should not be gone, it should be in separate request! And this request we should test with button present", "author": "vshcherb", "createdAt": "2020-11-17T13:45:53Z", "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java", "diffHunk": "@@ -336,6 +336,8 @@ public void onClick(View view) {\n \t\tb.setTypeface(null, Typeface.BOLD);\n \t\tb.setText(context.getResources().getString(R.string.shared_string_add_photo));\n \t\tb.setBackgroundResource(R.drawable.btn_border_light);\n+\t\t//TODO feature under development\n+\t\tb.setVisibility(View.GONE);", "originalCommit": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c307a0e4fe21cc16d8f9f303de9db1726a5048d1", "chunk": "diff --git a/OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java b/OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java\nindex 73301158c5..30b7f05cd8 100644\n--- a/OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java\n+++ b/OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java\n\n@@ -336,8 +357,103 @@ public class MenuBuilder {\n \t\tb.setTypeface(null, Typeface.BOLD);\n \t\tb.setText(context.getResources().getString(R.string.shared_string_add_photo));\n \t\tb.setBackgroundResource(R.drawable.btn_border_light);\n+\t\tb.setOnClickListener(new OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(final View view) {\n+\t\t\t\tmapActivity.registerActivityResultListener(new ActivityResultListener(PICK_IMAGE,\n+\t\t\t\t\t\tnew ActivityResultListener.OnActivityResultListener() {\n+\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\tpublic void onResult(int resultCode, Intent resultData) {\n+\t\t\t\t\t\t\t\tInputStream inputStream = null;\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tinputStream = mapActivity.getContentResolver().openInputStream(resultData.getData());\n+\t\t\t\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t\t\t\t\tLOG.error(e);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\thandleSelectedImage(view, inputStream);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}));\n+\t\t\t\tfinal String privateKey = OPRWebviewActivity.getPrivateKeyFromCookie();\n+\t\t\t\tfinal String name = OPRWebviewActivity.getUsernameFromCookie();\n+\t\t\t\tif (privateKey == null || privateKey.isEmpty()) {\n+\t\t\t\t\tOprStartFragment.showInstance(mapActivity.getSupportFragmentManager());\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tnew Thread(new Runnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\tif (openDBAPI.checkPrivateKeyValid(name,privateKey)){\n+\t\t\t\t\t\t\tapp.runInUIThread(new Runnable() {\n+\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\t\t\tIntent intent = new Intent();\n+\t\t\t\t\t\t\t\t\tintent.setType(\"image/*\");\n+\t\t\t\t\t\t\t\t\tintent.setAction(Intent.ACTION_GET_CONTENT);\n+\t\t\t\t\t\t\t\t\tmapActivity.startActivityForResult(Intent.createChooser(intent,\n+\t\t\t\t\t\t\t\t\t\t\tmapActivity.getString(R.string.select_picture)), PICK_IMAGE);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\tOprStartFragment.showInstance(mapActivity.getSupportFragmentManager());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}).start();\n+\t\t\t}\n+\n+\t\t\tprivate void handleSelectedImage(final View view, final InputStream image) {\n+\t\t\t\tThread t = new Thread(new Runnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tuploadImageToPlace(view, image);\n+\t\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t\t\tLOG.error(e);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tt.start();\n+\t\t\t}\n+\n+\t\t\tprivate void uploadImageToPlace(View view, InputStream image) {\n+\t\t\t\t//compress image\n+\t\t\t\tBufferedInputStream bufferedInputStream = new BufferedInputStream(image);\n+\t\t\t\tBitmap bmp = BitmapFactory.decodeStream(bufferedInputStream);\n+\t\t\t\tByteArrayOutputStream os = new ByteArrayOutputStream();\n+\t\t\t\tbmp.compress(Bitmap.CompressFormat.PNG, 70, os);\n+\t\t\t\tbyte[] buff = os.toByteArray();\n+\t\t\t\tInputStream serverData = new ByteArrayInputStream(buff);\n+\t\t\t\tString url = BuildConfig.OPR_BASE_URL + \"api/ipfs/image\";\n+\t\t\t\tString response = NetworkUtils.sendPostDataRequest(url, serverData);\n+\t\t\t\tif (response != null) {\n+\t\t\t\t\tint res = 0;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tres = openDBAPI.uploadImage(\n+\t\t\t\t\t\t\t\tplaceId,\n+\t\t\t\t\t\t\t\tOPRWebviewActivity.getPrivateKeyFromCookie()\n+,\t\t\t\t\t\t\t\tOPRWebviewActivity.getUsernameFromCookie(),\n+\t\t\t\t\t\t\t\tresponse);\n+\t\t\t\t\t} catch (FailedVerificationException e) {\n+\t\t\t\t\t\tLOG.error(e);\n+\t\t\t\t\t\tapp.showToastMessage(view.getResources().getString(R.string.cannot_upload_image));\n+\t\t\t\t\t}\n+\t\t\t\t\tif (res != 200) {\n+\t\t\t\t\t\t//image was uploaded but not added to blockchain\n+\t\t\t\t\t\tapp.showToastMessage(view.getResources().getString(R.string.cannot_upload_image));\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString str = MessageFormat.format(view.getResources()\n+\t\t\t\t\t\t\t\t.getString(R.string.successfully_uploaded_pattern), 1, 1);\n+\t\t\t\t\t\tapp.showToastMessage(str);\n+\t\t\t\t\t\t//refresh the image\n+\t\t\t\t\t\tstartLoadingImagesTask();\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tapp.showToastMessage(view.getResources().getString(R.string.cannot_upload_image));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n \t\t//TODO feature under development\n-\t\tb.setVisibility(View.GONE);\n+\t\t//b.setVisibility(View.GONE);\n \t\tb.setTextColor(ContextCompat.getColor(context, R.color.preference_category_title));\n \t\treturn b;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NjA4Nw==", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525166087", "bodyText": "Here we need to fix pottential BUG! there is no clear evidence that\n((JSONObject) obj.get(0))\nhas no crash!", "author": "vshcherb", "createdAt": "2020-11-17T13:46:50Z", "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java", "diffHunk": "@@ -509,6 +509,7 @@ private void getPicturesForPlace(List<ImageCard> result, long l) {\n \t\t\t\t\t\"Requesting location images...\", false, false);\n \t\t\ttry {\n \t\t\t\tif (!Algorithms.isEmpty(response)) {\n+\t\t\t\t\t//TODO extract place id\n \t\t\t\t\tJSONArray obj = new JSONObject(response).getJSONArray(\"objects\");\n \t\t\t\t\tJSONArray images = ((JSONObject) ((JSONObject) obj.get(0)).get(\"images\")).getJSONArray(\"outdoor\");", "originalCommit": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwMTU5NQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r527601595", "bodyText": "try catchblock will handle the exception", "author": "angry010101", "createdAt": "2020-11-20T10:35:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NjA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2bde2da819f7b6fd4543a58ca186c8b584780def", "chunk": "diff --git a/OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java b/OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java\nindex d7b1d69895..1108692934 100644\n--- a/OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java\n+++ b/OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java\n\n@@ -503,27 +528,27 @@ public abstract class ImageCard extends AbstractCard {\n \t\t\treturn result;\n \t\t}\n \n-\t\tprivate void getPicturesForPlace(List<ImageCard> result, long l) {\n-\t\t\tString url = \"https://test.openplacereviews.org/api/objects-by-index?type=opr.place&index=osmid&limit=1&key=\" + l;\n-\t\t\tString response = AndroidNetworkUtils.sendRequest(app, url, Collections.<String, String>emptyMap(),\n-\t\t\t\t\t\"Requesting location images...\", false, false);\n+\t\tprivate void getPicturesForPlace(List<ImageCard> result, String response) {\n \t\t\ttry {\n \t\t\t\tif (!Algorithms.isEmpty(response)) {\n-\t\t\t\t\t//TODO extract place id\n \t\t\t\t\tJSONArray obj = new JSONObject(response).getJSONArray(\"objects\");\n-\t\t\t\t\tJSONArray images = ((JSONObject) ((JSONObject) obj.get(0)).get(\"images\")).getJSONArray(\"outdoor\");\n-\t\t\t\t\tif (images.length() > 0) {\n-\t\t\t\t\t\tfor (int i = 0; i < images.length(); i++) {\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tJSONObject imageObject = (JSONObject) images.get(i);\n-\t\t\t\t\t\t\t\tif (imageObject != JSONObject.NULL) {\n-\t\t\t\t\t\t\t\t\tImageCard imageCard = ImageCard.createCardOpr(mapActivity, imageObject);\n-\t\t\t\t\t\t\t\t\tif (imageCard != null) {\n-\t\t\t\t\t\t\t\t\t\tresult.add(imageCard);\n+\t\t\t\t\tJSONObject imagesWrapper = ((JSONObject) ((JSONObject) obj.get(0)).get(\"images\"));\n+\t\t\t\t\tIterator<String> it = imagesWrapper.keys();\n+\t\t\t\t\twhile (it.hasNext()) {\n+\t\t\t\t\t\tJSONArray images = imagesWrapper.getJSONArray(it.next());\n+\t\t\t\t\t\tif (images.length() > 0) {\n+\t\t\t\t\t\t\tfor (int i = 0; i < images.length(); i++) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tJSONObject imageObject = (JSONObject) images.get(i);\n+\t\t\t\t\t\t\t\t\tif (imageObject != JSONObject.NULL) {\n+\t\t\t\t\t\t\t\t\t\tImageCard imageCard = ImageCard.createCardOpr(mapActivity, imageObject);\n+\t\t\t\t\t\t\t\t\t\tif (imageCard != null) {\n+\t\t\t\t\t\t\t\t\t\t\tresult.add(imageCard);\n+\t\t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (JSONException e) {\n+\t\t\t\t\t\t\t\t\tLOG.error(e);\n \t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (JSONException e) {\n-\t\t\t\t\t\t\t\tLOG.error(e);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NzA5Mg==", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525167092", "bodyText": "What do we need such small class? Could be emdedded to the service it's used", "author": "vshcherb", "createdAt": "2020-11-17T13:48:16Z", "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package net.osmand.plus.osmedit.opr;\n+", "originalCommit": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2207239904c016a8f6d9f12082b22bf2e632434", "chunk": "diff --git a/OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java b/OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java\ndeleted file mode 100644\nindex dfffbf9973..0000000000\n--- a/OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java\n+++ /dev/null\n\n@@ -1,8 +0,0 @@\n-package net.osmand.plus.osmedit.opr;\n-\n-public class OPRImage {\n-\tpublic String type;\n-\tpublic String hash;\n-\tpublic String cid;\n-\tpublic String extension;\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2OTE5MQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525169191", "bodyText": "local variable OPRImage - guidelines?", "author": "vshcherb", "createdAt": "2020-11-17T13:51:12Z", "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package net.osmand.plus.osmedit.opr;\n+\n+import android.net.TrafficStats;\n+import android.os.Build;\n+import com.google.gson.GsonBuilder;\n+import net.osmand.PlatformUtil;\n+import net.osmand.plus.BuildConfig;\n+import org.apache.commons.logging.Log;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.openplacereviews.opendb.SecUtils;\n+import org.openplacereviews.opendb.ops.OpOperation;\n+import org.openplacereviews.opendb.util.JsonFormatter;\n+import org.openplacereviews.opendb.util.exception.FailedVerificationException;\n+\n+import java.io.BufferedReader;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.security.KeyPair;\n+import java.security.Security;\n+import java.util.*;\n+\n+import static org.openplacereviews.opendb.SecUtils.*;\n+\n+\n+public class OpenDBAPI {\n+\tprivate static final Log log = PlatformUtil.getLog(SecUtils.class);\n+\n+\tprivate static final int THREAD_ID = 11200;\n+\n+\tpublic int uploadImage(String[] placeId, String privateKey, String username, String image) throws FailedVerificationException {\n+\t\tif (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tSecurity.removeProvider(\"BC\");\n+\t\t\tSecurity.addProvider(new BouncyCastleProvider());\n+\t\t}\n+\t\tKeyPair kp = SecUtils.getKeyPair(ALGO_EC, privateKey, null);\n+\t\tString signed = username;// + \":opr-web\";\n+\n+\t\tJsonFormatter formatter = new JsonFormatter();\n+\t\tOPRImage OPRImage = new GsonBuilder().create().fromJson(image, OPRImage.class);", "originalCommit": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "14b0ab427a055f4699b963585ef63d0473b0ff52", "chunk": "diff --git a/OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java b/OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java\nindex 550906a508..5214ec2df5 100644\n--- a/OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java\n+++ b/OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java\n\n@@ -3,7 +3,9 @@ package net.osmand.plus.osmedit.opr;\n import android.net.TrafficStats;\n import android.os.Build;\n import com.google.gson.GsonBuilder;\n+import net.osmand.AndroidNetworkUtils;\n import net.osmand.PlatformUtil;\n+import net.osmand.osm.io.NetworkUtils;\n import net.osmand.plus.BuildConfig;\n import org.apache.commons.logging.Log;\n import org.bouncycastle.jce.provider.BouncyCastleProvider;\n"}}, {"oid": "2bde2da819f7b6fd4543a58ca186c8b584780def", "url": "https://github.com/osmandapp/OsmAnd/commit/2bde2da819f7b6fd4543a58ca186c8b584780def", "message": "adding image id code", "committedDate": "2020-11-17T15:07:16Z", "type": "commit"}, {"oid": "14b0ab427a055f4699b963585ef63d0473b0ff52", "url": "https://github.com/osmandapp/OsmAnd/commit/14b0ab427a055f4699b963585ef63d0473b0ff52", "message": "add check email functions", "committedDate": "2020-11-17T16:17:53Z", "type": "commit"}, {"oid": "5cef32531b88e54f249a072b64cfa7adf02766c6", "url": "https://github.com/osmandapp/OsmAnd/commit/5cef32531b88e54f249a072b64cfa7adf02766c6", "message": "encode url bug check login fixed", "committedDate": "2020-11-18T16:21:25Z", "type": "commit"}, {"oid": "c307a0e4fe21cc16d8f9f303de9db1726a5048d1", "url": "https://github.com/osmandapp/OsmAnd/commit/c307a0e4fe21cc16d8f9f303de9db1726a5048d1", "message": "photo upload feature implemented", "committedDate": "2020-11-20T10:26:23Z", "type": "commit"}, {"oid": "a2207239904c016a8f6d9f12082b22bf2e632434", "url": "https://github.com/osmandapp/OsmAnd/commit/a2207239904c016a8f6d9f12082b22bf2e632434", "message": "ui bug fix", "committedDate": "2020-11-20T12:13:10Z", "type": "commit"}, {"oid": "4035885842334cca4d2ad32098ca2b6f69ce70d8", "url": "https://github.com/osmandapp/OsmAnd/commit/4035885842334cca4d2ad32098ca2b6f69ce70d8", "message": "Merge branch 'master' of git://github.com/osmandapp/Osmand into issue_251_android_add_photo_backend", "committedDate": "2020-11-23T07:51:52Z", "type": "commit"}, {"oid": "5a91901eeefca5c4176940b423f2155dc358a0b2", "url": "https://github.com/osmandapp/OsmAnd/commit/5a91901eeefca5c4176940b423f2155dc358a0b2", "message": "conflict resolved", "committedDate": "2020-11-23T09:02:02Z", "type": "commit"}, {"oid": "0462f635a8ebf04e5f8b64a9697eedad6481149a", "url": "https://github.com/osmandapp/OsmAnd/commit/0462f635a8ebf04e5f8b64a9697eedad6481149a", "message": "visibility updated", "committedDate": "2020-11-23T09:17:18Z", "type": "commit"}, {"oid": "c7f7a9efdca4a93e2a1054f0c751242a8a4144ff", "url": "https://github.com/osmandapp/OsmAnd/commit/c7f7a9efdca4a93e2a1054f0c751242a8a4144ff", "message": "condition added", "committedDate": "2020-11-23T13:49:19Z", "type": "commit"}]}