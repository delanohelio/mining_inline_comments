{"pr_number": 10481, "pr_title": "#10230 Change turnLeft and turnRight, calculateTurnTime()", "pr_createdAt": "2020-12-28T19:10:17Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/10481", "timeline": [{"oid": "cb5e2f0a8e49b1fda6793b6962136b963af2645c", "url": "https://github.com/osmandapp/OsmAnd/commit/cb5e2f0a8e49b1fda6793b6962136b963af2645c", "message": "#10230 Change leftTurn", "committedDate": "2020-12-28T19:05:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDg5MQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10481#discussion_r549460891", "bodyText": "same as C++ Backward compaitibility", "author": "vshcherb", "createdAt": "2020-12-28T19:26:01Z", "path": "OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java", "diffHunk": "@@ -222,10 +222,10 @@ public void addAttribute(String k, String v) {\n \t\tattributes.put(k, v);\n \t\tif(k.equals(\"restrictionsAware\")) {\n \t\t\trestrictionsAware = parseSilentBoolean(v, restrictionsAware);\n-\t\t} else if(k.equals(\"leftTurn\")) {\n-\t\t\tleftTurn = parseSilentFloat(v, leftTurn);\n-\t\t} else if(k.equals(\"rightTurn\")) {\n-\t\t\trightTurn = parseSilentFloat(v, rightTurn);\n+\t\t} else if(k.equals(\"sharpTurn\")) {\n+\t\t\tsharpTurn = parseSilentFloat(v, sharpTurn);\n+\t\t} else if(k.equals(\"slightTurn\")) {", "originalCommit": "cb5e2f0a8e49b1fda6793b6962136b963af2645c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a94e3ace11eff11b5775e64035343e51d7fc74d3", "chunk": "diff --git a/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java b/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\nindex 29490a748b..fad98d466d 100644\n--- a/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\n+++ b/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\n\n@@ -220,19 +220,19 @@ public class GeneralRouter implements VehicleRouter {\n \n \tpublic void addAttribute(String k, String v) {\n \t\tattributes.put(k, v);\n-\t\tif(k.equals(\"restrictionsAware\")) {\n+\t\tif (k.equals(\"restrictionsAware\")) {\n \t\t\trestrictionsAware = parseSilentBoolean(v, restrictionsAware);\n-\t\t} else if(k.equals(\"sharpTurn\")) {\n+\t\t} else if (k.equals(\"sharpTurn\") || k.equals(\"leftTurn\")) {\n \t\t\tsharpTurn = parseSilentFloat(v, sharpTurn);\n-\t\t} else if(k.equals(\"slightTurn\")) {\n+\t\t} else if (k.equals(\"slightTurn\") || k.equals(\"rightTurn\")) {\n \t\t\tslightTurn = parseSilentFloat(v, slightTurn);\n-\t\t} else if(k.equals(\"roundaboutTurn\")) {\n+\t\t} else if (k.equals(\"roundaboutTurn\")) {\n \t\t\troundaboutTurn = parseSilentFloat(v, roundaboutTurn);\n-\t\t} else if(k.equals(\"minDefaultSpeed\") || k.equals(\"defaultSpeed\")) {\n+\t\t} else if (k.equals(\"minDefaultSpeed\") || k.equals(\"defaultSpeed\")) {\n \t\t\tdefaultSpeed = parseSilentFloat(v, defaultSpeed * 3.6f) / 3.6f;\n-\t\t} else if( k.equals(\"minSpeed\")) {\n+\t\t} else if (k.equals(\"minSpeed\")) {\n \t\t\tminSpeed = parseSilentFloat(v, minSpeed * 3.6f) / 3.6f;\n-\t\t} else if(k.equals(\"maxDefaultSpeed\") || k.equals(\"maxSpeed\")) {\n+\t\t} else if (k.equals(\"maxDefaultSpeed\") || k.equals(\"maxSpeed\")) {\n \t\t\tmaxSpeed = parseSilentFloat(v, maxSpeed * 3.6f) / 3.6f;\n \t\t}\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDk0NQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10481#discussion_r549460945", "bodyText": "functions should be renamed", "author": "vshcherb", "createdAt": "2020-12-28T19:26:11Z", "path": "OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java", "diffHunk": "@@ -605,11 +605,11 @@ public float getMaxSpeed() {\n \t}\n \n \tpublic double getLeftTurn() {", "originalCommit": "cb5e2f0a8e49b1fda6793b6962136b963af2645c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MTA0OQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10481#discussion_r549461049", "bodyText": "same as in C++, penalty should be summed up", "author": "vshcherb", "createdAt": "2020-12-28T19:26:32Z", "path": "OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java", "diffHunk": "@@ -654,6 +652,11 @@ public double calculateTurnTime(RouteSegment segment, int segmentEnd, RouteSegme\n \t\t\t}\n \t\t\treturn 0;\n \t\t}", "originalCommit": "cb5e2f0a8e49b1fda6793b6962136b963af2645c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a94e3ace11eff11b5775e64035343e51d7fc74d3", "chunk": "diff --git a/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java b/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\nindex 29490a748b..fad98d466d 100644\n--- a/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\n+++ b/OsmAnd-java/src/main/java/net/osmand/router/GeneralRouter.java\n\n@@ -633,31 +639,25 @@ public class GeneralRouter implements VehicleRouter {\n //\t\t\t}\n //\t\t}\n \t\t\n-\t\t\n \t\tif(segment.getRoad().roundabout() && !prev.getRoad().roundabout()) {\n \t\t\tdouble rt = getRoundaboutTurn();\n \t\t\tif(rt > 0) {\n-\t\t\t\treturn rt;\n+\t\t\t\ttotalPenalty += rt;\n \t\t\t}\n-\t\t}\n-\t\tif (getLeftTurn() > 0 || getRightTurn() > 0) {\n-\t\t\tdouble a1 = segment.getRoad().directionRoute(segment.getSegmentStart(), segment.getSegmentStart() < segmentEnd);\n+\t\t} else if (getLeftTurn() > 0 || getRightTurn() > 0) {\n+\t\t\tdouble a1 = segment.getRoad().directionRoute(segment.getSegmentStart(),\n+\t\t\t\t\tsegment.getSegmentStart() < segmentEnd);\n \t\t\tdouble a2 = prev.getRoad().directionRoute(prevSegmentEnd, prevSegmentEnd < prev.getSegmentStart());\n \t\t\tdouble diff = Math.abs(MapUtils.alignAngleDifference(a1 - a2 - Math.PI));\n \t\t\t// more like UT\n \t\t\tif (diff > 2 * Math.PI / 3) {\n-\t\t\t\treturn getLeftTurn();\n+\t\t\t\ttotalPenalty += getLeftTurn();\n \t\t\t} else if (diff > Math.PI / 3) {\n-\t\t\t\treturn getRightTurn();\n+\t\t\t\ttotalPenalty += getRightTurn();\n \t\t\t}\n-\t\t\treturn 0;\n \t\t}\n \t\t\n-\t\tif (ts != prevTs) {\n-\t\t\treturn prevTs + ts;\n-\n-\t\t}\n-\t\treturn 0;\n+\t\treturn totalPenalty;\n \t}\n \t\n \n"}}, {"oid": "a94e3ace11eff11b5775e64035343e51d7fc74d3", "url": "https://github.com/osmandapp/OsmAnd/commit/a94e3ace11eff11b5775e64035343e51d7fc74d3", "message": "#10230 Change leftTurn", "committedDate": "2020-12-29T12:31:08Z", "type": "commit"}]}