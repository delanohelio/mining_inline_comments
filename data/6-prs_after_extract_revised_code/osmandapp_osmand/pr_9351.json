{"pr_number": 9351, "pr_title": "fix for incomplete roads reading #9298", "pr_createdAt": "2020-06-30T09:29:32Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/9351", "timeline": [{"oid": "9db069dd05ed98a927a70e169b309e37be44d2e6", "url": "https://github.com/osmandapp/OsmAnd/commit/9db069dd05ed98a927a70e169b309e37be44d2e6", "message": "fix for incomplete roads reading", "committedDate": "2020-06-30T09:03:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc4Mzc5MA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9351#discussion_r447783790", "bodyText": "?", "author": "vshcherb", "createdAt": "2020-06-30T15:41:32Z", "path": "OsmAnd-java/src/main/java/net/osmand/binary/BinaryMapIndexReader.java", "diffHunk": "@@ -111,7 +111,7 @@ public boolean accept(PoiCategory type, String subcategory) {\n \t/*private*/ List<TransportIndex> transportIndexes = new ArrayList<TransportIndex>();\n \t/*private*/ List<RouteRegion> routingIndexes = new ArrayList<RouteRegion>();\n \t/*private*/ List<BinaryIndexPart> indexes = new ArrayList<BinaryIndexPart>();\n-\tTLongObjectHashMap<IncompleteTransportRoute> incompleteTransportRoutes = null;\n+\tMap<TransportIndex, TLongObjectHashMap<IncompleteTransportRoute>> incompleteTransportRoutes = null;", "originalCommit": "9db069dd05ed98a927a70e169b309e37be44d2e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86b08b7568ecfd4c0316b3af8540229a2fb9fd7a", "chunk": "diff --git a/OsmAnd-java/src/main/java/net/osmand/binary/BinaryMapIndexReader.java b/OsmAnd-java/src/main/java/net/osmand/binary/BinaryMapIndexReader.java\nindex 3e3b92a41e..c8f84796b9 100644\n--- a/OsmAnd-java/src/main/java/net/osmand/binary/BinaryMapIndexReader.java\n+++ b/OsmAnd-java/src/main/java/net/osmand/binary/BinaryMapIndexReader.java\n\n@@ -111,7 +111,7 @@ public class BinaryMapIndexReader {\n \t/*private*/ List<TransportIndex> transportIndexes = new ArrayList<TransportIndex>();\n \t/*private*/ List<RouteRegion> routingIndexes = new ArrayList<RouteRegion>();\n \t/*private*/ List<BinaryIndexPart> indexes = new ArrayList<BinaryIndexPart>();\n-\tMap<TransportIndex, TLongObjectHashMap<IncompleteTransportRoute>> incompleteTransportRoutes = null;\n+\tTLongObjectHashMap<IncompleteTransportRoute> incompleteTransportRoutes = null;\n \t\n \tprotected CodedInputStream codedIS;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc4NDI3Mw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9351#discussion_r447784273", "bodyText": "? not needed change", "author": "vshcherb", "createdAt": "2020-06-30T15:42:14Z", "path": "OsmAnd-java/src/main/java/net/osmand/router/TransportStopsRouteReader.java", "diffHunk": "@@ -388,18 +389,22 @@ private boolean tryToMergeMissingStops(List<TransportStop> firstSegment, List<Tr\n \t\tList<TransportRoute> allRoutes = null;\n \t\tfor (BinaryMapIndexReader bmir : routesFilesCache.keySet()) {\n \t\t\t// here we could limit routeMap indexes by only certain bbox around start / end (check comment on field)\n-\t\t\tIncompleteTransportRoute ptr = bmir.getIncompleteTransportRoutes().get(baseRoute.getId());", "originalCommit": "9db069dd05ed98a927a70e169b309e37be44d2e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86b08b7568ecfd4c0316b3af8540229a2fb9fd7a", "chunk": "diff --git a/OsmAnd-java/src/main/java/net/osmand/router/TransportStopsRouteReader.java b/OsmAnd-java/src/main/java/net/osmand/router/TransportStopsRouteReader.java\nindex fd4b88e393..7428196332 100644\n--- a/OsmAnd-java/src/main/java/net/osmand/router/TransportStopsRouteReader.java\n+++ b/OsmAnd-java/src/main/java/net/osmand/router/TransportStopsRouteReader.java\n\n@@ -389,32 +389,21 @@ public class TransportStopsRouteReader {\n \t\tList<TransportRoute> allRoutes = null;\n \t\tfor (BinaryMapIndexReader bmir : routesFilesCache.keySet()) {\n \t\t\t// here we could limit routeMap indexes by only certain bbox around start / end (check comment on field)\n-\t\t\tif (!bmir.getIncompleteTransportRoutes().isEmpty()) {\n-\t\t\t\tfor (Entry<TransportIndex, TLongObjectHashMap<IncompleteTransportRoute>> entry : bmir.getIncompleteTransportRoutes().entrySet()) {\n-\t\t\t\t\tIncompleteTransportRoute ptr = entry.getValue().get(baseRoute.getId());\n-\t\t\t\t\tif (ptr != null) {\n-\t\t\t\t\t\tTIntArrayList lst = new TIntArrayList();\n-\t\t\t\t\t\twhile (ptr != null) {\n-\t\t\t\t\t\t\tlst.add(ptr.getRouteOffset());\n-\t\t\t\t\t\t\tptr = ptr.getNextLinkedRoute();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (lst.size() > 0) {\n-\t\t\t\t\t\t\tif (allRoutes == null) {\n-\t\t\t\t\t\t\t\tallRoutes = new ArrayList<TransportRoute>();\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tallRoutes.addAll(bmir.getTransportRoutes(lst.toArray()).valueCollection());\n-\t\t\t\t\t\t}\n+\t\t\tIncompleteTransportRoute ptr = bmir.getIncompleteTransportRoutes().get(baseRoute.getId());\n+\t\t\tif (ptr != null) {\n+\t\t\t\tTIntArrayList lst = new TIntArrayList();\n+\t\t\t\twhile (ptr != null) {\n+\t\t\t\t\tlst.add(ptr.getRouteOffset());\n+\t\t\t\t\tptr = ptr.getNextLinkedRoute();\n+\t\t\t\t}\n+\t\t\t\tif (lst.size() > 0) {\n+\t\t\t\t\tif (allRoutes == null) {\n+\t\t\t\t\t\tallRoutes = new ArrayList<TransportRoute>();\n \t\t\t\t\t}\n+\t\t\t\t\tallRoutes.addAll(bmir.getTransportRoutes(lst.toArray()).valueCollection());\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn allRoutes;\n \t}\n-\n-\t\n-\n-\t\n-\n-\n-\t\n }\n"}}, {"oid": "86b08b7568ecfd4c0316b3af8540229a2fb9fd7a", "url": "https://github.com/osmandapp/OsmAnd/commit/86b08b7568ecfd4c0316b3af8540229a2fb9fd7a", "message": "fix cache and incomplete route offset", "committedDate": "2020-07-01T10:29:56Z", "type": "commit"}]}