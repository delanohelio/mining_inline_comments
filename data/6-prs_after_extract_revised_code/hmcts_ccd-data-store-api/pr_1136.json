{"pr_number": 1136, "pr_title": "Removed Sonar exclusions", "pr_createdAt": "2020-09-23T10:11:12Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1136", "timeline": [{"oid": "b8fdd46adb17a7d955f3769cdedc16dc2bbc1eed", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b8fdd46adb17a7d955f3769cdedc16dc2bbc1eed", "message": "Removed Sonar exclusions", "committedDate": "2020-09-23T10:09:28Z", "type": "commit"}, {"oid": "efc8c16b4fc1cd0adc1f7eac01288637b53f0d94", "url": "https://github.com/hmcts/ccd-data-store-api/commit/efc8c16b4fc1cd0adc1f7eac01288637b53f0d94", "message": "Merge branch 'develop' into RDM-9643_new", "committedDate": "2020-09-28T18:09:25Z", "type": "commit"}, {"oid": "377d4a022441c0c229be596eb701786771a72601", "url": "https://github.com/hmcts/ccd-data-store-api/commit/377d4a022441c0c229be596eb701786771a72601", "message": "Added a null check", "committedDate": "2020-10-01T10:45:03Z", "type": "commit"}, {"oid": "4ec12f720b2c77aecce3223c61942b50b0335d6a", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4ec12f720b2c77aecce3223c61942b50b0335d6a", "message": "Merge remote-tracking branch 'origin/RDM-9643_new' into RDM-9643_new", "committedDate": "2020-10-01T10:45:40Z", "type": "commit"}, {"oid": "d23aa951bfe5fd08953cc21425b192a23728c6f9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d23aa951bfe5fd08953cc21425b192a23728c6f9", "message": "adding new CVE CVE-2020-5421", "committedDate": "2020-10-01T11:42:20Z", "type": "commit"}, {"oid": "763a5d19df5b384cc0ae43ec474df7045f589358", "url": "https://github.com/hmcts/ccd-data-store-api/commit/763a5d19df5b384cc0ae43ec474df7045f589358", "message": "Added a null check", "committedDate": "2020-10-01T14:20:57Z", "type": "commit"}, {"oid": "f67b7281017b3491f513d2556b5ae78b63673c5f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f67b7281017b3491f513d2556b5ae78b63673c5f", "message": "Added a null check", "committedDate": "2020-10-01T15:29:27Z", "type": "commit"}, {"oid": "58d5951e0d6d27040eab49a8c7b3de5c4eb568b2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/58d5951e0d6d27040eab49a8c7b3de5c4eb568b2", "message": "Added a null check", "committedDate": "2020-10-01T16:12:11Z", "type": "commit"}, {"oid": "4891b1fa14ead3e31181ef1397f76608e0c7baa0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4891b1fa14ead3e31181ef1397f76608e0c7baa0", "message": "Added a null check", "committedDate": "2020-10-05T10:34:03Z", "type": "commit"}, {"oid": "5d1453aacbbaa8af09fe55cd93b0226cdd069f3a", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5d1453aacbbaa8af09fe55cd93b0226cdd069f3a", "message": "Merge branches 'RDM-9643_new' and 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-9643_new", "committedDate": "2020-10-05T12:33:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NDkzMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1136#discussion_r499864931", "bodyText": "getLocation is a bad naming. Please use a better one like, location.", "author": "MSancaktutar", "createdAt": "2020-10-05T20:51:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java", "diffHunk": "@@ -205,7 +209,11 @@ private DraftResponse assembleDraft(Draft getDraft, Consumer<Exception> exceptio\n \n \n     private Long getDraftId(HttpHeaders responseHeaders) {\n-        String path = responseHeaders.getLocation().getPath();\n-        return Long.valueOf(path.substring(path.lastIndexOf('/') + 1));\n+        URI getLocation = responseHeaders.getLocation();", "originalCommit": "5d1453aacbbaa8af09fe55cd93b0226cdd069f3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfe090c8f3bae44bf9fbef18d3e5ea0410a519a5", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\nindex e2a7acae8..7026cafe7 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n\n@@ -209,10 +209,10 @@ public class DefaultDraftGateway implements DraftGateway {\n \n \n     private Long getDraftId(HttpHeaders responseHeaders) {\n-        URI getLocation = responseHeaders.getLocation();\n+        URI location = responseHeaders.getLocation();\n         String path = null;\n-        if (getLocation != null) {\n-            path = getLocation.getPath();\n+        if (location != null) {\n+            path = location.getPath();\n         }\n         return path == null ? null : Long.valueOf(path.substring(path.lastIndexOf('/') + 1));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NTY4OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1136#discussion_r499865688", "bodyText": "please improve naming: getDraft  to draft.", "author": "MSancaktutar", "createdAt": "2020-10-05T20:52:42Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java", "diffHunk": "@@ -192,11 +194,13 @@ private String getUriWithQueryParams() {\n     private DraftResponse assembleDraft(Draft getDraft, Consumer<Exception> exceptionConsumer) {\n         final DraftResponse draftResponse = new DraftResponse();\n         try {\n-            draftResponse.setId(getDraft.getId());\n-            draftResponse.setDocument(MAPPER.treeToValue(getDraft.getDocument(), CaseDraft.class));\n-            draftResponse.setType(getDraft.getType());\n-            draftResponse.setCreated(getDraft.getCreated().toLocalDateTime());\n-            draftResponse.setUpdated(getDraft.getUpdated().toLocalDateTime());\n+            if (getDraft != null) {", "originalCommit": "5d1453aacbbaa8af09fe55cd93b0226cdd069f3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfe090c8f3bae44bf9fbef18d3e5ea0410a519a5", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\nindex e2a7acae8..7026cafe7 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n\n@@ -191,15 +191,15 @@ public class DefaultDraftGateway implements DraftGateway {\n             .queryParam(\"limit\", Integer.MAX_VALUE).toUriString();\n     }\n \n-    private DraftResponse assembleDraft(Draft getDraft, Consumer<Exception> exceptionConsumer) {\n+    private DraftResponse assembleDraft(Draft draft, Consumer<Exception> exceptionConsumer) {\n         final DraftResponse draftResponse = new DraftResponse();\n         try {\n-            if (getDraft != null) {\n-                draftResponse.setId(getDraft.getId());\n-                draftResponse.setDocument(MAPPER.treeToValue(getDraft.getDocument(), CaseDraft.class));\n-                draftResponse.setType(getDraft.getType());\n-                draftResponse.setCreated(getDraft.getCreated().toLocalDateTime());\n-                draftResponse.setUpdated(getDraft.getUpdated().toLocalDateTime());\n+            if (draft != null) {\n+                draftResponse.setId(draft.getId());\n+                draftResponse.setDocument(MAPPER.treeToValue(draft.getDocument(), CaseDraft.class));\n+                draftResponse.setType(draft.getType());\n+                draftResponse.setCreated(draft.getCreated().toLocalDateTime());\n+                draftResponse.setUpdated(draft.getUpdated().toLocalDateTime());\n             }\n         } catch (IOException e) {\n             exceptionConsumer.accept(e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NjA5Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1136#discussion_r499866096", "bodyText": "please improve naming: getDrafts to drafts.", "author": "MSancaktutar", "createdAt": "2020-10-05T20:53:33Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java", "diffHunk": "@@ -161,7 +163,7 @@ public void delete(final String draftId) {\n             final HttpEntity requestEntity = new HttpEntity(headers);\n             DraftList getDrafts = restTemplate.exchange(\n                 getUriWithQueryParams(), HttpMethod.GET, requestEntity, DraftList.class).getBody();\n-            return getDrafts.getData()\n+            return getDrafts == null ? null : getDrafts.getData()", "originalCommit": "5d1453aacbbaa8af09fe55cd93b0226cdd069f3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfe090c8f3bae44bf9fbef18d3e5ea0410a519a5", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\nindex e2a7acae8..7026cafe7 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/draft/DefaultDraftGateway.java\n\n@@ -161,9 +161,9 @@ public class DefaultDraftGateway implements DraftGateway {\n             HttpHeaders headers = securityUtils.authorizationHeaders();\n             headers.add(DRAFT_ENCRYPTION_KEY_HEADER, applicationParams.getDraftEncryptionKey());\n             final HttpEntity requestEntity = new HttpEntity(headers);\n-            DraftList getDrafts = restTemplate.exchange(\n+            DraftList drafts = restTemplate.exchange(\n                 getUriWithQueryParams(), HttpMethod.GET, requestEntity, DraftList.class).getBody();\n-            return getDrafts == null ? null : getDrafts.getData()\n+            return drafts == null ? null : drafts.getData()\n                 .stream()\n                 .map(d -> assembleDraft(d, getDraftsExceptionConsumer()))\n                 .collect(Collectors.toList());\n"}}, {"oid": "cfe090c8f3bae44bf9fbef18d3e5ea0410a519a5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cfe090c8f3bae44bf9fbef18d3e5ea0410a519a5", "message": "Incorporated name change comments.", "committedDate": "2020-10-06T08:29:28Z", "type": "commit"}, {"oid": "0973e4f7b7e1d0c8a483a3a020a92341ad9613c2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0973e4f7b7e1d0c8a483a3a020a92341ad9613c2", "message": "fake sanitisation to shut up stupid Sonar flag", "committedDate": "2020-10-07T20:55:43Z", "type": "forcePushed"}, {"oid": "96080bbe74e17741a48768f1e0058b9770d6a5fe", "url": "https://github.com/hmcts/ccd-data-store-api/commit/96080bbe74e17741a48768f1e0058b9770d6a5fe", "message": "fake sanitisation to shut up stupid Sonar flag", "committedDate": "2020-10-07T20:59:28Z", "type": "forcePushed"}, {"oid": "fc3ca900dde7b3daf35912dd1d6fba2278238251", "url": "https://github.com/hmcts/ccd-data-store-api/commit/fc3ca900dde7b3daf35912dd1d6fba2278238251", "message": "fake sanitisation to shut up stupid Sonar flag", "committedDate": "2020-10-07T21:02:51Z", "type": "forcePushed"}, {"oid": "91014b28fe7f366b06c108747397d90fe8b98334", "url": "https://github.com/hmcts/ccd-data-store-api/commit/91014b28fe7f366b06c108747397d90fe8b98334", "message": "Validating DraftId, updated testcase.", "committedDate": "2020-10-07T21:06:06Z", "type": "commit"}, {"oid": "6ff7f122dab8b32c3efc232cfa6cfd4528ae67ad", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6ff7f122dab8b32c3efc232cfa6cfd4528ae67ad", "message": "fake sanitisation to shut up stupid Sonar flag", "committedDate": "2020-10-07T21:06:07Z", "type": "commit"}, {"oid": "6ff7f122dab8b32c3efc232cfa6cfd4528ae67ad", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6ff7f122dab8b32c3efc232cfa6cfd4528ae67ad", "message": "fake sanitisation to shut up stupid Sonar flag", "committedDate": "2020-10-07T21:06:07Z", "type": "forcePushed"}]}