{"pr_number": 1267, "pr_title": "RDM-10169 populate Message Candidate table for Case Event", "pr_createdAt": "2020-12-07T14:47:54Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1267", "timeline": [{"oid": "301bd9276b2a06898a38b545c06ba97a3574e39d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/301bd9276b2a06898a38b545c06ba97a3574e39d", "message": "RDM-10169 Publish Case Event to message candidate table", "committedDate": "2020-12-07T14:36:16Z", "type": "commit"}, {"oid": "a55e99aaebe55f8b58d2c503aad985ca54336a23", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a55e99aaebe55f8b58d2c503aad985ca54336a23", "message": "RDM-10169 Publish Case Event to message candidate table", "committedDate": "2020-12-07T14:46:54Z", "type": "commit"}, {"oid": "5bf8185e94d9de4885393a7f060c38f1233ae255", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5bf8185e94d9de4885393a7f060c38f1233ae255", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2020-12-07T14:52:12Z", "type": "commit"}, {"oid": "c1a07e7c3814070ab168b2e8b59c8e4f2f8b5cfe", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c1a07e7c3814070ab168b2e8b59c8e4f2f8b5cfe", "message": "RDM-10169 Publish Case Event to message candidate table", "committedDate": "2020-12-07T15:59:13Z", "type": "commit"}, {"oid": "ac2ed7897e8e36991fc1e06a3458d86778ecec16", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ac2ed7897e8e36991fc1e06a3458d86778ecec16", "message": "RDM-10169 Publish Case Event to message candidate table - added mapper test", "committedDate": "2020-12-07T16:56:41Z", "type": "commit"}, {"oid": "f93809629d2cba225d6907f4b1006980723989e6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f93809629d2cba225d6907f4b1006980723989e6", "message": "RDM-10169 Publish Case Event to message candidate table - duplicate lines of code", "committedDate": "2020-12-07T17:26:47Z", "type": "commit"}, {"oid": "9377c0a879685b5e88082408a35c59ad41a335b0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9377c0a879685b5e88082408a35c59ad41a335b0", "message": "RDM-10169 Updated functional tests", "committedDate": "2020-12-08T09:12:14Z", "type": "commit"}, {"oid": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d800d74b7a37dda3fd8396c010ff60cf46bd2677", "message": "RDM-10169 Updated to capture event instance ID", "committedDate": "2020-12-08T14:48:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU1NDE0NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538554145", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger LOG = LoggerFactory.getLogger(MessageCandidateRepository.class);", "author": "danlysiak", "createdAt": "2020-12-08T16:16:49Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package uk.gov.hmcts.ccd.data.message;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+\n+@Named\n+@Singleton\n+public class MessageCandidateRepository {\n+    private static final Logger LOG = LoggerFactory.getLogger(MessageCandidateRepository.class);", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNTgzOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539235838", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU1NDE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java b/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\nindex af977e391..354151a8b 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\n\n@@ -1,7 +1,5 @@\n package uk.gov.hmcts.ccd.data.message;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n import javax.inject.Inject;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4ODA0NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538588044", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {\n          \n          \n            \n                    if (caseEventDefinition.getPublish()) {", "author": "danlysiak", "createdAt": "2020-12-08T16:46:52Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.Event;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository) {\n+        this.userRepository = userRepository;\n+        this.messageCandidateRepository = messageCandidateRepository;\n+        this.caseAuditEventRepository = caseAuditEventRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(Event event,\n+                              CaseEventDefinition caseEventDefinition,\n+                              CaseDetails caseDetails) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3Njg0NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539276845", "bodyText": "As caseEventDefinition.getPublish() can be null your suggestion would provide a null pointer error", "author": "RebeccaBaker", "createdAt": "2020-12-09T12:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4ODA0NA=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex e3d8a439b..94f33bd55 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n-import uk.gov.hmcts.ccd.domain.model.std.Event;\n import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5MDQzMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538590433", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n          \n          \n            \n                private static final String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";", "author": "danlysiak", "createdAt": "2020-12-08T16:49:02Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.Event;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNTkwMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539235902", "bodyText": "done", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5MDQzMw=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex e3d8a439b..94f33bd55 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n-import uk.gov.hmcts.ccd.domain.model.std.Event;\n import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NjU0Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538596546", "bodyText": "Can't see the definition of the PreviousStateId in the scope doc, but I assumed it's meant to be the state of the case prior to this event rather than one of the pre-condition states (which I think is what that is currently)?", "author": "danlysiak", "createdAt": "2020-12-08T16:54:18Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.Event;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository) {\n+        this.userRepository = userRepository;\n+        this.messageCandidateRepository = messageCandidateRepository;\n+        this.caseAuditEventRepository = caseAuditEventRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(Event event,\n+                              CaseEventDefinition caseEventDefinition,\n+                              CaseDetails caseDetails) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {\n+\n+            MessageInformation messageInformation = populateMessageInformation(event, caseEventDefinition, caseDetails);\n+            JsonNode node = mapper.convertValue(messageInformation, JsonNode.class);\n+\n+            messageQueueCandidate.setMessageInformation(node);\n+            messageQueueCandidate.setMessageType(CASE_EVENT_MESSAGE_TYPE);\n+            messageQueueCandidate.setTimeStamp(LocalDateTime.now(ZoneOffset.UTC));\n+            messageCandidateRepository.set(messageQueueCandidate);\n+        }\n+    }\n+\n+    private MessageInformation populateMessageInformation(Event event,\n+                                                          CaseEventDefinition caseEventDefinition,\n+                                                          CaseDetails caseDetails) {\n+\n+        final MessageInformation messageInformation = new MessageInformation();\n+        final IdamUser user = userRepository.getUser();\n+        List<AuditEvent> auditEvent = caseAuditEventRepository.findByCase(caseDetails);\n+\n+        messageInformation.setCaseId(caseDetails.getReference().toString());\n+        messageInformation.setJurisdictionId(caseDetails.getJurisdiction());\n+        messageInformation.setCaseTypeId(caseDetails.getCaseTypeId());\n+        messageInformation.setEventInstanceId(auditEvent.get(0).getId().toString());\n+        messageInformation.setEventTimestamp(caseDetails.getLastStateModifiedDate());\n+        messageInformation.setEventId(event.getEventId());\n+        messageInformation.setUserId(user.getId());\n+        messageInformation.setPreviousStateId(getPreState(caseEventDefinition.getPreStates()));", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNjA3Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539236076", "bodyText": "sorted, good spot \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:41:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NjU0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex e3d8a439b..94f33bd55 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n-import uk.gov.hmcts.ccd.domain.model.std.Event;\n import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NzUyNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538597525", "bodyText": "I don't think LastStateModifiedDate is necessarily the same as EventTimestamp (e.g. if an event doesn't change the state)", "author": "danlysiak", "createdAt": "2020-12-08T16:55:11Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.Event;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository) {\n+        this.userRepository = userRepository;\n+        this.messageCandidateRepository = messageCandidateRepository;\n+        this.caseAuditEventRepository = caseAuditEventRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(Event event,\n+                              CaseEventDefinition caseEventDefinition,\n+                              CaseDetails caseDetails) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {\n+\n+            MessageInformation messageInformation = populateMessageInformation(event, caseEventDefinition, caseDetails);\n+            JsonNode node = mapper.convertValue(messageInformation, JsonNode.class);\n+\n+            messageQueueCandidate.setMessageInformation(node);\n+            messageQueueCandidate.setMessageType(CASE_EVENT_MESSAGE_TYPE);\n+            messageQueueCandidate.setTimeStamp(LocalDateTime.now(ZoneOffset.UTC));\n+            messageCandidateRepository.set(messageQueueCandidate);\n+        }\n+    }\n+\n+    private MessageInformation populateMessageInformation(Event event,\n+                                                          CaseEventDefinition caseEventDefinition,\n+                                                          CaseDetails caseDetails) {\n+\n+        final MessageInformation messageInformation = new MessageInformation();\n+        final IdamUser user = userRepository.getUser();\n+        List<AuditEvent> auditEvent = caseAuditEventRepository.findByCase(caseDetails);\n+\n+        messageInformation.setCaseId(caseDetails.getReference().toString());\n+        messageInformation.setJurisdictionId(caseDetails.getJurisdiction());\n+        messageInformation.setCaseTypeId(caseDetails.getCaseTypeId());\n+        messageInformation.setEventInstanceId(auditEvent.get(0).getId().toString());\n+        messageInformation.setEventTimestamp(caseDetails.getLastStateModifiedDate());", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNjE2MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539236161", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5NzUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex e3d8a439b..94f33bd55 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n-import uk.gov.hmcts.ccd.domain.model.std.Event;\n import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYwNTY5Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538605696", "bodyText": "Could make this a Long to avoid needing to convert between String/Long whenever creating the object.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String eventInstanceId;\n          \n          \n            \n                private Long eventInstanceId;", "author": "danlysiak", "createdAt": "2020-12-08T17:01:51Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+import java.time.LocalDateTime;\n+import java.util.Map;\n+\n+@SuppressWarnings(\"checkstyle:SummaryJavadoc\") // Javadoc predates checkstyle implementation in module\n+public class MessageInformation {\n+    @JsonIgnore\n+    private Long id;\n+    @JsonProperty(\"user_id\")\n+    private String userId;\n+    @JsonProperty(\"jurisdiction_id\")\n+    private String jurisdictionId;\n+    @JsonProperty(\"case_type_id\")\n+    private String caseTypeId;\n+    @JsonProperty(\"case_id\")\n+    private String caseId;\n+    @JsonProperty(\"event_timestamp\")\n+    private LocalDateTime eventTimestamp;\n+    @JsonProperty(\"event_instance_id\")\n+    private String eventInstanceId;", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNjI2Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539236267", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYwNTY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java b/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\nindex 264f0e8b6..239eb3b13 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\n\n@@ -23,7 +23,7 @@ public class MessageInformation {\n     @JsonProperty(\"event_timestamp\")\n     private LocalDateTime eventTimestamp;\n     @JsonProperty(\"event_instance_id\")\n-    private String eventInstanceId;\n+    private Long eventInstanceId;\n     @JsonProperty(\"event_id\")\n     private String eventId;\n     @JsonProperty(\"previous_state_id\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxMjY3MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r538612671", "bodyText": "Can EventId be obtained from CaseEventDefinition, then we can remove Event from the method signature completely?", "author": "danlysiak", "createdAt": "2020-12-08T17:08:15Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.Event;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository) {\n+        this.userRepository = userRepository;\n+        this.messageCandidateRepository = messageCandidateRepository;\n+        this.caseAuditEventRepository = caseAuditEventRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(Event event,\n+                              CaseEventDefinition caseEventDefinition,\n+                              CaseDetails caseDetails) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {\n+\n+            MessageInformation messageInformation = populateMessageInformation(event, caseEventDefinition, caseDetails);\n+            JsonNode node = mapper.convertValue(messageInformation, JsonNode.class);\n+\n+            messageQueueCandidate.setMessageInformation(node);\n+            messageQueueCandidate.setMessageType(CASE_EVENT_MESSAGE_TYPE);\n+            messageQueueCandidate.setTimeStamp(LocalDateTime.now(ZoneOffset.UTC));\n+            messageCandidateRepository.set(messageQueueCandidate);\n+        }\n+    }\n+\n+    private MessageInformation populateMessageInformation(Event event,\n+                                                          CaseEventDefinition caseEventDefinition,\n+                                                          CaseDetails caseDetails) {\n+\n+        final MessageInformation messageInformation = new MessageInformation();\n+        final IdamUser user = userRepository.getUser();\n+        List<AuditEvent> auditEvent = caseAuditEventRepository.findByCase(caseDetails);\n+\n+        messageInformation.setCaseId(caseDetails.getReference().toString());\n+        messageInformation.setJurisdictionId(caseDetails.getJurisdiction());\n+        messageInformation.setCaseTypeId(caseDetails.getCaseTypeId());\n+        messageInformation.setEventInstanceId(auditEvent.get(0).getId().toString());\n+        messageInformation.setEventTimestamp(caseDetails.getLastStateModifiedDate());\n+        messageInformation.setEventId(event.getEventId());", "originalCommit": "d800d74b7a37dda3fd8396c010ff60cf46bd2677", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzNzMxOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539237318", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-09T11:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxMjY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex e3d8a439b..94f33bd55 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n-import uk.gov.hmcts.ccd.domain.model.std.Event;\n import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n"}}, {"oid": "3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3fc0cf5cd24bb5a5fe8222ccd63b446eb9d616a0", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-09T11:40:11Z", "type": "commit"}, {"oid": "b6bfbac73607c2f784c2e5f61749cc5c05911a71", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b6bfbac73607c2f784c2e5f61749cc5c05911a71", "message": "Merge branch 'master' into RDM-10169\n\n# Conflicts:\n#\tsrc/main/resources/db/changelog/db.changelog-master.xml", "committedDate": "2020-12-09T11:48:24Z", "type": "commit"}, {"oid": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "url": "https://github.com/hmcts/ccd-data-store-api/commit/553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-09T12:20:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NDM0Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539454342", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public MessageQueueCandidate set(final MessageQueueCandidate messageQueueCandidate) {\n          \n          \n            \n                public MessageQueueCandidate save(final MessageQueueCandidate messageQueueCandidate) {", "author": "mario-paniccia", "createdAt": "2020-12-09T16:28:23Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package uk.gov.hmcts.ccd.data.message;\n+\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+\n+@Named\n+@Singleton\n+public class MessageCandidateRepository {\n+    private final MessageCandidateMapper messageCandidateMapper;\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    @Inject\n+    public MessageCandidateRepository(final MessageCandidateMapper messageCandidateMapper) {\n+        this.messageCandidateMapper = messageCandidateMapper;\n+    }\n+\n+    public MessageQueueCandidate set(final MessageQueueCandidate messageQueueCandidate) {", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ab0b003f4b5f22bcf32ba1a289c76c4881bfcc3", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java b/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\nindex 354151a8b..8d83229f1 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\n\n@@ -21,7 +21,7 @@ public class MessageCandidateRepository {\n         this.messageCandidateMapper = messageCandidateMapper;\n     }\n \n-    public MessageQueueCandidate set(final MessageQueueCandidate messageQueueCandidate) {\n+    public MessageQueueCandidate save(final MessageQueueCandidate messageQueueCandidate) {\n         final MessageQueueCandidateEntity newMessageCandidateEntity =\n             messageCandidateMapper.modelToEntity(messageQueueCandidate);\n         em.persist(newMessageCandidateEntity);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NzI0Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539457242", "bodyText": "FYI for the upcoming phase 2 the additionalData field will be changed to contain 2 fields: data and definition. See: https://tools.hmcts.net/confluence/pages/viewpage.action?pageId=1460561625#WorkAllocationPhase2ScopeofDelivery-NewMessageQueueCandidatesDatabaseStructure\nMentioning this in case you prefer to update to the new structure as part of the PR or later on phase 2. As you prefer", "author": "mario-paniccia", "createdAt": "2020-12-09T16:31:45Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+import java.time.LocalDateTime;\n+import java.util.Map;\n+\n+@SuppressWarnings(\"checkstyle:SummaryJavadoc\") // Javadoc predates checkstyle implementation in module\n+public class MessageInformation {\n+    @JsonIgnore\n+    private Long id;\n+    @JsonProperty(\"user_id\")\n+    private String userId;\n+    @JsonProperty(\"jurisdiction_id\")\n+    private String jurisdictionId;\n+    @JsonProperty(\"case_type_id\")\n+    private String caseTypeId;\n+    @JsonProperty(\"case_id\")\n+    private String caseId;\n+    @JsonProperty(\"event_timestamp\")\n+    private LocalDateTime eventTimestamp;\n+    @JsonProperty(\"event_instance_id\")\n+    private Long eventInstanceId;\n+    @JsonProperty(\"event_id\")\n+    private String eventId;\n+    @JsonProperty(\"previous_state_id\")\n+    private String previousStateId;\n+    @JsonProperty(\"new_state_id\")\n+    private String newStateId;\n+    @JsonProperty(\"additional_data\")\n+    @ApiModelProperty(\"A JSON object (for future use) that contains additional case fields that have been configured \"\n+        + \"to be included in the event information that is published.\")\n+    private Map<String, JsonNode> data;", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwOTI2MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r540309261", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-10T16:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NzI0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "de7a5f355412117ba58158b613d2af495f0ec520", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java b/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\nindex 239eb3b13..b809448c1 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/model/std/MessageInformation.java\n\n@@ -2,11 +2,9 @@ package uk.gov.hmcts.ccd.domain.model.std;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.databind.JsonNode;\n import io.swagger.annotations.ApiModelProperty;\n \n import java.time.LocalDateTime;\n-import java.util.Map;\n \n @SuppressWarnings(\"checkstyle:SummaryJavadoc\") // Javadoc predates checkstyle implementation in module\n public class MessageInformation {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1OTAwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539459003", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Qualifier(\"default\")\n          \n          \n            \n            @Qualifier(\"caseEventMessageService\")", "author": "mario-paniccia", "createdAt": "2020-12-09T16:33:51Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb01efb10e1948093128ae521fde2439409e1ea9", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 01c9de424..0804151c3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -21,7 +21,7 @@ import java.time.ZoneOffset;\n import java.util.List;\n \n @Service\n-@Qualifier(\"default\")\n+@Qualifier(\"caseEventMessageService\")\n public class CaseEventMessageService implements MessageService {\n \n     private static final ObjectMapper mapper = new ObjectMapper();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2MDIyMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539460221", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                             final MessageService messageService\n          \n          \n            \n                        final  @Qualifier(\"caseEventMessageService\") MessageService messageService", "author": "mario-paniccia", "createdAt": "2020-12-09T16:35:21Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java", "diffHunk": "@@ -55,7 +57,8 @@ public SubmitCaseTransaction(@Qualifier(CachedCaseDetailsRepository.QUALIFIER)\n                                  final SecurityClassificationService securityClassificationService,\n                                  final @Qualifier(CachedCaseUserRepository.QUALIFIER)\n                                          CaseUserRepository caseUserRepository,\n-                                 final UserAuthorisation userAuthorisation\n+                                 final UserAuthorisation userAuthorisation,\n+                                 final MessageService messageService", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c4deaf16efa0c6968d6f5d558d59cb2389adbe6", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java\nindex 0dd5cf418..524fe0ce9 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java\n\n@@ -58,7 +58,7 @@ class SubmitCaseTransaction {\n                                  final @Qualifier(CachedCaseUserRepository.QUALIFIER)\n                                          CaseUserRepository caseUserRepository,\n                                  final UserAuthorisation userAuthorisation,\n-                                 final MessageService messageService\n+            final  @Qualifier(\"caseEventMessageService\") MessageService messageService\n                                  ) {\n         this.caseDetailsRepository = caseDetailsRepository;\n         this.caseAuditEventRepository = caseAuditEventRepository;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2MTY1MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539461650", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void handleMessage(CaseEventDefinition caseEventDefinition,\n          \n          \n            \n                void handleMessage(MessageContext messageContext)\n          \n      \n    \n    \n  \n\nso that in the future we can extend the API by just adding more required fields to the MessageContext", "author": "mario-paniccia", "createdAt": "2020-12-09T16:37:02Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/MessageService.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+\n+public interface MessageService {\n+\n+    void handleMessage(CaseEventDefinition caseEventDefinition,", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwODc0NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r540308744", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-10T16:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2MTY1MA=="}], "type": "inlineReview", "revised_code": {"commit": "de7a5f355412117ba58158b613d2af495f0ec520", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/MessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/MessageService.java\nindex 171a6e00a..8eed56d62 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/MessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/MessageService.java\n\n@@ -1,10 +1,6 @@\n package uk.gov.hmcts.ccd.domain.service.message;\n \n-import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n-import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n-\n public interface MessageService {\n \n-    void handleMessage(CaseEventDefinition caseEventDefinition,\n-                                 CaseDetails caseDetails, String oldState);\n+    void handleMessage(MessageContext messageContext);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2MzMwNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539463306", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                              final MessageService messageService) {\n          \n          \n            \n            final  @Qualifier(\"caseEventMessageService\") MessageService messageService", "author": "mario-paniccia", "createdAt": "2020-12-09T16:38:56Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -92,7 +95,8 @@ public CreateCaseEventService(@Qualifier(CachedUserRepository.QUALIFIER) final U\n                                   final UserAuthorisation userAuthorisation,\n                                   final FieldProcessorService fieldProcessorService,\n                                   final CasePostStateService casePostStateService,\n-                                  @Qualifier(\"utcClock\") final Clock clock) {\n+                                  @Qualifier(\"utcClock\") final Clock clock,\n+                                  final MessageService messageService) {", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c1f04e2f26e715920faa2e1ec3fdd67a47258a4", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java\nindex 9b89aa038..af14cf8dc 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java\n\n@@ -96,7 +96,7 @@ public class CreateCaseEventService {\n                                   final FieldProcessorService fieldProcessorService,\n                                   final CasePostStateService casePostStateService,\n                                   @Qualifier(\"utcClock\") final Clock clock,\n-                                  final MessageService messageService) {\n+final  @Qualifier(\"caseEventMessageService\") MessageService messageService\n         this.userRepository = userRepository;\n         this.caseDetailsRepository = caseDetailsRepository;\n         this.caseDefinitionRepository = caseDefinitionRepository;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NTM5Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539465396", "bodyText": "enum?", "author": "mario-paniccia", "createdAt": "2020-12-09T16:41:20Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static final String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwOTEzMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r540309131", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-10T16:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NTM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bb01efb10e1948093128ae521fde2439409e1ea9", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 01c9de424..0804151c3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -21,7 +21,7 @@ import java.time.ZoneOffset;\n import java.util.List;\n \n @Service\n-@Qualifier(\"default\")\n+@Qualifier(\"caseEventMessageService\")\n public class CaseEventMessageService implements MessageService {\n \n     private static final ObjectMapper mapper = new ObjectMapper();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODM2Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539468366", "bodyText": "can you inject a Clock : \n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java\n    \n    \n         Line 43\n      in\n      6ae7c52\n    \n    \n    \n    \n\n        \n          \n           public Clock utcClock() { \n        \n    \n  \n\n\ncheck usages for examples", "author": "mario-paniccia", "createdAt": "2020-12-09T16:44:42Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final UserRepository userRepository;\n+    private final MessageCandidateRepository messageCandidateRepository;\n+    private final CaseAuditEventRepository caseAuditEventRepository;\n+    private static final String CASE_EVENT_MESSAGE_TYPE = \"CASE_EVENT\";\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository) {\n+        this.userRepository = userRepository;\n+        this.messageCandidateRepository = messageCandidateRepository;\n+        this.caseAuditEventRepository = caseAuditEventRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(CaseEventDefinition caseEventDefinition,\n+                              CaseDetails caseDetails, String oldState) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(caseEventDefinition.getPublish())) {\n+\n+            MessageInformation messageInformation = populateMessageInformation(caseEventDefinition,\n+                caseDetails, oldState);\n+            JsonNode node = mapper.convertValue(messageInformation, JsonNode.class);\n+\n+            messageQueueCandidate.setMessageInformation(node);\n+            messageQueueCandidate.setMessageType(CASE_EVENT_MESSAGE_TYPE);\n+            messageQueueCandidate.setTimeStamp(LocalDateTime.now(ZoneOffset.UTC));", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwODg1NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r540308854", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-10T16:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODM2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bb01efb10e1948093128ae521fde2439409e1ea9", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 01c9de424..0804151c3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -21,7 +21,7 @@ import java.time.ZoneOffset;\n import java.util.List;\n \n @Service\n-@Qualifier(\"default\")\n+@Qualifier(\"caseEventMessageService\")\n public class CaseEventMessageService implements MessageService {\n \n     private static final ObjectMapper mapper = new ObjectMapper();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MDUyNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r539470524", "bodyText": "considering in the future we might have more classes like this one, we could consider something like this also:\npublic class CaseEventMessageService extends AbstractMessageService\npublic abstract class AbstractMessageService implements MessageService {\nso that we have a place (AbstractMessageService) where to put common code among all subclasses", "author": "mario-paniccia", "createdAt": "2020-12-09T16:47:20Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.IdamUser;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class CaseEventMessageService implements MessageService {", "originalCommit": "553f9719d2381bb31e4b8c96b8d08f02c1e287cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwOTAwMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r540309000", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-10T16:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ3MDUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "bb01efb10e1948093128ae521fde2439409e1ea9", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 01c9de424..0804151c3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -21,7 +21,7 @@ import java.time.ZoneOffset;\n import java.util.List;\n \n @Service\n-@Qualifier(\"default\")\n+@Qualifier(\"caseEventMessageService\")\n public class CaseEventMessageService implements MessageService {\n \n     private static final ObjectMapper mapper = new ObjectMapper();\n"}}, {"oid": "8ab0b003f4b5f22bcf32ba1a289c76c4881bfcc3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8ab0b003f4b5f22bcf32ba1a289c76c4881bfcc3", "message": "Update src/main/java/uk/gov/hmcts/ccd/data/message/MessageCandidateRepository.java\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-12-10T08:20:27Z", "type": "commit"}, {"oid": "6c4deaf16efa0c6968d6f5d558d59cb2389adbe6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6c4deaf16efa0c6968d6f5d558d59cb2389adbe6", "message": "Update src/main/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransaction.java\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-12-10T08:20:48Z", "type": "commit"}, {"oid": "bb01efb10e1948093128ae521fde2439409e1ea9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bb01efb10e1948093128ae521fde2439409e1ea9", "message": "Update src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-12-10T08:20:56Z", "type": "commit"}, {"oid": "9c1f04e2f26e715920faa2e1ec3fdd67a47258a4", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9c1f04e2f26e715920faa2e1ec3fdd67a47258a4", "message": "Update src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-12-10T08:21:05Z", "type": "commit"}, {"oid": "8e9cf7012290c2e34942cf70221c205714134a36", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8e9cf7012290c2e34942cf70221c205714134a36", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-10T10:22:44Z", "type": "commit"}, {"oid": "de7a5f355412117ba58158b613d2af495f0ec520", "url": "https://github.com/hmcts/ccd-data-store-api/commit/de7a5f355412117ba58158b613d2af495f0ec520", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-10T14:03:47Z", "type": "commit"}, {"oid": "b47cfa9cd82cbf874010659416100066ee1460f0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b47cfa9cd82cbf874010659416100066ee1460f0", "message": "RDM-10169 removed public modifier", "committedDate": "2020-12-10T14:55:14Z", "type": "commit"}, {"oid": "05f6a1d193125382a1eac32a6b6440b71111b791", "url": "https://github.com/hmcts/ccd-data-store-api/commit/05f6a1d193125382a1eac32a6b6440b71111b791", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2020-12-11T09:48:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2NzEwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r542267103", "bodyText": "Minor, only if it's not a time consuming change (considering having to refactor tests):\ncan you inject the mapper picking one already configured in JacksonObjectMapperConfig?", "author": "mario-paniccia", "createdAt": "2020-12-14T10:17:03Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.Clock;\n+\n+@Service\n+@Qualifier(\"caseEventMessageService\")\n+public class CaseEventMessageService extends AbstractMessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();", "originalCommit": "05f6a1d193125382a1eac32a6b6440b71111b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMDg3Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r544220873", "bodyText": "done \ud83d\udc4d", "author": "RebeccaBaker", "createdAt": "2020-12-16T11:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2NzEwMw=="}], "type": "inlineReview", "revised_code": {"commit": "378ac98ee32decde8c3012a33b44a8614cac616a", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 9bd64f3bd..34f461fa1 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n import javax.inject.Inject;\n-import java.time.Clock;\n \n @Service\n @Qualifier(\"caseEventMessageService\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2OTk2OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r542269969", "bodyText": "\u26a0\ufe0f wondering whether to avoid race conditions we should let the DB set this value when the row is inserted in the table (I think the column is already configured to have a default).\nWith this implementation what can happen is that the Java code sets a certain value for the timestamp. But the thread can be put to sleep and resume only after some time later. Therefore the timestamp does not correctly reflect the message creation time and this could cause problems to the message publisher process", "author": "mario-paniccia", "createdAt": "2020-12-14T10:21:15Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package uk.gov.hmcts.ccd.domain.service.message;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseAuditEventRepository;\n+import uk.gov.hmcts.ccd.data.message.MessageCandidateRepository;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n+import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n+\n+import javax.inject.Inject;\n+import java.time.Clock;\n+\n+@Service\n+@Qualifier(\"caseEventMessageService\")\n+public class CaseEventMessageService extends AbstractMessageService {\n+\n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private final MessageCandidateRepository messageCandidateRepository;\n+\n+    @Inject\n+    public CaseEventMessageService(@Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                                   final MessageCandidateRepository messageCandidateRepository,\n+                                   CaseAuditEventRepository caseAuditEventRepository,\n+                                   @Qualifier(\"utcClock\") final Clock clock) {\n+        super(userRepository, caseAuditEventRepository, clock);\n+        this.messageCandidateRepository = messageCandidateRepository;\n+    }\n+\n+    @Override\n+    public void handleMessage(MessageContext messageContext) {\n+        final MessageQueueCandidate messageQueueCandidate = new MessageQueueCandidate();\n+        if (Boolean.TRUE.equals(messageContext.getCaseEventDefinition().getPublish())) {\n+\n+            MessageInformation messageInformation = populateMessageInformation(messageContext);\n+            JsonNode node = mapper.convertValue(messageInformation, JsonNode.class);\n+\n+            messageQueueCandidate.setMessageInformation(node);\n+            messageQueueCandidate.setMessageType(MessageType.CASE_EVENT.name());\n+            messageQueueCandidate.setTimeStamp(now());", "originalCommit": "05f6a1d193125382a1eac32a6b6440b71111b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM2NzgwNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r542367805", "bodyText": "\ud83d\udc4d  done", "author": "RebeccaBaker", "createdAt": "2020-12-14T13:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2OTk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "378ac98ee32decde8c3012a33b44a8614cac616a", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\nindex 9bd64f3bd..34f461fa1 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/message/CaseEventMessageService.java\n\n@@ -12,7 +12,6 @@ import uk.gov.hmcts.ccd.domain.model.std.MessageInformation;\n import uk.gov.hmcts.ccd.domain.model.std.MessageQueueCandidate;\n \n import javax.inject.Inject;\n-import java.time.Clock;\n \n @Service\n @Qualifier(\"caseEventMessageService\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI3MDkyNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r542270926", "bodyText": "wonder whether we should have some integration tests to verify that the writing to the 2 tables case_event and the new table is atomic. i.e. if one fails the other is rolledback", "author": "mario-paniccia", "createdAt": "2020-12-14T10:22:40Z", "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/createcase/SubmitCaseTransactionTest.java", "diffHunk": "@@ -1,7 +1,5 @@\n package uk.gov.hmcts.ccd.domain.service.createcase;\n ", "originalCommit": "05f6a1d193125382a1eac32a6b6440b71111b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzk4MzkzMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1267#discussion_r553983930", "bodyText": "done", "author": "RebeccaBaker", "createdAt": "2021-01-08T14:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI3MDkyNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "378ac98ee32decde8c3012a33b44a8614cac616a", "url": "https://github.com/hmcts/ccd-data-store-api/commit/378ac98ee32decde8c3012a33b44a8614cac616a", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-14T13:03:54Z", "type": "commit"}, {"oid": "df0521e8397648f324a47aca5ba3e627bb74fd43", "url": "https://github.com/hmcts/ccd-data-store-api/commit/df0521e8397648f324a47aca5ba3e627bb74fd43", "message": "Merge remote-tracking branch 'origin/RDM-10169' into RDM-10169", "committedDate": "2020-12-14T13:05:21Z", "type": "commit"}, {"oid": "606d9b54db7e75971f478d1d2285bbcddaae4d50", "url": "https://github.com/hmcts/ccd-data-store-api/commit/606d9b54db7e75971f478d1d2285bbcddaae4d50", "message": "RDM-10169 actioned review comments", "committedDate": "2020-12-14T13:10:20Z", "type": "commit"}, {"oid": "20894b7ad5dbe6f7ef3804e0fbd2eaa044ab9aba", "url": "https://github.com/hmcts/ccd-data-store-api/commit/20894b7ad5dbe6f7ef3804e0fbd2eaa044ab9aba", "message": "RDM-10169 updated to use existing object mapper", "committedDate": "2020-12-16T11:24:20Z", "type": "commit"}, {"oid": "e9add9f63c4b6a74602e648e701d8e6d2ec953ff", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e9add9f63c4b6a74602e648e701d8e6d2ec953ff", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2021-01-04T11:02:26Z", "type": "commit"}, {"oid": "f1f6219c937f81ffa30fb5b87a9d658267e644a6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f1f6219c937f81ffa30fb5b87a9d658267e644a6", "message": "RDM-10169 implemented Integration tests", "committedDate": "2021-01-05T10:00:00Z", "type": "commit"}, {"oid": "d5deda78465c08ab7e2b4a44058280f9f370174b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d5deda78465c08ab7e2b4a44058280f9f370174b", "message": "Merge remote-tracking branch 'origin/RDM-10169' into RDM-10169", "committedDate": "2021-01-05T10:01:10Z", "type": "commit"}, {"oid": "ef5ab98528df7f0cc7c8e89d01661927cdf9ceb5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ef5ab98528df7f0cc7c8e89d01661927cdf9ceb5", "message": "RDM-10169 suppress CVE's", "committedDate": "2021-01-05T10:14:28Z", "type": "commit"}, {"oid": "3190343058199c20354764d3fc179f53774b0c92", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3190343058199c20354764d3fc179f53774b0c92", "message": "RDM-10169 fixed checkstyle", "committedDate": "2021-01-05T10:29:00Z", "type": "commit"}, {"oid": "4a4254ac144dd3ee90a94124b15fb5be44338797", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4a4254ac144dd3ee90a94124b15fb5be44338797", "message": "RDM-10169 updated timestamp to be event timestamp", "committedDate": "2021-01-05T13:37:59Z", "type": "commit"}, {"oid": "c4cf6d33f15028d815714edf4b2073c4bb33dcef", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c4cf6d33f15028d815714edf4b2073c4bb33dcef", "message": "RDM-10169 fixed IT test", "committedDate": "2021-01-05T14:25:13Z", "type": "commit"}, {"oid": "c384ecf7ad34e2138453868082ce775c725705e7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c384ecf7ad34e2138453868082ce775c725705e7", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2021-01-08T10:30:22Z", "type": "commit"}, {"oid": "621e7451cb1d8ea0a2c962708c0613b1fd079f2e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/621e7451cb1d8ea0a2c962708c0613b1fd079f2e", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2021-01-30T18:31:07Z", "type": "commit"}, {"oid": "2c628f655ef6d7676a35fe4163f8051eeffcd07b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2c628f655ef6d7676a35fe4163f8051eeffcd07b", "message": "Update dependency-check-suppressions.xml", "committedDate": "2021-01-30T18:40:37Z", "type": "commit"}, {"oid": "460105caadbade0d4312f733cfd2f181ff28bb65", "url": "https://github.com/hmcts/ccd-data-store-api/commit/460105caadbade0d4312f733cfd2f181ff28bb65", "message": "Update wiring", "committedDate": "2021-01-30T19:17:12Z", "type": "commit"}, {"oid": "c492375f1b282928b4788ee01a2782ebee67af92", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c492375f1b282928b4788ee01a2782ebee67af92", "message": "Merge branch 'master' into RDM-10169", "committedDate": "2021-02-01T11:05:43Z", "type": "commit"}, {"oid": "58a320d2f82da14467a40c5f0e1404708c7a1327", "url": "https://github.com/hmcts/ccd-data-store-api/commit/58a320d2f82da14467a40c5f0e1404708c7a1327", "message": "RDM-10431 RDM-10622 (#1303)\n\n* RDM-10431 added Publish and PublishAs columns\r\n\r\n* RDM-10431 added Publish and PublishAs columns\r\n\r\n* RDM-10431 updated json property\r\n\r\n* RDM-10431/RDM-10622 - Initial logic for determining publishable fields\r\n\r\n* RDM-10431/RDM-10622 - Add getDisplayContextEnum\r\n\r\n* Helper methods for PublishableField\r\n\r\n* RDM-10432 added caseDetails to AdditionalDataContext\r\n\r\n* RDM-10432 added caseDetails to MessageContext\r\n\r\n* RDM-10432 added field types required\r\n\r\n* RDM-10432 RDM-10622 fixed checkstyle\r\n\r\n* Ignore top level COMPLEX Publish values always use overrides\r\n\r\n* Add AdditionalDataContext constructor for MessageContext\r\n\r\n* Unit tests; cleanup\r\n\r\n* Use consistent assertions in tests\r\n\r\n* Add Publish/PublishAs to FT\r\n\r\n* Fix FT\r\n\r\n* Update Jenkinsfile_CNP\r\n\r\n* RDM-10622 - Publish CaseEvent Message Definition Section (#1312)\r\n\r\n* RDM-10622 - Generate definitions for published events\r\n\r\n* RDM-10622 - Add extra test scenario; fix broken test\r\n\r\n* RDM-10622 - Tidy up non-required properties\r\n\r\n* RDM-10622 - Include upcoming base types\r\n\r\n* RDM-10431 [2] - Data block for additional information (#1332)\r\n\r\n* RDM-10431 WIP for AdditionalMessageInformation Data Block\r\n\r\n* RDM-10431 WIP checkstyle issues\r\n\r\n* RDM-10431 WIP ignore failing test\r\n\r\n* RDM-10431 WIP sorted out nested complex values\r\n\r\n* RDM-10431 checkstyle issues\r\n\r\n* RDM-10431 updated unit tests\r\n\r\n* RDM-10431 checkstyle on test\r\n\r\n* RDM-10431 fixed logic for where there is an alias in complex\r\n\r\n* RDM-10431 fixed logic for where there is an alias in complex\r\n\r\n* RDM-10431 added back in complex type\r\n\r\n* RDM-10431 checkstyle\r\n\r\n* RDM-10431 allowing null value for boolean\r\n\r\n* RDM-10431 fixed integration tests\r\n\r\n* RDM-10431 fixed integration tests\r\n\r\n* RDM-10431 checkstyle\r\n\r\n* RDM-10431 checkstyle\r\n\r\n* RDM-10431 checkstyle\r\n\r\n* RDM-10431 updated response to be of JsonNode not Object\r\n\r\n* Fix BooleanNode and IntNode\r\n\r\n* RDM-10431 fixed TextValue\r\n\r\n* RDM-10431 sorting out complexNested\r\n\r\n* RDM-10431 fixed unit test for Alias\r\n\r\n* Support numbers as numbers or text\r\n\r\n* RDM-10431 fixed some issues with Integ test\r\n\r\n* RDM-10431 fixed checkstyle\r\n\r\n* RDM-10431 fixed integration Test\r\n\r\n* RDM-10431 - Alternative approach\r\n\r\n* Comments\r\n\r\n* Remove now unused CaseDetails from PublishableField\r\n\r\n* RDM-10431 - Extra unit tests\r\n\r\n* Checkstyle\r\n\r\n* RDM-10431 - Further tweaks\r\n\r\n* RDM-10431 Updated IT test to include collections\r\n\r\nCo-authored-by: RBaker <rebecca.baker@hmcts.net>\r\nCo-authored-by: Dan Lysiak <daniel.lysiak@cgi.com>\r\n\r\nCo-authored-by: Dan Lysiak <daniel.lysiak@cgi.com>\r\nCo-authored-by: RBaker <rebecca.baker@hmcts.net>\r\n\r\nCo-authored-by: Dan Lysiak <daniel.lysiak@cgi.com>\r\nCo-authored-by: Dan Lysiak <daniel.lysiak1@hmcts.net>\r\nCo-authored-by: Dan Lysiak <50049163+danlysiak@users.noreply.github.com>", "committedDate": "2021-02-01T16:16:21Z", "type": "commit"}]}