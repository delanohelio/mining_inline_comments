{"pr_number": 1154, "pr_title": "callbacks app-insights tracing", "pr_createdAt": "2020-10-06T19:49:14Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1154", "timeline": [{"oid": "ab183ac506cc760528e2ae948798d2caacb7a4e8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ab183ac506cc760528e2ae948798d2caacb7a4e8", "message": "app-insights track event for callbacks with thread local and custom event", "committedDate": "2020-10-06T19:39:08Z", "type": "commit"}, {"oid": "d463706760ed3d7424f82edc79106798931dd0d9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d463706760ed3d7424f82edc79106798931dd0d9", "message": "checkstyle fix", "committedDate": "2020-10-06T20:16:00Z", "type": "commit"}, {"oid": "3b729396c4b66ac326d0418b08d9c6b8c5e2bb6b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3b729396c4b66ac326d0418b08d9c6b8c5e2bb6b", "message": "RDM-8787 - minor clean up", "committedDate": "2020-10-07T08:33:57Z", "type": "commit"}, {"oid": "a2f89f551d38ee817c11baa236d0756237f0b787", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a2f89f551d38ee817c11baa236d0756237f0b787", "message": "RDM-8787 - test fix", "committedDate": "2020-10-07T09:48:20Z", "type": "commit"}, {"oid": "165a2b43f84c07512132f1bce7fd3adc9f274f76", "url": "https://github.com/hmcts/ccd-data-store-api/commit/165a2b43f84c07512132f1bce7fd3adc9f274f76", "message": "RDM-8787 - unit tests for track event", "committedDate": "2020-10-07T10:17:25Z", "type": "commit"}, {"oid": "15f1b522106a37c470e6b507989acd8443c73070", "url": "https://github.com/hmcts/ccd-data-store-api/commit/15f1b522106a37c470e6b507989acd8443c73070", "message": "RDM-8787 - unit tests for track event", "committedDate": "2020-10-07T10:30:03Z", "type": "commit"}, {"oid": "f92365e151445e9979bbe1628c01caf2b00d8479", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f92365e151445e9979bbe1628c01caf2b00d8479", "message": "RDM-8787 - checkstyle fix", "committedDate": "2020-10-07T10:39:57Z", "type": "commit"}, {"oid": "cb5dc0d0fdd6d1339ae83820498c5161f9c4083f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cb5dc0d0fdd6d1339ae83820498c5161f9c4083f", "message": "RDM-8787 - checkstyle fix", "committedDate": "2020-10-07T10:57:54Z", "type": "commit"}, {"oid": "8382f9996eee2c2393b4ef032f0ecb6539609df5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8382f9996eee2c2393b4ef032f0ecb6539609df5", "message": "RDM-8787 - test fix", "committedDate": "2020-10-07T11:51:56Z", "type": "commit"}, {"oid": "a7adbf361205d29cd4079520afb7a99884a5d720", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a7adbf361205d29cd4079520afb7a99884a5d720", "message": "RDM-8787 - checkstyle fix", "committedDate": "2020-10-07T11:56:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxMjQyNw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501012427", "bodyText": "shouldn't this be initialized at L 117?", "author": "MSancaktutar", "createdAt": "2020-10-07T13:29:13Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -97,23 +110,42 @@ public CallbackService(final SecurityUtils securityUtils,\n     }\n \n     private <T> Optional<ResponseEntity<T>> sendRequest(final String url,\n+                                                        final String callbackType,\n                                                         final Class<T> clazz,\n+\n                                                         final CallbackRequest callbackRequest) {\n+        Instant startTime = null;\n+        int httpStatus = 0;\n         try {\n             LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n+\n             final HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n-            return Optional.ofNullable(restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz));\n+\n+            startTime = Instant.now();", "originalCommit": "a7adbf361205d29cd4079520afb7a99884a5d720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1MDgyOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501050828", "bodyText": "i think just before http call is better otherwise it counts s2s token time as well. (L124)", "author": "smathangi", "createdAt": "2020-10-07T14:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxMjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI4NDM5OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501284398", "bodyText": "What if S2S token generation itself fails? finally block will use a null startTime.\nHow about doing all time consuming activity on top of the method and after that initialising the startTime?", "author": "MSancaktutar", "createdAt": "2020-10-07T20:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxMjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyOTExMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501529110", "bodyText": "Yeah.. good point. Lets move s2s bit on top of the method.", "author": "smathangi", "createdAt": "2020-10-08T08:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxMjQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "38a4833bb1e8925fe38a95992864e946364d1120", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\nindex 18a8edaaf..3df8669eb 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\n\n@@ -114,25 +114,22 @@ public class CallbackService {\n                                                         final Class<T> clazz,\n \n                                                         final CallbackRequest callbackRequest) {\n-        Instant startTime = null;\n+\n+        HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n+\n+        CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n         int httpStatus = 0;\n+        Instant startTime = Instant.now();\n+\n         try {\n             LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n-\n-            final HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n-\n-            startTime = Instant.now();\n-\n-            CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n-\n             ResponseEntity<T> responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz);\n-\n             httpStatus = responseEntity.getStatusCodeValue();\n             return Optional.of(responseEntity);\n         } catch (RestClientException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxNjgyMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501016820", "bodyText": "better use an enumeration?", "author": "MSancaktutar", "createdAt": "2020-10-07T13:35:10Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java", "diffHunk": "@@ -30,6 +30,11 @@\n public class CallbackInvoker {\n \n     private static final HashMap<String, JsonNode> EMPTY_DATA_CLASSIFICATION = Maps.newHashMap();\n+    public static final String ABOUT_TO_START = \"AboutToStart\";\n+    public static final String ABOUT_TO_SUBMIT = \"AboutToSubmit\";\n+    public static final String SUBMITTED = \"Submitted\";\n+    public static final String MID_EVENT = \"MidEvent\";", "originalCommit": "a7adbf361205d29cd4079520afb7a99884a5d720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MjEwNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501642105", "bodyText": "done", "author": "smathangi", "createdAt": "2020-10-08T11:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxNjgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "a3cbc9b30f2e61aefdeabbf9ad55ba48ea7be15d", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\nindex 2a41a7632..ff9b9507a 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\n\n@@ -24,16 +24,16 @@ import java.util.Optional;\n \n import static com.google.common.collect.Maps.newHashMap;\n import static java.util.Optional.ofNullable;\n+import static uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType.ABOUT_TO_START;\n+import static uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType.ABOUT_TO_SUBMIT;\n+import static uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType.MID_EVENT;\n+import static uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType.SUBMITTED;\n import static uk.gov.hmcts.ccd.domain.service.validate.ValidateSignificantDocument.validateSignificantItem;\n \n @Service\n public class CallbackInvoker {\n \n     private static final HashMap<String, JsonNode> EMPTY_DATA_CLASSIFICATION = Maps.newHashMap();\n-    public static final String ABOUT_TO_START = \"AboutToStart\";\n-    public static final String ABOUT_TO_SUBMIT = \"AboutToSubmit\";\n-    public static final String SUBMITTED = \"Submitted\";\n-    public static final String MID_EVENT = \"MidEvent\";\n \n     private final CallbackService callbackService;\n     private final CaseTypeService caseTypeService;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxNzcxNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501017714", "bodyText": "eol at eof", "author": "MSancaktutar", "createdAt": "2020-10-07T13:36:23Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java", "diffHunk": "@@ -218,10 +225,10 @@ private void validateAndSetData(final CaseTypeDefinition caseTypeDefinition,\n \n     private void deduceDataClassificationForNewFields(CaseTypeDefinition caseTypeDefinition, CaseDetails caseDetails) {\n         Map<String, JsonNode> defaultSecurityClassifications = caseDataService.getDefaultSecurityClassifications(\n-                caseTypeDefinition,\n+            caseTypeDefinition,\n             caseDetails.getData(),\n             ofNullable(caseDetails.getDataClassification()).orElse(\n                 newHashMap()));\n         caseDetails.setDataClassification(defaultSecurityClassifications);\n     }\n-}\n+}", "originalCommit": "a7adbf361205d29cd4079520afb7a99884a5d720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4794a166682e6a8809dca0360270b05062be68b", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\nindex 2a41a7632..3f6f1d377 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/stdapi/CallbackInvoker.java\n\n@@ -231,4 +231,4 @@ public class CallbackInvoker {\n                 newHashMap()));\n         caseDetails.setDataClassification(defaultSecurityClassifications);\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxOTM1NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501019354", "bodyText": "eol", "author": "MSancaktutar", "createdAt": "2020-10-07T13:38:36Z", "path": "src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package uk.gov.hmcts.ccd.config;\n+\n+import com.microsoft.applicationinsights.extensibility.TelemetryProcessor;\n+import com.microsoft.applicationinsights.telemetry.RemoteDependencyTelemetry;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryContext;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryThreadContext;\n+\n+@Configuration\n+public class TracingConfiguration {\n+\n+    @Bean\n+    // Custom TelemetryProcessor which tags the type of {@link RemoteDependencyTelemetry} as callback before publishing.\n+    public TelemetryProcessor callbackRecognitionProcessor() {\n+        return telemetry -> {\n+            if (telemetry instanceof RemoteDependencyTelemetry) {\n+                RemoteDependencyTelemetry dependency = (RemoteDependencyTelemetry) telemetry;\n+                if (dependency.getType().startsWith(\"Http\")\n+                    && CallbackTelemetryThreadContext.getTelemetryContext() != null) {\n+\n+                    CallbackTelemetryContext telemetryContext = CallbackTelemetryThreadContext.getTelemetryContext();\n+                    dependency.getProperties().put(\"callback\", \"true\");\n+                    dependency.getProperties().put(\"callbackType\", telemetryContext.getCallbackType());\n+\n+                    // clean up after retrieval\n+                    CallbackTelemetryThreadContext.remove();\n+                }\n+            }\n+            return true;\n+        };\n+    }\n+\n+}", "originalCommit": "a7adbf361205d29cd4079520afb7a99884a5d720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4794a166682e6a8809dca0360270b05062be68b", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\nindex 5e73fc206..0dc8b78f0 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n\n@@ -30,5 +30,4 @@ public class TracingConfiguration {\n             return true;\n         };\n     }\n-\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501021981", "bodyText": "better putting this on top of the method.", "author": "MSancaktutar", "createdAt": "2020-10-07T13:42:08Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -97,23 +110,42 @@ public CallbackService(final SecurityUtils securityUtils,\n     }\n \n     private <T> Optional<ResponseEntity<T>> sendRequest(final String url,\n+                                                        final String callbackType,\n                                                         final Class<T> clazz,\n+\n                                                         final CallbackRequest callbackRequest) {\n+        Instant startTime = null;\n+        int httpStatus = 0;\n         try {\n             LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n+\n             final HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n-            return Optional.ofNullable(restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz));\n+\n+            startTime = Instant.now();\n+\n+            CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));", "originalCommit": "a7adbf361205d29cd4079520afb7a99884a5d720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTU3OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501061579", "bodyText": "i guess just before callback http call is better. I don't want to populate context if s2s call is failed.", "author": "smathangi", "createdAt": "2020-10-07T14:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI4NTg5MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501285890", "bodyText": "moving to the top of the method all computation that takes time and has potential to fail seems to be the best approach, then, doesn't it?", "author": "MSancaktutar", "createdAt": "2020-10-07T20:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyOTM5NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501529395", "bodyText": "done", "author": "smathangi", "createdAt": "2020-10-08T08:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "38a4833bb1e8925fe38a95992864e946364d1120", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\nindex 18a8edaaf..3df8669eb 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java\n\n@@ -114,25 +114,22 @@ public class CallbackService {\n                                                         final Class<T> clazz,\n \n                                                         final CallbackRequest callbackRequest) {\n-        Instant startTime = null;\n+\n+        HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n+\n+        CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n         int httpStatus = 0;\n+        Instant startTime = Instant.now();\n+\n         try {\n             LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n-\n-            final HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n-\n-            startTime = Instant.now();\n-\n-            CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n-\n             ResponseEntity<T> responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz);\n-\n             httpStatus = responseEntity.getStatusCodeValue();\n             return Optional.of(responseEntity);\n         } catch (RestClientException e) {\n"}}, {"oid": "a4794a166682e6a8809dca0360270b05062be68b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a4794a166682e6a8809dca0360270b05062be68b", "message": "RDM-8787 - eol fix", "committedDate": "2020-10-07T14:29:17Z", "type": "commit"}, {"oid": "38a4833bb1e8925fe38a95992864e946364d1120", "url": "https://github.com/hmcts/ccd-data-store-api/commit/38a4833bb1e8925fe38a95992864e946364d1120", "message": "RDM-8787 - review comments", "committedDate": "2020-10-08T08:16:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNTg2Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501605863", "bodyText": "can we add a Javadoc explaining the usage of this class", "author": "mario-paniccia", "createdAt": "2020-10-08T10:14:21Z", "path": "src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package uk.gov.hmcts.ccd.appinsights;\n+\n+public class CallbackTelemetryContext {", "originalCommit": "38a4833bb1e8925fe38a95992864e946364d1120", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3cbc9b30f2e61aefdeabbf9ad55ba48ea7be15d", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java b/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\nindex f86d30a3f..18a34a8f3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\n\n@@ -1,14 +1,16 @@\n package uk.gov.hmcts.ccd.appinsights;\n \n+import uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType;\n+\n public class CallbackTelemetryContext {\n \n-    private final String callbackType;\n+    private final CallbackType callbackType;\n \n-    public CallbackTelemetryContext(String callbackType) {\n+    public CallbackTelemetryContext(CallbackType callbackType) {\n         this.callbackType = callbackType;\n     }\n \n-    public String getCallbackType() {\n+    public CallbackType getCallbackType() {\n         return callbackType;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNTkzMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501605930", "bodyText": "can we add a Javadoc explaining the usage of this class", "author": "mario-paniccia", "createdAt": "2020-10-08T10:14:25Z", "path": "src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryThreadContext.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package uk.gov.hmcts.ccd.appinsights;\n+\n+public class CallbackTelemetryThreadContext {", "originalCommit": "38a4833bb1e8925fe38a95992864e946364d1120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNzcxMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501607710", "bodyText": "Maybe let's call it CallbackTelemetryThreadContext so that in the future we can use it for other type of Azure dependency calls as well?", "author": "mario-paniccia", "createdAt": "2020-10-08T10:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNTkzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyMjU4Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501622586", "bodyText": "sorry didn't get that", "author": "smathangi", "createdAt": "2020-10-08T10:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNTkzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNzEwOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501607108", "bodyText": "Maybe let's call it TelemetryContext so that in the future we can use it for other types of Azure dependency calls as well?", "author": "mario-paniccia", "createdAt": "2020-10-08T10:16:11Z", "path": "src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package uk.gov.hmcts.ccd.appinsights;\n+\n+public class CallbackTelemetryContext {", "originalCommit": "38a4833bb1e8925fe38a95992864e946364d1120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyMzk0MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501623940", "bodyText": "I would prefer separate object for each specific purpose. We can always revisit structure/relationship when more use cases come in..", "author": "smathangi", "createdAt": "2020-10-08T10:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwNzEwOA=="}], "type": "inlineReview", "revised_code": {"commit": "a3cbc9b30f2e61aefdeabbf9ad55ba48ea7be15d", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java b/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\nindex f86d30a3f..18a34a8f3 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/appinsights/CallbackTelemetryContext.java\n\n@@ -1,14 +1,16 @@\n package uk.gov.hmcts.ccd.appinsights;\n \n+import uk.gov.hmcts.ccd.domain.service.callbacks.CallbackType;\n+\n public class CallbackTelemetryContext {\n \n-    private final String callbackType;\n+    private final CallbackType callbackType;\n \n-    public CallbackTelemetryContext(String callbackType) {\n+    public CallbackTelemetryContext(CallbackType callbackType) {\n         this.callbackType = callbackType;\n     }\n \n-    public String getCallbackType() {\n+    public CallbackType getCallbackType() {\n         return callbackType;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxMzA2Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501613063", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class TracingConfiguration {\n          \n          \n            \n            public class AppInsightsTracingConfiguration {", "author": "mario-paniccia", "createdAt": "2020-10-08T10:26:06Z", "path": "src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package uk.gov.hmcts.ccd.config;\n+\n+import com.microsoft.applicationinsights.extensibility.TelemetryProcessor;\n+import com.microsoft.applicationinsights.telemetry.RemoteDependencyTelemetry;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryContext;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryThreadContext;\n+\n+@Configuration\n+public class TracingConfiguration {", "originalCommit": "38a4833bb1e8925fe38a95992864e946364d1120", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c13ae8ff531ac3893a48c7f6a8822d1dc2eae61", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\nindex 0dc8b78f0..9656398bc 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n\n@@ -8,7 +8,7 @@ import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryContext;\n import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryThreadContext;\n \n @Configuration\n-public class TracingConfiguration {\n+public class AppInsightsTracingConfiguration {\n \n     @Bean\n     // Custom TelemetryProcessor which tags the type of {@link RemoteDependencyTelemetry} as callback before publishing.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxNTIyMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1154#discussion_r501615222", "bodyText": "with this solution we assume if a telemetry context exists then the dependency is a callback. We could make this a bit more generic and reusable for non-callback dependencies by marking as callback if getCallbackType() is not blank?", "author": "mario-paniccia", "createdAt": "2020-10-08T10:29:56Z", "path": "src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package uk.gov.hmcts.ccd.config;\n+\n+import com.microsoft.applicationinsights.extensibility.TelemetryProcessor;\n+import com.microsoft.applicationinsights.telemetry.RemoteDependencyTelemetry;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryContext;\n+import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryThreadContext;\n+\n+@Configuration\n+public class TracingConfiguration {\n+\n+    @Bean\n+    // Custom TelemetryProcessor which tags the type of {@link RemoteDependencyTelemetry} as callback before publishing.\n+    public TelemetryProcessor callbackRecognitionProcessor() {\n+        return telemetry -> {\n+            if (telemetry instanceof RemoteDependencyTelemetry) {\n+                RemoteDependencyTelemetry dependency = (RemoteDependencyTelemetry) telemetry;\n+                if (dependency.getType().startsWith(\"Http\")\n+                    && CallbackTelemetryThreadContext.getTelemetryContext() != null) {\n+\n+                    CallbackTelemetryContext telemetryContext = CallbackTelemetryThreadContext.getTelemetryContext();\n+                    dependency.getProperties().put(\"callback\", \"true\");", "originalCommit": "38a4833bb1e8925fe38a95992864e946364d1120", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c13ae8ff531ac3893a48c7f6a8822d1dc2eae61", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\nindex 0dc8b78f0..9656398bc 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n\n@@ -8,7 +8,7 @@ import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryContext;\n import uk.gov.hmcts.ccd.appinsights.CallbackTelemetryThreadContext;\n \n @Configuration\n-public class TracingConfiguration {\n+public class AppInsightsTracingConfiguration {\n \n     @Bean\n     // Custom TelemetryProcessor which tags the type of {@link RemoteDependencyTelemetry} as callback before publishing.\n"}}, {"oid": "8c13ae8ff531ac3893a48c7f6a8822d1dc2eae61", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8c13ae8ff531ac3893a48c7f6a8822d1dc2eae61", "message": "Update src/main/java/uk/gov/hmcts/ccd/config/TracingConfiguration.java\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-10-08T10:46:00Z", "type": "commit"}, {"oid": "a3cbc9b30f2e61aefdeabbf9ad55ba48ea7be15d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a3cbc9b30f2e61aefdeabbf9ad55ba48ea7be15d", "message": "RDM-8787 - CallbackType enum", "committedDate": "2020-10-08T11:25:46Z", "type": "commit"}]}