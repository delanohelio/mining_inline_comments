{"pr_number": 946, "pr_title": "RDM-8382: Allow configuring an event specific default value for a com\u2026", "pr_createdAt": "2020-05-18T14:11:42Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/946", "timeline": [{"oid": "3c0096bd38da31d1e84a4f95144fc6e335c539b1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3c0096bd38da31d1e84a4f95144fc6e335c539b1", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-05-18T14:09:45Z", "type": "commit"}, {"oid": "1f23ed374a5abfe4440cb51519f05b95fc727ec1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1f23ed374a5abfe4440cb51519f05b95fc727ec1", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-05-27T15:33:13Z", "type": "commit"}, {"oid": "8e145cd8ef54e58c1650e86f74297d87094db174", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8e145cd8ef54e58c1650e86f74297d87094db174", "message": "Merge branch 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-8382", "committedDate": "2020-06-01T09:52:28Z", "type": "commit"}, {"oid": "761ceaf5c8ce1c94c92cc3093aade831583801e4", "url": "https://github.com/hmcts/ccd-data-store-api/commit/761ceaf5c8ce1c94c92cc3093aade831583801e4", "message": "Merge branch 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-8382", "committedDate": "2020-06-01T13:25:50Z", "type": "commit"}, {"oid": "9b2c21b6669f71719425886743de481960857054", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9b2c21b6669f71719425886743de481960857054", "message": "RDM-8001: CCD-data-Store -Fix CVEs general and straight forward changes\n\n    \u00a0\u00a0[RDM-8001] (https://tools.hmcts.net/jira/browse/RDM-8001).\n    CCD-data-Store -Fix CVEs general and straight forward changes", "committedDate": "2020-06-01T14:00:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzNzE4Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/946#discussion_r434437183", "bodyText": "better use the standard object mapper in the related utils class", "author": "MSancaktutar", "createdAt": "2020-06-03T09:35:04Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -43,9 +53,54 @@\n         }\n         content.setData(fieldProcessorService.processData(content.getData(), caseTypeDefinition, content.getEventId()));\n         caseTypeService.validateData(content.getData(), caseTypeDefinition);\n+\n+        validateOrganisationPolicy(caseTypeId, content);\n         return content.getData();\n     }\n \n+    private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n+        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+        // if there is not a default value. it means that there will not be organisation policy validation.\n+        if (!defaultValue.isPresent()) {\n+            return;\n+        }\n+\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n+            event -> event.getId().equals(content.getEventId())\n+        ).forEach(\n+            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n+                    caseEventFieldComplexDefinition -> {\n+                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n+                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                        } else {\n+                            return false;\n+                        }\n+                    }\n+                ).collect(Collectors.toList()))\n+        );\n+    }\n+\n+    private Optional<String> getOrganisationPolicyDefaultRoleValue(final CaseDataContent content) {\n+\n+        final JsonNode existingDat  = new ObjectMapper().convertValue(content.getData(), JsonNode.class);", "originalCommit": "9b2c21b6669f71719425886743de481960857054", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5301486dc4ceb47f55292bccc87fd8a1251f26ae", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\nindex fe0a07fcd..2f26cea58 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n\n@@ -59,20 +59,25 @@ public class DefaultValidateCaseFieldsOperation implements ValidateCaseFieldsOpe\n     }\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n-        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+\n         // if there is not a default value. it means that there will not be organisation policy validation.\n-        if (!defaultValue.isPresent()) {\n+        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n+        if (!isOrganisationPolicyLogicInTheContent(content)) {\n             return;\n         }\n-\n         caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n             event -> event.getId().equals(content.getEventId())\n         ).forEach(\n-            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n                 caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n                     caseEventFieldComplexDefinition -> {\n                         if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                            //get extract the default value  from the content for the current caseField\n+                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n+                            return validateOrgPolicyCaseAssignedRole(\n+                                caseEventFieldComplexDefinition,\n+                                caseFieldDefaultValue,\n+                                caseField.getCaseFieldId());\n                         } else {\n                             return false;\n                         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzODE1NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/946#discussion_r434438154", "bodyText": "there may be many default values!", "author": "MSancaktutar", "createdAt": "2020-06-03T09:36:37Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -43,9 +53,54 @@\n         }\n         content.setData(fieldProcessorService.processData(content.getData(), caseTypeDefinition, content.getEventId()));\n         caseTypeService.validateData(content.getData(), caseTypeDefinition);\n+\n+        validateOrganisationPolicy(caseTypeId, content);\n         return content.getData();\n     }\n \n+    private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n+        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+        // if there is not a default value. it means that there will not be organisation policy validation.\n+        if (!defaultValue.isPresent()) {\n+            return;\n+        }\n+\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n+            event -> event.getId().equals(content.getEventId())\n+        ).forEach(\n+            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n+                    caseEventFieldComplexDefinition -> {\n+                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n+                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                        } else {\n+                            return false;\n+                        }\n+                    }\n+                ).collect(Collectors.toList()))\n+        );\n+    }\n+\n+    private Optional<String> getOrganisationPolicyDefaultRoleValue(final CaseDataContent content) {", "originalCommit": "9b2c21b6669f71719425886743de481960857054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkyNDg1NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/946#discussion_r435924854", "bodyText": "DONE", "author": "Thor-tech-of-metal", "createdAt": "2020-06-05T13:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzODE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "5301486dc4ceb47f55292bccc87fd8a1251f26ae", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\nindex fe0a07fcd..2f26cea58 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n\n@@ -59,20 +59,25 @@ public class DefaultValidateCaseFieldsOperation implements ValidateCaseFieldsOpe\n     }\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n-        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+\n         // if there is not a default value. it means that there will not be organisation policy validation.\n-        if (!defaultValue.isPresent()) {\n+        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n+        if (!isOrganisationPolicyLogicInTheContent(content)) {\n             return;\n         }\n-\n         caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n             event -> event.getId().equals(content.getEventId())\n         ).forEach(\n-            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n                 caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n                     caseEventFieldComplexDefinition -> {\n                         if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                            //get extract the default value  from the content for the current caseField\n+                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n+                            return validateOrgPolicyCaseAssignedRole(\n+                                caseEventFieldComplexDefinition,\n+                                caseFieldDefaultValue,\n+                                caseField.getCaseFieldId());\n                         } else {\n                             return false;\n                         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzODU0OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/946#discussion_r434438549", "bodyText": "what is multiple node are there?", "author": "MSancaktutar", "createdAt": "2020-06-03T09:37:14Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -43,9 +53,54 @@\n         }\n         content.setData(fieldProcessorService.processData(content.getData(), caseTypeDefinition, content.getEventId()));\n         caseTypeService.validateData(content.getData(), caseTypeDefinition);\n+\n+        validateOrganisationPolicy(caseTypeId, content);\n         return content.getData();\n     }\n \n+    private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n+        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+        // if there is not a default value. it means that there will not be organisation policy validation.\n+        if (!defaultValue.isPresent()) {\n+            return;\n+        }\n+\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n+            event -> event.getId().equals(content.getEventId())\n+        ).forEach(\n+            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n+                    caseEventFieldComplexDefinition -> {\n+                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n+                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                        } else {\n+                            return false;\n+                        }\n+                    }\n+                ).collect(Collectors.toList()))\n+        );\n+    }\n+\n+    private Optional<String> getOrganisationPolicyDefaultRoleValue(final CaseDataContent content) {\n+\n+        final JsonNode existingDat  = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n+        final List<JsonNode> jsonNode = existingDat.findParents(ORGANISATION_POLICY_ROLE);\n+        final  Optional<JsonNode> node = jsonNode.stream().findFirst();", "originalCommit": "9b2c21b6669f71719425886743de481960857054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkyNDc4MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/946#discussion_r435924780", "bodyText": "DONE", "author": "Thor-tech-of-metal", "createdAt": "2020-06-05T13:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzODU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5301486dc4ceb47f55292bccc87fd8a1251f26ae", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\nindex fe0a07fcd..2f26cea58 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java\n\n@@ -59,20 +59,25 @@ public class DefaultValidateCaseFieldsOperation implements ValidateCaseFieldsOpe\n     }\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n-        final Optional<String> defaultValue = getOrganisationPolicyDefaultRoleValue(content);\n+\n         // if there is not a default value. it means that there will not be organisation policy validation.\n-        if (!defaultValue.isPresent()) {\n+        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n+        if (!isOrganisationPolicyLogicInTheContent(content)) {\n             return;\n         }\n-\n         caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n             event -> event.getId().equals(content.getEventId())\n         ).forEach(\n-            caseEventDefinition ->  caseEventDefinition.getCaseFields().stream().forEach(\n+            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n                 caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n                     caseEventFieldComplexDefinition -> {\n                         if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            return validateOrgPolicyCaseAssignedRole(caseEventFieldComplexDefinition, defaultValue.get());\n+                            //get extract the default value  from the content for the current caseField\n+                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n+                            return validateOrgPolicyCaseAssignedRole(\n+                                caseEventFieldComplexDefinition,\n+                                caseFieldDefaultValue,\n+                                caseField.getCaseFieldId());\n                         } else {\n                             return false;\n                         }\n"}}, {"oid": "5301486dc4ceb47f55292bccc87fd8a1251f26ae", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5301486dc4ceb47f55292bccc87fd8a1251f26ae", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-06-05T10:38:14Z", "type": "commit"}, {"oid": "db6312d3fc14ac75b9bdf2c087b781e698c569a1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/db6312d3fc14ac75b9bdf2c087b781e698c569a1", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-06-05T13:26:23Z", "type": "commit"}, {"oid": "7fb3760aa3200006c16452838b2d07a733cd2697", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7fb3760aa3200006c16452838b2d07a733cd2697", "message": "Merge branch 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-8382", "committedDate": "2020-06-05T13:35:24Z", "type": "commit"}, {"oid": "a1267168daaac49574dfbd278447de09f04f34fc", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a1267168daaac49574dfbd278447de09f04f34fc", "message": "RDM-8001: CCD-data-Store -Fix CVEs general and straight forward changes\n\n    \u00a0\u00a0[RDM-8001] (https://tools.hmcts.net/jira/browse/RDM-8001).\n    CCD-data-Store -Fix CVEs general and straight forward changes", "committedDate": "2020-06-05T15:16:51Z", "type": "commit"}, {"oid": "6be44934118c6529a8f40a9ab700927447bf6421", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6be44934118c6529a8f40a9ab700927447bf6421", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-06-05T15:18:19Z", "type": "commit"}, {"oid": "0236bfc50d4b00fbf81048b6480f2ea3edfa0f6d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0236bfc50d4b00fbf81048b6480f2ea3edfa0f6d", "message": "RDM-8382: Allow configuring an event specific default value for a complex type subfield\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [RDM-8382] (https://tools.hmcts.net/jira/browse/RDM-8382).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Allow configuring an event specific default value for a complex type subfield", "committedDate": "2020-06-09T14:55:52Z", "type": "commit"}, {"oid": "44133bdc7a4d8bb9e1a2ebb844a8d944011a7eb8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/44133bdc7a4d8bb9e1a2ebb844a8d944011a7eb8", "message": "Fixed scenario test data", "committedDate": "2020-06-12T15:39:31Z", "type": "commit"}, {"oid": "4ccfe0c16f1ed8244f235d01687404381a4ee3d7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4ccfe0c16f1ed8244f235d01687404381a4ee3d7", "message": "Update dependency-check-suppressions.xml", "committedDate": "2020-06-16T11:02:09Z", "type": "commit"}, {"oid": "534ff89d6b4356a6aa0f71e093e1bb0f00d9bfdf", "url": "https://github.com/hmcts/ccd-data-store-api/commit/534ff89d6b4356a6aa0f71e093e1bb0f00d9bfdf", "message": "Merge branch 'develop' into RDM-8382", "committedDate": "2020-06-16T11:05:48Z", "type": "commit"}, {"oid": "c9d79061157208555491d20fcd0fd63d05adfe99", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c9d79061157208555491d20fcd0fd63d05adfe99", "message": "introduce use of composite keys for unordered equivalence checks", "committedDate": "2020-06-16T12:11:04Z", "type": "commit"}, {"oid": "a25fb335eb90060f624e6337c06f5a54da93299f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a25fb335eb90060f624e6337c06f5a54da93299f", "message": "Merge pull request #977 from hmcts/RDM-8759\n\nintroduce use of composite keys for unordered equivalence checks", "committedDate": "2020-06-16T12:39:00Z", "type": "commit"}, {"oid": "ccb4087be4280988eb84ba8479dc6c6028e8bccb", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ccb4087be4280988eb84ba8479dc6c6028e8bccb", "message": "tell the fw the collection is not ordered", "committedDate": "2020-06-16T13:52:50Z", "type": "commit"}]}