{"pr_number": 818, "pr_title": "Rdm 5903: Implement and consume external GET event details for case endpoint in API v2", "pr_createdAt": "2020-02-20T22:31:26Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/818", "timeline": [{"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/822285aaf4898e505f80dbd783b0cf87ef5275f1", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-20T22:31:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653279", "bodyText": "Hmm I thought it would be external like in description of the ticket:\nv1 endpoint: https://github.com/hmcts/ccd-data-store-api/blob/master/src/main/java/uk/gov/hmcts/ccd/endpoint/std/EventsEndpoint.java#L34-L53\nv2: GET /cases/{cid}/events\nso should likve in v2/external package and URL should not have internal prefix?", "author": "andrewfolga", "createdAt": "2020-02-21T15:43:45Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java", "diffHunk": "@@ -135,4 +145,39 @@ void shouldPropagateExceptionWhenThrown() {\n                 () -> caseController.getCaseEvent(CASE_REFERENCE, EVENT_ID.toString()));\n         }\n     }\n+\n+    @Nested\n+    @DisplayName(\"GET /internal/cases/{caseId}/events\")", "originalCommit": "822285aaf4898e505f80dbd783b0cf87ef5275f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzgyMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653821", "bodyText": "The controller should not have the UI prefix then too.", "author": "andrewfolga", "createdAt": "2020-02-21T15:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDg2Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824862", "bodyText": "Changed to external", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T11:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "chunk": "diff --git a/src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java b/src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java\nindex be5c1148c..10f5c4474 100644\n--- a/src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java\n+++ b/src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java\n\n@@ -146,38 +136,4 @@ class UICaseControllerTest {\n         }\n     }\n \n-    @Nested\n-    @DisplayName(\"GET /internal/cases/{caseId}/events\")\n-    class GetEventsForCaseId {\n-\n-        @Test\n-        @DisplayName(\"should return 200 when events found\")\n-        void caseFound() {\n-            final ResponseEntity<UICaseEventsResource> response = caseController.getCaseEvents(CASE_REFERENCE);\n-\n-            assertAll(\n-                () -> assertThat(response.getStatusCode(), is(HttpStatus.OK)),\n-                () -> assertThat(response.getBody().getAuditEvents().size(), is(2))\n-            );\n-        }\n-\n-        @Test\n-        @DisplayName(\"should propagate BadRequestException when case reference not valid\")\n-        void caseReferenceNotValid() {\n-            when(caseReferenceService.validateUID(CASE_REFERENCE)).thenReturn(FALSE);\n-\n-            assertThrows(BadRequestException.class,\n-                () -> caseController.getCaseEvents(CASE_REFERENCE));\n-        }\n-\n-        @Test\n-        @DisplayName(\"should propagate exception\")\n-        void shouldPropagateExceptionWhenThrown() {\n-            when(getEventsOperation.getEvents(CASE_REFERENCE)).thenThrow(RuntimeException.class);\n-\n-            assertThrows(Exception.class,\n-                () -> caseController.getCaseEvents(CASE_REFERENCE));\n-        }\n-    }\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzU5NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653594", "bodyText": "Internal or external?", "author": "andrewfolga", "createdAt": "2020-02-21T15:44:19Z", "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package uk.gov.hmcts.ccd.v2.internal.resource;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import java.util.Optional;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.hateoas.Link;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+\n+class UICaseEventsResourceTest {\n+    private static final String REFERENCE = \"1234123412341238\";\n+    private static final String LINK_SELF = String.format(\"/internal/cases/%s/events\", REFERENCE);", "originalCommit": "822285aaf4898e505f80dbd783b0cf87ef5275f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNTIwNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383825206", "bodyText": "Changed to external", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T11:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzU5NA=="}], "type": "inlineReview", "revised_code": {"commit": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "chunk": "diff --git a/src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java b/src/test/java/uk/gov/hmcts/ccd/v2/external/resource/CaseEventsResourceTest.java\nsimilarity index 76%\nrename from src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java\nrename to src/test/java/uk/gov/hmcts/ccd/v2/external/resource/CaseEventsResourceTest.java\nindex 56295efad..7d585029a 100644\n--- a/src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java\n+++ b/src/test/java/uk/gov/hmcts/ccd/v2/external/resource/CaseEventsResourceTest.java\n\n@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.v2.internal.resource;\n+package uk.gov.hmcts.ccd.v2.external.resource;\n \n import com.google.common.collect.Lists;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDIzNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382654235", "bodyText": "If this is to be external then it should not have ui- prefix.", "author": "andrewfolga", "createdAt": "2020-02-21T15:45:27Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/V2.java", "diffHunk": "@@ -41,6 +41,8 @@ private MediaType() {}\n         public static final String UI_JURISDICTIONS =\n             \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-jurisdictions.v2+json;charset=UTF-8\";\n \n+        public static final String UI_CASE_EVENTS = \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-case-events.v2+json;charset=UTF-8\";", "originalCommit": "822285aaf4898e505f80dbd783b0cf87ef5275f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDkwMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824901", "bodyText": "Changed to external", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T11:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/V2.java b/src/main/java/uk/gov/hmcts/ccd/v2/V2.java\nindex 7856858c3..aafe7d6ca 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/V2.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/V2.java\n\n@@ -41,7 +41,7 @@ public final class V2 {\n         public static final String UI_JURISDICTIONS =\n             \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-jurisdictions.v2+json;charset=UTF-8\";\n \n-        public static final String UI_CASE_EVENTS = \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-case-events.v2+json;charset=UTF-8\";\n+        public static final String CASE_EVENTS = \"application/vnd.uk.gov.hmcts.ccd-data-store-api.case-events.v2+json;charset=UTF-8\";\n \n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDc1OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382654759", "bodyText": "So this looks like internal endpoint but the story talks about external which would be located in equivalent CaseController class.", "author": "andrewfolga", "createdAt": "2020-02-21T15:46:19Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java", "diffHunk": "@@ -117,4 +124,42 @@ public UICaseController(\n \n         return ResponseEntity.ok(new UIEventViewResource(caseHistoryView, caseId));\n     }\n+\n+    @GetMapping(\n+        path = \"/{caseId}/events\",", "originalCommit": "822285aaf4898e505f80dbd783b0cf87ef5275f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDk4MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824981", "bodyText": "Changed to external", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T11:36:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java\nindex 088685a2e..bf007dc5e 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java\n\n@@ -124,42 +117,4 @@ public class UICaseController {\n \n         return ResponseEntity.ok(new UIEventViewResource(caseHistoryView, caseId));\n     }\n-\n-    @GetMapping(\n-        path = \"/{caseId}/events\",\n-        headers = {\n-            V2.EXPERIMENTAL_HEADER\n-        },\n-        produces = {\n-            V2.MediaType.UI_CASE_EVENTS\n-        }\n-    )\n-    @ApiOperation(\n-        value = \"Retrieve an event by case and event IDs for dynamic display\",\n-        notes = V2.EXPERIMENTAL_WARNING\n-    )\n-    @ApiResponses({\n-        @ApiResponse(\n-            code = 200,\n-            message = \"Success\",\n-            response = UICaseEventsResource.class\n-        ),\n-        @ApiResponse(\n-            code = 400,\n-            message = ERROR_CASE_ID_INVALID\n-        ),\n-        @ApiResponse(\n-            code = 404,\n-            message = \"Case event not found\"\n-        )\n-    })\n-    public ResponseEntity<UICaseEventsResource> getCaseEvents(@PathVariable(\"caseId\") String caseId) {\n-        if (!caseReferenceService.validateUID(caseId)) {\n-            throw new BadRequestException(ERROR_CASE_ID_INVALID);\n-        }\n-\n-        final List<AuditEvent> auditEvents = getEventsOperation.getEvents(caseId);\n-\n-        return ResponseEntity.ok(new UICaseEventsResource(caseId, auditEvents));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMzUzNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383813534", "bodyText": "this is duplicated with the already existing `getEvents(String jurisdiction, String caseTypeId, String caseReference)\nThe only difference between the 2 is that the above creates a different error message which indicates the  jurisdiction and caseTypeId.\nString.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference)));\nI think that's not an important detail and can be changed to only log the caseReference. If you do that you can find a way to easily reuse that logic rather than duplicating", "author": "mario-paniccia", "createdAt": "2020-02-25T11:11:35Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "diffHunk": "@@ -58,4 +60,18 @@ public DefaultGetEventsOperation(CaseAuditEventRepository auditEventRepository,\n         return auditEventRepository.findByEventId(eventId).map(Optional::of)\n             .orElseThrow(() -> new ResourceNotFoundException(CASE_EVENT_NOT_FOUND));\n     }\n+\n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {\n+        if (!uidService.validateUID(caseReference)) {\n+            throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n+        }\n+\n+        final CaseDetails caseDetails =\n+            getCaseOperation.execute(caseReference)\n+                .orElseThrow(() -> new ResourceNotFoundException(\n+                    String.format(CASE_RESOURCE_NOT_FOUND, caseReference)));\n+\n+        return getEvents(caseDetails);\n+    }", "originalCommit": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDcwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824703", "bodyText": "Did some changes.... Please review the code", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T11:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMzUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "e51c39e860988ab6ca3b64faa4e8b3dd226324fe", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java\nindex bce8121d4..c10f2b422 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java\n\n@@ -63,15 +65,6 @@ public class DefaultGetEventsOperation implements GetEventsOperation {\n \n     @Override\n     public List<AuditEvent> getEvents(String caseReference) {\n-        if (!uidService.validateUID(caseReference)) {\n-            throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n-        }\n-\n-        final CaseDetails caseDetails =\n-            getCaseOperation.execute(caseReference)\n-                .orElseThrow(() -> new ResourceNotFoundException(\n-                    String.format(CASE_RESOURCE_NOT_FOUND, caseReference)));\n-\n-        return getEvents(caseDetails);\n+        return getEvents(caseReference, () -> String.format(CASE_RESOURCE_NOT_FOUND, caseReference));\n     }\n }\n"}}, {"oid": "0b7e5b430c3635dcafac4d51cfdb19e287563e45", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0b7e5b430c3635dcafac4d51cfdb19e287563e45", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T11:12:37Z", "type": "commit"}, {"oid": "e51c39e860988ab6ca3b64faa4e8b3dd226324fe", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e51c39e860988ab6ca3b64faa4e8b3dd226324fe", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T11:34:40Z", "type": "commit"}, {"oid": "6d4480a5fd0890c7dd27a6dae1c4ebdbc77123e3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6d4480a5fd0890c7dd27a6dae1c4ebdbc77123e3", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T11:35:27Z", "type": "commit"}, {"oid": "034c0f357da546e0482afa34a60994291f29cc75", "url": "https://github.com/hmcts/ccd-data-store-api/commit/034c0f357da546e0482afa34a60994291f29cc75", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T11:36:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMDQwNw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383830407", "bodyText": "\ud83d\udc4d", "author": "andrewfolga", "createdAt": "2020-02-25T11:48:09Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "diffHunk": "@@ -41,15 +43,17 @@ public DefaultGetEventsOperation(CaseAuditEventRepository auditEventRepository,\n \n     @Override\n     public List<AuditEvent> getEvents(String jurisdiction, String caseTypeId, String caseReference) {\n+        return getEvents(caseReference, () -> String.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference));\n+    }\n+\n+    private List<AuditEvent> getEvents(String caseReference, Supplier<String> errorMessageSupplier) {\n         if (!uidService.validateUID(caseReference)) {\n             throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n         }\n \n         final CaseDetails caseDetails =\n             getCaseOperation.execute(caseReference)\n-                .orElseThrow(() -> new ResourceNotFoundException(\n-                    String.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference)));\n-\n+                .orElseThrow(() -> new ResourceNotFoundException(errorMessageSupplier.get()));", "originalCommit": "034c0f357da546e0482afa34a60994291f29cc75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383832703", "bodyText": "Is this correct? Are we retrieving also by event IDS?", "author": "andrewfolga", "createdAt": "2020-02-25T11:53:26Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",", "originalCommit": "034c0f357da546e0482afa34a60994291f29cc75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzEzNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833136", "bodyText": "Also I think we retrieve audit event and not a single event. Could we fix that too?", "author": "andrewfolga", "createdAt": "2020-02-25T11:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzQ4MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833480", "bodyText": "This is also not for dynamic display. Could we say:\n\"Retrieve audit events by case ID\"", "author": "andrewfolga", "createdAt": "2020-02-25T11:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzg5NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917895", "bodyText": "changed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "320b01010394530d288e4dd83727592e91a28f78", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\nindex c2a556d86..810386735 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n\n@@ -231,7 +231,7 @@ public class CaseController {\n         }\n     )\n     @ApiOperation(\n-        value = \"Retrieve an event by case and event IDs for dynamic display\",\n+        value = \"Retrieve an audit event by Case ID\",\n         notes = V2.EXPERIMENTAL_WARNING\n     )\n     @ApiResponses({\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzY3Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833676", "bodyText": "Should it not say - Case audit events not found?", "author": "andrewfolga", "createdAt": "2020-02-25T11:55:33Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case event not found\"", "originalCommit": "034c0f357da546e0482afa34a60994291f29cc75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzc1Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917752", "bodyText": "Changed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:37:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzY3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "320b01010394530d288e4dd83727592e91a28f78", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\nindex c2a556d86..810386735 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n\n@@ -231,7 +231,7 @@ public class CaseController {\n         }\n     )\n     @ApiOperation(\n-        value = \"Retrieve an event by case and event IDs for dynamic display\",\n+        value = \"Retrieve an audit event by Case ID\",\n         notes = V2.EXPERIMENTAL_WARNING\n     )\n     @ApiResponses({\n"}}, {"oid": "320b01010394530d288e4dd83727592e91a28f78", "url": "https://github.com/hmcts/ccd-data-store-api/commit/320b01010394530d288e4dd83727592e91a28f78", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T12:00:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjA1Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383836053", "bodyText": "Should it not be \"Retrieve audit events by case ID\"?", "author": "andrewfolga", "createdAt": "2020-02-25T12:00:59Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",", "originalCommit": "320b01010394530d288e4dd83727592e91a28f78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzU5OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917598", "bodyText": "Changed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjA1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a85cd154836bc02957f06ba80013507244dc1acc", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\nindex 810386735..d81244a8e 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n\n@@ -231,7 +231,7 @@ public class CaseController {\n         }\n     )\n     @ApiOperation(\n-        value = \"Retrieve an audit event by Case ID\",\n+        value = \"Retrieve audit events by case ID\",\n         notes = V2.EXPERIMENTAL_WARNING\n     )\n     @ApiResponses({\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjU0OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383836549", "bodyText": "Can we extract this to V2.Error like \"AUDIT_EVENTS_NOT_FOUND\"?", "author": "andrewfolga", "createdAt": "2020-02-25T12:02:09Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case audit events not found\"", "originalCommit": "320b01010394530d288e4dd83727592e91a28f78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzUwMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917503", "bodyText": "Added it into V2.Error", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:37:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a85cd154836bc02957f06ba80013507244dc1acc", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\nindex 810386735..d81244a8e 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n\n@@ -231,7 +231,7 @@ public class CaseController {\n         }\n     )\n     @ApiOperation(\n-        value = \"Retrieve an audit event by Case ID\",\n+        value = \"Retrieve audit events by case ID\",\n         notes = V2.EXPERIMENTAL_WARNING\n     )\n     @ApiResponses({\n"}}, {"oid": "a85cd154836bc02957f06ba80013507244dc1acc", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a85cd154836bc02957f06ba80013507244dc1acc", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T12:03:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNzg2NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383837865", "bodyText": "Aren't we missing other response codes here like 422 UNPROCESSABLE_ENTITY from ValidationException (AuthorisedGetEventsOperation)?\nCan you check whether others are not missing?", "author": "andrewfolga", "createdAt": "2020-02-25T12:04:54Z", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve audit events by case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({", "originalCommit": "a85cd154836bc02957f06ba80013507244dc1acc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzM0OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917349", "bodyText": "added 422 messages to API", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNzg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f535fd8bb804935f7d588d16a3222732e737a3ef", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\nindex d81244a8e..0e6f8e782 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java\n\n@@ -244,6 +244,14 @@ public class CaseController {\n             code = 400,\n             message = ERROR_CASE_ID_INVALID\n         ),\n+        @ApiResponse(\n+            code = 422,\n+            message = \"Cannot find case type definition for case ID \"\n+        ),\n+        @ApiResponse(\n+            code = 422,\n+            message = \"Cannot find user roles or case roles for the case ID\"\n+        ),\n         @ApiResponse(\n             code = 404,\n             message = \"Case audit events not found\"\n"}}, {"oid": "f535fd8bb804935f7d588d16a3222732e737a3ef", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f535fd8bb804935f7d588d16a3222732e737a3ef", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T12:25:34Z", "type": "commit"}, {"oid": "62ff59f6287f0b67bee6602d68a94b78ff9dadfc", "url": "https://github.com/hmcts/ccd-data-store-api/commit/62ff59f6287f0b67bee6602d68a94b78ff9dadfc", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T13:40:09Z", "type": "commit"}, {"oid": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T13:58:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxMjUyMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383912522", "bodyText": "we sure this is needed? DefaultGetEventsOperation always returns at least 1 event, the create event for a case.\nAnd I think the other decorators that execute before this one will already return an empty list in case that single event is not accessible", "author": "mario-paniccia", "createdAt": "2020-02-25T14:29:04Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -61,6 +66,13 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, event.getCaseDataId(), singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events) {\n+        if (null == events || events.size() == 0) {\n+            return Lists.newArrayList();\n+        }", "originalCommit": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzEzOQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917139", "bodyText": "removed above check", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxMjUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "2c6b96a1bc110bd8e4a888652108d6750a2d8662", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java\nindex 5c0ba2f40..4bb954a99 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java\n\n@@ -67,9 +67,6 @@ public class AuthorisedGetEventsOperation implements GetEventsOperation {\n     }\n \n     private List<AuditEvent> secureEvents(List<AuditEvent> events) {\n-        if (null == events || events.size() == 0) {\n-            return Lists.newArrayList();\n-        }\n         return secureEvents(events.get(0).getCaseTypeId(), events.get(0).getCaseDataId(),  events);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNDAwNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383914004", "bodyText": "same as above don't think:\nnull == events || events.size() == 0 \nis needed", "author": "mario-paniccia", "createdAt": "2020-02-25T14:31:26Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java", "diffHunk": "@@ -48,6 +57,14 @@ public ClassifiedGetEventsOperation(@Qualifier(\"default\") GetEventsOperation get\n         return secureEvents(jurisdiction, singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events, String caseReference) {\n+        CaseDetails caseDetails = getCaseOperation.execute(caseReference).orElse(null);\n+        if (null == events || events.size() == 0 || null == caseDetails) {", "originalCommit": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzAzNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917034", "bodyText": "removed about check", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNDAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "2c6b96a1bc110bd8e4a888652108d6750a2d8662", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java\nindex d10bcdc62..4379b90d8 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java\n\n@@ -59,7 +59,7 @@ public class ClassifiedGetEventsOperation implements GetEventsOperation {\n \n     private List<AuditEvent> secureEvents(List<AuditEvent> events, String caseReference) {\n         CaseDetails caseDetails = getCaseOperation.execute(caseReference).orElse(null);\n-        if (null == events || events.size() == 0 || null == caseDetails) {\n+        if (null == caseDetails) {\n             return Lists.newArrayList();\n         }\n         return classificationService.applyClassification(caseDetails.getJurisdiction(), events);\n"}}, {"oid": "2c6b96a1bc110bd8e4a888652108d6750a2d8662", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2c6b96a1bc110bd8e4a888652108d6750a2d8662", "message": "RDM-5903: Implement and consume external GET event details for case endpoint in API v2", "committedDate": "2020-02-25T14:38:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODc4NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383918785", "bodyText": "Kiran can you review AuditEvent and make sure it's not missing any important event property and if all the properties we are returning are relevant?\nLet's give this a thought as as we found out the v1 endpoint was not written by us. Perhaps we can take this chance to improve the json response that is returned", "author": "mario-paniccia", "createdAt": "2020-02-25T14:39:22Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -51,6 +51,11 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, auditEvents.get(0).getCaseDataId(),  auditEvents);\n     }\n \n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {", "originalCommit": "2c6b96a1bc110bd8e4a888652108d6750a2d8662", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxOTg3Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383919873", "bodyText": "furthermore please test this with a citizen in addition to caseworker. The Service that has requested this endpoint will be accessing it with a citizen role so we should make sure it's working", "author": "mario-paniccia", "createdAt": "2020-02-25T14:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODc4NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d9ef30d150c74000ddf79a2907a9abdc94709c52", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d9ef30d150c74000ddf79a2907a9abdc94709c52", "message": "Merge branch 'develop' into RDM-5903", "committedDate": "2020-02-26T14:01:43Z", "type": "commit"}, {"oid": "54f737daef1b1b27f03955eb2b9eda77f7f8b415", "url": "https://github.com/hmcts/ccd-data-store-api/commit/54f737daef1b1b27f03955eb2b9eda77f7f8b415", "message": "Merge branch 'develop' into RDM-5903", "committedDate": "2020-02-28T13:57:11Z", "type": "commit"}, {"oid": "c1a8a1ea10b14497948a7c45ae7c78638908dab3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c1a8a1ea10b14497948a7c45ae7c78638908dab3", "message": "RDM-5903: fix compilation issues", "committedDate": "2020-02-28T14:40:03Z", "type": "commit"}, {"oid": "1a5654b897b0d679ab42160fa9212e93287e5969", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1a5654b897b0d679ab42160fa9212e93287e5969", "message": "RDM-5903: fix test case issues", "committedDate": "2020-02-28T15:36:38Z", "type": "commit"}]}