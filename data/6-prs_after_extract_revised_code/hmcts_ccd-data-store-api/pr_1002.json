{"pr_number": 1002, "pr_title": "RDM-8788 - Java 11 upgrade", "pr_createdAt": "2020-07-03T13:45:53Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1002", "timeline": [{"oid": "c25900fc571fff248409783eb98c25a43ea528b3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c25900fc571fff248409783eb98c25a43ea528b3", "message": "RDM-8788 - Java 11 update WIP", "committedDate": "2020-07-03T11:27:35Z", "type": "commit"}, {"oid": "6a84093c7e90075fb8a1c7674a34c6517030de71", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6a84093c7e90075fb8a1c7674a34c6517030de71", "message": "Update couple of compatibility issues", "committedDate": "2020-07-03T13:44:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NDA4MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1002#discussion_r449594080", "bodyText": "Implementation change that will require reviewing. With Java 11-compatible version of Hibernate we can no longer use the old approach of mixing named and positional parameters in the same query. (Note there are a number of tests, especially integration tests, that test this new implementation didn't affect the ultimate behaviour).", "author": "danlysiak", "createdAt": "2020-07-03T13:51:32Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java", "diffHunk": "@@ -99,16 +98,13 @@ private String addUserCaseStateAccessClause(MetaData metadata, Map<String, Objec\n     }\n \n     private void addParameters(final Query query, List<Criterion> criterion) {\n-\n-        IntStream.range(0, criterion.size())\n-                .forEach(position -> query.setParameter(position, criterion.get(position).getSoughtValue()));\n+        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));\n     }\n \n     private String toClauses(final List<Criterion> criterion) {\n-        return IntStream.range(0, criterion.size())\n-                .mapToObj(Integer::new)\n-                .map(position -> criterion.get(position).buildClauseString(position, getOperation()))\n-                .collect(Collectors.joining(AND));\n+        return criterion.stream()\n+            .map(criteria -> criteria.buildClauseString(getOperation()))\n+            .collect(Collectors.joining(AND));\n     }", "originalCommit": "6a84093c7e90075fb8a1c7674a34c6517030de71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f00c15165825134b6a023d2c89ac0e602dc097ee", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\nindex 2c73b5dcd..9f3801db9 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n\n@@ -97,13 +97,13 @@ public class SearchQueryFactoryOperation {\n         return \"\";\n     }\n \n-    private void addParameters(final Query query, List<Criterion> criterion) {\n-        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));\n+    private void addParameters(final Query query, List<Criterion> criteria) {\n+        criteria.forEach(criterion -> query.setParameter(criterion.buildParameterId(), criterion.getSoughtValue()));\n     }\n \n-    private String toClauses(final List<Criterion> criterion) {\n-        return criterion.stream()\n-            .map(criteria -> criteria.buildClauseString(getOperation()))\n+    private String toClauses(final List<Criterion> criteria) {\n+        return criteria.stream()\n+            .map(criterion -> criterion.buildClauseString(getOperation()))\n             .collect(Collectors.joining(AND));\n     }\n \n"}}, {"oid": "205305a383308d7e8c158020b7597c356075770d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/205305a383308d7e8c158020b7597c356075770d", "message": "CVE-2020-11996", "committedDate": "2020-07-03T13:56:43Z", "type": "commit"}, {"oid": "cd57efbbacf2b88c50b3264ccc50cd447786a971", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cd57efbbacf2b88c50b3264ccc50cd447786a971", "message": "Minor changes", "committedDate": "2020-07-03T14:10:29Z", "type": "commit"}, {"oid": "d2ca31d88ad4f57d19797faa45f558ec793eac4b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d2ca31d88ad4f57d19797faa45f558ec793eac4b", "message": "Switch Hazelcast back to pre-11 state", "committedDate": "2020-07-03T14:49:02Z", "type": "commit"}, {"oid": "c5f3c36a67f7124b8771790f836cd689831f9a68", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c5f3c36a67f7124b8771790f836cd689831f9a68", "message": "RDM-8788 - Cleanup and JVM args for Hazelcast", "committedDate": "2020-07-06T09:40:38Z", "type": "commit"}, {"oid": "236b970ceb1ff2d74d047a00fca6234472d361f2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/236b970ceb1ff2d74d047a00fca6234472d361f2", "message": "Revert unrelated changes to Java 11; tidy up", "committedDate": "2020-07-07T11:11:15Z", "type": "commit"}, {"oid": "704a1974fd9fa3550057188dcfcfad7fdc8b4777", "url": "https://github.com/hmcts/ccd-data-store-api/commit/704a1974fd9fa3550057188dcfcfad7fdc8b4777", "message": "Minor test fixes for Java 11", "committedDate": "2020-07-07T11:42:30Z", "type": "commit"}, {"oid": "abef6c4d77121585a2f7a1b13b577a483c3564ab", "url": "https://github.com/hmcts/ccd-data-store-api/commit/abef6c4d77121585a2f7a1b13b577a483c3564ab", "message": "Add jvmArgs for Hazelcast in tests", "committedDate": "2020-07-07T12:04:29Z", "type": "commit"}, {"oid": "183cece86e4673ee37169e75bb971e39af7a4109", "url": "https://github.com/hmcts/ccd-data-store-api/commit/183cece86e4673ee37169e75bb971e39af7a4109", "message": "Tidy up", "committedDate": "2020-07-07T12:10:08Z", "type": "commit"}, {"oid": "e6e682fc6874e0564c7dbb3bd7da02e3998073ab", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e6e682fc6874e0564c7dbb3bd7da02e3998073ab", "message": "Fix incorrect syntax", "committedDate": "2020-07-07T12:22:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyODY0Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1002#discussion_r451328646", "bodyText": "List<Criterion> criterion --> List<Criterion> criteria\ncriterion.forEach(criteria --> criteria.forEach(criterion", "author": "MSancaktutar", "createdAt": "2020-07-08T07:10:21Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java", "diffHunk": "@@ -99,16 +98,13 @@ private String addUserCaseStateAccessClause(MetaData metadata, Map<String, Objec\n     }\n \n     private void addParameters(final Query query, List<Criterion> criterion) {\n-\n-        IntStream.range(0, criterion.size())\n-                .forEach(position -> query.setParameter(position, criterion.get(position).getSoughtValue()));\n+        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));", "originalCommit": "e6e682fc6874e0564c7dbb3bd7da02e3998073ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f00c15165825134b6a023d2c89ac0e602dc097ee", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\nindex 2c73b5dcd..9f3801db9 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n\n@@ -97,13 +97,13 @@ public class SearchQueryFactoryOperation {\n         return \"\";\n     }\n \n-    private void addParameters(final Query query, List<Criterion> criterion) {\n-        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));\n+    private void addParameters(final Query query, List<Criterion> criteria) {\n+        criteria.forEach(criterion -> query.setParameter(criterion.buildParameterId(), criterion.getSoughtValue()));\n     }\n \n-    private String toClauses(final List<Criterion> criterion) {\n-        return criterion.stream()\n-            .map(criteria -> criteria.buildClauseString(getOperation()))\n+    private String toClauses(final List<Criterion> criteria) {\n+        return criteria.stream()\n+            .map(criterion -> criterion.buildClauseString(getOperation()))\n             .collect(Collectors.joining(AND));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyOTAwNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1002#discussion_r451329004", "bodyText": "swap use of plural and singular of identifiers.", "author": "MSancaktutar", "createdAt": "2020-07-08T07:11:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java", "diffHunk": "@@ -99,16 +98,13 @@ private String addUserCaseStateAccessClause(MetaData metadata, Map<String, Objec\n     }\n \n     private void addParameters(final Query query, List<Criterion> criterion) {\n-\n-        IntStream.range(0, criterion.size())\n-                .forEach(position -> query.setParameter(position, criterion.get(position).getSoughtValue()));\n+        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));\n     }\n \n     private String toClauses(final List<Criterion> criterion) {\n-        return IntStream.range(0, criterion.size())\n-                .mapToObj(Integer::new)\n-                .map(position -> criterion.get(position).buildClauseString(position, getOperation()))\n-                .collect(Collectors.joining(AND));\n+        return criterion.stream()\n+            .map(criteria -> criteria.buildClauseString(getOperation()))\n+            .collect(Collectors.joining(AND));", "originalCommit": "e6e682fc6874e0564c7dbb3bd7da02e3998073ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM1Nzg5Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1002#discussion_r451357893", "bodyText": "Oh yes, good spot!", "author": "danlysiak", "createdAt": "2020-07-08T08:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyOTAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "f00c15165825134b6a023d2c89ac0e602dc097ee", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\nindex 2c73b5dcd..9f3801db9 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/data/casedetails/search/SearchQueryFactoryOperation.java\n\n@@ -97,13 +97,13 @@ public class SearchQueryFactoryOperation {\n         return \"\";\n     }\n \n-    private void addParameters(final Query query, List<Criterion> criterion) {\n-        criterion.forEach(criteria -> query.setParameter(criteria.buildParameterId(), criteria.getSoughtValue()));\n+    private void addParameters(final Query query, List<Criterion> criteria) {\n+        criteria.forEach(criterion -> query.setParameter(criterion.buildParameterId(), criterion.getSoughtValue()));\n     }\n \n-    private String toClauses(final List<Criterion> criterion) {\n-        return criterion.stream()\n-            .map(criteria -> criteria.buildClauseString(getOperation()))\n+    private String toClauses(final List<Criterion> criteria) {\n+        return criteria.stream()\n+            .map(criterion -> criterion.buildClauseString(getOperation()))\n             .collect(Collectors.joining(AND));\n     }\n \n"}}, {"oid": "f00c15165825134b6a023d2c89ac0e602dc097ee", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f00c15165825134b6a023d2c89ac0e602dc097ee", "message": "Swap variable names for correctness", "committedDate": "2020-07-08T08:33:16Z", "type": "commit"}]}