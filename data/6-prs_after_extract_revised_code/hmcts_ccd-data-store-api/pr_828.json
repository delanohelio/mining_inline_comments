{"pr_number": 828, "pr_title": "RDM-7455: [Immigration and Asylum]- Date Validation errors not cleare\u2026", "pr_createdAt": "2020-02-26T14:32:48Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/828", "timeline": [{"oid": "8c0df9f4c78abe45ac0255e58029de030d6e2aeb", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8c0df9f4c78abe45ac0255e58029de030d6e2aeb", "message": "RDM-7455: [Immigration and Asylum]- Date Validation errors not cleared when user goes to previous page", "committedDate": "2020-02-26T14:30:24Z", "type": "commit"}, {"oid": "dbe05c5c3d91ada25a50bf7a3ddf0ac7815751e6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/dbe05c5c3d91ada25a50bf7a3ddf0ac7815751e6", "message": "RDM-7455: [Immigration and Asylum]- Date Validation errors not cleared when user goes to previous page", "committedDate": "2020-03-23T22:30:25Z", "type": "commit"}, {"oid": "6c413dedec896257092199fcc10ac12e973791cd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6c413dedec896257092199fcc10ac12e973791cd", "message": "RDM-7455: [Immigration and Asylum]- Date Validation errors not cleared when user goes to previous page", "committedDate": "2020-03-24T09:10:45Z", "type": "commit"}, {"oid": "acc0e18263348855fdf6ad7bdc63cec0bae2c4f7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/acc0e18263348855fdf6ad7bdc63cec0bae2c4f7", "message": "RDM-7455: [Immigration and Asylum]- Date Validation errors not cleared when user goes to previous page", "committedDate": "2020-03-24T09:30:15Z", "type": "commit"}, {"oid": "5f67537daaf65d84437cbfc26f292f28d4818a92", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5f67537daaf65d84437cbfc26f292f28d4818a92", "message": "CVE-2020-10672, CVE-2020-10673", "committedDate": "2020-03-24T09:51:54Z", "type": "commit"}, {"oid": "b4f02e0475d5434813cca2d39168beab93fc001c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b4f02e0475d5434813cca2d39168beab93fc001c", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Test case added", "committedDate": "2020-03-24T19:24:34Z", "type": "commit"}, {"oid": "47deca6c1fe39766933e4b5ce020c9f52f996424", "url": "https://github.com/hmcts/ccd-data-store-api/commit/47deca6c1fe39766933e4b5ce020c9f52f996424", "message": "Merge branch 'develop' into RDM-7455", "committedDate": "2020-03-24T19:27:46Z", "type": "commit"}, {"oid": "da2c8081fa193f52d59d5a20bcee7be5405070c5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/da2c8081fa193f52d59d5a20bcee7be5405070c5", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Temporary supression on jackson data bind", "committedDate": "2020-03-24T20:24:19Z", "type": "commit"}, {"oid": "012a548754e904a1c56ea6410dd147e72465e8c0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/012a548754e904a1c56ea6410dd147e72465e8c0", "message": "Merge remote-tracking branch 'origin/RDM-7455' into RDM-7455", "committedDate": "2020-03-24T20:27:30Z", "type": "commit"}, {"oid": "5b7ceac9cc88ce9d487dd855bf785775989cc47e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5b7ceac9cc88ce9d487dd855bf785775989cc47e", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : reverted jackson-databind version", "committedDate": "2020-03-24T20:30:41Z", "type": "commit"}, {"oid": "76e45d1ca791dcb646341322c40b6af5c8c149c4", "url": "https://github.com/hmcts/ccd-data-store-api/commit/76e45d1ca791dcb646341322c40b6af5c8c149c4", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : reverted to previous changes", "committedDate": "2020-03-24T21:24:02Z", "type": "commit"}, {"oid": "84095b83b1d8088720e8ff737848230d93bf00bd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/84095b83b1d8088720e8ff737848230d93bf00bd", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : reverted to previous changes", "committedDate": "2020-03-24T21:38:03Z", "type": "commit"}, {"oid": "8b7f2e43803504bb5e40849ce171cb38c2257b9e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8b7f2e43803504bb5e40849ce171cb38c2257b9e", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Test cases added", "committedDate": "2020-03-24T22:23:18Z", "type": "commit"}, {"oid": "010e92a27573cef07d5a0433d3ccd02707ac928f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/010e92a27573cef07d5a0433d3ccd02707ac928f", "message": "Merge branch 'develop' into RDM-7455", "committedDate": "2020-03-25T09:30:49Z", "type": "commit"}, {"oid": "e8aeea624ee67c6af74f1fdf5ff49b30f4ea5487", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e8aeea624ee67c6af74f1fdf5ff49b30f4ea5487", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Test cases added", "committedDate": "2020-03-27T10:19:34Z", "type": "commit"}, {"oid": "e658696a247d06fe3154ff48849f1c2a6c615672", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e658696a247d06fe3154ff48849f1c2a6c615672", "message": "Merge branch 'develop' into RDM-7455", "committedDate": "2020-03-27T11:56:14Z", "type": "commit"}, {"oid": "1104504bce96f39f4017b3ba99399fdb12ac4125", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1104504bce96f39f4017b3ba99399fdb12ac4125", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Failure Test cases resolved", "committedDate": "2020-03-27T16:15:43Z", "type": "commit"}, {"oid": "bd04b2e7f84d2deb8450753d5e4e7e31f87cb9d2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bd04b2e7f84d2deb8450753d5e4e7e31f87cb9d2", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Integration Test cases added and removed changed from functional test part", "committedDate": "2020-03-29T19:52:43Z", "type": "commit"}, {"oid": "12ca208e4fa2723cb46da36cbbe0b05465d24edd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/12ca208e4fa2723cb46da36cbbe0b05465d24edd", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Integration Test cases added for  multi page filtering and checkstyle issues fixed", "committedDate": "2020-03-29T22:57:50Z", "type": "commit"}, {"oid": "854857be610f733ac71796aa47396df42c440968", "url": "https://github.com/hmcts/ccd-data-store-api/commit/854857be610f733ac71796aa47396df42c440968", "message": "RDM-7455: [Immigration and Asylum]- Date Validation : Checkstyle issues fixed", "committedDate": "2020-03-30T09:06:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0Mzg0OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/828#discussion_r401443848", "bodyText": "this method probably does not belong to the MidEventCallback. Could we introduce a utility class if we don't have a suitable one already? suggestions: WizardPagesUtils. also better to change the method signature not to pass in CaseDetails. The method will instead return wizardPageFields that then the\nMidEventCallback will remove from the CaseDetails", "author": "mario-paniccia", "createdAt": "2020-04-01T08:32:30Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java", "diffHunk": "@@ -90,6 +90,19 @@ public JsonNode invoke(String caseTypeId,\n         return dataJsonNode(content.getData());\n     }\n \n+    private void removeNextPageFieldData(CaseDetails currentCaseDetails, Integer order, String caseTypeId, String eventId) {\n+        if (order != null) {\n+            Set<String> wizardPageFields = uiDefinitionRepository\n+                .getWizardPageCollection(caseTypeId, eventId)\n+                .stream()\n+                .filter(wizardPage -> wizardPage.getOrder() > order)\n+                .map(WizardPage::getWizardPageFieldNames)\n+                .flatMap(Set::stream)\n+                .collect(Collectors.toSet());\n+            currentCaseDetails.getData().entrySet().removeIf(entry -> wizardPageFields.contains(entry.getKey()));\n+        }\n+    }", "originalCommit": "854857be610f733ac71796aa47396df42c440968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22f3f6f604e4b201318f6e730f97d824590ef36e", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\nindex a6c6c4c56..087eff6fa 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n\n@@ -110,19 +110,19 @@ public class MidEventCallback {\n         return objectNode;\n     }\n \n-    private CaseType getCaseType(String caseTypeId) {\n-        final CaseType caseType = caseDefinitionRepository.getCaseType(caseTypeId);\n-        if (caseType == null) {\n+    private CaseTypeDefinition getCaseType(String caseTypeId) {\n+        final CaseTypeDefinition caseTypeDefinition = caseDefinitionRepository.getCaseType(caseTypeId);\n+        if (caseTypeDefinition == null) {\n             throw new ValidationException(\"Cannot find case type definition for \" + caseTypeId);\n         }\n-        return caseType;\n+        return caseTypeDefinition;\n     }\n \n-    private CaseEvent getCaseEvent(Event event, CaseType caseType) {\n-        final CaseEvent caseEvent = eventTriggerService.findCaseEvent(caseType, event.getEventId());\n-        if (caseEvent == null) {\n-            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseType.getId());\n+    private CaseEventDefinition getCaseEvent(Event event, CaseTypeDefinition caseTypeDefinition) {\n+        final CaseEventDefinition caseEventDefinition = eventTriggerService.findCaseEvent(caseTypeDefinition, event.getEventId());\n+        if (caseEventDefinition == null) {\n+            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseTypeDefinition.getId());\n         }\n-        return caseEvent;\n+        return caseEventDefinition;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MDQ1MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/828#discussion_r401450451", "bodyText": "in theory page display order is optional. Even thought we recommend to always set it. The ordering is guaranteed only if a display order is defined. Otherwise I think pages are ordered by page id or in the order they are defined on the spreadsheet (can't recall exactly). In this case we won't be removing the next pages right?", "author": "mario-paniccia", "createdAt": "2020-04-01T08:43:40Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java", "diffHunk": "@@ -90,6 +90,19 @@ public JsonNode invoke(String caseTypeId,\n         return dataJsonNode(content.getData());\n     }\n \n+    private void removeNextPageFieldData(CaseDetails currentCaseDetails, Integer order, String caseTypeId, String eventId) {\n+        if (order != null) {", "originalCommit": "854857be610f733ac71796aa47396df42c440968", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MDgzMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/828#discussion_r401590833", "bodyText": "I have verified all the prod files, PageDisplayOrder is defined for most of the definitions except for some fields in below definition files.\nCCD_Publiclaw_BulkScanningExceptionRecord_V00.01-PROD\nccd-fpl-prod", "author": "kiran-yenigala-hmcts", "createdAt": "2020-04-01T12:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MDQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "22f3f6f604e4b201318f6e730f97d824590ef36e", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\nindex a6c6c4c56..087eff6fa 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n\n@@ -110,19 +110,19 @@ public class MidEventCallback {\n         return objectNode;\n     }\n \n-    private CaseType getCaseType(String caseTypeId) {\n-        final CaseType caseType = caseDefinitionRepository.getCaseType(caseTypeId);\n-        if (caseType == null) {\n+    private CaseTypeDefinition getCaseType(String caseTypeId) {\n+        final CaseTypeDefinition caseTypeDefinition = caseDefinitionRepository.getCaseType(caseTypeId);\n+        if (caseTypeDefinition == null) {\n             throw new ValidationException(\"Cannot find case type definition for \" + caseTypeId);\n         }\n-        return caseType;\n+        return caseTypeDefinition;\n     }\n \n-    private CaseEvent getCaseEvent(Event event, CaseType caseType) {\n-        final CaseEvent caseEvent = eventTriggerService.findCaseEvent(caseType, event.getEventId());\n-        if (caseEvent == null) {\n-            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseType.getId());\n+    private CaseEventDefinition getCaseEvent(Event event, CaseTypeDefinition caseTypeDefinition) {\n+        final CaseEventDefinition caseEventDefinition = eventTriggerService.findCaseEvent(caseTypeDefinition, event.getEventId());\n+        if (caseEventDefinition == null) {\n+            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseTypeDefinition.getId());\n         }\n-        return caseEvent;\n+        return caseEventDefinition;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3NjMxNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/828#discussion_r401476314", "bodyText": "looking at this now, rather than a WizardPagesUtils I think the best thing is the UIDefRepo to return the list of pages wrapped inside a new class WizardPages that will then contain all the utility methods to process the pages like getPagesBefore(int pageId). But this might be too many changes now. you can ignore it", "author": "mario-paniccia", "createdAt": "2020-04-01T09:26:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java", "diffHunk": "@@ -90,6 +90,19 @@ public JsonNode invoke(String caseTypeId,\n         return dataJsonNode(content.getData());\n     }\n \n+    private void removeNextPageFieldData(CaseDetails currentCaseDetails, Integer order, String caseTypeId, String eventId) {\n+        if (order != null) {\n+            Set<String> wizardPageFields = uiDefinitionRepository", "originalCommit": "854857be610f733ac71796aa47396df42c440968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22f3f6f604e4b201318f6e730f97d824590ef36e", "chunk": "diff --git a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\nindex a6c6c4c56..087eff6fa 100644\n--- a/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n+++ b/src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallback.java\n\n@@ -110,19 +110,19 @@ public class MidEventCallback {\n         return objectNode;\n     }\n \n-    private CaseType getCaseType(String caseTypeId) {\n-        final CaseType caseType = caseDefinitionRepository.getCaseType(caseTypeId);\n-        if (caseType == null) {\n+    private CaseTypeDefinition getCaseType(String caseTypeId) {\n+        final CaseTypeDefinition caseTypeDefinition = caseDefinitionRepository.getCaseType(caseTypeId);\n+        if (caseTypeDefinition == null) {\n             throw new ValidationException(\"Cannot find case type definition for \" + caseTypeId);\n         }\n-        return caseType;\n+        return caseTypeDefinition;\n     }\n \n-    private CaseEvent getCaseEvent(Event event, CaseType caseType) {\n-        final CaseEvent caseEvent = eventTriggerService.findCaseEvent(caseType, event.getEventId());\n-        if (caseEvent == null) {\n-            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseType.getId());\n+    private CaseEventDefinition getCaseEvent(Event event, CaseTypeDefinition caseTypeDefinition) {\n+        final CaseEventDefinition caseEventDefinition = eventTriggerService.findCaseEvent(caseTypeDefinition, event.getEventId());\n+        if (caseEventDefinition == null) {\n+            throw new ValidationException(event.getEventId() + \" is not a known event ID for the specified case type \" + caseTypeDefinition.getId());\n         }\n-        return caseEvent;\n+        return caseEventDefinition;\n     }\n }\n"}}, {"oid": "cbaf99cd331b8bed8c81edd43c471a9164ace6d1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cbaf99cd331b8bed8c81edd43c471a9164ace6d1", "message": "Merge branch 'develop' into RDM-7455", "committedDate": "2020-04-02T06:59:53Z", "type": "commit"}, {"oid": "44d08c60b9cedbde273f5d51d48cefee4faf49b9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/44d08c60b9cedbde273f5d51d48cefee4faf49b9", "message": "Merge branch 'develop' into RDM-7455", "committedDate": "2020-04-02T13:35:18Z", "type": "commit"}, {"oid": "22f3f6f604e4b201318f6e730f97d824590ef36e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/22f3f6f604e4b201318f6e730f97d824590ef36e", "message": "Merge branch 'release-cut-19.2' into RDM-7455\n\n# Conflicts:\n#\tdependency-check-suppressions.xml\n#\tsrc/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseService.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/domain/service/common/TestBuildersUtil.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/domain/service/createevent/MidEventCallbackTest.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpointIT.java", "committedDate": "2020-09-03T15:29:35Z", "type": "commit"}, {"oid": "4cd455406845d167f872788b23ec1ba3fba40bf1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4cd455406845d167f872788b23ec1ba3fba40bf1", "message": "Merge branch 'release-cut-19.2' into RDM-7455", "committedDate": "2020-09-08T12:08:36Z", "type": "commit"}]}