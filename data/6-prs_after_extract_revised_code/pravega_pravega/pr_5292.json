{"pr_number": 5292, "pr_title": "Reducing time in DR integration tests", "pr_createdAt": "2020-11-03T02:29:34Z", "pr_url": "https://github.com/pravega/pravega/pull/5292", "timeline": [{"oid": "8237318544baf415d5f5df661e7162003e9e3c38", "url": "https://github.com/pravega/pravega/commit/8237318544baf415d5f5df661e7162003e9e3c38", "message": "Reducing time.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-03T02:15:28Z", "type": "commit"}, {"oid": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "url": "https://github.com/pravega/pravega/commit/84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "message": "Minor change.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-03T02:34:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNDE4OQ==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518804189", "bodyText": "Are you sure that 10 events is sufficient for an integration test? I would feel more comfortable knowing that we test a \"larger\" number of events.\nIs this really a driving factor for the time it takes to do this test? Pravega should have no issue, even in a unit/integration test, to handle 300 events.", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:57:05Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -123,9 +124,9 @@\n     private static final Duration TRANSACTION_TIMEOUT = Duration.ofMillis(10000);\n \n     /**\n-     * Write 300 events to different segments.\n+     * Write 10 events to verify recovery.\n      */\n-    private static final int TOTAL_NUM_EVENTS = 300;\n+    private static final int TOTAL_NUM_EVENTS = 10;", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MDczMw==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r522670733", "bodyText": "Made it to 300.", "author": "ManishKumarKeshri", "createdAt": "2020-11-13T05:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNDE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -124,9 +124,9 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n     private static final Duration TRANSACTION_TIMEOUT = Duration.ofMillis(10000);\n \n     /**\n-     * Write 10 events to verify recovery.\n+     * Write {@link #TOTAL_NUM_EVENTS} events to verify recovery.\n      */\n-    private static final int TOTAL_NUM_EVENTS = 10;\n+    private static final int TOTAL_NUM_EVENTS = 300;\n \n     private static final String APPEND_FORMAT = \"Segment_%s_Append_%d\";\n     private static final long DEFAULT_ROLLING_SIZE = (int) (APPEND_FORMAT.length() * 1.5);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNDc3Mw==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518804773", "bodyText": "To avoid having this comment becoming disconnected from the actual value (if it changes), consider replacing the number with {@link #TOTAL_NUM_EVENTS}.", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:57:59Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -375,17 +377,18 @@ public void close() throws Exception {\n      * debug segment container.\n      *  What test does, step by step:\n      *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 300 events to two different segments.\n-     *  3. Waits for all segments created to be flushed to the long term storage.\n+     *  2. Writes 10 events.", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MDc3OA==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r522670778", "bodyText": "Done.", "author": "ManishKumarKeshri", "createdAt": "2020-11-13T05:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNDc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -376,16 +376,16 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n      * Tests the data recovery scenario with just one segment container. Segments recovery is attained using just one\n      * debug segment container.\n      *  What test does, step by step:\n-     *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 10 events.\n-     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n-     *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n-     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n-     *  9. Starts segment store and controller.\n-     *  10.Reads all events.\n+     *  1.  Starts Pravega locally with just one segment container.\n+     *  2.  Writes {@link #TOTAL_NUM_EVENTS} events.\n+     *  3.  Waits for DurableLog to be entirely flushed to the long term storage.\n+     *  4.  Shuts down the controller, segment store and bookeeper/zookeeper.\n+     *  5.  Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6.  Starts one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7.  Re-creates the container metadata segment in DurableLog and let's it flushed to the LTS.\n+     *  8.  Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9.  Starts segment store and controller.\n+     *  10. Reads all events.\n      * @throws Exception    In case of an exception occurred while execution.\n      */\n     @Test(timeout = 90000)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTAzNQ==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518805035", "bodyText": "There is no such thing as \"Tier1\" in the code. It's called DurableLog or DurableDataLog", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:58:23Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -375,17 +377,18 @@ public void close() throws Exception {\n      * debug segment container.\n      *  What test does, step by step:\n      *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 300 events to two different segments.\n-     *  3. Waits for all segments created to be flushed to the long term storage.\n+     *  2. Writes 10 events.\n+     *  3. Waits for Tier1 to be entirely flushed to the long term storage.", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTc3MQ==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518805771", "bodyText": "at line 385 too", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:59:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgxMzU1MA==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518813550", "bodyText": "and in the other tests javadoc as well.", "author": "andreipaduroiu", "createdAt": "2020-11-06T15:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MDgzNw==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r522670837", "bodyText": "Done.", "author": "ManishKumarKeshri", "createdAt": "2020-11-13T05:57:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -376,16 +376,16 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n      * Tests the data recovery scenario with just one segment container. Segments recovery is attained using just one\n      * debug segment container.\n      *  What test does, step by step:\n-     *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 10 events.\n-     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n-     *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n-     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n-     *  9. Starts segment store and controller.\n-     *  10.Reads all events.\n+     *  1.  Starts Pravega locally with just one segment container.\n+     *  2.  Writes {@link #TOTAL_NUM_EVENTS} events.\n+     *  3.  Waits for DurableLog to be entirely flushed to the long term storage.\n+     *  4.  Shuts down the controller, segment store and bookeeper/zookeeper.\n+     *  5.  Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6.  Starts one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7.  Re-creates the container metadata segment in DurableLog and let's it flushed to the LTS.\n+     *  8.  Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9.  Starts segment store and controller.\n+     *  10. Reads all events.\n      * @throws Exception    In case of an exception occurred while execution.\n      */\n     @Test(timeout = 90000)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTUwOA==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518805508", "bodyText": "Similarly, there is no LTS in the code either (LTS == Long Term Storage). The term in the code is Storage.", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:59:06Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -375,17 +377,18 @@ public void close() throws Exception {\n      * debug segment container.\n      *  What test does, step by step:\n      *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 300 events to two different segments.\n-     *  3. Waits for all segments created to be flushed to the long term storage.\n+     *  2. Writes 10 events.\n+     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n      *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Deletes container metadata segment and its attribute segment from the old LTS.\n-     *  5. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  6. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  7. Starts segment store and controller.\n-     *  8. Reads all 600 events again.\n+     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MzA2OQ==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r522673069", "bodyText": "Fixed.", "author": "ManishKumarKeshri", "createdAt": "2020-11-13T06:06:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTUwOA=="}], "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -376,16 +376,16 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n      * Tests the data recovery scenario with just one segment container. Segments recovery is attained using just one\n      * debug segment container.\n      *  What test does, step by step:\n-     *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 10 events.\n-     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n-     *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n-     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n-     *  9. Starts segment store and controller.\n-     *  10.Reads all events.\n+     *  1.  Starts Pravega locally with just one segment container.\n+     *  2.  Writes {@link #TOTAL_NUM_EVENTS} events.\n+     *  3.  Waits for DurableLog to be entirely flushed to the long term storage.\n+     *  4.  Shuts down the controller, segment store and bookeeper/zookeeper.\n+     *  5.  Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6.  Starts one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7.  Re-creates the container metadata segment in DurableLog and let's it flushed to the LTS.\n+     *  8.  Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9.  Starts segment store and controller.\n+     *  10. Reads all events.\n      * @throws Exception    In case of an exception occurred while execution.\n      */\n     @Test(timeout = 90000)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNTg5NA==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518805894", "bodyText": "spacing", "author": "andreipaduroiu", "createdAt": "2020-11-06T14:59:41Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -375,17 +377,18 @@ public void close() throws Exception {\n      * debug segment container.\n      *  What test does, step by step:\n      *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 300 events to two different segments.\n-     *  3. Waits for all segments created to be flushed to the long term storage.\n+     *  2. Writes 10 events.\n+     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n      *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Deletes container metadata segment and its attribute segment from the old LTS.\n-     *  5. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  6. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  7. Starts segment store and controller.\n-     *  8. Reads all 600 events again.\n+     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n+     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9. Starts segment store and controller.\n+     *  10.Reads all events.", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -376,16 +376,16 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n      * Tests the data recovery scenario with just one segment container. Segments recovery is attained using just one\n      * debug segment container.\n      *  What test does, step by step:\n-     *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 10 events.\n-     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n-     *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n-     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n-     *  9. Starts segment store and controller.\n-     *  10.Reads all events.\n+     *  1.  Starts Pravega locally with just one segment container.\n+     *  2.  Writes {@link #TOTAL_NUM_EVENTS} events.\n+     *  3.  Waits for DurableLog to be entirely flushed to the long term storage.\n+     *  4.  Shuts down the controller, segment store and bookeeper/zookeeper.\n+     *  5.  Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6.  Starts one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7.  Re-creates the container metadata segment in DurableLog and let's it flushed to the LTS.\n+     *  8.  Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9.  Starts segment store and controller.\n+     *  10. Reads all events.\n      * @throws Exception    In case of an exception occurred while execution.\n      */\n     @Test(timeout = 90000)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNjI0MA==", "url": "https://github.com/pravega/pravega/pull/5292#discussion_r518806240", "bodyText": "\"Just don't say just\". :)", "author": "andreipaduroiu", "createdAt": "2020-11-06T15:00:12Z", "path": "test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java", "diffHunk": "@@ -375,17 +377,18 @@ public void close() throws Exception {\n      * debug segment container.\n      *  What test does, step by step:\n      *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 300 events to two different segments.\n-     *  3. Waits for all segments created to be flushed to the long term storage.\n+     *  2. Writes 10 events.\n+     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n      *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Deletes container metadata segment and its attribute segment from the old LTS.\n-     *  5. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  6. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  7. Starts segment store and controller.\n-     *  8. Reads all 600 events again.\n+     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.", "originalCommit": "84a7785e9e295386f9e61bb2fa9ce5d99c17a8e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "chunk": "diff --git a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\nindex 918f01051..8f67f0ca6 100644\n--- a/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n+++ b/test/integration/src/test/java/io/pravega/test/integration/RestoreBackUpDataRecoveryTest.java\n\n@@ -376,16 +376,16 @@ public class RestoreBackUpDataRecoveryTest extends ThreadPooledTestSuite {\n      * Tests the data recovery scenario with just one segment container. Segments recovery is attained using just one\n      * debug segment container.\n      *  What test does, step by step:\n-     *  1. Starts Pravega locally with just one segment container.\n-     *  2. Writes 10 events.\n-     *  3. Waits for Tier1 to be entirely flushed to the long term storage.\n-     *  4. Shuts down the controller, segment store and bookeeper/zookeeper.\n-     *  5. Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n-     *  6. Starts just one debug segment container using a new bookeeper/zookeeper and the old LTS.\n-     *  7. Re-creates the container metadata segment in Tier1 and let's it flushed to the LTS.\n-     *  8. Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n-     *  9. Starts segment store and controller.\n-     *  10.Reads all events.\n+     *  1.  Starts Pravega locally with just one segment container.\n+     *  2.  Writes {@link #TOTAL_NUM_EVENTS} events.\n+     *  3.  Waits for DurableLog to be entirely flushed to the long term storage.\n+     *  4.  Shuts down the controller, segment store and bookeeper/zookeeper.\n+     *  5.  Creates back up of container metadata segment and its attribute segment from the old LTS before deleting them.\n+     *  6.  Starts one debug segment container using a new bookeeper/zookeeper and the old LTS.\n+     *  7.  Re-creates the container metadata segment in DurableLog and let's it flushed to the LTS.\n+     *  8.  Updates core attributes of segments in the new container metadata segment by using details from the back up of old container metadata segment.\n+     *  9.  Starts segment store and controller.\n+     *  10. Reads all events.\n      * @throws Exception    In case of an exception occurred while execution.\n      */\n     @Test(timeout = 90000)\n"}}, {"oid": "f1babea4dc22cc6d800ac2f9341e59c0e9039740", "url": "https://github.com/pravega/pravega/commit/f1babea4dc22cc6d800ac2f9341e59c0e9039740", "message": "Fixing comments.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-13T05:54:03Z", "type": "commit"}, {"oid": "0d0a966f39548daf9bb5918621c2593f22a53cf3", "url": "https://github.com/pravega/pravega/commit/0d0a966f39548daf9bb5918621c2593f22a53cf3", "message": "Fixing comments.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-13T06:04:38Z", "type": "commit"}, {"oid": "add04b9f1431ce17fdd4bfa554521b36feca7bef", "url": "https://github.com/pravega/pravega/commit/add04b9f1431ce17fdd4bfa554521b36feca7bef", "message": "Minor changes.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-13T22:02:16Z", "type": "commit"}, {"oid": "f09f8e62b1ecbfac10146f30067cbcd0aa9cd60c", "url": "https://github.com/pravega/pravega/commit/f09f8e62b1ecbfac10146f30067cbcd0aa9cd60c", "message": "Minor changes.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>", "committedDate": "2020-11-13T22:04:28Z", "type": "commit"}]}