{"pr_number": 4992, "pr_title": "Issue 4975: Replace Loading Cache with Regular Cache", "pr_createdAt": "2020-07-29T14:19:42Z", "pr_url": "https://github.com/pravega/pravega/pull/4992", "timeline": [{"oid": "ff0b3b836aca1889364c5e2dfa09a9f921af6b6e", "url": "https://github.com/pravega/pravega/commit/ff0b3b836aca1889364c5e2dfa09a9f921af6b6e", "message": "change cache\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-29T13:07:06Z", "type": "commit"}, {"oid": "6b980a92be96323adfafcc7cd9815dc1d4be497a", "url": "https://github.com/pravega/pravega/commit/6b980a92be96323adfafcc7cd9815dc1d4be497a", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-07-29T15:51:44Z", "type": "commit"}, {"oid": "52909b7cfb3bd7e8b5c9d47037b1d41580cfa9ce", "url": "https://github.com/pravega/pravega/commit/52909b7cfb3bd7e8b5c9d47037b1d41580cfa9ce", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-07-31T08:10:48Z", "type": "commit"}, {"oid": "c2111b31822fe674a24277f8c0ffc04e424edfa7", "url": "https://github.com/pravega/pravega/commit/c2111b31822fe674a24277f8c0ffc04e424edfa7", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-08-03T04:45:21Z", "type": "commit"}, {"oid": "deea8b20c80a204b9316820078fad78073eea34c", "url": "https://github.com/pravega/pravega/commit/deea8b20c80a204b9316820078fad78073eea34c", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-08-04T05:00:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ3MjMwNg==", "url": "https://github.com/pravega/pravega/pull/4992#discussion_r465472306", "bodyText": "We don't use LoadingCache any more...", "author": "pbelgundi", "createdAt": "2020-08-05T04:55:29Z", "path": "controller/src/main/java/io/pravega/controller/store/stream/Cache.java", "diffHunk": "@@ -10,53 +10,42 @@\n package io.pravega.controller.store.stream;\n \n import com.google.common.cache.CacheBuilder;\n-import com.google.common.cache.CacheLoader;\n-import com.google.common.cache.LoadingCache;\n import io.pravega.controller.store.VersionedMetadata;\n \n-import javax.annotation.ParametersAreNonnullByDefault;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.CompletionException;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Function;\n \n /**\n  * Cache for asynchronously retrieving and loading records from underlying store using the supplied loader.\n  * This uses Guava's loading cache and takes a loader function for loading entries into the cache. ", "originalCommit": "deea8b20c80a204b9316820078fad78073eea34c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "073bfd97f27d90fc052df29f9622d32079e96ff2", "chunk": "diff --git a/controller/src/main/java/io/pravega/controller/store/stream/Cache.java b/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\nindex b6f920ec4..a4352a43f 100644\n--- a/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\n+++ b/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\n\n@@ -15,12 +15,8 @@ import io.pravega.controller.store.VersionedMetadata;\n import java.util.concurrent.TimeUnit;\n \n /**\n- * Cache for asynchronously retrieving and loading records from underlying store using the supplied loader.\n- * This uses Guava's loading cache and takes a loader function for loading entries into the cache. \n- * This class caches Futures which hold the metadata record with version. The cache  \n- * can hold any value under the VersionedMetadata wrapper.\n- * The values are by default held for 2 minutes after creation unless invalidated explicitly.\n- * The maximum number of records that can be held in the cache is 10000. \n+ * The cache for storing versioned records against a cache key.\n+ * Cache key is an interface and users of this cache and provide any cache key implementation. \n  */\n public class Cache {\n     private static final int MAX_CACHE_SIZE = 10000;\n"}}, {"oid": "073bfd97f27d90fc052df29f9622d32079e96ff2", "url": "https://github.com/pravega/pravega/commit/073bfd97f27d90fc052df29f9622d32079e96ff2", "message": "PR comment\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-08-05T06:33:10Z", "type": "commit"}, {"oid": "ff2ea4b08781691063bd2278d603190f3a1d1d63", "url": "https://github.com/pravega/pravega/commit/ff2ea4b08781691063bd2278d603190f3a1d1d63", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-08-05T06:33:42Z", "type": "commit"}, {"oid": "b79c4391d1431d564a8769c84d450549374290c8", "url": "https://github.com/pravega/pravega/commit/b79c4391d1431d564a8769c84d450549374290c8", "message": "Merge branch 'issue4975' of https://github.com/shiveshr/pravega-1 into issue4975", "committedDate": "2020-08-05T06:33:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NjUxNw==", "url": "https://github.com/pravega/pravega/pull/4992#discussion_r465486517", "bodyText": "While I understand the reason for removing Future from the Cache Value, I don't see why we are moving away from auto loading cache entries?", "author": "pbelgundi", "createdAt": "2020-08-05T05:45:06Z", "path": "controller/src/main/java/io/pravega/controller/store/stream/Cache.java", "diffHunk": "@@ -10,53 +10,42 @@\n package io.pravega.controller.store.stream;\n \n import com.google.common.cache.CacheBuilder;\n-import com.google.common.cache.CacheLoader;\n-import com.google.common.cache.LoadingCache;\n import io.pravega.controller.store.VersionedMetadata;\n \n-import javax.annotation.ParametersAreNonnullByDefault;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.CompletionException;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Function;\n \n /**\n  * Cache for asynchronously retrieving and loading records from underlying store using the supplied loader.\n  * This uses Guava's loading cache and takes a loader function for loading entries into the cache. \n- * This class caches Futures which hold the metadata record with version. The cache is untyped and the CompletableFutures\n+ * This class caches Futures which hold the metadata record with version. The cache  \n  * can hold any value under the VersionedMetadata wrapper.\n  * The values are by default held for 2 minutes after creation unless invalidated explicitly.\n  * The maximum number of records that can be held in the cache is 10000. \n  */\n public class Cache {\n     private static final int MAX_CACHE_SIZE = 10000;\n     \n-    private final LoadingCache<CacheKey, CompletableFuture<VersionedMetadata<?>>> cache;\n+    private final com.google.common.cache.Cache<CacheKey, VersionedMetadata<?>> cache;\n \n-    public Cache(final Function<CacheKey, CompletableFuture<VersionedMetadata<?>>> loader) {\n+    public Cache() {\n         cache = CacheBuilder.newBuilder()\n                             .maximumSize(MAX_CACHE_SIZE)\n                             .expireAfterAccess(2, TimeUnit.MINUTES)\n-                            .build(new CacheLoader<CacheKey, CompletableFuture<VersionedMetadata<?>>>() {", "originalCommit": "deea8b20c80a204b9316820078fad78073eea34c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNTQyNg==", "url": "https://github.com/pravega/pravega/pull/4992#discussion_r465515426", "bodyText": "in that case the cache would need to define the semantics of what we do when the cache load fails if the data is not present or there is a transient error.\nthis keeps the cache semantics cleaner and abstracted away from what the callers may load into it and how they deal with different errors.", "author": "shiveshr", "createdAt": "2020-08-05T07:01:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NjUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMDk0NQ==", "url": "https://github.com/pravega/pravega/pull/4992#discussion_r465520945", "bodyText": "Ok.", "author": "pbelgundi", "createdAt": "2020-08-05T07:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4NjUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "073bfd97f27d90fc052df29f9622d32079e96ff2", "chunk": "diff --git a/controller/src/main/java/io/pravega/controller/store/stream/Cache.java b/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\nindex b6f920ec4..a4352a43f 100644\n--- a/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\n+++ b/controller/src/main/java/io/pravega/controller/store/stream/Cache.java\n\n@@ -15,12 +15,8 @@ import io.pravega.controller.store.VersionedMetadata;\n import java.util.concurrent.TimeUnit;\n \n /**\n- * Cache for asynchronously retrieving and loading records from underlying store using the supplied loader.\n- * This uses Guava's loading cache and takes a loader function for loading entries into the cache. \n- * This class caches Futures which hold the metadata record with version. The cache  \n- * can hold any value under the VersionedMetadata wrapper.\n- * The values are by default held for 2 minutes after creation unless invalidated explicitly.\n- * The maximum number of records that can be held in the cache is 10000. \n+ * The cache for storing versioned records against a cache key.\n+ * Cache key is an interface and users of this cache and provide any cache key implementation. \n  */\n public class Cache {\n     private static final int MAX_CACHE_SIZE = 10000;\n"}}, {"oid": "1276146df1d17c304d998316d65da6bb4ad57afc", "url": "https://github.com/pravega/pravega/commit/1276146df1d17c304d998316d65da6bb4ad57afc", "message": "Merge branch 'master' into issue4975", "committedDate": "2020-08-05T11:15:17Z", "type": "commit"}]}