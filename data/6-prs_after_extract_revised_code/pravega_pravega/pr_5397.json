{"pr_number": 5397, "pr_title": "Issue 5395: SLTS - Allow parallel/non-sequential read operations.", "pr_createdAt": "2020-12-03T01:19:14Z", "pr_url": "https://github.com/pravega/pravega/pull/5397", "timeline": [{"oid": "25f33fd0c5f976ddc5c395533f040f4371bf5b00", "url": "https://github.com/pravega/pravega/commit/25f33fd0c5f976ddc5c395533f040f4371bf5b00", "message": "Issue 5395: SLTS - Allow parallel/non-sequential read operations.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>", "committedDate": "2020-12-03T00:51:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY5ODY5Mw==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r534698693", "bodyText": "It looks like the segmentNames argument is not used.", "author": "eolivelli", "createdAt": "2020-12-03T05:56:09Z", "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/ChunkedSegmentStorage.java", "diffHunk": "@@ -753,6 +754,30 @@ private void release(String... segmentNames) {\n         }\n     }\n \n+    /**\n+     * Executes the given Callable asynchronously and concurrently.\n+     * It returns a CompletableFuture that will be completed with the result.\n+     * The operations are assumed to be independent of other operations.\n+     *\n+     * @param operation    The Callable to execute.\n+     * @param <R>       Return type of the operation.\n+     * @param segmentNames The names of the Segments involved in this operation (for sequencing purposes).\n+     * @return A CompletableFuture that, when completed, will contain the result of the operation.\n+     * If the operation failed, it will contain the cause of the failure.\n+     * */\n+    private <R> CompletableFuture<R> executeParallel(Callable<CompletableFuture<R>> operation, String... segmentNames) {", "originalCommit": "25f33fd0c5f976ddc5c395533f040f4371bf5b00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4MjY2MA==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r535782660", "bodyText": "currently yes.", "author": "sachin-j-joshi", "createdAt": "2020-12-04T02:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY5ODY5Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjQxNA==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r534702414", "bodyText": "Why so you need to start the computation this way?\nWhy not just submitting the operation to the thread pool?\nThe weird fact is that the operation returns a CompletableFuture so we may expect it to be already an asynchronous operation (but probably this is not always the case?)", "author": "eolivelli", "createdAt": "2020-12-03T06:00:10Z", "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/ChunkedSegmentStorage.java", "diffHunk": "@@ -753,6 +754,30 @@ private void release(String... segmentNames) {\n         }\n     }\n \n+    /**\n+     * Executes the given Callable asynchronously and concurrently.\n+     * It returns a CompletableFuture that will be completed with the result.\n+     * The operations are assumed to be independent of other operations.\n+     *\n+     * @param operation    The Callable to execute.\n+     * @param <R>       Return type of the operation.\n+     * @param segmentNames The names of the Segments involved in this operation (for sequencing purposes).\n+     * @return A CompletableFuture that, when completed, will contain the result of the operation.\n+     * If the operation failed, it will contain the cause of the failure.\n+     * */\n+    private <R> CompletableFuture<R> executeParallel(Callable<CompletableFuture<R>> operation, String... segmentNames) {\n+        return CompletableFuture.completedFuture(null).thenComposeAsync(v -> {", "originalCommit": "25f33fd0c5f976ddc5c395533f040f4371bf5b00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ2NzI4OQ==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r535467289", "bodyText": "I didn't find any equivalent to CompletableFuture::ComposeAsync().\nWe definitely want to run this method and lambda supplied on storage thread pool and not on core thread pool.", "author": "sachin-j-joshi", "createdAt": "2020-12-03T18:12:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NDQwNQ==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r535684405", "bodyText": "Use CompletableFuture.runAsync or CompletableFuture.supplyAsync, and inside that you execute your code. It's much simpler and more elegant.", "author": "andreipaduroiu", "createdAt": "2020-12-03T22:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4MTc2MQ==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r535781761", "bodyText": "CompletableFuture.supplyAsync can't compose.\n\nRequired type: CompletableFuture<R>\nProvided: CompletableFuture<CompletableFuture<R>>\n\nno instance(s) of type variable(s) exist so that CompletableFuture<R> conforms to R inference variable U has incompatible bounds: equality constraints: R lower bounds: CompletableFuture<R>", "author": "sachin-j-joshi", "createdAt": "2020-12-04T02:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxOTA1Ng==", "url": "https://github.com/pravega/pravega/pull/5397#discussion_r538619056", "bodyText": "OK, let's file a follow-up issue to clean this class up for the next release.", "author": "andreipaduroiu", "createdAt": "2020-12-08T17:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjQxNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "43fc06aacdb3e1feefd37cc3901e6d47a15c6021", "url": "https://github.com/pravega/pravega/commit/43fc06aacdb3e1feefd37cc3901e6d47a15c6021", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5395-SLTS-parallel-reads", "committedDate": "2020-12-08T16:37:31Z", "type": "commit"}, {"oid": "c2630716fbc1bc6a334de43e00cde54963fea8a6", "url": "https://github.com/pravega/pravega/commit/c2630716fbc1bc6a334de43e00cde54963fea8a6", "message": "Merge branch 'master' into issue-5395-SLTS-parallel-reads", "committedDate": "2020-12-08T21:31:39Z", "type": "commit"}]}