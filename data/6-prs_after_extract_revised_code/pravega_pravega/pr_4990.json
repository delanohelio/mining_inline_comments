{"pr_number": 4990, "pr_title": "Issue 4989: Add integration and system test for size based retention policy", "pr_createdAt": "2020-07-29T11:39:01Z", "pr_url": "https://github.com/pravega/pravega/pull/4990", "timeline": [{"oid": "574741b6a9a4ddb35b382e92806ab680f14347cd", "url": "https://github.com/pravega/pravega/commit/574741b6a9a4ddb35b382e92806ab680f14347cd", "message": "integration and system test\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-29T11:31:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzkyOA==", "url": "https://github.com/pravega/pravega/pull/4990#discussion_r462243928", "bodyText": "Why this change?", "author": "pbelgundi", "createdAt": "2020-07-29T11:58:40Z", "path": "controller/src/main/java/io/pravega/controller/server/ControllerServiceStarter.java", "diffHunk": "@@ -240,12 +240,13 @@ protected void startUp() {\n             streamStore = streamMetadataStoreRef.orElse(StreamStoreFactory.createStore(storeClient, segmentHelper, authHelper, controllerExecutor));\n \n             streamMetadataTasks = new StreamMetadataTasks(streamStore, bucketStore, taskMetadataStore,\n-                    segmentHelper, controllerExecutor, eventExecutor, host.getHostId(), authHelper, requestTracker);\n+                    segmentHelper, controllerExecutor, eventExecutor, host.getHostId(), authHelper, requestTracker, \n+                    serviceConfig.getRetentionFrequency().toMillis());\n             streamTransactionMetadataTasks = new StreamTransactionMetadataTasks(streamStore,\n                     segmentHelper, controllerExecutor, eventExecutor, host.getHostId(), serviceConfig.getTimeoutServiceConfig(), authHelper);\n \n             BucketServiceFactory bucketServiceFactory = new BucketServiceFactory(host.getHostId(), bucketStore, 1000);\n-            Duration executionDurationRetention = Duration.ofMinutes(Config.MINIMUM_RETENTION_FREQUENCY_IN_MINUTES);\n+            Duration executionDurationRetention = serviceConfig.getRetentionFrequency();", "originalCommit": "574741b6a9a4ddb35b382e92806ab680f14347cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3ODkzNA==", "url": "https://github.com/pravega/pravega/pull/4990#discussion_r462278934", "bodyText": "we have made these classes take the value from service config instead of the static value from the Config.java. This is to make it test driven so that we can inject a smaller time to test the behaviour in timebound fashion.", "author": "shiveshr", "createdAt": "2020-07-29T13:00:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4MDMxOA==", "url": "https://github.com/pravega/pravega/pull/4990#discussion_r462380318", "bodyText": "Ok", "author": "pbelgundi", "createdAt": "2020-07-29T15:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzkyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1OTg5NA==", "url": "https://github.com/pravega/pravega/pull/4990#discussion_r462259894", "bodyText": "May be good to call this method retentionTestSizeAndTime()", "author": "pbelgundi", "createdAt": "2020-07-29T12:28:21Z", "path": "test/system/src/test/java/io/pravega/test/system/RetentionTest.java", "diffHunk": "@@ -98,44 +106,60 @@ public void tearDown() {\n \n     @Test\n     public void retentionTest() throws Exception {\n-        final ClientConfig clientConfig = Utils.buildClientConfig(controllerURI);\n-        @Cleanup\n-        ConnectionFactory connectionFactory = new SocketConnectionFactoryImpl(clientConfig);\n-        ControllerImpl controller = new ControllerImpl(ControllerImplConfig.builder().clientConfig(clientConfig).build(),\n-                                                       connectionFactory.getInternalExecutor());\n-        @Cleanup\n-        ClientFactoryImpl clientFactory = new ClientFactoryImpl(SCOPE, controller, connectionFactory);\n-        log.info(\"Invoking Writer test with Controller URI: {}\", controllerURI);\n-\n-        //create a writer\n-        @Cleanup\n-        EventStreamWriter<Serializable> writer = clientFactory.createEventWriter(STREAM,\n-                new JavaSerializer<>(),\n-                EventWriterConfig.builder().build());\n-\n-        //write an event\n-        String writeEvent = \"event\";\n-        writer.writeEvent(writeEvent);\n-        writer.flush();\n-        log.debug(\"Writing event: {} \", writeEvent);\n-\n-        //sleep for 5 mins\n-        Exceptions.handleInterrupted(() -> Thread.sleep(5 * 60 * 1000));\n-\n-        //create a reader\n-        ReaderGroupManager groupManager = ReaderGroupManager.withScope(SCOPE, clientConfig);\n-        groupManager.createReaderGroup(READER_GROUP, ReaderGroupConfig.builder().disableAutomaticCheckpoints().stream(Stream.of(SCOPE, STREAM)).build());\n-        EventStreamReader<String> reader = clientFactory.createReader(UUID.randomUUID().toString(),\n-                READER_GROUP,\n-                new JavaSerializer<>(),\n-                ReaderConfig.builder().build());\n-\n-        //verify reader functionality is unaffected post truncation\n-        String event = \"newEvent\";\n-        writer.writeEvent(event);\n-        log.info(\"Writing event: {}\", event);\n-        Assert.assertEquals(event, reader.readNextEvent(6000).getEvent());\n-\n-        log.debug(\"The stream is already truncated.Simple retention test passed.\");\n+        CompletableFuture.allOf(retentionTestTime(STREAM_TIME, false), retentionTestTime(STREAM_SIZE, true));\n+    }\n+    \n+    private CompletableFuture<Void> retentionTestTime(String streamName, boolean sizeBased) throws Exception {", "originalCommit": "574741b6a9a4ddb35b382e92806ab680f14347cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4af8cdf1e912d545922db9f0544bba78df525298", "chunk": "diff --git a/test/system/src/test/java/io/pravega/test/system/RetentionTest.java b/test/system/src/test/java/io/pravega/test/system/RetentionTest.java\nindex cb642371c4..15de5c5a9b 100644\n--- a/test/system/src/test/java/io/pravega/test/system/RetentionTest.java\n+++ b/test/system/src/test/java/io/pravega/test/system/RetentionTest.java\n\n@@ -106,10 +106,10 @@ public class RetentionTest extends AbstractSystemTest {\n \n     @Test\n     public void retentionTest() throws Exception {\n-        CompletableFuture.allOf(retentionTestTime(STREAM_TIME, false), retentionTestTime(STREAM_SIZE, true));\n+        CompletableFuture.allOf(retentionTest(STREAM_TIME, false), retentionTest(STREAM_SIZE, true));\n     }\n     \n-    private CompletableFuture<Void> retentionTestTime(String streamName, boolean sizeBased) throws Exception {\n+    private CompletableFuture<Void> retentionTest(String streamName, boolean sizeBased) throws Exception {\n         return CompletableFuture.runAsync(() -> {\n             final ClientConfig clientConfig = Utils.buildClientConfig(controllerURI);\n             @Cleanup\n"}}, {"oid": "4af8cdf1e912d545922db9f0544bba78df525298", "url": "https://github.com/pravega/pravega/commit/4af8cdf1e912d545922db9f0544bba78df525298", "message": "retention system test - use different readergroup names for the two streams\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-29T13:33:33Z", "type": "commit"}, {"oid": "a8ede295db0694ea16a98a8a9688f9ebd7d7bc53", "url": "https://github.com/pravega/pravega/commit/a8ede295db0694ea16a98a8a9688f9ebd7d7bc53", "message": "revert main.java\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-07-29T14:43:03Z", "type": "commit"}, {"oid": "89dc132c87196b5e1ac65c0b8c77bb8adb008582", "url": "https://github.com/pravega/pravega/commit/89dc132c87196b5e1ac65c0b8c77bb8adb008582", "message": "Merge branch 'master' into retentiontest", "committedDate": "2020-07-29T15:25:38Z", "type": "commit"}]}