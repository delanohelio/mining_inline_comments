{"pr_number": 5050, "pr_title": "Issue 5025: Modifying System Test Framework to implement deployment based on 0.5.x pravega operator", "pr_createdAt": "2020-08-10T08:24:10Z", "pr_url": "https://github.com/pravega/pravega/pull/5050", "timeline": [{"oid": "c43a82cd7b67041b07ef88e53a32d1765669a889", "url": "https://github.com/pravega/pravega/commit/c43a82cd7b67041b07ef88e53a32d1765669a889", "message": "STF changes for 0.5.x p-op\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:48Z", "type": "commit"}, {"oid": "ebd753c2973a3dd8b5b6acabad19f5772fb8c736", "url": "https://github.com/pravega/pravega/commit/ebd753c2973a3dd8b5b6acabad19f5772fb8c736", "message": "STF changes for 05x opeartor deployment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "0ec2b41008c0dafa081b7dbbb518f178d3ecbc6f", "url": "https://github.com/pravega/pravega/commit/0ec2b41008c0dafa081b7dbbb518f178d3ecbc6f", "message": "modified build.gradle\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "9f5a43595097319ef06f69a972a2746aea4c56e6", "url": "https://github.com/pravega/pravega/commit/9f5a43595097319ef06f69a972a2746aea4c56e6", "message": "modified setupTestPod.sh\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "6f9f1f3027193b3785080a25f1a207639893c05b", "url": "https://github.com/pravega/pravega/commit/6f9f1f3027193b3785080a25f1a207639893c05b", "message": "modified build.gradle\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "7c3f040167d5d53d02de94f7c2abaf88c1423f4c", "url": "https://github.com/pravega/pravega/commit/7c3f040167d5d53d02de94f7c2abaf88c1423f4c", "message": "Removal of comments\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "52bb524a1cf3e74549be102a3d14313750292b1f", "url": "https://github.com/pravega/pravega/commit/52bb524a1cf3e74549be102a3d14313750292b1f", "message": "Style check\n\nSigned-off-by: Srivastava <Richa.Srivastava@emc.com>\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:49Z", "type": "commit"}, {"oid": "1ed9343b3feb7f884193fc0d2a57d3e47489c660", "url": "https://github.com/pravega/pravega/commit/1ed9343b3feb7f884193fc0d2a57d3e47489c660", "message": "Style check\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:50Z", "type": "commit"}, {"oid": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "url": "https://github.com/pravega/pravega/commit/4be770de0680bb9022eedd2726ad0f5e542b14d9", "message": "Style check\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:50Z", "type": "commit"}, {"oid": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "url": "https://github.com/pravega/pravega/commit/4be770de0680bb9022eedd2726ad0f5e542b14d9", "message": "Style check\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-08-10T08:26:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4MzI3OA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r468683278", "bodyText": "Remove all commented out code. Here and everywhere else you used it.", "author": "andreipaduroiu", "createdAt": "2020-08-11T15:47:51Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java", "diffHunk": "@@ -498,6 +500,22 @@ public void deletePVC(String namespace, String name) {\n         return exceptionallyExpecting(callback.getFuture(), isConflict, null);\n     }\n \n+    /**\n+     * Create ConfigMap.\n+     * @param namespace The namespace where the ConfigMap should be created.\n+     * @param binding The cluster ConfigMap.\n+     * @return A future indicating the status of the ConfigMap operation.\n+     */\n+    @SneakyThrows(ApiException.class)\n+    public CompletableFuture<V1ConfigMap> createConfigMap(String namespace, V1ConfigMap binding) {\n+        CoreV1Api api = new CoreV1Api();\n+        //V1ConfigMap api = new V1ConfigMap ();", "originalCommit": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxNzcyOA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r481017728", "bodyText": "Removed.", "author": "Richa-Srivastava", "createdAt": "2020-09-01T09:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4MzI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "500d69c7005f49fb0ef3474be57d639ec26bc056", "chunk": "diff --git a/test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java b/test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java\nindex 59c75c9bd..67ee0a85d 100644\n--- a/test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java\n+++ b/test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java\n\n@@ -509,10 +509,8 @@ public class K8sClient {\n     @SneakyThrows(ApiException.class)\n     public CompletableFuture<V1ConfigMap> createConfigMap(String namespace, V1ConfigMap binding) {\n         CoreV1Api api = new CoreV1Api();\n-        //V1ConfigMap api = new V1ConfigMap ();\n         K8AsyncCallback<V1ConfigMap> callback = new K8AsyncCallback<>(\"createConfigMap\");\n         api.createNamespacedConfigMapAsync(namespace, binding, PRETTY_PRINT, DRY_RUN, FIELD_MANAGER, callback);\n-        //api.createNamespacedConfigMap(namespace, binding, PRETTY_PRINT, callback);\n         return exceptionallyExpecting(callback.getFuture(), isConflict, null);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NDk0MQ==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r468684941", "bodyText": "you say alpha here but you changed it to beta above.", "author": "andreipaduroiu", "createdAt": "2020-08-11T15:50:24Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -83,15 +56,23 @@\n     static final String PRAVEGA_ID = \"pravega\";\n     static final String ZOOKEEPER_OPERATOR_IMAGE = System.getProperty(\"zookeeperOperatorImage\", \"pravega/zookeeper-operator:latest\");\n     static final String IMAGE_PULL_POLICY = System.getProperty(\"imagePullPolicy\", \"Always\");\n+    static final String BOOKKEEPER_ID = \"pravega-bk\";\n+    static final String CUSTOM_RESOURCE_GROUP_BOOKKEEPER = \"bookkeeper.pravega.io\";\n+    static final String CUSTOM_RESOURCE_VERSION_BOOKKEEPER = \"v1alpha1\";", "originalCommit": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMjg2Mg==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r481022862", "bodyText": "beta is wrt pravega:static final String CUSTOM_RESOURCE_VERSION_PRAVEGA = \"v1beta1\";\nalpha is for bookkeeper:  static final String CUSTOM_RESOURCE_VERSION_BOOKKEEPER = \"v1alpha1\"", "author": "Richa-Srivastava", "createdAt": "2020-09-01T10:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NDk0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "46ede0ee31c304f23c268d3da6426410040ec804", "chunk": "diff --git a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\nindex cb428a7a0..7062bf2a5 100644\n--- a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\n+++ b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\n\n@@ -52,6 +58,8 @@ public abstract class AbstractService implements Service {\n     static final String CUSTOM_RESOURCE_KIND_PRAVEGA = \"PravegaCluster\";\n     static final String PRAVEGA_CONTROLLER_LABEL = \"pravega-controller\";\n     static final String PRAVEGA_SEGMENTSTORE_LABEL = \"pravega-segmentstore\";\n+    static final String PRAVEGA_CONTROLLER_CONFIG_MAP = \"pravega-pravega-controller\";\n+    static final String SECRET_NAME_USED_FOR_TLS = \"selfsigned-cert-tls\";\n     static final String BOOKKEEPER_LABEL = \"bookie\";\n     static final String PRAVEGA_ID = \"pravega\";\n     static final String ZOOKEEPER_OPERATOR_IMAGE = System.getProperty(\"zookeeperOperatorImage\", \"pravega/zookeeper-operator:latest\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NTU3Ng==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r468685576", "bodyText": "commented out code", "author": "andreipaduroiu", "createdAt": "2020-08-11T15:51:18Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -163,66 +111,32 @@ public String getID() {\n                 .put(\"segmentStoreResources\", getResources(\"2000m\", \"5Gi\", \"1000m\", \"3Gi\"))\n                 .put(\"options\", props)\n                 .put(\"image\", pravegaImgSpec)\n-                .put(\"tier2\", tier2Spec())\n+                .put(\"longtermStorage\", tier2Spec())\n                 .build();\n \n         return ImmutableMap.<String, Object>builder()\n                 .put(\"apiVersion\", CUSTOM_RESOURCE_API_VERSION)\n                 .put(\"kind\", CUSTOM_RESOURCE_KIND_PRAVEGA)\n                 .put(\"metadata\", ImmutableMap.of(\"name\", PRAVEGA_ID, \"namespace\", NAMESPACE))\n-                .put(\"spec\", buildPravegaClusterSpec(zkLocation, bookkeeperSpec, pravegaSpec))\n+                //.put(\"spec\", buildPravegaClusterSpec(zkLocation, bookkeeperSpec, pravegaSpec))", "originalCommit": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMDIxMA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r481020210", "bodyText": "Removed.", "author": "Richa-Srivastava", "createdAt": "2020-09-01T10:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NTU3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "500d69c7005f49fb0ef3474be57d639ec26bc056", "chunk": "diff --git a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\nindex cb428a7a0..76e9ee131 100644\n--- a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\n+++ b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java\n\n@@ -118,7 +118,6 @@ public abstract class AbstractService implements Service {\n                 .put(\"apiVersion\", CUSTOM_RESOURCE_API_VERSION)\n                 .put(\"kind\", CUSTOM_RESOURCE_KIND_PRAVEGA)\n                 .put(\"metadata\", ImmutableMap.of(\"name\", PRAVEGA_ID, \"namespace\", NAMESPACE))\n-                //.put(\"spec\", buildPravegaClusterSpec(zkLocation, bookkeeperSpec, pravegaSpec))\n                 .put(\"spec\", buildPravegaClusterSpecWithBookieUri(zkLocation, pravegaSpec))\n                 .build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NjA3Mw==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r468686073", "bodyText": "extra line", "author": "andreipaduroiu", "createdAt": "2020-08-11T15:52:07Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java", "diffHunk": "@@ -36,73 +36,73 @@ public BookkeeperK8sService(final String id, final URI zkUri, final ImmutableMap\n \n     @Override\n     public void start(boolean wait) {\n-        Futures.getAndHandleExceptions(deployPravegaUsingOperator(zkUri, DEFAULT_CONTROLLER_COUNT, DEFAULT_SEGMENTSTORE_COUNT, DEFAULT_BOOKIE_COUNT, properties),\n-                                       t -> new TestFrameworkException(RequestFailed, \"Failed to deploy pravega operator/pravega services\", t));\n+        Futures.getAndHandleExceptions(deployBookkeeperCluster(zkUri, DEFAULT_BOOKIE_COUNT, properties),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper operator/pravega services\", t));\n         if (wait) {\n             Futures.getAndHandleExceptions(k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, DEFAULT_BOOKIE_COUNT),\n-                                           t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper service, check the operator logs\", t));\n+                    t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper service, check the operator logs\", t));\n         }\n     }\n \n     @Override\n     public void stop() {\n-        Futures.getAndHandleExceptions(k8sClient.deleteCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA,\n-                                                                    CUSTOM_RESOURCE_VERSION_PRAVEGA,\n-                                                                    NAMESPACE,\n-                                                                    CUSTOM_RESOURCE_PLURAL_PRAVEGA,\n-                                                                    PRAVEGA_ID),\n-                                       t -> new TestFrameworkException(RequestFailed, \"Failed to stop pravega\", t));\n+        Futures.getAndHandleExceptions(k8sClient.deleteCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER,\n+                CUSTOM_RESOURCE_VERSION_BOOKKEEPER,\n+                NAMESPACE,\n+                CUSTOM_RESOURCE_PLURAL_BOOKKEEPER,\n+                BOOKKEEPER_ID),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to stop bookkeeper\", t));\n \n     }\n \n     @Override\n     public boolean isRunning() {\n         return k8sClient.getStatusOfPodWithLabel(NAMESPACE, \"component\", BOOKKEEPER_LABEL)\n-                        .thenApply(statuses -> statuses.stream()\n-                                                       .filter(podStatus -> podStatus.getContainerStatuses()\n-                                                                                     .stream()\n-                                                                                     .allMatch(st -> st.getState().getRunning() != null))\n-                                                       .count())\n-                        .thenApply(runCount -> runCount >= DEFAULT_BOOKIE_COUNT)\n-                        .exceptionally(t -> {\n-                            log.warn(\"Exception observed while checking status of pods {}. Details: {}\", BOOKKEEPER_LABEL, t.getMessage());\n-                            return false;\n-                        }).join();\n+                .thenApply(statuses -> statuses.stream()\n+                        .filter(podStatus -> podStatus.getContainerStatuses()\n+                                .stream()\n+                                .allMatch(st -> st.getState().getRunning() != null))\n+                        .count())\n+                .thenApply(runCount -> runCount >= DEFAULT_BOOKIE_COUNT)\n+                .exceptionally(t -> {\n+                    log.warn(\"Exception observed while checking status of pods {}. Details: {}\", BOOKKEEPER_LABEL, t.getMessage());\n+                    return false;\n+                }).join();\n     }\n \n     @Override\n     public List<URI> getServiceDetails() {\n         //fetch the URI.\n         return Futures.getAndHandleExceptions(k8sClient.getStatusOfPodWithLabel(NAMESPACE, \"component\", BOOKKEEPER_LABEL)\n-                                                       .thenApply(statuses -> statuses.stream()\n-                                                                                     .map(s -> URI.create(TCP + s.getPodIP() + \":\" + BOOKKEEPER_PORT))\n-                                                                                     .collect(Collectors.toList())),\n-                                              t -> new TestFrameworkException(RequestFailed, \"Failed to fetch ServiceDetails for bookkeeper\", t));\n+                        .thenApply(statuses -> statuses.stream()\n+                                .map(s -> URI.create(TCP + s.getPodIP() + \":\" + BOOKKEEPER_PORT))\n+                                .collect(Collectors.toList())),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to fetch ServiceDetails for bookkeeper\", t));\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public CompletableFuture<Void> scaleService(int newInstanceCount) {\n-        log.info(\"Scaling Bookkeeper service to {} instances.\", newInstanceCount);\n-        return k8sClient.getCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA, CUSTOM_RESOURCE_VERSION_PRAVEGA, NAMESPACE, CUSTOM_RESOURCE_PLURAL_PRAVEGA, PRAVEGA_ID)\n-                        .thenCompose(o -> {\n-                            Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n-                            Map<String, Object> pravegaSpec = (Map<String, Object>) spec.get(\"pravega\");\n-                            Map<String, Object> bookkeeperSpec = (Map<String, Object>) spec.get(\"bookkeeper\");\n-\n-                            int currentControllerCount = ((Double) pravegaSpec.get(\"controllerReplicas\")).intValue();\n-                            int currentSegmentStoreCount = ((Double) pravegaSpec.get(\"segmentStoreReplicas\")).intValue();\n-                            int currentBookkeeperCount = ((Double) bookkeeperSpec.get(\"replicas\")).intValue();\n-                            log.debug(\"Current instance counts : Bookkeeper {} Controller {} SegmentStore {}.\", currentBookkeeperCount,\n-                                      currentControllerCount, currentSegmentStoreCount);\n-                            if (currentBookkeeperCount != newInstanceCount) {\n-                                final Map<String, Object> patchedSpec = buildPatchedPravegaClusterSpec(\"replicas\", newInstanceCount, \"bookkeeper\");\n-                                return k8sClient.createAndUpdateCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA, CUSTOM_RESOURCE_VERSION_PRAVEGA, NAMESPACE, CUSTOM_RESOURCE_PLURAL_PRAVEGA, patchedSpec)\n-                                        .thenCompose(v -> k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, newInstanceCount));\n-                            } else {\n-                                return CompletableFuture.completedFuture(null);\n-                            }\n-                        });\n+        return k8sClient.getCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER, CUSTOM_RESOURCE_VERSION_BOOKKEEPER, NAMESPACE, CUSTOM_RESOURCE_PLURAL_BOOKKEEPER, BOOKKEEPER_ID)\n+                .thenCompose(o -> {\n+                    Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n+                    int currentBookkeeperCount = ((Double) spec.get(\"replicas\")).intValue();\n+                    log.debug(\"Current instance counts : Bookkeeper {} .\", currentBookkeeperCount);\n+\n+                    if (currentBookkeeperCount != newInstanceCount) {\n+", "originalCommit": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMDMxMA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r481020310", "bodyText": "Removed.", "author": "Richa-Srivastava", "createdAt": "2020-09-01T10:03:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NjA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "500d69c7005f49fb0ef3474be57d639ec26bc056", "chunk": "diff --git a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\nindex 1b4837369..3f0d63122 100644\n--- a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\n+++ b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\n\n@@ -88,21 +88,13 @@ public class BookkeeperK8sService extends AbstractService {\n                     Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n                     int currentBookkeeperCount = ((Double) spec.get(\"replicas\")).intValue();\n                     log.debug(\"Current instance counts : Bookkeeper {} .\", currentBookkeeperCount);\n-\n                     if (currentBookkeeperCount != newInstanceCount) {\n-\n                         final Map<String, Object> patchedSpec = buildPatchedBookkeeperClusterSpec(\"replicas\", newInstanceCount);\n-\n                         return k8sClient.createAndUpdateCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER, CUSTOM_RESOURCE_VERSION_BOOKKEEPER, NAMESPACE, CUSTOM_RESOURCE_PLURAL_BOOKKEEPER, patchedSpec)\n                                 .thenCompose(v -> k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, newInstanceCount));\n-\n                     } else {\n-\n                         return CompletableFuture.completedFuture(null);\n-\n                     }\n-\n                 });\n     }\n-\n-}\n+}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NjIxNA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r468686214", "bodyText": "remove these 2 extra lines", "author": "andreipaduroiu", "createdAt": "2020-08-11T15:52:18Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java", "diffHunk": "@@ -36,73 +36,73 @@ public BookkeeperK8sService(final String id, final URI zkUri, final ImmutableMap\n \n     @Override\n     public void start(boolean wait) {\n-        Futures.getAndHandleExceptions(deployPravegaUsingOperator(zkUri, DEFAULT_CONTROLLER_COUNT, DEFAULT_SEGMENTSTORE_COUNT, DEFAULT_BOOKIE_COUNT, properties),\n-                                       t -> new TestFrameworkException(RequestFailed, \"Failed to deploy pravega operator/pravega services\", t));\n+        Futures.getAndHandleExceptions(deployBookkeeperCluster(zkUri, DEFAULT_BOOKIE_COUNT, properties),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper operator/pravega services\", t));\n         if (wait) {\n             Futures.getAndHandleExceptions(k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, DEFAULT_BOOKIE_COUNT),\n-                                           t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper service, check the operator logs\", t));\n+                    t -> new TestFrameworkException(RequestFailed, \"Failed to deploy bookkeeper service, check the operator logs\", t));\n         }\n     }\n \n     @Override\n     public void stop() {\n-        Futures.getAndHandleExceptions(k8sClient.deleteCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA,\n-                                                                    CUSTOM_RESOURCE_VERSION_PRAVEGA,\n-                                                                    NAMESPACE,\n-                                                                    CUSTOM_RESOURCE_PLURAL_PRAVEGA,\n-                                                                    PRAVEGA_ID),\n-                                       t -> new TestFrameworkException(RequestFailed, \"Failed to stop pravega\", t));\n+        Futures.getAndHandleExceptions(k8sClient.deleteCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER,\n+                CUSTOM_RESOURCE_VERSION_BOOKKEEPER,\n+                NAMESPACE,\n+                CUSTOM_RESOURCE_PLURAL_BOOKKEEPER,\n+                BOOKKEEPER_ID),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to stop bookkeeper\", t));\n \n     }\n \n     @Override\n     public boolean isRunning() {\n         return k8sClient.getStatusOfPodWithLabel(NAMESPACE, \"component\", BOOKKEEPER_LABEL)\n-                        .thenApply(statuses -> statuses.stream()\n-                                                       .filter(podStatus -> podStatus.getContainerStatuses()\n-                                                                                     .stream()\n-                                                                                     .allMatch(st -> st.getState().getRunning() != null))\n-                                                       .count())\n-                        .thenApply(runCount -> runCount >= DEFAULT_BOOKIE_COUNT)\n-                        .exceptionally(t -> {\n-                            log.warn(\"Exception observed while checking status of pods {}. Details: {}\", BOOKKEEPER_LABEL, t.getMessage());\n-                            return false;\n-                        }).join();\n+                .thenApply(statuses -> statuses.stream()\n+                        .filter(podStatus -> podStatus.getContainerStatuses()\n+                                .stream()\n+                                .allMatch(st -> st.getState().getRunning() != null))\n+                        .count())\n+                .thenApply(runCount -> runCount >= DEFAULT_BOOKIE_COUNT)\n+                .exceptionally(t -> {\n+                    log.warn(\"Exception observed while checking status of pods {}. Details: {}\", BOOKKEEPER_LABEL, t.getMessage());\n+                    return false;\n+                }).join();\n     }\n \n     @Override\n     public List<URI> getServiceDetails() {\n         //fetch the URI.\n         return Futures.getAndHandleExceptions(k8sClient.getStatusOfPodWithLabel(NAMESPACE, \"component\", BOOKKEEPER_LABEL)\n-                                                       .thenApply(statuses -> statuses.stream()\n-                                                                                     .map(s -> URI.create(TCP + s.getPodIP() + \":\" + BOOKKEEPER_PORT))\n-                                                                                     .collect(Collectors.toList())),\n-                                              t -> new TestFrameworkException(RequestFailed, \"Failed to fetch ServiceDetails for bookkeeper\", t));\n+                        .thenApply(statuses -> statuses.stream()\n+                                .map(s -> URI.create(TCP + s.getPodIP() + \":\" + BOOKKEEPER_PORT))\n+                                .collect(Collectors.toList())),\n+                t -> new TestFrameworkException(RequestFailed, \"Failed to fetch ServiceDetails for bookkeeper\", t));\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public CompletableFuture<Void> scaleService(int newInstanceCount) {\n-        log.info(\"Scaling Bookkeeper service to {} instances.\", newInstanceCount);\n-        return k8sClient.getCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA, CUSTOM_RESOURCE_VERSION_PRAVEGA, NAMESPACE, CUSTOM_RESOURCE_PLURAL_PRAVEGA, PRAVEGA_ID)\n-                        .thenCompose(o -> {\n-                            Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n-                            Map<String, Object> pravegaSpec = (Map<String, Object>) spec.get(\"pravega\");\n-                            Map<String, Object> bookkeeperSpec = (Map<String, Object>) spec.get(\"bookkeeper\");\n-\n-                            int currentControllerCount = ((Double) pravegaSpec.get(\"controllerReplicas\")).intValue();\n-                            int currentSegmentStoreCount = ((Double) pravegaSpec.get(\"segmentStoreReplicas\")).intValue();\n-                            int currentBookkeeperCount = ((Double) bookkeeperSpec.get(\"replicas\")).intValue();\n-                            log.debug(\"Current instance counts : Bookkeeper {} Controller {} SegmentStore {}.\", currentBookkeeperCount,\n-                                      currentControllerCount, currentSegmentStoreCount);\n-                            if (currentBookkeeperCount != newInstanceCount) {\n-                                final Map<String, Object> patchedSpec = buildPatchedPravegaClusterSpec(\"replicas\", newInstanceCount, \"bookkeeper\");\n-                                return k8sClient.createAndUpdateCustomObject(CUSTOM_RESOURCE_GROUP_PRAVEGA, CUSTOM_RESOURCE_VERSION_PRAVEGA, NAMESPACE, CUSTOM_RESOURCE_PLURAL_PRAVEGA, patchedSpec)\n-                                        .thenCompose(v -> k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, newInstanceCount));\n-                            } else {\n-                                return CompletableFuture.completedFuture(null);\n-                            }\n-                        });\n+        return k8sClient.getCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER, CUSTOM_RESOURCE_VERSION_BOOKKEEPER, NAMESPACE, CUSTOM_RESOURCE_PLURAL_BOOKKEEPER, BOOKKEEPER_ID)\n+                .thenCompose(o -> {\n+                    Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n+                    int currentBookkeeperCount = ((Double) spec.get(\"replicas\")).intValue();\n+                    log.debug(\"Current instance counts : Bookkeeper {} .\", currentBookkeeperCount);\n+\n+                    if (currentBookkeeperCount != newInstanceCount) {\n+\n+                        final Map<String, Object> patchedSpec = buildPatchedBookkeeperClusterSpec(\"replicas\", newInstanceCount);\n+\n+                        return k8sClient.createAndUpdateCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER, CUSTOM_RESOURCE_VERSION_BOOKKEEPER, NAMESPACE, CUSTOM_RESOURCE_PLURAL_BOOKKEEPER, patchedSpec)\n+                                .thenCompose(v -> k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, newInstanceCount));\n+\n+                    } else {\n+", "originalCommit": "4be770de0680bb9022eedd2726ad0f5e542b14d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMDM2MQ==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r481020361", "bodyText": "Removed.", "author": "Richa-Srivastava", "createdAt": "2020-09-01T10:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NjIxNA=="}], "type": "inlineReview", "revised_code": {"commit": "500d69c7005f49fb0ef3474be57d639ec26bc056", "chunk": "diff --git a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\nindex 1b4837369..3f0d63122 100644\n--- a/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\n+++ b/test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/BookkeeperK8sService.java\n\n@@ -88,21 +88,13 @@ public class BookkeeperK8sService extends AbstractService {\n                     Map<String, Object> spec = (Map<String, Object>) (((Map<String, Object>) o).get(\"spec\"));\n                     int currentBookkeeperCount = ((Double) spec.get(\"replicas\")).intValue();\n                     log.debug(\"Current instance counts : Bookkeeper {} .\", currentBookkeeperCount);\n-\n                     if (currentBookkeeperCount != newInstanceCount) {\n-\n                         final Map<String, Object> patchedSpec = buildPatchedBookkeeperClusterSpec(\"replicas\", newInstanceCount);\n-\n                         return k8sClient.createAndUpdateCustomObject(CUSTOM_RESOURCE_GROUP_BOOKKEEPER, CUSTOM_RESOURCE_VERSION_BOOKKEEPER, NAMESPACE, CUSTOM_RESOURCE_PLURAL_BOOKKEEPER, patchedSpec)\n                                 .thenCompose(v -> k8sClient.waitUntilPodIsRunning(NAMESPACE, \"component\", BOOKKEEPER_LABEL, newInstanceCount));\n-\n                     } else {\n-\n                         return CompletableFuture.completedFuture(null);\n-\n                     }\n-\n                 });\n     }\n-\n-}\n+}\n\\ No newline at end of file\n"}}, {"oid": "500d69c7005f49fb0ef3474be57d639ec26bc056", "url": "https://github.com/pravega/pravega/commit/500d69c7005f49fb0ef3474be57d639ec26bc056", "message": "Applying review comments\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-01T07:45:21Z", "type": "commit"}, {"oid": "316578d135002bdc20d5345867fffabfffb66655", "url": "https://github.com/pravega/pravega/commit/316578d135002bdc20d5345867fffabfffb66655", "message": "Merge remote-tracking branch 'upstream/master' into stf-changes", "committedDate": "2020-09-01T07:45:31Z", "type": "commit"}, {"oid": "68bde7d67456197c1d4519a5904084d5c74d4696", "url": "https://github.com/pravega/pravega/commit/68bde7d67456197c1d4519a5904084d5c74d4696", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-02T06:23:47Z", "type": "commit"}, {"oid": "db4d2215b583688ea01fc18833b3aabafef63011", "url": "https://github.com/pravega/pravega/commit/db4d2215b583688ea01fc18833b3aabafef63011", "message": "modifying testmode\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-02T11:23:59Z", "type": "commit"}, {"oid": "ad34378a8be03b6b6e5d9ceab443159a217cff39", "url": "https://github.com/pravega/pravega/commit/ad34378a8be03b6b6e5d9ceab443159a217cff39", "message": "Added CERT support for p-op deployment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-02T14:26:20Z", "type": "commit"}, {"oid": "81b472e0275f1ef44e694dac297be64ce09d5ce5", "url": "https://github.com/pravega/pravega/commit/81b472e0275f1ef44e694dac297be64ce09d5ce5", "message": "modified setupTestPod script\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-03T05:30:09Z", "type": "commit"}, {"oid": "69a918f912df652688a4e11160b80527175cf9f3", "url": "https://github.com/pravega/pravega/commit/69a918f912df652688a4e11160b80527175cf9f3", "message": "Modified setupTestpod\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-03T06:14:19Z", "type": "commit"}, {"oid": "edcb4e85a9f29f689fdeff794f9087d5141ce749", "url": "https://github.com/pravega/pravega/commit/edcb4e85a9f29f689fdeff794f9087d5141ce749", "message": "Adding new parameter\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-03T13:55:18Z", "type": "commit"}, {"oid": "0e99f15bfdf150a8466c377ad90c994e56442f7d", "url": "https://github.com/pravega/pravega/commit/0e99f15bfdf150a8466c377ad90c994e56442f7d", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-04T11:01:09Z", "type": "commit"}, {"oid": "46ede0ee31c304f23c268d3da6426410040ec804", "url": "https://github.com/pravega/pravega/commit/46ede0ee31c304f23c268d3da6426410040ec804", "message": "Applying TLS changes\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-09T12:02:53Z", "type": "commit"}, {"oid": "29615c9dcb6c37483689dfed50a70479cb0c2139", "url": "https://github.com/pravega/pravega/commit/29615c9dcb6c37483689dfed50a70479cb0c2139", "message": "Resolving style check\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-09T12:28:11Z", "type": "commit"}, {"oid": "8952c60395a41d1b944ca241b6aa961d1158c157", "url": "https://github.com/pravega/pravega/commit/8952c60395a41d1b944ca241b6aa961d1158c157", "message": "Fixing K8sClient\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-09T14:13:18Z", "type": "commit"}, {"oid": "1f5689250d6ba2fedeea3415a72c7aa3dac88542", "url": "https://github.com/pravega/pravega/commit/1f5689250d6ba2fedeea3415a72c7aa3dac88542", "message": "Adding additional files for TLS support\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-10T04:47:30Z", "type": "commit"}, {"oid": "8b6f7ceece6c7eafa727bffadb668cb7436bb46f", "url": "https://github.com/pravega/pravega/commit/8b6f7ceece6c7eafa727bffadb668cb7436bb46f", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-10T07:45:21Z", "type": "commit"}, {"oid": "a4c2faa9b2d49a9e4ec7540f860994a6f8e68d92", "url": "https://github.com/pravega/pravega/commit/a4c2faa9b2d49a9e4ec7540f860994a6f8e68d92", "message": "modifying AbstractService.java\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-10T08:11:52Z", "type": "commit"}, {"oid": "7bcad0a546f6c067d2c1219559dc6547d6dfd13d", "url": "https://github.com/pravega/pravega/commit/7bcad0a546f6c067d2c1219559dc6547d6dfd13d", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-22T06:50:30Z", "type": "commit"}, {"oid": "57156219188703afe8b447d063f9343b3b0426f9", "url": "https://github.com/pravega/pravega/commit/57156219188703afe8b447d063f9343b3b0426f9", "message": "modified file build.gradle\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-22T08:36:22Z", "type": "commit"}, {"oid": "4ce3ed58cb63d95be183df503d0e4332f31a65d0", "url": "https://github.com/pravega/pravega/commit/4ce3ed58cb63d95be183df503d0e4332f31a65d0", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-23T06:22:59Z", "type": "commit"}, {"oid": "0416c55d3698c69031eefc7c59839d98897be833", "url": "https://github.com/pravega/pravega/commit/0416c55d3698c69031eefc7c59839d98897be833", "message": "Modifying for auth\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-23T13:02:51Z", "type": "commit"}, {"oid": "18b4d12db5fd31064bc3b4898c17eeb15460a00a", "url": "https://github.com/pravega/pravega/commit/18b4d12db5fd31064bc3b4898c17eeb15460a00a", "message": "Modifying for auth\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-23T14:13:48Z", "type": "commit"}, {"oid": "3acbbe6d742833d2e32b6c296da88a7b3f52c2c5", "url": "https://github.com/pravega/pravega/commit/3acbbe6d742833d2e32b6c296da88a7b3f52c2c5", "message": "Modifying for auth\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-23T14:17:15Z", "type": "commit"}, {"oid": "2dd53616d17abe21b76d63f87e9d8a053b6206ff", "url": "https://github.com/pravega/pravega/commit/2dd53616d17abe21b76d63f87e9d8a053b6206ff", "message": "Modifying for auth\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-23T14:27:50Z", "type": "commit"}, {"oid": "6702a4856c2b061ca1988d63bdeed6d3789490d3", "url": "https://github.com/pravega/pravega/commit/6702a4856c2b061ca1988d63bdeed6d3789490d3", "message": "Modifying for auth\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-23T14:59:05Z", "type": "commit"}, {"oid": "f2c3d79500c30b682518df198a6e227ce4667577", "url": "https://github.com/pravega/pravega/commit/f2c3d79500c30b682518df198a6e227ce4667577", "message": "Cleaned up code\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T06:37:45Z", "type": "commit"}, {"oid": "4f7f86ed9c0b40968459d09637fd31c89077214f", "url": "https://github.com/pravega/pravega/commit/4f7f86ed9c0b40968459d09637fd31c89077214f", "message": "Modified after style check\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T06:47:17Z", "type": "commit"}, {"oid": "a823627a9d6b1073349af5cc97aa6a972227acc8", "url": "https://github.com/pravega/pravega/commit/a823627a9d6b1073349af5cc97aa6a972227acc8", "message": "Adding new parameters required for Upgrade testcases\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T06:59:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5MTUwOA==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r494091508", "bodyText": "this seems like formatting only change and below. Could you undo this?", "author": "shrids", "createdAt": "2020-09-24T07:19:43Z", "path": "test/system/src/main/java/io/pravega/test/system/framework/kubernetes/K8sClient.java", "diffHunk": "@@ -664,25 +664,25 @@ public void deletePVC(String namespace, String name) {\n         AtomicBoolean shouldRetry = new AtomicBoolean(true);\n \n         return Futures.loop(shouldRetry::get,\n-                            () -> Futures.delayedFuture(Duration.ofSeconds(5), executor) // wait for 5 seconds before checking for status.\n-                                    .thenCompose(v -> getStatusOfPodWithLabel(namespace, labelName, labelValue)) // fetch status of pods with the given label.\n-                                    .thenApply(podStatuses -> podStatuses.stream()\n-                                            // check for pods where all containers are running.\n-                                            .filter(podStatus -> {\n-                                                if (podStatus.getContainerStatuses() == null) {\n-                                                    return false;\n-                                                } else {\n-                                                    return podStatus.getContainerStatuses()\n-                                                            .stream()\n-                                                            .allMatch(st -> st.getState().getRunning() != null);\n-                                                }\n-                                            }).count()),\n-                            runCount -> { // Number of pods which are running\n-                                log.debug(\"Expected running pod count : {}, actual running pod count :{}.\", expectedPodCount, runCount);\n-                                if (runCount == expectedPodCount) {\n-                                    shouldRetry.set(false);\n-                                }\n-                            }, executor);\n+                () -> Futures.delayedFuture(Duration.ofSeconds(5), executor) // wait for 5 seconds before checking for status.", "originalCommit": "a823627a9d6b1073349af5cc97aa6a972227acc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIwMTQ4Mw==", "url": "https://github.com/pravega/pravega/pull/5050#discussion_r494201483", "bodyText": "This is similar in master also. I compared my code against master and no changes are there.", "author": "Richa-Srivastava", "createdAt": "2020-09-24T10:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5MTUwOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0f7ddab201252623592833f2c6436bb475933c9a", "url": "https://github.com/pravega/pravega/commit/0f7ddab201252623592833f2c6436bb475933c9a", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T08:41:34Z", "type": "commit"}, {"oid": "48ea194cd6d3379de28660f25347493f35871a44", "url": "https://github.com/pravega/pravega/commit/48ea194cd6d3379de28660f25347493f35871a44", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T08:42:09Z", "type": "commit"}, {"oid": "cd178bcccdc1bad1ce850e7f190274da4375ff74", "url": "https://github.com/pravega/pravega/commit/cd178bcccdc1bad1ce850e7f190274da4375ff74", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T08:59:01Z", "type": "commit"}, {"oid": "2ed3445eee32d5eb654065ec894fc102faebdf5c", "url": "https://github.com/pravega/pravega/commit/2ed3445eee32d5eb654065ec894fc102faebdf5c", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T09:38:50Z", "type": "commit"}, {"oid": "f3fefb0e17fa88ab55f87672311deac3e3eb55ed", "url": "https://github.com/pravega/pravega/commit/f3fefb0e17fa88ab55f87672311deac3e3eb55ed", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T09:40:01Z", "type": "commit"}, {"oid": "a47cfb591322dad597be710c7ee5a44e5515ffbd", "url": "https://github.com/pravega/pravega/commit/a47cfb591322dad597be710c7ee5a44e5515ffbd", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T09:43:53Z", "type": "commit"}, {"oid": "26f10c3819c1b7e02e24c4f2c1f7ebb0b7b8345d", "url": "https://github.com/pravega/pravega/commit/26f10c3819c1b7e02e24c4f2c1f7ebb0b7b8345d", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T09:53:55Z", "type": "commit"}, {"oid": "e242e71662ddfb94044c26925b9fe7a605c3448a", "url": "https://github.com/pravega/pravega/commit/e242e71662ddfb94044c26925b9fe7a605c3448a", "message": "Applying review comment\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-24T10:02:22Z", "type": "commit"}, {"oid": "6b457bdbe6af0dea7b3df001a1f49d208b85d6aa", "url": "https://github.com/pravega/pravega/commit/6b457bdbe6af0dea7b3df001a1f49d208b85d6aa", "message": "Merge branch 'master' into stf-changes", "committedDate": "2020-09-25T06:00:14Z", "type": "commit"}, {"oid": "8202942892071bda3c222e20b63a0794885b00cb", "url": "https://github.com/pravega/pravega/commit/8202942892071bda3c222e20b63a0794885b00cb", "message": "modified build.gradle\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-25T06:22:21Z", "type": "commit"}, {"oid": "4deada4c67552a1231b98a862beefa36f0a0f0ee", "url": "https://github.com/pravega/pravega/commit/4deada4c67552a1231b98a862beefa36f0a0f0ee", "message": "formatting changes\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-25T06:41:59Z", "type": "commit"}, {"oid": "009002c32610c0db59e535718a0a545967328697", "url": "https://github.com/pravega/pravega/commit/009002c32610c0db59e535718a0a545967328697", "message": "formatting changes\n\nSigned-off-by: Richa-Srivastava <richa.srivastava@dell.com>", "committedDate": "2020-09-25T06:46:46Z", "type": "commit"}, {"oid": "35170c6ab8678ec285ca55f03dc086a7c23a58f9", "url": "https://github.com/pravega/pravega/commit/35170c6ab8678ec285ca55f03dc086a7c23a58f9", "message": "formatting changes\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-25T06:51:08Z", "type": "commit"}, {"oid": "67b2bdbe027e46c8d8bac9418f78d9c95eb017d5", "url": "https://github.com/pravega/pravega/commit/67b2bdbe027e46c8d8bac9418f78d9c95eb017d5", "message": "formatting changes\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-25T07:02:10Z", "type": "commit"}, {"oid": "ca4c2d836676c6d4d1cc206106b21ce1e1771e22", "url": "https://github.com/pravega/pravega/commit/ca4c2d836676c6d4d1cc206106b21ce1e1771e22", "message": "removed style check error\n\nSigned-off-by: root <richa.srivastava@dell.com>", "committedDate": "2020-09-25T10:28:52Z", "type": "commit"}]}