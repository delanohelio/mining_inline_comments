{"pr_number": 72, "pr_title": "Several simple helper methods", "pr_createdAt": "2020-05-23T06:23:41Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/72", "timeline": [{"oid": "1d6d097e31552533c261b3017492104c1272ebdb", "url": "https://github.com/PatchworkMC/patchwork-api/commit/1d6d097e31552533c261b3017492104c1272ebdb", "message": "A few helper methods", "committedDate": "2020-05-23T06:17:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjExNg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432166116", "bodyText": "No need to fully qualify, it's already imported\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n          \n          \n            \n            \t * @return The {@link Identifier} with given or inferred domain", "author": "coderbot16", "createdAt": "2020-05-28T22:50:06Z", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain", "originalCommit": "1d6d097e31552533c261b3017492104c1272ebdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "564ad31c5da30999b8c48495c45a90e654e771c7", "chunk": "diff --git a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\nindex 695f0898..93d1cfdf 100644\n--- a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n+++ b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n\n@@ -32,15 +32,23 @@ public class GameData {\n \t * current active mod container.\n \t *\n \t * @param name          The name or resource location\n-\t * @param warnOverrides If true, logs a warning if domain differs from that of\n-\t *                      the currently currently active mod container\n-\t *\n-\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t * @param warnOverrides If false, the prefix is forcefully updated without a warning,\n+\t *                      and if true, the prefix is not updated and there is just a\n+\t *                      warning message.\n+\t * @return The {@link Identifier} with given or inferred domain\n \t */\n \tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n-\t\tint index = name.lastIndexOf(':');\n-\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n-\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tint colonIndex = name.lastIndexOf(':');\n+\n+\t\tif (colonIndex == -1) {\n+\t\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\t\treturn new Identifier(prefix, name);\n+\t\t}\n+\n+\t\tString oldPrefix = name.substring(0, colonIndex).toLowerCase(Locale.ROOT);\n+\n+\t\tString newName = name.substring(colonIndex + 1);\n \t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n \n \t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2Njk4NQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432166985", "bodyText": "I know this is the forge documentation, but it doesn't paint the whole picture. If false, the prefix is forcefully updated without a warning, and if true, the prefix is not updated and there is just a warning message.", "author": "coderbot16", "createdAt": "2020-05-28T22:52:32Z", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container", "originalCommit": "1d6d097e31552533c261b3017492104c1272ebdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "564ad31c5da30999b8c48495c45a90e654e771c7", "chunk": "diff --git a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\nindex 695f0898..93d1cfdf 100644\n--- a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n+++ b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n\n@@ -32,15 +32,23 @@ public class GameData {\n \t * current active mod container.\n \t *\n \t * @param name          The name or resource location\n-\t * @param warnOverrides If true, logs a warning if domain differs from that of\n-\t *                      the currently currently active mod container\n-\t *\n-\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t * @param warnOverrides If false, the prefix is forcefully updated without a warning,\n+\t *                      and if true, the prefix is not updated and there is just a\n+\t *                      warning message.\n+\t * @return The {@link Identifier} with given or inferred domain\n \t */\n \tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n-\t\tint index = name.lastIndexOf(':');\n-\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n-\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tint colonIndex = name.lastIndexOf(':');\n+\n+\t\tif (colonIndex == -1) {\n+\t\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\t\treturn new Identifier(prefix, name);\n+\t\t}\n+\n+\t\tString oldPrefix = name.substring(0, colonIndex).toLowerCase(Locale.ROOT);\n+\n+\t\tString newName = name.substring(colonIndex + 1);\n \t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n \n \t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432167236", "bodyText": "There's a version of this code in ExtendedForgeRegistryEntry already, it would be appreciated if you could deduplicate it.", "author": "coderbot16", "createdAt": "2020-05-28T22:53:08Z", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "originalCommit": "1d6d097e31552533c261b3017492104c1272ebdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwNTU4MQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432205581", "bodyText": "You mean make ForgeRegistryEntry extend ExtendedForgeRegistryEntry?", "author": "qouteall", "createdAt": "2020-05-29T01:13:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTgwNA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432209804", "bodyText": "That would be good too, but in this case it would be nice to move the logic to a helper class outside of GameData and ExtendedForgeRegistryEntry.", "author": "coderbot16", "createdAt": "2020-05-29T01:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4NDQ0NA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432284444", "bodyText": "I found that making ForgeRegistryEntry extend ExtendedForgeRegistryEntry is wrong because it turns class method into interface method. And GameData is already a helper class. ExtendedForgeRegistryEntry.setRegistryName unlike this one does not replace the namespace so these two cannot be generalized.", "author": "qouteall", "createdAt": "2020-05-29T06:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4NTk0OQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432285949", "bodyText": "oh it can be generalized but it will make the code weird", "author": "qouteall", "createdAt": "2020-05-29T06:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}], "type": "inlineReview", "revised_code": {"commit": "564ad31c5da30999b8c48495c45a90e654e771c7", "chunk": "diff --git a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\nindex 695f0898..93d1cfdf 100644\n--- a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n+++ b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n\n@@ -32,15 +32,23 @@ public class GameData {\n \t * current active mod container.\n \t *\n \t * @param name          The name or resource location\n-\t * @param warnOverrides If true, logs a warning if domain differs from that of\n-\t *                      the currently currently active mod container\n-\t *\n-\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t * @param warnOverrides If false, the prefix is forcefully updated without a warning,\n+\t *                      and if true, the prefix is not updated and there is just a\n+\t *                      warning message.\n+\t * @return The {@link Identifier} with given or inferred domain\n \t */\n \tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n-\t\tint index = name.lastIndexOf(':');\n-\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n-\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tint colonIndex = name.lastIndexOf(':');\n+\n+\t\tif (colonIndex == -1) {\n+\t\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\t\treturn new Identifier(prefix, name);\n+\t\t}\n+\n+\t\tString oldPrefix = name.substring(0, colonIndex).toLowerCase(Locale.ROOT);\n+\n+\t\tString newName = name.substring(colonIndex + 1);\n \t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n \n \t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzMzNA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432167334", "bodyText": "This should just construct an Identifier directly, instead of combining the strings together only for them to be split again in the constructor of Identifier.", "author": "coderbot16", "createdAt": "2020-05-28T22:53:27Z", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java", "diffHunk": "@@ -31,6 +31,14 @@ public final IForgeRegistryEntry setRegistryName(Identifier name) {\n \t\treturn this;\n \t}\n \n+\tpublic final IForgeRegistryEntry setRegistryName(String name) {\n+\t\treturn setRegistryName(new Identifier(name));\n+\t}\n+\n+\tpublic final IForgeRegistryEntry setRegistryName(String modID, String name) {\n+\t\treturn setRegistryName(modID + \":\" + name);", "originalCommit": "1d6d097e31552533c261b3017492104c1272ebdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "564ad31c5da30999b8c48495c45a90e654e771c7", "chunk": "diff --git a/patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java b/patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java\nindex 58baaa15..6a47d576 100644\n--- a/patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java\n+++ b/patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java\n\n@@ -36,7 +36,7 @@ public abstract class ForgeRegistryEntry<V> implements IForgeRegistryEntry<V> {\n \t}\n \n \tpublic final IForgeRegistryEntry setRegistryName(String modID, String name) {\n-\t\treturn setRegistryName(modID + \":\" + name);\n+\t\treturn setRegistryName(new Identifier(modID, name));\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzNDUyMw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432234523", "bodyText": "If this is the version of the impl that is kept, instead of spamming ternaries remove them and replace with an if( index == -1) or similar. Should make the code more readable.", "author": "TheGlitch76", "createdAt": "2020-05-29T03:19:50Z", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);", "originalCommit": "1d6d097e31552533c261b3017492104c1272ebdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "564ad31c5da30999b8c48495c45a90e654e771c7", "chunk": "diff --git a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\nindex 695f0898..93d1cfdf 100644\n--- a/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n+++ b/patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java\n\n@@ -32,15 +32,23 @@ public class GameData {\n \t * current active mod container.\n \t *\n \t * @param name          The name or resource location\n-\t * @param warnOverrides If true, logs a warning if domain differs from that of\n-\t *                      the currently currently active mod container\n-\t *\n-\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t * @param warnOverrides If false, the prefix is forcefully updated without a warning,\n+\t *                      and if true, the prefix is not updated and there is just a\n+\t *                      warning message.\n+\t * @return The {@link Identifier} with given or inferred domain\n \t */\n \tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n-\t\tint index = name.lastIndexOf(':');\n-\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n-\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tint colonIndex = name.lastIndexOf(':');\n+\n+\t\tif (colonIndex == -1) {\n+\t\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\t\treturn new Identifier(prefix, name);\n+\t\t}\n+\n+\t\tString oldPrefix = name.substring(0, colonIndex).toLowerCase(Locale.ROOT);\n+\n+\t\tString newName = name.substring(colonIndex + 1);\n \t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n \n \t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n"}}, {"oid": "564ad31c5da30999b8c48495c45a90e654e771c7", "url": "https://github.com/PatchworkMC/patchwork-api/commit/564ad31c5da30999b8c48495c45a90e654e771c7", "message": "Fix details in helper methods", "committedDate": "2020-05-29T06:29:48Z", "type": "commit"}]}