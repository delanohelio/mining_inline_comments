{"pr_number": 149, "pr_title": "Use Fabric's world load event.", "pr_createdAt": "2020-07-24T08:54:24Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/149", "timeline": [{"oid": "bfb4f92f5fa4a46cadf16e08ef7f05afb1d1e0bd", "url": "https://github.com/PatchworkMC/patchwork-api/commit/bfb4f92f5fa4a46cadf16e08ef7f05afb1d1e0bd", "message": "Use World Load event in fabric api introduced by 0.15.0", "committedDate": "2020-07-24T08:38:15Z", "type": "commit"}, {"oid": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6", "url": "https://github.com/PatchworkMC/patchwork-api/commit/03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6", "message": "Workaround: Fire overworld load event later", "committedDate": "2020-07-24T08:48:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460419210", "bodyText": "Shouldn't the inject target be in Lnet/minecraft/whatever format?", "author": "i509VCB", "createdAt": "2020-07-25T16:11:47Z", "path": "patchwork-events-world/src/main/java/net/patchworkmc/mixin/event/world/MixinMinecraftServer.java", "diffHunk": "@@ -47,42 +48,10 @@ public MixinMinecraftServer(String name) {\n \t@Final\n \tprivate Map<DimensionType, ServerWorld> worlds;\n \n-\t/*\n-\t// This is a variant of the world load hook that is less likely to break mods and more likely to break on updates.\n-\t// Should get called once per loop, regardless of which if branch it takes.\n-\t@Inject(\n-\t\tmethod = \"createWorlds\",\n-\t\tslice = @Slice(\n-\t\t\tfrom = @At(value = \"INVOKE\", target = \"java/util/Iterator.hasNext ()Z\")\n-\t\t),\n-\t\tat = @At(value = \"JUMP\", opcode = Opcodes.GOTO),\n-\t\tlocals = LocalCapture.CAPTURE_FAILHARD\n-\t)\n-\tprivate void hookCreateWorlds(WorldSaveHandler worldSaveHandler, LevelProperties properties, LevelInfo levelInfo, WorldGenerationProgressListener worldGenerationProgressListener, CallbackInfo ci, ServerWorld serverWorld, ServerWorld serverWorld2, Iterator var7, DimensionType dimensionType) {\n-\t\tWorldEvents.onWorldLoad(this.worlds.get(dimensionType));\n-\t}\n-\n-\t*/\n-\n-\t// This injection gets called at the beginning of each loop, and is used to special case the overworld dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Iterator.next ()Ljava/lang/Object;\"))\n-\tprivate Object proxyNextWorldToSpecialCaseOverworld(Iterator<DimensionType> iterator) {\n-\t\tDimensionType type = iterator.next();\n-\n-\t\tif (type == DimensionType.OVERWORLD) {\n-\t\t\tWorldEvents.onWorldLoad(this.worlds.get(type));\n-\t\t}\n-\n-\t\treturn type;\n-\t}\n-\n-\t// This injection handles every other dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", ordinal = 1))\n-\tprivate Object proxyPutWorld(Map<Object, Object> worlds, Object type, Object world) {\n-\t\tworlds.put(type, world);\n-\t\tWorldEvents.onWorldLoad((ServerWorld) world);\n-\n-\t\treturn world;\n+\t// Fabric usually fires the event much earlier in the method, so this is just picking a point closer to when Forge would fire it.\n+\t@Inject(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"net/minecraft/world/dimension/DimensionType.getAll ()Ljava/lang/Iterable;\"))", "originalCommit": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzOTcwNg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460439706", "bodyText": "hm. good question, and i hope i haven't goofed my previous PRs because of this. I've just been copying from IDEA's bytecode viewer: INVOKESTATIC net/minecraft/world/dimension/DimensionType.getAll ()Ljava/lang/Iterable;", "author": "kitlith", "createdAt": "2020-07-25T19:53:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0MTkwMg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460441902", "bodyText": "Well, it at least seems to work as intended as-is. I'll leave \"should it be changed anyway\" as something for future consideration.", "author": "kitlith", "createdAt": "2020-07-25T20:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3Mjg5Mg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460572892", "bodyText": "i con't care about the signature format as long as it's readable and it applies", "author": "TheGlitch76", "createdAt": "2020-07-26T21:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "49a593473ea40d77d24901b3523ed081d80db377", "url": "https://github.com/PatchworkMC/patchwork-api/commit/49a593473ea40d77d24901b3523ed081d80db377", "message": "Add dep on fabric api to patchwork-events-world.\n\nTODO: we should go through and accurately state our fabric api\ndependencies for all modules.", "committedDate": "2020-07-25T20:09:02Z", "type": "commit"}]}