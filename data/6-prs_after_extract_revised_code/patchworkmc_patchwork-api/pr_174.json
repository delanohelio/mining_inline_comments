{"pr_number": 174, "pr_title": "Feature/block harvest", "pr_createdAt": "2020-08-09T01:25:45Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/174", "timeline": [{"oid": "c461343a2d2c45e0aafd0dabca59be434809d7c4", "url": "https://github.com/PatchworkMC/patchwork-api/commit/c461343a2d2c45e0aafd0dabca59be434809d7c4", "message": "Impl removedByPlayer and canHarvestBlock in IForgeBlock", "committedDate": "2020-07-12T19:40:37Z", "type": "commit"}, {"oid": "b30df48a3a4271e42c0ec8d9e11e6da301330c53", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b30df48a3a4271e42c0ec8d9e11e6da301330c53", "message": "Merge remote-tracking branch 'origin/master' into feature/block-harvest\n\nConflicts:\n\tpatchwork-events-world/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\tpatchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEvents.java", "committedDate": "2020-07-27T17:52:34Z", "type": "commit"}, {"oid": "fd9c9be088ae6bfec650221db6d816959266502d", "url": "https://github.com/PatchworkMC/patchwork-api/commit/fd9c9be088ae6bfec650221db6d816959266502d", "message": "Apply kitlith's suggestions", "committedDate": "2020-07-27T17:56:24Z", "type": "commit"}, {"oid": "f595f75819950fad3a5474f07c630eb128e00d06", "url": "https://github.com/PatchworkMC/patchwork-api/commit/f595f75819950fad3a5474f07c630eb128e00d06", "message": "Merge remote-tracking branch 'origin/master' into feature/block-harvest\n\nConflicts:\n\tpatchwork-events-world/build.gradle\n\tpatchwork-extensions-block/build.gradle", "committedDate": "2020-07-31T19:40:18Z", "type": "commit"}, {"oid": "4683089a885c300973a321daa89a8f42c2252b29", "url": "https://github.com/PatchworkMC/patchwork-api/commit/4683089a885c300973a321daa89a8f42c2252b29", "message": "Fix ThreadLocal memory leakage", "committedDate": "2020-07-31T19:47:49Z", "type": "commit"}, {"oid": "62e8d4196062915a1dbcfdd8640701cccf7c589f", "url": "https://github.com/PatchworkMC/patchwork-api/commit/62e8d4196062915a1dbcfdd8640701cccf7c589f", "message": "Apply suggestions", "committedDate": "2020-08-04T01:08:43Z", "type": "commit"}, {"oid": "ac3423a623ac746b0823c81fc457a23b799c3c0a", "url": "https://github.com/PatchworkMC/patchwork-api/commit/ac3423a623ac746b0823c81fc457a23b799c3c0a", "message": "Resolve conflict", "committedDate": "2020-08-05T17:52:32Z", "type": "commit"}, {"oid": "f1df02a4323f21fef4ffd9be7ab3ed9c6b8d4312", "url": "https://github.com/PatchworkMC/patchwork-api/commit/f1df02a4323f21fef4ffd9be7ab3ed9c6b8d4312", "message": "Merge branch 'master' of github.com:PatchworkMC/patchwork-api into pr/blockharvest", "committedDate": "2020-08-07T22:35:46Z", "type": "commit"}, {"oid": "a727989f6256ed4e62c9b03f1bdfcf1a2b8a8f14", "url": "https://github.com/PatchworkMC/patchwork-api/commit/a727989f6256ed4e62c9b03f1bdfcf1a2b8a8f14", "message": "Remove unneeded dependency", "committedDate": "2020-08-07T22:42:54Z", "type": "commit"}, {"oid": "08fce3e7e71e72f240689f60eaf2c0b821d96697", "url": "https://github.com/PatchworkMC/patchwork-api/commit/08fce3e7e71e72f240689f60eaf2c0b821d96697", "message": "Disable an unnecessary 1.15 patch", "committedDate": "2020-08-08T01:45:59Z", "type": "commit"}, {"oid": "5fbddd764cb28af7a3291900cb498618f88d4ebb", "url": "https://github.com/PatchworkMC/patchwork-api/commit/5fbddd764cb28af7a3291900cb498618f88d4ebb", "message": "Merge remote-tracking branch 'origin/master' into feature/block-harvest", "committedDate": "2020-08-13T11:53:29Z", "type": "commit"}, {"oid": "bf8a880b613b1db0959065b8366ca5810e122b5e", "url": "https://github.com/PatchworkMC/patchwork-api/commit/bf8a880b613b1db0959065b8366ca5810e122b5e", "message": "Move BlockEvent from events-world to extensions-block.\n\nThis removes a unnecessary dependency.", "committedDate": "2020-08-13T12:23:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MzU5MA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/174#discussion_r470863590", "bodyText": "Go ahead and just remove this.", "author": "TheGlitch76", "createdAt": "2020-08-14T21:02:13Z", "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinClientPlayerInteractionManager.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block.harvest;\n+\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import net.minecraftforge.common.extensions.IForgeBlockState;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.network.ClientPlayerInteractionManager;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.fluid.FluidState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+\n+import net.patchworkmc.impl.extensions.block.Signatures;\n+\n+// This is a 1.15+ patch, should not be used in 1.14.4", "originalCommit": "bf8a880b613b1db0959065b8366ca5810e122b5e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0906e1106e6228921042a0b4138796db74fe981", "chunk": "diff --git a/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinClientPlayerInteractionManager.java b/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinClientPlayerInteractionManager.java\ndeleted file mode 100644\nindex bec6fe6..0000000\n--- a/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinClientPlayerInteractionManager.java\n+++ /dev/null\n\n@@ -1,57 +0,0 @@\n-/*\n- * Minecraft Forge, Patchwork Project\n- * Copyright (c) 2016-2020, 2019-2020\n- *\n- * This library is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation version 2.1\n- * of the License.\n- *\n- * This library is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this library; if not, write to the Free Software\n- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n- */\n-\n-package net.patchworkmc.mixin.extensions.block.harvest;\n-\n-import org.spongepowered.asm.mixin.Final;\n-import org.spongepowered.asm.mixin.Mixin;\n-import org.spongepowered.asm.mixin.Shadow;\n-import org.spongepowered.asm.mixin.injection.At;\n-import org.spongepowered.asm.mixin.injection.Redirect;\n-import net.minecraftforge.common.extensions.IForgeBlockState;\n-\n-import net.minecraft.block.Block;\n-import net.minecraft.block.BlockState;\n-import net.minecraft.client.MinecraftClient;\n-import net.minecraft.client.network.ClientPlayerInteractionManager;\n-import net.minecraft.entity.player.PlayerEntity;\n-import net.minecraft.fluid.FluidState;\n-import net.minecraft.util.math.BlockPos;\n-import net.minecraft.world.World;\n-\n-import net.patchworkmc.impl.extensions.block.Signatures;\n-\n-// This is a 1.15+ patch, should not be used in 1.14.4\n-@Mixin(ClientPlayerInteractionManager.class)\n-public abstract class MixinClientPlayerInteractionManager {\n-\t@Shadow\n-\t@Final\n-\tprivate MinecraftClient client;\n-\n-\t@Redirect(method = \"breakBlock\", at = @At(value = \"INVOKE\", target = Signatures.Block_onBreak, ordinal = 0))\n-\tprivate void patchwork$breakBlock_onBreak(Block block, World world, BlockPos pos, BlockState state, PlayerEntity player) {\n-\t\t// Suppress this call: block.onBreak(world, pos, blockState, this.client.player);\n-\t}\n-\n-\t@Redirect(method = \"breakBlock\", at = @At(value = \"INVOKE\", target = Signatures.World_setBlockState, ordinal = 0))\n-\tprivate boolean patchwork_breakBlock_setBlockState(World world, BlockPos pos, BlockState state, int flags) {\n-\t\tFluidState ifluidstate = world.getFluidState(pos);\n-\t\treturn ((IForgeBlockState) state).removedByPlayer(world, pos, client.player, false, ifluidstate);\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2NjExNg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/174#discussion_r470866116", "bodyText": "I don't think this needs to be a redirect. One option could be to @slice from the isCreative check and inject at RETURN ordinal = 0.", "author": "TheGlitch76", "createdAt": "2020-08-14T21:09:03Z", "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinServerPlayerInteractionManager.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block.harvest;\n+\n+import javax.annotation.Nullable;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import net.minecraftforge.common.extensions.IForgeBlockState;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.entity.BlockEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.network.ServerPlayerInteractionManager;\n+import net.minecraft.server.world.ServerWorld;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.GameMode;\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.World;\n+\n+import net.patchworkmc.impl.extensions.block.BlockContext;\n+import net.patchworkmc.impl.extensions.block.BlockHarvestManager;\n+import net.patchworkmc.impl.extensions.block.Signatures;\n+\n+@Mixin(ServerPlayerInteractionManager.class)\n+public abstract class MixinServerPlayerInteractionManager {\n+\t// removedByPlayer, canHarvestBlock\n+\n+\t@Unique\n+\tprivate boolean patchwork$removeBlock(BlockPos pos, boolean canHarvest) {\n+\t\tServerPlayerInteractionManager me = (ServerPlayerInteractionManager) (Object) this;\n+\t\tBlockState state = me.world.getBlockState(pos);\n+\t\tboolean removed = ((IForgeBlockState) state).removedByPlayer(me.world, pos, me.player, canHarvest, me.world.getFluidState(pos));\n+\n+\t\tif (removed) {\n+\t\t\tstate.getBlock().onBroken(me.world, pos, state);\n+\t\t}\n+\n+\t\treturn removed;\n+\t}\n+\n+\t/////////////////////////////////////\n+\t/// Fire BlockEvent.BreakEvent,\n+\t/// get the amount of exp to drop.\n+\t/////////////////////////////////////\n+\t@Shadow\n+\tpublic ServerWorld world;\n+\t@Shadow\n+\tpublic ServerPlayerEntity player;\n+\t@Shadow\n+\tprivate GameMode gameMode;\n+\n+\t@Inject(method = \"tryBreakBlock\", at = @At(\"HEAD\"), cancellable = true)\n+\tprivate void hookBreakBlock(BlockPos pos, CallbackInfoReturnable<Boolean> callback) {\n+\t\tint exp = BlockHarvestManager.onBlockBreakEvent(world, gameMode, player, pos);\n+\n+\t\tif (exp < 0) {\n+\t\t\tcallback.setReturnValue(false);\n+\t\t} else {\n+\t\t\tBlockHarvestManager.pushExpDropStack(exp);\n+\t\t}\n+\t}\n+\n+\t/////////////////////////////////////\n+\t@Redirect(method = \"tryBreakBlock\", at = @At(value = \"INVOKE\", target = Signatures.Block_onBreak, ordinal = 0))\n+\tprivate void patchwork$tryBreakBlock_onBreak(Block block, World world, BlockPos pos, BlockState state, PlayerEntity player) {\n+\t\t// Suppress this call\n+\t}\n+\n+\t@Redirect(method = \"tryBreakBlock\", at = @At(value = \"INVOKE\", target = Signatures.ServerWorld_removeBlock, ordinal = 0))\n+\tprivate boolean patchwork$tryBreakBlock_removeBlock(ServerWorld world, BlockPos pos, boolean bool) {\n+\t\treturn true; // bypass if (bl && bl2) {\n+\t}\n+\n+\t@Redirect(method = \"tryBreakBlock\", at = @At(value = \"INVOKE\", target = Signatures.Block_onBroken, ordinal = 0))\n+\tprivate void patchwork$tryBreakBlock_onBroken(Block block, IWorld world, BlockPos pos, BlockState state) {\n+\t\t// Suppress this call\n+\t}\n+\n+\t@Redirect(method = \"tryBreakBlock\", at = @At(value = \"INVOKE\", target = Signatures.ServerPlayerInteractionManager_isCreative, ordinal = 0))", "originalCommit": "bf8a880b613b1db0959065b8366ca5810e122b5e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2368c2f90efcbadb7799882d228403e88986c04d", "chunk": "diff --git a/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinServerPlayerInteractionManager.java b/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinServerPlayerInteractionManager.java\nindex 76bcbfb..b3a3c19 100644\n--- a/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinServerPlayerInteractionManager.java\n+++ b/patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/harvest/MixinServerPlayerInteractionManager.java\n\n@@ -21,12 +21,15 @@ package net.patchworkmc.mixin.extensions.block.harvest;\n \n import javax.annotation.Nullable;\n \n+import org.objectweb.asm.Opcodes;\n import org.spongepowered.asm.mixin.Mixin;\n import org.spongepowered.asm.mixin.Shadow;\n import org.spongepowered.asm.mixin.Unique;\n import org.spongepowered.asm.mixin.injection.At;\n import org.spongepowered.asm.mixin.injection.Inject;\n import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.Slice;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n import net.minecraftforge.common.extensions.IForgeBlockState;\n \n"}}, {"oid": "2368c2f90efcbadb7799882d228403e88986c04d", "url": "https://github.com/PatchworkMC/patchwork-api/commit/2368c2f90efcbadb7799882d228403e88986c04d", "message": "Replace a redirect with injection", "committedDate": "2020-08-15T08:05:00Z", "type": "commit"}, {"oid": "b0906e1106e6228921042a0b4138796db74fe981", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b0906e1106e6228921042a0b4138796db74fe981", "message": "Apply suggestions", "committedDate": "2020-08-15T08:05:35Z", "type": "commit"}, {"oid": "926f97a91e64daaa298c2ed94fba8292d53c76b7", "url": "https://github.com/PatchworkMC/patchwork-api/commit/926f97a91e64daaa298c2ed94fba8292d53c76b7", "message": "Merge remote-tracking branch 'origin/master' into feature/block-harvest\n\nConflicts:\n\tpatchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEvents.java", "committedDate": "2020-08-15T08:07:10Z", "type": "commit"}, {"oid": "0960d5f1d9be5ee659087fab20f087cba3771e7c", "url": "https://github.com/PatchworkMC/patchwork-api/commit/0960d5f1d9be5ee659087fab20f087cba3771e7c", "message": "Merge remote-tracking branch 'origin/master' into feature/block-harvest\n\nConflicts:\n\tpatchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEvents.java", "committedDate": "2020-08-15T08:07:10Z", "type": "commit"}]}