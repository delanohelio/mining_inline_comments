{"pr_number": 76, "pr_title": "Fix annotation scanning argument object types", "pr_createdAt": "2020-06-06T02:16:26Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/76", "timeline": [{"oid": "b10918fdf559b565c649f6a217a7a466b19239b9", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b10918fdf559b565c649f6a217a7a466b19239b9", "message": "Revert \"Implement IShapedRecipe and add new module patchwork-recipes\"\n\nThis reverts commit b020b67e7391164a458976ae0ea00ff44b8c9f14.", "committedDate": "2020-04-29T12:12:59Z", "type": "commit"}, {"oid": "fa56dfbb2fd08bbda6f90e7c96b3345e71d6d2bb", "url": "https://github.com/PatchworkMC/patchwork-api/commit/fa56dfbb2fd08bbda6f90e7c96b3345e71d6d2bb", "message": "Revert \"Implement IShapedRecipe and add new module patchwork-recipes\"\n\nThis reverts commit c59ede6a0a743c8934341a28e35272fb14b37640.", "committedDate": "2020-04-29T12:13:10Z", "type": "commit"}, {"oid": "b8b09dfad5981f2839c33ec5305a472f128ae555", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b8b09dfad5981f2839c33ec5305a472f128ae555", "message": "change the way of getting parent mod container", "committedDate": "2020-05-04T02:38:49Z", "type": "commit"}, {"oid": "6346ed14f8b03416577a6351d426abde020ce885", "url": "https://github.com/PatchworkMC/patchwork-api/commit/6346ed14f8b03416577a6351d426abde020ce885", "message": "add getAllScanData", "committedDate": "2020-05-04T02:51:31Z", "type": "commit"}, {"oid": "9d2aaf852e40a15692a22a55b3c78277c2825246", "url": "https://github.com/PatchworkMC/patchwork-api/commit/9d2aaf852e40a15692a22a55b3c78277c2825246", "message": "small refactor", "committedDate": "2020-05-04T12:09:42Z", "type": "commit"}, {"oid": "01d3c633f75c6991ad00b61e4a37bde872d4b0c2", "url": "https://github.com/PatchworkMC/patchwork-api/commit/01d3c633f75c6991ad00b61e4a37bde872d4b0c2", "message": "make sub mods share the same ModFileInfo", "committedDate": "2020-05-11T02:17:19Z", "type": "commit"}, {"oid": "1cbe0918115d699e86f268bad757f2d08778bc5a", "url": "https://github.com/PatchworkMC/patchwork-api/commit/1cbe0918115d699e86f268bad757f2d08778bc5a", "message": "change to patchwork:parent", "committedDate": "2020-05-13T00:54:23Z", "type": "commit"}, {"oid": "9313c4cdcd9e8101f641e7da73a2677995eaa002", "url": "https://github.com/PatchworkMC/patchwork-api/commit/9313c4cdcd9e8101f641e7da73a2677995eaa002", "message": "remove unused method", "committedDate": "2020-05-15T08:42:03Z", "type": "commit"}, {"oid": "43c772ec09a2bb2d5954cf093dd115663268ad52", "url": "https://github.com/PatchworkMC/patchwork-api/commit/43c772ec09a2bb2d5954cf093dd115663268ad52", "message": "fix annotation scanning detail", "committedDate": "2020-05-17T02:06:16Z", "type": "commit"}, {"oid": "8068fdcfd36ed32cc433bd059c20ebf7cd9ee579", "url": "https://github.com/PatchworkMC/patchwork-api/commit/8068fdcfd36ed32cc433bd059c20ebf7cd9ee579", "message": "fix annotation scanning detail", "committedDate": "2020-05-17T03:19:00Z", "type": "commit"}, {"oid": "ac35dc0752ac6ae10fb9609f77e225e0f1f5e172", "url": "https://github.com/PatchworkMC/patchwork-api/commit/ac35dc0752ac6ae10fb9609f77e225e0f1f5e172", "message": "minor fix", "committedDate": "2020-05-17T03:46:29Z", "type": "commit"}, {"oid": "63f28404031f0d3bd994dbc8e9915e7cd6830d4a", "url": "https://github.com/PatchworkMC/patchwork-api/commit/63f28404031f0d3bd994dbc8e9915e7cd6830d4a", "message": "Revert \"Revert \"Annotation Scanning\"\"\n\nThis reverts commit b36fc8bac5a127c8b67c44f5b343441556a67391.", "committedDate": "2020-05-17T08:02:12Z", "type": "commit"}, {"oid": "4745a8751b2920455ceed86f89b53c39dd906838", "url": "https://github.com/PatchworkMC/patchwork-api/commit/4745a8751b2920455ceed86f89b53c39dd906838", "message": "Merge branch 'annotation' of https://github.com/qouteall/patchwork-api\n\n\u0001 Conflicts:\n\u0001\tpatchwork-recipes/src/main/java/net/patchworkmc/mixin/recipes/MixinRecipeGridAligner.java\n\u0001\tsettings.gradle", "committedDate": "2020-05-17T08:04:00Z", "type": "commit"}, {"oid": "93f240496788565f1e76c47e4ea8a75bcdfe5598", "url": "https://github.com/PatchworkMC/patchwork-api/commit/93f240496788565f1e76c47e4ea8a75bcdfe5598", "message": "fix broken branch", "committedDate": "2020-05-17T08:24:03Z", "type": "commit"}, {"oid": "aed918c2f272ccec7f257e3c25c0e6aa12475e60", "url": "https://github.com/PatchworkMC/patchwork-api/commit/aed918c2f272ccec7f257e3c25c0e6aa12475e60", "message": "Merge pull request #1 from PatchworkMC/master\n\n...", "committedDate": "2020-05-23T04:51:48Z", "type": "commit"}, {"oid": "d2ee0a7e57f11d917fce9833b49cea3329f14a6e", "url": "https://github.com/PatchworkMC/patchwork-api/commit/d2ee0a7e57f11d917fce9833b49cea3329f14a6e", "message": "Merge branch 'master' of https://github.com/PatchworkMC/patchwork-api", "committedDate": "2020-06-06T01:46:52Z", "type": "commit"}, {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "message": "Fix annotation scanning argument object wrappers", "committedDate": "2020-06-06T02:13:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjMyMg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166322", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);\n          \n          \n            \n            \t\t\t\t\t\tObject value = argMethod.invoke(annotationObject);", "author": "coderbot16", "createdAt": "2020-06-12T01:56:00Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -167,10 +179,9 @@ private void initAnnotationData() {\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n \t\t\t\t\tif (isArgumentMethod(argMethod)) {\n-\t\t\t\t\t\tannotationData.put(\n-\t\t\t\t\t\t\t\targMethod.getName(),\n-\t\t\t\t\t\t\t\targMethod.invoke(annotationObject)\n-\t\t\t\t\t\t);\n+\t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59a2d47dc36363d31c1c107398357d8b0db645dd", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\nindex c006dd47..ebf124b8 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n\n@@ -178,10 +177,10 @@ public class ModFileScanData {\n \t\t\t\tMethod[] argMethods = annotationObject.getClass().getDeclaredMethods();\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n-\t\t\t\t\tif (isArgumentMethod(argMethod)) {\n+\t\t\t\t\tif (isElementGetter(argMethod)) {\n \t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);\n \n-\t\t\t\t\t\tannotationData.put(argMethod.getName(), processArgumentObject(object));\n+\t\t\t\t\t\tannotationData.put(argMethod.getName(), processElementObject(object));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} catch (Throwable e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjY2NQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166665", "bodyText": "I know it isn't strictly part of this PR, but the official name for these is elements. In other words, argMethods -> elements seems like a good name change.", "author": "coderbot16", "createdAt": "2020-06-12T01:57:37Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -167,10 +179,9 @@ private void initAnnotationData() {\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n \t\t\t\t\tif (isArgumentMethod(argMethod)) {", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59a2d47dc36363d31c1c107398357d8b0db645dd", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\nindex c006dd47..ebf124b8 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n\n@@ -178,10 +177,10 @@ public class ModFileScanData {\n \t\t\t\tMethod[] argMethods = annotationObject.getClass().getDeclaredMethods();\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n-\t\t\t\t\tif (isArgumentMethod(argMethod)) {\n+\t\t\t\t\tif (isElementGetter(argMethod)) {\n \t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);\n \n-\t\t\t\t\t\tannotationData.put(argMethod.getName(), processArgumentObject(object));\n+\t\t\t\t\t\tannotationData.put(argMethod.getName(), processElementObject(object));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} catch (Throwable e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjgyMA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166820", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static Object processArgumentObject(Object object) {\n          \n          \n            \n            \tprivate static Object processElementValue(Object value) {", "author": "coderbot16", "createdAt": "2020-06-12T01:58:13Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -235,4 +245,23 @@ public int hashCode() {\n \t\t\treturn Objects.hash(annotationType, targetType, clazz, memberName);\n \t\t}\n \t}\n+\n+\tprivate static Object processArgumentObject(Object object) {", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59a2d47dc36363d31c1c107398357d8b0db645dd", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\nindex c006dd47..ebf124b8 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n\n@@ -246,10 +245,10 @@ public class ModFileScanData {\n \t\t}\n \t}\n \n-\tprivate static Object processArgumentObject(Object object) {\n+\tprivate static Object processElementObject(Object object) {\n \t\tif (object instanceof Object[]) {\n \t\t\treturn Arrays.stream((Object[]) object)\n-\t\t\t\t\t.map(ModFileScanData::processArgumentObject)\n+\t\t\t\t\t.map(ModFileScanData::processElementObject)\n \t\t\t\t\t.collect(Collectors.toList());\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjkxOQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166919", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tString memberName, Map<String, Object> annotationData\n          \n          \n            \n            \t\t\t\tString memberName, Map<String, Object> elements", "author": "coderbot16", "createdAt": "2020-06-12T01:58:40Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -123,6 +124,17 @@ public AnnotationData(\n \t\t\tthis.memberName = memberName;\n \t\t}\n \n+\t\tpublic AnnotationData(\n+\t\t\t\tType annotationType, ElementType targetType, Type clazz,\n+\t\t\t\tString memberName, Map<String, Object> annotationData", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\nindex c006dd47..284e7aaf 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java\n\n@@ -126,13 +125,13 @@ public class ModFileScanData {\n \n \t\tpublic AnnotationData(\n \t\t\t\tType annotationType, ElementType targetType, Type clazz,\n-\t\t\t\tString memberName, Map<String, Object> annotationData\n+\t\t\t\tString memberName, Map<String, Object> elements\n \t\t) {\n \t\t\tthis.annotationType = annotationType;\n \t\t\tthis.targetType = targetType;\n \t\t\tthis.clazz = clazz;\n \t\t\tthis.memberName = memberName;\n-\t\t\tthis.annotationData = annotationData;\n+\t\t\tthis.elements = elements;\n \t\t}\n \n \t\tpublic Type getAnnotationType() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzAwNA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167004", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/** @deprecated */", "author": "coderbot16", "createdAt": "2020-06-12T01:59:04Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;\n+\tprivate ArrayList<Object> arrayList;\n+\tprivate String arrayName;\n+\n+\tpublic static ModFileScanData.AnnotationData fromModAnnotation(Type clazz, ModAnnotation annotation) {\n+\t\treturn new ModFileScanData.AnnotationData(\n+\t\t\t\tannotation.asmType, annotation.type, clazz, annotation.member, annotation.values\n+\t\t);\n+\t}\n+\n+\tpublic ModAnnotation(ElementType type, Type asmType, String member) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = member;\n+\t}\n+\n+\t/** @deprecated */", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\nindex 6e4696c4..5cf65c79 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n\n@@ -50,12 +50,6 @@ public class ModAnnotation {\n \t\tthis.member = member;\n \t}\n \n-\t/** @deprecated */\n-\t@Deprecated\n-\tpublic ModAnnotation(ElementType type, Type asmType, ModAnnotation parent) {\n-\t\tthis(asmType, parent);\n-\t}\n-\n \tpublic ModAnnotation(Type asmType, ModAnnotation parent) {\n \t\tthis.values = Maps.newHashMap();\n \t\tthis.type = parent.type;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzEzMA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167130", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final Map<String, Object> values;\n          \n          \n            \n            \tprivate final Map<String, Object> elements;", "author": "coderbot16", "createdAt": "2020-06-12T01:59:36Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\nindex 6e4696c4..5cf65c79 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n\n@@ -50,12 +50,6 @@ public class ModAnnotation {\n \t\tthis.member = member;\n \t}\n \n-\t/** @deprecated */\n-\t@Deprecated\n-\tpublic ModAnnotation(ElementType type, Type asmType, ModAnnotation parent) {\n-\t\tthis(asmType, parent);\n-\t}\n-\n \tpublic ModAnnotation(Type asmType, ModAnnotation parent) {\n \t\tthis.values = Maps.newHashMap();\n \t\tthis.type = parent.type;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzUzMw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167533", "bodyText": "The methods that are just used for the ASM annotation scanning code can be pruned, since they're probably not needed otherwise.", "author": "coderbot16", "createdAt": "2020-06-12T02:01:05Z", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;\n+\tprivate ArrayList<Object> arrayList;\n+\tprivate String arrayName;\n+\n+\tpublic static ModFileScanData.AnnotationData fromModAnnotation(Type clazz, ModAnnotation annotation) {\n+\t\treturn new ModFileScanData.AnnotationData(\n+\t\t\t\tannotation.asmType, annotation.type, clazz, annotation.member, annotation.values\n+\t\t);\n+\t}\n+\n+\tpublic ModAnnotation(ElementType type, Type asmType, String member) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = member;\n+\t}\n+\n+\t/** @deprecated */\n+\t@Deprecated\n+\tpublic ModAnnotation(ElementType type, Type asmType, ModAnnotation parent) {\n+\t\tthis(asmType, parent);\n+\t}\n+\n+\tpublic ModAnnotation(Type asmType, ModAnnotation parent) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = parent.type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = parent.member;\n+\t}\n+\n+\tpublic String toString() {\n+\t\treturn MoreObjects.toStringHelper(\"Annotation\")\n+\t\t\t\t.add(\"type\", this.type).add(\"name\", this.asmType.getClassName())\n+\t\t\t\t.add(\"member\", this.member).add(\"values\", this.values).toString();\n+\t}\n+\n+\tpublic ElementType getType() {\n+\t\treturn this.type;\n+\t}\n+\n+\tpublic Type getASMType() {", "originalCommit": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "chunk": "diff --git a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\nindex 6e4696c4..5cf65c79 100644\n--- a/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n+++ b/patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java\n\n@@ -50,12 +50,6 @@ public class ModAnnotation {\n \t\tthis.member = member;\n \t}\n \n-\t/** @deprecated */\n-\t@Deprecated\n-\tpublic ModAnnotation(ElementType type, Type asmType, ModAnnotation parent) {\n-\t\tthis(asmType, parent);\n-\t}\n-\n \tpublic ModAnnotation(Type asmType, ModAnnotation parent) {\n \t\tthis.values = Maps.newHashMap();\n \t\tthis.type = parent.type;\n"}}, {"oid": "59a2d47dc36363d31c1c107398357d8b0db645dd", "url": "https://github.com/PatchworkMC/patchwork-api/commit/59a2d47dc36363d31c1c107398357d8b0db645dd", "message": "rename", "committedDate": "2020-06-12T06:58:37Z", "type": "commit"}, {"oid": "9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "url": "https://github.com/PatchworkMC/patchwork-api/commit/9600a5d41926cffae87f2453d2db3b0e0a5ec82e", "message": "Renames and minor changes", "committedDate": "2020-07-21T07:12:04Z", "type": "commit"}, {"oid": "5643d240a22b0d85786ae1ab40e8c7f5b2b75fc7", "url": "https://github.com/PatchworkMC/patchwork-api/commit/5643d240a22b0d85786ae1ab40e8c7f5b2b75fc7", "message": "Minor rename", "committedDate": "2020-07-22T04:09:42Z", "type": "commit"}]}