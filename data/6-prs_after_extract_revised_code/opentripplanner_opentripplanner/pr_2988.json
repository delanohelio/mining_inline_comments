{"pr_number": 2988, "pr_title": "Copy geometries from previous TripPattern when doing real-time updates", "pr_createdAt": "2020-02-27T12:40:27Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2988", "timeline": [{"oid": "bbeceb03448a1fe45913259259f16cdfebdbc0ed", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bbeceb03448a1fe45913259259f16cdfebdbc0ed", "message": "Copy geometries from previous TripPattern when doing real-time updates", "committedDate": "2020-02-27T12:11:51Z", "type": "commit"}, {"oid": "9db4dff840021bb25db021e5a89e31e1999190db", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9db4dff840021bb25db021e5a89e31e1999190db", "message": "Added changelog entry", "committedDate": "2020-02-27T12:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkyMjQwNA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2988#discussion_r386922404", "bodyText": "Annotate the trip parameter here and on Siri trip pattern cache with @NotNull", "author": "abyrd", "createdAt": "2020-03-03T10:20:19Z", "path": "src/main/java/org/opentripplanner/updater/stoptime/TripPatternCache.java", "diffHunk": "@@ -28,12 +29,13 @@\n      * and edges for this trip pattern are also created in the graph.\n      * \n      * @param stopPattern stop pattern to retrieve/create trip pattern\n-     * @param route route of new trip pattern in case a new trip pattern will be created\n+     * @param trip the trip the new trip pattern will be created for\n      * @param graph graph to add vertices and edges in case a new trip pattern will be created\n      * @return cached or newly created trip pattern\n      */\n     public synchronized TripPattern getOrCreateTripPattern(final StopPattern stopPattern,\n-            final Route route, final Graph graph) {\n+            final Trip trip, final Graph graph) {", "originalCommit": "9db4dff840021bb25db021e5a89e31e1999190db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "764b27682b6b4238ae84b6fdd39439e6476b298d", "chunk": "diff --git a/src/main/java/org/opentripplanner/updater/stoptime/TripPatternCache.java b/src/main/java/org/opentripplanner/updater/stoptime/TripPatternCache.java\nindex c7a695f2e..63bc6c3f4 100644\n--- a/src/main/java/org/opentripplanner/updater/stoptime/TripPatternCache.java\n+++ b/src/main/java/org/opentripplanner/updater/stoptime/TripPatternCache.java\n\n@@ -33,8 +34,10 @@ public class TripPatternCache {\n      * @param graph graph to add vertices and edges in case a new trip pattern will be created\n      * @return cached or newly created trip pattern\n      */\n-    public synchronized TripPattern getOrCreateTripPattern(final StopPattern stopPattern,\n-            final Trip trip, final Graph graph) {\n+    public synchronized TripPattern getOrCreateTripPattern(\n+            @NotNull final StopPattern stopPattern,\n+            @NotNull final Trip trip,\n+            @NotNull final Graph graph) {\n         Route route = trip.getRoute();\n         // Check cache for trip pattern\n         TripPattern tripPattern = cache.get(stopPattern);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkyMzE2MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2988#discussion_r386923160", "bodyText": "rename this method, \"previous\" has a time or sequence connotation. The method is general enough that it could be setHopGeometriesFromTripPattern.", "author": "abyrd", "createdAt": "2020-03-03T10:21:37Z", "path": "src/main/java/org/opentripplanner/model/TripPattern.java", "diffHunk": "@@ -155,6 +155,35 @@ public void setHopGeometry(int i, LineString hopGeometry) {\n         this.hopGeometries[i] = CompactLineString.compactLineString(hopGeometry,false);\n     }\n \n+    /**\n+     * This will copy the geometry from another TripPattern to this one. It checks if each hop is\n+     * between the same stops before copying that hop geometry. If the stops are different, a\n+     * straight-line hop-geometry will be used instead.\n+     *\n+     * @param other TripPattern to copy geometry from\n+     */\n+    public void setHopGeometriesFromPreviousTripPattern(TripPattern other) {", "originalCommit": "9db4dff840021bb25db021e5a89e31e1999190db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7361e1ed44713895361344c098c80c72397cc0a5", "chunk": "diff --git a/src/main/java/org/opentripplanner/model/TripPattern.java b/src/main/java/org/opentripplanner/model/TripPattern.java\nindex e44f73a75..1be68c49e 100644\n--- a/src/main/java/org/opentripplanner/model/TripPattern.java\n+++ b/src/main/java/org/opentripplanner/model/TripPattern.java\n\n@@ -162,7 +162,7 @@ public class TripPattern extends TransitEntity<FeedScopedId> implements Cloneabl\n      *\n      * @param other TripPattern to copy geometry from\n      */\n-    public void setHopGeometriesFromPreviousTripPattern(TripPattern other) {\n+    public void setHopGeometriesFromPattern(TripPattern other) {\n         this.hopGeometries = new byte[this.getStops().size() - 1][];\n         for (int i = 0; i < other.getStops().size() - 1; i++) {\n             if (other.getHopGeometry(i) != null\n"}}, {"oid": "7361e1ed44713895361344c098c80c72397cc0a5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/7361e1ed44713895361344c098c80c72397cc0a5", "message": "Rename method setHopGeometriesFromPattern", "committedDate": "2020-03-03T12:30:15Z", "type": "commit"}, {"oid": "764b27682b6b4238ae84b6fdd39439e6476b298d", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/764b27682b6b4238ae84b6fdd39439e6476b298d", "message": "Annotate parameters in TripPatternCache and SiriTripPatternCache with NotNull", "committedDate": "2020-03-03T12:32:28Z", "type": "commit"}]}