{"pr_number": 3090, "pr_title": "Add endpoint fetcher for GBFS", "pr_createdAt": "2020-06-03T12:06:23Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090", "timeline": [{"oid": "62613c0788fa0209419bc511eec9eafd26478184", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/62613c0788fa0209419bc511eec9eafd26478184", "message": "Add endpoint fetcher for GBFS", "committedDate": "2020-06-03T12:02:50Z", "type": "commit"}, {"oid": "ce331a5a7deb64a63ae7bdae82e4dafa8fbdf6c9", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ce331a5a7deb64a63ae7bdae82e4dafa8fbdf6c9", "message": "Add documentaton", "committedDate": "2020-06-03T12:12:19Z", "type": "commit"}, {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/50f8abc2c4466c08690da09302e3f02b9e4d1819", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-11T09:40:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMDQzMg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438730432", "bodyText": "Line break", "author": "t2gran", "createdAt": "2020-06-11T11:56:31Z", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice\n+ */\n+public class GBFSUpdaterEndpointFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(GBFSUpdaterEndpointFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(String url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url);\n+      JsonNode node = (new ObjectMapper()).readTree(is);\n+      for (JsonNode operator : node.get(\"operators\")) {\n+        String network = operator.get(\"name\").asText();\n+        String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n+\n+        GbfsDataSource dataSource = new GbfsDataSource(updaterUrl, network);\n+        GbfsUpdaterSourceConfig gbfsUpdaterSourceConfig = new GbfsUpdaterSourceConfig(dataSource);\n+        BikeRentalParameters bikeRentalParameters = new BikeRentalParameters(\n+            gbfsUpdaterSourceConfig,\n+            updaterUrl,\n+            DEFAULT_FREQUENCY_SEC,\n+            network\n+        );\n+        LOG.info(\"Fetched updater info for {} at url {}\", network, updaterUrl);\n+\n+        GraphUpdater updater = new BikeRentalUpdater(bikeRentalParameters);\n+        updaters.add(updater);\n+      }\n+    }\n+    catch (java.io.IOException e) {\n+      LOG.warn(\n+          \"Error fetching list of bike rental endpoints from {}\", url);", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxMTc0MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438811740", "bodyText": "You are silently eating the exception, print at least the exception message in the log.", "author": "t2gran", "createdAt": "2020-06-11T14:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMDQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "b3491e22091f96444284aef1bc54ee408d428973", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\nindex ea5071a7e..732786c7e 100644\n--- a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n+++ b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n\n@@ -51,8 +51,7 @@ public class GBFSUpdaterEndpointFetcher {\n       }\n     }\n     catch (java.io.IOException e) {\n-      LOG.warn(\n-          \"Error fetching list of bike rental endpoints from {}\", url);\n+      LOG.warn(\"Error fetching list of bike rental endpoints from {}\", url, e);\n     }\n \n     LOG.info(\"{} updaters fetched\", updaters.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNTA4NQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438735085", "bodyText": "We try to avoid using the 'org.apache.commons' when possible, and here you can rewrite this as:\nprivate static final String GBFS_JSON_FILENAME = \"gbfs.json\";\n:\nreturn url.endsWith(GBFS_JSON_FILENAME)\n        ? url.substring(0, url.length() - GBFS_JSON_FILENAME.length())\n        : url;", "author": "t2gran", "createdAt": "2020-06-11T12:06:27Z", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice\n+ */\n+public class GBFSUpdaterEndpointFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(GBFSUpdaterEndpointFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(String url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url);\n+      JsonNode node = (new ObjectMapper()).readTree(is);\n+      for (JsonNode operator : node.get(\"operators\")) {\n+        String network = operator.get(\"name\").asText();\n+        String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n+\n+        GbfsDataSource dataSource = new GbfsDataSource(updaterUrl, network);\n+        GbfsUpdaterSourceConfig gbfsUpdaterSourceConfig = new GbfsUpdaterSourceConfig(dataSource);\n+        BikeRentalParameters bikeRentalParameters = new BikeRentalParameters(\n+            gbfsUpdaterSourceConfig,\n+            updaterUrl,\n+            DEFAULT_FREQUENCY_SEC,\n+            network\n+        );\n+        LOG.info(\"Fetched updater info for {} at url {}\", network, updaterUrl);\n+\n+        GraphUpdater updater = new BikeRentalUpdater(bikeRentalParameters);\n+        updaters.add(updater);\n+      }\n+    }\n+    catch (java.io.IOException e) {\n+      LOG.warn(\n+          \"Error fetching list of bike rental endpoints from {}\", url);\n+    }\n+\n+    LOG.info(\"{} updaters fetched\", updaters.size());\n+\n+    return updaters;\n+  }\n+\n+  /**\n+   * The GBFS standard defines \"gbfs.json\" as the entrypoint, while\n+   * {@link org.opentripplanner.updater.bike_rental.BikeRentalDataSource} expects the base url and\n+   * does not look at \"gbfs.json\". This method adjusts the URL to what the BikeRentalDataSource\n+   * expects.\n+   */\n+  private static String adjustUrlForUpdater(String url) {\n+    return url.endsWith(\"gbfs.json\")\n+        ? StringUtils.substring(url, 0, url.length() - 9)\n+        : url;\n+  }", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3491e22091f96444284aef1bc54ee408d428973", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\nindex ea5071a7e..732786c7e 100644\n--- a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n+++ b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n\n@@ -51,8 +51,7 @@ public class GBFSUpdaterEndpointFetcher {\n       }\n     }\n     catch (java.io.IOException e) {\n-      LOG.warn(\n-          \"Error fetching list of bike rental endpoints from {}\", url);\n+      LOG.warn(\"Error fetching list of bike rental endpoints from {}\", url, e);\n     }\n \n     LOG.info(\"{} updaters fetched\", updaters.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNjE2Mw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438736163", "bodyText": "Follow the Java package naming convention using only lowercase letters, no underscores.", "author": "t2gran", "createdAt": "2020-06-11T12:08:44Z", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3491e22091f96444284aef1bc54ee408d428973", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\nindex ea5071a7e..732786c7e 100644\n--- a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n+++ b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n\n@@ -51,8 +51,7 @@ public class GBFSUpdaterEndpointFetcher {\n       }\n     }\n     catch (java.io.IOException e) {\n-      LOG.warn(\n-          \"Error fetching list of bike rental endpoints from {}\", url);\n+      LOG.warn(\"Error fetching list of bike rental endpoints from {}\", url, e);\n     }\n \n     LOG.info(\"{} updaters fetched\", updaters.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNjg1Ng==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438736856", "bodyText": "Should be named GbfsDataSourceParameters ?", "author": "t2gran", "createdAt": "2020-06-11T12:10:14Z", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import org.opentripplanner.updater.bike_rental.GbfsBikeRentalDataSource;\n+\n+public class GbfsDataSource implements GbfsBikeRentalDataSource.Parameters {", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50b5ae1883bb0f07472d7a5ed59c0a43bce77a56", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java b/src/ext/java/org/opentripplanner/ext/updaterendpointfetcher/GbfsDataSource.java\nsimilarity index 89%\nrename from src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java\nrename to src/ext/java/org/opentripplanner/ext/updaterendpointfetcher/GbfsDataSource.java\nindex cf679cca7..3f786b702 100644\n--- a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java\n+++ b/src/ext/java/org/opentripplanner/ext/updaterendpointfetcher/GbfsDataSource.java\n\n@@ -1,4 +1,4 @@\n-package org.opentripplanner.ext.updater_endpoint_fetcher;\n+package org.opentripplanner.ext.updaterendpointfetcher;\n \n import org.opentripplanner.updater.bike_rental.GbfsBikeRentalDataSource;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438745581", "bodyText": "The url is configurable, ref that not our url.", "author": "t2gran", "createdAt": "2020-06-11T12:27:56Z", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NjgzOA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r439296838", "bodyText": "The endpoint url is configurable, but the component that provides the API is open source and located at that url. This is useful if someone else wants to set up their own bikeservice deployment.", "author": "gmellemstrand", "createdAt": "2020-06-12T08:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MjMyMA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441492320", "bodyText": "Sorry, missed the fact that this is pointing to the implementation, not the running service.", "author": "t2gran", "createdAt": "2020-06-17T12:02:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b3491e22091f96444284aef1bc54ee408d428973", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\nindex ea5071a7e..732786c7e 100644\n--- a/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n+++ b/src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java\n\n@@ -51,8 +51,7 @@ public class GBFSUpdaterEndpointFetcher {\n       }\n     }\n     catch (java.io.IOException e) {\n-      LOG.warn(\n-          \"Error fetching list of bike rental endpoints from {}\", url);\n+      LOG.warn(\"Error fetching list of bike rental endpoints from {}\", url, e);\n     }\n \n     LOG.info(\"{} updaters fetched\", updaters.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTI5Mw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438815293", "bodyText": "asURI(...)", "author": "t2gran", "createdAt": "2020-06-11T14:09:43Z", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeShareUpdaterEndpoint = adapter.asText(\n+            \"bikeShareUpdaterEndpoint\", null\n+        );", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d92bd5bde3cbc65b6efb726de88978d194ed7efc", "chunk": "diff --git a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\nindex c85fdcefd..21776227c 100644\n--- a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n+++ b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n\n@@ -44,7 +44,7 @@ public class RouterConfig implements Serializable {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n-        this.bikeShareUpdaterEndpoint = adapter.asText(\n+        this.bikeShareUpdaterEndpoint = adapter.asUri(\n             \"bikeShareUpdaterEndpoint\", null\n         );\n         this.transitConfig = new TransitRoutingConfig(adapter.path(\"transit\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTM1MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438815351", "bodyText": "private final URI gbfsBikeRentalServiceDirectory;", "author": "t2gran", "createdAt": "2020-06-11T14:09:48Z", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -31,6 +32,7 @@\n \n     private final String requestLogFile;\n     private final double streetRoutingTimeoutSeconds;\n+    private final String bikeShareUpdaterEndpoint;", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d92bd5bde3cbc65b6efb726de88978d194ed7efc", "chunk": "diff --git a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\nindex c85fdcefd..21776227c 100644\n--- a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n+++ b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n\n@@ -32,7 +32,7 @@ public class RouterConfig implements Serializable {\n \n     private final String requestLogFile;\n     private final double streetRoutingTimeoutSeconds;\n-    private final String bikeShareUpdaterEndpoint;\n+    private final URI bikeShareUpdaterEndpoint;\n     private final RoutingRequest routingRequestDefaults;\n     private final TransitRoutingConfig transitConfig;\n     private final UpdaterConfig updaterConfig;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438817172", "bodyText": "Can the gbfsBikeRentalServiceDirectory  part of the UpdaterConfig?", "author": "t2gran", "createdAt": "2020-06-11T14:12:17Z", "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "originalCommit": "50f8abc2c4466c08690da09302e3f02b9e4d1819", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODAzMA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r439298030", "bodyText": "It could, but the reason I decided to separate them was to keep router-config json loading completely separate from the reading of this endpoint.", "author": "gmellemstrand", "createdAt": "2020-06-12T09:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NzEzMg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441657132", "bodyText": "The routerConfig.getBikeShareUpdaterEndpoint() is just reading the config, not reading the endpoint. There is a mismatch here witch make people ask? Why do we need to pass in two config objects, when the UpdaterConfig exist as the \"All the GraphUpdaterConfigurator need to know\" role?", "author": "t2gran", "createdAt": "2020-06-17T16:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE0NzY0OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442147649", "bodyText": "It depends on whether we want to UpdaterConfig to have the role of reading all config from all sources, or the role of reading config from json specifically, as is stated in the javadoc.", "author": "gmellemstrand", "createdAt": "2020-06-18T11:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMjM5OA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442212398", "bodyText": "The bikeShareUpdaterEndpoint parameter is in the JSON file.", "author": "t2gran", "createdAt": "2020-06-18T13:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjU1Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442222557", "bodyText": "I see what you mean now. That method is reading the config, which is an endpoint, just for the configuration. I see that I already rename it to getBikeRentalServiceDirectoryUrl.", "author": "gmellemstrand", "createdAt": "2020-06-18T13:24:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a1229c03c922ac3e72e333460cc1fd80ef2b3b5f", "chunk": "diff --git a/src/main/java/org/opentripplanner/standalone/server/Router.java b/src/main/java/org/opentripplanner/standalone/server/Router.java\nindex 212c44941..c8de63570 100644\n--- a/src/main/java/org/opentripplanner/standalone/server/Router.java\n+++ b/src/main/java/org/opentripplanner/standalone/server/Router.java\n\n@@ -96,7 +96,7 @@ public class Router {\n         GraphUpdaterConfigurator.setupGraph(\n             this.graph,\n             routerConfig.updaterConfig(),\n-            routerConfig.getBikeShareUpdaterEndpoint()\n+            routerConfig.getBikeRentalServiceDirectoryUrl()\n         );\n \n         /* Compute ellipsoidToGeoidDifference for this Graph */\n"}}, {"oid": "b3491e22091f96444284aef1bc54ee408d428973", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b3491e22091f96444284aef1bc54ee408d428973", "message": "Log exception message", "committedDate": "2020-06-12T08:46:32Z", "type": "commit"}, {"oid": "c3d1ec8bab01e4c0418528e7411b9709c8115bac", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c3d1ec8bab01e4c0418528e7411b9709c8115bac", "message": "Avoid using apache commons", "committedDate": "2020-06-12T08:47:48Z", "type": "commit"}, {"oid": "50b5ae1883bb0f07472d7a5ed59c0a43bce77a56", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/50b5ae1883bb0f07472d7a5ed59c0a43bce77a56", "message": "Rename package to not use underscores", "committedDate": "2020-06-12T08:53:17Z", "type": "commit"}, {"oid": "9d6db34631fc83fc8f7be80a1ea0c35b9688a7ff", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9d6db34631fc83fc8f7be80a1ea0c35b9688a7ff", "message": "Rename GBFSDataSource to GBFSDataSourceParameters", "committedDate": "2020-06-12T08:54:01Z", "type": "commit"}, {"oid": "2191313227011393118049be20f5c7501d0539e2", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2191313227011393118049be20f5c7501d0539e2", "message": "Expanded javadoc", "committedDate": "2020-06-12T08:56:36Z", "type": "commit"}, {"oid": "d92bd5bde3cbc65b6efb726de88978d194ed7efc", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d92bd5bde3cbc65b6efb726de88978d194ed7efc", "message": "Use URI data type for endpoint config", "committedDate": "2020-06-12T09:34:47Z", "type": "commit"}, {"oid": "a1229c03c922ac3e72e333460cc1fd80ef2b3b5f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a1229c03c922ac3e72e333460cc1fd80ef2b3b5f", "message": "Rename to bikeRentalServiceDirectory", "committedDate": "2020-06-17T11:43:02Z", "type": "commit"}, {"oid": "e9444256ceaf9482bb8091ea368a5ab6a1bca07d", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e9444256ceaf9482bb8091ea368a5ab6a1bca07d", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-17T11:44:05Z", "type": "commit"}, {"oid": "124612b5544ece60fbdcad7d3e98f4fdc5f22441", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/124612b5544ece60fbdcad7d3e98f4fdc5f22441", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-17T12:06:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTU0OA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441495548", "bodyText": "Add a short javadoc to this method including that it configure a Sandbox feature.", "author": "t2gran", "createdAt": "2020-06-17T12:08:42Z", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -65,6 +70,10 @@ public double streetRoutingTimeoutSeconds() {\n         return streetRoutingTimeoutSeconds;\n     }\n \n+    public URI getBikeRentalServiceDirectoryUrl() {", "originalCommit": "124612b5544ece60fbdcad7d3e98f4fdc5f22441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76160af2495c0d7ec8ccda2d1a8c018d0e37ced1", "chunk": "diff --git a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\nindex 8f6c117c8..373ed5f88 100644\n--- a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n+++ b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n\n@@ -70,6 +70,10 @@ public class RouterConfig implements Serializable {\n         return streetRoutingTimeoutSeconds;\n     }\n \n+    /**\n+     * This is the endpoint url used for the BikeRentalServiceDirectory sandbox feature.\n+     * @see org.opentripplanner.ext.bikerentalservicedirectory.BikeRentalServiceDirectoryFetcher\n+     */\n     public URI getBikeRentalServiceDirectoryUrl() {\n         return bikeRentalServiceDirectoryUrl;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441496969", "bodyText": "This parameter need documentation in the Configuration.md - Not much, but clearly stated that it is a Sandbox feature.", "author": "t2gran", "createdAt": "2020-06-17T12:11:21Z", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeRentalServiceDirectoryUrl = adapter.asUri(\n+            \"bikeRentalServiceDirectoryUrl\", null\n+        );", "originalCommit": "124612b5544ece60fbdcad7d3e98f4fdc5f22441", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2NTQ0NQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441665445", "bodyText": "I added a config parameter for the TransmodelAPI today, this is how I did it:\nConfiguration.md:\n\ntransmodelApi | configure Entur Transmodel API (Sandbox) | object | null | See the code for parameters, no doc provided.\n\nThis allow us to add as many parametes as needed later, and the parameter is extracted in the RouterConfiglike this:\nthis.transmodelApiHideFeedId = adapter.path(\"transmodelApi\").asBoolean(\"hideFeedId\", false);\nI did not create a POJO for the one parameter - I will do that next time I add a new parameter, but the JSON structure account for such change.", "author": "t2gran", "createdAt": "2020-06-17T16:14:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE0MzU0Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442143547", "bodyText": "I have added documentation in Configuration.md for this now", "author": "gmellemstrand", "createdAt": "2020-06-18T10:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "chunk": "diff --git a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\nindex 8f6c117c8..326bf6d5a 100644\n--- a/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n+++ b/src/main/java/org/opentripplanner/standalone/config/RouterConfig.java\n\n@@ -44,12 +44,12 @@ public class RouterConfig implements Serializable {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n-        this.bikeRentalServiceDirectoryUrl = adapter.asUri(\n-            \"bikeRentalServiceDirectoryUrl\", null\n-        );\n         this.transitConfig = new TransitRoutingConfig(adapter.path(\"transit\"));\n         this.routingRequestDefaults = mapRoutingRequest(adapter.path(\"routingDefaults\"));\n-        this.updaterConfig = new UpdaterConfig(adapter.path(\"updaters\"));\n+        this.updaterParameters = new UpdaterConfig(\n+            adapter.path(\"updaters\"),\n+            adapter.asUri(\"bikeRentalServiceDirectoryUrl\", null)\n+        );\n \n         if(logUnusedParams) {\n             adapter.logAllUnusedParameters(LOG);\n"}}, {"oid": "76160af2495c0d7ec8ccda2d1a8c018d0e37ced1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/76160af2495c0d7ec8ccda2d1a8c018d0e37ced1", "message": "Documentation", "committedDate": "2020-06-17T12:27:16Z", "type": "commit"}, {"oid": "76160af2495c0d7ec8ccda2d1a8c018d0e37ced1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/76160af2495c0d7ec8ccda2d1a8c018d0e37ced1", "message": "Documentation", "committedDate": "2020-06-17T12:27:16Z", "type": "forcePushed"}, {"oid": "cdceeeb3dae2646a9f1495b4dc869d002ead2f43", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/cdceeeb3dae2646a9f1495b4dc869d002ead2f43", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-25T08:21:13Z", "type": "commit"}, {"oid": "d29aa8ba9931b7b1534e2ec647a04faa286c462b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d29aa8ba9931b7b1534e2ec647a04faa286c462b", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-25T09:11:46Z", "type": "commit"}, {"oid": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "message": "Extracted interface from UpdaterConfig and added getBikeRentalServiceDirectoryUrl to the interface", "committedDate": "2020-06-25T09:57:45Z", "type": "commit"}, {"oid": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "message": "Extracted interface from UpdaterConfig and added getBikeRentalServiceDirectoryUrl to the interface", "committedDate": "2020-06-25T09:57:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA5NjQ3NA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446096474", "bodyText": "FYI: The UpdaterDataSourceConfig is still a bit \"stange\", but not part of this PR. I might look at it later.", "author": "t2gran", "createdAt": "2020-06-26T10:15:00Z", "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/GbfsUpdaterSourceConfig.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.opentripplanner.ext.bikerentalservicedirectory;\n+\n+import org.opentripplanner.updater.UpdaterDataSourceConfig;\n+import org.opentripplanner.updater.UpdaterDataSourceParameters;\n+\n+public class GbfsUpdaterSourceConfig implements UpdaterDataSourceConfig {", "originalCommit": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwMjU3OA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446102578", "bodyText": "The boxing here is unnecessary - I will remove it.", "author": "t2gran", "createdAt": "2020-06-26T10:28:25Z", "path": "src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java", "diffHunk": "@@ -41,11 +41,17 @@\n \n     private static Logger LOG = LoggerFactory.getLogger(GraphUpdaterConfigurator.class);\n \n-    public static void setupGraph(Graph graph, UpdaterConfig updaterConfig) {\n+    public static void setupGraph(\n+        Graph graph,\n+        UpdaterParameters updaterParameters\n+    ) {\n \n-        List<GraphUpdater> updaters = new ArrayList<>();\n+        List<GraphUpdater> updaters = new ArrayList<>(createUpdatersFromConfig(updaterParameters));", "originalCommit": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe9a3093b263e393965ab16530cffc9d4398e836", "chunk": "diff --git a/src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java b/src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java\nindex baf3a90a9..710046e88 100644\n--- a/src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java\n+++ b/src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java\n\n@@ -39,19 +40,22 @@ import java.util.List;\n  */\n public abstract class GraphUpdaterConfigurator {\n \n-    private static Logger LOG = LoggerFactory.getLogger(GraphUpdaterConfigurator.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(GraphUpdaterConfigurator.class);\n \n     public static void setupGraph(\n         Graph graph,\n         UpdaterParameters updaterParameters\n     ) {\n+        List<GraphUpdater> updaters = new ArrayList<>();\n \n-        List<GraphUpdater> updaters = new ArrayList<>(createUpdatersFromConfig(updaterParameters));\n-\n-        if (updaterParameters.bikeRentalServiceDirectoryUrl() != null) {\n-            updaters.addAll(BikeRentalServiceDirectoryFetcher\n-                .createUpdatersFromEndpoint(updaterParameters.bikeRentalServiceDirectoryUrl()));\n-        }\n+        updaters.addAll(\n+            createUpdatersFromConfig(updaterParameters)\n+        );\n+        updaters.addAll(\n+            fetchBikeRentalServicesFromOnlineDirectory(\n+                updaterParameters.bikeRentalServiceDirectoryUrl()\n+            )\n+        );\n \n         setupUpdaters(graph, updaters);\n         GraphUpdaterManager updaterManager = new GraphUpdaterManager(graph, updaters);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwNzEyOQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446107129", "bodyText": "The getData method should be refactored to take in a type-safe argument when we have it. I will fix this.", "author": "t2gran", "createdAt": "2020-06-26T10:39:26Z", "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package org.opentripplanner.ext.bikerentalservicedirectory;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice, which is an API for aggregating GBFS endpoints.\n+ */\n+public class BikeRentalServiceDirectoryFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(BikeRentalServiceDirectoryFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  private static final String GBFS_JSON_FILENAME = \"gbfs.json\";\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(URI url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url.toString());", "originalCommit": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe9a3093b263e393965ab16530cffc9d4398e836", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java b/src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java\nindex 3461180e2..befa74d25 100644\n--- a/src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java\n+++ b/src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java\n\n@@ -32,8 +32,9 @@ public class BikeRentalServiceDirectoryFetcher {\n     List<GraphUpdater> updaters = new ArrayList<>();\n \n     try {\n-      InputStream is = HttpUtils.getData(url.toString());\n+      InputStream is = HttpUtils.getData(url);\n       JsonNode node = (new ObjectMapper()).readTree(is);\n+\n       for (JsonNode operator : node.get(\"operators\")) {\n         String network = operator.get(\"name\").asText();\n         String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n"}}, {"oid": "fe9a3093b263e393965ab16530cffc9d4398e836", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fe9a3093b263e393965ab16530cffc9d4398e836", "message": "Small code cleanups.", "committedDate": "2020-06-26T10:49:09Z", "type": "commit"}, {"oid": "8a2dd02198a1566a314a287a191f4557ba10c1b1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8a2dd02198a1566a314a287a191f4557ba10c1b1", "message": "Merge branch 'dev-2.x' into otp2_bikerental_endpoint", "committedDate": "2020-06-26T10:51:48Z", "type": "commit"}, {"oid": "5ec39a081ad871b5d2173f904af0907d668ded66", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5ec39a081ad871b5d2173f904af0907d668ded66", "message": "Small code cleanups - fix compilation error.", "committedDate": "2020-06-26T11:11:14Z", "type": "commit"}]}