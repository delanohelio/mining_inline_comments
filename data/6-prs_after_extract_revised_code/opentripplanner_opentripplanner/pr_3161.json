{"pr_number": 3161, "pr_title": "Change the itinerary filter order", "pr_createdAt": "2020-08-25T13:42:51Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161", "timeline": [{"oid": "73817848d0ff9bb77051c984b204813aaeb3f0ce", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/73817848d0ff9bb77051c984b204813aaeb3f0ce", "message": "Change the order of the filters so that the \"absolute\" filters are applied AFTER the \"group-by\" filters. This have the effect of removing even more none optimal itineraries.", "committedDate": "2020-08-25T13:34:13Z", "type": "commit"}, {"oid": "ee54a40002944b36727cf8d077f6840d2e814bad", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ee54a40002944b36727cf8d077f6840d2e814bad", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries", "committedDate": "2020-09-01T12:14:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMDg5OA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r481110898", "bodyText": "My idea was that we should filter out all itineraries which are sorted to be after the first one which does not depart within the search window. That way we are guaranteed to return no worse itineraries than that one, and requiring the new search to include the first one removed.", "author": "hannesj", "createdAt": "2020-09-01T12:47:51Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java", "diffHunk": "@@ -71,15 +91,6 @@ public ItineraryFilter build() {\n             }\n         }\n \n-        // Sort list on {@code groupByP} in ascending order to keep as many of the elements in the\n-        // groups where the grouping parameter is relaxed as possible.\n-        List<GroupBySimilarity> groupBy = parameters.groupBySimilarity().stream()\n-            .sorted(Comparator.comparingDouble(o -> o.groupByP))\n-            .collect(Collectors.toList());\n-\n-        for (GroupBySimilarity it : groupBy) {\n-            filters.add(new GroupBySimilarLegsFilter(it.groupByP, it.approximateMinLimit));\n-        }\n \n         // Sort itineraries\n         filters.add(new OtpDefaultSortOrder(parameters.arriveBy()));", "originalCommit": "ee54a40002944b36727cf8d077f6840d2e814bad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2ODg3Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482068877", "bodyText": "Discussed ver Slack, no need to do this now.", "author": "hannesj", "createdAt": "2020-09-02T13:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMDg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "9e48b7eaf80bc0358018544d88b058e52843cb79", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java b/src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java\nindex 7d1252a83..0a35313af 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java\n\n@@ -91,21 +104,9 @@ public class ItineraryFilterChainBuilder {\n             }\n         }\n \n-\n-        // Sort itineraries\n+        // Do the final itineraries sort\n         filters.add(new OtpDefaultSortOrder(parameters.arriveBy()));\n \n-        // Remove itineraries if max limit is set\n-        if (parameters.maxNumberOfItineraries() > 0) {\n-            filters.add(\n-                new MaxLimitFilter(\n-                    \"number-of-itineraries-filter\",\n-                    parameters.maxNumberOfItineraries(),\n-                    maxLimitReachedSubscriber\n-                )\n-            );\n-        }\n-\n         if(parameters.debug()) {\n             filters = addDebugWrappers(filters);\n         }\n"}}, {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8f11c3a9085f34d539078bef18594e5f2d3b9f05", "message": "* Code cleanup - Make Leg in OTP domain reference other domain objetcts like Trip, Route and Agency - instead of copying fields which create unnecessary code and potential errors.\n* Bugfix - Transmodel API Line situations would fail hard if loaded(Class cast exception).", "committedDate": "2020-09-02T15:24:30Z", "type": "commit"}, {"oid": "bac493569cb82dbb7b09f731c4335c4b4c37399c", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bac493569cb82dbb7b09f731c4335c4b4c37399c", "message": "Buffix - Leg#isPartiallySameTransitLeg() fails for the same trip on different service dates. To lags are not the same if they are scheduled on different days.", "committedDate": "2020-09-02T15:42:27Z", "type": "commit"}, {"oid": "9e48b7eaf80bc0358018544d88b058e52843cb79", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9e48b7eaf80bc0358018544d88b058e52843cb79", "message": "Bugfix - Apply the \"number-of-itineraries-filter\" BEFORE the \"latest-departure-time-limit\" filter. All filters that prune the set based on other itineraries should be run before \"absolute\" filters witch only look at each itinerary individually.", "committedDate": "2020-09-02T15:59:00Z", "type": "commit"}, {"oid": "f0878fb57b213b2b269685db482779d739114eb1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f0878fb57b213b2b269685db482779d739114eb1", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries", "committedDate": "2020-09-02T16:01:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNDcyMw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482834723", "bodyText": "getTrip might cause NPE", "author": "hannesj", "createdAt": "2020-09-03T09:21:11Z", "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -2018,23 +2018,13 @@ public GraphQLObjectType createPlanType(\n                         .name(\"authority\")\n                         .description(\"For ride legs, the service authority used for this legs. For non-ride legs, null.\")\n                         .type(authorityType)\n-                        .dataFetcher(environment -> {\n-                          return GqlUtil.getRoutingService(environment)\n-                              .getAgencyForId(((Leg) environment.getSource()).agencyId);\n-                        })\n+                        .dataFetcher(environment -> ((Leg) environment.getSource()).getAgency())\n                         .build())\n                 .field(GraphQLFieldDefinition.newFieldDefinition()\n                         .name(\"operator\")\n                         .description(\"For ride legs, the operator used for this legs. For non-ride legs, null.\")\n                         .type(operatorType)\n-                        .dataFetcher(\n-                                environment -> {\n-                                    FeedScopedId tripId = ((Leg) environment.getSource()).tripId;\n-                                  return tripId == null ? null : GqlUtil\n-                                      .getRoutingService(environment)\n-                                        .getTripForId().get(tripId).getOperator();\n-                                }\n-                        )\n+                        .dataFetcher(environment -> ((Leg) environment.getSource()).getTrip().getOperator())", "originalCommit": "8f11c3a9085f34d539078bef18594e5f2d3b9f05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNTU0MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482835541", "bodyText": "Check if this is a transit leg?", "author": "hannesj", "createdAt": "2020-09-03T09:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNDcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "5ae9f9a216c28f7638edfb04160486b29d645a43", "chunk": "diff --git a/src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java b/src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java\nindex 1469d0475..6d7559fce 100644\n--- a/src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java\n+++ b/src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java\n\n@@ -2024,7 +2016,7 @@ public class TransmodelGraphQLSchema {\n                         .name(\"operator\")\n                         .description(\"For ride legs, the operator used for this legs. For non-ride legs, null.\")\n                         .type(operatorType)\n-                        .dataFetcher(environment -> ((Leg) environment.getSource()).getTrip().getOperator())\n+                        .dataFetcher(environment -> ((Leg) environment.getSource()).getOperator())\n                         .build())\n                 .field(GraphQLFieldDefinition.newFieldDefinition()\n                         .name(\"realtime\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzODU2NQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482838565", "bodyText": "These are missing", "author": "hannesj", "createdAt": "2020-09-03T09:27:07Z", "path": "src/main/java/org/opentripplanner/api/mapping/LegMapper.java", "diffHunk": "@@ -55,22 +55,35 @@ public ApiLeg mapLeg(Leg domain, Calendar arrivalTimeFromPlace, Calendar departu\n         api.distance = domain.distanceMeters;\n         api.pathway = domain.pathway;\n         api.mode = TraverseModeMapper.mapToApi(domain.mode);\n-        api.transitLeg = domain.mode == null ? null : domain.mode.isTransit();\n-        api.route = domain.route;\n-        api.agencyName = domain.agencyName;\n-        api.agencyUrl = domain.agencyUrl;\n-        api.agencyBrandingUrl = domain.agencyBrandingUrl;", "originalCommit": "8f11c3a9085f34d539078bef18594e5f2d3b9f05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ae9f9a216c28f7638edfb04160486b29d645a43", "chunk": "diff --git a/src/main/java/org/opentripplanner/api/mapping/LegMapper.java b/src/main/java/org/opentripplanner/api/mapping/LegMapper.java\nindex 9dbb67fab..4f527e8b9 100644\n--- a/src/main/java/org/opentripplanner/api/mapping/LegMapper.java\n+++ b/src/main/java/org/opentripplanner/api/mapping/LegMapper.java\n\n@@ -62,6 +62,8 @@ public class LegMapper {\n             var agency = domain.getAgency();\n             api.agencyId = FeedScopedIdMapper.mapToApi(agency.getId());\n             api.agencyName = agency.getName();\n+            api.agencyUrl = agency.getUrl();\n+            api.agencyBrandingUrl = agency.getBrandingUrl();\n \n             var route = domain.getRoute();\n             api.route = route.getLongName();\n"}}, {"oid": "5ae9f9a216c28f7638edfb04160486b29d645a43", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5ae9f9a216c28f7638edfb04160486b29d645a43", "message": "Review fixes - Add a null-safe Leg#getOperator and add back mapping of agencyUrl and agencyBrandingUrl.", "committedDate": "2020-09-03T12:37:06Z", "type": "commit"}, {"oid": "09ab141c77c041ce3ca9e734614781408e909d6b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/09ab141c77c041ce3ca9e734614781408e909d6b", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries", "committedDate": "2020-09-03T12:38:27Z", "type": "commit"}]}