{"pr_number": 3237, "pr_title": "Fix TransitLayerUpdater bug", "pr_createdAt": "2020-11-09T14:46:21Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3237", "timeline": [{"oid": "be861a78e473a74449a820e0e994ecbc11bc807f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/be861a78e473a74449a820e0e994ecbc11bc807f", "message": "Account for new TripPatternForDate indexing structure in TransitLayerUpdater", "committedDate": "2020-11-10T07:57:20Z", "type": "commit"}, {"oid": "be861a78e473a74449a820e0e994ecbc11bc807f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/be861a78e473a74449a820e0e994ecbc11bc807f", "message": "Account for new TripPatternForDate indexing structure in TransitLayerUpdater", "committedDate": "2020-11-10T07:57:20Z", "type": "forcePushed"}, {"oid": "5bbba6972879dba0ecd0fe712d68447509ff0242", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5bbba6972879dba0ecd0fe712d68447509ff0242", "message": "Keep a cache of TripPatternsForDate by running date to improve performance", "committedDate": "2020-11-10T13:37:28Z", "type": "commit"}, {"oid": "0be22333f4780807b07acb2688be612bc299a122", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0be22333f4780807b07acb2688be612bc299a122", "message": "clean code: Fixed formating and removed unused method.", "committedDate": "2020-11-18T09:58:05Z", "type": "commit"}, {"oid": "65ca2728cd321f089c4aa8e095e16e42a0055e05", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/65ca2728cd321f089c4aa8e095e16e42a0055e05", "message": "Merge branch 'dev-2.x' into otp2_fix_transitlayerupdater_bug", "committedDate": "2020-11-18T14:03:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMjY4Ng==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3237#discussion_r526112686", "bodyText": "Introduction of the expression \"RunningPeriodDate\" may be confusing to readers. A simpler name like TripPatternsRunningOnDate or TripPatternsRunningByDate might be better, and still contrast with TripPatternsByDate which would index them by their \"time zero reference\" date.", "author": "abyrd", "createdAt": "2020-11-18T14:06:31Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TransitLayer.java", "diffHunk": "@@ -2,21 +2,23 @@\n \n import org.opentripplanner.model.Stop;\n \n+import javax.annotation.Nullable;\n import java.time.LocalDate;\n import java.time.ZoneId;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n \n public class TransitLayer {\n \n   /**\n-   * Transit data required for routing\n+   * Transit data required for routing, indexed by each local date(Graph TimeZone) it runs through.\n+   * A Trip \"runs through\" a date if any of its arrivals or depatures is happening on that date.\n    */\n-  private final HashMap<LocalDate, List<TripPatternForDate>> tripPatternsForDate;\n+  private final HashMap<LocalDate, List<TripPatternForDate>> tripPatternsByRunningPeriodDate;", "originalCommit": "65ca2728cd321f089c4aa8e095e16e42a0055e05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMzI0MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3237#discussion_r526113240", "bodyText": "Also, is there any reason to use a HashMap instead of a Guava Multimap?", "author": "abyrd", "createdAt": "2020-11-18T14:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMjY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU4MjI3NA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3237#discussion_r527582274", "bodyText": "I changed the name to tripPatternsRunningOnDate. When it comes to Multimaps I prefer using the Java Map<,List|Set> if I don't need the extra functionality provided by the Guava version. I have often seen the wrong guava version used (set/list), and with the common super type Multimap it is not always easy to see. Being consistent is also good, so it is pros and cons. This is not important to me, so I will follow whatever we decide.", "author": "t2gran", "createdAt": "2020-11-20T10:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMjY4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2c214afcc535198cc93c1306d18ef211deab74c1", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TransitLayer.java b/src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TransitLayer.java\nindex 9bc738478..e10194e7d 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TransitLayer.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TransitLayer.java\n\n@@ -16,9 +16,9 @@ public class TransitLayer {\n \n   /**\n    * Transit data required for routing, indexed by each local date(Graph TimeZone) it runs through.\n-   * A Trip \"runs through\" a date if any of its arrivals or depatures is happening on that date.\n+   * A Trip \"runs through\" a date if any of its arrivals or departures is happening on that date.\n    */\n-  private final HashMap<LocalDate, List<TripPatternForDate>> tripPatternsByRunningPeriodDate;\n+  private final HashMap<LocalDate, List<TripPatternForDate>> tripPatternsRunningOnDate;\n \n   /**\n    * Index of outer list is from stop index, inner list index has no specific meaning. To stop index\n"}}, {"oid": "d0822b7682c388c72779475269ec9ca61d742fef", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d0822b7682c388c72779475269ec9ca61d742fef", "message": "Merge branch 'dev-2.x' into otp2_fix_transitlayerupdater_bug", "committedDate": "2020-11-19T15:56:01Z", "type": "commit"}, {"oid": "2c214afcc535198cc93c1306d18ef211deab74c1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2c214afcc535198cc93c1306d18ef211deab74c1", "message": "Clean code: Rename `tripPatternsByRunningPeriodDate` to `tripPatternsRunningOnDate`.", "committedDate": "2020-11-20T11:08:49Z", "type": "commit"}]}