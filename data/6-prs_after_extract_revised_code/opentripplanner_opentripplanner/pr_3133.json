{"pr_number": 3133, "pr_title": "Return OUTSIDE_SERVICE_PERIOD for transit trips outside the data validity", "pr_createdAt": "2020-07-07T09:46:55Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3133", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5ODA3MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3133#discussion_r462998070", "bodyText": "Use List.of(...) and not Collections.singletonList(...). I know you just copied the code, so maybe update the existing code as well. This is an old code smell, but to make OTP a better place we try to improve a little for every PR.", "author": "t2gran", "createdAt": "2020-07-30T13:32:08Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -96,6 +96,12 @@ public RoutingResponse route(Router router) {\n         request.setRoutingContext(router.graph);\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n+        if (!router.graph.transitFeedCovers(request.dateTime)) {\n+            throw new RoutingValidationException(Collections.singletonList(", "originalCommit": "24b6d16d16bbacbff56654ddcd2bdde9e4dc8926", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50d03b63fae57e79c2334d9b6eefc8b95c40bf64", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\nindex a0ad006f0..ef4547ce1 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n\n@@ -97,8 +97,8 @@ public class RoutingWorker {\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n         if (!router.graph.transitFeedCovers(request.dateTime)) {\n-            throw new RoutingValidationException(Collections.singletonList(\n-                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, null)\n+            throw new RoutingValidationException(List.of(\n+                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, InputField.DATE_TIME)\n             ));\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMjY3NA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3133#discussion_r463002674", "bodyText": "This error is because the request.dateTime is outside the service period, so we should return a constant(enum) for that even if it is just one possibility. Add DATE_TIME to InputField and call the constructor of RoutingError with that.", "author": "t2gran", "createdAt": "2020-07-30T13:39:06Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -96,6 +96,12 @@ public RoutingResponse route(Router router) {\n         request.setRoutingContext(router.graph);\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n+        if (!router.graph.transitFeedCovers(request.dateTime)) {\n+            throw new RoutingValidationException(Collections.singletonList(\n+                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, null)", "originalCommit": "24b6d16d16bbacbff56654ddcd2bdde9e4dc8926", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50d03b63fae57e79c2334d9b6eefc8b95c40bf64", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\nindex a0ad006f0..ef4547ce1 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n\n@@ -97,8 +97,8 @@ public class RoutingWorker {\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n         if (!router.graph.transitFeedCovers(request.dateTime)) {\n-            throw new RoutingValidationException(Collections.singletonList(\n-                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, null)\n+            throw new RoutingValidationException(List.of(\n+                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, InputField.DATE_TIME)\n             ));\n         }\n \n"}}, {"oid": "50d03b63fae57e79c2334d9b6eefc8b95c40bf64", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/50d03b63fae57e79c2334d9b6eefc8b95c40bf64", "message": "Return OUTSIDE_SERVICE_PERIOD for transit trips outside the data validity", "committedDate": "2020-08-02T20:16:55Z", "type": "forcePushed"}, {"oid": "892e37e95c55f6abba4bcaafa2e0c1a9cc46201d", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/892e37e95c55f6abba4bcaafa2e0c1a9cc46201d", "message": "Return OUTSIDE_SERVICE_PERIOD for transit trips outside the data validity", "committedDate": "2020-08-10T11:47:53Z", "type": "commit"}, {"oid": "892e37e95c55f6abba4bcaafa2e0c1a9cc46201d", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/892e37e95c55f6abba4bcaafa2e0c1a9cc46201d", "message": "Return OUTSIDE_SERVICE_PERIOD for transit trips outside the data validity", "committedDate": "2020-08-10T11:47:53Z", "type": "forcePushed"}]}