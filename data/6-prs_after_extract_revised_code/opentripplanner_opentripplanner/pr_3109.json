{"pr_number": 3109, "pr_title": "Move debug timing to RoutingWorker and adapt to OTP2 routing phases", "pr_createdAt": "2020-06-23T07:30:25Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3109", "timeline": [{"oid": "2a5a93c5bf5fa1bdb7d4896083adaae501c450c7", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2a5a93c5bf5fa1bdb7d4896083adaae501c450c7", "message": "Documentation", "committedDate": "2020-06-23T07:38:16Z", "type": "forcePushed"}, {"oid": "8c1e665c459cb8b14ca7c778a3687ed43e28e07a", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8c1e665c459cb8b14ca7c778a3687ed43e28e07a", "message": "Documentation", "committedDate": "2020-06-23T07:42:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyOTUwMA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3109#discussion_r445529500", "bodyText": "This could be final", "author": "t2gran", "createdAt": "2020-06-25T12:46:01Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -49,6 +50,9 @@\n \n     private final RaptorService<TripSchedule> raptorService;\n \n+    /** An object that accumulates profiling and debugging info for inclusion in the response. */\n+    public DebugOutput debugOutput = new DebugOutput();", "originalCommit": "7f1248ebb486f10022e33595d2524072692f2cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d2ed0de91944d1a81148579a2db888aedf457886", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\nindex f1cdb9a04..3dbcc8bba 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n\n@@ -51,7 +51,7 @@ public class RoutingWorker {\n     private final RaptorService<TripSchedule> raptorService;\n \n     /** An object that accumulates profiling and debugging info for inclusion in the response. */\n-    public DebugOutput debugOutput = new DebugOutput();\n+    public final DebugAggregator debugAggregator = new DebugAggregator();\n \n     private final RoutingRequest request;\n     private Instant filterOnLatestDepartureTime = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMjA4MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3109#discussion_r445532080", "bodyText": "We should probably encapsulate the timing into the DebugOutput class. The debug log statement can be removed , I forgot to take it away after making sure the itineraries filtering is not using any time. We could also move the logging inside the DebugOutput, so turning that logger on/off will give you performance logging. Also, maybe split the DebugOutput into a Service (DebugAggregator) and a DTO DebugOutput.", "author": "t2gran", "createdAt": "2020-06-25T12:50:26Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -111,22 +124,24 @@ public RoutingResponse route(Router router) {\n                 request.rctx.bannedRoutes,\n                 request.walkSpeed\n         );\n-        LOG.debug(\"Filtering tripPatterns took {} ms\", System.currentTimeMillis() - startTime);\n+        long tripPatternFilterTime = System.currentTimeMillis() - startTime;\n+        this.debugOutput.transitRouterTimes.tripPatternFilterTime = tripPatternFilterTime;", "originalCommit": "7f1248ebb486f10022e33595d2524072692f2cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5d05b004256a8b82e10ed42cf420bc3ed8dfdb7", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\nindex f1cdb9a04..325cb29db 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java\n\n@@ -124,24 +124,22 @@ public class RoutingWorker {\n                 request.rctx.bannedRoutes,\n                 request.walkSpeed\n         );\n-        long tripPatternFilterTime = System.currentTimeMillis() - startTime;\n-        this.debugOutput.transitRouterTimes.tripPatternFilterTime = tripPatternFilterTime;\n-        LOG.debug(\"Filtering tripPatterns took {} ms\", tripPatternFilterTime);\n+        LOG.debug(\"Filtering tripPatterns took {} ms\", System.currentTimeMillis() - startTime);\n \n         /* Prepare access/egress transfers */\n \n-        long startTimeAccessEgress = System.currentTimeMillis();\n+        double startTimeAccessEgress = System.currentTimeMillis();\n \n         Collection<AccessEgress> accessTransfers = AccessEgressRouter.streetSearch(request, false, 2000, transitLayer.getStopIndex());\n         Collection<AccessEgress> egressTransfers = AccessEgressRouter.streetSearch(request, true, 2000, transitLayer.getStopIndex());\n \n-        long accessEgressTime = System.currentTimeMillis() - startTimeAccessEgress;\n-        this.debugOutput.transitRouterTimes.accessEgressTime = accessEgressTime;\n-        LOG.debug(\"Access/egress routing took {} ms\", accessEgressTime);\n+        LOG.debug(\"Access/egress routing took {} ms\",\n+                System.currentTimeMillis() - startTimeAccessEgress\n+        );\n         verifyEgressAccess(accessTransfers, egressTransfers);\n \n         // Prepare transit search\n-        long startTimeRouting = System.currentTimeMillis();\n+        double startTimeRouting = System.currentTimeMillis();\n         RaptorRequest<TripSchedule> raptorRequest = RaptorRequestMapper.mapRequest(\n                 request,\n                 requestTransitDataProvider.getStartOfTime(),\n"}}, {"oid": "f5d05b004256a8b82e10ed42cf420bc3ed8dfdb7", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f5d05b004256a8b82e10ed42cf420bc3ed8dfdb7", "message": "Move timing debug to RoutingWorker", "committedDate": "2020-07-06T11:16:04Z", "type": "commit"}, {"oid": "fe09c25412b58e2e599e0fbbe276a5340717b00a", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fe09c25412b58e2e599e0fbbe276a5340717b00a", "message": "move time to variables", "committedDate": "2020-07-06T11:16:04Z", "type": "commit"}, {"oid": "c1266368a663ed78dddbf75a652cc3cfb6c57e63", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c1266368a663ed78dddbf75a652cc3cfb6c57e63", "message": "Documentation", "committedDate": "2020-07-06T11:16:42Z", "type": "commit"}, {"oid": "d2ed0de91944d1a81148579a2db888aedf457886", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d2ed0de91944d1a81148579a2db888aedf457886", "message": "Split DebugOutput into service and DTO classes", "committedDate": "2020-07-06T11:16:42Z", "type": "commit"}, {"oid": "d2ed0de91944d1a81148579a2db888aedf457886", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d2ed0de91944d1a81148579a2db888aedf457886", "message": "Split DebugOutput into service and DTO classes", "committedDate": "2020-07-06T11:16:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NDQ3Mw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3109#discussion_r462964473", "bodyText": "Need JavaDoc", "author": "t2gran", "createdAt": "2020-07-30T12:36:40Z", "path": "src/main/java/org/opentripplanner/api/resource/TransitTimingOutput.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.opentripplanner.api.resource;\n+\n+public class TransitTimingOutput {", "originalCommit": "d2ed0de91944d1a81148579a2db888aedf457886", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4e836dd503cdcf215657b0f032e1aa404669bc5", "chunk": "diff --git a/src/main/java/org/opentripplanner/api/resource/TransitTimingOutput.java b/src/main/java/org/opentripplanner/api/resource/TransitTimingOutput.java\nindex 9a97d2c06..b778b03d0 100644\n--- a/src/main/java/org/opentripplanner/api/resource/TransitTimingOutput.java\n+++ b/src/main/java/org/opentripplanner/api/resource/TransitTimingOutput.java\n\n@@ -1,9 +1,29 @@\n package org.opentripplanner.api.resource;\n \n+/**\n+ * Holds information to be included in the REST Response for debugging and profiling purposes of a\n+ * single transit routing search.\n+ */\n public class TransitTimingOutput {\n+\n+    /**\n+     * Time taken for the initialization of the raptor router in milliseconds.\n+     */\n     public final long tripPatternFilterTime;\n+\n+    /**\n+     * Time taken for the access and egress routing in milliseconds.\n+     */\n     public final long accessEgressTime;\n+\n+    /**\n+     * Time taken for the raptor search in milliseconds.\n+     */\n     public final long raptorSearchTime;\n+\n+    /**\n+     * Time taken for mapping from the raptor paths to itinerary objects in milliseconds.\n+     */\n     public final long itineraryCreationTime;\n \n     public TransitTimingOutput(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NTM4MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3109#discussion_r462965381", "bodyText": "JavaDoc", "author": "t2gran", "createdAt": "2020-07-30T12:38:27Z", "path": "src/main/java/org/opentripplanner/routing/framework/DebugAggregator.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package org.opentripplanner.routing.framework;\n+\n+import org.opentripplanner.api.resource.DebugOutput;\n+import org.opentripplanner.api.resource.TransitTimingOutput;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DebugAggregator {", "originalCommit": "d2ed0de91944d1a81148579a2db888aedf457886", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4e836dd503cdcf215657b0f032e1aa404669bc5", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/framework/DebugAggregator.java b/src/main/java/org/opentripplanner/routing/framework/DebugAggregator.java\nindex 8c9187c42..f90dd166f 100644\n--- a/src/main/java/org/opentripplanner/routing/framework/DebugAggregator.java\n+++ b/src/main/java/org/opentripplanner/routing/framework/DebugAggregator.java\n\n@@ -5,6 +5,10 @@ import org.opentripplanner.api.resource.TransitTimingOutput;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+/**\n+ * Keeps account of timing information within the different parts of the routing process, and is\n+ * responsible of logging that information.\n+ */\n public class DebugAggregator {\n   private static final Logger LOG = LoggerFactory.getLogger(DebugAggregator.class);\n \n"}}, {"oid": "745adcb2a5ec81b69c96aeb4cd7a6842c3ca75c2", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/745adcb2a5ec81b69c96aeb4cd7a6842c3ca75c2", "message": "Merge branch 'dev-2.x' of github.com:opentripplanner/OpenTripPlanner into debug-output", "committedDate": "2020-08-04T11:19:37Z", "type": "commit"}, {"oid": "d4e836dd503cdcf215657b0f032e1aa404669bc5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d4e836dd503cdcf215657b0f032e1aa404669bc5", "message": "Add javadoc", "committedDate": "2020-08-04T11:56:53Z", "type": "commit"}]}