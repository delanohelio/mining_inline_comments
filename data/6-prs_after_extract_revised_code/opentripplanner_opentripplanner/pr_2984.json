{"pr_number": 2984, "pr_title": "Use Raptor calculation of leg start/end times", "pr_createdAt": "2020-02-24T13:44:57Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2984", "timeline": [{"oid": "3c25e9d336165df833f1d9312859b163a5bf4907", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3c25e9d336165df833f1d9312859b163a5bf4907", "message": "Use Raptor calculation of leg start/end times even if they differ from AStar calculation", "committedDate": "2020-02-25T14:41:48Z", "type": "commit"}, {"oid": "3c25e9d336165df833f1d9312859b163a5bf4907", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3c25e9d336165df833f1d9312859b163a5bf4907", "message": "Use Raptor calculation of leg start/end times even if they differ from AStar calculation", "committedDate": "2020-02-25T14:41:48Z", "type": "forcePushed"}, {"oid": "40f6dad277f20c3739afa159367c7513a92bde60", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/40f6dad277f20c3739afa159367c7513a92bde60", "message": "Merge branch 'dev-2.x' into negative_wait_times_bug_fix", "committedDate": "2020-02-25T18:24:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0ODI5Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2984#discussion_r384048297", "bodyText": "We do not use assert, it need to be enabled by a command line switch, which rarely is used. You can do a if(...) { throw new IllegalArgumentException(\"<message>\"); } instead.\nI personally like programing by contract, so feel free to promote this to become part of the coding guidelines, but until then we should not use it.", "author": "t2gran", "createdAt": "2020-02-25T18:35:37Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/RaptorPathToItineraryMapper.java", "diffHunk": "@@ -291,7 +291,9 @@ private void mapNonTransitLeg(List<Leg> legs, PathLeg<TripSchedule> pathLeg, Tra\n                 // TODO OTP2 We use the duration initially calculated for use during routing\n                 //      because they do not always match up and we risk getting negative wait times\n                 //      (#2955)\n-                subItinerary.nonTransitTimeSeconds = pathLeg.duration();\n+                assert(subItinerary.legs.size() == 1);", "originalCommit": "40f6dad277f20c3739afa159367c7513a92bde60", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "731532ee35516fa91078ee0f32768ee914d666a8", "chunk": "diff --git a/src/main/java/org/opentripplanner/routing/algorithm/mapping/RaptorPathToItineraryMapper.java b/src/main/java/org/opentripplanner/routing/algorithm/mapping/RaptorPathToItineraryMapper.java\nindex bf4297e73..9644e9158 100644\n--- a/src/main/java/org/opentripplanner/routing/algorithm/mapping/RaptorPathToItineraryMapper.java\n+++ b/src/main/java/org/opentripplanner/routing/algorithm/mapping/RaptorPathToItineraryMapper.java\n\n@@ -291,7 +291,9 @@ public class RaptorPathToItineraryMapper {\n                 // TODO OTP2 We use the duration initially calculated for use during routing\n                 //      because they do not always match up and we risk getting negative wait times\n                 //      (#2955)\n-                assert(subItinerary.legs.size() == 1);\n+                if (subItinerary.legs.size() != 1) {\n+                    throw new IllegalArgumentException(\"Sub itineraries should only contain one leg.\");\n+                }\n                 subItinerary.legs.get(0).startTime = createCalendar(pathLeg.fromTime());\n                 subItinerary.legs.get(0).endTime = createCalendar(pathLeg.toTime());\n \n"}}, {"oid": "731532ee35516fa91078ee0f32768ee914d666a8", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/731532ee35516fa91078ee0f32768ee914d666a8", "message": "Throw exception if subitinerary does not contain exactly 1 leg", "committedDate": "2020-02-26T08:21:38Z", "type": "commit"}]}