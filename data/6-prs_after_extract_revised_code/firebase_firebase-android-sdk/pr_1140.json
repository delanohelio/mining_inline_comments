{"pr_number": 1140, "pr_title": "Check for mandatory Firebase Options.", "pr_createdAt": "2020-01-16T22:19:37Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1140", "timeline": [{"oid": "205bb98b59b009ddb535525d638e0932ffc80b57", "url": "https://github.com/firebase/firebase-android-sdk/commit/205bb98b59b009ddb535525d638e0932ffc80b57", "message": "Check for manadatory FirebaseOptions.", "committedDate": "2020-01-16T22:15:49Z", "type": "commit"}, {"oid": "385a0fc54526a54946e78dec6d2fecb7198af63c", "url": "https://github.com/firebase/firebase-android-sdk/commit/385a0fc54526a54946e78dec6d2fecb7198af63c", "message": "Check for manadatory FirebaseOptions.", "committedDate": "2020-01-16T22:18:21Z", "type": "commit"}, {"oid": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "url": "https://github.com/firebase/firebase-android-sdk/commit/32ebb26590605d9de74b71ce3feecb7ca729c38e", "message": "Merge branch 'fis_fallback' of github.com:firebase/firebase-android-sdk into fis_fallback", "committedDate": "2020-01-16T22:18:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MDY3Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367680673", "bodyText": "I recommend avoiding to mention Sender-ID in public documentation, because it is only an internal fall-back mechanism for us.\nFeel free to describe in (Java) code-comments.", "author": "andirayo", "createdAt": "2020-01-16T22:21:24Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -107,12 +107,21 @@\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and {@link\n-   * FirebaseOptions#getProjectId()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n+   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.", "originalCommit": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex a1db094c..7cef16b6 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -107,19 +108,20 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n-   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()}, {@link\n+   * FirebaseOptions#getApplicationId()} , and ({@link FirebaseOptions#getProjectId()} are not null\n+   * or empty.\n    */\n   private void preConditionChecks() {\n-    Preconditions.checkNotNull(getApplicationId());\n-    Preconditions.checkNotNull(getProjectIdentifier());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n+    Preconditions.checkNotEmpty(getApplicationId());\n+    Preconditions.checkNotEmpty(getProjectIdentifier());\n+    Preconditions.checkNotEmpty(getApiKey());\n   }\n \n-  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  /** Returns the Project Id or Project Number for the Firebase Project. */\n   @Nullable\n   String getProjectIdentifier() {\n-    return firebaseApp.getOptions().getProjectId() == null\n+    return TextUtils.isEmpty(firebaseApp.getOptions().getProjectId())\n         ? firebaseApp.getOptions().getGcmSenderId()\n         : firebaseApp.getOptions().getProjectId();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MDk1NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367680955", "bodyText": "How about checkNotEmpty?\nReason: If the value is set to \"\" it doesn't help us either.", "author": "andirayo", "createdAt": "2020-01-16T22:22:11Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -107,12 +107,21 @@\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and {@link\n-   * FirebaseOptions#getProjectId()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n+   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n    */\n   private void preConditionChecks() {\n+    Preconditions.checkNotNull(getApplicationId());\n+    Preconditions.checkNotNull(getProjectIdentifier());", "originalCommit": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY5OTQ1Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367699453", "bodyText": "Done.", "author": "ankitaj224", "createdAt": "2020-01-16T23:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MDk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex a1db094c..7cef16b6 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -107,19 +108,20 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n-   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()}, {@link\n+   * FirebaseOptions#getApplicationId()} , and ({@link FirebaseOptions#getProjectId()} are not null\n+   * or empty.\n    */\n   private void preConditionChecks() {\n-    Preconditions.checkNotNull(getApplicationId());\n-    Preconditions.checkNotNull(getProjectIdentifier());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n+    Preconditions.checkNotEmpty(getApplicationId());\n+    Preconditions.checkNotEmpty(getProjectIdentifier());\n+    Preconditions.checkNotEmpty(getApiKey());\n   }\n \n-  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  /** Returns the Project Id or Project Number for the Firebase Project. */\n   @Nullable\n   String getProjectIdentifier() {\n-    return firebaseApp.getOptions().getProjectId() == null\n+    return TextUtils.isEmpty(firebaseApp.getOptions().getProjectId())\n         ? firebaseApp.getOptions().getGcmSenderId()\n         : firebaseApp.getOptions().getProjectId();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MTEzMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367681132", "bodyText": "Can you use #isEmpty()?", "author": "andirayo", "createdAt": "2020-01-16T22:22:44Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -107,12 +107,21 @@\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and {@link\n-   * FirebaseOptions#getProjectId()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n+   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n    */\n   private void preConditionChecks() {\n+    Preconditions.checkNotNull(getApplicationId());\n+    Preconditions.checkNotNull(getProjectIdentifier());\n     Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getProjectId());\n+  }\n+\n+  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  @Nullable\n+  String getProjectIdentifier() {\n+    return firebaseApp.getOptions().getProjectId() == null", "originalCommit": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwMDEwOQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367700109", "bodyText": "Updated.PTAL", "author": "ankitaj224", "createdAt": "2020-01-16T23:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MTEzMg=="}], "type": "inlineReview", "revised_code": {"commit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex a1db094c..7cef16b6 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -107,19 +108,20 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n-   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()}, {@link\n+   * FirebaseOptions#getApplicationId()} , and ({@link FirebaseOptions#getProjectId()} are not null\n+   * or empty.\n    */\n   private void preConditionChecks() {\n-    Preconditions.checkNotNull(getApplicationId());\n-    Preconditions.checkNotNull(getProjectIdentifier());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n+    Preconditions.checkNotEmpty(getApplicationId());\n+    Preconditions.checkNotEmpty(getProjectIdentifier());\n+    Preconditions.checkNotEmpty(getApiKey());\n   }\n \n-  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  /** Returns the Project Id or Project Number for the Firebase Project. */\n   @Nullable\n   String getProjectIdentifier() {\n-    return firebaseApp.getOptions().getProjectId() == null\n+    return TextUtils.isEmpty(firebaseApp.getOptions().getProjectId())\n         ? firebaseApp.getOptions().getGcmSenderId()\n         : firebaseApp.getOptions().getProjectId();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MjI2Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367682267", "bodyText": "Did you define the method #getApplicationId?", "author": "andirayo", "createdAt": "2020-01-16T22:25:54Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -107,12 +107,21 @@\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and {@link\n-   * FirebaseOptions#getProjectId()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n+   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n    */\n   private void preConditionChecks() {\n+    Preconditions.checkNotNull(getApplicationId());", "originalCommit": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwMDYyOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367700628", "bodyText": "It was defined previously. git only shows the changes - you can see the method: \n  \n    \n      firebase-android-sdk/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n    \n    \n         Line 143\n      in\n      cbb626b\n    \n    \n    \n    \n\n        \n          \n           String getApplicationId() {", "author": "ankitaj224", "createdAt": "2020-01-16T23:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MjI2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex a1db094c..7cef16b6 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -107,19 +108,20 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n-   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()}, {@link\n+   * FirebaseOptions#getApplicationId()} , and ({@link FirebaseOptions#getProjectId()} are not null\n+   * or empty.\n    */\n   private void preConditionChecks() {\n-    Preconditions.checkNotNull(getApplicationId());\n-    Preconditions.checkNotNull(getProjectIdentifier());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n+    Preconditions.checkNotEmpty(getApplicationId());\n+    Preconditions.checkNotEmpty(getProjectIdentifier());\n+    Preconditions.checkNotEmpty(getApiKey());\n   }\n \n-  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  /** Returns the Project Id or Project Number for the Firebase Project. */\n   @Nullable\n   String getProjectIdentifier() {\n-    return firebaseApp.getOptions().getProjectId() == null\n+    return TextUtils.isEmpty(firebaseApp.getOptions().getProjectId())\n         ? firebaseApp.getOptions().getGcmSenderId()\n         : firebaseApp.getOptions().getProjectId();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MjU2NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367682565", "bodyText": "Wanna create a method for firebaseApp.getOptions().getApiKey()?\nmaybe #getApiKey?", "author": "andirayo", "createdAt": "2020-01-16T22:26:44Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -107,12 +107,21 @@\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and {@link\n-   * FirebaseOptions#getProjectId()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n+   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n    */\n   private void preConditionChecks() {\n+    Preconditions.checkNotNull(getApplicationId());\n+    Preconditions.checkNotNull(getProjectIdentifier());\n     Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());", "originalCommit": "32ebb26590605d9de74b71ce3feecb7ca729c38e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex a1db094c..7cef16b6 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -107,19 +108,20 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   }\n \n   /**\n-   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()} and ({@link\n-   * FirebaseOptions#getProjectId()} or {@link FirebaseOptions#getGcmSenderId()} ()} are not null.\n+   * Perform pre-condition checks to make sure {@link FirebaseOptions#getApiKey()}, {@link\n+   * FirebaseOptions#getApplicationId()} , and ({@link FirebaseOptions#getProjectId()} are not null\n+   * or empty.\n    */\n   private void preConditionChecks() {\n-    Preconditions.checkNotNull(getApplicationId());\n-    Preconditions.checkNotNull(getProjectIdentifier());\n-    Preconditions.checkNotNull(firebaseApp.getOptions().getApiKey());\n+    Preconditions.checkNotEmpty(getApplicationId());\n+    Preconditions.checkNotEmpty(getProjectIdentifier());\n+    Preconditions.checkNotEmpty(getApiKey());\n   }\n \n-  /** Returns the Project Id or Project Number for the Google Cloud Project. */\n+  /** Returns the Project Id or Project Number for the Firebase Project. */\n   @Nullable\n   String getProjectIdentifier() {\n-    return firebaseApp.getOptions().getProjectId() == null\n+    return TextUtils.isEmpty(firebaseApp.getOptions().getProjectId())\n         ? firebaseApp.getOptions().getGcmSenderId()\n         : firebaseApp.getOptions().getProjectId();\n   }\n"}}, {"oid": "5850071061a5f486132e4f1d5246f9e5cafaea68", "url": "https://github.com/firebase/firebase-android-sdk/commit/5850071061a5f486132e4f1d5246f9e5cafaea68", "message": "Addressing Rayo's comments", "committedDate": "2020-01-16T23:24:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcwMjM3NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1140#discussion_r367702374", "bodyText": "I hope I did not make you add another factor that could make our SDK fail, haha", "author": "andirayo", "createdAt": "2020-01-16T23:29:12Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -14,6 +14,7 @@\n \n package com.google.firebase.installations;\n \n+import android.text.TextUtils;", "originalCommit": "5850071061a5f486132e4f1d5246f9e5cafaea68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}