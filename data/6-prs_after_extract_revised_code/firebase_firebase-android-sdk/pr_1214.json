{"pr_number": 1214, "pr_title": "Add new CrashlyticsReport data model", "pr_createdAt": "2020-02-06T21:34:51Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1214", "timeline": [{"oid": "8278f0bc2be27a8ec8560374de07e088c08e6e6f", "url": "https://github.com/firebase/firebase-android-sdk/commit/8278f0bc2be27a8ec8560374de07e088c08e6e6f", "message": "Add new CrashlyticsReport data model\n\nNew data model is an AutoValue data class representing the\nhierarchical Crashlytics report data structure, to be used for\npassing report data to the new Transport API. It is serialized\nvia the firebase-encoders-json @Encodable annotation.", "committedDate": "2020-02-06T21:33:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5ODkzNA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376098934", "bodyText": "I'm confused. Isn't that already in this file?", "author": "bklimt", "createdAt": "2020-02-06T21:44:18Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -0,0 +1,854 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.auto.value.AutoValue;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;", "originalCommit": "8278f0bc2be27a8ec8560374de07e088c08e6e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwODQ3NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376108475", "bodyText": "It is. The import is necessary in order to use the Organization type inside Session (for withOrganizationId). Without this import I'd have to fully qualify its usage there.", "author": "mrwillis21", "createdAt": "2020-02-06T22:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5ODkzNA=="}], "type": "inlineReview", "revised_code": {"commit": "f802ed78d5563db9a2e91424528ce04f7056effc", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\nindex 62d13ed24..72c516b51 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n\n@@ -17,16 +17,21 @@ package com.google.firebase.crashlytics.internal.model;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import com.google.auto.value.AutoValue;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application.Execution.Thread.Frame;\n import com.google.firebase.encoders.annotations.Encodable;\n import com.google.firebase.encoders.annotations.Encodable.Field;\n import com.google.firebase.encoders.annotations.Encodable.Ignore;\n import java.nio.charset.Charset;\n-import java.util.List;\n \n+/**\n+ * This class represents the data captured by and reported to Crashlytics.\n+ *\n+ * <p>It is an immutable value class implemented by AutoValue.\n+ *\n+ * @see <a\n+ *     href=\"https://github.com/google/auto/tree/master/value\">https://github.com/google/auto/tree/master/value</a>\n+ */\n @Encodable\n @AutoValue\n public abstract class CrashlyticsReport {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTEyMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376099120", "bodyText": "This top-level class really need a javadoc comment explaining how it works. It looks like the rest of the classes are mostly AutoValue representations of the report model, so maybe it's not necessary to have comments for all of them, but definitely at least one at the top.", "author": "bklimt", "createdAt": "2020-02-06T21:44:44Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -0,0 +1,854 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.auto.value.AutoValue;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application.Execution.Thread.Frame;\n+import com.google.firebase.encoders.annotations.Encodable;\n+import com.google.firebase.encoders.annotations.Encodable.Field;\n+import com.google.firebase.encoders.annotations.Encodable.Ignore;\n+import java.nio.charset.Charset;\n+import java.util.List;\n+\n+@Encodable\n+@AutoValue\n+public abstract class CrashlyticsReport {", "originalCommit": "8278f0bc2be27a8ec8560374de07e088c08e6e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNzQ4Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376107482", "bodyText": "Agreed. Will fix.", "author": "mrwillis21", "createdAt": "2020-02-06T22:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTEyMA=="}], "type": "inlineReview", "revised_code": {"commit": "f802ed78d5563db9a2e91424528ce04f7056effc", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\nindex 62d13ed24..72c516b51 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n\n@@ -17,16 +17,21 @@ package com.google.firebase.crashlytics.internal.model;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import com.google.auto.value.AutoValue;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application.Execution.Thread.Frame;\n import com.google.firebase.encoders.annotations.Encodable;\n import com.google.firebase.encoders.annotations.Encodable.Field;\n import com.google.firebase.encoders.annotations.Encodable.Ignore;\n import java.nio.charset.Charset;\n-import java.util.List;\n \n+/**\n+ * This class represents the data captured by and reported to Crashlytics.\n+ *\n+ * <p>It is an immutable value class implemented by AutoValue.\n+ *\n+ * @see <a\n+ *     href=\"https://github.com/google/auto/tree/master/value\">https://github.com/google/auto/tree/master/value</a>\n+ */\n @Encodable\n @AutoValue\n public abstract class CrashlyticsReport {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTkxMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376099912", "bodyText": "It's kinda confusing how this lets you build reports but not using the builder itself. Why wouldn't callers just use the builder directly?", "author": "bklimt", "createdAt": "2020-02-06T21:46:27Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -0,0 +1,854 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.auto.value.AutoValue;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application.Execution.Thread.Frame;\n+import com.google.firebase.encoders.annotations.Encodable;\n+import com.google.firebase.encoders.annotations.Encodable.Field;\n+import com.google.firebase.encoders.annotations.Encodable.Ignore;\n+import java.nio.charset.Charset;\n+import java.util.List;\n+\n+@Encodable\n+@AutoValue\n+public abstract class CrashlyticsReport {\n+\n+  private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n+\n+  @NonNull\n+  public static Builder builder() {\n+    return new AutoValue_CrashlyticsReport.Builder();\n+  }\n+\n+  @NonNull\n+  public abstract String getSdkVersion();\n+\n+  @NonNull\n+  public abstract String getGmpAppId();\n+\n+  public abstract int getPlatform();\n+\n+  @NonNull\n+  public abstract String getInstallationUuid();\n+\n+  @NonNull\n+  public abstract String getBuildVersion();\n+\n+  @NonNull\n+  public abstract String getDisplayVersion();\n+\n+  @NonNull\n+  public abstract Session getSession();\n+\n+  @NonNull\n+  public CrashlyticsReport withEvents(@NonNull List<Event> events) {", "originalCommit": "8278f0bc2be27a8ec8560374de07e088c08e6e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNzM1MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376107350", "bodyText": "This allows you to augment an existing report object with a list of events while maintaining all of the other values already set on it. https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#withers", "author": "mrwillis21", "createdAt": "2020-02-06T22:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExODY3Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376118677", "bodyText": "I'll add comments to these with methods to clarify that.", "author": "mrwillis21", "createdAt": "2020-02-06T22:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "f802ed78d5563db9a2e91424528ce04f7056effc", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\nindex 62d13ed24..72c516b51 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java\n\n@@ -17,16 +17,21 @@ package com.google.firebase.crashlytics.internal.model;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import com.google.auto.value.AutoValue;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Application.Organization;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n-import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application;\n import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event.Application.Execution.Thread.Frame;\n import com.google.firebase.encoders.annotations.Encodable;\n import com.google.firebase.encoders.annotations.Encodable.Field;\n import com.google.firebase.encoders.annotations.Encodable.Ignore;\n import java.nio.charset.Charset;\n-import java.util.List;\n \n+/**\n+ * This class represents the data captured by and reported to Crashlytics.\n+ *\n+ * <p>It is an immutable value class implemented by AutoValue.\n+ *\n+ * @see <a\n+ *     href=\"https://github.com/google/auto/tree/master/value\">https://github.com/google/auto/tree/master/value</a>\n+ */\n @Encodable\n @AutoValue\n public abstract class CrashlyticsReport {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376103040", "bodyText": "Did you write this from scratch just for this use case?\nWhy not just use Collections.unmodifiableList directly and call it good enough?", "author": "bklimt", "createdAt": "2020-02-06T21:53:20Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/ImmutableList.java", "diffHunk": "@@ -0,0 +1,177 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.RandomAccess;\n+\n+/** Immutable list implementation for use with AutoValue */\n+public final class ImmutableList<E> implements List<E>, RandomAccess {", "originalCommit": "8278f0bc2be27a8ec8560374de07e088c08e6e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNjU1Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376106552", "bodyText": "Collections.unmodifiableList does not actually expose a type -- it just throws RuntimeExceptions if you try to modify it. At compile-time, it's just a List. For AutoValue's setters, I needed an actual type that would guarantee immutability: https://github.com/google/auto/blob/master/value/userguide/howto.md#mutable_property", "author": "mrwillis21", "createdAt": "2020-02-06T22:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwODI0Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376108242", "bodyText": "But this class implements List and has:\n  public E set(int index, @NonNull E element) {\n    return immutableList.set(index, element);\n  }\n\nSo how is that any different than using Collections.unmodifiableList directly?", "author": "bklimt", "createdAt": "2020-02-06T22:04:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTYyMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376111620", "bodyText": "This type guarantees that the List passed into any of the CrashlyticsReport object setters is immutable.\nOtherwise the list setters would look like (e.g.): setEvents(List<Event>) (instead of setEvents(ImmutableList<Event>)) and would rely on callers to be sure and wrap their mutable lists with Collections.unmodifiableList. If they did not, the data object would accidentally be mutable.", "author": "mrwillis21", "createdAt": "2020-02-06T22:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMjMzNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376112337", "bodyText": "Essentially the goal was to have a simple ImmutableList concrete type without pulling in Guava.", "author": "mrwillis21", "createdAt": "2020-02-06T22:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNTQzMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376115431", "bodyText": "I see. I guess that makes sense. And I see the other uses of ImmutableList in Firebase are pulled in from Guava for tests, so there doesn't appear to be anything we can easily re-use. So, did you write this class from scratch?", "author": "bklimt", "createdAt": "2020-02-06T22:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNzUyNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1214#discussion_r376117527", "bodyText": "Not really. Just created a new ImmutableList<T> class with a List<T> private member that is guaranteed to always be a Collections.unmodifiableList via the constructor, then used Generate->Delegate methods in Android Studio. :)", "author": "mrwillis21", "createdAt": "2020-02-06T22:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwMzA0MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f802ed78d5563db9a2e91424528ce04f7056effc", "url": "https://github.com/firebase/firebase-android-sdk/commit/f802ed78d5563db9a2e91424528ce04f7056effc", "message": "PR feedback", "committedDate": "2020-02-07T15:32:00Z", "type": "commit"}, {"oid": "f802ed78d5563db9a2e91424528ce04f7056effc", "url": "https://github.com/firebase/firebase-android-sdk/commit/f802ed78d5563db9a2e91424528ce04f7056effc", "message": "PR feedback", "committedDate": "2020-02-07T15:32:00Z", "type": "forcePushed"}]}