{"pr_number": 1358, "pr_title": "Add session end fields to Crashlytics reports", "pr_createdAt": "2020-03-17T16:42:13Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1358", "timeline": [{"oid": "c57b7f39424e797eb4526c0ea798d77c3ddf3b71", "url": "https://github.com/firebase/firebase-android-sdk/commit/c57b7f39424e797eb4526c0ea798d77c3ddf3b71", "message": "Add new fields to CrashlyticsReport", "committedDate": "2020-03-17T15:42:40Z", "type": "commit"}, {"oid": "16af937fa368619e28498fe8098e7097134cb584", "url": "https://github.com/firebase/firebase-android-sdk/commit/16af937fa368619e28498fe8098e7097134cb584", "message": "Add with function to set all session end fields at once", "committedDate": "2020-03-17T16:08:33Z", "type": "commit"}, {"oid": "8e97194f64c68451fdee0a00746086e4bc68a6f2", "url": "https://github.com/firebase/firebase-android-sdk/commit/8e97194f64c68451fdee0a00746086e4bc68a6f2", "message": "Set fields at session finalize time", "committedDate": "2020-03-17T16:39:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyNDk4MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393824980", "bodyText": "if it is not relevant to the test, I'm happy with inlining, e.g., 0L for all of these", "author": "jakeouellette", "createdAt": "2020-03-17T16:51:33Z", "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java", "diffHunk": "@@ -199,7 +232,10 @@ public void testFinalizeReports_capsReports() throws IOException {\n     for (int i = 0; i < 10; i++) {\n       persistReportWithEvent(reportPersistence, \"testSession\" + i, true);\n     }\n-    reportPersistence.finalizeReports(\"skippedSession\");\n+\n+    final long endedAt = System.currentTimeMillis();\n+\n+    reportPersistence.finalizeReports(\"skippedSession\", endedAt);", "originalCommit": "8e97194f64c68451fdee0a00746086e4bc68a6f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDc5NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393830794", "bodyText": "\ud83d\udc4d", "author": "mrwillis21", "createdAt": "2020-03-17T17:00:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyNDk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "c539d567deea60c68c0b52e83b8cd6f75f2f0052", "chunk": "diff --git a/firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java b/firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java\nindex cfeabbfe..d253ce7d 100644\n--- a/firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java\n+++ b/firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistenceTest.java\n\n@@ -233,9 +233,7 @@ public class CrashlyticsReportPersistenceTest {\n       persistReportWithEvent(reportPersistence, \"testSession\" + i, true);\n     }\n \n-    final long endedAt = System.currentTimeMillis();\n-\n-    reportPersistence.finalizeReports(\"skippedSession\", endedAt);\n+    reportPersistence.finalizeReports(\"skippedSession\", 0L);\n \n     final List<CrashlyticsReport> finalizedReports = reportPersistence.loadFinalizedReports();\n     assertEquals(4, finalizedReports.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393828795", "bodyText": "this finalizeReports call is pretty nested. Suggestion:\nRefactor to make it so this method is much shorter, like:\nwriteReport(...);\nrecursiveDelete(sessionDirectory);\n\nThen in writeReport(...), flip the two nested ifs into early terminating statements:\nif (eventFiles.isEmpty()) {\n  return;\n}\n...\nif (report == null) {\n  // TODO: Handle null case\n  return\n}```", "author": "jakeouellette", "createdAt": "2020-03-17T16:57:08Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -192,17 +192,20 @@ public void finalizeReports(String currentSessionId) {\n \n         CrashlyticsReport report =\n             TRANSFORM.reportFromJson(readTextFile(new File(sessionDirectory, REPORT_FILE_NAME)));\n-        final String sessionId = report.getSession().getIdentifier();\n \n-        if (userId != null) {\n-          report = report.withUserId(userId);\n-        }\n+        // TODO: Handle null case\n+\n+        if (report != null) {\n+          report = report.withSessionEndFields(sessionEndTime, isHighPriorityReport, userId);", "originalCommit": "8e97194f64c68451fdee0a00746086e4bc68a6f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1MDIxMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393850212", "bodyText": "\ud83d\udc4d", "author": "mrwillis21", "createdAt": "2020-03-17T17:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1ODQ3MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393858471", "bodyText": "nice!!", "author": "jakeouellette", "createdAt": "2020-03-17T17:43:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyODc5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6d7de2d2de8c2d1472bce57963365ef69167c588", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\nindex fbbfef0b..39fad4bc 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n\n@@ -167,46 +167,7 @@ public class CrashlyticsReportPersistence {\n     //  this only works when called at app start.\n     List<File> sessionDirectories = capAndGetOpenSessions(currentSessionId);\n     for (File sessionDirectory : sessionDirectories) {\n-      final List<File> eventFiles =\n-          getFilesInDirectory(\n-              sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n-      Collections.sort(eventFiles);\n-      // TODO: Fix nulls\n-      // Only process the session if it has associated events\n-      if (!eventFiles.isEmpty()) {\n-        final List<Event> events = new ArrayList<>();\n-        boolean isHighPriorityReport = false;\n-        for (File eventFile : eventFiles) {\n-          final Event event = TRANSFORM.eventFromJson(readTextFile(eventFile));\n-          isHighPriorityReport =\n-              isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());\n-          events.add(event);\n-        }\n-        // FIXME: If we fail to parse the events, we'll need to bail.\n-\n-        String userId = null;\n-        final File userFile = new File(sessionDirectory, USER_FILE_NAME);\n-        if (userFile.exists()) {\n-          userId = readTextFile(userFile);\n-        }\n-\n-        CrashlyticsReport report =\n-            TRANSFORM.reportFromJson(readTextFile(new File(sessionDirectory, REPORT_FILE_NAME)));\n-\n-        // TODO: Handle null case\n-\n-        if (report != null) {\n-          report = report.withSessionEndFields(sessionEndTime, isHighPriorityReport, userId);\n-\n-          final String sessionId = report.getSession().getIdentifier();\n-\n-          final File outputDirectory =\n-              prepareDirectory(isHighPriorityReport ? priorityReportsDirectory : reportsDirectory);\n-          writeTextFile(\n-              new File(outputDirectory, sessionId),\n-              TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n-        }\n-      }\n+      synthesizeReportFile(sessionDirectory, sessionEndTime);\n       recursiveDelete(sessionDirectory);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393830731", "bodyText": "This didn't break any CrashlyticsController tests. Do we not mock reportingCoordinator in those tests to check it was called in unit?\n... one pattern I often see (and implement) is a TimeProvider interface that would do new Date().getTime() / 1000, what's nice about that pattern is then you could pass it in and mock it to make the tests not break (if they had)", "author": "jakeouellette", "createdAt": "2020-03-17T16:59:59Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java", "diffHunk": "@@ -860,7 +860,7 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean includeCurren\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions();\n+    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);", "originalCommit": "8e97194f64c68451fdee0a00746086e4bc68a6f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMjc2MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393832760", "bodyText": "This didn't break any CrashlyticsController tests. Do we not mock reportingCoordinator in those tests to check it was called in unit?\n\nApparently not.\n\n... one pattern I often see (and implement) is a TimeProvider interface that would do new Date().getTime() / 1000, what's nice about that pattern is then you could pass it in and mock it to make the tests not break (if they had)\n\nI considered that pattern, and in fact we actually have a SystemCurrentTimeProvider, but I wasn't sure whether to pass it in here or into the constructor.", "author": "mrwillis21", "createdAt": "2020-03-17T17:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NDg3MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393854870", "bodyText": "Cool, there's probably a wider discussion about that which I'm happy to punt on, but we can chat about when you're interested.\nGiven that this change didn't break any tests, do you need to add any tests that validate this method?", "author": "jakeouellette", "createdAt": "2020-03-17T17:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2OTA5NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393869095", "bodyText": "I think we can do a separate pass and add tests for validating all of the SessionReportingCoordinator calls in CrashlyticsController.", "author": "mrwillis21", "createdAt": "2020-03-17T18:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMDczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "63baf8eecbe38406e24d32c887666dc25a30085e", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java\nindex b16a9e06..6ce96ce2 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/CrashlyticsController.java\n\n@@ -860,7 +860,7 @@ class CrashlyticsController {\n \n     closeOpenSessions(sessionBeginFiles, offset, maxCustomExceptionEvents);\n \n-    reportingCoordinator.finalizeSessions(new Date().getTime() / 1000);\n+    reportingCoordinator.finalizeSessions(getCurrentTimestampSeconds());\n   }\n \n   /**\n"}}, {"oid": "c539d567deea60c68c0b52e83b8cd6f75f2f0052", "url": "https://github.com/firebase/firebase-android-sdk/commit/c539d567deea60c68c0b52e83b8cd6f75f2f0052", "message": "Fix up tests", "committedDate": "2020-03-17T17:04:27Z", "type": "commit"}, {"oid": "6d7de2d2de8c2d1472bce57963365ef69167c588", "url": "https://github.com/firebase/firebase-android-sdk/commit/6d7de2d2de8c2d1472bce57963365ef69167c588", "message": "Add helper method and make code more readable", "committedDate": "2020-03-17T17:30:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NTgwNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393855805", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  isHighPriorityReport = isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());\n          \n          \n            \n                  isHighPriorityReport |= isHighPriorityEventFile(eventFile.getName());", "author": "jakeouellette", "createdAt": "2020-03-17T17:39:14Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+\n+    // Only process the session if it has associated events\n+    if (eventFiles.isEmpty()) {\n+      return;\n+    }\n+\n+    // TODO: Handle all nullable return values\n+\n+    Collections.sort(eventFiles);\n+    final List<Event> events = new ArrayList<>();\n+    boolean isHighPriorityReport = false;\n+    for (File eventFile : eventFiles) {\n+      final String eventJson = readTextFile(eventFile);\n+      if (eventJson == null) {\n+        // TODO: Handle null case\n+        continue;\n+      }\n+      final Event event = TRANSFORM.eventFromJson(eventJson);\n+      isHighPriorityReport = isHighPriorityReport || isHighPriorityEventFile(eventFile.getName());", "originalCommit": "6d7de2d2de8c2d1472bce57963365ef69167c588", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2NDAxMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393864010", "bodyText": "Personally I find this less clear, and would prefer we keep it as is if it's all the same to you.", "author": "mrwillis21", "createdAt": "2020-03-17T17:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NTgwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7d9fa10f98ffd81d8adc467a3f597d3d5aab731d", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\nindex 39fad4bc..c187c48d 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n\n@@ -239,15 +241,14 @@ public class CrashlyticsReportPersistence {\n   }\n \n   private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n-    final List<File> eventFiles =\n-        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+    final List<File> eventFiles = getFilesInDirectory(sessionDirectory, EVENT_FILE_FILTER);\n \n     // Only process the session if it has associated events\n     if (eventFiles.isEmpty()) {\n       return;\n     }\n \n-    // TODO: Handle all nullable return values\n+    // TODO: Handle all nullable return values in below function calls\n \n     Collections.sort(eventFiles);\n     final List<Event> events = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NjUyMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393856520", "bodyText": "which values are the return values in this comment?", "author": "jakeouellette", "createdAt": "2020-03-17T17:40:23Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+\n+    // Only process the session if it has associated events\n+    if (eventFiles.isEmpty()) {\n+      return;\n+    }\n+\n+    // TODO: Handle all nullable return values", "originalCommit": "6d7de2d2de8c2d1472bce57963365ef69167c588", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d9fa10f98ffd81d8adc467a3f597d3d5aab731d", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\nindex 39fad4bc..c187c48d 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n\n@@ -239,15 +241,14 @@ public class CrashlyticsReportPersistence {\n   }\n \n   private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n-    final List<File> eventFiles =\n-        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+    final List<File> eventFiles = getFilesInDirectory(sessionDirectory, EVENT_FILE_FILTER);\n \n     // Only process the session if it has associated events\n     if (eventFiles.isEmpty()) {\n       return;\n     }\n \n-    // TODO: Handle all nullable return values\n+    // TODO: Handle all nullable return values in below function calls\n \n     Collections.sort(eventFiles);\n     final List<Event> events = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1Njg1MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1358#discussion_r393856851", "bodyText": "is it worth pulling (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX) into a static constant?", "author": "jakeouellette", "createdAt": "2020-03-17T17:40:51Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -270,6 +234,61 @@ private void capFinalizedReports() {\n         getAllFilesInDirectory(priorityReportsDirectory), getAllFilesInDirectory(reportsDirectory));\n   }\n \n+  private File getSessionDirectoryById(String sessionId) {\n+    return new File(openSessionsDirectory, sessionId);\n+  }\n+\n+  private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n+    final List<File> eventFiles =\n+        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));", "originalCommit": "6d7de2d2de8c2d1472bce57963365ef69167c588", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d9fa10f98ffd81d8adc467a3f597d3d5aab731d", "chunk": "diff --git a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\nindex 39fad4bc..c187c48d 100644\n--- a/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n+++ b/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java\n\n@@ -239,15 +241,14 @@ public class CrashlyticsReportPersistence {\n   }\n \n   private void synthesizeReportFile(File sessionDirectory, long sessionEndTime) {\n-    final List<File> eventFiles =\n-        getFilesInDirectory(sessionDirectory, (f, name) -> name.startsWith(EVENT_FILE_NAME_PREFIX));\n+    final List<File> eventFiles = getFilesInDirectory(sessionDirectory, EVENT_FILE_FILTER);\n \n     // Only process the session if it has associated events\n     if (eventFiles.isEmpty()) {\n       return;\n     }\n \n-    // TODO: Handle all nullable return values\n+    // TODO: Handle all nullable return values in below function calls\n \n     Collections.sort(eventFiles);\n     final List<Event> events = new ArrayList<>();\n"}}, {"oid": "7d9fa10f98ffd81d8adc467a3f597d3d5aab731d", "url": "https://github.com/firebase/firebase-android-sdk/commit/7d9fa10f98ffd81d8adc467a3f597d3d5aab731d", "message": "Feedback", "committedDate": "2020-03-17T17:52:46Z", "type": "commit"}, {"oid": "63baf8eecbe38406e24d32c887666dc25a30085e", "url": "https://github.com/firebase/firebase-android-sdk/commit/63baf8eecbe38406e24d32c887666dc25a30085e", "message": "Clarify timestamp seconds handling", "committedDate": "2020-03-17T18:26:14Z", "type": "commit"}]}