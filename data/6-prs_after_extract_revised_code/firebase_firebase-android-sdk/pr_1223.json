{"pr_number": 1223, "pr_title": "Add CrashlyticsReport JSON de/serialization", "pr_createdAt": "2020-02-07T18:08:56Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1223", "timeline": [{"oid": "f5f59e682a1f634473640cd1bed3c27d2074ca21", "url": "https://github.com/firebase/firebase-android-sdk/commit/f5f59e682a1f634473640cd1bed3c27d2074ca21", "message": "Add CrashlyticsReport JSON de/serialization\n\nUses firebase-encoders-json DataEncoder for serialization and\nuses JsonReader manually for deserialization, as there is not yet\na firebase-decoders-json.", "committedDate": "2020-02-07T18:08:14Z", "type": "commit"}, {"oid": "4b2a9dda78ba60ef0223fdc18b2873810eca19fb", "url": "https://github.com/firebase/firebase-android-sdk/commit/4b2a9dda78ba60ef0223fdc18b2873810eca19fb", "message": "formatting", "committedDate": "2020-02-07T18:19:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNzU2OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1223#discussion_r376537568", "bodyText": "I don't love this, but I won't push back too hard on it. It's just harder to make sure you deal with null upstream than to deal with an Exception.", "author": "bklimt", "createdAt": "2020-02-07T18:24:17Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/serialization/CrashlyticsReportJsonTransform.java", "diffHunk": "@@ -0,0 +1,565 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model.serialization;\n+\n+import android.util.Base64;\n+import android.util.JsonReader;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.firebase.crashlytics.internal.model.AutoCrashlyticsReportEncoder;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.CustomAttribute;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n+import com.google.firebase.crashlytics.internal.model.ImmutableList;\n+import com.google.firebase.encoders.DataEncoder;\n+import com.google.firebase.encoders.json.JsonDataEncoderBuilder;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CrashlyticsReportJsonTransform {\n+\n+  private static final DataEncoder CRASHLYTICS_REPORT_JSON_ENCODER =\n+      new JsonDataEncoderBuilder()\n+          .configureWith(AutoCrashlyticsReportEncoder.CONFIG)\n+          .ignoreNullValues(true)\n+          .build();\n+\n+  @NonNull\n+  public String reportToJson(@NonNull CrashlyticsReport report) {\n+    return CRASHLYTICS_REPORT_JSON_ENCODER.encode(report);\n+  }\n+\n+  @NonNull\n+  public String eventToJson(@NonNull CrashlyticsReport.Session.Event event) {\n+    return CRASHLYTICS_REPORT_JSON_ENCODER.encode(event);\n+  }\n+\n+  @Nullable\n+  public CrashlyticsReport reportFromJson(@NonNull String json) {\n+    try (JsonReader jsonReader = new JsonReader(new StringReader(json))) {\n+      return parseReport(jsonReader);\n+    } catch (IOException e) {\n+      // TODO: Handle the IOException\n+      return null;", "originalCommit": "f5f59e682a1f634473640cd1bed3c27d2074ca21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0NzM2NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1223#discussion_r376547364", "bodyText": "Agreed, hence the TODO.", "author": "mrwillis21", "createdAt": "2020-02-07T18:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNzU2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MTI4Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1223#discussion_r376541282", "bodyText": "\"Os\" you're killing me. I'd argue that in a line with IOException, we should be able to call this parseOS. :-)\nBut I guess you want to match it match the name in the object, so whatever.", "author": "bklimt", "createdAt": "2020-02-07T18:32:17Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/serialization/CrashlyticsReportJsonTransform.java", "diffHunk": "@@ -0,0 +1,565 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.model.serialization;\n+\n+import android.util.Base64;\n+import android.util.JsonReader;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.firebase.crashlytics.internal.model.AutoCrashlyticsReportEncoder;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.CustomAttribute;\n+import com.google.firebase.crashlytics.internal.model.CrashlyticsReport.Session.Event;\n+import com.google.firebase.crashlytics.internal.model.ImmutableList;\n+import com.google.firebase.encoders.DataEncoder;\n+import com.google.firebase.encoders.json.JsonDataEncoderBuilder;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CrashlyticsReportJsonTransform {\n+\n+  private static final DataEncoder CRASHLYTICS_REPORT_JSON_ENCODER =\n+      new JsonDataEncoderBuilder()\n+          .configureWith(AutoCrashlyticsReportEncoder.CONFIG)\n+          .ignoreNullValues(true)\n+          .build();\n+\n+  @NonNull\n+  public String reportToJson(@NonNull CrashlyticsReport report) {\n+    return CRASHLYTICS_REPORT_JSON_ENCODER.encode(report);\n+  }\n+\n+  @NonNull\n+  public String eventToJson(@NonNull CrashlyticsReport.Session.Event event) {\n+    return CRASHLYTICS_REPORT_JSON_ENCODER.encode(event);\n+  }\n+\n+  @Nullable\n+  public CrashlyticsReport reportFromJson(@NonNull String json) {\n+    try (JsonReader jsonReader = new JsonReader(new StringReader(json))) {\n+      return parseReport(jsonReader);\n+    } catch (IOException e) {\n+      // TODO: Handle the IOException\n+      return null;\n+    }\n+  }\n+\n+  @Nullable\n+  public CrashlyticsReport.Session.Event eventFromJson(@NonNull String json) {\n+    try (JsonReader jsonReader = new JsonReader(new StringReader(json))) {\n+      return parseEvent(jsonReader);\n+    } catch (IOException e) {\n+      // TODO: Handle the IOException\n+      return null;\n+    }\n+  }\n+\n+  private static CrashlyticsReport parseReport(JsonReader jsonReader) throws IOException {\n+    final CrashlyticsReport.Builder builder = CrashlyticsReport.builder();\n+\n+    jsonReader.beginObject();\n+    while(jsonReader.hasNext()) {\n+      String name = jsonReader.nextName();\n+      switch (name) {\n+        case \"sdkVersion\":\n+          builder.setSdkVersion(jsonReader.nextString());\n+          break;\n+        case \"gmpAppId\":\n+          builder.setGmpAppId(jsonReader.nextString());\n+          break;\n+        case \"platform\":\n+          builder.setPlatform(jsonReader.nextInt());\n+          break;\n+        case \"installationUuid\":\n+          builder.setInstallationUuid(jsonReader.nextString());\n+          break;\n+        case \"buildVersion\":\n+          builder.setBuildVersion(jsonReader.nextString());\n+          break;\n+        case \"displayVersion\":\n+          builder.setDisplayVersion(jsonReader.nextString());\n+          break;\n+        case \"session\":\n+          builder.setSession(parseSession(jsonReader));\n+          break;\n+        default:\n+          jsonReader.skipValue();\n+          break;\n+      }\n+    }\n+    jsonReader.endObject();\n+    return builder.build();\n+  }\n+\n+  private static CrashlyticsReport.Session parseSession(JsonReader jsonReader) throws IOException {\n+    final CrashlyticsReport.Session.Builder builder = CrashlyticsReport.Session.builder();\n+\n+    jsonReader.beginObject();\n+    while(jsonReader.hasNext()) {\n+      String name = jsonReader.nextName();\n+      switch (name) {\n+        case \"generator\":\n+          builder.setGenerator(jsonReader.nextString());\n+          break;\n+        case \"identifier\":\n+          builder.setIdentifierFromUtf8Bytes(Base64.decode(jsonReader.nextString(), Base64.NO_WRAP));\n+          break;\n+        case \"startedAt\":\n+          builder.setStartedAt(jsonReader.nextLong());\n+          break;\n+        case \"app\":\n+          builder.setApp(parseApp(jsonReader));\n+          break;\n+        case \"os\":\n+          builder.setOs(parseOs(jsonReader));\n+          break;\n+        case \"device\":\n+          builder.setDevice(parseDevice(jsonReader));\n+          break;\n+        case \"events\":\n+          builder.setEvents(parseArray(jsonReader, CrashlyticsReportJsonTransform::parseEvent));\n+          break;\n+        default:\n+          jsonReader.skipValue();\n+          break;\n+      }\n+    }\n+    jsonReader.endObject();\n+\n+    return builder.build();\n+  }\n+\n+  private static CrashlyticsReport.Session.Application parseApp(JsonReader jsonReader) throws IOException {\n+    final CrashlyticsReport.Session.Application.Builder builder = CrashlyticsReport.Session.Application.builder();\n+\n+    jsonReader.beginObject();\n+    while(jsonReader.hasNext()) {\n+      String name = jsonReader.nextName();\n+      switch (name) {\n+        case \"identifier\":\n+          builder.setIdentifier(jsonReader.nextString());\n+          break;\n+        case \"version\":\n+          builder.setVersion(jsonReader.nextString());\n+          break;\n+        case \"displayVersion\":\n+          builder.setDisplayVersion(jsonReader.nextString());\n+          break;\n+        case \"installationUuid\":\n+          builder.setInstallationUuid(jsonReader.nextString());\n+          break;\n+        default:\n+          jsonReader.skipValue();\n+          break;\n+      }\n+    }\n+    jsonReader.endObject();\n+\n+    return builder.build();\n+  }\n+\n+  private static CrashlyticsReport.Session.OperatingSystem parseOs(JsonReader jsonReader) throws IOException {", "originalCommit": "f5f59e682a1f634473640cd1bed3c27d2074ca21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0NzkzMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1223#discussion_r376547930", "bodyText": "Yeah. \ud83e\udd37\u200d\u2642\ufe0f", "author": "mrwillis21", "createdAt": "2020-02-07T18:46:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MTI4Mg=="}], "type": "inlineReview", "revised_code": null}]}