{"pr_number": 2254, "pr_title": "Background update", "pr_createdAt": "2020-12-14T15:58:12Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/2254", "timeline": [{"oid": "42b7b6b1d6b0a36c1b6e1b3c46d6fb0384702b80", "url": "https://github.com/firebase/firebase-android-sdk/commit/42b7b6b1d6b0a36c1b6e1b3c46d6fb0384702b80", "message": "Update in background", "committedDate": "2020-12-11T16:45:05Z", "type": "commit"}, {"oid": "baf554c22186a802f1dc0a47fada5313f8447242", "url": "https://github.com/firebase/firebase-android-sdk/commit/baf554c22186a802f1dc0a47fada5313f8447242", "message": "Adding more download type handling and unit tests.", "committedDate": "2020-12-14T15:56:30Z", "type": "commit"}, {"oid": "7e5e5c2eac4495c5c545a38a247862c7f5d1d3a5", "url": "https://github.com/firebase/firebase-android-sdk/commit/7e5e5c2eac4495c5c545a38a247862c7f5d1d3a5", "message": "Make internal files hidden", "committedDate": "2020-12-14T18:02:52Z", "type": "commit"}, {"oid": "11b9b635c66699d0ea20775e77c26e4478ad7eba", "url": "https://github.com/firebase/firebase-android-sdk/commit/11b9b635c66699d0ea20775e77c26e4478ad7eba", "message": "Merge branch 'master' into backgroundUpdate", "committedDate": "2020-12-14T18:08:02Z", "type": "commit"}, {"oid": "90018d91d790d8c0c4ef41ccaeb5e1a7b9bb9d0e", "url": "https://github.com/firebase/firebase-android-sdk/commit/90018d91d790d8c0c4ef41ccaeb5e1a7b9bb9d0e", "message": "Clean up after merge.", "committedDate": "2020-12-14T18:11:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyMTY1Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2254#discussion_r545321652", "bodyText": "Should localModel.getModelHash() be passed here, to avoid triggering a download if there is no newer model?", "author": "rosalyntan", "createdAt": "2020-12-17T18:48:07Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java", "diffHunk": "@@ -120,47 +120,87 @@ public static FirebaseModelDownloader getInstance(@NonNull FirebaseApp app) {\n       @Nullable CustomModelDownloadConditions conditions)\n       throws Exception {\n     CustomModel localModel = sharedPreferencesUtil.getCustomModelDetails(modelName);\n+    if (localModel == null) {\n+      // no local model - get latest.\n+      return getCustomModelTask(modelName, conditions);\n+    }\n+\n     switch (downloadType) {\n       case LOCAL_MODEL:\n-        if (localModel != null) {\n-          return Tasks.forResult(localModel);\n-        }\n-        Task<CustomModel> modelDetails =\n-            modelDownloadService.getCustomModelDetails(\n-                firebaseOptions.getProjectId(), modelName, null);\n-\n-        // no local model - start download.\n-        return modelDetails.continueWithTask(\n-            executor,\n-            modelDetailTask -> {\n-              if (modelDetailTask.isSuccessful()) {\n-                // start download\n-                return fileDownloadService\n-                    .download(modelDetailTask.getResult(), conditions)\n-                    .continueWithTask(\n-                        executor,\n-                        downloadTask -> {\n-                          if (downloadTask.isSuccessful()) {\n-                            // read the updated model\n-                            CustomModel downloadedModel =\n-                                sharedPreferencesUtil.getCustomModelDetails(modelName);\n-                            // TODO(annz) trigger file move here as well... right now it's temp\n-                            // call loadNewlyDownloadedModelFile\n-                            return Tasks.forResult(downloadedModel);\n-                          }\n-                          return Tasks.forException(new Exception(\"File download failed.\"));\n-                        });\n-              }\n-              return Tasks.forException(modelDetailTask.getException());\n-            });\n+        return Tasks.forResult(localModel);\n       case LATEST_MODEL:\n-        // check for latest model and download newest\n-        break;\n+        // check for latest model, wait for download if newer model exists\n+        return getCustomModelTask(modelName, conditions);", "originalCommit": "90018d91d790d8c0c4ef41ccaeb5e1a7b9bb9d0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0MzcxOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2254#discussion_r545443718", "bodyText": "Good catch, fixed.", "author": "annzimmer", "createdAt": "2020-12-17T22:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyMTY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5220062183a415270e8294faf6c49f0d81b950d6", "chunk": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\nindex 228954c9..cbe207da 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n\n@@ -130,11 +131,10 @@ public class FirebaseModelDownloader {\n         return Tasks.forResult(localModel);\n       case LATEST_MODEL:\n         // check for latest model, wait for download if newer model exists\n-        return getCustomModelTask(modelName, conditions);\n+        return getCustomModelTask(modelName, conditions, localModel.getModelHash());\n       case LOCAL_MODEL_UPDATE_IN_BACKGROUND:\n-        // start download in back ground, return current model\n+        // start download in back ground, return local model\n         getCustomModelTask(modelName, conditions, localModel.getModelHash());\n-        // return local model\n         return Tasks.forResult(localModel);\n     }\n     throw new IllegalArgumentException(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyODE2Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2254#discussion_r545328163", "bodyText": "Can this be null?", "author": "rosalyntan", "createdAt": "2020-12-17T18:56:55Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java", "diffHunk": "@@ -120,47 +120,87 @@ public static FirebaseModelDownloader getInstance(@NonNull FirebaseApp app) {\n       @Nullable CustomModelDownloadConditions conditions)\n       throws Exception {\n     CustomModel localModel = sharedPreferencesUtil.getCustomModelDetails(modelName);\n+    if (localModel == null) {\n+      // no local model - get latest.\n+      return getCustomModelTask(modelName, conditions);\n+    }\n+\n     switch (downloadType) {\n       case LOCAL_MODEL:\n-        if (localModel != null) {\n-          return Tasks.forResult(localModel);\n-        }\n-        Task<CustomModel> modelDetails =\n-            modelDownloadService.getCustomModelDetails(\n-                firebaseOptions.getProjectId(), modelName, null);\n-\n-        // no local model - start download.\n-        return modelDetails.continueWithTask(\n-            executor,\n-            modelDetailTask -> {\n-              if (modelDetailTask.isSuccessful()) {\n-                // start download\n-                return fileDownloadService\n-                    .download(modelDetailTask.getResult(), conditions)\n-                    .continueWithTask(\n-                        executor,\n-                        downloadTask -> {\n-                          if (downloadTask.isSuccessful()) {\n-                            // read the updated model\n-                            CustomModel downloadedModel =\n-                                sharedPreferencesUtil.getCustomModelDetails(modelName);\n-                            // TODO(annz) trigger file move here as well... right now it's temp\n-                            // call loadNewlyDownloadedModelFile\n-                            return Tasks.forResult(downloadedModel);\n-                          }\n-                          return Tasks.forException(new Exception(\"File download failed.\"));\n-                        });\n-              }\n-              return Tasks.forException(modelDetailTask.getException());\n-            });\n+        return Tasks.forResult(localModel);\n       case LATEST_MODEL:\n-        // check for latest model and download newest\n-        break;\n+        // check for latest model, wait for download if newer model exists\n+        return getCustomModelTask(modelName, conditions);\n       case LOCAL_MODEL_UPDATE_IN_BACKGROUND:\n-        // start download in back ground return current model if not null.\n-        break;\n+        // start download in back ground, return current model\n+        getCustomModelTask(modelName, conditions, localModel.getModelHash());\n+        // return local model\n+        return Tasks.forResult(localModel);\n     }\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    throw new IllegalArgumentException(\n+        \"Unsupported downloadType, please chose LOCAL_MODEL, LATEST_MODEL, or LOCAL_MODEL_UPDATE_IN_BACKGROUND\");\n+  }\n+\n+  // This version of getCustomModelTask will always call the modelDownloadService and upon\n+  // success will then trigger file download.\n+  private Task<CustomModel> getCustomModelTask(\n+      @NonNull String modelName, @Nullable CustomModelDownloadConditions conditions)\n+      throws Exception {\n+    return getCustomModelTask(modelName, conditions, null);\n+  }\n+\n+  // This version of getCustomModelTask will call the modelDownloadService and upon\n+  // success will only trigger file download, if there is a new model hash value.\n+  private Task<CustomModel> getCustomModelTask(\n+      @NonNull String modelName,\n+      @Nullable CustomModelDownloadConditions conditions,\n+      @Nullable String modelHash)\n+      throws Exception {\n+    Task<CustomModel> incomingModelDetails =\n+        modelDownloadService.getCustomModelDetails(\n+            firebaseOptions.getProjectId(), modelName, modelHash);\n+\n+    return incomingModelDetails.continueWithTask(\n+        executor,\n+        incomingModelDetailTask -> {\n+          if (incomingModelDetailTask.isSuccessful()) {\n+            CustomModel currentModel = sharedPreferencesUtil.getCustomModelDetails(modelName);\n+            // null means we have the latest model\n+            if (incomingModelDetails.getResult() == null) {\n+              return Tasks.forResult(currentModel);\n+            }\n+\n+            // if modelHash matches current local model just return local model.\n+            if (currentModel", "originalCommit": "90018d91d790d8c0c4ef41ccaeb5e1a7b9bb9d0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0MzczNA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2254#discussion_r545443734", "bodyText": "in current flow no - but in theory it's a possibility - fixed and added a few more unit tests.", "author": "annzimmer", "createdAt": "2020-12-17T22:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyODE2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5220062183a415270e8294faf6c49f0d81b950d6", "chunk": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\nindex 228954c9..cbe207da 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n\n@@ -130,11 +131,10 @@ public class FirebaseModelDownloader {\n         return Tasks.forResult(localModel);\n       case LATEST_MODEL:\n         // check for latest model, wait for download if newer model exists\n-        return getCustomModelTask(modelName, conditions);\n+        return getCustomModelTask(modelName, conditions, localModel.getModelHash());\n       case LOCAL_MODEL_UPDATE_IN_BACKGROUND:\n-        // start download in back ground, return current model\n+        // start download in back ground, return local model\n         getCustomModelTask(modelName, conditions, localModel.getModelHash());\n-        // return local model\n         return Tasks.forResult(localModel);\n     }\n     throw new IllegalArgumentException(\n"}}, {"oid": "5220062183a415270e8294faf6c49f0d81b950d6", "url": "https://github.com/firebase/firebase-android-sdk/commit/5220062183a415270e8294faf6c49f0d81b950d6", "message": "Updates FirebaseMlLogEvent ModelOption name to Options to make internal proto. This allows for proper json to proto conversion and in local tests messages now reach the spanner queue.", "committedDate": "2020-12-17T22:22:59Z", "type": "commit"}]}