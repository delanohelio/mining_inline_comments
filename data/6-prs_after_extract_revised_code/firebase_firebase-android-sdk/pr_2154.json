{"pr_number": 2154, "pr_title": "Add implementation for listDownloadedModels.", "pr_createdAt": "2020-11-06T14:34:51Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/2154", "timeline": [{"oid": "deb18fcfe6385c4cba75fbac80e5dd19977a59c4", "url": "https://github.com/firebase/firebase-android-sdk/commit/deb18fcfe6385c4cba75fbac80e5dd19977a59c4", "message": "Add implementation for listModels.", "committedDate": "2020-11-06T14:33:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTM5NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r518821394", "bodyText": "Since sharedPreferences are sync, you could try to create an actual task here to get concurrency.", "author": "rlazo", "createdAt": "2020-11-06T15:22:16Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java", "diffHunk": "@@ -84,7 +94,7 @@ public static FirebaseModelDownloader getInstance(@NonNull FirebaseApp app) {\n   /** @return The set of all models that are downloaded to this device. */\n   @NonNull\n   public Task<Set<CustomModel>> listDownloadedModels() {\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    return Tasks.forResult(sharedPreferencesUtil.listDownloadedModels());", "originalCommit": "deb18fcfe6385c4cba75fbac80e5dd19977a59c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzNTk1NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520135954", "bodyText": "Done - thanks.", "author": "annzimmer", "createdAt": "2020-11-09T21:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "chunk": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\nindex c54913e4..21499578 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java\n\n@@ -94,7 +102,10 @@ public class FirebaseModelDownloader {\n   /** @return The set of all models that are downloaded to this device. */\n   @NonNull\n   public Task<Set<CustomModel>> listDownloadedModels() {\n-    return Tasks.forResult(sharedPreferencesUtil.listDownloadedModels());\n+    TaskCompletionSource<Set<CustomModel>> taskCompletionSource = new TaskCompletionSource<>();\n+    executor.execute(\n+        () -> taskCompletionSource.setResult(sharedPreferencesUtil.listDownloadedModels()));\n+    return taskCompletionSource.getTask();\n   }\n \n   /*\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMzU0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r518823540", "bodyText": "Since you're reading all the keys at once and not dealing with the sharedpreferences anymore, it may not be necessary to sync the whole method.", "author": "rlazo", "createdAt": "2020-11-06T15:25:30Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java", "diffHunk": "@@ -190,6 +196,24 @@ public synchronized void clearModelDetails(@NonNull String modelName, boolean cl\n         .commit();\n   }\n \n+  public synchronized Set<CustomModel> listDownloadedModels() {\n+    Set<CustomModel> customModels = new HashSet<>();\n+    Set<String> keySet = getSharedPreferences().getAll().keySet();", "originalCommit": "deb18fcfe6385c4cba75fbac80e5dd19977a59c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzNTcyMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520135722", "bodyText": "The second part (added todo) will need to coordinate with android download manager, so I'll need the sync when I add that.", "author": "annzimmer", "createdAt": "2020-11-09T21:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMzU0MA=="}], "type": "inlineReview", "revised_code": {"commit": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "chunk": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\nindex af8895b0..e27fc1fc 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\n\n@@ -209,11 +209,28 @@ public class SharedPreferencesUtil {\n         if (extractModel != null) {\n           customModels.add(extractModel);\n         }\n+      } else {\n+        matcher = Pattern.compile(DOWNLOADING_MODEL_ID_PATTERN).matcher(key);\n+        if (matcher.find()) {\n+          String modelName = matcher.group(matcher.groupCount());\n+          CustomModel extractModel = isDownloadCompleted(modelName);\n+          if (extractModel != null) {\n+            customModels.add(extractModel);\n+          }\n+        }\n       }\n     }\n     return customModels;\n   }\n \n+  synchronized CustomModel isDownloadCompleted(String modelName) {\n+    CustomModel downloadModel = getCustomModelDetails(modelName);\n+    // TODO(annz) check here if download currently in progress have completed.\n+    // if yes, then complete file relocation and return the updated model, otherwise return null\n+\n+    return null;\n+  }\n+\n   /**\n    * Clears all stored data related to a custom model download.\n    *\n"}}, {"oid": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "url": "https://github.com/firebase/firebase-android-sdk/commit/bc436f067ce328e8a5bba24c691b8a9acadf47f7", "message": "Update to background thread execution for listDownloadModels call.", "committedDate": "2020-11-09T21:34:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwOTgxMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520709812", "bodyText": "the is prefix in the name suggests a boolean response. What about using maybe, like maybeGetUpdatedModel? It's a bit more verbose.", "author": "rlazo", "createdAt": "2020-11-10T16:44:42Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java", "diffHunk": "@@ -209,11 +209,28 @@ public synchronized void clearModelDetails(@NonNull String modelName, boolean cl\n         if (extractModel != null) {\n           customModels.add(extractModel);\n         }\n+      } else {\n+        matcher = Pattern.compile(DOWNLOADING_MODEL_ID_PATTERN).matcher(key);\n+        if (matcher.find()) {\n+          String modelName = matcher.group(matcher.groupCount());\n+          CustomModel extractModel = isDownloadCompleted(modelName);\n+          if (extractModel != null) {\n+            customModels.add(extractModel);\n+          }\n+        }\n       }\n     }\n     return customModels;\n   }\n \n+  synchronized CustomModel isDownloadCompleted(String modelName) {", "originalCommit": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNzE4NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520817184", "bodyText": "Done", "author": "annzimmer", "createdAt": "2020-11-10T19:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwOTgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "chunk": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\nindex e27fc1fc..b6b7c566 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java\n\n@@ -213,7 +213,7 @@ public class SharedPreferencesUtil {\n         matcher = Pattern.compile(DOWNLOADING_MODEL_ID_PATTERN).matcher(key);\n         if (matcher.find()) {\n           String modelName = matcher.group(matcher.groupCount());\n-          CustomModel extractModel = isDownloadCompleted(modelName);\n+          CustomModel extractModel = maybeGetUpdatedModel(modelName);\n           if (extractModel != null) {\n             customModels.add(extractModel);\n           }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwOTk2OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520709968", "bodyText": "+1!", "author": "rlazo", "createdAt": "2020-11-10T16:44:56Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloader.java", "diffHunk": "@@ -94,7 +102,10 @@ public static FirebaseModelDownloader getInstance(@NonNull FirebaseApp app) {\n   /** @return The set of all models that are downloaded to this device. */\n   @NonNull\n   public Task<Set<CustomModel>> listDownloadedModels() {\n-    return Tasks.forResult(sharedPreferencesUtil.listDownloadedModels());\n+    TaskCompletionSource<Set<CustomModel>> taskCompletionSource = new TaskCompletionSource<>();", "originalCommit": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNDczMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520714730", "bodyText": "You could use a singleThread executor like in\n\n  \n    \n      firebase-android-sdk/firebase-messaging/src/test/java/com/google/firebase/messaging/ImageDownloadRoboTest.java\n    \n    \n         Line 53\n      in\n      fe51be9\n    \n    \n    \n    \n\n        \n          \n           executor = Executors.newSingleThreadExecutor(); \n        \n    \n  \n\n\nThat way the test shouldn't finish before running the tasks.", "author": "rlazo", "createdAt": "2020-11-10T16:51:12Z", "path": "firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java", "diffHunk": "@@ -51,14 +58,28 @@\n   CustomModel CUSTOM_MODEL = new CustomModel(MODEL_NAME, 0, 100, MODEL_HASH);\n \n   FirebaseModelDownloader firebaseModelDownloader;\n-  SharedPreferencesUtil mockPrefs = mock(SharedPreferencesUtil.class);\n+  @Mock SharedPreferencesUtil mockPrefs;\n+\n+  ExecutorService executor;\n \n   @Before\n   public void setUp() {\n+    MockitoAnnotations.initMocks(this);\n     FirebaseApp.clearInstancesForTest();\n     // default app\n     FirebaseApp.initializeApp(ApplicationProvider.getApplicationContext(), FIREBASE_OPTIONS);\n-    firebaseModelDownloader = new FirebaseModelDownloader(FIREBASE_OPTIONS, mockPrefs);\n+\n+    executor = new ThreadPoolExecutor(0, 1, 30L, TimeUnit.SECONDS, new LinkedBlockingQueue<>());", "originalCommit": "bc436f067ce328e8a5bba24c691b8a9acadf47f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNzE3NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r520817175", "bodyText": "Done", "author": "annzimmer", "createdAt": "2020-11-10T19:22:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxNDczMA=="}], "type": "inlineReview", "revised_code": {"commit": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "chunk": "diff --git a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\nindex 9710b9b6..a0b55fab 100644\n--- a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n+++ b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n\n@@ -69,7 +68,7 @@ public class FirebaseModelDownloaderTest {\n     // default app\n     FirebaseApp.initializeApp(ApplicationProvider.getApplicationContext(), FIREBASE_OPTIONS);\n \n-    executor = new ThreadPoolExecutor(0, 1, 30L, TimeUnit.SECONDS, new LinkedBlockingQueue<>());\n+    executor = Executors.newSingleThreadExecutor();\n     firebaseModelDownloader = new FirebaseModelDownloader(FIREBASE_OPTIONS, mockPrefs, executor);\n   }\n \n"}}, {"oid": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "url": "https://github.com/firebase/firebase-android-sdk/commit/c83d39299575f2776d0ae1c482adf42ad4e1cdad", "message": "Update to background thread execution for listDownloadModels call.", "committedDate": "2020-11-10T19:10:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA3ODgwMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521078801", "bodyText": "AFAIK this is no longer needed when using the single thread executor.", "author": "rlazo", "createdAt": "2020-11-11T03:22:27Z", "path": "firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java", "diffHunk": "@@ -14,34 +14,71 @@\n \n package com.google.firebase.ml.modeldownloader;\n \n+import static com.google.common.truth.Truth.assertThat;\n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertThrows;\n+import static org.mockito.Mockito.when;\n \n import androidx.test.core.app.ApplicationProvider;\n+import com.google.android.gms.tasks.Task;\n import com.google.firebase.FirebaseApp;\n import com.google.firebase.FirebaseOptions;\n+import com.google.firebase.FirebaseOptions.Builder;\n+import com.google.firebase.ml.modeldownloader.internal.SharedPreferencesUtil;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n import org.robolectric.RobolectricTestRunner;\n \n @RunWith(RobolectricTestRunner.class)\n public class FirebaseModelDownloaderTest {\n \n   public static final String TEST_PROJECT_ID = \"777777777777\";\n+  public static final FirebaseOptions FIREBASE_OPTIONS =\n+      new Builder()\n+          .setApplicationId(\"1:123456789:android:abcdef\")\n+          .setProjectId(TEST_PROJECT_ID)\n+          .build();\n   public static final String MODEL_NAME = \"MODEL_NAME_1\";\n   public static final CustomModelDownloadConditions DEFAULT_DOWNLOAD_CONDITIONS =\n       new CustomModelDownloadConditions.Builder().build();\n \n+  public static final String MODEL_HASH = \"dsf324\";\n+  // TODO replace with uploaded model.\n+  CustomModel CUSTOM_MODEL = new CustomModel(MODEL_NAME, 0, 100, MODEL_HASH);\n+\n+  FirebaseModelDownloader firebaseModelDownloader;\n+  @Mock SharedPreferencesUtil mockPrefs;\n+\n+  ExecutorService executor;\n+\n   @Before\n   public void setUp() {\n+    MockitoAnnotations.initMocks(this);\n     FirebaseApp.clearInstancesForTest();\n     // default app\n-    FirebaseApp.initializeApp(\n-        ApplicationProvider.getApplicationContext(),\n-        new FirebaseOptions.Builder()\n-            .setApplicationId(\"1:123456789:android:abcdef\")\n-            .setProjectId(TEST_PROJECT_ID)\n-            .build());\n+    FirebaseApp.initializeApp(ApplicationProvider.getApplicationContext(), FIREBASE_OPTIONS);\n+\n+    executor = Executors.newSingleThreadExecutor();\n+    firebaseModelDownloader = new FirebaseModelDownloader(FIREBASE_OPTIONS, mockPrefs, executor);\n+  }\n+\n+  @After\n+  public void cleanUp() {\n+    try {", "originalCommit": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxNTIzOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521415238", "bodyText": "thanks - going too fast.", "author": "annzimmer", "createdAt": "2020-11-11T14:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA3ODgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f21799f65e433c4fd5dcf732bfcad8cfe37a6dd8", "chunk": "diff --git a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\nindex a0b55fab..be3a1c21 100644\n--- a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n+++ b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n\n@@ -30,8 +30,6 @@ import java.util.Set;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n-import java.util.concurrent.TimeUnit;\n-import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA3OTE4OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521079189", "bodyText": "You can probably get rid of this too.", "author": "rlazo", "createdAt": "2020-11-11T03:22:57Z", "path": "firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java", "diffHunk": "@@ -54,10 +91,32 @@ public void getModel_unimplemented() {\n   }\n \n   @Test\n-  public void listDownloadedModels_unimplemented() {\n-    assertThrows(\n-        UnsupportedOperationException.class,\n-        () -> FirebaseModelDownloader.getInstance().listDownloadedModels());\n+  public void listDownloadedModels_returnsEmptyModelList()\n+      throws ExecutionException, InterruptedException {\n+    when(mockPrefs.listDownloadedModels()).thenReturn(Collections.emptySet());\n+    TestOnCompleteListener<Set<CustomModel>> onCompleteListener = new TestOnCompleteListener<>();\n+    Task<Set<CustomModel>> task = firebaseModelDownloader.listDownloadedModels();\n+    task.addOnCompleteListener(executor, onCompleteListener);\n+    Set<CustomModel> customModelSet = onCompleteListener.await();\n+\n+    assertThat(task.isComplete()).isTrue();\n+    assertEquals(customModelSet, Collections.EMPTY_SET);\n+  }\n+\n+  @Test\n+  public void listDownloadedModels_returnsModelList()\n+      throws ExecutionException, InterruptedException {\n+    when(mockPrefs.listDownloadedModels()).thenReturn(Collections.singleton(CUSTOM_MODEL));\n+\n+    TestOnCompleteListener<Set<CustomModel>> onCompleteListener = new TestOnCompleteListener<>();\n+    Task<Set<CustomModel>> task = firebaseModelDownloader.listDownloadedModels();\n+    task.addOnCompleteListener(executor, onCompleteListener);\n+    Set<CustomModel> customModelSet = onCompleteListener.await();\n+\n+    assertThat(task.isComplete()).isTrue();\n+    assertEquals(customModelSet, Collections.singleton(CUSTOM_MODEL));\n+\n+    executor.awaitTermination(500, TimeUnit.MILLISECONDS);", "originalCommit": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxNTIyNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521415227", "bodyText": "done", "author": "annzimmer", "createdAt": "2020-11-11T14:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA3OTE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f21799f65e433c4fd5dcf732bfcad8cfe37a6dd8", "chunk": "diff --git a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\nindex a0b55fab..be3a1c21 100644\n--- a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n+++ b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n\n@@ -115,8 +104,6 @@ public class FirebaseModelDownloaderTest {\n \n     assertThat(task.isComplete()).isTrue();\n     assertEquals(customModelSet, Collections.singleton(CUSTOM_MODEL));\n-\n-    executor.awaitTermination(500, TimeUnit.MILLISECONDS);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NDYwMw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521364603", "bodyText": "I wonder if Tasks.await(task) could be used instead here?", "author": "vkryachko", "createdAt": "2020-11-11T13:40:28Z", "path": "firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java", "diffHunk": "@@ -54,10 +91,32 @@ public void getModel_unimplemented() {\n   }\n \n   @Test\n-  public void listDownloadedModels_unimplemented() {\n-    assertThrows(\n-        UnsupportedOperationException.class,\n-        () -> FirebaseModelDownloader.getInstance().listDownloadedModels());\n+  public void listDownloadedModels_returnsEmptyModelList()\n+      throws ExecutionException, InterruptedException {\n+    when(mockPrefs.listDownloadedModels()).thenReturn(Collections.emptySet());\n+    TestOnCompleteListener<Set<CustomModel>> onCompleteListener = new TestOnCompleteListener<>();\n+    Task<Set<CustomModel>> task = firebaseModelDownloader.listDownloadedModels();\n+    task.addOnCompleteListener(executor, onCompleteListener);\n+    Set<CustomModel> customModelSet = onCompleteListener.await();", "originalCommit": "c83d39299575f2776d0ae1c482adf42ad4e1cdad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxNTE5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2154#discussion_r521415198", "bodyText": "I had tried that got - \"java.lang.IllegalStateException: Must not be called on the main application thread\", found this solution was used elsewhere.", "author": "annzimmer", "createdAt": "2020-11-11T14:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NDYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "f21799f65e433c4fd5dcf732bfcad8cfe37a6dd8", "chunk": "diff --git a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\nindex a0b55fab..be3a1c21 100644\n--- a/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n+++ b/firebase-ml-modeldownloader/src/test/java/com/google/firebase/ml/modeldownloader/FirebaseModelDownloaderTest.java\n\n@@ -115,8 +104,6 @@ public class FirebaseModelDownloaderTest {\n \n     assertThat(task.isComplete()).isTrue();\n     assertEquals(customModelSet, Collections.singleton(CUSTOM_MODEL));\n-\n-    executor.awaitTermination(500, TimeUnit.MILLISECONDS);\n   }\n \n   @Test\n"}}, {"oid": "f21799f65e433c4fd5dcf732bfcad8cfe37a6dd8", "url": "https://github.com/firebase/firebase-android-sdk/commit/f21799f65e433c4fd5dcf732bfcad8cfe37a6dd8", "message": "update executor usages in unit tests.", "committedDate": "2020-11-11T14:55:50Z", "type": "commit"}]}