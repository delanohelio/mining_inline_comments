{"pr_number": 1206, "pr_title": "Drop Array, Reference, Number, Integer and DoubleValue", "pr_createdAt": "2020-02-05T23:08:00Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1206", "timeline": [{"oid": "1602062c2763abaf2a77a4fd2067ae26e6c96965", "url": "https://github.com/firebase/firebase-android-sdk/commit/1602062c2763abaf2a77a4fd2067ae26e6c96965", "message": "Protobuf-backed FieldValues", "committedDate": "2020-02-04T04:03:55Z", "type": "commit"}, {"oid": "804a1b7a9d0304f13a394b2f46054f2409c52b37", "url": "https://github.com/firebase/firebase-android-sdk/commit/804a1b7a9d0304f13a394b2f46054f2409c52b37", "message": "Merge branch 'mrschmidt/rewritefieldvalue' into mrschmidt/final", "committedDate": "2020-02-04T21:39:54Z", "type": "commit"}, {"oid": "3d5d7c2570b34f0797602f6dd46e407232b3bf8b", "url": "https://github.com/firebase/firebase-android-sdk/commit/3d5d7c2570b34f0797602f6dd46e407232b3bf8b", "message": "Merge branch 'mrschmidt/rewritefieldvalue' into mrschmidt/final", "committedDate": "2020-02-04T23:44:07Z", "type": "commit"}, {"oid": "120ca33e5a7299151357ae0e70c8b23acfe6b9b9", "url": "https://github.com/firebase/firebase-android-sdk/commit/120ca33e5a7299151357ae0e70c8b23acfe6b9b9", "message": "Feedback", "committedDate": "2020-02-05T19:01:41Z", "type": "commit"}, {"oid": "82c0095659aa83194049693f1336af2864ce5287", "url": "https://github.com/firebase/firebase-android-sdk/commit/82c0095659aa83194049693f1336af2864ce5287", "message": "Update test-only variable", "committedDate": "2020-02-05T19:03:43Z", "type": "commit"}, {"oid": "98953a323513bbc0ef685ab9ca1ee9b9d98ee091", "url": "https://github.com/firebase/firebase-android-sdk/commit/98953a323513bbc0ef685ab9ca1ee9b9d98ee091", "message": "Add ProtoValues.contains()", "committedDate": "2020-02-05T19:34:33Z", "type": "commit"}, {"oid": "940a268825130e3c4c7609d8975d7c428f071f32", "url": "https://github.com/firebase/firebase-android-sdk/commit/940a268825130e3c4c7609d8975d7c428f071f32", "message": "Migrate ArrayTransforms to use Values", "committedDate": "2020-02-05T19:42:37Z", "type": "commit"}, {"oid": "7ea5b3737b23638bb99bcb032893674414c18895", "url": "https://github.com/firebase/firebase-android-sdk/commit/7ea5b3737b23638bb99bcb032893674414c18895", "message": "Migrate TransformResult to use Value", "committedDate": "2020-02-05T20:21:48Z", "type": "commit"}, {"oid": "637838b4497561644308d0eee7c3cedaee1a182d", "url": "https://github.com/firebase/firebase-android-sdk/commit/637838b4497561644308d0eee7c3cedaee1a182d", "message": "Drop Array, Reference, Number, Integer and DoubleValue", "committedDate": "2020-02-05T23:15:14Z", "type": "commit"}, {"oid": "637838b4497561644308d0eee7c3cedaee1a182d", "url": "https://github.com/firebase/firebase-android-sdk/commit/637838b4497561644308d0eee7c3cedaee1a182d", "message": "Drop Array, Reference, Number, Integer and DoubleValue", "committedDate": "2020-02-05T23:15:14Z", "type": "forcePushed"}, {"oid": "b5cc99840698f8fb2e799495fdd478ea1013bd04", "url": "https://github.com/firebase/firebase-android-sdk/commit/b5cc99840698f8fb2e799495fdd478ea1013bd04", "message": "Fix Kotlin", "committedDate": "2020-02-06T00:10:43Z", "type": "commit"}, {"oid": "162f0715043961e3fd1057a583230095276fb487", "url": "https://github.com/firebase/firebase-android-sdk/commit/162f0715043961e3fd1057a583230095276fb487", "message": "More Kotlin fixes", "committedDate": "2020-02-06T00:27:20Z", "type": "commit"}, {"oid": "13e01c89451b123d4bfee2e51e6adef782f1b102", "url": "https://github.com/firebase/firebase-android-sdk/commit/13e01c89451b123d4bfee2e51e6adef782f1b102", "message": "Review", "committedDate": "2020-02-06T00:56:21Z", "type": "commit"}, {"oid": "baf650e876d47b345418466f40e36f3b97912801", "url": "https://github.com/firebase/firebase-android-sdk/commit/baf650e876d47b345418466f40e36f3b97912801", "message": "Merge branch 'mrschmidt/rewritefieldvalue' into mrschmidt/final", "committedDate": "2020-02-06T01:54:45Z", "type": "commit"}, {"oid": "aa7b3ec782537107693ce98d405190397e8c610f", "url": "https://github.com/firebase/firebase-android-sdk/commit/aa7b3ec782537107693ce98d405190397e8c610f", "message": "Merge branch 'mrschmidt/final' into mrschmidt/migratevalues", "committedDate": "2020-02-06T01:54:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNTI0MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375605241", "bodyText": "If a caller other than wrapObject calls wrap on a Map<String, Object> this will return the wrong type.\nIt seems like this should parse the query value then check the type and wrap appropriately (or call FieldValue.valueOf). That would also mean that wrapObject wouldn't have change below.", "author": "wilhuff", "createdAt": "2020-02-06T01:54:26Z", "path": "firebase-firestore/ktx/src/test/java/com/google/firebase/firestore/testutil/TestUtil.java", "diffHunk": "@@ -36,12 +36,12 @@ public static FieldValue wrap(Object value) {\n     UserDataReader dataReader = new UserDataReader(databaseId);\n     // HACK: We use parseQueryValue() since it accepts scalars as well as arrays / objects, and\n     // our tests currently use wrap() pretty generically so we don't know the intent.\n-    return dataReader.parseQueryValue(value);\n+    return new FieldValue(dataReader.parseQueryValue(value));", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzOTY5OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375639699", "bodyText": "Fixed.  This conversion should go away entirely in a follow-up PR too.", "author": "schmidt-sebastian", "createdAt": "2020-02-06T04:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNTI0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "baf650e876d47b345418466f40e36f3b97912801", "chunk": "diff --git a/firebase-firestore/ktx/src/test/java/com/google/firebase/firestore/testutil/TestUtil.java b/firebase-firestore/ktx/src/test/java/com/google/firebase/firestore/testutil/TestUtil.java\nindex e6175d2b..22f49d6d 100644\n--- a/firebase-firestore/ktx/src/test/java/com/google/firebase/firestore/testutil/TestUtil.java\n+++ b/firebase-firestore/ktx/src/test/java/com/google/firebase/firestore/testutil/TestUtil.java\n\n@@ -36,12 +36,12 @@ public class TestUtil {\n     UserDataReader dataReader = new UserDataReader(databaseId);\n     // HACK: We use parseQueryValue() since it accepts scalars as well as arrays / objects, and\n     // our tests currently use wrap() pretty generically so we don't know the intent.\n-    return new FieldValue(dataReader.parseQueryValue(value));\n+    return dataReader.parseQueryValue(value);\n   }\n \n   public static ObjectValue wrapObject(Map<String, Object> value) {\n     // Cast is safe here because value passed in is a map\n-    return new ObjectValue(wrap(value).getProto());\n+    return (ObjectValue) wrap(value);\n   }\n \n   public static DocumentKey key(String key) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNjkwNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375606905", "bodyText": "Nearly all callers check the array type before calling this. It seems like it would be worth adding an alternative like this:\npublic static boolean arrayContains(Value haystack, Value needle) {\n  return isArray(haystack) && contains(haystack.getArrayValue(), needle);\n}", "author": "wilhuff", "createdAt": "2020-02-06T02:01:48Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java", "diffHunk": "@@ -157,8 +164,8 @@ private static boolean objectEquals(Value left, Value right) {\n   }\n \n   /** Returns true if the Value list contains the specified element. */\n-  public static boolean contains(List<Value> haystack, Value needle) {\n-    for (Value haystackEl : haystack) {\n+  public static boolean contains(ArrayValueOrBuilder haystack, Value needle) {", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDM0Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375640342", "bodyText": "Only ArrayContainsFilter does the check right at the callsite. All other filters verify the value in the constructor, which is IMHO the better thing to do since the assert will include a stacktrace that should indicate where the incorrect value was created.\nFurthermore, ArrayTransformOperation doesn't have a Value, it only operates on ArrayValue.Builder. For that reason, I left this as is for now.", "author": "schmidt-sebastian", "createdAt": "2020-02-06T04:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNjkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\nindex e9b9a9a4..08c69717 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\n\n@@ -165,8 +165,8 @@ public class ProtoValues {\n \n   /** Returns true if the Value list contains the specified element. */\n   public static boolean contains(ArrayValueOrBuilder haystack, Value needle) {\n-    for (Value haystackEl : haystack.getValuesList()) {\n-      if (equals(haystackEl, needle)) {\n+    for (Value haystackElement : haystack.getValuesList()) {\n+      if (equals(haystackElement, needle)) {\n         return true;\n       }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNzY3Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375607672", "bodyText": "While we're fixing the format here, should we separate these values with something?\n(Optional; may not be worth it. Just a thought because it may make these more readable.)", "author": "wilhuff", "createdAt": "2020-02-06T02:05:24Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/core/Bound.java", "diffHunk": "@@ -64,8 +65,8 @@ public String canonicalString() {\n     } else {\n       builder.append(\"a:\");\n     }\n-    for (FieldValue indexComponent : position) {\n-      builder.append(indexComponent.toString());\n+    for (Value indexComponent : position) {\n+      builder.append(ProtoValues.canonicalId(indexComponent));", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDgzNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375640836", "bodyText": "Added comma separation.", "author": "schmidt-sebastian", "createdAt": "2020-02-06T04:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNzY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/Bound.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/Bound.java\nindex 2fe7202a..4f8526cf 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/Bound.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/Bound.java\n\n@@ -65,7 +65,12 @@ public final class Bound {\n     } else {\n       builder.append(\"a:\");\n     }\n+    boolean first = true;\n     for (Value indexComponent : position) {\n+      if (!first) {\n+        builder.append(\",\");\n+      }\n+      first = false;\n       builder.append(ProtoValues.canonicalId(indexComponent));\n     }\n     return builder.toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODA1Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375608057", "bodyText": "doc.getFieldProto(getField())?", "author": "wilhuff", "createdAt": "2020-02-06T02:07:21Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/core/InFilter.java", "diffHunk": "@@ -14,23 +14,24 @@\n \n package com.google.firebase.firestore.core;\n \n+import static com.google.firebase.firestore.util.Assert.hardAssert;\n+\n import com.google.firebase.firestore.model.Document;\n import com.google.firebase.firestore.model.FieldPath;\n-import com.google.firebase.firestore.model.value.ArrayValue;\n import com.google.firebase.firestore.model.value.FieldValue;\n import com.google.firebase.firestore.model.value.ProtoValues;\n+import com.google.firestore.v1.Value;\n \n /** A Filter that implements the IN operator. */\n public class InFilter extends FieldFilter {\n-  InFilter(FieldPath field, ArrayValue value) {\n+  InFilter(FieldPath field, Value value) {\n     super(field, Operator.IN, value);\n+    hardAssert(ProtoValues.isArray(value), \"InFilter expects an ArrayValue\");\n   }\n \n   @Override\n   public boolean matches(Document doc) {\n     FieldValue other = doc.getField(getField());", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDk1NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375640954", "bodyText": "Yup! Done.", "author": "schmidt-sebastian", "createdAt": "2020-02-06T04:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/InFilter.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/InFilter.java\nindex 4e5871e2..5d719041 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/InFilter.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/InFilter.java\n\n@@ -18,7 +18,6 @@ import static com.google.firebase.firestore.util.Assert.hardAssert;\n \n import com.google.firebase.firestore.model.Document;\n import com.google.firebase.firestore.model.FieldPath;\n-import com.google.firebase.firestore.model.value.FieldValue;\n import com.google.firebase.firestore.model.value.ProtoValues;\n import com.google.firestore.v1.Value;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODM5OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375608399", "bodyText": "This seems like something we could store as a field. It doesn't change for every document we match.", "author": "wilhuff", "createdAt": "2020-02-06T02:08:53Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldFilter.java", "diffHunk": "@@ -14,20 +14,25 @@\n \n package com.google.firebase.firestore.core;\n \n+import static com.google.firebase.firestore.util.Assert.hardAssert;\n+\n import com.google.firebase.firestore.model.Document;\n+import com.google.firebase.firestore.model.DocumentKey;\n import com.google.firebase.firestore.model.FieldPath;\n-import com.google.firebase.firestore.model.value.ReferenceValue;\n+import com.google.firebase.firestore.model.value.ProtoValues;\n+import com.google.firestore.v1.Value;\n \n /** Filter that matches on key fields (i.e. '__name__'). */\n public class KeyFieldFilter extends FieldFilter {\n-  KeyFieldFilter(FieldPath field, Operator operator, ReferenceValue value) {\n+  KeyFieldFilter(FieldPath field, Operator operator, Value value) {\n     super(field, operator, value);\n+    hardAssert(ProtoValues.isReferenceValue(value), \"KeyFieldFilter expects a ReferenceValue\");\n   }\n \n   @Override\n   public boolean matches(Document doc) {\n-    ReferenceValue referenceValue = (ReferenceValue) getValue();\n-    int comparator = doc.getKey().compareTo(referenceValue.getKey());\n+    DocumentKey referencedKey = DocumentKey.fromName(getValue().getReferenceValue());", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MTA5OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375641099", "bodyText": "Done.", "author": "schmidt-sebastian", "createdAt": "2020-02-06T05:00:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwODM5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldFilter.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldFilter.java\nindex 1739fadb..19d4484c 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldFilter.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldFilter.java\n\n@@ -24,15 +24,17 @@ import com.google.firestore.v1.Value;\n \n /** Filter that matches on key fields (i.e. '__name__'). */\n public class KeyFieldFilter extends FieldFilter {\n+  private final DocumentKey key;\n+\n   KeyFieldFilter(FieldPath field, Operator operator, Value value) {\n     super(field, operator, value);\n     hardAssert(ProtoValues.isReferenceValue(value), \"KeyFieldFilter expects a ReferenceValue\");\n+    key = DocumentKey.fromName(getValue().getReferenceValue());\n   }\n \n   @Override\n   public boolean matches(Document doc) {\n-    DocumentKey referencedKey = DocumentKey.fromName(getValue().getReferenceValue());\n-    int comparator = doc.getKey().compareTo(referencedKey);\n+    int comparator = doc.getKey().compareTo(key);\n     return this.matchesComparison(comparator);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMTUzMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375611532", "bodyText": "Similarly we could do this conversion once in the constructor and keep a list of document keys as a field.", "author": "wilhuff", "createdAt": "2020-02-06T02:24:26Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldInFilter.java", "diffHunk": "@@ -17,26 +17,27 @@\n import static com.google.firebase.firestore.util.Assert.hardAssert;\n \n import com.google.firebase.firestore.model.Document;\n+import com.google.firebase.firestore.model.DocumentKey;\n import com.google.firebase.firestore.model.FieldPath;\n-import com.google.firebase.firestore.model.value.ArrayValue;\n-import com.google.firebase.firestore.model.value.FieldValue;\n-import com.google.firebase.firestore.model.value.ReferenceValue;\n+import com.google.firebase.firestore.model.value.ProtoValues;\n+import com.google.firestore.v1.Value;\n \n public class KeyFieldInFilter extends FieldFilter {\n-  KeyFieldInFilter(FieldPath field, ArrayValue value) {\n+  KeyFieldInFilter(FieldPath field, Value value) {\n     super(field, Operator.IN, value);\n-    for (FieldValue refValue : value.getValues()) {\n+    hardAssert(ProtoValues.isArray(value), \"KeyFieldInFilter expects an ArrayValue\");\n+    for (Value element : value.getArrayValue().getValuesList()) {\n       hardAssert(\n-          refValue instanceof ReferenceValue,\n+          ProtoValues.isReferenceValue(element),\n           \"Comparing on key with IN, but an array value was not a ReferenceValue\");\n     }\n   }\n \n   @Override\n   public boolean matches(Document doc) {\n-    ArrayValue arrayValue = (ArrayValue) getValue();\n-    for (FieldValue refValue : arrayValue.getValues()) {\n-      if (doc.getKey().equals(((ReferenceValue) refValue).getKey())) {\n+    for (Value refValue : getValue().getArrayValue().getValuesList()) {\n+      DocumentKey referencedKey = DocumentKey.fromName(refValue.getReferenceValue());", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MTY4MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375641680", "bodyText": "Done. This simplifies the code a bit since I can now use List.contains().", "author": "schmidt-sebastian", "createdAt": "2020-02-06T05:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMTUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldInFilter.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldInFilter.java\nindex e2757f28..852d43cd 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldInFilter.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/core/KeyFieldInFilter.java\n\n@@ -21,26 +21,26 @@ import com.google.firebase.firestore.model.DocumentKey;\n import com.google.firebase.firestore.model.FieldPath;\n import com.google.firebase.firestore.model.value.ProtoValues;\n import com.google.firestore.v1.Value;\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class KeyFieldInFilter extends FieldFilter {\n+  private final List<DocumentKey> keys = new ArrayList<>();\n+\n   KeyFieldInFilter(FieldPath field, Value value) {\n     super(field, Operator.IN, value);\n+\n     hardAssert(ProtoValues.isArray(value), \"KeyFieldInFilter expects an ArrayValue\");\n     for (Value element : value.getArrayValue().getValuesList()) {\n       hardAssert(\n           ProtoValues.isReferenceValue(element),\n           \"Comparing on key with IN, but an array value was not a ReferenceValue\");\n+      keys.add(DocumentKey.fromName(element.getReferenceValue()));\n     }\n   }\n \n   @Override\n   public boolean matches(Document doc) {\n-    for (Value refValue : getValue().getArrayValue().getValuesList()) {\n-      DocumentKey referencedKey = DocumentKey.fromName(refValue.getReferenceValue());\n-      if (doc.getKey().equals(referencedKey)) {\n-        return true;\n-      }\n-    }\n-    return false;\n+    return keys.contains(doc.getKey());\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMjUxNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375612517", "bodyText": "Nit: Java doesn't tend to abbreviate like this. Consider naming this just element, or haystackElement if you want to preserve the binding to the haystack.", "author": "wilhuff", "createdAt": "2020-02-06T02:28:49Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java", "diffHunk": "@@ -157,8 +164,8 @@ private static boolean objectEquals(Value left, Value right) {\n   }\n \n   /** Returns true if the Value list contains the specified element. */\n-  public static boolean contains(List<Value> haystack, Value needle) {\n-    for (Value haystackEl : haystack) {\n+  public static boolean contains(ArrayValueOrBuilder haystack, Value needle) {\n+    for (Value haystackEl : haystack.getValuesList()) {", "originalCommit": "162f0715043961e3fd1057a583230095276fb487", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MTc2Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1206#discussion_r375641767", "bodyText": "Used haystackElement", "author": "schmidt-sebastian", "createdAt": "2020-02-06T05:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMjUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "774598a7f912b8558e50109d7822b9bf421f717c", "chunk": "diff --git a/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java b/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\nindex e9b9a9a4..08c69717 100644\n--- a/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\n+++ b/firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java\n\n@@ -165,8 +165,8 @@ public class ProtoValues {\n \n   /** Returns true if the Value list contains the specified element. */\n   public static boolean contains(ArrayValueOrBuilder haystack, Value needle) {\n-    for (Value haystackEl : haystack.getValuesList()) {\n-      if (equals(haystackEl, needle)) {\n+    for (Value haystackElement : haystack.getValuesList()) {\n+      if (equals(haystackElement, needle)) {\n         return true;\n       }\n     }\n"}}, {"oid": "774598a7f912b8558e50109d7822b9bf421f717c", "url": "https://github.com/firebase/firebase-android-sdk/commit/774598a7f912b8558e50109d7822b9bf421f717c", "message": "Feedback", "committedDate": "2020-02-06T05:07:07Z", "type": "commit"}, {"oid": "490c924d4d77d91fa861f5cf7d6b7629808949a3", "url": "https://github.com/firebase/firebase-android-sdk/commit/490c924d4d77d91fa861f5cf7d6b7629808949a3", "message": "Make FieldValue package-private", "committedDate": "2020-02-06T05:11:08Z", "type": "commit"}, {"oid": "0abdfb1698347c81beed67ba720b9003d7766dd4", "url": "https://github.com/firebase/firebase-android-sdk/commit/0abdfb1698347c81beed67ba720b9003d7766dd4", "message": "Merge branch 'mrschmidt/migratevalues' into mrschmidt/droparray", "committedDate": "2020-02-06T05:11:24Z", "type": "commit"}, {"oid": "6ef7289eeae1ab4b2e421294929e675556fe1d68", "url": "https://github.com/firebase/firebase-android-sdk/commit/6ef7289eeae1ab4b2e421294929e675556fe1d68", "message": "Merge", "committedDate": "2020-02-06T05:17:36Z", "type": "commit"}]}