{"pr_number": 1175, "pr_title": "Add support for ignoring nulls in JsonDataEncoder", "pr_createdAt": "2020-01-29T20:37:52Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1175", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372654068", "bodyText": "I think you can go further simplify by just adding here\nif (ignoreNullValues && o == null) return this;\n\nand the rest of the code can stay the same.", "author": "rlazo", "createdAt": "2020-01-29T21:59:02Z", "path": "encoders/firebase-encoders-json/src/json/java/com/google/firebase/encoders/json/JsonValueObjectEncoderContext.java", "diffHunk": "@@ -37,36 +37,37 @@\n   private final Map<Class<?>, ObjectEncoder<?>> objectEncoders;\n   private final Map<Class<?>, ValueEncoder<?>> valueEncoders;\n   private final ObjectEncoder<Object> fallbackEncoder;\n+  private final boolean ignoreNullValues;\n \n   JsonValueObjectEncoderContext(\n       @NonNull Writer writer,\n       @NonNull Map<Class<?>, ObjectEncoder<?>> objectEncoders,\n       @NonNull Map<Class<?>, ValueEncoder<?>> valueEncoders,\n-      ObjectEncoder<Object> fallbackEncoder) {\n+      ObjectEncoder<Object> fallbackEncoder,\n+      boolean ignoreNullValues) {\n     this.jsonWriter = new JsonWriter(writer);\n     this.objectEncoders = objectEncoders;\n     this.valueEncoders = valueEncoders;\n     this.fallbackEncoder = fallbackEncoder;\n+    this.ignoreNullValues = ignoreNullValues;\n   }\n \n   private JsonValueObjectEncoderContext(JsonValueObjectEncoderContext anotherContext) {\n     this.jsonWriter = anotherContext.jsonWriter;\n     this.objectEncoders = anotherContext.objectEncoders;\n     this.valueEncoders = anotherContext.valueEncoders;\n     this.fallbackEncoder = anotherContext.fallbackEncoder;\n+    this.ignoreNullValues = anotherContext.ignoreNullValues;\n   }\n \n   @NonNull\n   @Override\n   public JsonValueObjectEncoderContext add(@NonNull String name, @Nullable Object o)\n       throws IOException, EncodingException {\n-    maybeUnNest();\n-    jsonWriter.name(name);\n-    if (o == null) {\n-      jsonWriter.nullValue();\n-      return this;\n+    if (ignoreNullValues) {", "originalCommit": "ae2ca18015214cd34cf01fe6730bf79bc4e2ac57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDk0OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372654948", "bodyText": "The reason I didn't go with that approach is that, in the case ignoreNullValues is true, and o is not null, it will be null-checked a second time unnecessarily.", "author": "mrwillis21", "createdAt": "2020-01-29T22:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1Njg2NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372656865", "bodyText": "Actually, both methods internalAdd and internalAddIgnoreNullValues have a if (o == null) condition, so the second check still happens.", "author": "rlazo", "createdAt": "2020-01-29T22:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NzkxMw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372657913", "bodyText": "Yes, in either case, o gets null-checked once. But if I just added that line to the original method, o would get null-checked again after jsonWriter.name(name);", "author": "mrwillis21", "createdAt": "2020-01-29T22:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2NzcyNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372667726", "bodyText": "TL;DR; LGTM\nLong form: Actually, the conditional will short-circuit if ignoreNullValues==false, so the \"first check\" will only happen when ignoreNullValues=true and o != null, which most like is going to be most common case :-)", "author": "rlazo", "createdAt": "2020-01-29T22:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2ODU0NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1175#discussion_r372668545", "bodyText": "I think this is essentially what I was saying before. :) And I agree, it will most likely be the common case when ignoreNullValues is true.\n\nThe reason I didn't go with that approach is that, in the case ignoreNullValues is true, and o is not null, it will be null-checked a second time unnecessarily.", "author": "mrwillis21", "createdAt": "2020-01-29T22:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NDA2OA=="}], "type": "inlineReview", "revised_code": {"commit": "c21ccaec437242756e4199b887037db614b67d31", "chunk": "diff --git a/encoders/firebase-encoders-json/src/json/java/com/google/firebase/encoders/json/JsonValueObjectEncoderContext.java b/encoders/firebase-encoders-json/src/json/java/com/google/firebase/encoders/json/JsonValueObjectEncoderContext.java\nindex 9f37311d..2bdc38f4 100644\n--- a/encoders/firebase-encoders-json/src/json/java/com/google/firebase/encoders/json/JsonValueObjectEncoderContext.java\n+++ b/encoders/firebase-encoders-json/src/json/java/com/google/firebase/encoders/json/JsonValueObjectEncoderContext.java\n\n@@ -31,25 +31,30 @@ import java.util.Map;\n \n final class JsonValueObjectEncoderContext implements ObjectEncoderContext, ValueEncoderContext {\n \n+  private interface AddMethod {\n+    JsonValueObjectEncoderContext invoke(@NonNull String name, @Nullable Object o)\n+        throws IOException, EncodingException;\n+  }\n+\n   private JsonValueObjectEncoderContext childContext = null;\n   private boolean active = true;\n   private final JsonWriter jsonWriter;\n   private final Map<Class<?>, ObjectEncoder<?>> objectEncoders;\n   private final Map<Class<?>, ValueEncoder<?>> valueEncoders;\n   private final ObjectEncoder<Object> fallbackEncoder;\n-  private final boolean ignoreNullValues;\n+  private final AddMethod addMethod;\n \n   JsonValueObjectEncoderContext(\n       @NonNull Writer writer,\n       @NonNull Map<Class<?>, ObjectEncoder<?>> objectEncoders,\n       @NonNull Map<Class<?>, ValueEncoder<?>> valueEncoders,\n       ObjectEncoder<Object> fallbackEncoder,\n-      boolean ignoreNullValues) {\n+      boolean ignoreNulls) {\n     this.jsonWriter = new JsonWriter(writer);\n     this.objectEncoders = objectEncoders;\n     this.valueEncoders = valueEncoders;\n     this.fallbackEncoder = fallbackEncoder;\n-    this.ignoreNullValues = ignoreNullValues;\n+    this.addMethod = ignoreNulls ? this::internalAddIgnoreNulls : this::internalAdd;\n   }\n \n   private JsonValueObjectEncoderContext(JsonValueObjectEncoderContext anotherContext) {\n"}}, {"oid": "c21ccaec437242756e4199b887037db614b67d31", "url": "https://github.com/firebase/firebase-android-sdk/commit/c21ccaec437242756e4199b887037db614b67d31", "message": "Add support for ignoring nulls in JsonDataEncoder", "committedDate": "2020-01-30T16:30:45Z", "type": "commit"}, {"oid": "94604dc579327ff46ca459d8243fd13879b4e331", "url": "https://github.com/firebase/firebase-android-sdk/commit/94604dc579327ff46ca459d8243fd13879b4e331", "message": "Change 'ignoreNulls' to 'ignoreNullValues'", "committedDate": "2020-01-30T16:30:45Z", "type": "commit"}, {"oid": "5113d03c0990076b196e3172bad3720e1e968d3d", "url": "https://github.com/firebase/firebase-android-sdk/commit/5113d03c0990076b196e3172bad3720e1e968d3d", "message": "Add to API file and bump version", "committedDate": "2020-01-30T16:30:45Z", "type": "commit"}, {"oid": "fd90d1a94ca5ae6e6167e395cc2a93df34d41f31", "url": "https://github.com/firebase/firebase-android-sdk/commit/fd90d1a94ca5ae6e6167e395cc2a93df34d41f31", "message": "Replace dynamic dispatch with simpler 'if' check", "committedDate": "2020-01-30T16:30:45Z", "type": "commit"}, {"oid": "202f3f9f95aca0abd27bf662911339a0f33b6e4c", "url": "https://github.com/firebase/firebase-android-sdk/commit/202f3f9f95aca0abd27bf662911339a0f33b6e4c", "message": "Remove interface", "committedDate": "2020-01-30T16:30:45Z", "type": "commit"}, {"oid": "202f3f9f95aca0abd27bf662911339a0f33b6e4c", "url": "https://github.com/firebase/firebase-android-sdk/commit/202f3f9f95aca0abd27bf662911339a0f33b6e4c", "message": "Remove interface", "committedDate": "2020-01-30T16:30:45Z", "type": "forcePushed"}]}