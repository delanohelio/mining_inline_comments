{"pr_number": 1469, "pr_title": "Upgrade robolectric and target api 29.", "pr_createdAt": "2020-04-15T16:57:20Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1469", "timeline": [{"oid": "1b1c01ff7a443eaada40ff2df61eef3857f4e810", "url": "https://github.com/firebase/firebase-android-sdk/commit/1b1c01ff7a443eaada40ff2df61eef3857f4e810", "message": "Upgrade robolectric and target api 29.", "committedDate": "2020-04-15T16:56:20Z", "type": "commit"}, {"oid": "76801df4c2f8b506ae293d7acd5af6f70b8897d0", "url": "https://github.com/firebase/firebase-android-sdk/commit/76801df4c2f8b506ae293d7acd5af6f70b8897d0", "message": "Fix tests.", "committedDate": "2020-04-15T18:47:54Z", "type": "commit"}, {"oid": "b3c7f9bb1fa71655e240e901bc009e548b1376b9", "url": "https://github.com/firebase/firebase-android-sdk/commit/b3c7f9bb1fa71655e240e901bc009e548b1376b9", "message": "Fix", "committedDate": "2020-04-15T19:04:03Z", "type": "commit"}, {"oid": "fe53fc5ee1595118ba40824b20350620d427f9b7", "url": "https://github.com/firebase/firebase-android-sdk/commit/fe53fc5ee1595118ba40824b20350620d427f9b7", "message": "Fixes", "committedDate": "2020-04-15T19:20:48Z", "type": "commit"}, {"oid": "e07ab87bef525f79c0d1a89537038eeea1064bc6", "url": "https://github.com/firebase/firebase-android-sdk/commit/e07ab87bef525f79c0d1a89537038eeea1064bc6", "message": "Fix groovy issues for jdk11", "committedDate": "2020-04-15T19:35:50Z", "type": "commit"}, {"oid": "f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "url": "https://github.com/firebase/firebase-android-sdk/commit/f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "message": "Add missed android sdk versions", "committedDate": "2020-04-15T20:28:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDQ1OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409120459", "bodyText": "Intentional?", "author": "ashwinraghav", "createdAt": "2020-04-15T20:40:58Z", "path": "firebase-database/src/main/java/com/google/firebase/database/tubesock/WebSocket.java", "diffHunk": "@@ -14,7 +14,6 @@\n \n package com.google.firebase.database.tubesock;\n \n-import android.net.SSLCertificateSocketFactory;", "originalCommit": "f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyNjc1MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409126750", "bodyText": "Avoiding deprecation warnings, which are configured as hard errors in these projects", "author": "vkryachko", "createdAt": "2020-04-15T20:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDQ1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDU5Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409120593", "bodyText": "Intentional?", "author": "ashwinraghav", "createdAt": "2020-04-15T20:41:12Z", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/AndroidConnectivityMonitor.java", "diffHunk": "@@ -124,10 +123,11 @@ public void onLost(Network network) {\n     private boolean isConnected = false;\n \n     @Override\n+    @SuppressWarnings(\"deprecation\")\n     public void onReceive(Context context, Intent intent) {\n       ConnectivityManager conn =\n           (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\n-      NetworkInfo networkInfo = conn.getActiveNetworkInfo();\n+      android.net.NetworkInfo networkInfo = conn.getActiveNetworkInfo();", "originalCommit": "f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDc3Ng==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409120776", "bodyText": "Ditto", "author": "ashwinraghav", "createdAt": "2020-04-15T20:41:34Z", "path": "firebase-storage/src/main/java/com/google/firebase/storage/network/NetworkRequest.java", "diffHunk": "@@ -235,7 +235,7 @@ public void performRequestStart(String token) {\n     }\n     ConnectivityManager connMgr =\n         (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\n-    NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n+    android.net.NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();", "originalCommit": "f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMjc3Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409122777", "bodyText": "Can You help understand what this does?", "author": "ashwinraghav", "createdAt": "2020-04-15T20:45:14Z", "path": "buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/ClosureUtil.java", "diffHunk": "@@ -0,0 +1,34 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.gradle.plugins;\n+\n+import groovy.lang.Closure;\n+import java.util.function.Consumer;\n+\n+public final class ClosureUtil {", "originalCommit": "f4e1c88e895bbd97d2c1790c60cc687f82e7a009", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyODIxMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1469#discussion_r409128211", "bodyText": "this is to express the following in java(this api is not java-friendly):\nandroid.testOptions.unitTests.all {\n // this is a groovy closure that is hard to implement in java, hence this util class\n}", "author": "vkryachko", "createdAt": "2020-04-15T20:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMjc3Nw=="}], "type": "inlineReview", "revised_code": null}]}