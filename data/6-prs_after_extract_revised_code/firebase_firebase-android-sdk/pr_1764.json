{"pr_number": 1764, "pr_title": "Patch caching fid in memory on successful registration.", "pr_createdAt": "2020-07-07T23:26:46Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1764", "timeline": [{"oid": "282ee73ca80ca5a332a9ce78e705edb7ac3f09ad", "url": "https://github.com/firebase/firebase-android-sdk/commit/282ee73ca80ca5a332a9ce78e705edb7ac3f09ad", "message": "Revert \"Completing getId call with the disk reads on the caller thread.   (#1570)\"\n\nThis reverts commit 1a36dd76", "committedDate": "2020-07-07T20:25:47Z", "type": "commit"}, {"oid": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "url": "https://github.com/firebase/firebase-android-sdk/commit/d17d57045ad0e678e7eaeb26d7b75efce0284265", "message": "Updating caching FID implementation due to the revert PR.", "committedDate": "2020-07-07T23:16:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxNjkxMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451216910", "bodyText": "This class needs some JavaDoc.", "author": "andirayo", "createdAt": "2020-07-08T00:32:39Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright 2019 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.installations;\n+\n+import com.google.android.gms.tasks.TaskCompletionSource;\n+import com.google.firebase.installations.local.PersistedInstallationEntry;\n+\n+class GetIdListener implements StateListener {", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java b/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\nindex dd79c2c9..e1ac46cc 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\n\n@@ -17,6 +17,10 @@ package com.google.firebase.installations;\n import com.google.android.gms.tasks.TaskCompletionSource;\n import com.google.firebase.installations.local.PersistedInstallationEntry;\n \n+/**\n+ * This class manages {@link PersistedInstallationEntry} state transitions valid for getId() and\n+ * updates the caller once the id is generated.\n+ */\n class GetIdListener implements StateListener {\n   final TaskCompletionSource<String> taskCompletionSource;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxNzA3Mw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451217073", "bodyText": "Maybe add a comment what are the other states the entry could be in?", "author": "andirayo", "createdAt": "2020-07-08T00:33:18Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright 2019 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.installations;\n+\n+import com.google.android.gms.tasks.TaskCompletionSource;\n+import com.google.firebase.installations.local.PersistedInstallationEntry;\n+\n+class GetIdListener implements StateListener {\n+  final TaskCompletionSource<String> taskCompletionSource;\n+\n+  public GetIdListener(TaskCompletionSource<String> taskCompletionSource) {\n+    this.taskCompletionSource = taskCompletionSource;\n+  }\n+\n+  @Override\n+  public boolean onStateReached(PersistedInstallationEntry persistedInstallationEntry) {\n+    if (persistedInstallationEntry.isUnregistered()\n+        || persistedInstallationEntry.isRegistered()\n+        || persistedInstallationEntry.isErrored()) {\n+      taskCompletionSource.trySetResult(persistedInstallationEntry.getFirebaseInstallationId());\n+      return true;\n+    }\n+    return false;", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java b/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\nindex dd79c2c9..e1ac46cc 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/GetIdListener.java\n\n@@ -17,6 +17,10 @@ package com.google.firebase.installations;\n import com.google.android.gms.tasks.TaskCompletionSource;\n import com.google.firebase.installations.local.PersistedInstallationEntry;\n \n+/**\n+ * This class manages {@link PersistedInstallationEntry} state transitions valid for getId() and\n+ * updates the caller once the id is generated.\n+ */\n class GetIdListener implements StateListener {\n   final TaskCompletionSource<String> taskCompletionSource;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjAyNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451222026", "bodyText": "The way I read the code this does not only do \"registration\", but also auth token refresh.\nThus, I think the new name is misleading.\nHow about something that describes what is happening?\nHere is a suggestion, maybe you have a better idea.\ngetLocalDataOrSendRequestToFirebaseInstallationsApi()", "author": "andirayo", "createdAt": "2020-07-08T00:52:50Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -322,7 +341,8 @@ private String doGetId() {\n    * @param forceRefresh true if this is for a getAuthToken call and if the caller wants to fetch a\n    *     new auth token from the server even if an unexpired auth token exists on the client.\n    */\n-  private void doGetAuthToken(boolean forceRefresh) {\n+  private final void doRegistrationInternal(boolean forceRefresh) {", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjE5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451222198", "bodyText": "As a related question: Where do you decide which request to actually send, i.e. #CreateInstallation (\"registration\") or #GenerateAuthToken (\"refresh\")?", "author": "andirayo", "createdAt": "2020-07-08T00:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4ODgxMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451888811", "bodyText": "In the below method called doNetworkCallIfNecessary", "author": "ankitaj224", "createdAt": "2020-07-08T23:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4ODkyMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451888920", "bodyText": "changed it to doRegistrationOrRefresh.", "author": "ankitaj224", "createdAt": "2020-07-08T23:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "85910e3a03cfdc16604066f7d4a06874265793ec", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex 474dac83..57ae1df0 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -341,7 +329,7 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n    * @param forceRefresh true if this is for a getAuthToken call and if the caller wants to fetch a\n    *     new auth token from the server even if an unexpired auth token exists on the client.\n    */\n-  private final void doRegistrationInternal(boolean forceRefresh) {\n+  private final void doRegistrationOrRefresh(boolean forceRefresh) {\n \n     PersistedInstallationEntry prefs = getPrefsWithGeneratedIdMultiProcessSafe();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjkzNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451222936", "bodyText": "What do we need these methods for?", "author": "andirayo", "createdAt": "2020-07-08T00:56:29Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -300,17 +320,16 @@ private synchronized String getCacheFid() {\n     return cachedFid;\n   }\n \n-  private String doGetId() {\n+  private final void doGetAuthTokenForceRefresh() {\n+    doRegistrationInternal(true);\n+  }\n \n-    String fid = getCacheFid();\n-    if (fid != null) {\n-      return fid;\n-    }\n-    PersistedInstallationEntry prefs = getPrefsWithGeneratedIdMultiProcessSafe();\n-    // Execute network calls (CreateInstallations) to the FIS Servers on a separate executor\n-    // i.e networkExecutor\n-    networkExecutor.execute(() -> doNetworkCallIfNecessary(false));\n-    return prefs.getFirebaseInstallationId();\n+  private final void doGetAuthTokenWithoutForceRefresh() {\n+    doRegistrationInternal(false);\n+  }\n+\n+  private final void doGetId() {\n+    doRegistrationInternal(false);\n   }", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex 474dac83..28f94e73 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -320,18 +318,6 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n     return cachedFid;\n   }\n \n-  private final void doGetAuthTokenForceRefresh() {\n-    doRegistrationInternal(true);\n-  }\n-\n-  private final void doGetAuthTokenWithoutForceRefresh() {\n-    doRegistrationInternal(false);\n-  }\n-\n-  private final void doGetId() {\n-    doRegistrationInternal(false);\n-  }\n-\n   /**\n    * Logic for handling get id and the two forms of get auth token. This handles all the work,\n    * including creating a new FID if one hasn't been generated yet and making the network calls to\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMzUxMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451223510", "bodyText": "Can we prevent code duplication from method below?", "author": "andirayo", "createdAt": "2020-07-08T00:58:57Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -256,6 +267,15 @@ String getName() {\n     return Tasks.call(backgroundExecutor, this::deleteFirebaseInstallationId);\n   }\n \n+  private Task<String> addGetIdListener() {\n+    TaskCompletionSource<String> taskCompletionSource = new TaskCompletionSource<>();\n+    StateListener l = new GetIdListener(taskCompletionSource);\n+    synchronized (lock) {\n+      listeners.add(l);\n+    }\n+    return taskCompletionSource.getTask();\n+  }\n+", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex 474dac83..28f94e73 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -270,9 +266,7 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   private Task<String> addGetIdListener() {\n     TaskCompletionSource<String> taskCompletionSource = new TaskCompletionSource<>();\n     StateListener l = new GetIdListener(taskCompletionSource);\n-    synchronized (lock) {\n-      listeners.add(l);\n-    }\n+    addStateListeners(l);\n     return taskCompletionSource.getTask();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNDI1Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1764#discussion_r451224257", "bodyText": "How about we just call #doGetAuthToken directly (or the new name respectively).\nbackgroundExecutor.execute(() -> this::doGetAuthToken(forceRefresh));", "author": "andirayo", "createdAt": "2020-07-08T01:01:47Z", "path": "firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java", "diffHunk": "@@ -241,7 +248,11 @@ String getName() {\n   public Task<InstallationTokenResult> getToken(boolean forceRefresh) {\n     preConditionChecks();\n     Task<InstallationTokenResult> task = addGetAuthTokenListener();\n-    backgroundExecutor.execute(() -> doGetAuthToken(forceRefresh));\n+    if (forceRefresh) {\n+      backgroundExecutor.execute(this::doGetAuthTokenForceRefresh);\n+    } else {\n+      backgroundExecutor.execute(this::doGetAuthTokenWithoutForceRefresh);\n+    }", "originalCommit": "d17d57045ad0e678e7eaeb26d7b75efce0284265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "chunk": "diff --git a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\nindex 474dac83..28f94e73 100644\n--- a/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n+++ b/firebase-installations/src/main/java/com/google/firebase/installations/FirebaseInstallations.java\n\n@@ -248,11 +248,7 @@ public class FirebaseInstallations implements FirebaseInstallationsApi {\n   public Task<InstallationTokenResult> getToken(boolean forceRefresh) {\n     preConditionChecks();\n     Task<InstallationTokenResult> task = addGetAuthTokenListener();\n-    if (forceRefresh) {\n-      backgroundExecutor.execute(this::doGetAuthTokenForceRefresh);\n-    } else {\n-      backgroundExecutor.execute(this::doGetAuthTokenWithoutForceRefresh);\n-    }\n+    backgroundExecutor.execute(() -> doRegistrationInternal(forceRefresh));\n     return task;\n   }\n \n"}}, {"oid": "864fbcb4ec81f3475017122209f2629fa21e2f3b", "url": "https://github.com/firebase/firebase-android-sdk/commit/864fbcb4ec81f3475017122209f2629fa21e2f3b", "message": "Addressing Rayo's comments.", "committedDate": "2020-07-08T20:38:24Z", "type": "commit"}, {"oid": "b1706e692920b94e7a77a0efe80f07771cd7cf5a", "url": "https://github.com/firebase/firebase-android-sdk/commit/b1706e692920b94e7a77a0efe80f07771cd7cf5a", "message": "Merge branch 'master' of github.com:firebase/firebase-android-sdk into fisRevert", "committedDate": "2020-07-08T21:59:31Z", "type": "commit"}, {"oid": "f203277c8c13e2bc684bb17770460f16e417fa51", "url": "https://github.com/firebase/firebase-android-sdk/commit/f203277c8c13e2bc684bb17770460f16e417fa51", "message": "Minor spacing.", "committedDate": "2020-07-08T23:03:15Z", "type": "commit"}, {"oid": "85910e3a03cfdc16604066f7d4a06874265793ec", "url": "https://github.com/firebase/firebase-android-sdk/commit/85910e3a03cfdc16604066f7d4a06874265793ec", "message": "Addressing Rayo's comments.", "committedDate": "2020-07-08T23:58:31Z", "type": "commit"}]}