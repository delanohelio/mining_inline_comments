{"pr_number": 8390, "pr_title": "[mqtt][homie] Improve Homie initialization process for big devices", "pr_createdAt": "2020-09-03T15:59:32Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8390", "timeline": [{"oid": "625cbfbf185e3186f48f102a052102afde7022a7", "url": "https://github.com/openhab/openhab-addons/commit/625cbfbf185e3186f48f102a052102afde7022a7", "message": "[mqtt][homie] Improve Homie initialization process for big devices\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:05:56Z", "type": "commit"}, {"oid": "1c686234099c7b192a30098d4a96beb6c7248e2a", "url": "https://github.com/openhab/openhab-addons/commit/1c686234099c7b192a30098d4a96beb6c7248e2a", "message": "Fix tests\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:05:56Z", "type": "commit"}, {"oid": "af914a8348ea51e605b972ab168e1312e368cbfe", "url": "https://github.com/openhab/openhab-addons/commit/af914a8348ea51e605b972ab168e1312e368cbfe", "message": "Remove execution of initialize() in a separate thread\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:05:56Z", "type": "commit"}, {"oid": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "url": "https://github.com/openhab/openhab-addons/commit/cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "message": "Move started flag from Device to Property (doesn't work)\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:05:56Z", "type": "commit"}, {"oid": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "url": "https://github.com/openhab/openhab-addons/commit/cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "message": "Move started flag from Device to Property (doesn't work)\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:05:56Z", "type": "forcePushed"}, {"oid": "089e17c4365a20dbe2273e63c0b41cee76c56bf3", "url": "https://github.com/openhab/openhab-addons/commit/089e17c4365a20dbe2273e63c0b41cee76c56bf3", "message": "Remove newline\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-07T10:15:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3NTU5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483175597", "bodyText": "I do not think, that this is a good idea.\nThe 5 second message is just a warning and the consequences are too big for me.", "author": "jochen314", "createdAt": "2020-09-03T18:29:19Z", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java", "diffHunk": "@@ -104,7 +105,7 @@ public void initialize() {\n             return;\n         }\n         device.initialize(config.basetopic, config.deviceid, thing.getChannels());\n-        super.initialize();\n+        scheduler.schedule(() -> super.initialize(), 0, TimeUnit.SECONDS);", "originalCommit": "82094d32c6b0e2481f285d61f02dbae60cee3632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af914a8348ea51e605b972ab168e1312e368cbfe", "chunk": "diff --git a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java\nindex 6971c6dc47..9fcd25ebc6 100644\n--- a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java\n+++ b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java\n\n@@ -105,7 +104,7 @@ public class HomieThingHandler extends AbstractMQTTThingHandler implements Devic\n             return;\n         }\n         device.initialize(config.basetopic, config.deviceid, thing.getChannels());\n-        scheduler.schedule(() -> super.initialize(), 0, TimeUnit.SECONDS);\n+        super.initialize();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3NzQzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483177430", "bodyText": "This is not thread safe. So it will not guarantee solving the problem.\nOne thread might still be past the test and before setting the flag when the second call happens.\nHave a look into the java.util.concurrent.atomic.Atomic* classes to avoid this problem.", "author": "jochen314", "createdAt": "2020-09-03T18:31:42Z", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java", "diffHunk": "@@ -64,6 +64,7 @@\n     private String topic = \"\";\n     public String deviceID = \"\";\n     private boolean initialized = false;\n+    private boolean startingChannels = false;", "originalCommit": "82094d32c6b0e2481f285d61f02dbae60cee3632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "chunk": "diff --git a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\nindex 742dd9fce1..83d754b502 100644\n--- a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\n+++ b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\n\n@@ -64,7 +64,6 @@ public class Device implements AbstractMqttAttributeClass.AttributeChanged {\n     private String topic = \"\";\n     public String deviceID = \"\";\n     private boolean initialized = false;\n-    private boolean startingChannels = false;\n \n     /**\n      * Creates a Homie Device structure. It consists of device attributes, device statistics and nodes.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3ODgwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483178805", "bodyText": "There is CompletableFuture.completedFuture(U value)\nFor line 151: There would have been CompletableFuture.failedFuture(Throwable ex)", "author": "jochen314", "createdAt": "2020-09-03T18:34:22Z", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java", "diffHunk": "@@ -140,14 +141,23 @@ public Device(ThingUID thingUID, DeviceCallback callback, DeviceAttributes attri\n      */\n     public CompletableFuture<@Nullable Void> startChannels(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout, HomieThingHandler handler) {\n+        if (startingChannels) {\n+            CompletableFuture<@Nullable Void> c = new CompletableFuture<>();\n+            c.complete(null);\n+            return c;", "originalCommit": "82094d32c6b0e2481f285d61f02dbae60cee3632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "chunk": "diff --git a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\nindex 742dd9fce1..83d754b502 100644\n--- a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\n+++ b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java\n\n@@ -141,23 +140,14 @@ public class Device implements AbstractMqttAttributeClass.AttributeChanged {\n      */\n     public CompletableFuture<@Nullable Void> startChannels(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout, HomieThingHandler handler) {\n-        if (startingChannels) {\n-            CompletableFuture<@Nullable Void> c = new CompletableFuture<>();\n-            c.complete(null);\n-            return c;\n-        }\n-\n         if (!isInitialized() || deviceID.isEmpty()) {\n             CompletableFuture<@Nullable Void> c = new CompletableFuture<>();\n             c.completeExceptionally(new Exception(\"Homie Device Tree not inialized yet.\"));\n             return c;\n         }\n \n-        startingChannels = true;\n-        return CompletableFuture\n-                .allOf(nodes.stream().flatMap(node -> node.properties.stream())\n-                        .map(p -> p.startChannel(connection, scheduler, timeout)).toArray(CompletableFuture[]::new))\n-                .thenRun(() -> startingChannels = false);\n+        return CompletableFuture.allOf(nodes.stream().flatMap(node -> node.properties.stream())\n+                .map(p -> p.startChannel(connection, scheduler, timeout)).toArray(CompletableFuture[]::new));\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MDUzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r484090531", "bodyText": "This is not the threadsafe way to do it.\nWe still try to start the channel a second time, if the first time has not finished yet....\nWe need to set starting to true before we try start it.\nSomething like:\nif (starting.getAndSet(true)) {\n   return CompletableFuture.completedFuture(null);\n}", "author": "jochen314", "createdAt": "2020-09-06T16:40:58Z", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -262,6 +264,12 @@ public void createChannelFromAttribute() {\n      */\n     public CompletableFuture<@Nullable Void> startChannel(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout) {\n+        if (started.get()) {", "originalCommit": "e5f52f3f355754cd812614384d013aabdaf8028c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "625cbfbf185e3186f48f102a052102afde7022a7", "chunk": "diff --git a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\nindex 182aea542a..58bfed99ec 100644\n--- a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\n+++ b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\n\n@@ -264,12 +272,6 @@ public class Property implements AttributeChanged {\n      */\n     public CompletableFuture<@Nullable Void> startChannel(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout) {\n-        if (started.get()) {\n-            CompletableFuture<@Nullable Void> c = new CompletableFuture<>();\n-            c.complete(null);\n-            return c;\n-        }\n-\n         final ChannelState channelState = this.channelState;\n         if (channelState == null) {\n             CompletableFuture<@Nullable Void> f = new CompletableFuture<>();\n"}}, {"oid": "bbdec18c2483ed7e0e7376bb657a7d8e7c024169", "url": "https://github.com/openhab/openhab-addons/commit/bbdec18c2483ed7e0e7376bb657a7d8e7c024169", "message": "Make final implementation thread safe\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-12T21:08:01Z", "type": "commit"}, {"oid": "92b60cd973b51bd5f1e246cc40b521452e41403f", "url": "https://github.com/openhab/openhab-addons/commit/92b60cd973b51bd5f1e246cc40b521452e41403f", "message": "Fix formatting issues\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-12T21:20:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMDczMA==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r490720730", "bodyText": "From what I can tell the fix should be in ChannelState.start() instead. It isn't thread safe and it is no surprise that you are seeing the issues that you are seeing.\nTry making these changes in ChannelState and see if it fixes your problem.\nprivate CompletableFuture<@Nullable Void> future = CompletableFuture.completedFuture(null);\nprivate final Object futureLock = new Object();\n\npublic CompletableFuture<@Nullable Void> start(MqttBrokerConnection connection, ScheduledExecutorService scheduler,\n            int timeout) {\n        sychronized(futureLock){\n          // if the connection is still the same, the subscription is still present, otherwise we need to renew\n          if ((hasSubscribed || !future.isDone()) && connection.equals(this.connection)) {\n              return future;\n          }\n          hasSubscribed = false;\n          \n          this.connection = connection;\n\n          if (StringUtils.isBlank(config.stateTopic)) {\n              return CompletableFuture.completedFuture(null);\n          }\n\n          this.future = new CompletableFuture<>();\n        }\n        connection.subscribe(config.stateTopic, this).thenRun(() -> {\n            hasSubscribed = true;\n            logger.debug(\"Subscribed channel {} to topic: {}\", this.channelUID, config.stateTopic);\n            if (timeout > 0 && !future.isDone()) {\n                this.scheduledFuture = scheduler.schedule(this::receivedOrTimeout, timeout, TimeUnit.MILLISECONDS);\n            } else {\n                receivedOrTimeout();\n            }\n        }).exceptionally(this::subscribeFail);\n        return future;\n    }", "author": "cpmeister", "createdAt": "2020-09-18T06:04:12Z", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -280,7 +286,7 @@ public void createChannelFromAttribute() {\n         }\n         // Make sure we set the callback again which might have been nulled during an stop\n         channelState.setChannelStateUpdateListener(this.callback);\n-        return channelState.start(connection, scheduler, timeout);\n+        return channelState.start(connection, scheduler, timeout).thenRun(() -> starting.set(false));", "originalCommit": "92b60cd973b51bd5f1e246cc40b521452e41403f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3OTgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r491479828", "bodyText": "Hi @cpmeister! Thanks for your suggestion, I've implemented it and it also works fine (I didn't expect anything else coming from you \ud83d\ude09)!\n@Hilbrand and @jochen314: what do you think? Should I commit the suggested changes?", "author": "bodiroga", "createdAt": "2020-09-19T18:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMDczMA=="}], "type": "inlineReview", "revised_code": {"commit": "c3b076357d0238c59127fd80b0716ae7f5bbb461", "chunk": "diff --git a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\nindex 2c0c57df66..58bfed99ec 100644\n--- a/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\n+++ b/bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java\n\n@@ -286,7 +280,7 @@ public class Property implements AttributeChanged {\n         }\n         // Make sure we set the callback again which might have been nulled during an stop\n         channelState.setChannelStateUpdateListener(this.callback);\n-        return channelState.start(connection, scheduler, timeout).thenRun(() -> starting.set(false));\n+        return channelState.start(connection, scheduler, timeout);\n     }\n \n     /**\n"}}, {"oid": "c3b076357d0238c59127fd80b0716ae7f5bbb461", "url": "https://github.com/openhab/openhab-addons/commit/c3b076357d0238c59127fd80b0716ae7f5bbb461", "message": "Address review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-09-19T18:34:06Z", "type": "commit"}]}