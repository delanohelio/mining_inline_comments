{"pr_number": 6821, "pr_title": "[homematic] Smaller bug fixes", "pr_createdAt": "2020-01-12T18:02:38Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/6821", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365710489", "bodyText": "I would really prefer to always include the braces", "author": "martinvw", "createdAt": "2020-01-13T09:40:49Z", "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {", "originalCommit": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1NDQ4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365954482", "bodyText": "I did not want to touch existing coding, but I agree with you and will add braces around the throw.", "author": "MHerbst", "createdAt": "2020-01-13T18:20:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MTMwNg==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r368241306", "bodyText": "done", "author": "MHerbst", "createdAt": "2020-01-18T18:29:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c06ecbf1f39497a24b47f59db039465298eaf6d0", "chunk": "diff --git a/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java b/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\nindex a5f59d8095..c04a2841c2 100644\n--- a/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\n+++ b/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\n\n@@ -173,10 +173,11 @@ public abstract class CommonRpcParser<M, R> implements RpcParser<M, R> {\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN)\n+        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        }\n         else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n-                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {\n+                && dp.getName().matches(\"\\\\w*_TEMPERATURE(_\\\\w.*|$)\")) {\n             logger.debug(\"No unit information found for temperature datapoint {}, assuming Number:Temperature\",\n                     dp.getName());\n             dp.setUnit(\"\u00b0C\"); // Bypass for a problem with HMIP devices where unit of temperature channels is sometimes\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365710831", "bodyText": "Can this be matched more exact than contains, what are possible values?", "author": "martinvw", "createdAt": "2020-01-13T09:41:36Z", "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n+        if (valueType == null || valueType == HmValueType.UNKNOWN)\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n+                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {", "originalCommit": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1ODU2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365958561", "bodyText": "There a names with TEMPERATURE at the end and also names with TEMPERATURE in the middle. All datapoints with possibly missing units have in common that they are defined as float and contain \"TEMPERATURE\". I could check the documentation whether it makes sense to limit it more.", "author": "MHerbst", "createdAt": "2020-01-13T18:29:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3NTUzMA==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r367075530", "bodyText": "Would be appreciated :-)", "author": "martinvw", "createdAt": "2020-01-15T19:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MTM2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r368241365", "bodyText": "Replaced by regex that is more restrictive :-)", "author": "MHerbst", "createdAt": "2020-01-18T18:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c06ecbf1f39497a24b47f59db039465298eaf6d0", "chunk": "diff --git a/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java b/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\nindex a5f59d8095..c04a2841c2 100644\n--- a/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\n+++ b/bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java\n\n@@ -173,10 +173,11 @@ public abstract class CommonRpcParser<M, R> implements RpcParser<M, R> {\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN)\n+        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        }\n         else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n-                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {\n+                && dp.getName().matches(\"\\\\w*_TEMPERATURE(_\\\\w.*|$)\")) {\n             logger.debug(\"No unit information found for temperature datapoint {}, assuming Number:Temperature\",\n                     dp.getName());\n             dp.setUnit(\"\u00b0C\"); // Bypass for a problem with HMIP devices where unit of temperature channels is sometimes\n"}}, {"oid": "5af164ca4a2261d29d2dc4a96b151ca82d28aeab", "url": "https://github.com/openhab/openhab-addons/commit/5af164ca4a2261d29d2dc4a96b151ca82d28aeab", "message": "Bypass for a HM problem with empty unit for temperature data points\n\nSome HMIP devices return an empty \"unit\" for temperature data points.\nThis fix sets the unit to \u00b0C for all temperature data points of type\nfloat.\n\nFixes #6102\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:07Z", "type": "commit"}, {"oid": "cac4662a88c8b8f853332ce0fce977c06f506fc1", "url": "https://github.com/openhab/openhab-addons/commit/cac4662a88c8b8f853332ce0fce977c06f506fc1", "message": "Make test for device name case-insensitive\n\nsolves #6783\n\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:09Z", "type": "commit"}, {"oid": "83b055534d66ecf08ff2b784bdc15486789ee0db", "url": "https://github.com/openhab/openhab-addons/commit/83b055534d66ecf08ff2b784bdc15486789ee0db", "message": "Some smaller markdown syntax corrections\n\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:11Z", "type": "commit"}, {"oid": "c6e1723c2c2becc2d35aeffafc9f916e21802867", "url": "https://github.com/openhab/openhab-addons/commit/c6e1723c2c2becc2d35aeffafc9f916e21802867", "message": "Chapter restructured to make it easier to understand\n\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:14Z", "type": "commit"}, {"oid": "dee257a74515c3849e529364a6dce35846b47565", "url": "https://github.com/openhab/openhab-addons/commit/dee257a74515c3849e529364a6dce35846b47565", "message": "Added some missing battery information\n\nAccording to https://github.com/eclipse/smarthome/issues/6847\n\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:16Z", "type": "commit"}, {"oid": "c06ecbf1f39497a24b47f59db039465298eaf6d0", "url": "https://github.com/openhab/openhab-addons/commit/c06ecbf1f39497a24b47f59db039465298eaf6d0", "message": "Made name check more restrictive\n\nSigned-off-by: Martin Herbst <develop@mherbst.de>", "committedDate": "2020-01-18T18:26:20Z", "type": "commit"}]}