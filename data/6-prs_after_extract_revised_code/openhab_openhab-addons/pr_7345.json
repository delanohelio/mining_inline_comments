{"pr_number": 7345, "pr_title": "[netatmo] Added day, week, and month measurements to the weather station and indoor, outdoor, and rain modules", "pr_createdAt": "2020-04-11T19:57:50Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7345", "timeline": [{"oid": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "url": "https://github.com/openhab/openhab-addons/commit/ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "message": "[netatmo] Added day, week, and month measurements to the weather station and indoor, outdoor, and rain modules\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-11T18:56:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2ODQyNA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407168424", "bodyText": "This import looks strange. Maybe a more standard Java type could be used ?", "author": "lolodomo", "createdAt": "2020-04-12T08:55:58Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java", "diffHunk": "@@ -14,12 +14,24 @@\n \n import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.*;\n import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\n+import static org.openhab.binding.netatmo.internal.station.StationUtils.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.util.ConcurrentHashSet;", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDExMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407194111", "bodyText": "Changed to ConcurrentHashMap.newKeySet()", "author": "robnielsen", "createdAt": "2020-04-12T12:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2ODQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "07191f920dac64d547e95b151ece7b458331373f", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\nindex c1a19733fb..9b177e287c 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\n\n@@ -24,7 +24,6 @@ import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n \n import org.eclipse.jdt.annotation.Nullable;\n-import org.eclipse.jetty.util.ConcurrentHashSet;\n import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.types.State;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2OTE1OA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407169158", "bodyText": "This import looks strange. Maybe a more standard Java type could be used ?", "author": "lolodomo", "createdAt": "2020-04-12T09:03:15Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule1Handler.java", "diffHunk": "@@ -14,7 +14,16 @@\n \n import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.*;\n import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\n+import static org.openhab.binding.netatmo.internal.station.StationUtils.*;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.eclipse.jetty.util.ConcurrentHashSet;", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDEyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407194129", "bodyText": "Changed to ConcurrentHashMap.newKeySet()", "author": "robnielsen", "createdAt": "2020-04-12T12:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2OTE1OA=="}], "type": "inlineReview", "revised_code": {"commit": "07191f920dac64d547e95b151ece7b458331373f", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule1Handler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule1Handler.java\nindex f43c7e1566..29f46a2755 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule1Handler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule1Handler.java\n\n@@ -22,7 +22,6 @@ import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n \n-import org.eclipse.jetty.util.ConcurrentHashSet;\n import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.types.State;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2OTYzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407169630", "bodyText": "This import looks strange. Maybe a more standard Java type could be used ?", "author": "lolodomo", "createdAt": "2020-04-12T09:07:28Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java", "diffHunk": "@@ -14,7 +14,17 @@\n \n import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.*;\n import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\n+import static org.openhab.binding.netatmo.internal.station.StationUtils.getMeasurements;\n \n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.eclipse.jetty.util.ConcurrentHashSet;", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDc4MA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407194780", "bodyText": "Changed to ConcurrentHashMap.newKeySet()", "author": "robnielsen", "createdAt": "2020-04-12T12:58:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE2OTYzMA=="}], "type": "inlineReview", "revised_code": {"commit": "07191f920dac64d547e95b151ece7b458331373f", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\nindex 346f076fc8..c791b9554b 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\n\n@@ -23,7 +23,6 @@ import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n \n import org.eclipse.jdt.annotation.NonNull;\n-import org.eclipse.jetty.util.ConcurrentHashSet;\n import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.types.State;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MDA4MA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407170080", "bodyText": "Is there a good reason it is not implemented like in other classes (using addMeasurement) ?", "author": "lolodomo", "createdAt": "2020-04-12T09:11:40Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java", "diffHunk": "@@ -39,6 +53,21 @@ protected void updateProperties(NAStationModule moduleData) {\n         updateProperties(moduleData.getFirmware(), moduleData.getType());\n     }\n \n+    @Override\n+    public void updateMeasurements() {\n+        List<@NonNull String> types = Arrays.asList(SUM_RAIN);\n+\n+        if (channels.contains(CHANNEL_SUM_RAIN_THIS_WEEK)) {", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NTA4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407195082", "bodyText": "This module only has a single measurement for both week and month. I could have implemented the same as the others, but it basically adds some unnecessary code where the measurement is added to a list then the list is checked to see if it contains items before calling getMeasurements.", "author": "robnielsen", "createdAt": "2020-04-12T13:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MDA4MA=="}], "type": "inlineReview", "revised_code": {"commit": "07191f920dac64d547e95b151ece7b458331373f", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\nindex 346f076fc8..c791b9554b 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule3Handler.java\n\n@@ -57,12 +56,12 @@ public class NAModule3Handler extends NetatmoModuleHandler<NAStationModule> {\n     public void updateMeasurements() {\n         List<@NonNull String> types = Arrays.asList(SUM_RAIN);\n \n-        if (channels.contains(CHANNEL_SUM_RAIN_THIS_WEEK)) {\n+        if (channelsIds.contains(CHANNEL_SUM_RAIN_THIS_WEEK)) {\n             getMeasurements(getBridgeHandler(), getParentId(), getId(), ONE_WEEK, types,\n                     Arrays.asList(CHANNEL_SUM_RAIN_THIS_WEEK), channelMeasurements);\n         }\n \n-        if (channels.contains(CHANNEL_SUM_RAIN_THIS_MONTH)) {\n+        if (channelsIds.contains(CHANNEL_SUM_RAIN_THIS_MONTH)) {\n             getMeasurements(getBridgeHandler(), getParentId(), getId(), ONE_MONTH, types,\n                     Arrays.asList(CHANNEL_SUM_RAIN_THIS_MONTH), channelMeasurements);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MDI3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407170272", "bodyText": "This import looks strange. Maybe a more standard Java type could be used ?", "author": "lolodomo", "createdAt": "2020-04-12T09:13:34Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java", "diffHunk": "@@ -14,7 +14,15 @@\n \n import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.*;\n import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\n+import static org.openhab.binding.netatmo.internal.station.StationUtils.*;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.eclipse.jetty.util.ConcurrentHashSet;", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDE1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407194155", "bodyText": "Changed to ConcurrentHashMap.newKeySet()", "author": "robnielsen", "createdAt": "2020-04-12T12:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MDI3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "07191f920dac64d547e95b151ece7b458331373f", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\nindex f395e08194..79955b3a6c 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\n\n@@ -22,7 +22,7 @@ import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n \n-import org.eclipse.jetty.util.ConcurrentHashSet;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.types.State;\n import org.openhab.binding.netatmo.internal.WeatherUtils;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MTE5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407171192", "bodyText": "You did not add the methods channelLinked and channelUnlinked to this class ?", "author": "lolodomo", "createdAt": "2020-04-12T09:22:01Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java", "diffHunk": "@@ -40,6 +52,70 @@ protected void updateProperties(NAStationModule moduleData) {\n         updateProperties(moduleData.getFirmware(), moduleData.getType());\n     }\n \n+    @Override\n+    public void updateMeasurements() {", "originalCommit": "ace2a14a74f638a8e98c4c3ddf7fb3ceb38afcd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NDI1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407194254", "bodyText": "Added the methods", "author": "robnielsen", "createdAt": "2020-04-12T12:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3MTE5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\nindex f395e08194..d6af322edb 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAModule4Handler.java\n\n@@ -62,14 +58,14 @@ public class NAModule4Handler extends NetatmoModuleHandler<NAStationModule> {\n     private void updateDayMeasurements() {\n         List<String> channels = new ArrayList<>();\n         List<String> types = new ArrayList<>();\n-        addMeasurement(channelIds, channels, types, CHANNEL_MIN_CO2, MIN_CO2);\n-        addMeasurement(channelIds, channels, types, CHANNEL_MAX_CO2, MAX_CO2);\n-        addMeasurement(channelIds, channels, types, CHANNEL_MIN_HUMIDITY, MIN_HUM);\n-        addMeasurement(channelIds, channels, types, CHANNEL_MAX_HUMIDITY, MAX_HUM);\n-        addMeasurement(channelIds, channels, types, CHANNEL_DATE_MIN_CO2, DATE_MIN_CO2);\n-        addMeasurement(channelIds, channels, types, CHANNEL_DATE_MAX_CO2, DATE_MAX_CO2);\n-        addMeasurement(channelIds, channels, types, CHANNEL_DATE_MIN_HUMIDITY, DATE_MIN_HUM);\n-        addMeasurement(channelIds, channels, types, CHANNEL_DATE_MAX_HUMIDITY, DATE_MAX_HUM);\n+        addMeasurement(channels, types, CHANNEL_MIN_CO2, MIN_CO2);\n+        addMeasurement(channels, types, CHANNEL_MAX_CO2, MAX_CO2);\n+        addMeasurement(channels, types, CHANNEL_MIN_HUMIDITY, MIN_HUM);\n+        addMeasurement(channels, types, CHANNEL_MAX_HUMIDITY, MAX_HUM);\n+        addMeasurement(channels, types, CHANNEL_DATE_MIN_CO2, DATE_MIN_CO2);\n+        addMeasurement(channels, types, CHANNEL_DATE_MAX_CO2, DATE_MAX_CO2);\n+        addMeasurement(channels, types, CHANNEL_DATE_MIN_HUMIDITY, DATE_MIN_HUM);\n+        addMeasurement(channels, types, CHANNEL_DATE_MAX_HUMIDITY, DATE_MAX_HUM);\n         if (!channels.isEmpty()) {\n             getMeasurements(getBridgeHandler(), getParentId(), getId(), ONE_DAY, types, channels, channelMeasurements);\n         }\n"}}, {"oid": "07191f920dac64d547e95b151ece7b458331373f", "url": "https://github.com/openhab/openhab-addons/commit/07191f920dac64d547e95b151ece7b458331373f", "message": "Changes from lolodomo's review\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-12T17:10:04Z", "type": "commit"}, {"oid": "e3e8a70ac624897e3817c14f3d9d941d06c41732", "url": "https://github.com/openhab/openhab-addons/commit/e3e8a70ac624897e3817c14f3d9d941d06c41732", "message": "Additional changes from lolodomo's review\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-12T23:24:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODIyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407278220", "bodyText": "An IllegalArgumentException is more appropriate here.", "author": "cpmeister", "createdAt": "2020-04-13T01:19:15Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.netatmo.internal.station;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n+\n+/**\n+ * This class holds various methods common to stations\n+ *\n+ * @author Rob Nielsen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class StationUtils {\n+\n+    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,\n+            String scale, List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n+        if (types.size() != channels.size()) {\n+            throw new UnsupportedOperationException(\"types and channels lists are different sizes.\");", "originalCommit": "e3e8a70ac624897e3817c14f3d9d941d06c41732", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ1Nzk4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407457982", "bodyText": "done", "author": "robnielsen", "createdAt": "2020-04-13T12:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODIyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\ndeleted file mode 100644\nindex d9a1e1791c..0000000000\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\n+++ /dev/null\n\n@@ -1,55 +0,0 @@\n-/**\n- * Copyright (c) 2010-2020 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.binding.netatmo.internal.station;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n-\n-/**\n- * This class holds various methods common to stations\n- *\n- * @author Rob Nielsen - Initial contribution\n- */\n-@NonNullByDefault\n-public class StationUtils {\n-\n-    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,\n-            String scale, List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n-        if (types.size() != channels.size()) {\n-            throw new UnsupportedOperationException(\"types and channels lists are different sizes.\");\n-        }\n-\n-        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n-        if (measurements.size() != types.size()) {\n-            throw new UnsupportedOperationException(\"types and measurements lists are different sizes.\");\n-        }\n-\n-        int i = 0;\n-        for (Float measurement : measurements) {\n-            channelMeasurements.put(channels.get(i++), measurement);\n-        }\n-    }\n-\n-    public static void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n-            String type) {\n-        if (channelIds.contains(channel)) {\n-            channels.add(channel);\n-            types.add(type);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODIzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407278233", "bodyText": "I'm not sure this is something to throw an exception over. Maybe you could just log it and then exit early.", "author": "cpmeister", "createdAt": "2020-04-13T01:19:22Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.netatmo.internal.station;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n+\n+/**\n+ * This class holds various methods common to stations\n+ *\n+ * @author Rob Nielsen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class StationUtils {\n+\n+    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,\n+            String scale, List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n+        if (types.size() != channels.size()) {\n+            throw new UnsupportedOperationException(\"types and channels lists are different sizes.\");\n+        }\n+\n+        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n+        if (measurements.size() != types.size()) {\n+            throw new UnsupportedOperationException(\"types and measurements lists are different sizes.\");", "originalCommit": "e3e8a70ac624897e3817c14f3d9d941d06c41732", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ1ODg5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407458893", "bodyText": "These are going to be errors that should only occur during development.", "author": "robnielsen", "createdAt": "2020-04-13T12:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODIzMw=="}], "type": "inlineReview", "revised_code": {"commit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\ndeleted file mode 100644\nindex d9a1e1791c..0000000000\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\n+++ /dev/null\n\n@@ -1,55 +0,0 @@\n-/**\n- * Copyright (c) 2010-2020 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.binding.netatmo.internal.station;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n-\n-/**\n- * This class holds various methods common to stations\n- *\n- * @author Rob Nielsen - Initial contribution\n- */\n-@NonNullByDefault\n-public class StationUtils {\n-\n-    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,\n-            String scale, List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n-        if (types.size() != channels.size()) {\n-            throw new UnsupportedOperationException(\"types and channels lists are different sizes.\");\n-        }\n-\n-        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n-        if (measurements.size() != types.size()) {\n-            throw new UnsupportedOperationException(\"types and measurements lists are different sizes.\");\n-        }\n-\n-        int i = 0;\n-        for (Float measurement : measurements) {\n-            channelMeasurements.put(channels.get(i++), measurement);\n-        }\n-    }\n-\n-    public static void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n-            String type) {\n-        if (channelIds.contains(channel)) {\n-            channels.add(channel);\n-            types.add(type);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODcwMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407278701", "bodyText": "Is there any way to put these methods in one of the handler parent classes instead of defining a utility class? Or do all the classes that call this not share the same hierarchy?", "author": "cpmeister", "createdAt": "2020-04-13T01:22:52Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.netatmo.internal.station;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n+\n+/**\n+ * This class holds various methods common to stations\n+ *\n+ * @author Rob Nielsen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class StationUtils {\n+\n+    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,", "originalCommit": "e3e8a70ac624897e3817c14f3d9d941d06c41732", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5MTAzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407391030", "bodyText": "Yes, that is a good remark.", "author": "lolodomo", "createdAt": "2020-04-13T09:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2MzkzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407463939", "bodyText": "The modules are grandchildren of AbstractNetatmoThingHandler, I moved it there.  It does appear that thermostat could take advantage of these methods as well.", "author": "robnielsen", "createdAt": "2020-04-13T12:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI3ODcwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\ndeleted file mode 100644\nindex d9a1e1791c..0000000000\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/StationUtils.java\n+++ /dev/null\n\n@@ -1,55 +0,0 @@\n-/**\n- * Copyright (c) 2010-2020 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.binding.netatmo.internal.station;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.binding.netatmo.internal.handler.NetatmoBridgeHandler;\n-\n-/**\n- * This class holds various methods common to stations\n- *\n- * @author Rob Nielsen - Initial contribution\n- */\n-@NonNullByDefault\n-public class StationUtils {\n-\n-    public static void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module,\n-            String scale, List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n-        if (types.size() != channels.size()) {\n-            throw new UnsupportedOperationException(\"types and channels lists are different sizes.\");\n-        }\n-\n-        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n-        if (measurements.size() != types.size()) {\n-            throw new UnsupportedOperationException(\"types and measurements lists are different sizes.\");\n-        }\n-\n-        int i = 0;\n-        for (Float measurement : measurements) {\n-            channelMeasurements.put(channels.get(i++), measurement);\n-        }\n-    }\n-\n-    public static void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n-            String type) {\n-        if (channelIds.contains(channel)) {\n-            channels.add(channel);\n-            types.add(type);\n-        }\n-    }\n-}\n"}}, {"oid": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "url": "https://github.com/openhab/openhab-addons/commit/9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "message": "Few more changes\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-13T13:00:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3MzMyNg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407473326", "bodyText": "Is it still required now that you declared this method in AbstractNetatmoThingHandler ?", "author": "lolodomo", "createdAt": "2020-04-13T13:18:15Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java", "diffHunk": "@@ -100,6 +102,9 @@ protected void updateChannels(Object module) {\n         }\n     }\n \n+    public void updateMeasurements() {\n+    }\n+", "originalCommit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUwMzc1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407503751", "bodyText": "Yes, its needed in NAMainHandler to tell it's modules to update.  It could be moved back to NetatmoModuleHandler, but shouldn't hurt to be here.", "author": "robnielsen", "createdAt": "2020-04-13T14:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3MzMyNg=="}], "type": "inlineReview", "revised_code": {"commit": "099e0e1a26d4a6475063730f7cfdd1edfde9aa13", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\nindex c26551f721..e57963e9b3 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n\n@@ -102,9 +102,6 @@ public class NetatmoModuleHandler<MODULE> extends AbstractNetatmoThingHandler {\n         }\n     }\n \n-    public void updateMeasurements() {\n-    }\n-\n     protected void invalidateParentCacheAndRefresh() {\n         setRefreshRequired(true);\n         // Leave a bit of time to Netatmo Server to get in sync with new values sent\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MjUzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407542530", "bodyText": "Are you sure this is called on handler startup? If it isn't then channelIds will never get populated if channels are already linked when the handler get initialized.", "author": "cpmeister", "createdAt": "2020-04-13T15:36:01Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java", "diffHunk": "@@ -107,9 +218,89 @@ protected State getNAThingProperty(String channelId) {\n                 }\n             }\n         }\n+\n+        switch (channelId) {\n+            case CHANNEL_MIN_CO2:\n+            case CHANNEL_MIN_CO2_THIS_WEEK:\n+            case CHANNEL_MIN_CO2_THIS_MONTH:\n+            case CHANNEL_MAX_CO2:\n+            case CHANNEL_MAX_CO2_THIS_WEEK:\n+            case CHANNEL_MAX_CO2_THIS_MONTH:\n+                return toQuantityType(channelMeasurements.get(channelId), API_CO2_UNIT);\n+            case CHANNEL_MIN_HUMIDITY:\n+            case CHANNEL_MIN_HUMIDITY_THIS_WEEK:\n+            case CHANNEL_MIN_HUMIDITY_THIS_MONTH:\n+            case CHANNEL_MAX_HUMIDITY:\n+            case CHANNEL_MAX_HUMIDITY_THIS_WEEK:\n+            case CHANNEL_MAX_HUMIDITY_THIS_MONTH:\n+                return toQuantityType(channelMeasurements.get(channelId), API_HUMIDITY_UNIT);\n+            case CHANNEL_MIN_NOISE:\n+            case CHANNEL_MIN_NOISE_THIS_WEEK:\n+            case CHANNEL_MIN_NOISE_THIS_MONTH:\n+            case CHANNEL_MAX_NOISE:\n+            case CHANNEL_MAX_NOISE_THIS_WEEK:\n+            case CHANNEL_MAX_NOISE_THIS_MONTH:\n+                return toQuantityType(channelMeasurements.get(channelId), API_NOISE_UNIT);\n+            case CHANNEL_MIN_PRESSURE:\n+            case CHANNEL_MIN_PRESSURE_THIS_WEEK:\n+            case CHANNEL_MIN_PRESSURE_THIS_MONTH:\n+            case CHANNEL_MAX_PRESSURE:\n+            case CHANNEL_MAX_PRESSURE_THIS_WEEK:\n+            case CHANNEL_MAX_PRESSURE_THIS_MONTH:\n+                return toQuantityType(channelMeasurements.get(channelId), API_PRESSURE_UNIT);\n+            case CHANNEL_MIN_TEMP_THIS_WEEK:\n+            case CHANNEL_MIN_TEMP_THIS_MONTH:\n+            case CHANNEL_MAX_TEMP_THIS_WEEK:\n+            case CHANNEL_MAX_TEMP_THIS_MONTH:\n+                return toQuantityType(channelMeasurements.get(channelId), API_TEMPERATURE_UNIT);\n+            case CHANNEL_DATE_MIN_CO2:\n+            case CHANNEL_DATE_MIN_CO2_THIS_WEEK:\n+            case CHANNEL_DATE_MIN_CO2_THIS_MONTH:\n+            case CHANNEL_DATE_MAX_CO2:\n+            case CHANNEL_DATE_MAX_CO2_THIS_WEEK:\n+            case CHANNEL_DATE_MAX_CO2_THIS_MONTH:\n+            case CHANNEL_DATE_MIN_NOISE:\n+            case CHANNEL_DATE_MIN_NOISE_THIS_WEEK:\n+            case CHANNEL_DATE_MIN_NOISE_THIS_MONTH:\n+            case CHANNEL_DATE_MAX_NOISE:\n+            case CHANNEL_DATE_MAX_NOISE_THIS_WEEK:\n+            case CHANNEL_DATE_MAX_NOISE_THIS_MONTH:\n+            case CHANNEL_DATE_MIN_HUMIDITY:\n+            case CHANNEL_DATE_MIN_HUMIDITY_THIS_WEEK:\n+            case CHANNEL_DATE_MIN_HUMIDITY_THIS_MONTH:\n+            case CHANNEL_DATE_MAX_HUMIDITY:\n+            case CHANNEL_DATE_MAX_HUMIDITY_THIS_WEEK:\n+            case CHANNEL_DATE_MAX_HUMIDITY_THIS_MONTH:\n+            case CHANNEL_DATE_MIN_PRESSURE:\n+            case CHANNEL_DATE_MIN_PRESSURE_THIS_WEEK:\n+            case CHANNEL_DATE_MIN_PRESSURE_THIS_MONTH:\n+            case CHANNEL_DATE_MAX_PRESSURE:\n+            case CHANNEL_DATE_MAX_PRESSURE_THIS_WEEK:\n+            case CHANNEL_DATE_MAX_PRESSURE_THIS_MONTH:\n+            case CHANNEL_DATE_MIN_TEMP_THIS_WEEK:\n+            case CHANNEL_DATE_MIN_TEMP_THIS_MONTH:\n+            case CHANNEL_DATE_MAX_TEMP_THIS_WEEK:\n+            case CHANNEL_DATE_MAX_TEMP_THIS_MONTH:\n+                return toDateTimeType(channelMeasurements.get(channelId));\n+        }\n+\n         return super.getNAThingProperty(channelId);\n     }\n \n+    @Override\n+    public void channelLinked(ChannelUID channelUID) {", "originalCommit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0OTMyNA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407549324", "bodyText": "Yes, it does", "author": "robnielsen", "createdAt": "2020-04-13T15:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MjUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\nindex fede8e3b69..e944c3f213 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/station/NAMainHandler.java\n\n@@ -287,20 +284,6 @@ public class NAMainHandler extends NetatmoDeviceHandler<NAMain> {\n         return super.getNAThingProperty(channelId);\n     }\n \n-    @Override\n-    public void channelLinked(ChannelUID channelUID) {\n-        channelIds.add(channelUID.getId());\n-\n-        super.channelLinked(channelUID);\n-    }\n-\n-    @Override\n-    public void channelUnlinked(ChannelUID channelUID) {\n-        channelIds.remove(channelUID.getId());\n-\n-        super.channelUnlinked(channelUID);\n-    }\n-\n     @Override\n     protected @Nullable Integer getDataTimestamp() {\n         if (device != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NjI3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407556278", "bodyText": "Can't you just check if a channel is linked or not by calling isLinked(...)? Then you don't need to track all of the linked channel ids.", "author": "cpmeister", "createdAt": "2020-04-13T16:01:16Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java", "diffHunk": "@@ -174,4 +178,32 @@ protected void updateProperties(Integer firmware, String modelId) {\n         }\n         updateProperties(properties);\n     }\n+\n+    public void updateMeasurements() {\n+    }\n+\n+    public void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module, String scale,\n+            List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n+        if (types.size() != channels.size()) {\n+            throw new IllegalArgumentException(\"types and channels lists are different sizes.\");\n+        }\n+\n+        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n+        if (measurements.size() != types.size()) {\n+            throw new IllegalArgumentException(\"types and measurements lists are different sizes.\");\n+        }\n+\n+        int i = 0;\n+        for (Float measurement : measurements) {\n+            channelMeasurements.put(channels.get(i++), measurement);\n+        }\n+    }\n+\n+    public void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n+            String type) {\n+        if (channelIds.contains(channel)) {", "originalCommit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzYzMg==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407557632", "bodyText": "Ah, nvm, I see you still need it for the method above. In that case is there a way for you to abstract the linked channel id tracking logic into this class so that all the subclasses don't have to implement it?", "author": "cpmeister", "createdAt": "2020-04-13T16:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NjI3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2ODM1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407568354", "bodyText": "No, the channels that you can get measurements are unique by device and module.", "author": "robnielsen", "createdAt": "2020-04-13T16:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NjI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\nindex a85708e69d..8ee52bcfaf 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\n\n@@ -199,9 +198,8 @@ public abstract class AbstractNetatmoThingHandler extends BaseThingHandler {\n         }\n     }\n \n-    public void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n-            String type) {\n-        if (channelIds.contains(channel)) {\n+    public void addMeasurement(List<String> channels, List<String> types, String channel, String type) {\n+        if (isLinked(channel)) {\n             channels.add(channel);\n             types.add(type);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3Njk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407576988", "bodyText": "With this you should be able to remove the channelIds field that you added, along with your channelLinked and channelUnlinked method overrides.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (channelIds.contains(channel)) {\n          \n          \n            \n                    if (isLinked(channel)) {", "author": "cpmeister", "createdAt": "2020-04-13T16:39:23Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java", "diffHunk": "@@ -174,4 +178,32 @@ protected void updateProperties(Integer firmware, String modelId) {\n         }\n         updateProperties(properties);\n     }\n+\n+    public void updateMeasurements() {\n+    }\n+\n+    public void getMeasurements(NetatmoBridgeHandler handler, String device, @Nullable String module, String scale,\n+            List<String> types, List<String> channels, Map<String, Float> channelMeasurements) {\n+        if (types.size() != channels.size()) {\n+            throw new IllegalArgumentException(\"types and channels lists are different sizes.\");\n+        }\n+\n+        List<Float> measurements = handler.getStationMeasureResponses(device, module, scale, types);\n+        if (measurements.size() != types.size()) {\n+            throw new IllegalArgumentException(\"types and measurements lists are different sizes.\");\n+        }\n+\n+        int i = 0;\n+        for (Float measurement : measurements) {\n+            channelMeasurements.put(channels.get(i++), measurement);\n+        }\n+    }\n+\n+    public void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n+            String type) {\n+        if (channelIds.contains(channel)) {", "originalCommit": "9fbb8dfebed23ab50b89f3c6d58e82a22d3ff940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxMTAzNA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407611034", "bodyText": "good idea, changed as suggested.", "author": "robnielsen", "createdAt": "2020-04-13T17:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3Njk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\nindex a85708e69d..8ee52bcfaf 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java\n\n@@ -199,9 +198,8 @@ public abstract class AbstractNetatmoThingHandler extends BaseThingHandler {\n         }\n     }\n \n-    public void addMeasurement(Set<String> channelIds, List<String> channels, List<String> types, String channel,\n-            String type) {\n-        if (channelIds.contains(channel)) {\n+    public void addMeasurement(List<String> channels, List<String> types, String channel, String type) {\n+        if (isLinked(channel)) {\n             channels.add(channel);\n             types.add(type);\n         }\n"}}, {"oid": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "url": "https://github.com/openhab/openhab-addons/commit/4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "message": "Use isLinked() as suggested by cpmeister.\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-13T17:40:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyMTM3OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407621379", "bodyText": "This is already included in the parent class so you can remove this.", "author": "cpmeister", "createdAt": "2020-04-13T17:59:31Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java", "diffHunk": "@@ -100,6 +102,9 @@ protected void updateChannels(Object module) {\n         }\n     }\n \n+    public void updateMeasurements() {\n+    }", "originalCommit": "4bbd8f0f1f87cd10bb7e0ba6d3d78496e7eaff5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0NjgyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407646825", "bodyText": "removed", "author": "robnielsen", "createdAt": "2020-04-13T18:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyMTM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "099e0e1a26d4a6475063730f7cfdd1edfde9aa13", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\nindex c26551f721..e57963e9b3 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n\n@@ -102,9 +102,6 @@ public class NetatmoModuleHandler<MODULE> extends AbstractNetatmoThingHandler {\n         }\n     }\n \n-    public void updateMeasurements() {\n-    }\n-\n     protected void invalidateParentCacheAndRefresh() {\n         setRefreshRequired(true);\n         // Leave a bit of time to Netatmo Server to get in sync with new values sent\n"}}, {"oid": "099e0e1a26d4a6475063730f7cfdd1edfde9aa13", "url": "https://github.com/openhab/openhab-addons/commit/099e0e1a26d4a6475063730f7cfdd1edfde9aa13", "message": "removed unneeded updateMeasurements()\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-13T18:44:43Z", "type": "commit"}, {"oid": "ec4d1380c57b3cdfaa7cf6c29a33f9397d1176fb", "url": "https://github.com/openhab/openhab-addons/commit/ec4d1380c57b3cdfaa7cf6c29a33f9397d1176fb", "message": "Added missing '{'\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-13T19:04:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NjIzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407666239", "bodyText": "You can remove this as well, there are no other modifications to this file", "author": "cpmeister", "createdAt": "2020-04-13T19:21:34Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java", "diffHunk": "@@ -34,6 +34,8 @@\n  * module device accessed through the Netatmo Device\n  *\n  * @author Ga\u00ebl L'hopital - Initial contribution\n+ * @author Rob Nielsen - Added day, week, and month measurements to the weather station and modules\n+ *", "originalCommit": "ec4d1380c57b3cdfaa7cf6c29a33f9397d1176fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2OTU0NA==", "url": "https://github.com/openhab/openhab-addons/pull/7345#discussion_r407669544", "bodyText": "done", "author": "robnielsen", "createdAt": "2020-04-13T19:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NjIzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ad1965e67cf904b2f2e1b56a9c551aef5a877da", "chunk": "diff --git a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\nindex e57963e9b3..d5a286bcde 100644\n--- a/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n+++ b/bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoModuleHandler.java\n\n@@ -34,8 +34,6 @@ import org.slf4j.LoggerFactory;\n  * module device accessed through the Netatmo Device\n  *\n  * @author Ga\u00ebl L'hopital - Initial contribution\n- * @author Rob Nielsen - Added day, week, and month measurements to the weather station and modules\n- *\n  */\n public class NetatmoModuleHandler<MODULE> extends AbstractNetatmoThingHandler {\n     private Logger logger = LoggerFactory.getLogger(NetatmoModuleHandler.class);\n"}}, {"oid": "9ad1965e67cf904b2f2e1b56a9c551aef5a877da", "url": "https://github.com/openhab/openhab-addons/commit/9ad1965e67cf904b2f2e1b56a9c551aef5a877da", "message": "Removed @author\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-04-13T19:27:20Z", "type": "commit"}]}