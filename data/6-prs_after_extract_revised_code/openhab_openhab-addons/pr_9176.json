{"pr_number": 9176, "pr_title": "[miio] Add discovery from cloud feature.", "pr_createdAt": "2020-11-29T20:37:37Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9176", "timeline": [{"oid": "11261a27cf8a3b676009a122d5e0a05f5d2d4252", "url": "https://github.com/openhab/openhab-addons/commit/11261a27cf8a3b676009a122d5e0a05f5d2d4252", "message": "[miio] Add discovery from cloud feature.\n\nThis allows to discover things that are not directly on the same subnet\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-29T20:20:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTQ5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r532999499", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Boolean isOnline = device.getIsOnline();\n          \n          \n            \n                                boolean isOnline = device.getIsOnline();", "author": "cpmeister", "createdAt": "2020-12-01T00:48:08Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -133,6 +169,33 @@ private void discover() {\n         }\n     }\n \n+    private void cloudDiscovery() {\n+        String cloudDiscoveryMode = getCloudDiscoveryMode();\n+        if (cloudConnector.isConnected()) {\n+            List<CloudDeviceDTO> dv = cloudConnector.getDevicesList();\n+            for (CloudDeviceDTO device : dv) {\n+                String id = String.format(\"%08X\", Long.parseUnsignedLong(device.getDid()));\n+                if (cloudDiscoveryMode.contentEquals(SUPPORTED)) {\n+                    if (MiIoDevices.getType(device.getModel()).getThingType().equals(THING_TYPE_UNSUPPORTED)) {\n+                        logger.warn(\"Discovered from cloud, but ignored because not supported: {} {}\", id, device);\n+                    }\n+                }\n+                if (device.getIsOnline()) {\n+                    logger.debug(\"Discovered from cloud: {} {}\", id, device);\n+                    cloudDevices.put(id, device.getLocalip());\n+                    String token = device.getToken();\n+                    String label = device.getName() + \" \" + id + \" (\" + device.getDid() + \")\";\n+                    String country = device.getServer();\n+                    Boolean isOnline = device.getIsOnline();", "originalCommit": "11261a27cf8a3b676009a122d5e0a05f5d2d4252", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 209c6d7fbf..2dcacb4215 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -171,6 +170,7 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n \n     private void cloudDiscovery() {\n         String cloudDiscoveryMode = getCloudDiscoveryMode();\n+        cloudDevices.clear();\n         if (cloudConnector.isConnected()) {\n             List<CloudDeviceDTO> dv = cloudConnector.getDevicesList();\n             for (CloudDeviceDTO device : dv) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTY5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r532999697", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Nullable\n          \n          \n            \n                private Configuration miioConfig;\n          \n          \n            \n                private @Nullable Configuration miioConfig;", "author": "cpmeister", "createdAt": "2020-12-01T00:48:43Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -66,11 +76,33 @@\n \n     private final Logger logger = LoggerFactory.getLogger(MiIoDiscovery.class);\n     private final CloudConnector cloudConnector;\n+    private Map<String, String> cloudDevices = new HashMap<>();\n+    @Nullable\n+    private Configuration miioConfig;", "originalCommit": "11261a27cf8a3b676009a122d5e0a05f5d2d4252", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 209c6d7fbf..2dcacb4215 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -76,9 +76,8 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n \n     private final Logger logger = LoggerFactory.getLogger(MiIoDiscovery.class);\n     private final CloudConnector cloudConnector;\n-    private Map<String, String> cloudDevices = new HashMap<>();\n-    @Nullable\n-    private Configuration miioConfig;\n+    private Map<String, String> cloudDevices = new ConcurrentHashMap<>();\n+    private @Nullable Configuration miioConfig;\n \n     @Activate\n     public MiIoDiscovery(@Reference CloudConnector cloudConnector, @Reference ConfigurationAdmin configAdmin)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTIwMw==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r533001203", "bodyText": "Is there a reason you did contains instead of equals? If not then you can simplify the code.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (cloudDevices.containsKey(id)) {\n          \n          \n            \n                        if (cloudDevices.get(id).contains(ip)) {\n          \n          \n            \n                            logger.debug(\"Skipped adding local found {}. Already discovered by cloud.\", label);\n          \n          \n            \n                            return;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    if(ip.equals(cloudDevices.get(id)){\n          \n          \n            \n                        logger.debug(\"Skipped adding local found {}. Already discovered by cloud.\", label);\n          \n          \n            \n                        return;\n          \n          \n            \n                    }", "author": "cpmeister", "createdAt": "2020-12-01T00:53:07Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -141,6 +204,12 @@ private void discovered(String ip, byte[] response) {\n         String label = \"Xiaomi Mi Device \" + id + \" (\" + Long.parseUnsignedLong(id, 16) + \")\";\n         String country = \"\";\n         boolean isOnline = false;\n+        if (cloudDevices.containsKey(id)) {\n+            if (cloudDevices.get(id).contains(ip)) {\n+                logger.debug(\"Skipped adding local found {}. Already discovered by cloud.\", label);\n+                return;\n+            }\n+        }", "originalCommit": "11261a27cf8a3b676009a122d5e0a05f5d2d4252", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc3Njg0MA==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r533776840", "bodyText": "Yours is better indeed. The contains was only to avoid the NPE", "author": "marcelrv", "createdAt": "2020-12-01T22:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 209c6d7fbf..2dcacb4215 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -204,11 +204,9 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n         String label = \"Xiaomi Mi Device \" + id + \" (\" + Long.parseUnsignedLong(id, 16) + \")\";\n         String country = \"\";\n         boolean isOnline = false;\n-        if (cloudDevices.containsKey(id)) {\n-            if (cloudDevices.get(id).contains(ip)) {\n-                logger.debug(\"Skipped adding local found {}. Already discovered by cloud.\", label);\n-                return;\n-            }\n+        if (ip.equals(cloudDevices.get(id))) {\n+            logger.debug(\"Skipped adding local found {}. Already discovered by cloud.\", label);\n+            return;\n         }\n         if (cloudConnector.isConnected()) {\n             cloudConnector.getDevicesList();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTU2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r533001566", "bodyText": "If there is change this would be modified by multiple threads the you should use ConcurrentHashMap instead.", "author": "cpmeister", "createdAt": "2020-12-01T00:54:13Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -66,11 +76,33 @@\n \n     private final Logger logger = LoggerFactory.getLogger(MiIoDiscovery.class);\n     private final CloudConnector cloudConnector;\n+    private Map<String, String> cloudDevices = new HashMap<>();", "originalCommit": "11261a27cf8a3b676009a122d5e0a05f5d2d4252", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 209c6d7fbf..2dcacb4215 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -76,9 +76,8 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n \n     private final Logger logger = LoggerFactory.getLogger(MiIoDiscovery.class);\n     private final CloudConnector cloudConnector;\n-    private Map<String, String> cloudDevices = new HashMap<>();\n-    @Nullable\n-    private Configuration miioConfig;\n+    private Map<String, String> cloudDevices = new ConcurrentHashMap<>();\n+    private @Nullable Configuration miioConfig;\n \n     @Activate\n     public MiIoDiscovery(@Reference CloudConnector cloudConnector, @Reference ConfigurationAdmin configAdmin)\n"}}, {"oid": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "url": "https://github.com/openhab/openhab-addons/commit/59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "message": "[miio] update based on review\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-12-01T22:55:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzMzc5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r535533793", "bodyText": "Please do proper null checks instead of just catching the NullPointerException.", "author": "cpmeister", "createdAt": "2020-12-03T19:42:17Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -66,11 +76,32 @@\n \n     private final Logger logger = LoggerFactory.getLogger(MiIoDiscovery.class);\n     private final CloudConnector cloudConnector;\n+    private Map<String, String> cloudDevices = new ConcurrentHashMap<>();\n+    private @Nullable Configuration miioConfig;\n \n     @Activate\n-    public MiIoDiscovery(@Reference CloudConnector cloudConnector) throws IllegalArgumentException {\n+    public MiIoDiscovery(@Reference CloudConnector cloudConnector, @Reference ConfigurationAdmin configAdmin)\n+            throws IllegalArgumentException {\n         super(DISCOVERY_TIME);\n         this.cloudConnector = cloudConnector;\n+        try {\n+            miioConfig = configAdmin.getConfiguration(\"binding.miio\");\n+        } catch (IOException | SecurityException e) {\n+            logger.debug(\"Error getting configuration: {}\", e.getMessage());\n+        }\n+    }\n+\n+    private String getCloudDiscoveryMode() {\n+        if (miioConfig != null) {\n+            try {\n+                Dictionary<String, Object> properties = miioConfig.getProperties();\n+                String cloudDiscoveryModeConfig = ((String) properties.get(\"cloudDiscoveryMode\")).toLowerCase();\n+                return Set.of(SUPPORTED, ALL).contains(cloudDiscoveryModeConfig) ? cloudDiscoveryModeConfig : DISABLED;\n+            } catch (NullPointerException | ClassCastException | SecurityException e) {", "originalCommit": "59bca6dd7c8bba4d62f8ba3f0354172a38aaea47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyMDczOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r535920739", "bodyText": "yes, did that... I did it in the former way to avoid one more dead code warning.\nSomehow it assumes that the result of a Map.get is a notnull and complains about the null check.\nI don't know how to tell it that it can be a Null", "author": "marcelrv", "createdAt": "2020-12-04T08:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzMzc5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c6978200d501b84e90de2ee19d9269a9c9f4d95c", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 2dcacb4215..eedda49e26 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -95,9 +95,14 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n         if (miioConfig != null) {\n             try {\n                 Dictionary<String, Object> properties = miioConfig.getProperties();\n-                String cloudDiscoveryModeConfig = ((String) properties.get(\"cloudDiscoveryMode\")).toLowerCase();\n+                String cloudDiscoveryModeConfig = (String) properties.get(\"cloudDiscoveryMode\");\n+                if (cloudDiscoveryModeConfig == null) {\n+                    cloudDiscoveryModeConfig = DISABLED;\n+                } else {\n+                    cloudDiscoveryModeConfig = cloudDiscoveryModeConfig.toLowerCase();\n+                }\n                 return Set.of(SUPPORTED, ALL).contains(cloudDiscoveryModeConfig) ? cloudDiscoveryModeConfig : DISABLED;\n-            } catch (NullPointerException | ClassCastException | SecurityException e) {\n+            } catch (ClassCastException | SecurityException e) {\n                 logger.debug(\"Error getting cloud discovery configuration: {}\", e.getMessage());\n             }\n         }\n"}}, {"oid": "c6978200d501b84e90de2ee19d9269a9c9f4d95c", "url": "https://github.com/openhab/openhab-addons/commit/c6978200d501b84e90de2ee19d9269a9c9f4d95c", "message": "[miio] update based on code review\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-12-04T08:29:19Z", "type": "commit"}, {"oid": "19e741473c527ebc828ce5b90ee91c06dbdac73c", "url": "https://github.com/openhab/openhab-addons/commit/19e741473c527ebc828ce5b90ee91c06dbdac73c", "message": "[miio] avoid dead code warning\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-12-04T09:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNzAwNw==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r536407007", "bodyText": "Is it guaranteed that id is an integer at this point? You make no attempt to catch the NumberFormatException that this would throw. If you know that it is an integer why not have the id passed as a long parameter instead?", "author": "cpmeister", "createdAt": "2020-12-04T21:56:31Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java", "diffHunk": "@@ -152,17 +224,22 @@ private void discovered(String ip, byte[] response) {\n                 isOnline = cloudInfo.getIsOnline();\n             }\n         }\n+        submitDiscovery(ip, token, id, label, country, isOnline);\n+    }\n+\n+    private void submitDiscovery(String ip, String token, String id, String label, String country, boolean isOnline) {\n         ThingUID uid = new ThingUID(THING_TYPE_MIIO, id);\n-        logger.debug(\"Discovered Mi Device {} ({}) at {} as {}\", id, Long.parseUnsignedLong(id, 16), ip, uid);\n         DiscoveryResultBuilder dr = DiscoveryResultBuilder.create(uid).withProperty(PROPERTY_HOST_IP, ip)\n                 .withProperty(PROPERTY_DID, id);\n         if (IGNORED_TOKENS.contains(token)) {\n+            logger.debug(\"Discovered Mi Device {} ({}) at {} as {}\", id, Long.parseUnsignedLong(id, 16), ip, uid);", "originalCommit": "19e741473c527ebc828ce5b90ee91c06dbdac73c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzNzI5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r536437292", "bodyText": "it is a HEX string in this setting..\nBut I can indeed surround it with a try/catch NumberFormatException", "author": "marcelrv", "createdAt": "2020-12-04T23:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNzAwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzNzgwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9176#discussion_r536437805", "bodyText": "This is how it looks like", "author": "marcelrv", "createdAt": "2020-12-04T23:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNzAwNw=="}], "type": "inlineReview", "revised_code": {"commit": "9e3f43b74deb03eeb531f42dc3d599a9af7808c6", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\nindex 1f804676e4..7715de5649 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/discovery/MiIoDiscovery.java\n\n@@ -219,7 +219,7 @@ public class MiIoDiscovery extends AbstractDiscoveryService {\n             if (cloudInfo != null) {\n                 logger.debug(\"Cloud Info: {}\", cloudInfo);\n                 token = cloudInfo.getToken();\n-                label = cloudInfo.getName() + \" \" + id + \" (\" + Long.parseUnsignedLong(id, 16) + \")\";\n+                label = cloudInfo.getName() + \" \" + id + \" (\" + Utils.fromHEX(id) + \")\";\n                 country = cloudInfo.getServer();\n                 isOnline = cloudInfo.getIsOnline();\n             }\n"}}, {"oid": "9e3f43b74deb03eeb531f42dc3d599a9af7808c6", "url": "https://github.com/openhab/openhab-addons/commit/9e3f43b74deb03eeb531f42dc3d599a9af7808c6", "message": "[miio] safe conversions did\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-12-05T00:27:34Z", "type": "commit"}]}