{"pr_number": 8472, "pr_title": "[gree] Minor improvements", "pr_createdAt": "2020-09-15T00:13:55Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8472", "timeline": [{"oid": "0b27b16e24203b64f87d42641f90435feb20439d", "url": "https://github.com/openhab/openhab-addons/commit/0b27b16e24203b64f87d42641f90435feb20439d", "message": "Adding retries for status pool and api request\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-09-15T00:11:02Z", "type": "commit"}, {"oid": "1305e1fe9435cedd0dca292bf15f508df868246d", "url": "https://github.com/openhab/openhab-addons/commit/1305e1fe9435cedd0dca292bf15f508df868246d", "message": "README updated\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-09-15T00:11:02Z", "type": "commit"}, {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199", "url": "https://github.com/openhab/openhab-addons/commit/d30d347101582ef883fb4c4689425e7af6ccf199", "message": "Implements #8330: Swing Up/Down values 0-11\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-09-15T00:21:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNjkzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488426933", "bodyText": "Just hope it will never gets 40 degrees C \ud83d\ude09", "author": "Hilbrand", "createdAt": "2020-09-15T06:51:31Z", "path": "bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java", "diffHunk": "@@ -519,8 +545,11 @@ private void publishChannel(ChannelUID channelUID) {\n \n     private @Nullable State updateCurrentTemp() throws GreeException {\n         if (device.hasStatusValChanged(GREE_PROP_CURRENT_TEMP_SENSOR)) {\n-            return new DecimalType(device.getIntStatusVal(GREE_PROP_CURRENT_TEMP_SENSOR) + INTERNAL_TEMP_SENSOR_OFFSET\n-                    + config.currentTemperatureOffset.doubleValue());\n+            double temp = device.getIntStatusVal(GREE_PROP_CURRENT_TEMP_SENSOR);\n+            return temp != 0", "originalCommit": "d30d347101582ef883fb4c4689425e7af6ccf199", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1NzA2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488657063", "bodyText": "The reported temp can never be 0. This would be -40\u00b0C, I think there is some room for the implementation :-)", "author": "markus7017", "createdAt": "2020-09-15T13:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2NjIwMA==", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488666200", "bodyText": "Ah you're right I read that the wrong way..", "author": "Hilbrand", "createdAt": "2020-09-15T13:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNjkzMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNzY1OA==", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488427658", "bodyText": "Does it make sense to retry 3 times in a row without some wait time? (Not that add sleep would be a solution though...)", "author": "Hilbrand", "createdAt": "2020-09-15T06:52:57Z", "path": "bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java", "diffHunk": "@@ -138,62 +140,78 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             String channelId = channelUID.getIdWithoutGroup();\n             logger.debug(\"{}: Handle command {} for channel {}, command class {}\", thingId, command, channelId,\n                     command.getClass());\n-            try {\n-                DatagramSocket socket = clientSocket.get();\n-                switch (channelId) {\n-                    case MODE_CHANNEL:\n-                        handleModeCommand(socket, command);\n-                        break;\n-                    case POWER_CHANNEL:\n-                        device.setDevicePower(socket, getOnOff(command));\n-                        break;\n-                    case TURBO_CHANNEL:\n-                        device.setDeviceTurbo(socket, getOnOff(command));\n-                        break;\n-                    case LIGHT_CHANNEL:\n-                        device.setDeviceLight(socket, getOnOff(command));\n-                        break;\n-                    case TARGET_TEMP_CHANNEL:\n-                        // Set value, read back effective one and update channel\n-                        // e.g. 22.5C will result in 22.0, because the AC doesn't support half-steps for C\n-                        device.setDeviceTempSet(socket, convertTemp(command));\n-                        break;\n-                    case SWINGUD_CHANNEL:\n-                        device.setDeviceSwingUpDown(socket, getNumber(command));\n-                        break;\n-                    case SWINGLR_CHANNEL:\n-                        device.setDeviceSwingLeftRight(socket, getNumber(command));\n-                        break;\n-                    case WINDSPEED_CHANNEL:\n-                        device.setDeviceWindspeed(socket, getNumber(command));\n-                        break;\n-                    case QUIET_CHANNEL:\n-                        handleQuietCommand(socket, command);\n-                        break;\n-                    case AIR_CHANNEL:\n-                        device.setDeviceAir(socket, getOnOff(command));\n-                        break;\n-                    case DRY_CHANNEL:\n-                        device.setDeviceDry(socket, getOnOff(command));\n-                        break;\n-                    case HEALTH_CHANNEL:\n-                        device.setDeviceHealth(socket, getOnOff(command));\n-                        break;\n-                    case PWRSAV_CHANNEL:\n-                        device.setDevicePwrSaving(socket, getOnOff(command));\n-                        break;\n+\n+            boolean retry = false;\n+            do {\n+                try {\n+                    retry = false;\n+                    sendRequest(channelId, command);\n+                    // force refresh on next status refresh cycle\n+                    forceRefresh = true;\n+                    apiRetries = 0;\n+                } catch (IllegalArgumentException e) {\n+                    logInfo(\"command.invarg\", command, channelId);\n+                } catch (GreeException e) {\n+                    apiRetries++;\n+                    if (apiRetries >= MAX_API_RETRIES) {\n+                        String message = logInfo(\n+                                messages.get(\"command.exception\", command, channelId) + \": \" + e.getMessage());\n+                        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, message);\n+                    } else {\n+                        retry = true;\n+                        logger.debug(\"{}: Command {} failed for channel {}, retry\", thingId, command, channelId);\n+                    }\n+                } catch (RuntimeException e) {\n+                    logger.warn(\"{}: {}\", thingId, messages.get(\"command.exception\", command, channelId), e);\n                 }\n+            } while (retry);", "originalCommit": "d30d347101582ef883fb4c4689425e7af6ccf199", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MjA1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488692053", "bodyText": "There is no delay in submitting commands: 3 retries in a row\nonly the status poll has delays, which means \"unit was not available over the last 3 poll cycles\"\nI think that makes sense. Nevertheless I changed the code to use a local variable rather than the instance variable used to count the status poll retries.", "author": "markus7017", "createdAt": "2020-09-15T14:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNzY1OA=="}], "type": "inlineReview", "revised_code": {"commit": "faff853d275c965fdb5fed2db2a4c5dfc2e1e618", "chunk": "diff --git a/bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java b/bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java\nindex b23aaa0459..994992c751 100644\n--- a/bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java\n+++ b/bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java\n\n@@ -141,30 +141,30 @@ public class GreeHandler extends BaseThingHandler {\n             logger.debug(\"{}: Handle command {} for channel {}, command class {}\", thingId, command, channelId,\n                     command.getClass());\n \n-            boolean retry = false;\n+            int retries = MAX_API_RETRIES;\n             do {\n                 try {\n-                    retry = false;\n                     sendRequest(channelId, command);\n                     // force refresh on next status refresh cycle\n                     forceRefresh = true;\n                     apiRetries = 0;\n-                } catch (IllegalArgumentException e) {\n-                    logInfo(\"command.invarg\", command, channelId);\n                 } catch (GreeException e) {\n-                    apiRetries++;\n-                    if (apiRetries >= MAX_API_RETRIES) {\n+                    retries--;\n+                    if (retries > 0) {\n+                        logger.debug(\"{}: Command {} failed for channel {}, retry\", thingId, command, channelId);\n+                    } else {\n                         String message = logInfo(\n                                 messages.get(\"command.exception\", command, channelId) + \": \" + e.getMessage());\n                         updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, message);\n-                    } else {\n-                        retry = true;\n-                        logger.debug(\"{}: Command {} failed for channel {}, retry\", thingId, command, channelId);\n                     }\n+                } catch (IllegalArgumentException e) {\n+                    logInfo(\"command.invarg\", command, channelId);\n+                    retries = 0;\n                 } catch (RuntimeException e) {\n                     logger.warn(\"{}: {}\", thingId, messages.get(\"command.exception\", command, channelId), e);\n+                    retries = 0;\n                 }\n-            } while (retry);\n+            } while (retries > 0);\n         }\n     }\n \n"}}, {"oid": "2a875994587eaca47a55f83fc7a5b889a73464c0", "url": "https://github.com/openhab/openhab-addons/commit/2a875994587eaca47a55f83fc7a5b889a73464c0", "message": "Missing text resources added for V-SwingUpDown 7-11\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-09-15T10:14:31Z", "type": "commit"}, {"oid": "faff853d275c965fdb5fed2db2a4c5dfc2e1e618", "url": "https://github.com/openhab/openhab-addons/commit/faff853d275c965fdb5fed2db2a4c5dfc2e1e618", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-09-15T14:47:13Z", "type": "commit"}]}