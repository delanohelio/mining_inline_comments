{"pr_number": 7432, "pr_title": "[modbus][sunspec] full inverter support", "pr_createdAt": "2020-04-20T19:13:33Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7432", "timeline": [{"oid": "b20f8eb2bd58679d64b4adc10ce715190190f795", "url": "https://github.com/openhab/openhab-addons/commit/b20f8eb2bd58679d64b4adc10ce715190190f795", "message": "[sunspec] Support for inverter dc side readout\n\nThis commit increases the amount if data read out from inverters by\nadding support for the DC side values (current, voltage, power)\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-20T19:00:28Z", "type": "commit"}, {"oid": "7c3194b777509be3191cdcf62f97fc35c817a132", "url": "https://github.com/openhab/openhab-addons/commit/7c3194b777509be3191cdcf62f97fc35c817a132", "message": "[sunspec] support for default AC phase data\n\nThis commit adds support for the default AC phase information readout\n\nThis must be supported by all types of invertes.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-20T19:00:28Z", "type": "commit"}, {"oid": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "url": "https://github.com/openhab/openhab-addons/commit/a16204e83002f1a0d0df1b265fa6256d3b537b16", "message": "[sunspec] Support for two and three phase inverters\n\nTwo and tree phase inverter description differs from single phase inverters\nonly by having multiple ac phase descriptor groups. All these fields are optional\nbecause they share the same descriptor block with the single phase inverter\ntype.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-20T19:00:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NDUzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411674539", "bodyText": "Any reason scaleFactor couldn't be primitive?", "author": "cpmeister", "createdAt": "2020-04-20T20:36:25Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java", "diffHunk": "@@ -507,6 +507,20 @@ protected State getScaled(Optional<? extends Number> value, Optional<Short> scal\n         return getScaled(value.get().longValue(), scaleFactor.get(), unit);\n     }\n \n+    /**\n+     * Returns value multiplied by the 10 on the power of scaleFactory\n+     *\n+     * @param value the value to alter\n+     * @param scaleFactor the scale factor to use (may be negative)\n+     * @return the scaled value as a DecimalType\n+     */\n+    protected State getScaled(Optional<? extends Number> value, Short scaleFactor, Unit<?> unit) {", "originalCommit": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwODQ3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411908475", "bodyText": "In some cases the scaleFactor is also optional per spec. I didn't want to mix primitives and Optional<...>-s.\nAlso note, that optional values have to be treated differently if omitted: in case of a missing optional value we output the UnDefType. Any other case will output a reasonable default value.", "author": "mrbig", "createdAt": "2020-04-21T06:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NDUzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f095fb082580f00b91b16278a3eb8e93a7e0bafc", "chunk": "diff --git a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\nindex d6ca0eb4ee..40016e6713 100644\n--- a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\n+++ b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\n\n@@ -515,10 +486,7 @@ public abstract class AbstractSunSpecHandler extends BaseThingHandler {\n      * @return the scaled value as a DecimalType\n      */\n     protected State getScaled(Optional<? extends Number> value, Short scaleFactor, Unit<?> unit) {\n-        if (!value.isPresent()) {\n-            return UnDefType.UNDEF;\n-        }\n-        return getScaled(value.get().longValue(), scaleFactor, unit);\n+        return getScaled(value, Optional.of(scaleFactor), unit);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NTY4OA==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411675688", "bodyText": "It is better to use what you already have. Although you could easily have the other method call this one instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!value.isPresent()) {\n          \n          \n            \n                        return UnDefType.UNDEF;\n          \n          \n            \n                    }\n          \n          \n            \n                    return getScaled(value.get().longValue(), scaleFactor, unit);\n          \n          \n            \n                    return getScaled(value, Optional.of(scaleFactor), unit);", "author": "cpmeister", "createdAt": "2020-04-20T20:38:21Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java", "diffHunk": "@@ -507,6 +507,20 @@ protected State getScaled(Optional<? extends Number> value, Optional<Short> scal\n         return getScaled(value.get().longValue(), scaleFactor.get(), unit);\n     }\n \n+    /**\n+     * Returns value multiplied by the 10 on the power of scaleFactory\n+     *\n+     * @param value the value to alter\n+     * @param scaleFactor the scale factor to use (may be negative)\n+     * @return the scaled value as a DecimalType\n+     */\n+    protected State getScaled(Optional<? extends Number> value, Short scaleFactor, Unit<?> unit) {\n+        if (!value.isPresent()) {\n+            return UnDefType.UNDEF;\n+        }\n+        return getScaled(value.get().longValue(), scaleFactor, unit);", "originalCommit": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxMDM2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411910361", "bodyText": "Thanks I was aware of that, but that would lead to a different implementation of the getScaled, wich is incorrect in the case of mandatory fields. Mandatory fields will never output an UnDefType value.", "author": "mrbig", "createdAt": "2020-04-21T06:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NTY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM2NjEwMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412366101", "bodyText": "Mandatory fields will never output an UnDefType value.\n\nI don't understand, your code clearly returns and UnDefType if it is missing a value...", "author": "cpmeister", "createdAt": "2020-04-21T17:50:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NTY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5ODg5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412398891", "bodyText": "ignore my previous commit, I did misunderstand you. Now I see what you meant: there is a code duplication even if it's an if, and you are absolutely right.\nI removed the duplication. By the way I removed the unitless getScaled methods, I do not intend to use them anymore.", "author": "mrbig", "createdAt": "2020-04-21T18:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3NTY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "f095fb082580f00b91b16278a3eb8e93a7e0bafc", "chunk": "diff --git a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\nindex d6ca0eb4ee..40016e6713 100644\n--- a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\n+++ b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java\n\n@@ -515,10 +486,7 @@ public abstract class AbstractSunSpecHandler extends BaseThingHandler {\n      * @return the scaled value as a DecimalType\n      */\n     protected State getScaled(Optional<? extends Number> value, Short scaleFactor, Unit<?> unit) {\n-        if (!value.isPresent()) {\n-            return UnDefType.UNDEF;\n-        }\n-        return getScaled(value.get().longValue(), scaleFactor, unit);\n+        return getScaled(value, Optional.of(scaleFactor), unit);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3OTY3Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411679677", "bodyText": "These should be using your channelUID(...) method in instead.", "author": "cpmeister", "createdAt": "2020-04-20T20:45:07Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java", "diffHunk": "@@ -103,12 +103,52 @@ protected void handlePolledData(ModbusRegisterArray registers) {\n                                                                                   // see:\n                                                                                   // https://github.com/openhab/openhab-core/pull/1347\n \n+        // DC General group\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_CURRENT),\n+                getScaled(block.dcCurrent, block.dcCurrentSF, AMPERE));\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_VOLTAGE),\n+                getScaled(block.dcVoltage, block.dcVoltageSF, VOLT));\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_POWER),\n+                getScaled(block.dcPower, block.dcPowerSF, VOLT));\n+\n         updateState(channelUID(GROUP_AC_GENERAL, CHANNEL_AC_POWER_FACTOR),\n                 getScaled(block.acPowerFactor, block.acPowerFactorSF, PERCENT));\n \n         updateState(channelUID(GROUP_AC_GENERAL, CHANNEL_AC_LIFETIME_ENERGY),\n                 getScaled(block.acEnergyLifetime, block.acEnergyLifetimeSF, WATT_HOUR));\n \n+        // AC Phase specific groups\n+        // All types of inverters\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_A, CHANNEL_AC_PHASE_CURRENT),\n+                getScaled(block.acCurrentPhaseA, block.acCurrentSF, AMPERE));\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_A, CHANNEL_AC_VOLTAGE_TO_NEXT),\n+                getScaled(block.acVoltageAB, block.acVoltageSF, VOLT));\n+        updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_A, CHANNEL_AC_VOLTAGE_TO_N),\n+                getScaled(block.acVoltageAtoN, block.acVoltageSF, VOLT));\n+\n+        // Split phase and three phase\n+        if ((thing.getThingTypeUID().equals(THING_TYPE_INVERTER_SPLIT_PHASE)\n+                || thing.getThingTypeUID().equals(THING_TYPE_INVERTER_THREE_PHASE))\n+                && block.phaseConfiguration >= INVERTER_SPLIT_PHASE) {\n+            updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_B, CHANNEL_AC_PHASE_CURRENT),\n+                    getScaled(block.acCurrentPhaseB, block.acCurrentSF, AMPERE));\n+            updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_B, CHANNEL_AC_VOLTAGE_TO_NEXT),\n+                    getScaled(block.acVoltageBC, block.acVoltageSF, VOLT));\n+            updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_B, CHANNEL_AC_VOLTAGE_TO_N),\n+                    getScaled(block.acVoltageBtoN, block.acVoltageSF, VOLT));\n+        }\n+\n+        // Three phase only\n+        if (thing.getThingTypeUID().equals(THING_TYPE_INVERTER_THREE_PHASE)\n+                && block.phaseConfiguration >= INVERTER_THREE_PHASE) {\n+            updateState(new ChannelUID(getThing().getUID(), GROUP_AC_PHASE_C, CHANNEL_AC_PHASE_CURRENT),", "originalCommit": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyMTc5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411921796", "bodyText": "Thanks, I've overlooked this. Fixed", "author": "mrbig", "createdAt": "2020-04-21T06:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY3OTY3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0ced75653c0e6f4577ca33f1e3102156cce6ff41", "chunk": "diff --git a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\nindex 2f66423459..35703888cc 100644\n--- a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\n+++ b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\n\n@@ -104,12 +103,11 @@ public class InverterHandler extends AbstractSunSpecHandler {\n                                                                                   // https://github.com/openhab/openhab-core/pull/1347\n \n         // DC General group\n-        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_CURRENT),\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_CURRENT),\n                 getScaled(block.dcCurrent, block.dcCurrentSF, AMPERE));\n-        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_VOLTAGE),\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_VOLTAGE),\n                 getScaled(block.dcVoltage, block.dcVoltageSF, VOLT));\n-        updateState(new ChannelUID(getThing().getUID(), GROUP_DC_GENERAL, CHANNEL_DC_POWER),\n-                getScaled(block.dcPower, block.dcPowerSF, VOLT));\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_POWER), getScaled(block.dcPower, block.dcPowerSF, VOLT));\n \n         updateState(channelUID(GROUP_AC_GENERAL, CHANNEL_AC_POWER_FACTOR),\n                 getScaled(block.acPowerFactor, block.acPowerFactorSF, PERCENT));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MTM3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411681373", "bodyText": "Would this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (thingTypeUID.equals(THING_TYPE_INVERTER_SINGLE_PHASE)\n          \n          \n            \n                            || thingTypeUID.equals(THING_TYPE_INVERTER_SPLIT_PHASE)\n          \n          \n            \n                            || thingTypeUID.equals(THING_TYPE_INVERTER_THREE_PHASE)) {\n          \n          \n            \n                    if (supportsThingType(thingTypeUID)) {", "author": "cpmeister", "createdAt": "2020-04-20T20:48:08Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/SunSpecHandlerFactory.java", "diffHunk": "@@ -69,14 +63,16 @@ public SunSpecHandlerFactory(@Reference ModbusManager manager) {\n \n     @Override\n     public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n-        return SUPPORTED_THING_TYPES_UIDS.contains(thingTypeUID);\n+        return SUPPORTED_THING_TYPES_UIDS.containsValue(thingTypeUID);\n     }\n \n     @Override\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (thingTypeUID.equals(THING_TYPE_INVERTER_SINGLE_PHASE)) {\n+        if (thingTypeUID.equals(THING_TYPE_INVERTER_SINGLE_PHASE)\n+                || thingTypeUID.equals(THING_TYPE_INVERTER_SPLIT_PHASE)\n+                || thingTypeUID.equals(THING_TYPE_INVERTER_THREE_PHASE)) {", "originalCommit": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxMzQyNg==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411913426", "bodyText": "I have the 4th PR ready wich will add support for smart meters. But they use a different handler class, so this if will have an else if ... block with other thing types. That's the reason why this isn't a simple map lookup at the moment..", "author": "mrbig", "createdAt": "2020-04-21T06:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MTM3Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MjY5OA==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411682698", "bodyText": "Does this need to be a map? I don't see you using the map keys, is that for a future PR?", "author": "cpmeister", "createdAt": "2020-04-20T20:50:09Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/SunSpecConstants.java", "diffHunk": "@@ -33,17 +33,27 @@\n     // List of all Thing Type UIDs\n     public static final ThingTypeUID THING_TYPE_INVERTER_SINGLE_PHASE = new ThingTypeUID(BINDING_ID,\n             \"inverter-single-phase\");\n+    public static final ThingTypeUID THING_TYPE_INVERTER_SPLIT_PHASE = new ThingTypeUID(BINDING_ID,\n+            \"inverter-split-phase\");\n+    public static final ThingTypeUID THING_TYPE_INVERTER_THREE_PHASE = new ThingTypeUID(BINDING_ID,\n+            \"inverter-three-phase\");\n \n     // Block types\n     public static final int COMMON_BLOCK = 1;\n     public static final int INVERTER_SINGLE_PHASE = 101;\n+    public static final int INVERTER_SPLIT_PHASE = 102;\n+    public static final int INVERTER_THREE_PHASE = 103;\n     public static final int FINAL_BLOCK = 0xffff;\n \n     /**\n      * Map of the supported thing type uids, with their block type id\n      */\n-    public static final Map<Integer, ThingTypeUID> SUPPORTED_THING_TYPES_UIDS = Collections\n-            .singletonMap(INVERTER_SINGLE_PHASE, THING_TYPE_INVERTER_SINGLE_PHASE);\n+    public static final Map<Integer, ThingTypeUID> SUPPORTED_THING_TYPES_UIDS = new HashMap<>();", "originalCommit": "a16204e83002f1a0d0df1b265fa6256d3b537b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxNTkzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r411915930", "bodyText": "This is already in use, the keys are checked by the SunspecDiscoveryProcess to recognize the block level id. See:\n\n  \n    \n      openhab-addons/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/discovery/SunspecDiscoveryProcess.java\n    \n    \n        Lines 327 to 330\n      in\n      47a320c\n    \n    \n    \n    \n\n        \n          \n           if (!SUPPORTED_THING_TYPES_UIDS.containsKey(block.moduleID)) { \n        \n\n        \n          \n               logger.debug(\"ModuleID {} is not supported, skipping this block\", block.moduleID); \n        \n\n        \n          \n               return; \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nBackground: in the specification device types are identified by a unique identifer for example: 101 - 1 phase inverter, 102 - 2 phase inverter, 103 - 3 phase inverter, 201 - 1 phase meter, etc.\nSUPPORTED_THING_TYPES_UIDS is a map between those identifiers and the OH thing type uids.", "author": "mrbig", "createdAt": "2020-04-21T06:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4MjY5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0ced75653c0e6f4577ca33f1e3102156cce6ff41", "url": "https://github.com/openhab/openhab-addons/commit/0ced75653c0e6f4577ca33f1e3102156cce6ff41", "message": "[sunspec] using channelUID method\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-21T06:48:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzQ1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412373457", "bodyText": "Is that the naming used by the protocol specification? Otherwise I would prefer L1, L2, L3, which is the common naming.", "author": "J-N-K", "createdAt": "2020-04-21T18:00:17Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/SunSpecConstants.java", "diffHunk": "@@ -58,6 +68,10 @@\n     // Channel group ids\n     public static final String GROUP_DEVICE_INFO = \"deviceInformation\";\n     public static final String GROUP_AC_GENERAL = \"acGeneral\";\n+    public static final String GROUP_AC_PHASE_A = \"acPhaseA\";", "originalCommit": "0ced75653c0e6f4577ca33f1e3102156cce6ff41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5NDI0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412394247", "bodyText": "This specification use Phase A/B/C. For example here is one doc available: https://www.solaredge.com/sites/default/files/sunspec-implementation-technical-note.pdf see page 17.\nBut I understand your point as well. Maybe we could just change the labels?", "author": "mrbig", "createdAt": "2020-04-21T18:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5Njc3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412396772", "bodyText": "If A B C is the notation used by the standard this is probably how the devices are labeled, too. So we should keep that.\nAs you pointed out, we could use something like A (L1) for the labels.", "author": "J-N-K", "createdAt": "2020-04-21T18:34:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ4MjgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412482828", "bodyText": "Thanks, rephased the group labels. Also found a typo I was overlooking so far.", "author": "mrbig", "createdAt": "2020-04-21T20:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzQ1Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f095fb082580f00b91b16278a3eb8e93a7e0bafc", "url": "https://github.com/openhab/openhab-addons/commit/f095fb082580f00b91b16278a3eb8e93a7e0bafc", "message": "[sunspec] removed code duplication and unused getScaled methods\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-21T18:38:09Z", "type": "commit"}, {"oid": "f095fb082580f00b91b16278a3eb8e93a7e0bafc", "url": "https://github.com/openhab/openhab-addons/commit/f095fb082580f00b91b16278a3eb8e93a7e0bafc", "message": "[sunspec] removed code duplication and unused getScaled methods\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-21T18:38:09Z", "type": "forcePushed"}, {"oid": "b9a05c095ccf1d99ef8127ebe0553696d4cbbd86", "url": "https://github.com/openhab/openhab-addons/commit/b9a05c095ccf1d99ef8127ebe0553696d4cbbd86", "message": "[sunspec] Changed phase labeling and typo fix\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-21T20:49:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMjUwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412532505", "bodyText": "you are using unit volts for power?", "author": "cpmeister", "createdAt": "2020-04-21T22:23:15Z", "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java", "diffHunk": "@@ -109,6 +108,45 @@ protected void handlePolledData(ModbusRegisterArray registers) {\n         updateState(channelUID(GROUP_AC_GENERAL, CHANNEL_AC_LIFETIME_ENERGY),\n                 getScaled(block.acEnergyLifetime, block.acEnergyLifetimeSF, WATT_HOUR));\n \n+        // DC General group\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_CURRENT),\n+                getScaled(block.dcCurrent, block.dcCurrentSF, AMPERE));\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_VOLTAGE),\n+                getScaled(block.dcVoltage, block.dcVoltageSF, VOLT));\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_POWER), getScaled(block.dcPower, block.dcPowerSF, VOLT));", "originalCommit": "b9a05c095ccf1d99ef8127ebe0553696d4cbbd86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NjgyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7432#discussion_r412546820", "bodyText": "bummer. Of course not. Fixed this, thanks for pointing it out.", "author": "mrbig", "createdAt": "2020-04-21T22:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMjUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c1bb7f0bbc57fe1daf1c2bc84e229ed7869ef435", "chunk": "diff --git a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\nindex ef3d9794d5..2842df4186 100644\n--- a/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\n+++ b/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/InverterHandler.java\n\n@@ -113,7 +113,7 @@ public class InverterHandler extends AbstractSunSpecHandler {\n                 getScaled(block.dcCurrent, block.dcCurrentSF, AMPERE));\n         updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_VOLTAGE),\n                 getScaled(block.dcVoltage, block.dcVoltageSF, VOLT));\n-        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_POWER), getScaled(block.dcPower, block.dcPowerSF, VOLT));\n+        updateState(channelUID(GROUP_DC_GENERAL, CHANNEL_DC_POWER), getScaled(block.dcPower, block.dcPowerSF, WATT));\n \n         // AC Phase specific groups\n         // All types of inverters\n"}}, {"oid": "c1bb7f0bbc57fe1daf1c2bc84e229ed7869ef435", "url": "https://github.com/openhab/openhab-addons/commit/c1bb7f0bbc57fe1daf1c2bc84e229ed7869ef435", "message": "[sunspec] fixed dc power unit type\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-04-21T22:51:21Z", "type": "commit"}]}