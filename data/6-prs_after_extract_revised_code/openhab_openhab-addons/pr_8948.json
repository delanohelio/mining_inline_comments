{"pr_number": 8948, "pr_title": "[ipcamera] Improve ONVIF preset naming", "pr_createdAt": "2020-11-03T05:18:52Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8948", "timeline": [{"oid": "88fbef8efafc7586a8a5417e76f090a54bf7dca7", "url": "https://github.com/openhab/openhab-addons/commit/88fbef8efafc7586a8a5417e76f090a54bf7dca7", "message": "Refactor to prevent endless loop.\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T05:36:50Z", "type": "commit"}, {"oid": "1e08eafff40ad1bb3b5bfd58e6ce1da10597dc66", "url": "https://github.com/openhab/openhab-addons/commit/1e08eafff40ad1bb3b5bfd58e6ce1da10597dc66", "message": "Allow `-rtsp_transport tcp` to be over-ridden.\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T05:36:50Z", "type": "commit"}, {"oid": "a89fa12db85adcc284197cfd0cf52400d098b8bd", "url": "https://github.com/openhab/openhab-addons/commit/a89fa12db85adcc284197cfd0cf52400d098b8bd", "message": "Display actual preset names\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T05:36:50Z", "type": "commit"}, {"oid": "50e823760fcd4a4a6df916d31ecaf668e60fd4e9", "url": "https://github.com/openhab/openhab-addons/commit/50e823760fcd4a4a6df916d31ecaf668e60fd4e9", "message": "Allow IP to not match due to Hostname given in setup.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T05:36:50Z", "type": "commit"}, {"oid": "6e6699590c519bd440e5397cd67758d026993555", "url": "https://github.com/openhab/openhab-addons/commit/6e6699590c519bd440e5397cd67758d026993555", "message": "Fix index off by 1\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T05:36:50Z", "type": "commit"}, {"oid": "f45b73781f06e649b8a5eac80fb862264ea5d80b", "url": "https://github.com/openhab/openhab-addons/commit/f45b73781f06e649b8a5eac80fb862264ea5d80b", "message": "Reduce null compiler warnings.\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-03T12:28:31Z", "type": "commit"}, {"oid": "517cbaa193fb55c1105ebbb5fb4e39808fa81099", "url": "https://github.com/openhab/openhab-addons/commit/517cbaa193fb55c1105ebbb5fb4e39808fa81099", "message": "Clean up last of the null compiler warnings.\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-04T11:26:23Z", "type": "commit"}, {"oid": "655cbb488b8d37ede5725653401c59bab2517bff", "url": "https://github.com/openhab/openhab-addons/commit/655cbb488b8d37ede5725653401c59bab2517bff", "message": "Merge branch 'main' into ipcameraV3", "committedDate": "2020-11-04T23:09:27Z", "type": "commit"}, {"oid": "97ffaf4de1c1035fa10cea89aa480acc2dbc8f5b", "url": "https://github.com/openhab/openhab-addons/commit/97ffaf4de1c1035fa10cea89aa480acc2dbc8f5b", "message": "Change to a single line log output.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-06T07:00:09Z", "type": "commit"}, {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac", "url": "https://github.com/openhab/openhab-addons/commit/feb3a657b58f0fc28186ab236899d0d78d45eeac", "message": "Remove dead code already handled earlier.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-08T13:30:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzc5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519517796", "bodyText": "Some minor simplification.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (filename == null && localHandler != null) {\n          \n          \n            \n                        localHandler.recordGif(\"ipcamera\", secondsToRecord);\n          \n          \n            \n                    } else if (localHandler != null && filename != null) {\n          \n          \n            \n                        localHandler.recordGif(filename, secondsToRecord);\n          \n          \n            \n                    }\n          \n          \n            \n                    if(localHandler != null){\n          \n          \n            \n                        localHandler.recordGif(filename != null ? filename : \"ipcamera\", secondsToRecord);\n          \n          \n            \n                    }", "author": "cpmeister", "createdAt": "2020-11-09T02:10:10Z", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "diffHunk": "@@ -66,10 +67,11 @@ public void recordGIF(\n             @ActionInput(name = \"filename\", label = \"Filename\", description = \"Name that the recording will have once created, don't include the .mp4.\") @Nullable String filename,\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.gif for {} seconds.\", filename, secondsToRecord);\n-        if (filename == null && handler != null) {\n-            handler.recordGif(\"ipcamera\", secondsToRecord);\n-        } else if (handler != null && filename != null) {\n-            handler.recordGif(filename, secondsToRecord);\n+        IpCameraHandler localHandler = handler;\n+        if (filename == null && localHandler != null) {\n+            localHandler.recordGif(\"ipcamera\", secondsToRecord);\n+        } else if (localHandler != null && filename != null) {\n+            localHandler.recordGif(filename, secondsToRecord);\n         }", "originalCommit": "feb3a657b58f0fc28186ab236899d0d78d45eeac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3342fb511d44addd9825f2848fecb063cca933a5", "chunk": "diff --git a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\nindex dfe0adcef6..a1d40401a0 100644\n--- a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\n+++ b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\n\n@@ -68,10 +66,8 @@ public class IpCameraActions implements ThingActions {\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.gif for {} seconds.\", filename, secondsToRecord);\n         IpCameraHandler localHandler = handler;\n-        if (filename == null && localHandler != null) {\n-            localHandler.recordGif(\"ipcamera\", secondsToRecord);\n-        } else if (localHandler != null && filename != null) {\n-            localHandler.recordGif(filename, secondsToRecord);\n+        if(localHandler != null){\n+            localHandler.recordGif(filename != null ? filename : \"ipcamera\", secondsToRecord);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519517988", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (filename == null && localHandler != null) {\n          \n          \n            \n                        localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n          \n          \n            \n                    } else if (localHandler != null && filename != null) {\n          \n          \n            \n                        localHandler.recordMp4(filename, secondsToRecord);\n          \n          \n            \n                    }\n          \n          \n            \n                    if (localHandler != null) {\n          \n          \n            \n                        localHandler.recordMp4(filename != null ? filename : \"ipcamera\", secondsToRecord);\n          \n          \n            \n                    }", "author": "cpmeister", "createdAt": "2020-11-09T02:11:09Z", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "diffHunk": "@@ -50,10 +50,11 @@ public void recordMP4(\n             @ActionInput(name = \"filename\", label = \"Filename\", description = \"Name that the recording will have once created, don't include the .mp4.\") @Nullable String filename,\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.mp4 for {} seconds.\", filename, secondsToRecord);\n-        if (filename == null && handler != null) {\n-            handler.recordMp4(\"ipcamera\", secondsToRecord);\n-        } else if (handler != null && filename != null) {\n-            handler.recordMp4(filename, secondsToRecord);\n+        IpCameraHandler localHandler = handler;\n+        if (filename == null && localHandler != null) {\n+            localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n+        } else if (localHandler != null && filename != null) {\n+            localHandler.recordMp4(filename, secondsToRecord);\n         }", "originalCommit": "feb3a657b58f0fc28186ab236899d0d78d45eeac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgwOTkzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519809933", "bodyText": "Thanks much neater.", "author": "Skinah", "createdAt": "2020-11-09T13:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "d945e9aebd557854abe716c577f53cfd5a60a3de", "chunk": "diff --git a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\nindex dfe0adcef6..cee9905e1b 100644\n--- a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\n+++ b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\n\n@@ -51,10 +51,8 @@ public class IpCameraActions implements ThingActions {\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.mp4 for {} seconds.\", filename, secondsToRecord);\n         IpCameraHandler localHandler = handler;\n-        if (filename == null && localHandler != null) {\n-            localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n-        } else if (localHandler != null && filename != null) {\n-            localHandler.recordMp4(filename, secondsToRecord);\n+        if (localHandler != null) {\n+            localHandler.recordMp4(filename != null ? filename : \"ipcamera\", secondsToRecord);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxODE4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519518183", "bodyText": "Why are you removing this?", "author": "cpmeister", "createdAt": "2020-11-09T02:12:11Z", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/AmcrestHandler.java", "diffHunk": "@@ -206,19 +205,6 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     ipCameraHandler.sendHttpGET(\"/cgi-bin/configManager.cgi?action=setConfig&AlarmOut[1].Mode=0\");\n                 }\n                 return;\n-            case CHANNEL_FFMPEG_MOTION_CONTROL:\n-                if (OnOffType.ON.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                } else if (OnOffType.OFF.equals(command) || DecimalType.ZERO.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = false;\n-                    ipCameraHandler.noMotionDetected(CHANNEL_MOTION_ALARM);\n-                } else {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                    ipCameraHandler.motionThreshold = Double.valueOf(command.toString());\n-                    ipCameraHandler.motionThreshold = ipCameraHandler.motionThreshold / 10000;\n-                }\n-                ipCameraHandler.setupFfmpegFormat(FFmpegFormat.RTSP_ALARMS);\n-                return;", "originalCommit": "feb3a657b58f0fc28186ab236899d0d78d45eeac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5NjY1MA==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519796650", "bodyText": "Because it is already handled in the main class/handler as all camera things have this, so this is dead code it will never run.", "author": "Skinah", "createdAt": "2020-11-09T13:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxODE4Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d945e9aebd557854abe716c577f53cfd5a60a3de", "url": "https://github.com/openhab/openhab-addons/commit/d945e9aebd557854abe716c577f53cfd5a60a3de", "message": "Update bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2020-11-09T13:10:29Z", "type": "commit"}, {"oid": "3342fb511d44addd9825f2848fecb063cca933a5", "url": "https://github.com/openhab/openhab-addons/commit/3342fb511d44addd9825f2848fecb063cca933a5", "message": "Update bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java\r\n\r\nSigned-off-by: Matthew Skinner <matt@pcmus.com>\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2020-11-09T13:10:50Z", "type": "commit"}, {"oid": "0874ed4f87cf7041dd7690fd113b1265c6f0cdc3", "url": "https://github.com/openhab/openhab-addons/commit/0874ed4f87cf7041dd7690fd113b1265c6f0cdc3", "message": "Apply spotless fixes.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-09T13:11:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NDAyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519984029", "bodyText": "remove commented code", "author": "cpmeister", "createdAt": "2020-11-09T17:19:44Z", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java", "diffHunk": "@@ -96,20 +96,16 @@ public void channelRead(@Nullable ChannelHandlerContext ctx, @Nullable Object ms\n                     QueryStringDecoder queryStringDecoder = new QueryStringDecoder(httpRequest.uri());\n                     switch (queryStringDecoder.path()) {\n                         case \"/ipcamera.m3u8\":\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                if (!ipCameraHandler.ffmpegHLS.getIsAlive()) {\n-                                    if (ipCameraHandler.ffmpegHLS != null) {\n-                                        ipCameraHandler.ffmpegHLS.startConverting();\n-                                    }\n-                                }\n-                            } else {\n+                            Ffmpeg localFfmpeg = ipCameraHandler.ffmpegHLS;\n+                            if (localFfmpeg == null) {\n                                 ipCameraHandler.setupFfmpegFormat(FFmpegFormat.HLS);\n-                            }\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                ipCameraHandler.ffmpegHLS.setKeepAlive(8);\n+                            } else if (!localFfmpeg.getIsAlive()) {\n+                                localFfmpeg.startConverting();\n+                            } else {\n+                                localFfmpeg.setKeepAlive(8);\n                             }\n                             sendFile(ctx, httpRequest.uri(), \"application/x-mpegurl\");\n-                            ctx.close();\n+                            // ctx.close();", "originalCommit": "0874ed4f87cf7041dd7690fd113b1265c6f0cdc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE3NTczOA==", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r521175738", "bodyText": "DONE", "author": "Skinah", "createdAt": "2020-11-11T07:51:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NDAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "86f4bce7c5af68e2fd0e864fb96831b41ec10d79", "chunk": "diff --git a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java\nindex 7bf2dea085..65ecd9e1f8 100644\n--- a/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java\n+++ b/bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java\n\n@@ -103,9 +104,12 @@ public class StreamServerHandler extends ChannelInboundHandlerAdapter {\n                                 localFfmpeg.startConverting();\n                             } else {\n                                 localFfmpeg.setKeepAlive(8);\n+                                sendFile(ctx, httpRequest.uri(), \"application/x-mpegurl\");\n+                                return;\n                             }\n+                            // Allow files to be created, or you get old m3u8 from the last time this ran.\n+                            TimeUnit.MILLISECONDS.sleep(4500);\n                             sendFile(ctx, httpRequest.uri(), \"application/x-mpegurl\");\n-                            // ctx.close();\n                             return;\n                         case \"/ipcamera.mpd\":\n                             sendFile(ctx, httpRequest.uri(), \"application/dash+xml\");\n"}}, {"oid": "86f4bce7c5af68e2fd0e864fb96831b41ec10d79", "url": "https://github.com/openhab/openhab-addons/commit/86f4bce7c5af68e2fd0e864fb96831b41ec10d79", "message": "Bug fixes for HLS\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-11T06:18:03Z", "type": "commit"}, {"oid": "24cb8f63fc5b4d299a870fbf1cbe5e78582b1e33", "url": "https://github.com/openhab/openhab-addons/commit/24cb8f63fc5b4d299a870fbf1cbe5e78582b1e33", "message": "Compatibility fix for GotoPreset\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-14T23:41:29Z", "type": "commit"}, {"oid": "d1d3633fec7d273c3655137fee077079e0927990", "url": "https://github.com/openhab/openhab-addons/commit/d1d3633fec7d273c3655137fee077079e0927990", "message": "Improve default snapshot quality and allow FFmpeg arguments to be\nchanged.\n\n\nSigned-off-by: Matthew Skinner <matt@pcmus.com>", "committedDate": "2020-11-16T06:51:45Z", "type": "commit"}]}