{"pr_number": 9475, "pr_title": "[homekit] add support for QR code based pairing", "pr_createdAt": "2020-12-22T15:04:18Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9475", "timeline": [{"oid": "ff7ba000abca742ad891a9f46f4166dbf6791504", "url": "https://github.com/openhab/openhab-addons/commit/ff7ba000abca742ad891a9f46f4166dbf6791504", "message": "add support qrcode based pairing\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-21T22:40:24Z", "type": "commit"}, {"oid": "32c758b0fdd9e63757423978dac2c53ad260f6f3", "url": "https://github.com/openhab/openhab-addons/commit/32c758b0fdd9e63757423978dac2c53ad260f6f3", "message": "add screenshots\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-21T22:41:06Z", "type": "commit"}, {"oid": "bc5444068df190e54ae33cf139520adc4fc840d3", "url": "https://github.com/openhab/openhab-addons/commit/bc5444068df190e54ae33cf139520adc4fc840d3", "message": "fix typo\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T09:10:28Z", "type": "commit"}, {"oid": "f61c963a6cb7a437505404258025bd9128ce4658", "url": "https://github.com/openhab/openhab-addons/commit/f61c963a6cb7a437505404258025bd9128ce4658", "message": "update config only if differnt to prevent endless update loop\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T10:33:37Z", "type": "commit"}, {"oid": "43f6de2ebe6491f3549afb826bc5b4d11e1acb8c", "url": "https://github.com/openhab/openhab-addons/commit/43f6de2ebe6491f3549afb826bc5b4d11e1acb8c", "message": "clean up\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T11:09:40Z", "type": "commit"}, {"oid": "7277c146fd888e298dcf00e30b87c7608963e7c4", "url": "https://github.com/openhab/openhab-addons/commit/7277c146fd888e298dcf00e30b87c7608963e7c4", "message": "add support qrcode based pairing\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:27:21Z", "type": "commit"}, {"oid": "e0381f12cf17d701d202dbd42e0779c8e2195122", "url": "https://github.com/openhab/openhab-addons/commit/e0381f12cf17d701d202dbd42e0779c8e2195122", "message": "add screenshots\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:27:21Z", "type": "commit"}, {"oid": "f21a214f0d0daafa5e7449a547b004b5ab977573", "url": "https://github.com/openhab/openhab-addons/commit/f21a214f0d0daafa5e7449a547b004b5ab977573", "message": "fix typo\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:27:21Z", "type": "commit"}, {"oid": "b170f1186975597bbe7c9ba280215171f5463d3b", "url": "https://github.com/openhab/openhab-addons/commit/b170f1186975597bbe7c9ba280215171f5463d3b", "message": "update config only if differnt to prevent endless update loop\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:27:22Z", "type": "commit"}, {"oid": "edb16beb6edfc202459af3d876ef73a64f119b6e", "url": "https://github.com/openhab/openhab-addons/commit/edb16beb6edfc202459af3d876ef73a64f119b6e", "message": "clean up\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:27:22Z", "type": "commit"}, {"oid": "58ed5285714c1b3097d64551dfec8ba7083f92fb", "url": "https://github.com/openhab/openhab-addons/commit/58ed5285714c1b3097d64551dfec8ba7083f92fb", "message": "incorporate review feedback\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:44:30Z", "type": "commit"}, {"oid": "9f902ffabc36da9164f4ead33b28a1a59698e0d3", "url": "https://github.com/openhab/openhab-addons/commit/9f902ffabc36da9164f4ead33b28a1a59698e0d3", "message": "incorporate review feedback\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T14:55:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNDE4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9475#discussion_r547434182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n          \n          \n            \n                private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n          \n          \n            \n                private final NetworkAddressService networkAddressService;\n          \n          \n            \n                private final ConfigurationAdmin configAdmin;", "author": "J-N-K", "createdAt": "2020-12-22T18:24:27Z", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -44,45 +47,86 @@\n import io.github.hapjava.accessories.HomekitAccessory;\n import io.github.hapjava.server.impl.HomekitRoot;\n import io.github.hapjava.server.impl.HomekitServer;\n+import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n \n /**\n  * Provides access to openHAB items via the HomeKit API\n  *\n  * @author Andy Lintner - Initial contribution\n  */\n-@Component(service = { Homekit.class }, configurationPid = \"org.openhab.homekit\", property = {\n+@Component(service = { Homekit.class }, configurationPid = HomekitSettings.CONFIG_PID, property = {\n         Constants.SERVICE_PID + \"=org.openhab.homekit\", \"port:Integer=9123\" })\n @ConfigurableService(category = \"io\", label = \"HomeKit Integration\", description_uri = \"io:homekit\")\n @NonNullByDefault\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n-    private final NetworkAddressService networkAddressService;\n-    private final HomekitChangeListener changeListener;\n \n-    private HomekitSettings settings;\n+    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n+    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;", "originalCommit": "9f902ffabc36da9164f4ead33b28a1a59698e0d3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5026c967fd57db9e0144d422de50ed2afdefcdf1", "chunk": "diff --git a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\nindex 48c5d41191..76f84a0371 100644\n--- a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n+++ b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n\n@@ -61,15 +61,15 @@ import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n \n-    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n-    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+    private final NetworkAddressService networkAddressService;\n+    private final ConfigurationAdmin configAdmin;\n \n-    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n-    private @NonNullByDefault({}) HomekitSettings settings;\n+    private HomekitAuthInfoImpl authInfo;\n+    private HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private @NonNullByDefault({}) HomekitChangeListener changeListener;\n+    private final HomekitChangeListener changeListener;\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNDkwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9475#discussion_r547434905", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private @NonNullByDefault({}) HomekitChangeListener changeListener;\n          \n          \n            \n                private final HomekitChangeListener changeListener;", "author": "J-N-K", "createdAt": "2020-12-22T18:25:39Z", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -44,45 +47,86 @@\n import io.github.hapjava.accessories.HomekitAccessory;\n import io.github.hapjava.server.impl.HomekitRoot;\n import io.github.hapjava.server.impl.HomekitServer;\n+import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n \n /**\n  * Provides access to openHAB items via the HomeKit API\n  *\n  * @author Andy Lintner - Initial contribution\n  */\n-@Component(service = { Homekit.class }, configurationPid = \"org.openhab.homekit\", property = {\n+@Component(service = { Homekit.class }, configurationPid = HomekitSettings.CONFIG_PID, property = {\n         Constants.SERVICE_PID + \"=org.openhab.homekit\", \"port:Integer=9123\" })\n @ConfigurableService(category = \"io\", label = \"HomeKit Integration\", description_uri = \"io:homekit\")\n @NonNullByDefault\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n-    private final NetworkAddressService networkAddressService;\n-    private final HomekitChangeListener changeListener;\n \n-    private HomekitSettings settings;\n+    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n+    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+\n+    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n+    private @NonNullByDefault({}) HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private final HomekitAuthInfoImpl authInfo;\n+    private @NonNullByDefault({}) HomekitChangeListener changeListener;", "originalCommit": "9f902ffabc36da9164f4ead33b28a1a59698e0d3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5026c967fd57db9e0144d422de50ed2afdefcdf1", "chunk": "diff --git a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\nindex 48c5d41191..76f84a0371 100644\n--- a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n+++ b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n\n@@ -61,15 +61,15 @@ import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n \n-    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n-    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+    private final NetworkAddressService networkAddressService;\n+    private final ConfigurationAdmin configAdmin;\n \n-    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n-    private @NonNullByDefault({}) HomekitSettings settings;\n+    private HomekitAuthInfoImpl authInfo;\n+    private HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private @NonNullByDefault({}) HomekitChangeListener changeListener;\n+    private final HomekitChangeListener changeListener;\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNjA5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9475#discussion_r547436092", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n          \n          \n            \n                private @NonNullByDefault({}) HomekitSettings settings;\n          \n          \n            \n                private HomekitAuthInfoImpl authInfo;\n          \n          \n            \n                private HomekitSettings settings;", "author": "J-N-K", "createdAt": "2020-12-22T18:26:53Z", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -44,45 +47,86 @@\n import io.github.hapjava.accessories.HomekitAccessory;\n import io.github.hapjava.server.impl.HomekitRoot;\n import io.github.hapjava.server.impl.HomekitServer;\n+import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n \n /**\n  * Provides access to openHAB items via the HomeKit API\n  *\n  * @author Andy Lintner - Initial contribution\n  */\n-@Component(service = { Homekit.class }, configurationPid = \"org.openhab.homekit\", property = {\n+@Component(service = { Homekit.class }, configurationPid = HomekitSettings.CONFIG_PID, property = {\n         Constants.SERVICE_PID + \"=org.openhab.homekit\", \"port:Integer=9123\" })\n @ConfigurableService(category = \"io\", label = \"HomeKit Integration\", description_uri = \"io:homekit\")\n @NonNullByDefault\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n-    private final NetworkAddressService networkAddressService;\n-    private final HomekitChangeListener changeListener;\n \n-    private HomekitSettings settings;\n+    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n+    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+\n+    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n+    private @NonNullByDefault({}) HomekitSettings settings;", "originalCommit": "9f902ffabc36da9164f4ead33b28a1a59698e0d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ3OTI0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9475#discussion_r547479247", "bodyText": "thx, good one.\ni have not thought about @NonNullByDefault({}) after changed the injection to constructor injection", "author": "yfre", "createdAt": "2020-12-22T19:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNjA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5026c967fd57db9e0144d422de50ed2afdefcdf1", "chunk": "diff --git a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\nindex 48c5d41191..76f84a0371 100644\n--- a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n+++ b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n\n@@ -61,15 +61,15 @@ import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n \n-    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n-    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+    private final NetworkAddressService networkAddressService;\n+    private final ConfigurationAdmin configAdmin;\n \n-    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n-    private @NonNullByDefault({}) HomekitSettings settings;\n+    private HomekitAuthInfoImpl authInfo;\n+    private HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private @NonNullByDefault({}) HomekitChangeListener changeListener;\n+    private final HomekitChangeListener changeListener;\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNjM0MA==", "url": "https://github.com/openhab/openhab-addons/pull/9475#discussion_r547436340", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Cannot activate HomeKit binding. {}\", e.getMessage());\n          \n          \n            \n                        logger.warn(\"Cannot activate HomeKit binding. {}\", e.getMessage());\n          \n          \n            \n                        throw e;\n          \n      \n    \n    \n  \n\nIf the constructor throws an exception, the framework should try to re-initialize.", "author": "J-N-K", "createdAt": "2020-12-22T18:27:27Z", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -44,45 +47,86 @@\n import io.github.hapjava.accessories.HomekitAccessory;\n import io.github.hapjava.server.impl.HomekitRoot;\n import io.github.hapjava.server.impl.HomekitServer;\n+import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n \n /**\n  * Provides access to openHAB items via the HomeKit API\n  *\n  * @author Andy Lintner - Initial contribution\n  */\n-@Component(service = { Homekit.class }, configurationPid = \"org.openhab.homekit\", property = {\n+@Component(service = { Homekit.class }, configurationPid = HomekitSettings.CONFIG_PID, property = {\n         Constants.SERVICE_PID + \"=org.openhab.homekit\", \"port:Integer=9123\" })\n @ConfigurableService(category = \"io\", label = \"HomeKit Integration\", description_uri = \"io:homekit\")\n @NonNullByDefault\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n-    private final NetworkAddressService networkAddressService;\n-    private final HomekitChangeListener changeListener;\n \n-    private HomekitSettings settings;\n+    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n+    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+\n+    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n+    private @NonNullByDefault({}) HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private final HomekitAuthInfoImpl authInfo;\n+    private @NonNullByDefault({}) HomekitChangeListener changeListener;\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n \n     @Activate\n     public HomekitImpl(@Reference StorageService storageService, @Reference ItemRegistry itemRegistry,\n-            @Reference NetworkAddressService networkAddressService, Map<String, Object> config,\n-            @Reference MetadataRegistry metadataRegistry) throws IOException, InvalidAlgorithmParameterException {\n+            @Reference NetworkAddressService networkAddressService, @Reference MetadataRegistry metadataRegistry,\n+            @Reference ConfigurationAdmin configAdmin, Map<String, Object> properties) {\n         this.networkAddressService = networkAddressService;\n-        this.settings = processConfig(config);\n+        this.configAdmin = configAdmin;\n+        this.settings = processConfig(properties);\n         this.changeListener = new HomekitChangeListener(itemRegistry, settings, metadataRegistry, storageService);\n-        authInfo = new HomekitAuthInfoImpl(storageService.getStorage(HomekitAuthInfoImpl.STORAGE_KEY), settings.pin);\n-        startHomekitServer();\n+        try {\n+            authInfo = new HomekitAuthInfoImpl(storageService.getStorage(HomekitAuthInfoImpl.STORAGE_KEY), settings.pin,\n+                    settings.setupId);\n+            startHomekitServer();\n+        } catch (IOException | InvalidAlgorithmParameterException e) {\n+            logger.warn(\"Cannot activate HomeKit binding. {}\", e.getMessage());", "originalCommit": "9f902ffabc36da9164f4ead33b28a1a59698e0d3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5026c967fd57db9e0144d422de50ed2afdefcdf1", "chunk": "diff --git a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\nindex 48c5d41191..76f84a0371 100644\n--- a/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n+++ b/bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java\n\n@@ -61,15 +61,15 @@ import io.github.hapjava.server.impl.crypto.HAPSetupCodeUtils;\n public class HomekitImpl implements Homekit {\n     private final Logger logger = LoggerFactory.getLogger(HomekitImpl.class);\n \n-    private final @NonNullByDefault({}) NetworkAddressService networkAddressService;\n-    private final @NonNullByDefault({}) ConfigurationAdmin configAdmin;\n+    private final NetworkAddressService networkAddressService;\n+    private final ConfigurationAdmin configAdmin;\n \n-    private @NonNullByDefault({}) HomekitAuthInfoImpl authInfo;\n-    private @NonNullByDefault({}) HomekitSettings settings;\n+    private HomekitAuthInfoImpl authInfo;\n+    private HomekitSettings settings;\n     private @Nullable InetAddress networkInterface;\n     private @Nullable HomekitServer homekitServer;\n     private @Nullable HomekitRoot bridge;\n-    private @NonNullByDefault({}) HomekitChangeListener changeListener;\n+    private final HomekitChangeListener changeListener;\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n"}}, {"oid": "5026c967fd57db9e0144d422de50ed2afdefcdf1", "url": "https://github.com/openhab/openhab-addons/commit/5026c967fd57db9e0144d422de50ed2afdefcdf1", "message": "fix Nullable based on feedback\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-22T20:08:08Z", "type": "commit"}, {"oid": "c444ab777af1a2a000da45a0414e8d38c71949cf", "url": "https://github.com/openhab/openhab-addons/commit/c444ab777af1a2a000da45a0414e8d38c71949cf", "message": "correct the java hap version\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-28T20:11:43Z", "type": "commit"}, {"oid": "52e97d321e0d7958bba92e4ae0025f880e2c3f29", "url": "https://github.com/openhab/openhab-addons/commit/52e97d321e0d7958bba92e4ae0025f880e2c3f29", "message": "Update bundles/org.openhab.io.homekit/pom.xml", "committedDate": "2020-12-29T15:56:30Z", "type": "commit"}, {"oid": "c0f518358349259da75f3709a87b4be50a1da2de", "url": "https://github.com/openhab/openhab-addons/commit/c0f518358349259da75f3709a87b4be50a1da2de", "message": "adapt groupid\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2020-12-29T16:00:07Z", "type": "commit"}, {"oid": "a340a05c5ec8035dc31cd3f9500781c79f440d65", "url": "https://github.com/openhab/openhab-addons/commit/a340a05c5ec8035dc31cd3f9500781c79f440d65", "message": "Merge branch 'qrcode' of https://github.com/yfre/openhab-addons into qrcode", "committedDate": "2020-12-29T16:01:42Z", "type": "commit"}, {"oid": "b979cc057477d7feb3709e4751115dc51076200c", "url": "https://github.com/openhab/openhab-addons/commit/b979cc057477d7feb3709e4751115dc51076200c", "message": "incorporate review feedback\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>", "committedDate": "2021-01-07T08:42:53Z", "type": "commit"}]}