{"pr_number": 6786, "pr_title": "[Logreader] Changed FileTailer to use own executor service", "pr_createdAt": "2020-01-07T16:53:16Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/6786", "timeline": [{"oid": "001e077bc754523c46a0f7c8b1e5670704a3d1bd", "url": "https://github.com/openhab/openhab-addons/commit/001e077bc754523c46a0f7c8b1e5670704a3d1bd", "message": "[LogReader] Changed FileTailer to use own executor service\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>", "committedDate": "2020-01-07T16:44:51Z", "type": "commit"}, {"oid": "af7d0b9b56f9393af4eb0c6876e115ae7d573889", "url": "https://github.com/openhab/openhab-addons/commit/af7d0b9b56f9393af4eb0c6876e115ae7d573889", "message": "Fixed Markdown\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>", "committedDate": "2020-01-07T16:46:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTQ2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/6786#discussion_r363869465", "bodyText": "This threadpool is never shutdown so I expect if this class is removed it will still keep the threadpool maybe either simple start the thread itself or make sure the threadpool is shutdown when this class is removed. Probably on stop it can be this class is reused and then the executor can't be shutdown there.", "author": "Hilbrand", "createdAt": "2020-01-07T17:46:42Z", "path": "bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java", "diffHunk": "@@ -34,6 +35,7 @@\n     private final Logger logger = LoggerFactory.getLogger(FileTailer.class);\n \n     private Tailer tailer;\n+    private final ExecutorService executor = Executors.newFixedThreadPool(1);", "originalCommit": "af7d0b9b56f9393af4eb0c6876e115ae7d573889", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c890ebdc35f8c5411bc8b462eb25fab79df6f087", "chunk": "diff --git a/bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java b/bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java\nindex b1392240e3..b6d205259f 100644\n--- a/bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java\n+++ b/bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java\n\n@@ -35,7 +35,7 @@ public class FileTailer extends AbstractLogFileReader implements LogFileReader {\n     private final Logger logger = LoggerFactory.getLogger(FileTailer.class);\n \n     private Tailer tailer;\n-    private final ExecutorService executor = Executors.newFixedThreadPool(1);\n+    private ExecutorService executor;\n \n     TailerListener logListener = new TailerListenerAdapter() {\n \n"}}, {"oid": "c890ebdc35f8c5411bc8b462eb25fab79df6f087", "url": "https://github.com/openhab/openhab-addons/commit/c890ebdc35f8c5411bc8b462eb25fab79df6f087", "message": "Create and shutdown executor properly\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>", "committedDate": "2020-01-07T18:35:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjI3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/6786#discussion_r364122272", "bodyText": "Are you sure this is the correct fix? If a user changes configuration dispose will be called an then the stop method here. But this class is still be used. So when start is called again in initialize it will fail as the executor is shutdown. So I think it needs a bit more thought on what is the best approach here. Also there is a newSingleThreadPool you can use instead of the fixed with 1.", "author": "Hilbrand", "createdAt": "2020-01-08T08:58:31Z", "path": "bundles/org.openhab.binding.logreader/src/main/java/org/openhab/binding/logreader/internal/filereader/FileTailer.java", "diffHunk": "@@ -74,9 +76,12 @@ public void start(String filePath, long refreshRate, ScheduledExecutorService sc\n     @Override\n     public void stop() {\n         logger.debug(\"Shutdown\");\n-\n         if (tailer != null) {\n             tailer.stop();\n         }\n+        if (executor != null) {\n+            executor.shutdown();", "originalCommit": "c890ebdc35f8c5411bc8b462eb25fab79df6f087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4MDAxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/6786#discussion_r364180019", "bodyText": "Are you sure this is the correct fix? If a user changes configuration dispose will be called an then the stop method here. But this class is still be used. So when start is called again in initialize it will fail as the executor is shutdown.\n\nNew executor is generated during start.\n\nAlso there is a newSingleThreadPool you can use instead of the fixed with 1.\n\nI actually already used that, but it caused an issue so I rolled back. It gave an exception but can't remember anymore what.", "author": "paulianttila", "createdAt": "2020-01-08T11:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjI3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI3MzUwNA==", "url": "https://github.com/openhab/openhab-addons/pull/6786#discussion_r364273504", "bodyText": "@Hilbrand, of course It's also possible to provide dedicated executor from thing handler if you think that is a better solution?", "author": "paulianttila", "createdAt": "2020-01-08T14:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjI3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d4080ee1fc9d0981122a1fada5d639530c4297ab", "url": "https://github.com/openhab/openhab-addons/commit/d4080ee1fc9d0981122a1fada5d639530c4297ab", "message": "Use SingleThreadExecutor rather than FixedThreadPool(1)\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>", "committedDate": "2020-01-10T14:46:31Z", "type": "commit"}]}