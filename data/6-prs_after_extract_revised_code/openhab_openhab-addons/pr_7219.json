{"pr_number": 7219, "pr_title": "[Hue] Null-proof handling getAlertMode()", "pr_createdAt": "2020-03-24T21:09:24Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7219", "timeline": [{"oid": "b6a88c8d01eb635cbcba082d212f1552df247f5e", "url": "https://github.com/openhab/openhab-addons/commit/b6a88c8d01eb635cbcba082d212f1552df247f5e", "message": "Null-proof handling getAlertMode()\n\nFix NullPointerException on missing state attribute alert at deconz version 2.05.75\n\nSigned-off-by: Johannes Ott <info@johannes-ott.net>", "committedDate": "2020-03-24T21:12:26Z", "type": "commit"}, {"oid": "8c005ee513c98a9adc84a321b720d6c843d7f226", "url": "https://github.com/openhab/openhab-addons/commit/8c005ee513c98a9adc84a321b720d6c843d7f226", "message": "Null-proof handling getAlertMode() and calling stack\n\nFix NullPointerException on missing state attribute alert at deconz version 2.05.75\n\nSigned-off-by: Johannes Ott <info@johannes-ott.net>", "committedDate": "2020-03-26T19:24:05Z", "type": "commit"}, {"oid": "7bb0493ff8320dcd243b9f7574ce60389d7e8522", "url": "https://github.com/openhab/openhab-addons/commit/7bb0493ff8320dcd243b9f7574ce60389d7e8522", "message": "Merge branch '2.5.x' of https://github.com/DerOetzi/openhab-addons into 2.5.x\n\nSigned-off-by: Johannes Ott <info@johannes-ott.net>", "committedDate": "2020-03-26T19:25:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r398914166", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    AlertMode alertMode1 = state1.getAlertMode();\n          \n          \n            \n                    AlertMode alertMode2 = state2.getAlertMode();\n          \n          \n            \n            \n          \n          \n            \n                    return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))\n          \n          \n            \n                    return Objects.equals(state1.getAlertMode(), state2.getAlertMode())", "author": "cpmeister", "createdAt": "2020-03-26T21:50:15Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "diffHunk": "@@ -774,7 +775,11 @@ private void notifySensorStatusListeners(final FullSensor fullSensor, final Stri\n      * @return {@code true} if the available information of both states are equal.\n      */\n     private boolean isEqual(State state1, State state2) {\n-        return state1.getAlertMode().equals(state2.getAlertMode()) && state1.isOn() == state2.isOn()\n+        AlertMode alertMode1 = state1.getAlertMode();\n+        AlertMode alertMode2 = state2.getAlertMode();\n+\n+        return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))", "originalCommit": "7bb0493ff8320dcd243b9f7574ce60389d7e8522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNTkwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399125905", "bodyText": "This is a good point. I already thought about this and in my opinion it would be more Java-Standardconform to implement an equals method inside the state class and replace the calls of this isEqual(state1, state2) by state1.equals(state2)", "author": "DerOetzi", "createdAt": "2020-03-27T09:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzNDIyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399334221", "bodyText": "I have refactored the State class by adding the equals method. There is one change to previous isEqual method at HueBridgeHandler used before. The attribute float[] xy of State Class was not compared in isEqual() method and is now compared by equals method. As I think there is no affect because of this logic change, but perhaps someone of you can verify this.", "author": "DerOetzi", "createdAt": "2020-03-27T15:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8c71dac7bf2bf4d1bd8a84d586b544af8fb50915", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\nindex 5e5f98410f..fb91d47756 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\n\n@@ -767,26 +765,6 @@ public class HueBridgeHandler extends ConfigStatusBridgeHandler implements HueCl\n         }\n     }\n \n-    /**\n-     * Compare to states for equality.\n-     *\n-     * @param state1 Reference state\n-     * @param state2 State which is checked for equality.\n-     * @return {@code true} if the available information of both states are equal.\n-     */\n-    private boolean isEqual(State state1, State state2) {\n-        AlertMode alertMode1 = state1.getAlertMode();\n-        AlertMode alertMode2 = state2.getAlertMode();\n-\n-        return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))\n-                && state1.isOn() == state2.isOn()\n-                && state1.getBrightness() == state2.getBrightness()\n-                && state1.getColorTemperature() == state2.getColorTemperature() && state1.getHue() == state2.getHue()\n-                && state1.getSaturation() == state2.getSaturation() && state1.isReachable() == state2.isReachable()\n-                && Objects.equals(state1.getColorMode(), state2.getColorMode())\n-                && Objects.equals(state1.getEffect(), state2.getEffect());\n-    }\n-\n     @Override\n     public Collection<ConfigStatusMessage> getConfigStatus() {\n         // The bridge IP address to be used for checks\n"}}, {"oid": "8c71dac7bf2bf4d1bd8a84d586b544af8fb50915", "url": "https://github.com/openhab/openhab-addons/commit/8c71dac7bf2bf4d1bd8a84d586b544af8fb50915", "message": "Merge branch '2.5.x' of https://github.com/DerOetzi/openhab-addons into 2.5.x\n\nSigned-off-by: Johannes Ott <info@johannes-ott.net>\nSigned-off-by: Johannes DerOetzi Ott <info@johannes-ott.net>", "committedDate": "2020-03-27T14:59:46Z", "type": "commit"}, {"oid": "94550cb3399b21873ff78be618df683702ecef1a", "url": "https://github.com/openhab/openhab-addons/commit/94550cb3399b21873ff78be618df683702ecef1a", "message": "Refactored State.equals() method\n\nSigned-off-by: Johannes DerOetzi Ott <info@johannes-ott.net>", "committedDate": "2020-03-27T15:01:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399416502", "bodyText": "This javadoc isn't adding any new information, so please remove it.", "author": "cpmeister", "createdAt": "2020-03-27T17:10:20Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */", "originalCommit": "94550cb3399b21873ff78be618df683702ecef1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MTYxNA==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399461614", "bodyText": "Removed", "author": "DerOetzi", "createdAt": "2020-03-27T18:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjM4OA==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399462388", "bodyText": "Removed it", "author": "DerOetzi", "createdAt": "2020-03-27T18:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "ab0cba667b814ca263ba436ca2fe8a0881a6c173", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\nindex 86ba113d5d..a29c0f8314 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n\n@@ -190,11 +190,22 @@ public class State {\n         return reachable;\n     }\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see java.lang.Object#equals(java.lang.Object)\n-     */\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n \n     @Override\n     public boolean equals(Object obj) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMjc5OA==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399422798", "bodyText": "Java has a standard contract for equals/hashcode that two equal objects must have the same hashcode. So just generate a hashcode method for this class and I think we can call this PR done.", "author": "cpmeister", "createdAt": "2020-03-27T17:21:00Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */\n+\n+    @Override\n+    public boolean equals(Object obj) {", "originalCommit": "94550cb3399b21873ff78be618df683702ecef1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MDU4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399460586", "bodyText": "Added hashcode and removed Javadoc", "author": "DerOetzi", "createdAt": "2020-03-27T18:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMjc5OA=="}], "type": "inlineReview", "revised_code": {"commit": "ab0cba667b814ca263ba436ca2fe8a0881a6c173", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\nindex 86ba113d5d..a29c0f8314 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n\n@@ -190,11 +190,22 @@ public class State {\n         return reachable;\n     }\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see java.lang.Object#equals(java.lang.Object)\n-     */\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n \n     @Override\n     public boolean equals(Object obj) {\n"}}, {"oid": "ab0cba667b814ca263ba436ca2fe8a0881a6c173", "url": "https://github.com/openhab/openhab-addons/commit/ab0cba667b814ca263ba436ca2fe8a0881a6c173", "message": "Added hashCode() function for State.java\n\nSigned-off-by: Johannes DerOetzi Ott <info@johannes-ott.net>", "committedDate": "2020-03-27T18:22:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399462149", "bodyText": "One last thing, can you run this class through the formatter. It looks like the generated single-line if statements don't have brackets.", "author": "cpmeister", "createdAt": "2020-03-27T18:28:30Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,62 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "originalCommit": "ab0cba667b814ca263ba436ca2fe8a0881a6c173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3MTY1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399471654", "bodyText": "I have used the formatter settings in Visual Studio Code as described on openhab documentation. It doesn't add brackets automatically.", "author": "DerOetzi", "createdAt": "2020-03-27T18:46:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NTgzNw==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399475837", "bodyText": "I added the brackets manually, now.", "author": "DerOetzi", "createdAt": "2020-03-27T18:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjE5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399476195", "bodyText": "It doesn't? Strange, that means that the VSC formatter settings is different from the Eclipse one. The Eclipse one is the standard so looks like the VSC formatter needs to be changed.", "author": "cpmeister", "createdAt": "2020-03-27T18:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5b25d5a97b3c82efd29273a581d1cce8a5477741", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\nindex a29c0f8314..dafd8c183f 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java\n\n@@ -209,42 +209,58 @@ public class State {\n \n     @Override\n     public boolean equals(Object obj) {\n-        if (this == obj)\n+        if (this == obj) {\n             return true;\n-        if (obj == null)\n+        }\n+        if (obj == null) {\n             return false;\n-        if (getClass() != obj.getClass())\n+        }\n+        if (getClass() != obj.getClass()) {\n             return false;\n+        }\n         State other = (State) obj;\n         if (alert == null) {\n-            if (other.alert != null)\n+            if (other.alert != null) {\n                 return false;\n-        } else if (!alert.equals(other.alert))\n+            }\n+        } else if (!alert.equals(other.alert)) {\n             return false;\n-        if (bri != other.bri)\n+        }\n+        if (bri != other.bri) {\n             return false;\n+        }\n         if (colormode == null) {\n-            if (other.colormode != null)\n+            if (other.colormode != null) {\n                 return false;\n-        } else if (!colormode.equals(other.colormode))\n+            }\n+        } else if (!colormode.equals(other.colormode)) {\n             return false;\n-        if (ct != other.ct)\n+        }\n+        if (ct != other.ct) {\n             return false;\n+        }\n         if (effect == null) {\n-            if (other.effect != null)\n+            if (other.effect != null) {\n                 return false;\n-        } else if (!effect.equals(other.effect))\n+            }\n+        } else if (!effect.equals(other.effect)) {\n             return false;\n-        if (hue != other.hue)\n+        }\n+        if (hue != other.hue) {\n             return false;\n-        if (on != other.on)\n+        }\n+        if (on != other.on) {\n             return false;\n-        if (reachable != other.reachable)\n+        }\n+        if (reachable != other.reachable) {\n             return false;\n-        if (sat != other.sat)\n+        }\n+        if (sat != other.sat) {\n             return false;\n-        if (!Arrays.equals(xy, other.xy))\n+        }\n+        if (!Arrays.equals(xy, other.xy)) {\n             return false;\n+        }\n         return true;\n     }\n }\n"}}, {"oid": "5b25d5a97b3c82efd29273a581d1cce8a5477741", "url": "https://github.com/openhab/openhab-addons/commit/5b25d5a97b3c82efd29273a581d1cce8a5477741", "message": "Formatted compact if statements with brackets\n\nSigned-off-by: Johannes DerOetzi Ott <info@johannes-ott.net>", "committedDate": "2020-03-27T18:52:02Z", "type": "commit"}]}