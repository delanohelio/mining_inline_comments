{"pr_number": 9099, "pr_title": "[somfytahoma] code cleanup", "pr_createdAt": "2020-11-22T09:07:28Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9099", "timeline": [{"oid": "55f0e4d6b54e2a74847c024e089d959a672d9570", "url": "https://github.com/openhab/openhab-addons/commit/55f0e4d6b54e2a74847c024e089d959a672d9570", "message": "[somfytahoma] code cleanup\n\nSigned-off-by: Ondrej Pecta <opecta@gmail.com>", "committedDate": "2020-11-22T09:01:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MDc2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528580762", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return response != null ? new ArrayList<>(Arrays.asList(response)) : new ArrayList<>();\n          \n          \n            \n                    return response != null ? Arrays.asList(response)  : List.of();\n          \n      \n    \n    \n  \n\nor is it necessary to alter the array afterwards?\n(Also applies below).", "author": "J-N-K", "createdAt": "2020-11-23T09:52:49Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -234,71 +231,27 @@ private void setTooManyRequests() {\n     }\n \n     private @Nullable String registerEvents() {\n-        String url;\n+        SomfyTahomaRegisterEventsResponse response = invokeCallToURL(TAHOMA_EVENTS_URL + \"register\", \"\",\n+                HttpMethod.POST, SomfyTahomaRegisterEventsResponse.class);\n+        return response != null ? response.getId() : null;\n+    }\n \n+    private String urlEncode(String text) {\n         try {\n-            url = TAHOMA_EVENTS_URL + \"register\";\n-\n-            String line = sendPostToTahomaWithCookie(url, \"\");\n-            SomfyTahomaRegisterEventsResponse response = gson.fromJson(line, SomfyTahomaRegisterEventsResponse.class);\n-            return response.getId();\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received invalid data\", e);\n-            return null;\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-                return UNAUTHORIZED;\n-            } else {\n-                logger.info(\"Cannot register events!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.info(\"Cannot register events!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n+            return URLEncoder.encode(text, StandardCharsets.UTF_8.toString());\n+        } catch (UnsupportedEncodingException e) {\n+            return text;\n         }\n-        return null;\n-    }\n-\n-    private String urlEncode(String text) throws UnsupportedEncodingException {\n-        return URLEncoder.encode(text, StandardCharsets.UTF_8.toString());\n     }\n \n     private void enableLogin() {\n         tooManyRequests = false;\n     }\n \n     private List<SomfyTahomaEvent> getEvents() {\n-        String url;\n-        String line = \"\";\n-\n-        try {\n-            url = TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\";\n-\n-            line = sendPostToTahomaWithCookie(url, \"\");\n-            SomfyTahomaEvent[] array = gson.fromJson(line, SomfyTahomaEvent[].class);\n-            return new ArrayList<>(Arrays.asList(array));\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", line, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-            } else {\n-                logger.debug(\"Cannot get Tahoma events!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot get Tahoma events!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return new ArrayList<>();\n+        SomfyTahomaEvent[] response = invokeCallToURL(TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\", \"\",\n+                HttpMethod.POST, SomfyTahomaEvent[].class);\n+        return response != null ? new ArrayList<>(Arrays.asList(response)) : new ArrayList<>();", "originalCommit": "55f0e4d6b54e2a74847c024e089d959a672d9570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwNTg4OA==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528605888", "bodyText": "Fixed.", "author": "octa22", "createdAt": "2020-11-23T10:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MDc2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex b03c78d17b..96497b88d0 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -251,7 +251,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     private List<SomfyTahomaEvent> getEvents() {\n         SomfyTahomaEvent[] response = invokeCallToURL(TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\", \"\",\n                 HttpMethod.POST, SomfyTahomaEvent[].class);\n-        return response != null ? new ArrayList<>(Arrays.asList(response)) : new ArrayList<>();\n+        return response != null ? new ArrayList<>(List.of(response)) : List.of();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MTE0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528581145", "bodyText": "This is a change from the behaviour before. Is that intended? Before the thing changed to OFFLINE in case of an encoding error.", "author": "J-N-K", "createdAt": "2020-11-23T09:53:28Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -234,71 +231,27 @@ private void setTooManyRequests() {\n     }\n \n     private @Nullable String registerEvents() {\n-        String url;\n+        SomfyTahomaRegisterEventsResponse response = invokeCallToURL(TAHOMA_EVENTS_URL + \"register\", \"\",\n+                HttpMethod.POST, SomfyTahomaRegisterEventsResponse.class);\n+        return response != null ? response.getId() : null;\n+    }\n \n+    private String urlEncode(String text) {\n         try {\n-            url = TAHOMA_EVENTS_URL + \"register\";\n-\n-            String line = sendPostToTahomaWithCookie(url, \"\");\n-            SomfyTahomaRegisterEventsResponse response = gson.fromJson(line, SomfyTahomaRegisterEventsResponse.class);\n-            return response.getId();\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received invalid data\", e);\n-            return null;\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-                return UNAUTHORIZED;\n-            } else {\n-                logger.info(\"Cannot register events!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.info(\"Cannot register events!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n+            return URLEncoder.encode(text, StandardCharsets.UTF_8.toString());\n+        } catch (UnsupportedEncodingException e) {\n+            return text;", "originalCommit": "55f0e4d6b54e2a74847c024e089d959a672d9570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxODQyNA==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528618424", "bodyText": "yes, this is intended. From my point of view there is no need to put thing OFFLINE, rather return unencoded string", "author": "octa22", "createdAt": "2020-11-23T10:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MTE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex b03c78d17b..96497b88d0 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -251,7 +251,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     private List<SomfyTahomaEvent> getEvents() {\n         SomfyTahomaEvent[] response = invokeCallToURL(TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\", \"\",\n                 HttpMethod.POST, SomfyTahomaEvent[].class);\n-        return response != null ? new ArrayList<>(Arrays.asList(response)) : new ArrayList<>();\n+        return response != null ? new ArrayList<>(List.of(response)) : List.of();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4NTI2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528585265", "bodyText": "StringUtils should not be used in new code. In this case you can just use state.getName().isEmpty() since getName() is non-null.", "author": "J-N-K", "createdAt": "2020-11-23T09:59:45Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -913,28 +676,48 @@ public void handleConfigurationUpdate(Map<String, Object> configurationParameter\n     }\n \n     public synchronized void refresh(String url, String stateName) {\n+        SomfyTahomaState state = invokeCallToURL(DEVICES_URL + urlEncode(url) + \"/states/\" + stateName, \"\",\n+                HttpMethod.GET, SomfyTahomaState.class);\n+        if (state != null && StringUtils.isNotEmpty(state.getName())) {", "originalCommit": "55f0e4d6b54e2a74847c024e089d959a672d9570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODMwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528608305", "bodyText": "ok, fixed", "author": "octa22", "createdAt": "2020-11-23T10:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4NTI2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex b03c78d17b..96497b88d0 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -678,8 +678,8 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     public synchronized void refresh(String url, String stateName) {\n         SomfyTahomaState state = invokeCallToURL(DEVICES_URL + urlEncode(url) + \"/states/\" + stateName, \"\",\n                 HttpMethod.GET, SomfyTahomaState.class);\n-        if (state != null && StringUtils.isNotEmpty(state.getName())) {\n-            updateDevice(url, Arrays.asList(state));\n+        if (state != null && !state.getName().isEmpty()) {\n+            updateDevice(url, List.of(state));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4NTU3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528585575", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        updateDevice(url, Arrays.asList(state));\n          \n          \n            \n                        updateDevice(url, List.of(state));", "author": "J-N-K", "createdAt": "2020-11-23T10:00:10Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -913,28 +676,48 @@ public void handleConfigurationUpdate(Map<String, Object> configurationParameter\n     }\n \n     public synchronized void refresh(String url, String stateName) {\n+        SomfyTahomaState state = invokeCallToURL(DEVICES_URL + urlEncode(url) + \"/states/\" + stateName, \"\",\n+                HttpMethod.GET, SomfyTahomaState.class);\n+        if (state != null && StringUtils.isNotEmpty(state.getName())) {\n+            updateDevice(url, Arrays.asList(state));", "originalCommit": "55f0e4d6b54e2a74847c024e089d959a672d9570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODQ2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528608469", "bodyText": "Fixed", "author": "octa22", "createdAt": "2020-11-23T10:38:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4NTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex b03c78d17b..96497b88d0 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -678,8 +678,8 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     public synchronized void refresh(String url, String stateName) {\n         SomfyTahomaState state = invokeCallToURL(DEVICES_URL + urlEncode(url) + \"/states/\" + stateName, \"\",\n                 HttpMethod.GET, SomfyTahomaState.class);\n-        if (state != null && StringUtils.isNotEmpty(state.getName())) {\n-            updateDevice(url, Arrays.asList(state));\n+        if (state != null && !state.getName().isEmpty()) {\n+            updateDevice(url, List.of(state));\n         }\n     }\n \n"}}, {"oid": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "url": "https://github.com/openhab/openhab-addons/commit/03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "message": "[somfytahoma] implemented code review suggestions\n\nSigned-off-by: Ondrej Pecta <opecta@gmail.com>", "committedDate": "2020-11-23T11:14:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMDExMg==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528710112", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return response != null ? Arrays.asList(response) : Collections.emptyList();\n          \n          \n            \n                    return response != null ? List.of(response) : List.of();", "author": "J-N-K", "createdAt": "2020-11-23T13:40:59Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -356,103 +309,19 @@ private void stopPolling() {\n     }\n \n     public List<SomfyTahomaActionGroup> listActionGroups() {\n-        String groups = getGroups();\n-        if (StringUtils.equals(groups, UNAUTHORIZED)) {\n-            groups = getGroups();\n-        }\n-\n-        if (groups == null || groups.equals(UNAUTHORIZED)) {\n-            return Collections.emptyList();\n-        }\n-\n-        try {\n-            SomfyTahomaActionGroup[] list = gson.fromJson(groups, SomfyTahomaActionGroup[].class);\n-            return Arrays.asList(list);\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", groups, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        }\n-        return new ArrayList<>();\n-    }\n-\n-    private @Nullable String getGroups() {\n-        String url;\n-\n-        try {\n-            url = TAHOMA_API_URL + \"actionGroups\";\n-            return sendGetToTahomaWithCookie(url);\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-                return UNAUTHORIZED;\n-            } else {\n-                logger.debug(\"Cannot send getActionGroups command!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot send getActionGroups command!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return null;\n+        SomfyTahomaActionGroup[] list = invokeCallToURL(TAHOMA_API_URL + \"actionGroups\", \"\", HttpMethod.GET,\n+                SomfyTahomaActionGroup[].class);\n+        return list != null ? Arrays.asList(list) : new ArrayList<>();\n     }\n \n     public @Nullable SomfyTahomaSetup getSetup() {\n-        String url;\n-        String line = \"\";\n-\n-        try {\n-            url = TAHOMA_API_URL + \"setup\";\n-            line = sendGetToTahomaWithCookie(url);\n-            return gson.fromJson(line, SomfyTahomaSetup.class);\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", line, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-            } else {\n-                logger.debug(\"Cannot send getSetup command!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot send getSetup command!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return null;\n+        return invokeCallToURL(TAHOMA_API_URL + \"setup\", \"\", HttpMethod.GET, SomfyTahomaSetup.class);\n     }\n \n     public List<SomfyTahomaDevice> getDevices() {\n-        String url;\n-        String line = \"\";\n-\n-        try {\n-            url = SETUP_URL + \"devices\";\n-            line = sendGetToTahomaWithCookie(url);\n-            return Arrays.asList(gson.fromJson(line, SomfyTahomaDevice[].class));\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", line, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-            } else {\n-                logger.debug(\"Cannot send get devices command!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot send get devices command!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return Collections.emptyList();\n+        SomfyTahomaDevice[] response = invokeCallToURL(SETUP_URL + \"devices\", \"\", HttpMethod.GET,\n+                SomfyTahomaDevice[].class);\n+        return response != null ? Arrays.asList(response) : Collections.emptyList();", "originalCommit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a19feb5df21b09559a3f875cec54410792b1641", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex 96497b88d0..6273853808 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -321,7 +321,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     public List<SomfyTahomaDevice> getDevices() {\n         SomfyTahomaDevice[] response = invokeCallToURL(SETUP_URL + \"devices\", \"\", HttpMethod.GET,\n                 SomfyTahomaDevice[].class);\n-        return response != null ? Arrays.asList(response) : Collections.emptyList();\n+        return response != null ? List.of(response) : List.of();\n     }\n \n     private void getTahomaUpdates() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMDYwNA==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528710604", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return response != null ? new ArrayList<>(List.of(response)) : List.of();\n          \n          \n            \n                    return response != null ? List.of(response) : List.of();", "author": "J-N-K", "createdAt": "2020-11-23T13:41:44Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -234,71 +231,27 @@ private void setTooManyRequests() {\n     }\n \n     private @Nullable String registerEvents() {\n-        String url;\n+        SomfyTahomaRegisterEventsResponse response = invokeCallToURL(TAHOMA_EVENTS_URL + \"register\", \"\",\n+                HttpMethod.POST, SomfyTahomaRegisterEventsResponse.class);\n+        return response != null ? response.getId() : null;\n+    }\n \n+    private String urlEncode(String text) {\n         try {\n-            url = TAHOMA_EVENTS_URL + \"register\";\n-\n-            String line = sendPostToTahomaWithCookie(url, \"\");\n-            SomfyTahomaRegisterEventsResponse response = gson.fromJson(line, SomfyTahomaRegisterEventsResponse.class);\n-            return response.getId();\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received invalid data\", e);\n-            return null;\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-                return UNAUTHORIZED;\n-            } else {\n-                logger.info(\"Cannot register events!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.info(\"Cannot register events!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n+            return URLEncoder.encode(text, StandardCharsets.UTF_8.toString());\n+        } catch (UnsupportedEncodingException e) {\n+            return text;\n         }\n-        return null;\n-    }\n-\n-    private String urlEncode(String text) throws UnsupportedEncodingException {\n-        return URLEncoder.encode(text, StandardCharsets.UTF_8.toString());\n     }\n \n     private void enableLogin() {\n         tooManyRequests = false;\n     }\n \n     private List<SomfyTahomaEvent> getEvents() {\n-        String url;\n-        String line = \"\";\n-\n-        try {\n-            url = TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\";\n-\n-            line = sendPostToTahomaWithCookie(url, \"\");\n-            SomfyTahomaEvent[] array = gson.fromJson(line, SomfyTahomaEvent[].class);\n-            return new ArrayList<>(Arrays.asList(array));\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", line, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-            } else {\n-                logger.debug(\"Cannot get Tahoma events!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot get Tahoma events!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return new ArrayList<>();\n+        SomfyTahomaEvent[] response = invokeCallToURL(TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\", \"\",\n+                HttpMethod.POST, SomfyTahomaEvent[].class);\n+        return response != null ? new ArrayList<>(List.of(response)) : List.of();", "originalCommit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e98568b1cf3ae9add7da0a2df7856a4ac159403", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex 96497b88d0..95e6364904 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -251,7 +251,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     private List<SomfyTahomaEvent> getEvents() {\n         SomfyTahomaEvent[] response = invokeCallToURL(TAHOMA_API_URL + \"events/\" + eventsId + \"/fetch\", \"\",\n                 HttpMethod.POST, SomfyTahomaEvent[].class);\n-        return response != null ? new ArrayList<>(List.of(response)) : List.of();\n+        return response != null ? List.of(response) : List.of();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMDg4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528710886", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return list != null ? Arrays.asList(list) : new ArrayList<>();\n          \n          \n            \n                    return list != null ? List.of(list) : List.of();", "author": "J-N-K", "createdAt": "2020-11-23T13:42:10Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -356,103 +309,19 @@ private void stopPolling() {\n     }\n \n     public List<SomfyTahomaActionGroup> listActionGroups() {\n-        String groups = getGroups();\n-        if (StringUtils.equals(groups, UNAUTHORIZED)) {\n-            groups = getGroups();\n-        }\n-\n-        if (groups == null || groups.equals(UNAUTHORIZED)) {\n-            return Collections.emptyList();\n-        }\n-\n-        try {\n-            SomfyTahomaActionGroup[] list = gson.fromJson(groups, SomfyTahomaActionGroup[].class);\n-            return Arrays.asList(list);\n-        } catch (JsonSyntaxException e) {\n-            logger.debug(\"Received data: {} is not JSON\", groups, e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Received invalid data\");\n-        }\n-        return new ArrayList<>();\n-    }\n-\n-    private @Nullable String getGroups() {\n-        String url;\n-\n-        try {\n-            url = TAHOMA_API_URL + \"actionGroups\";\n-            return sendGetToTahomaWithCookie(url);\n-        } catch (ExecutionException e) {\n-            if (isAuthenticationChallenge(e)) {\n-                reLogin();\n-                return UNAUTHORIZED;\n-            } else {\n-                logger.debug(\"Cannot send getActionGroups command!\", e);\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            }\n-        } catch (InterruptedException | TimeoutException e) {\n-            logger.debug(\"Cannot send getActionGroups command!\", e);\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n-            if (e instanceof InterruptedException) {\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-        return null;\n+        SomfyTahomaActionGroup[] list = invokeCallToURL(TAHOMA_API_URL + \"actionGroups\", \"\", HttpMethod.GET,\n+                SomfyTahomaActionGroup[].class);\n+        return list != null ? Arrays.asList(list) : new ArrayList<>();", "originalCommit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a19feb5df21b09559a3f875cec54410792b1641", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex 96497b88d0..6273853808 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -321,7 +321,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n     public List<SomfyTahomaDevice> getDevices() {\n         SomfyTahomaDevice[] response = invokeCallToURL(SETUP_URL + \"devices\", \"\", HttpMethod.GET,\n                 SomfyTahomaDevice[].class);\n-        return response != null ? Arrays.asList(response) : Collections.emptyList();\n+        return response != null ? List.of(response) : List.of();\n     }\n \n     private void getTahomaUpdates() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMTg4Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9099#discussion_r528711882", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!StringUtils.isEmpty(response.getExecId())) {\n          \n          \n            \n                        if (!response.getExecId().isEmpty()) {", "author": "J-N-K", "createdAt": "2020-11-23T13:43:45Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java", "diffHunk": "@@ -693,54 +562,29 @@ public void sendCommand(String io, String command, String params) {\n         }\n \n         Boolean result = sendCommandInternal(io, command, params);\n-        if (result != null && !result) {\n+        if (!result) {\n             sendCommandInternal(io, command, params);\n         }\n     }\n \n-    private @Nullable Boolean sendCommandInternal(String io, String command, String params) {\n-        String url;\n-        String line = \"\";\n-\n-        try {\n-            url = EXEC_URL + \"apply\";\n-\n-            String value = params.equals(\"[]\") ? command : params.replace(\"\\\"\", \"\");\n-            String urlParameters = \"{\\\"label\\\":\\\"\" + getThingLabelByURL(io) + \" - \" + value\n-                    + \" - OH2\\\",\\\"actions\\\":[{\\\"deviceURL\\\":\\\"\" + io + \"\\\",\\\"commands\\\":[{\\\"name\\\":\\\"\" + command\n-                    + \"\\\",\\\"parameters\\\":\" + params + \"}]}]}\";\n-\n-            line = sendPostToTahomaWithCookie(url, urlParameters);\n-\n-            SomfyTahomaApplyResponse data = gson.fromJson(line, SomfyTahomaApplyResponse.class);\n-\n-            if (!StringUtils.isEmpty(data.getExecId())) {\n-                logger.debug(\"Exec id: {}\", data.getExecId());\n-                registerExecution(io, data.getExecId());\n+    private Boolean sendCommandInternal(String io, String command, String params) {\n+        String value = params.equals(\"[]\") ? command : params.replace(\"\\\"\", \"\");\n+        String urlParameters = \"{\\\"label\\\":\\\"\" + getThingLabelByURL(io) + \" - \" + value\n+                + \" - OH2\\\",\\\"actions\\\":[{\\\"deviceURL\\\":\\\"\" + io + \"\\\",\\\"commands\\\":[{\\\"name\\\":\\\"\" + command\n+                + \"\\\",\\\"parameters\\\":\" + params + \"}]}]}\";\n+        SomfyTahomaApplyResponse response = invokeCallToURL(EXEC_URL + \"apply\", urlParameters, HttpMethod.POST,\n+                SomfyTahomaApplyResponse.class);\n+        if (response != null) {\n+            if (!StringUtils.isEmpty(response.getExecId())) {", "originalCommit": "03d34f3ffdfe2d53846047abd751a7e46fd2c86f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e1be98783abe23a93dbdb48fe6390f9fa81a0399", "chunk": "diff --git a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\nindex 96497b88d0..cee8000bff 100644\n--- a/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n+++ b/bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\n@@ -575,7 +575,7 @@ public class SomfyTahomaBridgeHandler extends BaseBridgeHandler {\n         SomfyTahomaApplyResponse response = invokeCallToURL(EXEC_URL + \"apply\", urlParameters, HttpMethod.POST,\n                 SomfyTahomaApplyResponse.class);\n         if (response != null) {\n-            if (!StringUtils.isEmpty(response.getExecId())) {\n+            if (!response.getExecId().isEmpty()) {\n                 logger.debug(\"Exec id: {}\", response.getExecId());\n                 registerExecution(io, response.getExecId());\n             } else {\n"}}, {"oid": "0a19feb5df21b09559a3f875cec54410792b1641", "url": "https://github.com/openhab/openhab-addons/commit/0a19feb5df21b09559a3f875cec54410792b1641", "message": "Update bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\nCo-authored-by: J-N-K <J-N-K@users.noreply.github.com>", "committedDate": "2020-11-23T14:25:16Z", "type": "commit"}, {"oid": "3e98568b1cf3ae9add7da0a2df7856a4ac159403", "url": "https://github.com/openhab/openhab-addons/commit/3e98568b1cf3ae9add7da0a2df7856a4ac159403", "message": "Update bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\nCo-authored-by: J-N-K <J-N-K@users.noreply.github.com>", "committedDate": "2020-11-23T14:25:39Z", "type": "commit"}, {"oid": "bf4e53769f9ae699cbc097623533f321ba13dfd0", "url": "https://github.com/openhab/openhab-addons/commit/bf4e53769f9ae699cbc097623533f321ba13dfd0", "message": "Update bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\nCo-authored-by: J-N-K <J-N-K@users.noreply.github.com>", "committedDate": "2020-11-23T14:25:47Z", "type": "commit"}, {"oid": "e1be98783abe23a93dbdb48fe6390f9fa81a0399", "url": "https://github.com/openhab/openhab-addons/commit/e1be98783abe23a93dbdb48fe6390f9fa81a0399", "message": "Update bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/handler/SomfyTahomaBridgeHandler.java\n\nCo-authored-by: J-N-K <J-N-K@users.noreply.github.com>", "committedDate": "2020-11-23T14:26:08Z", "type": "commit"}]}