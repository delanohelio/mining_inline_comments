{"pr_number": 8098, "pr_title": "[hue] Add support for hue scene activation", "pr_createdAt": "2020-07-09T22:05:48Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8098", "timeline": [{"oid": "0b8b65d21d36438a9d27a1c399b4a6c975f6a1de", "url": "https://github.com/openhab/openhab-addons/commit/0b8b65d21d36438a9d27a1c399b4a6c975f6a1de", "message": "[hue] Add support for hue scene activation\n\nCloses #6043\n\nThis is the continuation of the PR #7540\n\n95% of credits go to leluna\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>\nAlso-by: leluna <hengrui.jiang@googlemail.com>", "committedDate": "2020-07-09T21:56:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjAxMA==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453362010", "bodyText": "To deal with the @NonNullByDefault warnings you can do one of three things:\n\nAdd the @NonNullByDefault to the class.\nMake sure that your class name ends in DTO\nMake sure that your class is in a package or subpackage called dto.\n\nPlease do one of the three.", "author": "cpmeister", "createdAt": "2020-07-12T20:50:19Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/Scene.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hue.internal;\n+\n+import java.lang.reflect.Type;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.eclipse.smarthome.core.types.StateOption;\n+\n+import com.google.gson.annotations.SerializedName;\n+import com.google.gson.reflect.TypeToken;\n+\n+/**\n+ * Basic scene information.\n+ *\n+ * @author Hengrui Jiang - Initial contribution\n+ */\n+public class Scene {", "originalCommit": "0b8b65d21d36438a9d27a1c399b4a6c975f6a1de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0NjQzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453446430", "bodyText": "This class is used to map the result of a hue API JSON result. That's why it does not have @NonNullByDefault like all other classes of this kind in this binding (and most of other bindings).", "author": "lolodomo", "createdAt": "2020-07-13T05:44:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3NDE0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453474144", "bodyText": "I finally added @NonNullByDefault.", "author": "lolodomo", "createdAt": "2020-07-13T08:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjAxMA=="}], "type": "inlineReview", "revised_code": {"commit": "f545fde496190de0fed869c4e028dfe4cdaae4a2", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/Scene.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/Scene.java\nindex e5ad86c773..851efe66a9 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/Scene.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/Scene.java\n\n@@ -143,8 +143,7 @@ public class Scene {\n      */\n     public boolean isApplicableTo(FullGroup group) {\n         if (getGroupId() == null) {\n-            return getLightIds().parallelStream()//\n-                    .allMatch(id -> group.getLightIds().contains(id));\n+            return getLightIds().stream().allMatch(id -> group.getLightIds().contains(id));\n         } else {\n             return group.getId().contentEquals(getGroupId());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjQwMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453362401", "bodyText": "Why are you using parallelStream here? How large is the scene list expected to be? If it is less than 100 then just use a regular stream instead.", "author": "cpmeister", "createdAt": "2020-07-12T20:54:47Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueGroupHandler.java", "diffHunk": "@@ -397,6 +418,33 @@ public void onGroupGone() {\n         updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.GONE, \"@text/offline.group-removed\");\n     }\n \n+    /**\n+     * Sets the state options for applicable scenes.\n+     */\n+    @Override\n+    public void onScenesUpdated(List<Scene> updatedScenes) {\n+        List<StateOption> stateOptions = Collections.emptyList();\n+        consoleScenesList = new ArrayList<>();\n+        HueClient handler = getHueClient();\n+        if (handler != null) {\n+            FullGroup group = handler.getGroupById(groupId);\n+            if (group != null) {\n+                stateOptions = updatedScenes.parallelStream()//", "originalCommit": "0b8b65d21d36438a9d27a1c399b4a6c975f6a1de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0NTM3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453445375", "bodyText": "It was @leluna initial choice.\nYes, I think it will be generally less than 100, except if you have defined a very big number of rooms in your home or you created a lot of hue scenes.", "author": "lolodomo", "createdAt": "2020-07-13T05:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3NDIyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453474226", "bodyText": "Done", "author": "lolodomo", "createdAt": "2020-07-13T08:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjQwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f545fde496190de0fed869c4e028dfe4cdaae4a2", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueGroupHandler.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueGroupHandler.java\nindex 0cb6fee5a5..d90a1cc6bc 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueGroupHandler.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueGroupHandler.java\n\n@@ -429,15 +429,11 @@ public class HueGroupHandler extends BaseThingHandler implements GroupStatusList\n         if (handler != null) {\n             FullGroup group = handler.getGroupById(groupId);\n             if (group != null) {\n-                stateOptions = updatedScenes.parallelStream()//\n-                        .filter(scene -> scene.isApplicableTo(group))//\n-                        .map(Scene::toStateOption)//\n-                        .collect(Collectors.toList());\n-\n-                consoleScenesList = updatedScenes.parallelStream()//\n-                        .filter(scene -> scene.isApplicableTo(group))//\n-                        .map(scene -> \"Id is \\\"\" + scene.getId() + \"\\\" for scene \\\"\" + scene.toStateOption().getLabel()\n-                                + \"\\\"\")//\n+                stateOptions = updatedScenes.stream().filter(scene -> scene.isApplicableTo(group))\n+                        .map(Scene::toStateOption).collect(Collectors.toList());\n+                consoleScenesList = updatedScenes\n+                        .stream().filter(scene -> scene.isApplicableTo(group)).map(scene -> \"Id is \\\"\" + scene.getId()\n+                                + \"\\\" for scene \\\"\" + scene.toStateOption().getLabel() + \"\\\"\")\n                         .collect(Collectors.toList());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2Mjg0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453362847", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            initJob = scheduler.schedule(new PollingRunnable() {\n          \n          \n            \n                                @Override\n          \n          \n            \n                                protected void doConnectedRun() throws IOException, ApiException {\n          \n          \n            \n                                }\n          \n          \n            \n                            }, 0, TimeUnit.SECONDS);\n          \n          \n            \n                            initJob = scheduler.submit(new PollingRunnable() {\n          \n          \n            \n                                @Override\n          \n          \n            \n                                protected void doConnectedRun() throws IOException, ApiException {\n          \n          \n            \n                                }\n          \n          \n            \n                            });", "author": "cpmeister", "createdAt": "2020-07-12T20:59:53Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "diffHunk": "@@ -634,6 +683,15 @@ public void initialize() {\n             if (hueBridge == null) {\n                 hueBridge = new HueBridge(ip, hueBridgeConfig.getPort(), hueBridgeConfig.getProtocol(), scheduler);\n                 hueBridge.setTimeout(5000);\n+\n+                // Try a first connection that will fail, then try to authenticate,\n+                // and finally change the bridge status to ONLINE\n+                initJob = scheduler.schedule(new PollingRunnable() {\n+                    @Override\n+                    protected void doConnectedRun() throws IOException, ApiException {\n+                    }\n+                }, 0, TimeUnit.SECONDS);", "originalCommit": "0b8b65d21d36438a9d27a1c399b4a6c975f6a1de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2NDgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8098#discussion_r453464828", "bodyText": "Done", "author": "lolodomo", "createdAt": "2020-07-13T06:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2Mjg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "110bb73f7507e6013bac9ec1955776abe3876f84", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\nindex 28c24fa455..3e4f1bab24 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java\n\n@@ -686,12 +687,11 @@ public class HueBridgeHandler extends ConfigStatusBridgeHandler implements HueCl\n \n                 // Try a first connection that will fail, then try to authenticate,\n                 // and finally change the bridge status to ONLINE\n-                initJob = scheduler.schedule(new PollingRunnable() {\n+                initJob = scheduler.submit(new PollingRunnable() {\n                     @Override\n                     protected void doConnectedRun() throws IOException, ApiException {\n                     }\n-                }, 0, TimeUnit.SECONDS);\n-\n+                });\n             }\n             onUpdate();\n         }\n"}}, {"oid": "110bb73f7507e6013bac9ec1955776abe3876f84", "url": "https://github.com/openhab/openhab-addons/commit/110bb73f7507e6013bac9ec1955776abe3876f84", "message": "Use scheduler.submit rather than scheduler.schedule with 0 delay\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-13T06:44:49Z", "type": "commit"}, {"oid": "f545fde496190de0fed869c4e028dfe4cdaae4a2", "url": "https://github.com/openhab/openhab-addons/commit/f545fde496190de0fed869c4e028dfe4cdaae4a2", "message": "Replace parallelStream() by stream() while the number of items is not soo big\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-13T07:03:11Z", "type": "commit"}, {"oid": "6075ea1d4e2f692a6d261ff5e608b9f5c5b16ddf", "url": "https://github.com/openhab/openhab-addons/commit/6075ea1d4e2f692a6d261ff5e608b9f5c5b16ddf", "message": "Null annotations added to the Scene class\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-13T08:07:49Z", "type": "commit"}]}