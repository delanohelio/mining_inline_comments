{"pr_number": 7354, "pr_title": "Replaced deprecated constructors and methods from Thing API", "pr_createdAt": "2020-04-13T11:00:58Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7354", "timeline": [{"oid": "fc3d929a7dd36d8ad31ccafaad52abe67060b098", "url": "https://github.com/openhab/openhab-addons/commit/fc3d929a7dd36d8ad31ccafaad52abe67060b098", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T11:02:07Z", "type": "forcePushed"}, {"oid": "2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "url": "https://github.com/openhab/openhab-addons/commit/2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:46:33Z", "type": "commit"}, {"oid": "2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "url": "https://github.com/openhab/openhab-addons/commit/2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:46:33Z", "type": "forcePushed"}, {"oid": "f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "url": "https://github.com/openhab/openhab-addons/commit/f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "message": "Implement ChannelGroupTypeProvider interface in addition to ChannelTypeProvider interface\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:51:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0OTc5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407549797", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,\n          \n          \n            \n                                            channelUID, root, CoreItemFactory.STRING, null, \"Error message\", \"Text\", true, false,", "author": "cpmeister", "createdAt": "2020-04-13T15:49:39Z", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -404,14 +431,17 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n \n                 case \"errorList\":\n                     if (\"nbrErrors\".equals(subKey) || \"error\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%.0f \", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%.0f\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"Number\", null, subKey, subKey, true, false, state, unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, subKey, subKey, true, false, state,\n+                                unitOfMeasure);\n                     } else if (\"errorString\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%s\", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%s\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"String\", null, \"Error message\", \"Text\", true, false, state,\n-                                unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,", "originalCommit": "f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "chunk": "diff --git a/bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java b/bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java\nindex 5b110b3aaa..eff0b31137 100644\n--- a/bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java\n+++ b/bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java\n\n@@ -440,7 +440,7 @@ public class KM200ThingHandler extends BaseThingHandler {\n                         state = StateDescriptionFragmentBuilder.create().withPattern(\"%s\").withReadOnly(readOnly)\n                                 .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,\n+                                channelUID, root, CoreItemFactory.STRING, null, \"Error message\", \"Text\", true, false,\n                                 state, unitOfMeasure);\n                     }\n                     break;\n"}}, {"oid": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "url": "https://github.com/openhab/openhab-addons/commit/f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "message": "Update bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java\n\nCo-Authored-By: cpmeister <mistercpp2000@gmail.com>", "committedDate": "2020-04-13T16:16:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407586139", "bodyText": "This class doesn't have a @NonNullByDefault so are you sure that removing @NonNull here is safe?", "author": "cpmeister", "createdAt": "2020-04-13T16:56:07Z", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -324,7 +335,7 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n             switch (subKeyType) {\n                 case \"stringValue\":\n                     /* Creating an new channel type with capabilities from service */\n-                    List<@NonNull StateOption> options = null;", "originalCommit": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NTMxNg==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407595316", "bodyText": "Yes, I am. But it should not be to hard to add it on class level if you prefer.", "author": "cweitkamp", "createdAt": "2020-04-13T17:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NzQzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407667433", "bodyText": "Might as well", "author": "cpmeister", "createdAt": "2020-04-13T19:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}], "type": "inlineReview", "revised_code": null}]}