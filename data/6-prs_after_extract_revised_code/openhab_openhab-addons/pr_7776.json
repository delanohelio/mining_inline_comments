{"pr_number": 7776, "pr_title": "[keba] Don't use selector if it has been closed", "pr_createdAt": "2020-05-24T15:18:41Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7776", "timeline": [{"oid": "0ff2a17f4a8cd3c9d4bf190875718e821fb80c6e", "url": "https://github.com/openhab/openhab-addons/commit/0ff2a17f4a8cd3c9d4bf190875718e821fb80c6e", "message": "don't use selector if it has been closed\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-05-24T15:17:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5Mjc3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7776#discussion_r429692775", "bodyText": "As far as I can tell ClosedSelectorException could be thrown from any of the selector operations and since the selector is closed from another thread it could be closed on this thread at any time. I don't think that simply checking if it is open at this point is sufficient to prevent ClosedSelectorException from getting thrown.\nI think the easiest way to deal with this error is to just catch the ClosedSelectorException.\nBut a more proper way to prevent this error from getting thrown is to make the transceiverThread responsible for opening and closing the selector and to add logic to allow outside threads to instruct the transceiverThread to close the selector on its own accord.\nI'm ok with either solution but I think the first one is better because there are fewer things that can go wrong with it.", "author": "cpmeister", "createdAt": "2020-05-25T00:41:08Z", "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java", "diffHunk": "@@ -219,6 +219,9 @@ protected ByteBuffer send(String message, KeContactHandler handler) {\n         while (true) {\n             try {\n                 synchronized (selector) {\n+                    if (!selector.isOpen()) {\n+                        return;\n+                    }", "originalCommit": "0ff2a17f4a8cd3c9d4bf190875718e821fb80c6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzOTI5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7776#discussion_r430039291", "bodyText": "Thanks @cpmeister, this makes a lot of sense indeed. I have updated the PR accordingly.", "author": "kaikreuzer", "createdAt": "2020-05-25T18:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5Mjc3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6a790b58c9ab7a5ac9732dab85b0dda438d27d65", "chunk": "diff --git a/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java b/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\nindex 5e68ec547e..3cae32b000 100644\n--- a/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\n+++ b/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\n\n@@ -219,9 +219,6 @@ class KeContactTransceiver {\n         while (true) {\n             try {\n                 synchronized (selector) {\n-                    if (!selector.isOpen()) {\n-                        return;\n-                    }\n                     try {\n                         selector.selectNow();\n                     } catch (IOException e) {\n"}}, {"oid": "6a790b58c9ab7a5ac9732dab85b0dda438d27d65", "url": "https://github.com/openhab/openhab-addons/commit/6a790b58c9ab7a5ac9732dab85b0dda438d27d65", "message": "addressed review comment\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-05-25T18:17:33Z", "type": "commit"}]}