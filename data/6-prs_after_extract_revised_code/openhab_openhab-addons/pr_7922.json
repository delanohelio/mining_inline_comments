{"pr_number": 7922, "pr_title": "[danfossairunit] Fixed null warnings and errors", "pr_createdAt": "2020-06-14T19:45:18Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7922", "timeline": [{"oid": "d90d9c16683ef71af65f4748c7b4f1130f451371", "url": "https://github.com/openhab/openhab-addons/commit/d90d9c16683ef71af65f4748c7b4f1130f451371", "message": "fixed null warnings and errors\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-14T19:43:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440371578", "bodyText": "I don't think this really fixes the null warning.\nYou would need to do your null check with a local variable instead of the field.\nAlso to reduce indentation changes I prefer the way it was written earlier, if only corrected slightly.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (hrv != null) {\n          \n          \n            \n                        DanfossAirUnit danfossAirUnit = hrv;\n          \n          \n            \n                    DanfossAirUnit danfossAirUnit = hrv;\n          \n          \n            \n                    if (hrv == null) {\n          \n          \n            \n                        return;\n          \n          \n            \n                    }", "author": "cpmeister", "createdAt": "2020-06-15T18:39:05Z", "path": "bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java", "diffHunk": "@@ -86,56 +87,55 @@ public void initialize() {\n         valueCache = new ValueCache(config.updateUnchangedValuesEveryMillis);\n         try {\n             hrv = new DanfossAirUnit(InetAddress.getByName(config.host), 30046);\n+            DanfossAirUnit danfossAirUnit = hrv;\n+            scheduler.execute(() -> {\n+                try {\n+                    thing.setProperty(PROPERTY_UNIT_NAME, danfossAirUnit.getUnitName());\n+                    thing.setProperty(PROPERTY_SERIAL, danfossAirUnit.getUnitSerialNumber());\n+                    pollingJob = scheduler.scheduleWithFixedDelay(this::updateAllChannels, 5, config.refreshInterval,\n+                            TimeUnit.SECONDS);\n+                    updateStatus(ThingStatus.ONLINE);\n+\n+                } catch (IOException e) {\n+                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());\n+                }\n+            });\n         } catch (UnknownHostException e) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR,\n                     \"Unknown host: \" + config.host);\n             return;\n         }\n-\n-        scheduler.execute(() -> {\n-            try {\n-                thing.setProperty(PROPERTY_UNIT_NAME, hrv.getUnitName());\n-                thing.setProperty(PROPERTY_SERIAL, hrv.getUnitSerialNumber());\n-                pollingJob = scheduler.scheduleWithFixedDelay(this::updateAllChannels, 5, config.refreshInterval,\n-                        TimeUnit.SECONDS);\n-                updateStatus(ThingStatus.ONLINE);\n-\n-            } catch (IOException e) {\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());\n-            }\n-        });\n     }\n \n     private void updateAllChannels() {\n-        if (hrv == null) {\n-            return;\n-        }\n-        DanfossAirUnit danfossAirUnit = hrv;\n-        logger.debug(\"Updating DanfossHRV data '{}'\", getThing().getUID());\n+        if (hrv != null) {\n+            DanfossAirUnit danfossAirUnit = hrv;", "originalCommit": "d90d9c16683ef71af65f4748c7b4f1130f451371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4MTk4NA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440381984", "bodyText": "Try it and you will see that it fixes the null warning. If you do a not-null check and then assign the value you have checked to a local var, it will treat the local var as NonNull. It cannot treat hrv as nnNonNull, since it is a field that could potentially change its value to null at any time.", "author": "kaikreuzer", "createdAt": "2020-06-15T18:58:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4ODkwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440388905", "bodyText": "I must say that it also surprises me. Are both maven and Eclipse fine now? Technically that is not correct because a lot can change between checking and assigning given no locking or synchronization seems to be applied.", "author": "martinvw", "createdAt": "2020-06-15T19:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4OTMzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440389330", "bodyText": "I'm confused, are you agreeing with me or not?", "author": "cpmeister", "createdAt": "2020-06-15T19:12:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5MDYxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440390619", "bodyText": "@martinvw Afaik the compiler makes sure that this is the way to make sure that you can safely access a field as nonnull after an if - it only works if it is the very next line after the if.", "author": "kaikreuzer", "createdAt": "2020-06-15T19:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5MzE5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440393196", "bodyText": "I'm confused, are you agreeing with me or not?\n\nIf you are talking to me, yes @cpmeister I agree with you.", "author": "martinvw", "createdAt": "2020-06-15T19:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5OTczMw==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440399733", "bodyText": "@martinvw Afaik the compiler makes sure that this is the way to make sure that you can safely access a field as nonnull after an if - it only works if it is the very next line after the if.\n\nWhat a feature, I can imagine that it fixes a lot of broken code, but is it part of the JDK/JRE specs or an implementation detail for specific JDK/JRE's?\nAnd yes I tested it. Even adding a System.out.print() above it breaks it \ud83d\ude04", "author": "martinvw", "createdAt": "2020-06-15T19:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwMDQ5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440400499", "bodyText": "I must say that given someone can break if by adding any statement above I would say its still best practice to do it really local so that it does not depend on this corner case :-)", "author": "martinvw", "createdAt": "2020-06-15T19:33:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwNzUzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440407533", "bodyText": "@kaikreuzer I did some more tests it's not true, my first tests give false positives because of context switching, but technically this should be the scenario you describe:\nclass Scratch {\n    private static String field = null;\n    public static void main(String[] args) {\n        for (int i = 0; i < 10_002; i++) {\n            new Thread(new Test()).start();\n        }\n    }\n\n    static class Test implements Runnable {\n        @Override\n        public void run() {\n            while (true) {\n                field = \"\";\n\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n                if (field != null) {\n                    System.out.print(\"- \" + field.length());\n                }\n\n                field = null;\n            }\n        }\n    }\n}\nWithout the Thread.sleep it does not give any NPE's but with it does most likely because it causes more context switches.", "author": "martinvw", "createdAt": "2020-06-15T19:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwOTczNg==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440409736", "bodyText": "The correct code would be\n                if (field != null) {\n                    String localField = field;\n                    System.out.print(\"- \" + localField.length());\n                }\n\nCan you try this?", "author": "kaikreuzer", "createdAt": "2020-06-15T19:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxNDE3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440414175", "bodyText": "Updated code:\nclass Scratch {\n    private static String field = null;\n    public static void main(String[] args) {\n        for (int i = 0; i < 10_002; i++) {\n            new Thread(new Test()).start();\n        }\n    }\n\n    static class Test implements Runnable {\n        @Override\n        public void run() {\n            while (true) {\n                field = \"\";\n\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n                if (field != null) {\n                    var local = field;\n                    System.out.print(\"- \" + local.length());\n                }\n\n                field = null;\n            }\n        }\n    }\n}\nOutput still contains NPE's", "author": "martinvw", "createdAt": "2020-06-15T20:00:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUxNDE4OA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440514188", "bodyText": "oof, I just realized my original suggestion was bogus due to my oversight. whoops. Sorry for the confusion.", "author": "cpmeister", "createdAt": "2020-06-16T00:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "f42409f41dbd0d0c723f73a524d750196fb48e61", "chunk": "diff --git a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\nindex 5091b37d13..9369170466 100644\n--- a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n+++ b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n\n@@ -95,7 +95,6 @@ public class DanfossAirUnitHandler extends BaseThingHandler {\n                     pollingJob = scheduler.scheduleWithFixedDelay(this::updateAllChannels, 5, config.refreshInterval,\n                             TimeUnit.SECONDS);\n                     updateStatus(ThingStatus.ONLINE);\n-\n                 } catch (IOException e) {\n                     updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MjgyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440372829", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (hrv != null) {\n          \n          \n            \n                                DanfossAirUnit danfossAirUnit = hrv;\n          \n          \n            \n                            DanfossAirUnit danfossAirUnit = hrv;\n          \n          \n            \n                            if (danfossAirUnit != null) {", "author": "cpmeister", "createdAt": "2020-06-15T18:41:21Z", "path": "bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java", "diffHunk": "@@ -62,15 +60,18 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             updateAllChannels();\n         } else {\n             try {\n-                if (hrv == null) {\n+                if (hrv != null) {\n+                    DanfossAirUnit danfossAirUnit = hrv;", "originalCommit": "d90d9c16683ef71af65f4748c7b4f1130f451371", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f42409f41dbd0d0c723f73a524d750196fb48e61", "chunk": "diff --git a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\nindex 5091b37d13..9369170466 100644\n--- a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n+++ b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n\n@@ -60,8 +60,8 @@ public class DanfossAirUnitHandler extends BaseThingHandler {\n             updateAllChannels();\n         } else {\n             try {\n-                if (hrv != null) {\n-                    DanfossAirUnit danfossAirUnit = hrv;\n+                DanfossAirUnit danfossAirUnit = hrv;\n+                if (danfossAirUnit != null) {\n                     Channel channel = Channel.getByName(channelUID.getIdWithoutGroup());\n                     DanfossAirUnitWriteAccessor writeAccessor = channel.getWriteAccessor();\n                     if (writeAccessor != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NDM3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440374378", "bodyText": "By assigning the non-null value the local variable first it will make the null checker happy.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        hrv = new DanfossAirUnit(InetAddress.getByName(config.host), 30046);\n          \n          \n            \n                        DanfossAirUnit danfossAirUnit = hrv;\n          \n          \n            \n                        DanfossAirUnit danfossAirUnit = new DanfossAirUnit(InetAddress.getByName(config.host), 30046);\n          \n          \n            \n                        hrv = danfossAirUnit;", "author": "cpmeister", "createdAt": "2020-06-15T18:44:19Z", "path": "bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java", "diffHunk": "@@ -86,56 +87,55 @@ public void initialize() {\n         valueCache = new ValueCache(config.updateUnchangedValuesEveryMillis);\n         try {\n             hrv = new DanfossAirUnit(InetAddress.getByName(config.host), 30046);\n+            DanfossAirUnit danfossAirUnit = hrv;", "originalCommit": "d90d9c16683ef71af65f4748c7b4f1130f451371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4MjM3NA==", "url": "https://github.com/openhab/openhab-addons/pull/7922#discussion_r440382374", "bodyText": "I did the changes after seeing that the null checker was happy, trust me.", "author": "kaikreuzer", "createdAt": "2020-06-15T18:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NDM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "f42409f41dbd0d0c723f73a524d750196fb48e61", "chunk": "diff --git a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\nindex 5091b37d13..9369170466 100644\n--- a/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n+++ b/bundles/org.openhab.binding.danfossairunit/src/main/java/org/openhab/binding/danfossairunit/internal/DanfossAirUnitHandler.java\n\n@@ -95,7 +95,6 @@ public class DanfossAirUnitHandler extends BaseThingHandler {\n                     pollingJob = scheduler.scheduleWithFixedDelay(this::updateAllChannels, 5, config.refreshInterval,\n                             TimeUnit.SECONDS);\n                     updateStatus(ThingStatus.ONLINE);\n-\n                 } catch (IOException e) {\n                     updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());\n                 }\n"}}, {"oid": "f42409f41dbd0d0c723f73a524d750196fb48e61", "url": "https://github.com/openhab/openhab-addons/commit/f42409f41dbd0d0c723f73a524d750196fb48e61", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-15T19:57:11Z", "type": "commit"}]}