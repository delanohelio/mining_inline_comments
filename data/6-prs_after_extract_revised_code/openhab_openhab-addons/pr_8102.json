{"pr_number": 8102, "pr_title": "[lcn] Add configuration option invertOpenClosed to binary sensor channel", "pr_createdAt": "2020-07-10T20:40:53Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8102", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r453090371", "bodyText": "Can you move this into LcnModuleBinarySensorSubHandler similar to the inversion of the roller shutter up/down in LcnModuleRollershutterRelaySubHandler?", "author": "fwolter", "createdAt": "2020-07-10T21:43:40Z", "path": "bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java", "diffHunk": "@@ -290,6 +291,22 @@ public void updateChannel(LcnChannelGroup channelGroup, String channelId, State\n         if (converter != null) {\n             convertedState = converter.onStateUpdateFromHandler(state);\n         }\n+\n+        if (channelGroup.equals(LcnChannelGroup.BINARYSENSOR)) {\n+            Channel channel = thing.getChannel(channelUid);\n+            if (channel != null) {\n+                Object invertConfig = channel.getConfiguration().get(\"invertOpenClosed\");\n+                boolean invertOpenClosed = invertConfig instanceof Boolean && (boolean) invertConfig;\n+                if (invertOpenClosed) {\n+                    if (state.equals(OpenClosedType.OPEN)) {\n+                        convertedState = OpenClosedType.CLOSED;\n+                    } else {\n+                        convertedState = OpenClosedType.OPEN;", "originalCommit": "629404d2abb7eb8291a9fb7221b64b3dbf5eeb44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2NjY5MA==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r453166690", "bodyText": "BaseThingHandler.updateState is not visible from AbstractLcnModuleSubHandler. So one can not delegate channel update handling to a sub handler similar to the rollershutter command handling (without revealing BaseThingHandler.updateState in LcnModuleHandler). We could delegate state conversion within LcnModuleHandler.updateChannel to a converter (similar to Converter.onStateUpdateFromHandler(State)). This would require Converter to be an (abstract) superclass or better interface for arbitrary converters which are initialized in LcnModuleHandler.initialize. At the moment Converter is specialized to deal with variables only.\nWhat do you think?", "author": "toweosp", "createdAt": "2020-07-11T07:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NjcwNA==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r453176704", "bodyText": "If I see correctly, BaseThingHandler.updateState() is invoked via LcnModuleHandler.updateChannel() -> AbstractLcnModuleSubHandler.fireUpdate() -> LcnModuleBinarySensorSubHandler.handleStatusMessage(). I think the conversion could happen in LcnModuleBinarySensorSubHandler:55.", "author": "fwolter", "createdAt": "2020-07-11T09:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MDcyMg==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r453290722", "bodyText": "Thanks for your feedback! If I didn't miss something when following your suggestion channel update (and status message handling resp.) would differ between binary sensors and variables. So from a design perspective I think we should choose between using the converter approach or uniquely handle value conversion within the sub-handler's handleStatusMessage.\nWould you like to decide how to uniquely handle value conversion and adapt the code correspondingly? Perhaps it would make sense to handle this on a separate enhancement/pull request due to the necessary refactorings.", "author": "toweosp", "createdAt": "2020-07-12T09:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg1NzQxMg==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r453857412", "bodyText": "Although I'm a fan a of abstracting things, I wouldn't combine conversion of raw data into human readable values and the inversion of binary sensor states. First is a conversion, the other is a manipulation. From the functional perspective, I think they have to less in common to merge these functions.", "author": "fwolter", "createdAt": "2020-07-13T18:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg3ODE4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r456878189", "bodyText": "WDYT?", "author": "fwolter", "createdAt": "2020-07-19T08:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDczMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r456910731", "bodyText": "From my point of view there is no conceptual difference between converting raw variable data (i.e. lcn value) into temperature, speed etc. and converting raw lcn binary sensor data (0 or 1) into open/closed states. In my opinion in both cases conversion applies semantic to raw sensor data leading to human readable values.", "author": "toweosp", "createdAt": "2020-07-19T13:45:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1Mzg3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r456953871", "bodyText": "Ok, you convinced me. I refactored the conversion code and made Converter an interface. Do you want to implement an inversion Converter?\nCan you give me access rights to merge the changes into your branch? Alternatively, you could merge my lcn-converter branch into yours. Before doing so you have to rebase this PR's branch to bb6722c.", "author": "fwolter", "createdAt": "2020-07-19T20:48:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0NDQyNA==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r458144424", "bodyText": "I added an InversionConverter. For this I moved Converter.onCommandFromItem(double) and Converter.onCommandFromItem(QuantityType<?>) down the hierarchy to ValueConverter because I think these methods make only sense when converting numerical values. The InversionConverter might later additionally be used e.g. for visualizing channels with inversed OnOff or UpDown states.", "author": "toweosp", "createdAt": "2020-07-21T14:32:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e5eece5ebcbe03200810913e8875e682ca9f681c", "chunk": "diff --git a/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java b/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\nindex 48acc46af3..0b29379a2b 100644\n--- a/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\n+++ b/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\n\n@@ -292,21 +313,6 @@ public class LcnModuleHandler extends BaseThingHandler {\n             convertedState = converter.onStateUpdateFromHandler(state);\n         }\n \n-        if (channelGroup.equals(LcnChannelGroup.BINARYSENSOR)) {\n-            Channel channel = thing.getChannel(channelUid);\n-            if (channel != null) {\n-                Object invertConfig = channel.getConfiguration().get(\"invertOpenClosed\");\n-                boolean invertOpenClosed = invertConfig instanceof Boolean && (boolean) invertConfig;\n-                if (invertOpenClosed) {\n-                    if (state.equals(OpenClosedType.OPEN)) {\n-                        convertedState = OpenClosedType.CLOSED;\n-                    } else {\n-                        convertedState = OpenClosedType.OPEN;\n-                    }\n-                }\n-            }\n-        }\n-\n         updateState(channelUid, convertedState);\n     }\n \n"}}, {"oid": "e5eece5ebcbe03200810913e8875e682ca9f681c", "url": "https://github.com/openhab/openhab-addons/commit/e5eece5ebcbe03200810913e8875e682ca9f681c", "message": "[lcn] Add InversionConverter\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-21T12:16:38Z", "type": "forcePushed"}, {"oid": "50b01a456265d4105e6bd17cc2c5ce24a19cca49", "url": "https://github.com/openhab/openhab-addons/commit/50b01a456265d4105e6bd17cc2c5ce24a19cca49", "message": "[lcn] Add InversionConverter\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-21T14:34:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NTA3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r458155073", "bodyText": "This casting bothers me a bit. Is there an other way?", "author": "fwolter", "createdAt": "2020-07-21T14:46:37Z", "path": "bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java", "diffHunk": "@@ -169,12 +180,23 @@ public void handleCommand(ChannelUID channelUid, Command command) {\n                 subHandler.handleCommandString((StringType) command, number.get());\n             } else if (command instanceof DecimalType) {\n                 DecimalType decimalType = (DecimalType) command;\n-                DecimalType nativeValue = getConverter(channelUid).onCommandFromItem(decimalType.doubleValue());\n-                subHandler.handleCommandDecimal(nativeValue, channelGroup, number.get());\n+                Converter valueConverter = getConverter(channelUid);\n+                if (valueConverter instanceof ValueConverter) {\n+                    DecimalType nativeValue = ((ValueConverter) valueConverter)\n+                            .onCommandFromItem(decimalType.doubleValue());\n+                    subHandler.handleCommandDecimal(nativeValue, channelGroup, number.get());\n+                }else{", "originalCommit": "50b01a456265d4105e6bd17cc2c5ce24a19cca49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTI1MA==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r458395250", "bodyText": "Sorry, had some issues with my eclipse/EGit installation. I hopefully managed to \"clean\" the branch from the commits not belonging to this PR, but I still have the following issues:\n\nI can't satisfy DCO (your commit apparently was missing signature). Tried to apply the steps mentioned in the DCO log but with no success.\nJ-N-K is still listed as a reviewer for this PR, although the commits not belonging to this PR are now (hopefully) removed.\n\nTo your question regarding the cast: One could move ValueConverter.onCommandFromItem(double) and ValueConverter.onCommandFromItem(QuantityType<?>) up to Converter again making them Nullable so InversionConverter could return null. But in my opinion this would violate separation of concerns, see my last comment.\nFrom a design perspective it might be better to separate conversion for representation (lcn bus -> UI) from conversion of commands (UI -> lcn bus) leading to two different converter hierarchies/interfaces, e.g. StateRepresentationConverter.onStateUpdateFromHandler and CommandConverter.onCommandFromItem - or to be okay with the casting ;-)", "author": "toweosp", "createdAt": "2020-07-21T21:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3NTcwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r459075706", "bodyText": "I'd go for a modified version of your first proposal. Move the methods back to Converter. Make Converter a class and add a default implementation for all four methods, that return the identity. Then, Nullable is not needed. Casting, instanceof and semantic based null values violate OOP paradigms most often.\nI don't think splitting the converters by the message direction doesn't solve the problem as the differentiation between values and binary states is still necessary.", "author": "fwolter", "createdAt": "2020-07-22T20:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTUwNA==", "url": "https://github.com/openhab/openhab-addons/pull/8102#discussion_r459715504", "bodyText": "Converters refactored as you requested.", "author": "toweosp", "createdAt": "2020-07-23T20:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NTA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d573ff014e89c030cd68f6ab3f6d0563635972cf", "chunk": "diff --git a/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java b/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\nindex 0b29379a2b..a0305ec6c8 100644\n--- a/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\n+++ b/bundles/org.openhab.binding.lcn/src/main/java/org/openhab/binding/lcn/internal/LcnModuleHandler.java\n\n@@ -185,7 +185,7 @@ public class LcnModuleHandler extends BaseThingHandler {\n                     DecimalType nativeValue = ((ValueConverter) valueConverter)\n                             .onCommandFromItem(decimalType.doubleValue());\n                     subHandler.handleCommandDecimal(nativeValue, channelGroup, number.get());\n-                }else{\n+                } else {\n                     logger.warn(\"No ValueConverter defined.\");\n                 }\n             } else if (command instanceof QuantityType) {\n"}}, {"oid": "d573ff014e89c030cd68f6ab3f6d0563635972cf", "url": "https://github.com/openhab/openhab-addons/commit/d573ff014e89c030cd68f6ab3f6d0563635972cf", "message": "[lcn] Add configuration option invertState to binary sensor channel\n\nReferences PR #8102\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-21T20:08:30Z", "type": "forcePushed"}, {"oid": "35308b4da6e027e710fe533afbe195c07bd111a2", "url": "https://github.com/openhab/openhab-addons/commit/35308b4da6e027e710fe533afbe195c07bd111a2", "message": "[lcn] Add configuration option invertState to binary sensor channel\n\nReferences PR #8102\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-21T20:49:00Z", "type": "forcePushed"}, {"oid": "f91231d6efe765c1ac2a1a1f97c117316ef93a80", "url": "https://github.com/openhab/openhab-addons/commit/f91231d6efe765c1ac2a1a1f97c117316ef93a80", "message": "[lcn] Add configuration option invertState to binary sensor channel\n\nReferences PR #8102\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-21T20:55:11Z", "type": "forcePushed"}, {"oid": "23d6109ca7c5ad246167c00357c7afc4f731df21", "url": "https://github.com/openhab/openhab-addons/commit/23d6109ca7c5ad246167c00357c7afc4f731df21", "message": "[lcn] Add configuration option invertState to binary sensor channel\n\nReferences PR #8102\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-22T20:12:06Z", "type": "forcePushed"}, {"oid": "4f47203c28d64fb7ebc20f540eaa05fa3e4b470d", "url": "https://github.com/openhab/openhab-addons/commit/4f47203c28d64fb7ebc20f540eaa05fa3e4b470d", "message": "Refactor Converters\n\n\nSigned-off-by: Fabian Wolter <github@fabian-wolter.de>", "committedDate": "2020-07-31T14:23:53Z", "type": "commit"}, {"oid": "a01e9bdd7c30176bff1e2a6c7990207412dc159c", "url": "https://github.com/openhab/openhab-addons/commit/a01e9bdd7c30176bff1e2a6c7990207412dc159c", "message": "[lcn] Add configuration option invertState to binary sensor channel\n\nReferences PR #8102\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-31T14:23:54Z", "type": "commit"}, {"oid": "0bcc5dec3a27903af0ca40973f8c6e14b570b6c7", "url": "https://github.com/openhab/openhab-addons/commit/0bcc5dec3a27903af0ca40973f8c6e14b570b6c7", "message": "[lcn] Refactor converters\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-31T14:23:55Z", "type": "commit"}, {"oid": "eb367e12db65f9f63041ef76574ab56e4ecaba6a", "url": "https://github.com/openhab/openhab-addons/commit/eb367e12db65f9f63041ef76574ab56e4ecaba6a", "message": "[lcn] Correct label formatting\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-31T14:23:56Z", "type": "commit"}, {"oid": "eb367e12db65f9f63041ef76574ab56e4ecaba6a", "url": "https://github.com/openhab/openhab-addons/commit/eb367e12db65f9f63041ef76574ab56e4ecaba6a", "message": "[lcn] Correct label formatting\n\nSigned-off-by: Thomas Weiler <toweosp@gmail.com>", "committedDate": "2020-07-31T14:23:56Z", "type": "forcePushed"}, {"oid": "5b924eeb34dac7eb774e6399209e24e99c4beb6d", "url": "https://github.com/openhab/openhab-addons/commit/5b924eeb34dac7eb774e6399209e24e99c4beb6d", "message": "Merge branch '2.5.x' into invertOpenClosed", "committedDate": "2020-08-01T12:39:24Z", "type": "commit"}]}