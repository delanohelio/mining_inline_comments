{"pr_number": 7900, "pr_title": "[deconz] Adjust color-temperature handling, Extend bulb support", "pr_createdAt": "2020-06-12T01:55:28Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7900", "timeline": [{"oid": "ae8a067095643ffce9e29d84ec03c0171b1b2f73", "url": "https://github.com/openhab/openhab-addons/commit/ae8a067095643ffce9e29d84ec03c0171b1b2f73", "message": "Add support for IKEA CWS bulb\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-12T01:56:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNTAwMA==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r439205000", "bodyText": "Please make these variable names camelcase.", "author": "cpmeister", "createdAt": "2020-06-12T04:50:03Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java", "diffHunk": "@@ -78,8 +83,13 @@\n     private LightState lightStateCache = new LightState();\n     private LightState lastCommand = new LightState();\n \n+    private final int CT_MAX;\n+    private final int CT_MIN;", "originalCommit": "ae8a067095643ffce9e29d84ec03c0171b1b2f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\nindex 8c1c0df1f3..1dadf88506 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n\n@@ -83,13 +79,13 @@ public class LightThingHandler extends DeconzBaseThingHandler<LightMessage> {\n     private LightState lightStateCache = new LightState();\n     private LightState lastCommand = new LightState();\n \n-    private final int CT_MAX;\n-    private final int CT_MIN;\n+    private final int ct_max;\n+    private final int ct_min;\n \n     public LightThingHandler(Thing thing, Gson gson) {\n         super(thing, gson);\n-        CT_MAX = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MAX), 500);\n-        CT_MIN = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MIN), 153);\n+        ct_max = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MAX), ZCL_CT_MAX);\n+        ct_min = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MIN), ZCL_CT_MIN);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNTU3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r439205571", "bodyText": "The standard openhab coding format requires that all if statements should have brackets.", "author": "cpmeister", "createdAt": "2020-06-12T04:52:36Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java", "diffHunk": "@@ -109,10 +113,15 @@ private void addLight(String lightID, LightMessage light) {\n             return;\n         }\n \n-        if (light.uniqueid.isEmpty()) {\n-            logger.warn(\"No unique id reported for light {} ({})\", light.modelid, light.name);\n-            return;\n-        }\n+        Map<String, Object> properties = new HashMap<>();\n+        properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n+        properties.put(Thing.PROPERTY_VENDOR, light.manufacturername);\n+        properties.put(Thing.PROPERTY_MODEL_ID, light.modelid);\n+\n+        if (light.ctmax != null)", "originalCommit": "ae8a067095643ffce9e29d84ec03c0171b1b2f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\nindex 6c17917758..4fbcfc18fd 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n\n@@ -114,14 +113,19 @@ public class ThingDiscoveryService extends AbstractDiscoveryService implements D\n         }\n \n         Map<String, Object> properties = new HashMap<>();\n+        properties.put(\"id\", lightID);\n+        properties.put(UNIQUE_ID, light.uniqueid);\n         properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n         properties.put(Thing.PROPERTY_VENDOR, light.manufacturername);\n         properties.put(Thing.PROPERTY_MODEL_ID, light.modelid);\n \n-        if (light.ctmax != null)\n-            properties.put(PROPERTY_CT_MAX, Integer.toString(light.ctmax));\n-        if (light.ctmin != null)\n-            properties.put(PROPERTY_CT_MIN, Integer.toString(light.ctmin));\n+        if (light.ctmax != null && light.ctmin != null) {\n+            int ctmax = (light.ctmax > ZCL_CT_MAX) ? ZCL_CT_MAX : light.ctmax;\n+            properties.put(PROPERTY_CT_MAX, Integer.toString(ctmax));\n+\n+            int ctmin = (light.ctmin < ZCL_CT_MIN) ? ZCL_CT_MIN : light.ctmin;\n+            properties.put(PROPERTY_CT_MIN, Integer.toString(ctmin));\n+        }\n \n         switch (lightType) {\n             case ON_OFF_LIGHT:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNTc2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r439205761", "bodyText": "Why not put these in the properties map to begin with? It would make things consistent.", "author": "cpmeister", "createdAt": "2020-06-12T04:53:29Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java", "diffHunk": "@@ -147,8 +159,12 @@ private void addLight(String lightID, LightMessage light) {\n \n         ThingUID uid = new ThingUID(thingTypeUID, bridgeUID, light.uniqueid.replaceAll(\"[^a-z0-9\\\\[\\\\]]\", \"\"));\n         DiscoveryResult discoveryResult = DiscoveryResultBuilder.create(uid).withBridge(bridgeUID)\n-                .withLabel(light.name + \" (\" + light.manufacturername + \")\").withProperty(\"id\", lightID)\n-                .withProperty(UNIQUE_ID, light.uniqueid).withRepresentationProperty(UNIQUE_ID).build();\n+                .withLabel(light.name + \" (\" + light.manufacturername + \")\")\n+                .withProperty(\"id\", lightID)\n+                .withProperty(UNIQUE_ID, light.uniqueid)", "originalCommit": "ae8a067095643ffce9e29d84ec03c0171b1b2f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\nindex 6c17917758..4fbcfc18fd 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n\n@@ -159,12 +161,8 @@ public class ThingDiscoveryService extends AbstractDiscoveryService implements D\n \n         ThingUID uid = new ThingUID(thingTypeUID, bridgeUID, light.uniqueid.replaceAll(\"[^a-z0-9\\\\[\\\\]]\", \"\"));\n         DiscoveryResult discoveryResult = DiscoveryResultBuilder.create(uid).withBridge(bridgeUID)\n-                .withLabel(light.name + \" (\" + light.manufacturername + \")\")\n-                .withProperty(\"id\", lightID)\n-                .withProperty(UNIQUE_ID, light.uniqueid)\n-                .withProperties(properties)\n-                .withRepresentationProperty(UNIQUE_ID)\n-                .build();\n+                .withLabel(light.name + \" (\" + light.manufacturername + \")\").withProperties(properties)\n+                .withRepresentationProperty(UNIQUE_ID).build();\n         thingDiscovered(discoveryResult);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjA5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r439206090", "bodyText": "please apply formatting here", "author": "cpmeister", "createdAt": "2020-06-12T04:55:08Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java", "diffHunk": "@@ -129,6 +138,9 @@ private void addLight(String lightID, LightMessage light) {\n             case COLOR_DIMMABLE_LIGHT:\n                 thingTypeUID = THING_TYPE_COLOR_LIGHT;\n                 break;\n+            case COLOR_LIGHT:\n+                 thingTypeUID = (light.ctmin != null) ?THING_TYPE_EXTENDED_COLOR_LIGHT :THING_TYPE_COLOR_LIGHT;", "originalCommit": "ae8a067095643ffce9e29d84ec03c0171b1b2f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\nindex 6c17917758..4fbcfc18fd 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n\n@@ -136,11 +140,9 @@ public class ThingDiscoveryService extends AbstractDiscoveryService implements D\n                 thingTypeUID = THING_TYPE_COLOR_TEMPERATURE_LIGHT;\n                 break;\n             case COLOR_DIMMABLE_LIGHT:\n+            case COLOR_LIGHT:\n                 thingTypeUID = THING_TYPE_COLOR_LIGHT;\n                 break;\n-            case COLOR_LIGHT:\n-                 thingTypeUID = (light.ctmin != null) ?THING_TYPE_EXTENDED_COLOR_LIGHT :THING_TYPE_COLOR_LIGHT;\n-                 break;\n             case EXTENDED_COLOR_LIGHT:\n                 thingTypeUID = THING_TYPE_EXTENDED_COLOR_LIGHT;\n                 break;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMTg2OA==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r441701868", "bodyText": "define private static final int CT_MAX = 500; in this class\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        properties.put(PROPERTY_CT_MAX, Integer.toString(light.ctmax));\n          \n          \n            \n                        int ctmax = light.ctmax > 500 ? 500 : light.ctmax;\n          \n          \n            \n                        properties.put(PROPERTY_CT_MAX, Integer.toString(ctmax));\n          \n      \n    \n    \n  \n\nand the same for min", "author": "J-N-K", "createdAt": "2020-06-17T17:14:57Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java", "diffHunk": "@@ -109,9 +113,17 @@ private void addLight(String lightID, LightMessage light) {\n             return;\n         }\n \n-        if (light.uniqueid.isEmpty()) {\n-            logger.warn(\"No unique id reported for light {} ({})\", light.modelid, light.name);\n-            return;\n+        Map<String, Object> properties = new HashMap<>();\n+        properties.put(\"id\", lightType);\n+        properties.put(UNIQUE_ID, light.uniqueid);\n+        properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n+        properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n+        properties.put(Thing.PROPERTY_VENDOR, light.manufacturername);\n+        properties.put(Thing.PROPERTY_MODEL_ID, light.modelid);\n+\n+        if (light.ctmax != null && light.ctmin != null) {\n+            properties.put(PROPERTY_CT_MAX, Integer.toString(light.ctmax));", "originalCommit": "72c30a660eb0dc257e616cf771c29285d42738c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\nindex 84c9f0cef6..4fbcfc18fd 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/discovery/ThingDiscoveryService.java\n\n@@ -114,16 +113,18 @@ public class ThingDiscoveryService extends AbstractDiscoveryService implements D\n         }\n \n         Map<String, Object> properties = new HashMap<>();\n-        properties.put(\"id\", lightType);\n+        properties.put(\"id\", lightID);\n         properties.put(UNIQUE_ID, light.uniqueid);\n         properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n-        properties.put(Thing.PROPERTY_FIRMWARE_VERSION, light.swversion);\n         properties.put(Thing.PROPERTY_VENDOR, light.manufacturername);\n         properties.put(Thing.PROPERTY_MODEL_ID, light.modelid);\n \n         if (light.ctmax != null && light.ctmin != null) {\n-            properties.put(PROPERTY_CT_MAX, Integer.toString(light.ctmax));\n-            properties.put(PROPERTY_CT_MIN, Integer.toString(light.ctmin));\n+            int ctmax = (light.ctmax > ZCL_CT_MAX) ? ZCL_CT_MAX : light.ctmax;\n+            properties.put(PROPERTY_CT_MAX, Integer.toString(ctmax));\n+\n+            int ctmin = (light.ctmin < ZCL_CT_MIN) ? ZCL_CT_MIN : light.ctmin;\n+            properties.put(PROPERTY_CT_MIN, Integer.toString(ctmin));\n         }\n \n         switch (lightType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTcyMw==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r441705723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int) (ct / 100.0 * (ct_max - ct_min) + ct_min);\n          \n          \n            \n                    int ctMired =(int) (100000.0 / ct);\n          \n          \n            \n                    if (ctMired > ctmax) {\n          \n          \n            \n                        return ctmax;\n          \n          \n            \n                    } else if (ctMired < ctmin) {\n          \n          \n            \n                        return ctmin;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return ctMired;\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nand the conversion in the other direction below. We can add teh dynamic state description later. You haver to adjust the documentation accordingly (color temperature is not 0->100 but xxx K -> xxx K. If you change that today, we can merge it before the 2.5.6 release and it is not a breaking change since 2.5.5 did not contain light support for deconz.", "author": "J-N-K", "createdAt": "2020-06-17T17:21:54Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java", "diffHunk": "@@ -316,12 +326,12 @@ public void messageReceived(String sensorID, DeconzBaseMessage message) {\n         }\n     }\n \n-    private int unscaleColorTemperature(double ct) {\n-        return (int) (ct / 100.0 * (500 - 153) + 153);\n+    private int unscaleColorTemperature(final double ct) {\n+        return (int) (ct / 100.0 * (ct_max - ct_min) + ct_min);", "originalCommit": "72c30a660eb0dc257e616cf771c29285d42738c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329baeba79f9120c41032a0fef24af26db3e31fd", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\nindex 288b3c1987..1dadf88506 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n\n@@ -326,14 +324,6 @@ public class LightThingHandler extends DeconzBaseThingHandler<LightMessage> {\n         }\n     }\n \n-    private int unscaleColorTemperature(final double ct) {\n-        return (int) (ct / 100.0 * (ct_max - ct_min) + ct_min);\n-    }\n-\n-    private double scaleColorTemperature    (final int ct) {\n-        return 100.0 * (ct - ct_min) / (ct_max - ct_min);\n-    }\n-\n     private PercentType toPercentType(int val) {\n         int scaledValue = (int) Math.ceil(val / BRIGHTNESS_FACTOR);\n         if (scaledValue < 0 || scaledValue > 100) {\n"}}, {"oid": "329baeba79f9120c41032a0fef24af26db3e31fd", "url": "https://github.com/openhab/openhab-addons/commit/329baeba79f9120c41032a0fef24af26db3e31fd", "message": "Adjust documentation\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-17T23:46:14Z", "type": "forcePushed"}, {"oid": "9565894181c0b7261a7469c325027347a75f00b9", "url": "https://github.com/openhab/openhab-addons/commit/9565894181c0b7261a7469c325027347a75f00b9", "message": "Add property for ct colormode upper and lower limit\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "6ce0cc84cd3eddf385137a16a187a58caa37fc1d", "url": "https://github.com/openhab/openhab-addons/commit/6ce0cc84cd3eddf385137a16a187a58caa37fc1d", "message": "Expose generic bulb information as properties\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "937d3ad862092dd6948b123e85545fbacb9ce56d", "url": "https://github.com/openhab/openhab-addons/commit/937d3ad862092dd6948b123e85545fbacb9ce56d", "message": "Adjust scaling of color temp range to bulb limits\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "dd93435e53595e23a5a44b08219a4608c0b8e052", "url": "https://github.com/openhab/openhab-addons/commit/dd93435e53595e23a5a44b08219a4608c0b8e052", "message": "Adjust indention\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "14bcfef1d78d4a80c647b18945e3cd1f6ba47baf", "url": "https://github.com/openhab/openhab-addons/commit/14bcfef1d78d4a80c647b18945e3cd1f6ba47baf", "message": "Add support for IKEA CWS bulb\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "0879f4dd89c61cd1a77fd33b2f1badadbd8b0829", "url": "https://github.com/openhab/openhab-addons/commit/0879f4dd89c61cd1a77fd33b2f1badadbd8b0829", "message": "Apply codestyle\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "0d8942cf7c322d700c0a253a00e2246fcf659b38", "url": "https://github.com/openhab/openhab-addons/commit/0d8942cf7c322d700c0a253a00e2246fcf659b38", "message": "Consolidate property handling\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "54e063b1f1b7286d53a6f1ce0b0384ee616515ab", "url": "https://github.com/openhab/openhab-addons/commit/54e063b1f1b7286d53a6f1ce0b0384ee616515ab", "message": "Apply correct type for \"Color lights\"\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "f4b62c05f7c0e92a4840be461d207c2d9f6db88f", "url": "https://github.com/openhab/openhab-addons/commit/f4b62c05f7c0e92a4840be461d207c2d9f6db88f", "message": "Define CT Constants according to ZCL Spec\nSee ZigBee Cluster Library Specification Page 5-5 - 327\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "393905b8121fda883c8e2ce49f3a50c1a22a2103", "url": "https://github.com/openhab/openhab-addons/commit/393905b8121fda883c8e2ce49f3a50c1a22a2103", "message": "Fix property handling\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:06:23Z", "type": "commit"}, {"oid": "c869c4167ec5fc848734a91b064d3e5fa9ffe9ce", "url": "https://github.com/openhab/openhab-addons/commit/c869c4167ec5fc848734a91b064d3e5fa9ffe9ce", "message": "Use Kelvin for color temperature channel\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:08:36Z", "type": "commit"}, {"oid": "902ddc392d4d505dce72f145b8a36899266684ca", "url": "https://github.com/openhab/openhab-addons/commit/902ddc392d4d505dce72f145b8a36899266684ca", "message": "Adjust thing type limits\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:08:36Z", "type": "commit"}, {"oid": "e64256c9543df13b6f08311c49fcab3f9cd54e20", "url": "https://github.com/openhab/openhab-addons/commit/e64256c9543df13b6f08311c49fcab3f9cd54e20", "message": "Fix tests for CT value in kelvin\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:08:36Z", "type": "commit"}, {"oid": "7797697deef693362a5d333ea633dccfe6da57b5", "url": "https://github.com/openhab/openhab-addons/commit/7797697deef693362a5d333ea633dccfe6da57b5", "message": "Apply spotless fixes\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:10:05Z", "type": "commit"}, {"oid": "935e304b084391a1438880324f515f99e876788e", "url": "https://github.com/openhab/openhab-addons/commit/935e304b084391a1438880324f515f99e876788e", "message": "Adjust documentation\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:10:05Z", "type": "commit"}, {"oid": "935e304b084391a1438880324f515f99e876788e", "url": "https://github.com/openhab/openhab-addons/commit/935e304b084391a1438880324f515f99e876788e", "message": "Adjust documentation\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T00:10:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE4NjExOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r442186119", "bodyText": "According to http://dresden-elektronik.github.io/deconz-rest-doc/lights/#getstate the range is far more limited to 153-500. We should use that for the range check.\n\n\n\nstate.ct\nNumber (153..500)\nMired color temperature of the light. (2000K - 6500K)", "author": "J-N-K", "createdAt": "2020-06-18T12:24:54Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/BindingConstants.java", "diffHunk": "@@ -107,4 +107,13 @@\n     public static final String CONFIG_APIKEY = \"apikey\";\n \n     public static final String UNIQUE_ID = \"uid\";\n+\n+    public static final String PROPERTY_CT_MIN = \"ctmin\";\n+    public static final String PROPERTY_CT_MAX = \"ctmax\";\n+\n+    // CT value range according to ZCL Spec", "originalCommit": "935e304b084391a1438880324f515f99e876788e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNTQxNg==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r442435416", "bodyText": "I disagree with the proposed value range. I already have a few lights outside of this range, The deconz documentation is wrong here. the range is only limited by the reported range by the light bulb in deconz.\nSee : deconz rest plugin source code\nThe Zigbee cluster secificaten defines a valid range for the ct values to be 1 - 65279 mired /  that would be 15 K - 1000000K\nYou can find that in the spec if you scroll to pdf page 327 is at the bottom.\nI don't see any reason to limit the value range other than to the zigbee standard allowed range.", "author": "HahnBenjamin", "createdAt": "2020-06-18T18:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE4NjExOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4NTg1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r442485857", "bodyText": "Ok. We can discuss if we set the range for The dynamic state description to that values if we don\u2018t receive useful values.", "author": "J-N-K", "createdAt": "2020-06-18T20:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE4NjExOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE4NzUxMA==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r442187510", "bodyText": "Didn't see this before. We try to remove any dependency to Apache Commons. Please use Integer.parseInt or Integer.valueOf", "author": "J-N-K", "createdAt": "2020-06-18T12:27:19Z", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java", "diffHunk": "@@ -78,8 +79,13 @@\n     private LightState lightStateCache = new LightState();\n     private LightState lastCommand = new LightState();\n \n+    private final int ct_max;\n+    private final int ct_min;\n+\n     public LightThingHandler(Thing thing, Gson gson) {\n         super(thing, gson);\n+        ct_max = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MAX), ZCL_CT_MAX);", "originalCommit": "935e304b084391a1438880324f515f99e876788e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ1NTU5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7900#discussion_r442455590", "bodyText": "done", "author": "HahnBenjamin", "createdAt": "2020-06-18T19:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE4NzUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "774f750cc2f1fa1b85a944d9935f53bd496e3e97", "chunk": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\nindex a692a91a7f..14dc8994d3 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/LightThingHandler.java\n\n@@ -84,8 +83,8 @@ public class LightThingHandler extends DeconzBaseThingHandler<LightMessage> {\n \n     public LightThingHandler(Thing thing, Gson gson) {\n         super(thing, gson);\n-        ct_max = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MAX), ZCL_CT_MAX);\n-        ct_min = NumberUtils.toInt(thing.getProperties().get(PROPERTY_CT_MIN), ZCL_CT_MIN);\n+        ct_max = parseIntWithFallback(thing.getProperties().get(PROPERTY_CT_MAX), ZCL_CT_MAX);\n+        ct_min = parseIntWithFallback(thing.getProperties().get(PROPERTY_CT_MIN), ZCL_CT_MIN);\n     }\n \n     @Override\n"}}, {"oid": "1a295433f45fc910c730958e5a2aef786f8da8d2", "url": "https://github.com/openhab/openhab-addons/commit/1a295433f45fc910c730958e5a2aef786f8da8d2", "message": "Update Readme\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T19:05:13Z", "type": "commit"}, {"oid": "774f750cc2f1fa1b85a944d9935f53bd496e3e97", "url": "https://github.com/openhab/openhab-addons/commit/774f750cc2f1fa1b85a944d9935f53bd496e3e97", "message": "Remove apache.commons dependency\n\nSigned-off-by: Benajmin Hahn <benjamin@pikas-page.de>", "committedDate": "2020-06-18T19:30:01Z", "type": "commit"}]}