{"pr_number": 9228, "pr_title": "[chromecast] Initialize connection to devices asynchronously", "pr_createdAt": "2020-12-04T19:30:44Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9228", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA==", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537252850", "bodyText": "I think quickly cycling the handler (initialize->dispose->initialize) would cause multiple Coordinator instances to be created simultaneously and also lose track of one of them.", "author": "cpmeister", "createdAt": "2020-12-07T06:06:42Z", "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "originalCommit": "980e97ec4d9c6276618a22103696bde26668088b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzNzkxMg==", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537837912", "bodyText": "Okay. Calling the coordinator.initialize() method asynchronously and keep the instance creating like before should work either.", "author": "cweitkamp", "createdAt": "2020-12-07T21:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDU0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537860547", "bodyText": "Only if coordinator.initialize() is synchronized along with coordinator.destroy() as well as adding an early exit in coordinator.initialize() if coordinator.destroy() was called first.\nI think that would make it thread safe.", "author": "cpmeister", "createdAt": "2020-12-07T21:53:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDA5ODc1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r610098757", "bodyText": "@cweitkamp Do you have this PR still on your radar?", "author": "kaikreuzer", "createdAt": "2021-04-08T20:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDUyNjI4MA==", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r610526280", "bodyText": "@kaikreuzer Thanks for the reminder. I updated the PR with the suggested solution above.", "author": "cweitkamp", "createdAt": "2021-04-09T10:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}], "type": "inlineReview", "revised_code": {"commit": "d629b55c1d74d0b6c66a84286542fb538d87ec9f", "chunk": "diff --git a/bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java b/bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java\nindex 0e43371da0..d3d5620086 100644\n--- a/bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java\n+++ b/bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java\n\n@@ -96,23 +98,26 @@ public class ChromecastHandler extends BaseThingHandler implements AudioSink {\n \n         updateStatus(ThingStatus.UNKNOWN);\n \n-        scheduler.submit(() -> {\n-            // initialize connection to devices asynchronously\n-            Coordinator localCoordinator = coordinator;\n-            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                    || localCoordinator.chromeCast.getPort() != config.port)) {\n-                localCoordinator.destroy();\n-                localCoordinator = coordinator = null;\n-            }\n+        Coordinator localCoordinator = coordinator;\n+        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                || (localCoordinator.chromeCast.getPort() != config.port))) {\n+            localCoordinator.destroy();\n+            localCoordinator = coordinator = null;\n+        }\n \n-            if (localCoordinator == null) {\n-                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                        callbackUrl);\n-                localCoordinator.initialize();\n-                coordinator = localCoordinator;\n-            }\n-        });\n+        if (localCoordinator == null) {\n+            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                    callbackUrl);\n+            coordinator = localCoordinator;\n+\n+            scheduler.submit(() -> {\n+                Coordinator c = coordinator;\n+                if (c != null) {\n+                    c.initialize();\n+                }\n+            });\n+        }\n     }\n \n     @Override\n"}}, {"oid": "d629b55c1d74d0b6c66a84286542fb538d87ec9f", "url": "https://github.com/openhab/openhab-addons/commit/d629b55c1d74d0b6c66a84286542fb538d87ec9f", "message": "Initialize connection to devices asynchronously\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2021-04-09T10:38:17Z", "type": "commit"}, {"oid": "d629b55c1d74d0b6c66a84286542fb538d87ec9f", "url": "https://github.com/openhab/openhab-addons/commit/d629b55c1d74d0b6c66a84286542fb538d87ec9f", "message": "Initialize connection to devices asynchronously\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2021-04-09T10:38:17Z", "type": "forcePushed"}]}