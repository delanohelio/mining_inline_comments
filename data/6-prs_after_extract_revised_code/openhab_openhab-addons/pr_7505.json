{"pr_number": 7505, "pr_title": "[coolmasternet] Fix buffer handling (fixes #7333)", "pr_createdAt": "2020-04-30T03:52:23Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7505", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjcwNg==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418206706", "bodyText": "If the stream isn't meant to be closed, there is no reason to use a try-with-resources.", "author": "cpmeister", "createdAt": "2020-04-30T18:27:39Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -146,9 +151,10 @@ public boolean isConnected() {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());\n-                out.write(\"\\r\\n\".getBytes());\n+                out.write(\"\\n\".getBytes());\n \n-                try (Reader isr = new InputStreamReader(localSocket.getInputStream());\n+                try (InputStream uis = new UncloseableInputStream(localSocket.getInputStream());", "originalCommit": "4356e59af432fdc7d774d4897d52a4ad800c6baf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fccd724b66bcabedc5b51cd2198bac210942ae12", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex ff67fcc92a..c98643c361 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -151,26 +151,19 @@ public class ControllerHandler extends BaseBridgeHandler {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());\n-                out.write(\"\\n\".getBytes());\n+                out.write(LF);\n \n-                try (InputStream uis = new UncloseableInputStream(localSocket.getInputStream());\n-                        Reader isr = new InputStreamReader(uis);\n-                        BufferedReader in = new BufferedReader(isr)) {\n-                    while (true) {\n-                        String line = in.readLine();\n-                        logger.trace(\"Read result '{}'\", line);\n-                        if (\"OK\".equals(line)) {\n-                            return response.toString();\n-                        }\n-                        response.append(line);\n-                        if (response.length() > 100) {\n-                            /*\n-                             * Usually this loop times out on errors, but in the case that we just keep getting\n-                             * data we should also fail with an error.\n-                             */\n-                            throw new CoolMasterClientError(\n-                                    String.format(\"Got gibberish response to command %s\", command));\n-                        }\n+                final Reader isr = new InputStreamReader(localSocket.getInputStream());\n+                final BufferedReader in = new BufferedReader(isr);\n+                while (true) {\n+                    String line = in.readLine();\n+                    logger.trace(\"Read result '{}'\", line);\n+                    if (\"OK\".equals(line)) {\n+                        return response.toString();\n+                    }\n+                    response.append(line);\n+                    if (response.length() > 100) {\n+                        throw new CoolMasterClientError(String.format(\"Unexpected response to command %s\", command));\n                     }\n                 }\n             } catch (SocketTimeoutException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMDY3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418220672", "bodyText": "The charset should be specified here.", "author": "cpmeister", "createdAt": "2020-04-30T18:53:37Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -146,9 +151,10 @@ public boolean isConnected() {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());\n-                out.write(\"\\r\\n\".getBytes());\n+                out.write(\"\\n\".getBytes());", "originalCommit": "4356e59af432fdc7d774d4897d52a4ad800c6baf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fccd724b66bcabedc5b51cd2198bac210942ae12", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex ff67fcc92a..c98643c361 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -151,26 +151,19 @@ public class ControllerHandler extends BaseBridgeHandler {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());\n-                out.write(\"\\n\".getBytes());\n+                out.write(LF);\n \n-                try (InputStream uis = new UncloseableInputStream(localSocket.getInputStream());\n-                        Reader isr = new InputStreamReader(uis);\n-                        BufferedReader in = new BufferedReader(isr)) {\n-                    while (true) {\n-                        String line = in.readLine();\n-                        logger.trace(\"Read result '{}'\", line);\n-                        if (\"OK\".equals(line)) {\n-                            return response.toString();\n-                        }\n-                        response.append(line);\n-                        if (response.length() > 100) {\n-                            /*\n-                             * Usually this loop times out on errors, but in the case that we just keep getting\n-                             * data we should also fail with an error.\n-                             */\n-                            throw new CoolMasterClientError(\n-                                    String.format(\"Got gibberish response to command %s\", command));\n-                        }\n+                final Reader isr = new InputStreamReader(localSocket.getInputStream());\n+                final BufferedReader in = new BufferedReader(isr);\n+                while (true) {\n+                    String line = in.readLine();\n+                    logger.trace(\"Read result '{}'\", line);\n+                    if (\"OK\".equals(line)) {\n+                        return response.toString();\n+                    }\n+                    response.append(line);\n+                    if (response.length() > 100) {\n+                        throw new CoolMasterClientError(String.format(\"Unexpected response to command %s\", command));\n                     }\n                 }\n             } catch (SocketTimeoutException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMTc2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418221767", "bodyText": "This will busy-loop if there is no input available.", "author": "cpmeister", "createdAt": "2020-04-30T18:55:39Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -205,21 +211,35 @@ private void checkConnection() throws CoolMasterClientError {\n                 }\n \n                 InputStream in = localSocket.getInputStream();\n-                /* Flush anything pending in the input stream */\n-                while (in.available() > 0) {\n-                    in.read();\n+\n+                // Sink (clear) buffer until earlier of the SINK_TIMEOUT or > prompt\n+                long deadline = System.currentTimeMillis() + SINK_TIMEOUT;\n+                while (System.currentTimeMillis() < deadline) {\n+                    if (in.available() > 0) {", "originalCommit": "4356e59af432fdc7d774d4897d52a4ad800c6baf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fccd724b66bcabedc5b51cd2198bac210942ae12", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex ff67fcc92a..c98643c361 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -213,10 +206,13 @@ public class ControllerHandler extends BaseBridgeHandler {\n                 InputStream in = localSocket.getInputStream();\n \n                 // Sink (clear) buffer until earlier of the SINK_TIMEOUT or > prompt\n-                long deadline = System.currentTimeMillis() + SINK_TIMEOUT;\n-                while (System.currentTimeMillis() < deadline) {\n-                    if (in.available() > 0) {\n+                try {\n+                    localSocket.setSoTimeout(SINK_TIMEOUT);\n+                    while (true) {\n                         int b = in.read();\n+                        if (b == -1) {\n+                          break;\n+                        }\n                         if (b == PROMPT) {\n                             if (in.available() > 0) {\n                                 throw new IOException(\"Unexpected data following prompt\");\n"}}, {"oid": "fccd724b66bcabedc5b51cd2198bac210942ae12", "url": "https://github.com/openhab/openhab-addons/commit/fccd724b66bcabedc5b51cd2198bac210942ae12", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T00:17:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MzQyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418363429", "bodyText": "in.readLine() will return null if the end of stream is reached. If that happens your code here will go into an infinite loop.", "author": "cpmeister", "createdAt": "2020-05-01T00:33:52Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -146,25 +151,19 @@ public boolean isConnected() {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());\n-                out.write(\"\\r\\n\".getBytes());\n+                out.write(LF);\n \n-                try (Reader isr = new InputStreamReader(localSocket.getInputStream());\n-                        BufferedReader in = new BufferedReader(isr)) {\n-                    while (true) {\n-                        String line = in.readLine();\n-                        logger.trace(\"Read result '{}'\", line);\n-                        if (\"OK\".equals(line)) {\n-                            return response.toString();\n-                        }\n-                        response.append(line);\n-                        if (response.length() > 100) {\n-                            /*\n-                             * Usually this loop times out on errors, but in the case that we just keep getting\n-                             * data we should also fail with an error.\n-                             */\n-                            throw new CoolMasterClientError(\n-                                    String.format(\"Got gibberish response to command %s\", command));\n-                        }\n+                final Reader isr = new InputStreamReader(localSocket.getInputStream());\n+                final BufferedReader in = new BufferedReader(isr);\n+                while (true) {\n+                    String line = in.readLine();", "originalCommit": "fccd724b66bcabedc5b51cd2198bac210942ae12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3MjQxMw==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418372413", "bodyText": "The original code didn't handle null, so I didn't either. But I've fixed it and will push a commit.", "author": "benalexau", "createdAt": "2020-05-01T01:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MzQyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex c98643c361..a402cde643 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -150,7 +150,7 @@ public class ControllerHandler extends BaseBridgeHandler {\n \n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n-                out.write(command.getBytes());\n+                out.write(command.getBytes(StandardCharsets.US_ASCII));\n                 out.write(LF);\n \n                 final Reader isr = new InputStreamReader(localSocket.getInputStream());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3MDEzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418370130", "bodyText": "Shouldn't the character encoding be specified here as well?", "author": "cpmeister", "createdAt": "2020-05-01T01:00:44Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -146,25 +151,19 @@ public boolean isConnected() {\n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n                 out.write(command.getBytes());", "originalCommit": "fccd724b66bcabedc5b51cd2198bac210942ae12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3MjUyNw==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418372527", "bodyText": "Original code didn't, so I didn't do this either. But I have fixed this and will push a commit.", "author": "benalexau", "createdAt": "2020-05-01T01:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3MDEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex c98643c361..a402cde643 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -150,7 +150,7 @@ public class ControllerHandler extends BaseBridgeHandler {\n \n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n-                out.write(command.getBytes());\n+                out.write(command.getBytes(StandardCharsets.US_ASCII));\n                 out.write(LF);\n \n                 final Reader isr = new InputStreamReader(localSocket.getInputStream());\n"}}, {"oid": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "url": "https://github.com/openhab/openhab-addons/commit/f3df0027499b797ccb6d3bdc97d631f4ab39a182", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T01:08:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NTU1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418385556", "bodyText": "please format this, this has the wrong indentation.", "author": "cpmeister", "createdAt": "2020-05-01T02:09:02Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -205,21 +204,41 @@ private void checkConnection() throws CoolMasterClientError {\n                 }\n \n                 InputStream in = localSocket.getInputStream();\n-                /* Flush anything pending in the input stream */\n-                while (in.available() > 0) {\n-                    in.read();\n+\n+                // Sink (clear) buffer until earlier of the SINK_TIMEOUT or > prompt\n+                try {\n+                    localSocket.setSoTimeout(SINK_TIMEOUT);\n+                    while (true) {\n+                        int b = in.read();\n+                        if (b == -1) {\n+                          break;", "originalCommit": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4804db5dc006e045b1242d1a0d47ed20cedd6947", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex a402cde643..685a57a594 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -211,7 +211,7 @@ public class ControllerHandler extends BaseBridgeHandler {\n                     while (true) {\n                         int b = in.read();\n                         if (b == -1) {\n-                          break;\n+                            break;\n                         }\n                         if (b == PROMPT) {\n                             if (in.available() > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NTg5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418385890", "bodyText": "Shouldn't a charset be specified for this reader?", "author": "cpmeister", "createdAt": "2020-05-01T02:10:41Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -145,26 +150,20 @@ public boolean isConnected() {\n \n                 logger.trace(\"Sending command '{}'\", command);\n                 OutputStream out = localSocket.getOutputStream();\n-                out.write(command.getBytes());\n-                out.write(\"\\r\\n\".getBytes());\n+                out.write(command.getBytes(StandardCharsets.US_ASCII));\n+                out.write(LF);\n \n-                try (Reader isr = new InputStreamReader(localSocket.getInputStream());\n-                        BufferedReader in = new BufferedReader(isr)) {\n-                    while (true) {\n-                        String line = in.readLine();\n-                        logger.trace(\"Read result '{}'\", line);\n-                        if (\"OK\".equals(line)) {\n-                            return response.toString();\n-                        }\n-                        response.append(line);\n-                        if (response.length() > 100) {\n-                            /*\n-                             * Usually this loop times out on errors, but in the case that we just keep getting\n-                             * data we should also fail with an error.\n-                             */\n-                            throw new CoolMasterClientError(\n-                                    String.format(\"Got gibberish response to command %s\", command));\n-                        }\n+                final Reader isr = new InputStreamReader(localSocket.getInputStream());", "originalCommit": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNzk2OA==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418437968", "bodyText": "It has been this way since 2 January 2017. I did not write it.", "author": "benalexau", "createdAt": "2020-05-01T06:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NTg5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDk5NA==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418440994", "bodyText": "Anyhow I modified it to be explicit.", "author": "benalexau", "createdAt": "2020-05-01T07:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NTg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "e2a49e6218626fc4889f71cb1f77e66d782b2df7", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex a402cde643..078faed5a4 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -153,7 +153,7 @@ public class ControllerHandler extends BaseBridgeHandler {\n                 out.write(command.getBytes(StandardCharsets.US_ASCII));\n                 out.write(LF);\n \n-                final Reader isr = new InputStreamReader(localSocket.getInputStream());\n+                final Reader isr = new InputStreamReader(localSocket.getInputStream(), StandardCharsets.US_ASCII);\n                 final BufferedReader in = new BufferedReader(isr);\n                 while (true) {\n                     String line = in.readLine();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NjE0Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418386146", "bodyText": "please log this anyway, you can log it as DEBUG", "author": "cpmeister", "createdAt": "2020-05-01T02:11:54Z", "path": "bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java", "diffHunk": "@@ -205,21 +204,41 @@ private void checkConnection() throws CoolMasterClientError {\n                 }\n \n                 InputStream in = localSocket.getInputStream();\n-                /* Flush anything pending in the input stream */\n-                while (in.available() > 0) {\n-                    in.read();\n+\n+                // Sink (clear) buffer until earlier of the SINK_TIMEOUT or > prompt\n+                try {\n+                    localSocket.setSoTimeout(SINK_TIMEOUT);\n+                    while (true) {\n+                        int b = in.read();\n+                        if (b == -1) {\n+                          break;\n+                        }\n+                        if (b == PROMPT) {\n+                            if (in.available() > 0) {\n+                                throw new IOException(\"Unexpected data following prompt\");\n+                            }\n+                            logger.trace(\"Buffer empty following unsolicited > prompt\");\n+                            return;\n+                        }\n+                    }\n+                } catch (final IOException ignoredAsLikelySocketTimeout) {\n+                } finally {", "originalCommit": "f3df0027499b797ccb6d3bdc97d631f4ab39a182", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0MDQ5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7505#discussion_r418440499", "bodyText": "I narrowed the exception instead to SocketTimeoutException. That way it reflects the expected blue sky case (which is in.read() timing out as the buffer is now empty). Other IOException cases are already caught and logged in the enclosing try statement.", "author": "benalexau", "createdAt": "2020-05-01T07:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NjE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4804db5dc006e045b1242d1a0d47ed20cedd6947", "chunk": "diff --git a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\nindex a402cde643..685a57a594 100644\n--- a/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n+++ b/bundles/org.openhab.binding.coolmasternet/src/main/java/org/openhab/binding/coolmasternet/internal/ControllerHandler.java\n\n@@ -211,7 +211,7 @@ public class ControllerHandler extends BaseBridgeHandler {\n                     while (true) {\n                         int b = in.read();\n                         if (b == -1) {\n-                          break;\n+                            break;\n                         }\n                         if (b == PROMPT) {\n                             if (in.available() > 0) {\n"}}, {"oid": "4804db5dc006e045b1242d1a0d47ed20cedd6947", "url": "https://github.com/openhab/openhab-addons/commit/4804db5dc006e045b1242d1a0d47ed20cedd6947", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T06:45:32Z", "type": "forcePushed"}, {"oid": "175fcaac20af82e13e8887b16f3bbd7900433dc5", "url": "https://github.com/openhab/openhab-addons/commit/175fcaac20af82e13e8887b16f3bbd7900433dc5", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T06:59:02Z", "type": "forcePushed"}, {"oid": "e2a49e6218626fc4889f71cb1f77e66d782b2df7", "url": "https://github.com/openhab/openhab-addons/commit/e2a49e6218626fc4889f71cb1f77e66d782b2df7", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T07:02:29Z", "type": "commit"}, {"oid": "e2a49e6218626fc4889f71cb1f77e66d782b2df7", "url": "https://github.com/openhab/openhab-addons/commit/e2a49e6218626fc4889f71cb1f77e66d782b2df7", "message": "[coolmasternet] Fix buffer handling (fixes #7333)\n\nA more detailed discussion is in the bug report, but in summary:\n\n* Gracefully handle unsolicited socket opening prompt\n* Sink existing socket buffers in a deterministic manner\n* Prevent socket close due to try-with-resources cleanup\n* Send LF (nor CRLF) as per CoolMasterNet PRM [1]\n\nTested locally including monitoring air conditioner state\nchanges (using the manual control panel and also the CoolRemote mobile\napplication) and sending commands (ie power, fan speed, mode, set\ntemperature).\n\n[1] https://coolautomation.com/wp-content/uploads/sites/2/2019/11/CMN5-PRM.pdf\n\nSigned-off-by: Ben Alex <ben.alex@acegi.com.au>", "committedDate": "2020-05-01T07:02:29Z", "type": "forcePushed"}]}