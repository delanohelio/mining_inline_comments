{"pr_number": 8981, "pr_title": "[miio]  Cloud Communication for devices", "pr_createdAt": "2020-11-07T20:02:58Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8981", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ4NjExMw==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r519486113", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new MiCloudException();\n          \n          \n            \n                        throw new MiCloudException(e);", "author": "cpmeister", "createdAt": "2020-11-08T22:28:55Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java", "diffHunk": "@@ -176,10 +176,26 @@ public String getMapUrl(String vacuumMap, String country) throws MiCloudExceptio\n     }\n \n     public String getDeviceStatus(String device, String country) throws MiCloudException {\n-        String url = getApiUrl(country) + \"/home/device_list\";\n-        Map<String, String> map = new HashMap<String, String>();\n-        map.put(\"data\", \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n-        final String response = request(url, map);\n+        final String response = request(\"/home/device_list\", country, \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n+        logger.debug(\"response: {}\", response);\n+        return response;\n+    }\n+\n+    public String sendRPCCommand(String device, String country, String command) throws MiCloudException {\n+        if (device.length() != 8) {\n+            logger.debug(\"Device ID ('{}') incorrect or missing. Command not send: {}\", device, command);\n+        }\n+        if (country.length() > 3 || country.length() < 2) {\n+            logger.debug(\"Country ('{}') incorrect or missing. Command not send: {}\", device, command);\n+        }\n+        String id = \"\";\n+        try {\n+            id = String.valueOf(Long.parseUnsignedLong(device, 16));\n+        } catch (NumberFormatException e) {\n+            logger.debug(\"Could not parse device ID ('{}')\", device);\n+            throw new MiCloudException();", "originalCommit": "8e88c6fe49258340a8a50644a5b8ad2dde1b48e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2cbaffa4131a4bf0c327bdd8059c0b22fde47ef8", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\nindex 126a0dd35e..d6980fa33a 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\n\n@@ -176,7 +176,10 @@ public class MiCloudConnector {\n     }\n \n     public String getDeviceStatus(String device, String country) throws MiCloudException {\n-        final String response = request(\"/home/device_list\", country, \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n+        String url = getApiUrl(country) + \"/home/device_list\";\n+        Map<String, String> map = new HashMap<String, String>();\n+        map.put(\"data\", \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n+        final String response = request(url, map);\n         logger.debug(\"response: {}\", response);\n         return response;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ4NjM3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r519486375", "bodyText": "Please make sure store the future to a field and cancel it when the handler is disposed.", "author": "cpmeister", "createdAt": "2020-11-08T22:31:01Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java", "diffHunk": "@@ -240,14 +241,13 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             sendCommand(MiIoCommand.CONSUMABLES_RESET, \"[\" + command.toString() + \"]\");\n             updateState(CHANNEL_CONSUMABLE_RESET, new StringType(\"none\"));\n         }\n-        if (channelUID.getId().equals(CHANNEL_COMMAND)) {\n-            cmds.put(sendCommand(command.toString()), command.toString());\n-        }\n     }\n \n     private void forceStatusUpdate() {\n         status.invalidateValue();\n-        status.getValue();\n+        scheduler.schedule(() -> {\n+            status.getValue();\n+        }, 3000, TimeUnit.MILLISECONDS);", "originalCommit": "8e88c6fe49258340a8a50644a5b8ad2dde1b48e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYxNzQzNw==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r519617437", "bodyText": "thanks, will do that. similar issue may have caused #8655\nI will scan the binding as I think there are one or 2 more places where I have such a delayed execution", "author": "marcelrv", "createdAt": "2020-11-09T08:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ4NjM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "153260b7aa232370c920eafe8cc6113453e4b3ff", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\nindex 1e8cfdaa9d..e50f47ba51 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\n\n@@ -245,7 +245,7 @@ public class MiIoVacuumHandler extends MiIoAbstractHandler {\n \n     private void forceStatusUpdate() {\n         status.invalidateValue();\n-        scheduler.schedule(() -> {\n+        miIoScheduler.schedule(() -> {\n             status.getValue();\n         }, 3000, TimeUnit.MILLISECONDS);\n     }\n"}}, {"oid": "2cbaffa4131a4bf0c327bdd8059c0b22fde47ef8", "url": "https://github.com/openhab/openhab-addons/commit/2cbaffa4131a4bf0c327bdd8059c0b22fde47ef8", "message": "[miio]  Cloud Communication for devices\n\nAllows to define if communication to devices is direct or send via the\nXiaomi cloud.\nIntroduce additional channel to execute commands via cloud.\n\nOther small improvements\n* Use common method from abstract handler to send commands\n* Common way to handle custom commands\n* Introduce small delay before refreshing robot properties after sending\ncommands (similar to the basic handler) so devices have time to update\ntheir properties\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-09T19:09:04Z", "type": "commit"}, {"oid": "55355ba4763854027389bc0f9fde17b357004a2f", "url": "https://github.com/openhab/openhab-addons/commit/55355ba4763854027389bc0f9fde17b357004a2f", "message": "[miio] simplify cloudconnector\n\nsimplify cloudconnector\nspotless run\n\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-09T19:09:05Z", "type": "commit"}, {"oid": "3a9353d1bec88e8e65a2e94f5181e3f1b0d6d377", "url": "https://github.com/openhab/openhab-addons/commit/3a9353d1bec88e8e65a2e94f5181e3f1b0d6d377", "message": "[miio] Cleanup all jobs when unloading\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-09T20:58:15Z", "type": "commit"}, {"oid": "3a9353d1bec88e8e65a2e94f5181e3f1b0d6d377", "url": "https://github.com/openhab/openhab-addons/commit/3a9353d1bec88e8e65a2e94f5181e3f1b0d6d377", "message": "[miio] Cleanup all jobs when unloading\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-09T20:58:15Z", "type": "forcePushed"}, {"oid": "26376330f4f3089859b07165bb2627b2a1525870", "url": "https://github.com/openhab/openhab-addons/commit/26376330f4f3089859b07165bb2627b2a1525870", "message": "[miio] fix spotless complaint\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-09T21:15:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzOTk0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r520139941", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (ScheduledFuture<?> s : scheduledJobs) {\n          \n          \n            \n                        if (s.isDone()) {\n          \n          \n            \n                            scheduledJobs.remove(s);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    scheduledJobs.removeIf(Future::isDone);", "author": "cpmeister", "createdAt": "2020-11-09T21:44:58Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -163,6 +183,14 @@ private boolean tokenCheckPass(@Nullable String tokenSting) {\n         }\n     }\n \n+    protected void removedCompletedJobs() {\n+        for (ScheduledFuture<?> s : scheduledJobs) {\n+            if (s.isDone()) {\n+                scheduledJobs.remove(s);\n+            }\n+        }", "originalCommit": "26376330f4f3089859b07165bb2627b2a1525870", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "153260b7aa232370c920eafe8cc6113453e4b3ff", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex 9931596a56..4be4f5c853 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -194,17 +201,12 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n     @Override\n     public void dispose() {\n         logger.debug(\"Disposing Xiaomi Mi IO handler '{}'\", getThing().getUID());\n+        miIoScheduler.shutdownNow();\n         final ScheduledFuture<?> pollingJob = this.pollingJob;\n         if (pollingJob != null) {\n             pollingJob.cancel(true);\n             this.pollingJob = null;\n         }\n-        for (ScheduledFuture<?> s : scheduledJobs) {\n-            if (!s.isDone()) {\n-                s.cancel(true);\n-            }\n-        }\n-        scheduledJobs.clear();\n         final @Nullable MiIoAsyncCommunication miioCom = this.miioCom;\n         if (miioCom != null) {\n             lastId = miioCom.getId();\n"}}, {"oid": "153260b7aa232370c920eafe8cc6113453e4b3ff", "url": "https://github.com/openhab/openhab-addons/commit/153260b7aa232370c920eafe8cc6113453e4b3ff", "message": "[miio] update to use dedicated ScheduledExecutorService\n\nUse dedicated ScheduledExecutorService to avoid unloading problems\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-12T19:41:53Z", "type": "commit"}, {"oid": "5c41c1964371e8fb943801623bd950dc0f53b004", "url": "https://github.com/openhab/openhab-addons/commit/5c41c1964371e8fb943801623bd950dc0f53b004", "message": "Update bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-13T09:24:30Z", "type": "commit"}, {"oid": "5c41c1964371e8fb943801623bd950dc0f53b004", "url": "https://github.com/openhab/openhab-addons/commit/5c41c1964371e8fb943801623bd950dc0f53b004", "message": "Update bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-13T09:24:30Z", "type": "forcePushed"}, {"oid": "67d3d0f8fcac5e4199d5e23c6ffa895d27494dbf", "url": "https://github.com/openhab/openhab-addons/commit/67d3d0f8fcac5e4199d5e23c6ffa895d27494dbf", "message": "[miio] fix for removeif\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-13T09:29:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4Mzc4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523283783", "bodyText": "You shouldn't perform shutdown of the threadpools returned by ThreadPoolManager.\nInstead you should create your own ScheduledThreadPoolExecutor instance as follows:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    miIoScheduler = ThreadPoolManager.getScheduledPool(getThing().getUID().getAsString());\n          \n          \n            \n                    miIoScheduler = new ScheduledThreadPoolExecutor(1,\n          \n          \n            \n                            new NamedThreadFactory(getThing().getUID().getAsString(), true));\n          \n          \n            \n                    miIoScheduler.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);\n          \n          \n            \n                    miIoScheduler.setRemoveOnCancelPolicy(true);\n          \n      \n    \n    \n  \n\nThe example above creates a scheduler with only a single thread, but you can increase this number as you see fit.", "author": "cpmeister", "createdAt": "2020-11-13T23:29:03Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -93,18 +102,35 @@\n     private final Logger logger = LoggerFactory.getLogger(MiIoAbstractHandler.class);\n     protected MiIoDatabaseWatchService miIoDatabaseWatchService;\n \n-    public MiIoAbstractHandler(Thing thing, MiIoDatabaseWatchService miIoDatabaseWatchService) {\n+    public MiIoAbstractHandler(Thing thing, MiIoDatabaseWatchService miIoDatabaseWatchService,\n+            CloudConnector cloudConnector) {\n         super(thing);\n         this.miIoDatabaseWatchService = miIoDatabaseWatchService;\n+        this.cloudConnector = cloudConnector;\n     }\n \n     @Override\n     public abstract void handleCommand(ChannelUID channelUID, Command command);\n \n+    protected boolean handleCommandsChannels(ChannelUID channelUID, Command command) {\n+        if (channelUID.getId().equals(CHANNEL_COMMAND)) {\n+            cmds.put(sendCommand(command.toString(), \"\"), command.toString());\n+            return true;\n+        }\n+        if (channelUID.getId().equals(CHANNEL_RPC)) {\n+            cmds.put(sendCommand(command.toString(), cloudServer), command.toString());\n+            return true;\n+        }\n+        return false;\n+    }\n+\n     @Override\n     public void initialize() {\n         logger.debug(\"Initializing Mi IO device handler '{}' with thingType {}\", getThing().getUID(),\n                 getThing().getThingTypeUID());\n+\n+        miIoScheduler = ThreadPoolManager.getScheduledPool(getThing().getUID().getAsString());", "originalCommit": "67d3d0f8fcac5e4199d5e23c6ffa895d27494dbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3ODQ1NA==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523778454", "bodyText": "I was very hesitant to do that as in https://github.com/openhab/openhab-core/blob/master/bundles/org.openhab.core/src/main/java/org/openhab/core/common/ThreadPoolManager.java it was made clear that bindings really should not do that.\nI thought that that what the ThreadPoolManager was doing for me... if the name does not exist yet, create a new ScheduledThreadPoolExecutor. This is why I added the thingUID in there to make sure it was a unique one (for that thing) instead of some common one that might not like being shutdown", "author": "marcelrv", "createdAt": "2020-11-15T16:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4Mzc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgxMzc0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523813742", "bodyText": "That class is more for use in the openHAB core, not necessarily the bindings. Thread pools managed by ThreadPoolManager live outside the standard handler lifecycle which means that they are a poor choice to use if you want a threadpool that is only dedicated for a specific handler. Many bindings manage their thread pools, so there is nothing unusual about doing this.\nIf you look at the ThreadPoolManager source code you will notice that it does not recreate a threadpool if it is shutdown. That means that if a handler is restarted it will shutdown the threadpool and then restart the handler with a dead threadpool. Since we need to be able to shutdown the threadpool we have no choice other than to manage the threadpool instance ourselves.", "author": "cpmeister", "createdAt": "2020-11-15T21:06:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4Mzc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMDg5MA==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523820890", "bodyText": "cool, will implement it like this than and will do some more testing", "author": "marcelrv", "createdAt": "2020-11-15T22:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4Mzc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5557b15bb6ee5419e7669e0553bc218e07876620", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex 23b72b7c3d..74047079b4 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -129,7 +129,11 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n         logger.debug(\"Initializing Mi IO device handler '{}' with thingType {}\", getThing().getUID(),\n                 getThing().getThingTypeUID());\n \n-        miIoScheduler = ThreadPoolManager.getScheduledPool(getThing().getUID().getAsString());\n+        ScheduledThreadPoolExecutor miIoScheduler = new ScheduledThreadPoolExecutor(3,\n+                new NamedThreadFactory(getThing().getUID().getAsString(), true));\n+        miIoScheduler.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);\n+        miIoScheduler.setRemoveOnCancelPolicy(true);\n+        this.miIoScheduler = miIoScheduler;\n \n         final MiIoBindingConfiguration configuration = getConfigAs(MiIoBindingConfiguration.class);\n         this.configuration = configuration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NDQwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523284405", "bodyText": "If since you need it to be non-null, but are going to override it anyway during initialization, then I see no problem with initially setting it to the BaseThingHandler scheduler.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected ScheduledExecutorService miIoScheduler = ThreadPoolManager.getScheduledPool(BINDING_ID);\n          \n          \n            \n                protected ScheduledExecutorService miIoScheduler = scheduler;", "author": "cpmeister", "createdAt": "2020-11-13T23:31:22Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -67,7 +71,10 @@\n     protected static final int MAX_QUEUE = 5;\n     protected static final Gson GSON = new GsonBuilder().create();\n \n+    protected ScheduledExecutorService miIoScheduler = ThreadPoolManager.getScheduledPool(BINDING_ID);", "originalCommit": "67d3d0f8fcac5e4199d5e23c6ffa895d27494dbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3ODcyMg==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r523778722", "bodyText": "yes, indeed that was the intention, will change it to your suggestion.", "author": "marcelrv", "createdAt": "2020-11-15T16:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NDQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5557b15bb6ee5419e7669e0553bc218e07876620", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex 23b72b7c3d..74047079b4 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -71,8 +72,7 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n     protected static final int MAX_QUEUE = 5;\n     protected static final Gson GSON = new GsonBuilder().create();\n \n-    protected ScheduledExecutorService miIoScheduler = ThreadPoolManager.getScheduledPool(BINDING_ID);\n-\n+    protected ScheduledExecutorService miIoScheduler = scheduler;\n     protected @Nullable ScheduledFuture<?> pollingJob;\n     protected CopyOnWriteArraySet<ScheduledFuture<?>> scheduledJobs = new CopyOnWriteArraySet<>();\n     protected MiIoDevices miDevice = MiIoDevices.UNKNOWN;\n"}}, {"oid": "5557b15bb6ee5419e7669e0553bc218e07876620", "url": "https://github.com/openhab/openhab-addons/commit/5557b15bb6ee5419e7669e0553bc218e07876620", "message": "miio- Improve scheduler\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-23T20:16:26Z", "type": "commit"}, {"oid": "78f0e74b76b03920d71688058d8ca818a81fbe56", "url": "https://github.com/openhab/openhab-addons/commit/78f0e74b76b03920d71688058d8ca818a81fbe56", "message": "[miio] fix communication error if device is not on the network\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-23T20:26:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2MzM4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r530563385", "bodyText": "Don't set it to scheduler here, it would just allow further tasks to be scheduled after disposal.", "author": "cpmeister", "createdAt": "2020-11-25T18:13:08Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -216,7 +220,8 @@ public void dispose() {\n             }\n         }\n         scheduledJobs.clear();\n-        miIoScheduler = ThreadPoolManager.getScheduledPool(BINDING_ID);\n+        miIoScheduler.shutdownNow();\n+        miIoScheduler = scheduler;", "originalCommit": "5557b15bb6ee5419e7669e0553bc218e07876620", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b04b8067d7e33a16edbec11a5810f2cda1e745a9", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex 74047079b4..3d2f436a89 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -214,14 +208,7 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n             miioCom.close();\n             this.miioCom = null;\n         }\n-        for (ScheduledFuture<?> s : scheduledJobs) {\n-            if (!s.isDone()) {\n-                s.cancel(true);\n-            }\n-        }\n-        scheduledJobs.clear();\n         miIoScheduler.shutdownNow();\n-        miIoScheduler = scheduler;\n     }\n \n     protected int sendCommand(MiIoCommand command) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU2Nzk1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r530567959", "bodyText": "Always pass the cause exception.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new MiCloudException(err);\n          \n          \n            \n                        throw new MiCloudException(err, e);", "author": "cpmeister", "createdAt": "2020-11-25T18:22:09Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java", "diffHunk": "@@ -176,10 +176,27 @@ public String getMapUrl(String vacuumMap, String country) throws MiCloudExceptio\n     }\n \n     public String getDeviceStatus(String device, String country) throws MiCloudException {\n-        String url = getApiUrl(country) + \"/home/device_list\";\n-        Map<String, String> map = new HashMap<String, String>();\n-        map.put(\"data\", \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n-        final String response = request(url, map);\n+        final String response = request(\"/home/device_list\", country, \"{\\\"dids\\\":[\\\"\" + device + \"\\\"]}\");\n+        logger.debug(\"response: {}\", response);\n+        return response;\n+    }\n+\n+    public String sendRPCCommand(String device, String country, String command) throws MiCloudException {\n+        if (device.length() != 8) {\n+            logger.debug(\"Device ID ('{}') incorrect or missing. Command not send: {}\", device, command);\n+        }\n+        if (country.length() > 3 || country.length() < 2) {\n+            logger.debug(\"Country ('{}') incorrect or missing. Command not send: {}\", device, command);\n+        }\n+        String id = \"\";\n+        try {\n+            id = String.valueOf(Long.parseUnsignedLong(device, 16));\n+        } catch (NumberFormatException e) {\n+            String err = \"Could not parse device ID ('\" + device.toString() + \"')\";\n+            logger.debug(\"{}\", err);\n+            throw new MiCloudException(err);", "originalCommit": "78f0e74b76b03920d71688058d8ca818a81fbe56", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6ee2e175ad8cbb4e2ad1dc9861ca24b1eb9e45b0", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\nindex d09982980c..5077294b09 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/MiCloudConnector.java\n\n@@ -194,7 +194,7 @@ public class MiCloudConnector {\n         } catch (NumberFormatException e) {\n             String err = \"Could not parse device ID ('\" + device.toString() + \"')\";\n             logger.debug(\"{}\", err);\n-            throw new MiCloudException(err);\n+            throw new MiCloudException(err, e);\n         }\n         final String response = request(\"/home/rpc/\" + id, country, command);\n         logger.debug(\"response: {}\", response);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODQzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8981#discussion_r530578430", "bodyText": "miIoScheduler.shutdownNow() will automatically cancel any running tasks. So I don't think you need to track the scheduledJobs manually since the miIoScheduler handles it for you.", "author": "cpmeister", "createdAt": "2020-11-25T18:43:54Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -67,7 +72,9 @@\n     protected static final int MAX_QUEUE = 5;\n     protected static final Gson GSON = new GsonBuilder().create();\n \n+    protected ScheduledExecutorService miIoScheduler = scheduler;\n     protected @Nullable ScheduledFuture<?> pollingJob;\n+    protected CopyOnWriteArraySet<ScheduledFuture<?>> scheduledJobs = new CopyOnWriteArraySet<>();", "originalCommit": "78f0e74b76b03920d71688058d8ca818a81fbe56", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b04b8067d7e33a16edbec11a5810f2cda1e745a9", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex 75c2f09e2f..3d2f436a89 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -74,7 +73,6 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n \n     protected ScheduledExecutorService miIoScheduler = scheduler;\n     protected @Nullable ScheduledFuture<?> pollingJob;\n-    protected CopyOnWriteArraySet<ScheduledFuture<?>> scheduledJobs = new CopyOnWriteArraySet<>();\n     protected MiIoDevices miDevice = MiIoDevices.UNKNOWN;\n     protected boolean isIdentified;\n \n"}}, {"oid": "b04b8067d7e33a16edbec11a5810f2cda1e745a9", "url": "https://github.com/openhab/openhab-addons/commit/b04b8067d7e33a16edbec11a5810f2cda1e745a9", "message": "[miio] update with comments from feedback\n\n* remove scheduler tracking\n* improve status setting for cloud communication\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-26T08:10:36Z", "type": "commit"}, {"oid": "6ee2e175ad8cbb4e2ad1dc9861ca24b1eb9e45b0", "url": "https://github.com/openhab/openhab-addons/commit/6ee2e175ad8cbb4e2ad1dc9861ca24b1eb9e45b0", "message": "[miio] update with feedback review\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-26T08:14:01Z", "type": "commit"}, {"oid": "b862800f4cccae64f09e01a731dd67526563c820", "url": "https://github.com/openhab/openhab-addons/commit/b862800f4cccae64f09e01a731dd67526563c820", "message": "Merge updates\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-26T22:58:25Z", "type": "commit"}, {"oid": "085b6b5f7e463e45c40b762d5c52943945576285", "url": "https://github.com/openhab/openhab-addons/commit/085b6b5f7e463e45c40b762d5c52943945576285", "message": "readme update once more\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-11-27T08:11:09Z", "type": "commit"}]}