{"pr_number": 8387, "pr_title": "[miio] support for miot action commands", "pr_createdAt": "2020-09-03T14:49:43Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8387", "timeline": [{"oid": "945a3f8ba79a0ecad72290aa96d5712ae066fbe2", "url": "https://github.com/openhab/openhab-addons/commit/945a3f8ba79a0ecad72290aa96d5712ae066fbe2", "message": "[miio] support for miot action commands\n\n* support for miot action commands\n* new conditional action\n* Implement start/stop vacuum for dreame.vacuum.mc1808\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-03T14:48:15Z", "type": "commit"}, {"oid": "1362dd1df3b49df90f0be72e61b6401031c97b70", "url": "https://github.com/openhab/openhab-addons/commit/1362dd1df3b49df90f0be72e61b6401031c97b70", "message": "[miio] allow for more flexibility by using regex matching in matchValue\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-04T11:38:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjE0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8387#discussion_r483062143", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0)) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0);", "author": "Hilbrand", "createdAt": "2020-09-03T15:22:29Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java", "diffHunk": "@@ -70,6 +76,40 @@ public void setparameterType(String type) {\n         this.commandParameterType = org.openhab.binding.miio.internal.basic.CommandParameterType.fromString(type);\n     }\n \n+    public int getSiid() {\n+        final Integer siid = this.siid;\n+        if (siid != null) {\n+            return siid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setSiid(Integer siid) {\n+        this.siid = siid;\n+    }\n+\n+    public int getAiid() {\n+        final Integer aiid = this.aiid;\n+        if (aiid != null) {\n+            return aiid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setAiid(Integer aiid) {\n+        this.aiid = aiid;\n+    }\n+\n+    public boolean isMiOtAction() {\n+        if (aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0)) {\n+            return true;\n+        } else {\n+            return false;\n+        }", "originalCommit": "945a3f8ba79a0ecad72290aa96d5712ae066fbe2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f3419204ef6acaf958c0343d0fe40af46e0ee72f", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java\nindex b86b81556b..a21e8f7fbd 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java\n\n@@ -103,11 +103,7 @@ public class MiIoDeviceAction {\n     }\n \n     public boolean isMiOtAction() {\n-        if (aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0)) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0);\n     }\n \n     public @Nullable MiIoDeviceActionCondition getCondition() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNzg5OA==", "url": "https://github.com/openhab/openhab-addons/pull/8387#discussion_r483807898", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command.toString(), matching);\n          \n          \n            \n                                LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command, matching);", "author": "Hilbrand", "createdAt": "2020-09-04T19:24:08Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "diffHunk": "@@ -105,6 +107,44 @@\n         return null;\n     }\n \n+    /**\n+     * Check if the command value matches the condition value.\n+     * The condition parameter element should be a Json array, containing Json objects with a matchValue element.\n+     * Optionally it can contain a 'returnValue'element which will be returned in case of match.\n+     * If no match this function will return a null\n+     *\n+     * @param condition.\n+     * @param command\n+     * @param value\n+     * @return returnValue or value in case matching, return null if no match\n+     */\n+    private static @Nullable JsonElement matchValue(MiIoDeviceActionCondition condition, @Nullable Command command,\n+            @Nullable JsonElement value) {\n+        if (condition.getParameters().isJsonArray() && command != null) {\n+            JsonArray conditionArray = condition.getParameters().getAsJsonArray();\n+            for (int i = 0; i < conditionArray.size(); i++) {\n+                if (conditionArray.get(i).isJsonObject() && conditionArray.get(i).getAsJsonObject().has(\"matchValue\")) {\n+                    JsonObject matchCondition = conditionArray.get(i).getAsJsonObject();\n+                    String matchvalue = matchCondition.get(\"matchValue\").getAsString();\n+                    boolean matching = command.toString().matches(matchvalue);\n+                    LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command.toString(), matching);", "originalCommit": "1362dd1df3b49df90f0be72e61b6401031c97b70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f3419204ef6acaf958c0343d0fe40af46e0ee72f", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java\nindex cdeb3f1fec..663ea6e6ea 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java\n\n@@ -127,7 +127,7 @@ public class ActionConditions {\n                     JsonObject matchCondition = conditionArray.get(i).getAsJsonObject();\n                     String matchvalue = matchCondition.get(\"matchValue\").getAsString();\n                     boolean matching = command.toString().matches(matchvalue);\n-                    LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command.toString(), matching);\n+                    LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command, matching);\n                     if (matching) {\n                         if (matchCondition.has(\"returnValue\")) {\n                             return matchCondition.get(\"returnValue\");\n"}}, {"oid": "f3419204ef6acaf958c0343d0fe40af46e0ee72f", "url": "https://github.com/openhab/openhab-addons/commit/f3419204ef6acaf958c0343d0fe40af46e0ee72f", "message": "[miio] improvements from review feedback\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-04T21:28:37Z", "type": "commit"}]}