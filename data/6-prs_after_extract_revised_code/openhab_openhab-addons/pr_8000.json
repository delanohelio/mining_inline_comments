{"pr_number": 8000, "pr_title": "[dynamodb] Catch all for any unexpected exceptions", "pr_createdAt": "2020-06-24T11:33:33Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8000", "timeline": [{"oid": "a5f8af2d35061a61555956a1dcad4926f6c395d9", "url": "https://github.com/openhab/openhab-addons/commit/a5f8af2d35061a61555956a1dcad4926f6c395d9", "message": "[dynamodb] Catch all for any unexpected exceptions\n\nWe ensure that errors are logged, and scheduled task is not halted.\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>", "committedDate": "2020-06-24T11:31:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r444830800", "bodyText": "If you catch you should use RuntimeException while your changing code here you could change the use of Runnable into a Java 8 notation.", "author": "Hilbrand", "createdAt": "2020-06-24T11:36:10Z", "path": "bundles/org.openhab.persistence.dynamodb/src/main/java/org/openhab/persistence/dynamodb/internal/DynamoDBPersistenceService.java", "diffHunk": "@@ -221,7 +221,17 @@ public void activate(final @Nullable BundleContext bundleContext, final Map<Stri\n             writeBufferedDataFuture = scheduler.scheduleWithFixedDelay(new Runnable() {\n                 @Override\n                 public void run() {\n-                    DynamoDBPersistenceService.this.flushBufferedData();\n+                    try {\n+                        DynamoDBPersistenceService.this.flushBufferedData();\n+                    } catch (Exception e) {", "originalCommit": "a5f8af2d35061a61555956a1dcad4926f6c395d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1MDgzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r444950839", "bodyText": "I do want to catch checked exceptions as well in case they appear at some point, not just unchecked (RuntimeException).\nI tried to explain this in the comments\n                       // We want to catch all unexpected exceptions since all unhandled exceptions make\n                        // ScheduledExecutorService halt the regular running of the task.\n                        // It is better to print out the exception, and try again\n                        // (on next cycle)\n\nWhat do you think?", "author": "ssalonen", "createdAt": "2020-06-24T14:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUyMw==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r444978523", "bodyText": "But checked exceptions can only be thrown when a methods says it throws such an exception. So unless a method indicates it throws Exception you should not use this generic catch. You would get a compile error if you don't catch a checked exception, because the method run doesn't throw any exception. Only unchecked exceptions aka RuntimeExceptions can be thrown unexpected. Therefore it's good practice to catch only RuntimeException and any thrown checked exception. You won't miss any exceptions that way.", "author": "Hilbrand", "createdAt": "2020-06-24T15:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwMjY1NA==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r445002654", "bodyText": "I understand, currently the method is not declaring any checked exceptions.\nIn case it will have checked exceptions some day, I do want to handle them exactly the same way as runtime exceptions... By retrying again automatically after a while.\nI generally agree that catching all exceptions is typically bad. However, in this case I do want it to avoid halting the regular schedule set by scheduleWithFixedDelay. See e.g. https://stackoverflow.com/questions/6894595/scheduledexecutorservice-exception-handling for further motivation.\nWith Errors I consider it understandable that this regular cycle is broken, so those are not catched.\nI hope this clarifies my intention.", "author": "ssalonen", "createdAt": "2020-06-24T15:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0OTU2MA==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r445049560", "bodyText": "I have no problem with catching all exceptions, just with using Exception instead of RuntimeException. For example if you would get the checked exception InteruptedException you should probably stop the scheduler. So not all checked Exceptions should be handled the same, and if you catch the generic Exception you might miss that case. There is a reason these are checked exceptions. Hence not to use Exception, but use RuntimeException. This will have the effect in that it give you the means to let the scheduler keep running.", "author": "Hilbrand", "createdAt": "2020-06-24T17:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA1Mzk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8000#discussion_r445053988", "bodyText": "Ah good point indeed with the interruption as example. And now I reread your comment on the Runnable.run -- indeed it does not allow checked exceptions and as such programmer will be \"notified\" and adjusting the exception catching logic is needed.\nAgree now with your suggestion and modify the code accordingly. \ud83d\udc4d", "author": "ssalonen", "createdAt": "2020-06-24T17:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzMDgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "979e021755c5d02ce1ff643df9956e8d6fd611a3", "chunk": "diff --git a/bundles/org.openhab.persistence.dynamodb/src/main/java/org/openhab/persistence/dynamodb/internal/DynamoDBPersistenceService.java b/bundles/org.openhab.persistence.dynamodb/src/main/java/org/openhab/persistence/dynamodb/internal/DynamoDBPersistenceService.java\nindex 8e4a2c8cfe..0666c84f2c 100644\n--- a/bundles/org.openhab.persistence.dynamodb/src/main/java/org/openhab/persistence/dynamodb/internal/DynamoDBPersistenceService.java\n+++ b/bundles/org.openhab.persistence.dynamodb/src/main/java/org/openhab/persistence/dynamodb/internal/DynamoDBPersistenceService.java\n\n@@ -223,7 +223,7 @@ public class DynamoDBPersistenceService extends AbstractBufferedPersistenceServi\n                 public void run() {\n                     try {\n                         DynamoDBPersistenceService.this.flushBufferedData();\n-                    } catch (Exception e) {\n+                    } catch (RuntimeException e) {\n                         // We want to catch all unexpected exceptions since all unhandled exceptions make\n                         // ScheduledExecutorService halt the regular running of the task.\n                         // It is better to print out the exception, and try again\n"}}, {"oid": "979e021755c5d02ce1ff643df9956e8d6fd611a3", "url": "https://github.com/openhab/openhab-addons/commit/979e021755c5d02ce1ff643df9956e8d6fd611a3", "message": "[dynamodb] use runtime exception\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>", "committedDate": "2020-06-24T17:42:41Z", "type": "commit"}]}