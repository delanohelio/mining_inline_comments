{"pr_number": 7797, "pr_title": "[Seneye] Bug fix for using Pond or Home sensors.", "pr_createdAt": "2020-05-26T21:09:25Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7797", "timeline": [{"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a", "url": "https://github.com/openhab/openhab-addons/commit/55fb6fd4c23ac5faeaf25d055842e101b461532a", "message": "[Seneye] Bug fix for using Pond or Home sensors.\n\nThis is a bug fix for Seneye binding when using Pond or Home Sensors.\nPreviously the binding would fail as it would try and pull readings for\nChannels that didn't exist on these sensors.\n\nSigned-off-by: MickUrsell  <bindings@mru-photography.co.uk>", "committedDate": "2020-05-26T20:42:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNTA4NA==", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r430725084", "bodyText": "Maybe log what type 1,2 or 3 actually is ? Pond/Home/Reef", "author": "nikotanghe", "createdAt": "2020-05-26T21:44:10Z", "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"found that sensor is type 3\");", "originalCommit": "55fb6fd4c23ac5faeaf25d055842e101b461532a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyNzc1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r430927754", "bodyText": "Hi Niko,\nMany thanks for the feedback. I have changed the log as suggested.\nThis binding has been great for me, thanks for creating it.", "author": "MickUrsell", "createdAt": "2020-05-27T07:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNTA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "93b78304bdabdf6cb6917d38bbd276cd4469cbba", "chunk": "diff --git a/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java b/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\nindex cfbed8033f..62581ef12d 100644\n--- a/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n+++ b/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n\n@@ -70,7 +70,7 @@ public final class SeneyeHandler extends BaseThingHandler implements ReadingsUpd\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n             if (seneyeService.seneyeType == 3) {\n-                logger.debug(\"found that sensor is type 3\");\n+                logger.debug(\"Updating readings for Reef type sensor\");\n                 updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n                 updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n                 updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n"}}, {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba", "url": "https://github.com/openhab/openhab-addons/commit/93b78304bdabdf6cb6917d38bbd276cd4469cbba", "message": "[Seneye] changed the log description of sensor\n\nLogs now show name of sensor type being updated, following review\n\n\nSigned-off-by: MickUrsell <bindings@mru-photography.co.uk>", "committedDate": "2020-05-27T07:53:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3NDA5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r431474097", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (seneyeService.seneyeType == 3) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Reef type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 2) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Pond type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 1) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Home type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        logger.debug(\"Updating readings for sensor type {}\", seneyeService.seneyeType);\n          \n          \n            \n                        switch (seneyeService.seneyeType) {\n          \n          \n            \n                            case 3: \n          \n          \n            \n                                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            case 2:\n          \n          \n            \n                                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            case 1:\n          \n          \n            \n                                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }", "author": "cpmeister", "createdAt": "2020-05-27T22:16:35Z", "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"Updating readings for Reef type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n+                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 2) {\n+                logger.debug(\"Updating readings for Pond type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 1) {\n+                logger.debug(\"Updating readings for Home type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }", "originalCommit": "93b78304bdabdf6cb6917d38bbd276cd4469cbba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a21a4c038f8416115ae65f802d3c24ec3e6e7306", "chunk": "diff --git a/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java b/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\nindex 62581ef12d..3be2de5b62 100644\n--- a/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n+++ b/bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n\n@@ -69,47 +69,25 @@ public final class SeneyeHandler extends BaseThingHandler implements ReadingsUpd\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            if (seneyeService.seneyeType == 3) {\n-                logger.debug(\"Updating readings for Reef type sensor\");\n-                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n-            }\n-            if (seneyeService.seneyeType == 2) {\n-                logger.debug(\"Updating readings for Pond type sensor\");\n-                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n-            }\n-            if (seneyeService.seneyeType == 1) {\n-                logger.debug(\"Updating readings for Home type sensor\");\n-                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            logger.debug(\"Updating readings for sensor type {}\", seneyeService.seneyeType);\n+            switch (seneyeService.seneyeType) {\n+                case 3: \n+                    updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n+                    updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n+                    updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n+                    updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n+                case 2:\n+                    updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                case 1:\n+                    updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                    updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                    updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                    updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                    updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                    updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                    updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                    updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                    updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n             }\n         }\n \n"}}, {"oid": "a21a4c038f8416115ae65f802d3c24ec3e6e7306", "url": "https://github.com/openhab/openhab-addons/commit/a21a4c038f8416115ae65f802d3c24ec3e6e7306", "message": "Update bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n\nCo-authored-by: cpmeister <mistercpp2000@gmail.com>", "committedDate": "2020-05-28T16:32:21Z", "type": "commit"}]}