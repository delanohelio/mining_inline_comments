{"pr_number": 8970, "pr_title": "[bluetooth] Changed characteristic read/write to use CompletableFutures", "pr_createdAt": "2020-11-07T06:39:58Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8970", "timeline": [{"oid": "1a5efb5d290ac758d4e79fb0a9e12efa9e376522", "url": "https://github.com/openhab/openhab-addons/commit/1a5efb5d290ac758d4e79fb0a9e12efa9e376522", "message": "Changed characteristic read/write to use CompletableFutures\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-07T06:13:24Z", "type": "commit"}, {"oid": "2c4ce7683fb3d8cf6433369b7c7031de1759abd4", "url": "https://github.com/openhab/openhab-addons/commit/2c4ce7683fb3d8cf6433369b7c7031de1759abd4", "message": "update javadocs\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-07T07:15:15Z", "type": "commit"}, {"oid": "a13b44bbb4fbbf31ddbcc146897e01c39d17f818", "url": "https://github.com/openhab/openhab-addons/commit/a13b44bbb4fbbf31ddbcc146897e01c39d17f818", "message": "ready for review\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-09T05:03:53Z", "type": "commit"}, {"oid": "d306ae5f5b4937f2906d41a01ee84496731d74c8", "url": "https://github.com/openhab/openhab-addons/commit/d306ae5f5b4937f2906d41a01ee84496731d74c8", "message": "Remove use of apache commons StringUtils\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-09T05:09:56Z", "type": "commit"}, {"oid": "7f2e1d6680f710fa81c51afe1f79fdcc3298b832", "url": "https://github.com/openhab/openhab-addons/commit/7f2e1d6680f710fa81c51afe1f79fdcc3298b832", "message": "Add idle disconnect config\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-09T05:22:12Z", "type": "commit"}, {"oid": "e16984aedfb7a3e193818d612bee3b0b09ab4007", "url": "https://github.com/openhab/openhab-addons/commit/e16984aedfb7a3e193818d612bee3b0b09ab4007", "message": "make serviceDiscovered volatile\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-09T21:54:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3OTQ3OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8970#discussion_r523379479", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (device.connect()) {\n          \n          \n            \n                        if (!device.connect()) {", "author": "cpmeister", "createdAt": "2020-11-14T05:29:17Z", "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java", "diffHunk": "@@ -12,108 +12,237 @@\n  */\n package org.openhab.binding.bluetooth;\n \n-import java.util.Set;\n-import java.util.concurrent.CopyOnWriteArraySet;\n-import java.util.concurrent.ScheduledFuture;\n+import java.util.UUID;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n \n-import org.eclipse.jdt.annotation.DefaultLocation;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.binding.bluetooth.BluetoothCharacteristic.GattCharacteristic;\n import org.openhab.binding.bluetooth.BluetoothDevice.ConnectionState;\n import org.openhab.binding.bluetooth.notification.BluetoothConnectionStatusNotification;\n-import org.openhab.core.library.types.DecimalType;\n-import org.openhab.core.thing.Channel;\n-import org.openhab.core.thing.ChannelUID;\n-import org.openhab.core.thing.DefaultSystemChannelTypeProvider;\n+import org.openhab.core.common.NamedThreadFactory;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingStatus;\n import org.openhab.core.thing.ThingStatusDetail;\n-import org.openhab.core.thing.binding.builder.ChannelBuilder;\n-import org.openhab.core.thing.binding.builder.ThingBuilder;\n-import org.openhab.core.thing.type.ChannelTypeUID;\n-import org.openhab.core.types.Command;\n-import org.openhab.core.types.RefreshType;\n import org.openhab.core.util.HexUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- * This is a handler for generic Bluetooth devices in connected mode, which at the same time can be used\n- * as a base implementation for more specific thing handlers.\n+ * This is a base implementation for more specific thing handlers that require constant connection to bluetooth devices.\n  *\n  * @author Kai Kreuzer - Initial contribution and API\n- *\n  */\n-@NonNullByDefault({ DefaultLocation.PARAMETER, DefaultLocation.RETURN_TYPE, DefaultLocation.ARRAY_CONTENTS,\n-        DefaultLocation.TYPE_ARGUMENT, DefaultLocation.TYPE_BOUND, DefaultLocation.TYPE_PARAMETER })\n+@NonNullByDefault\n public class ConnectedBluetoothHandler extends BeaconBluetoothHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(ConnectedBluetoothHandler.class);\n-    private ScheduledFuture<?> connectionJob;\n+    private @Nullable Future<?> reconnectJob;\n+    private @Nullable Future<?> pendingDisconnect;\n \n-    // internal flag for the service resolution status\n-    protected volatile boolean resolved = false;\n+    private boolean connectOnDemand;\n+    private int idleDisconnectDelay = 1000;\n \n-    protected final Set<BluetoothCharacteristic> deviceCharacteristics = new CopyOnWriteArraySet<>();\n+    private @Nullable ScheduledExecutorService connectionTaskExecutor;\n \n     public ConnectedBluetoothHandler(Thing thing) {\n         super(thing);\n     }\n \n     @Override\n     public void initialize() {\n+\n+        // super.initialize adds callbacks that might require the connectionTaskExecutor to be present, so we initialize\n+        // the connectionTaskExecutor first\n+        ScheduledThreadPoolExecutor executor = new ScheduledThreadPoolExecutor(1,\n+                new NamedThreadFactory(\"bluetooth-connection\" + thing.getThingTypeUID(), true));\n+        connectionTaskExecutor = executor;\n+\n         super.initialize();\n \n-        connectionJob = scheduler.scheduleWithFixedDelay(() -> {\n-            if (device.getConnectionState() != ConnectionState.CONNECTED) {\n-                device.connect();\n-                // we do not set the Thing status here, because we will anyhow receive a call to onConnectionStateChange\n-            }\n-            updateRSSI();\n-        }, 0, 30, TimeUnit.SECONDS);\n+        Object connectOnDemandRaw = getConfig().get(BluetoothBindingConstants.CONFIGURATION_CONNECT_ON_DEMAND);\n+        connectOnDemand = Boolean.TRUE.equals(connectOnDemandRaw);\n+\n+        Object idleDisconnectDelayRaw = getConfig().get(BluetoothBindingConstants.CONFIGURATION_IDLE_DISCONNECT_DELAY);\n+        idleDisconnectDelay = 1000;\n+        if (idleDisconnectDelayRaw instanceof Number) {\n+            idleDisconnectDelay = ((Number) idleDisconnectDelayRaw).intValue();\n+        }\n+\n+        if (!connectOnDemand) {\n+            reconnectJob = executor.scheduleWithFixedDelay(() -> {\n+                try {\n+                    if (device.getConnectionState() != ConnectionState.CONNECTED) {\n+                        device.connect();\n+                        // we do not set the Thing status here, because we will anyhow receive a call to\n+                        // onConnectionStateChange\n+                    } else {\n+                        // just in case it was already connected to begin with\n+                        updateStatus(ThingStatus.ONLINE);\n+                        if (!device.isServicesDiscovered() && !device.discoverServices()) {\n+                            logger.debug(\"Error while discovering services\");\n+                        }\n+                    }\n+                } catch (RuntimeException ex) {\n+                    logger.warn(\"Unexpected error occurred\", ex);\n+                }\n+            }, 0, 30, TimeUnit.SECONDS);\n+        }\n     }\n \n     @Override\n     public void dispose() {\n-        if (connectionJob != null) {\n-            connectionJob.cancel(true);\n-            connectionJob = null;\n+        cancel(reconnectJob);\n+        reconnectJob = null;\n+        cancel(pendingDisconnect);\n+        pendingDisconnect = null;\n+\n+        super.dispose();\n+\n+        shutdown(connectionTaskExecutor);\n+        connectionTaskExecutor = null;\n+    }\n+\n+    private static void cancel(@Nullable Future<?> future) {\n+        if (future != null) {\n+            future.cancel(true);\n         }\n-        scheduler.submit(() -> {\n-            try {\n-                deviceLock.lock();\n-                if (device != null) {\n-                    device.removeListener(this);\n-                    device.disconnect();\n-                    device = null;\n-                }\n-            } finally {\n-                deviceLock.unlock();\n+    }\n+\n+    private void shutdown(@Nullable ScheduledExecutorService executor) {\n+        if (executor != null) {\n+            executor.shutdownNow();\n+        }\n+    }\n+\n+    private ScheduledExecutorService getConnectionTaskExecutor() {\n+        var executor = connectionTaskExecutor;\n+        if (executor == null) {\n+            throw new IllegalStateException(\"characteristicScheduler has not been initialized\");\n+        }\n+        return executor;\n+    }\n+\n+    private void scheduleDisconnect() {\n+        cancel(pendingDisconnect);\n+        pendingDisconnect = getConnectionTaskExecutor().schedule(device::disconnect, idleDisconnectDelay,\n+                TimeUnit.MILLISECONDS);\n+    }\n+\n+    private void connectAndWait() throws ConnectionException, TimeoutException, InterruptedException {\n+        if (device.getConnectionState() == ConnectionState.CONNECTED) {\n+            return;\n+        }\n+        if (device.getConnectionState() != ConnectionState.CONNECTING) {\n+            if (device.connect()) {", "originalCommit": "e16984aedfb7a3e193818d612bee3b0b09ab4007", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "502e1ab6e6e25f2f4322dacf779655e3f233b0bb", "chunk": "diff --git a/bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java b/bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java\nindex f4bf3d4eb1..74d544c4d8 100644\n--- a/bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java\n+++ b/bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java\n\n@@ -20,11 +20,13 @@ import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.ScheduledThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n+import java.util.function.Function;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.binding.bluetooth.BluetoothDevice.ConnectionState;\n import org.openhab.binding.bluetooth.notification.BluetoothConnectionStatusNotification;\n+import org.openhab.binding.bluetooth.util.RetryFuture;\n import org.openhab.core.common.NamedThreadFactory;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingStatus;\n"}}, {"oid": "cad6f8f7b497e174ad2264c89d688463cfd3275d", "url": "https://github.com/openhab/openhab-addons/commit/cad6f8f7b497e174ad2264c89d688463cfd3275d", "message": "Merge remote-tracking branch 'origin/main' into bluetooth-connect\n\nConflicts:\n\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/BlueGigaBluetoothDevice.java\n\tbundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/BluetoothCharacteristic.java\n\tbundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/BluetoothDescriptor.java\n\tbundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/ConnectedBluetoothHandler.java\n\tbundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java\n\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-27T02:35:29Z", "type": "commit"}, {"oid": "4fe1843ffbe9f9fe6f6dad01f998f85773aea315", "url": "https://github.com/openhab/openhab-addons/commit/4fe1843ffbe9f9fe6f6dad01f998f85773aea315", "message": "Getting things working again\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-11-27T06:09:01Z", "type": "commit"}, {"oid": "cea9da0d73fef9b5a0b186d90bef511c7e461761", "url": "https://github.com/openhab/openhab-addons/commit/cea9da0d73fef9b5a0b186d90bef511c7e461761", "message": "Merge branch 'main' of https://github.com/openhab/openhab-addons into\nbluetooth-connect\n\n# Conflicts:\n#\tbundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/internal/BlueZBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java\n\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-01-26T23:23:18Z", "type": "commit"}, {"oid": "502e1ab6e6e25f2f4322dacf779655e3f233b0bb", "url": "https://github.com/openhab/openhab-addons/commit/502e1ab6e6e25f2f4322dacf779655e3f233b0bb", "message": "Fix errors and cleanup code.\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-01-31T22:18:22Z", "type": "commit"}, {"oid": "24207df81468632da5eb9ed8da291ede44a10dc5", "url": "https://github.com/openhab/openhab-addons/commit/24207df81468632da5eb9ed8da291ede44a10dc5", "message": "Make `alwaysConnected` enabled by default to remain backwards compatible\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-02-01T03:45:50Z", "type": "commit"}, {"oid": "201ea05cb4903b79e71f45cb32680a56cd83441f", "url": "https://github.com/openhab/openhab-addons/commit/201ea05cb4903b79e71f45cb32680a56cd83441f", "message": "Minor cleanup\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-02-01T03:54:56Z", "type": "commit"}, {"oid": "2bbfb3d8469cbb40f2cb181fef33c9e2a3128741", "url": "https://github.com/openhab/openhab-addons/commit/2bbfb3d8469cbb40f2cb181fef33c9e2a3128741", "message": "Minor cleanup\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-02-04T21:45:27Z", "type": "commit"}, {"oid": "ec5991745778f6908f2eea97657e6cda600c0f57", "url": "https://github.com/openhab/openhab-addons/commit/ec5991745778f6908f2eea97657e6cda600c0f57", "message": "More cleanup\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-02-04T21:55:51Z", "type": "commit"}, {"oid": "1fb070e3226519e83f76e631da14837d80f43da6", "url": "https://github.com/openhab/openhab-addons/commit/1fb070e3226519e83f76e631da14837d80f43da6", "message": "Minor fix\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-02-04T22:31:47Z", "type": "commit"}, {"oid": "de364006ecd98bd96abbba6ed2096b85a0995392", "url": "https://github.com/openhab/openhab-addons/commit/de364006ecd98bd96abbba6ed2096b85a0995392", "message": "Merge branch 'main' of https://github.com/openhab/openhab-addons into\nbluetooth-connect\n\n# Conflicts:\n#\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/BlueGigaBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/internal/BlueZBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth.generic/src/main/java/org/openhab/binding/bluetooth/generic/internal/GenericBluetoothHandler.java\n#\tbundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/DelegateBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth/src/test/java/org/openhab/binding/bluetooth/MockBluetoothDevice.java\n\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2021-03-03T20:59:21Z", "type": "commit"}]}