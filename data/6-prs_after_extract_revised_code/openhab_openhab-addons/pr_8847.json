{"pr_number": 8847, "pr_title": "[icalendar] Describe download exceptions a bit more detailed.", "pr_createdAt": "2020-10-23T19:46:28Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8847", "timeline": [{"oid": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45", "url": "https://github.com/openhab/openhab-addons/commit/05d6c2c372c34ba788a808c0e267b47fd6eaaa45", "message": "[icalendar] Describe download exceptions a bit more detailed.\n\nFixes #8846\n\nSigned-off-by: Michael Wodniok <michi@noorganization.org>", "committedDate": "2020-10-23T19:43:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MDk2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511240961", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Download of calendar failed while execution.\");\n          \n          \n            \n                        logger.warn(\"Download of calendar failed.\");", "author": "cpmeister", "createdAt": "2020-10-24T01:37:32Z", "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "diffHunk": "@@ -100,8 +102,17 @@ public void run() {\n         Response response;\n         try {\n             response = asyncListener.get(HTTP_TIMEOUT_SECS, TimeUnit.SECONDS);\n-        } catch (InterruptedException | TimeoutException | ExecutionException e1) {\n-            logger.warn(\"Response for calendar request could not be retrieved. Error message is: {}\", e1.getMessage());\n+        } catch (InterruptedException e1) {\n+            logger.warn(\"Download of calendar was interrupted.\");\n+            logger.debug(\"InterruptedException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (TimeoutException e1) {\n+            logger.warn(\"Download of calendar timed out (waited too long for headers).\");\n+            logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (ExecutionException e1) {\n+            logger.warn(\"Download of calendar failed while execution.\");", "originalCommit": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "305d21876b516ab4dbdafe4a867f2469b074d3ba", "chunk": "diff --git a/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java b/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\nindex 6d39f5c644..b77d39810e 100644\n--- a/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\n+++ b/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\n\n@@ -111,8 +111,8 @@ class PullJob implements Runnable {\n             logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n             return;\n         } catch (ExecutionException e1) {\n-            logger.warn(\"Download of calendar failed while execution.\");\n-            logger.warn(\"ExecutionException message is: {}\", e1.getMessage());\n+            logger.warn(\"Download of calendar failed.\");\n+            logger.debug(\"ExecutionException message is: {}\", e1.getCause().getMessage());\n             return;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MTU2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511241562", "bodyText": "An ExecutionException is used to wrap other exceptions, so it never contains any useful message on its own.\nIt is better to log the cause exception instead.\nAlso, Is this supposed to be debug as well?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"ExecutionException message is: {}\", e1.getMessage());\n          \n          \n            \n                        logger.debug(\"ExecutionException message is: {}\", e1.getCause().getMessage());", "author": "cpmeister", "createdAt": "2020-10-24T01:38:56Z", "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "diffHunk": "@@ -100,8 +102,17 @@ public void run() {\n         Response response;\n         try {\n             response = asyncListener.get(HTTP_TIMEOUT_SECS, TimeUnit.SECONDS);\n-        } catch (InterruptedException | TimeoutException | ExecutionException e1) {\n-            logger.warn(\"Response for calendar request could not be retrieved. Error message is: {}\", e1.getMessage());\n+        } catch (InterruptedException e1) {\n+            logger.warn(\"Download of calendar was interrupted.\");\n+            logger.debug(\"InterruptedException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (TimeoutException e1) {\n+            logger.warn(\"Download of calendar timed out (waited too long for headers).\");\n+            logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (ExecutionException e1) {\n+            logger.warn(\"Download of calendar failed while execution.\");\n+            logger.warn(\"ExecutionException message is: {}\", e1.getMessage());", "originalCommit": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMxOTI2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511319261", "bodyText": "Yes, it's better to log the cause if the Exception itself is not explanatory.  I thought, warn would also fit for this type of exception as it's quite general. But i don't have any problem to move it to debug.", "author": "daMihe", "createdAt": "2020-10-24T04:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MTU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "305d21876b516ab4dbdafe4a867f2469b074d3ba", "chunk": "diff --git a/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java b/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\nindex 6d39f5c644..b77d39810e 100644\n--- a/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\n+++ b/bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java\n\n@@ -111,8 +111,8 @@ class PullJob implements Runnable {\n             logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n             return;\n         } catch (ExecutionException e1) {\n-            logger.warn(\"Download of calendar failed while execution.\");\n-            logger.warn(\"ExecutionException message is: {}\", e1.getMessage());\n+            logger.warn(\"Download of calendar failed.\");\n+            logger.debug(\"ExecutionException message is: {}\", e1.getCause().getMessage());\n             return;\n         }\n \n"}}, {"oid": "305d21876b516ab4dbdafe4a867f2469b074d3ba", "url": "https://github.com/openhab/openhab-addons/commit/305d21876b516ab4dbdafe4a867f2469b074d3ba", "message": "[icalendar] Apply suggestions from code review\r\n\r\nSigned-off-by: Michael Wodniok <michi@noorganization.org>\r\nAlso-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>", "committedDate": "2020-10-24T04:42:35Z", "type": "commit"}]}