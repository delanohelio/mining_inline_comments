{"pr_number": 7813, "pr_title": "[hue] Never log the user name", "pr_createdAt": "2020-05-28T11:20:42Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7813", "timeline": [{"oid": "b2232f1ceb657c530d92419ec1b3dae38ed2a375", "url": "https://github.com/openhab/openhab-addons/commit/b2232f1ceb657c530d92419ec1b3dae38ed2a375", "message": "[hue] Never log the user name\n\nConsole command to display the user name\n\nRelated to #3990\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-28T11:29:45Z", "type": "commit"}, {"oid": "b2232f1ceb657c530d92419ec1b3dae38ed2a375", "url": "https://github.com/openhab/openhab-addons/commit/b2232f1ceb657c530d92419ec1b3dae38ed2a375", "message": "[hue] Never log the user name\n\nConsole command to display the user name\n\nRelated to #3990\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-28T11:29:45Z", "type": "forcePushed"}, {"oid": "b2232f1ceb657c530d92419ec1b3dae38ed2a375", "url": "https://github.com/openhab/openhab-addons/commit/b2232f1ceb657c530d92419ec1b3dae38ed2a375", "message": "[hue] Never log the user name\n\nConsole command to display the user name\n\nRelated to #3990\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-28T11:29:45Z", "type": "forcePushed"}, {"oid": "2d2cf014d24ff26bb878b5b47497d4d6a75fc095", "url": "https://github.com/openhab/openhab-addons/commit/2d2cf014d24ff26bb878b5b47497d4d6a75fc095", "message": "getUsages() simplified\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-30T19:00:23Z", "type": "commit"}, {"oid": "bf1982876b759596cf5d23daeb321cdca6a91201", "url": "https://github.com/openhab/openhab-addons/commit/bf1982876b759596cf5d23daeb321cdca6a91201", "message": "Cjhanged way to get the bridge handler\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-31T09:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r433559238", "bodyText": "The lack of a handler doesn't mean that the provided bridge ID was a bad one.", "author": "cpmeister", "createdAt": "2020-06-02T00:35:14Z", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/console/HueCommandExtension.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hue.internal.console;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingRegistry;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.io.console.Console;\n+import org.eclipse.smarthome.io.console.extensions.AbstractConsoleCommandExtension;\n+import org.eclipse.smarthome.io.console.extensions.ConsoleCommandExtension;\n+import org.openhab.binding.hue.internal.handler.HueBridgeHandler;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The {@link HueCommandExtension} is responsible for handling console commands\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+\n+@NonNullByDefault\n+@Component(service = ConsoleCommandExtension.class)\n+public class HueCommandExtension extends AbstractConsoleCommandExtension {\n+\n+    private static final String USER_NAME = \"username\";\n+\n+    private final ThingRegistry thingRegistry;\n+\n+    @Activate\n+    public HueCommandExtension(final @Reference ThingRegistry thingRegistry) {\n+        super(\"hue\", \"Interact with the hue binding.\");\n+        this.thingRegistry = thingRegistry;\n+    }\n+\n+    @Override\n+    public void execute(String[] args, Console console) {\n+        if (args.length == 2) {\n+            HueBridgeHandler bridgeHandler = null;\n+            try {\n+                ThingUID thingUID = new ThingUID(args[0]);\n+                Thing thing = thingRegistry.get(thingUID);\n+                if (thing != null) {\n+                    ThingHandler thingHandler = thing.getHandler();\n+                    if (thingHandler instanceof HueBridgeHandler) {\n+                        bridgeHandler = (HueBridgeHandler) thingHandler;\n+                    }\n+                }\n+            } catch (IllegalArgumentException e) {\n+                bridgeHandler = null;\n+            }\n+            if (bridgeHandler == null) {\n+                console.println(\"Bad bridge id '\" + args[0] + \"'\");", "originalCommit": "bf1982876b759596cf5d23daeb321cdca6a91201", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTU5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r433559593", "bodyText": "You should log something different depending on if the handler was null vs the thing was null.", "author": "cpmeister", "createdAt": "2020-06-02T00:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1Njc4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r433656789", "bodyText": "I am a little surprised because this comment comes after few other PRs with the same code you recently reviewed without any such comment.\nWhat would be the case with a null handler ? If the bundle is stopped for example ? What could be the clear message to display to the user ?", "author": "lolodomo", "createdAt": "2020-06-02T06:51:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc5NDQ4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r433794489", "bodyText": "If the bundle is stopped, the console command will not be accessible.\nThe case you ask to handle is probably only if the command is run during the startup of the binding, before the thing handler is initialized. Very low probable to happen in practice.", "author": "lolodomo", "createdAt": "2020-06-02T11:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA0NTU3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r434045578", "bodyText": "Well you can always disable things without stopping the bundle.\nThe only reason that I pointed this change out is because I'm a better reviewer than I was yesterday. \ud83d\ude42", "author": "cpmeister", "createdAt": "2020-06-02T17:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3Mjk4NA==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r434172984", "bodyText": "I will have to update other bindings in this case,", "author": "lolodomo", "createdAt": "2020-06-02T21:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNw==", "url": "https://github.com/openhab/openhab-addons/pull/7813#discussion_r434188517", "bodyText": "Ok, changed.\nIn fact, there are 3 different cases, so 3 different messages.", "author": "lolodomo", "createdAt": "2020-06-02T21:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1OTIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "068dc04fc1cedbe7e12de79ac36ef10ec5813bbf", "chunk": "diff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/console/HueCommandExtension.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/console/HueCommandExtension.java\nindex 0474653441..f32d13144c 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/console/HueCommandExtension.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/console/HueCommandExtension.java\n\n@@ -51,21 +51,29 @@ public class HueCommandExtension extends AbstractConsoleCommandExtension {\n     @Override\n     public void execute(String[] args, Console console) {\n         if (args.length == 2) {\n-            HueBridgeHandler bridgeHandler = null;\n+            Thing thing = null;\n             try {\n                 ThingUID thingUID = new ThingUID(args[0]);\n-                Thing thing = thingRegistry.get(thingUID);\n-                if (thing != null) {\n-                    ThingHandler thingHandler = thing.getHandler();\n-                    if (thingHandler instanceof HueBridgeHandler) {\n-                        bridgeHandler = (HueBridgeHandler) thingHandler;\n-                    }\n-                }\n+                thing = thingRegistry.get(thingUID);\n             } catch (IllegalArgumentException e) {\n-                bridgeHandler = null;\n+                thing = null;\n             }\n-            if (bridgeHandler == null) {\n-                console.println(\"Bad bridge id '\" + args[0] + \"'\");\n+            ThingHandler thingHandler = null;\n+            HueBridgeHandler bridgeHandler = null;\n+            if (thing != null) {\n+                thingHandler = thing.getHandler();\n+                if (thingHandler instanceof HueBridgeHandler) {\n+                    bridgeHandler = (HueBridgeHandler) thingHandler;\n+                }\n+            }\n+            if (thing == null) {\n+                console.println(\"Bad thing id '\" + args[0] + \"'\");\n+                printUsage(console);\n+            } else if (thingHandler == null) {\n+                console.println(\"No handler initialized for the thing id '\" + args[0] + \"'\");\n+                printUsage(console);\n+            } else if (bridgeHandler == null) {\n+                console.println(\"'\" + args[0] + \"' is not a hue bridge id\");\n                 printUsage(console);\n             } else {\n                 switch (args[1]) {\n"}}, {"oid": "068dc04fc1cedbe7e12de79ac36ef10ec5813bbf", "url": "https://github.com/openhab/openhab-addons/commit/068dc04fc1cedbe7e12de79ac36ef10ec5813bbf", "message": "More detailed error message in case of bad bridge id argument\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-06-02T21:31:30Z", "type": "commit"}]}