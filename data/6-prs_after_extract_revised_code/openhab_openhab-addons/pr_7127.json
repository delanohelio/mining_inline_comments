{"pr_number": 7127, "pr_title": "[lgwebos] Fix Channel Subscription and Support RefreshType", "pr_createdAt": "2020-03-08T19:26:28Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7127", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTU1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389615559", "bodyText": "Blank line to be suppressed.", "author": "lolodomo", "createdAt": "2020-03-09T11:58:46Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "diffHunk": "@@ -94,11 +100,16 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n \n     @Override\n     protected Optional<ServiceSubscription<AppInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeRunningApp(new ResponseListener<AppInfo>() {\n+        return Optional.of(handler.getSocket().subscribeRunningApp(createResponseListener(channelId, handler)));\n+", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java\nindex 5a0b6da724..e16949d0ee 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java\n\n@@ -100,16 +101,11 @@ public class LauncherApplication extends BaseChannelHandler<AppInfo> {\n \n     @Override\n     protected Optional<ServiceSubscription<AppInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeRunningApp(createResponseListener(channelId, handler)));\n-\n-    }\n-\n-    private ResponseListener<AppInfo> createResponseListener(String channelId, LGWebOSHandler handler) {\n-        return new ResponseListener<AppInfo>() {\n+        return Optional.of(handler.getSocket().subscribeRunningApp(new ResponseListener<AppInfo>() {\n \n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving application: {}.\", error);\n+                logger.debug(\"Error in listening to application changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjYwOA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389616608", "bodyText": "WARN level is really too high (look at the OH recommendations).\nShould be DEBUG, max INFO.", "author": "lolodomo", "createdAt": "2020-03-09T12:01:16Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/MediaControlPlayer.java", "diffHunk": "@@ -42,7 +45,8 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n         } else if (RewindFastforwardType.REWIND == command) {\n             handler.getSocket().rewind(getDefaultResponseListener());\n         } else {\n-            logger.warn(\"Only accept PlayPauseType, RewindFastforwardType. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept PlayPauseType, RewindFastforwardType, RefreshType. Type was {}.\",", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/MediaControlPlayer.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/MediaControlPlayer.java\nindex e52c471804..7957142827 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/MediaControlPlayer.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/MediaControlPlayer.java\n\n@@ -45,8 +42,7 @@ public class MediaControlPlayer extends BaseChannelHandler<CommandConfirmation>\n         } else if (RewindFastforwardType.REWIND == command) {\n             handler.getSocket().rewind(getDefaultResponseListener());\n         } else {\n-            logger.warn(\"Only accept PlayPauseType, RewindFastforwardType, RefreshType. Type was {}.\",\n-                    command.getClass());\n+            logger.warn(\"Only accept PlayPauseType, RewindFastforwardType. Type was {}.\", command.getClass());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjgyMg==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389616822", "bodyText": "WARN level is really too high. Should be DEBUG, max INFO.", "author": "lolodomo", "createdAt": "2020-03-09T12:01:44Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java", "diffHunk": "@@ -46,7 +51,7 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n         } else if (OnOffType.OFF == command) {\n             handler.getSocket().powerOff(getDefaultResponseListener());\n         } else {\n-            logger.warn(\"Only accept OnOffType. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept OnOffType, RefreshType. Type was {}.\", command.getClass());", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\nindex 1c8c70e55c..310673c89b 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\n\n@@ -51,7 +46,7 @@ public class PowerControlPower extends BaseChannelHandler<CommandConfirmation> {\n         } else if (OnOffType.OFF == command) {\n             handler.getSocket().powerOff(getDefaultResponseListener());\n         } else {\n-            logger.warn(\"Only accept OnOffType, RefreshType. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept OnOffType. Type was {}.\", command.getClass());\n         }\n \n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjk2NA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389616964", "bodyText": "Blank line to suppress", "author": "lolodomo", "createdAt": "2020-03-09T12:02:06Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannel.java", "diffHunk": "@@ -91,11 +97,16 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n \n     @Override\n     protected Optional<ServiceSubscription<ChannelInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeCurrentChannel(new ResponseListener<ChannelInfo>() {\n+        return Optional.of(handler.getSocket().subscribeCurrentChannel(createResponseListener(channelId, handler)));\n+", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannel.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannel.java\nindex fc098b6c6a..a09245e3c6 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannel.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannel.java\n\n@@ -97,16 +99,11 @@ public class TVControlChannel extends BaseChannelHandler<ChannelInfo> {\n \n     @Override\n     protected Optional<ServiceSubscription<ChannelInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeCurrentChannel(createResponseListener(channelId, handler)));\n-\n-    }\n-\n-    private ResponseListener<ChannelInfo> createResponseListener(String channelId, LGWebOSHandler handler) {\n-        return new ResponseListener<ChannelInfo>() {\n+        return Optional.of(handler.getSocket().subscribeCurrentChannel(new ResponseListener<ChannelInfo>() {\n \n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving channel: {}.\", error);\n+                logger.debug(\"Error in listening to channel changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzE2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389617163", "bodyText": "Blank line to suppress", "author": "lolodomo", "createdAt": "2020-03-09T12:02:37Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java", "diffHunk": "@@ -37,15 +38,25 @@\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n+", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\nindex 59871f1683..f57cd4ddd5 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\n\n@@ -38,25 +37,15 @@ public class TVControlChannelName extends BaseChannelHandler<ChannelInfo> {\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n-\n-        if (RefreshType.REFRESH == command) {\n-            handler.getSocket().getCurrentChannel(createResponseListener(channelId, handler));\n-            return;\n-        }\n         // nothing to do, this is read only.\n     }\n \n     @Override\n     protected Optional<ServiceSubscription<ChannelInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeCurrentChannel(createResponseListener(channelId, handler)));\n-\n-    }\n-\n-    private ResponseListener<ChannelInfo> createResponseListener(String channelId, LGWebOSHandler handler) {\n-        return new ResponseListener<ChannelInfo>() {\n+        return Optional.of(handler.getSocket().subscribeCurrentChannel(new ResponseListener<ChannelInfo>() {\n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving channel name: {}.\", error);\n+                logger.debug(\"Error in listening to channel name changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzI1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389617259", "bodyText": "Blank line to suppress", "author": "lolodomo", "createdAt": "2020-03-09T12:02:50Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java", "diffHunk": "@@ -37,15 +38,25 @@\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n+\n+        if (RefreshType.REFRESH == command) {\n+            handler.getSocket().getCurrentChannel(createResponseListener(channelId, handler));\n+            return;\n+        }\n         // nothing to do, this is read only.\n     }\n \n     @Override\n     protected Optional<ServiceSubscription<ChannelInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeCurrentChannel(new ResponseListener<ChannelInfo>() {\n+        return Optional.of(handler.getSocket().subscribeCurrentChannel(createResponseListener(channelId, handler)));\n+", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\nindex 59871f1683..f57cd4ddd5 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/TVControlChannelName.java\n\n@@ -38,25 +37,15 @@ public class TVControlChannelName extends BaseChannelHandler<ChannelInfo> {\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n-\n-        if (RefreshType.REFRESH == command) {\n-            handler.getSocket().getCurrentChannel(createResponseListener(channelId, handler));\n-            return;\n-        }\n         // nothing to do, this is read only.\n     }\n \n     @Override\n     protected Optional<ServiceSubscription<ChannelInfo>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeCurrentChannel(createResponseListener(channelId, handler)));\n-\n-    }\n-\n-    private ResponseListener<ChannelInfo> createResponseListener(String channelId, LGWebOSHandler handler) {\n-        return new ResponseListener<ChannelInfo>() {\n+        return Optional.of(handler.getSocket().subscribeCurrentChannel(new ResponseListener<ChannelInfo>() {\n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving channel name: {}.\", error);\n+                logger.debug(\"Error in listening to channel name changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzQxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389617419", "bodyText": "WARN level is really too high. Should be DEBUG, max INFO.", "author": "lolodomo", "createdAt": "2020-03-09T12:03:11Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlMute.java", "diffHunk": "@@ -38,20 +39,26 @@\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n-        if (OnOffType.ON == command || OnOffType.OFF == command) {\n+        if (RefreshType.REFRESH == command) {\n+            handler.getSocket().getMute(createResponseListener(channelId, handler));\n+        } else if (OnOffType.ON == command || OnOffType.OFF == command) {\n             handler.getSocket().setMute(OnOffType.ON == command, objResponseListener);\n         } else {\n-            logger.warn(\"Only accept OnOffType. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept OnOffType, RefreshType. Type was {}.\", command.getClass());", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlMute.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlMute.java\nindex 91bbc1291e..293b89a392 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlMute.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlMute.java\n\n@@ -39,26 +38,20 @@ public class VolumeControlMute extends BaseChannelHandler<Boolean> {\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n-        if (RefreshType.REFRESH == command) {\n-            handler.getSocket().getMute(createResponseListener(channelId, handler));\n-        } else if (OnOffType.ON == command || OnOffType.OFF == command) {\n+        if (OnOffType.ON == command || OnOffType.OFF == command) {\n             handler.getSocket().setMute(OnOffType.ON == command, objResponseListener);\n         } else {\n-            logger.warn(\"Only accept OnOffType, RefreshType. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept OnOffType. Type was {}.\", command.getClass());\n         }\n     }\n \n     @Override\n     protected Optional<ServiceSubscription<Boolean>> getSubscription(String channelId, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeMute(createResponseListener(channelId, handler)));\n-    }\n-\n-    private ResponseListener<Boolean> createResponseListener(String channelId, LGWebOSHandler handler) {\n-        return new ResponseListener<Boolean>() {\n+        return Optional.of(handler.getSocket().subscribeMute(new ResponseListener<Boolean>() {\n \n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving mute: {}.\", error);\n+                logger.debug(\"Error in listening to mute changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxODM0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389618345", "bodyText": "Maybe suppress this return and add else jus after like you do in the class MediaControlPlayer or VolumeControlMute ?", "author": "lolodomo", "createdAt": "2020-03-09T12:05:27Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java", "diffHunk": "@@ -32,6 +33,10 @@\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n+        if (RefreshType.REFRESH == command) {\n+            handler.postUpdate(channelId, handler.getSocket().isConnected() ? OnOffType.ON : OnOffType.OFF);\n+            return;", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxODQyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389918421", "bodyText": "what follows is not a complete if else cascade.  I find it more readable to jump out early", "author": "sprehn", "createdAt": "2020-03-09T19:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxODM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\nindex 1c8c70e55c..310673c89b 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java\n\n@@ -33,10 +32,6 @@ public class PowerControlPower extends BaseChannelHandler<CommandConfirmation> {\n \n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n-        if (RefreshType.REFRESH == command) {\n-            handler.postUpdate(channelId, handler.getSocket().isConnected() ? OnOffType.ON : OnOffType.OFF);\n-            return;\n-        }\n         if (OnOffType.ON == command) {\n             logger.debug(\n                     \"Received ON - Turning TV on via API is not supported by LG WebOS TVs. You may succeed using wake on lan binding, please consult lgwebos binding documentation.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxOTQzOA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389619438", "bodyText": "Maybe suppress this return and add else jus after like you do in the class MediaControlPlayer or VolumeControlMute ?", "author": "lolodomo", "createdAt": "2020-03-09T12:07:54Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java", "diffHunk": "@@ -44,6 +45,10 @@\n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n         final PercentType percent;\n+        if (RefreshType.REFRESH == command) {\n+            handler.getSocket().getVolume(createResponseListener(channelId, handler));\n+            return;", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxODQ1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389918454", "bodyText": "what follows is not a complete if else cascade.  I find it more readable to jump out early", "author": "sprehn", "createdAt": "2020-03-09T19:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxOTQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\nindex af1ae79a56..bac220819e 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\n\n@@ -45,10 +44,6 @@ public class VolumeControlVolume extends BaseChannelHandler<Float> {\n     @Override\n     public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command command) {\n         final PercentType percent;\n-        if (RefreshType.REFRESH == command) {\n-            handler.getSocket().getVolume(createResponseListener(channelId, handler));\n-            return;\n-        }\n         if (command instanceof PercentType) {\n             percent = (PercentType) command;\n         } else if (command instanceof DecimalType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxOTYzMA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389619630", "bodyText": "WARN level is really too high. Should be DEBUG, max INFO.", "author": "lolodomo", "createdAt": "2020-03-09T12:08:20Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java", "diffHunk": "@@ -63,17 +68,22 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n         } else if (OnOffType.OFF == command || OnOffType.ON == command) {\n             handler.getSocket().setMute(OnOffType.OFF == command, objResponseListener);\n         } else {\n-            logger.warn(\"Only accept PercentType, DecimalType, StringType command. Type was {}.\", command.getClass());\n+            logger.warn(\"Only accept PercentType, DecimalType, StringType, RefreshType. Type was {}.\",", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\nindex af1ae79a56..bac220819e 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/VolumeControlVolume.java\n\n@@ -68,22 +63,17 @@ public class VolumeControlVolume extends BaseChannelHandler<Float> {\n         } else if (OnOffType.OFF == command || OnOffType.ON == command) {\n             handler.getSocket().setMute(OnOffType.OFF == command, objResponseListener);\n         } else {\n-            logger.warn(\"Only accept PercentType, DecimalType, StringType, RefreshType. Type was {}.\",\n-                    command.getClass());\n+            logger.warn(\"Only accept PercentType, DecimalType, StringType command. Type was {}.\", command.getClass());\n         }\n     }\n \n     @Override\n     protected Optional<ServiceSubscription<Float>> getSubscription(String channelUID, LGWebOSHandler handler) {\n-        return Optional.of(handler.getSocket().subscribeVolume(createResponseListener(channelUID, handler)));\n-    }\n-\n-    private ResponseListener<Float> createResponseListener(String channelUID, LGWebOSHandler handler) {\n-        return new ResponseListener<Float>() {\n+        return Optional.of(handler.getSocket().subscribeVolume(new ResponseListener<Float>() {\n \n             @Override\n             public void onError(@Nullable String error) {\n-                logger.debug(\"Error in retrieving volume: {}.\", error);\n+                logger.debug(\"Error in listening to volume changes: {}.\", error);\n             }\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMzE4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389623185", "bodyText": "Please add a test here if the channel is linked. If not, no need to update its state.", "author": "lolodomo", "createdAt": "2020-03-09T12:16:38Z", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSHandler.java", "diffHunk": "@@ -293,35 +303,12 @@ public void onError(String error) {\n \n     public void postUpdate(String channelId, State state) {\n         updateState(channelId, state);", "originalCommit": "ebaf0f60f87c1d3de204a915d4da19b333564241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMTU0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389931541", "bodyText": "Do you really think this is needed?", "author": "sprehn", "createdAt": "2020-03-09T20:06:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMzE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk0MTMxMA==", "url": "https://github.com/openhab/openhab-addons/pull/7127#discussion_r389941310", "bodyText": "It is of course not mandatory, just better ;) This will avoid running useless code.", "author": "lolodomo", "createdAt": "2020-03-09T20:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMzE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "43028daba32fc185c41974ce01440cbfafd006cf", "chunk": "diff --git a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSHandler.java b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSHandler.java\nindex 42439f5c88..74ec939f03 100644\n--- a/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSHandler.java\n+++ b/bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSHandler.java\n\n@@ -301,11 +306,16 @@ public class LGWebOSHandler extends BaseThingHandler implements LGWebOSTVSocket.\n         }\n     }\n \n+    public void setOptions(String channelId, List<StateOption> options) {\n+        logger.debug(\"setOptions channelId={} options.size()={}\", channelId, options.size());\n+        stateDescriptionProvider.setStateOptions(new ChannelUID(getThing().getUID(), channelId), options);\n+    }\n+\n     public void postUpdate(String channelId, State state) {\n         updateState(channelId, state);\n \n-        // channel subscription only works when on livetv app.\n-        if (CHANNEL_APP_LAUNCHER.equals(channelId) && APP_ID_LIVETV.equals(state.toString())) {\n+        // When the app is updated, refresh the subscriptions for channel name and number\n+        if (CHANNEL_APP_LAUNCHER.equals(channelId) && !state.toString().isEmpty()) {\n             Stream.of(CHANNEL_CHANNEL, CHANNEL_CHANNEL_NAME)\n                     .forEach(k -> channelHandlers.get(k).refreshSubscription(k, this));\n         }\n"}}, {"oid": "43028daba32fc185c41974ce01440cbfafd006cf", "url": "https://github.com/openhab/openhab-addons/commit/43028daba32fc185c41974ce01440cbfafd006cf", "message": "Removed check if channel is linked before subscribing.\nAdded special handling of channel number and name.\n\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:30:17Z", "type": "commit"}, {"oid": "666de616a2d78300f76a09a4e20b1f04bd1fa42c", "url": "https://github.com/openhab/openhab-addons/commit/666de616a2d78300f76a09a4e20b1f04bd1fa42c", "message": "Only subscribe when to channel changes in LiveTV app.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:30:17Z", "type": "commit"}, {"oid": "9fd75de2bfb7681e3fd33c22e770833b96c3be37", "url": "https://github.com/openhab/openhab-addons/commit/9fd75de2bfb7681e3fd33c22e770833b96c3be37", "message": "Implementation of RefreshType Command.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:35:59Z", "type": "commit"}, {"oid": "58ddebc47bf4d24a2e26eb419bdb05dca4fb1c7c", "url": "https://github.com/openhab/openhab-addons/commit/58ddebc47bf4d24a2e26eb419bdb05dca4fb1c7c", "message": "Addressing code review comments.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:35:59Z", "type": "commit"}, {"oid": "8d9c7e33480b933709063b431bd1af86d1bd95b7", "url": "https://github.com/openhab/openhab-addons/commit/8d9c7e33480b933709063b431bd1af86d1bd95b7", "message": "Addressing Review Comment.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:35:59Z", "type": "commit"}, {"oid": "e40c6c444e0168e31b656a905fcd6444eb58bd5b", "url": "https://github.com/openhab/openhab-addons/commit/e40c6c444e0168e31b656a905fcd6444eb58bd5b", "message": "Only post update if channel is linked.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:35:59Z", "type": "commit"}, {"oid": "e40c6c444e0168e31b656a905fcd6444eb58bd5b", "url": "https://github.com/openhab/openhab-addons/commit/e40c6c444e0168e31b656a905fcd6444eb58bd5b", "message": "Only post update if channel is linked.\nSigned-off-by: Sebastian Prehn <sebastian.prehn@gmx.de>", "committedDate": "2020-03-10T19:35:59Z", "type": "forcePushed"}]}