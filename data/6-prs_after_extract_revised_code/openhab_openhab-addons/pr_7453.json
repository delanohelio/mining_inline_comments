{"pr_number": 7453, "pr_title": "[VolvoOnCall] Correcting NPE on certain models", "pr_createdAt": "2020-04-23T10:07:44Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7453", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414708734", "bodyText": "This seems to be wrong. The annotation says \"I know for sure that whenever this field is accessed, it is non-null and that is assured by the framework\". If that would be true, you don't need an Optional later on.", "author": "J-N-K", "createdAt": "2020-04-24T16:33:32Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -40,14 +40,33 @@\n     public @NonNullByDefault({}) OnOffType engineRunning;\n     public @NonNullByDefault({}) String brakeFluid;\n     public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n-\n+    private @NonNullByDefault({}) WindowsStatus windows;", "originalCommit": "961f81ed6251a85025cae1c73e1f0d053c4e27a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxMjE5NA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415012194", "bodyText": "I had to do this because if I put @nullable instead, the compiler complains because the optional should be Optional<@nullable WindowsStatus> and then everything behind goes wrong. But making another test, Eclipse complains but mvn builds it :-/", "author": "clinique", "createdAt": "2020-04-25T08:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTY1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015656", "bodyText": "I've changed the problem severity in eclipse, still shows as a warning, but as mvn does not complain, I suppose it's fine", "author": "clinique", "createdAt": "2020-04-25T08:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA=="}], "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java\nindex f1fb59ad83..82cbdcb3cc 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java\n\n@@ -40,32 +40,13 @@ public class Status {\n     public @NonNullByDefault({}) OnOffType engineRunning;\n     public @NonNullByDefault({}) String brakeFluid;\n     public @NonNullByDefault({}) String washerFluidLevel;\n-    private @NonNullByDefault({}) WindowsStatus windows;\n-    private @NonNullByDefault({}) DoorsStatus doors;\n-    private @NonNullByDefault({}) TyrePressure tyrePressure;\n-    private @NonNullByDefault({}) HvBattery hvBattery;\n-    private @NonNullByDefault({}) Heater heater;\n-    public @NonNullByDefault({}) String serviceWarningStatus;\n-\n-    public Optional<WindowsStatus> getWindows() {\n-        return Optional.ofNullable(windows);\n-    }\n-\n-    public Optional<DoorsStatus> getDoors() {\n-        return Optional.ofNullable(doors);\n-    }\n+    public @Nullable WindowsStatus windows;\n+    public @Nullable DoorsStatus doors;\n+    public @Nullable TyrePressure tyrePressure;\n+    public @Nullable HvBattery hvBattery;\n+    public @Nullable Heater heater;\n \n-    public Optional<TyrePressure> getTyrePressure() {\n-        return Optional.ofNullable(tyrePressure);\n-    }\n-\n-    public Optional<HvBattery> getHvBattery() {\n-        return Optional.ofNullable(hvBattery);\n-    }\n-\n-    public Optional<Heater> getHeater() {\n-        return Optional.ofNullable(heater);\n-    }\n+    public @NonNullByDefault({}) String serviceWarningStatus;\n \n     /*\n      * Currently not used in the binding, maybe interesting for the future\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414709664", "bodyText": "This will not work but throw a NoSuchElementException. You need to check for presence and return null if it is not present. But I must admit, that I don't see the benefit of this refactoring, checking isPresent is not better than checking  != null.", "author": "J-N-K", "createdAt": "2020-04-24T16:35:00Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java", "diffHunk": "@@ -44,20 +46,20 @@ public VolvoOnCallActions() {\n     @Override\n     public void setThingHandler(@Nullable ThingHandler handler) {\n         if (handler instanceof VehicleHandler) {\n-            this.handler = (VehicleHandler) handler;\n+            this.handler = Optional.of((VehicleHandler) handler);\n         }\n     }\n \n     @Override\n     public @Nullable ThingHandler getThingHandler() {\n-        return this.handler;\n+        return handler.get();", "originalCommit": "961f81ed6251a85025cae1c73e1f0d053c4e27a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxMjY5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415012691", "bodyText": "You're right.", "author": "clinique", "createdAt": "2020-04-25T08:20:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDE4MA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415014180", "bodyText": "Moving changes back.", "author": "clinique", "createdAt": "2020-04-25T08:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java\nindex 7f84a2594d..b18e9bc7be 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java\n\n@@ -46,20 +44,20 @@ public class VolvoOnCallActions implements ThingActions {\n     @Override\n     public void setThingHandler(@Nullable ThingHandler handler) {\n         if (handler instanceof VehicleHandler) {\n-            this.handler = Optional.of((VehicleHandler) handler);\n+            this.handler = (VehicleHandler) handler;\n         }\n     }\n \n     @Override\n     public @Nullable ThingHandler getThingHandler() {\n-        return handler.get();\n+        return this.handler;\n     }\n \n     @RuleAction(label = \"Volvo On Call : Close\", description = \"Closes the car\")\n     public void closeCarCommand() {\n         logger.debug(\"closeCarCommand called\");\n-        if (handler.isPresent()) {\n-            handler.get().actionClose();\n+        if (handler != null) {\n+            handler.actionClose();\n         } else {\n             logger.warn(\"VolvoOnCall Action service ThingHandler is null!\");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTgzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414709831", "bodyText": "see above", "author": "J-N-K", "createdAt": "2020-04-24T16:35:18Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -31,9 +32,9 @@\n  */\n @NonNullByDefault\n public class TripDetail {\n-    public @Nullable Integer fuelConsumption;\n-    public @Nullable Integer electricalConsumption;\n-    public @Nullable Integer electricalRegeneration;\n+    private @NonNullByDefault({}) Integer fuelConsumption;", "originalCommit": "961f81ed6251a85025cae1c73e1f0d053c4e27a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\nindex 50e87e899b..01c24f7f38 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n\n@@ -32,9 +31,9 @@ import org.eclipse.smarthome.core.types.UnDefType;\n  */\n @NonNullByDefault\n public class TripDetail {\n-    private @NonNullByDefault({}) Integer fuelConsumption;\n-    private @NonNullByDefault({}) Integer electricalConsumption;\n-    private @NonNullByDefault({}) Integer electricalRegeneration;\n+    public @Nullable Integer fuelConsumption;\n+    public @Nullable Integer electricalConsumption;\n+    public @Nullable Integer electricalRegeneration;\n     public int distance;\n     public int startOdometer;\n     public int endOdometer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMDUyNA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414710524", "bodyText": "We always use @Nullable for the jobs in all bindings. I think it would be better to stay with that.", "author": "J-N-K", "createdAt": "2020-04-24T16:36:15Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -143,9 +149,9 @@ public void initialize() {\n      * @param refresh : refresh frequency in minutes\n      */\n     private void startAutomaticRefresh(int refresh) {\n-        if (refreshJob == null || refreshJob.isCancelled()) {\n-            refreshJob = scheduler.scheduleWithFixedDelay(this::queryApiAndUpdateChannels, 10, refresh,\n-                    TimeUnit.MINUTES);\n+        if (!refreshJob.isPresent() || refreshJob.get().isCancelled()) {", "originalCommit": "961f81ed6251a85025cae1c73e1f0d053c4e27a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTY4OA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015688", "bodyText": "Reverted", "author": "clinique", "createdAt": "2020-04-25T08:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMDUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\nindex e75a8cafc1..a94442a880 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n\n@@ -149,9 +148,9 @@ public class VehicleHandler extends BaseThingHandler {\n      * @param refresh : refresh frequency in minutes\n      */\n     private void startAutomaticRefresh(int refresh) {\n-        if (!refreshJob.isPresent() || refreshJob.get().isCancelled()) {\n-            refreshJob = Optional.of(\n-                    scheduler.scheduleWithFixedDelay(this::queryApiAndUpdateChannels, 10, refresh, TimeUnit.MINUTES));\n+        if (refreshJob == null || refreshJob.isCancelled()) {\n+            refreshJob = scheduler.scheduleWithFixedDelay(this::queryApiAndUpdateChannels, 10, refresh,\n+                    TimeUnit.MINUTES);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjk5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414712997", "bodyText": "This will throw NoSuchElementException if the Optional is empty", "author": "J-N-K", "createdAt": "2020-04-24T16:40:15Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -159,15 +165,17 @@ private void queryApiAndUpdateChannels() {\n                 getThing().getChannels().stream().map(Channel::getUID)\n                         .filter(channelUID -> isLinked(channelUID) && !LAST_TRIP_GROUP.equals(channelUID.getGroupId()))\n                         .forEach(channelUID -> {\n-                            State state = getValue(channelUID.getIdWithoutGroup(), vehicleStatus, vehiclePosition);\n+                            State state = getValue(channelUID.getGroupId(), channelUID.getIdWithoutGroup(),\n+                                    vehicleStatus, vehiclePosition);\n \n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob = null;\n+                refreshJob.get().cancel(true);", "originalCommit": "961f81ed6251a85025cae1c73e1f0d053c4e27a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTcxMA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015710", "bodyText": "Reverted", "author": "clinique", "createdAt": "2020-04-25T08:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjk5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\nindex e75a8cafc1..a94442a880 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n\n@@ -174,8 +173,7 @@ public class VehicleHandler extends BaseThingHandler {\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob.get().cancel(true);\n-                refreshJob = Optional.empty();\n+                refreshJob = null;\n                 startAutomaticRefresh(configuration.refresh);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEyOTU1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r416129551", "bodyText": "Wouldn't this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                    return Optional.ofNullable(fuelConsumption);\n          \n      \n    \n    \n  \n\nIf not, then this would work for sure, though I prefer the first option if it works.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                    Integer fuelConsumption = this.fuelConsumption\n          \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();", "author": "cpmeister", "createdAt": "2020-04-27T20:35:15Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -75,4 +75,25 @@ public long getDurationInMinutes() {\n         return Duration.between(startTime, endTime).toMinutes();\n     }\n \n+    public Optional<Integer> getFuelConsumption() {\n+        if (fuelConsumption != null) {\n+            return Optional.of(fuelConsumption);\n+        }\n+        return Optional.empty();", "originalCommit": "76234835bf4e6ec17696f73656f879df92d57e07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU1NjAzNg==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r416556036", "bodyText": "Tried your first approach without success. The second one seems good.", "author": "clinique", "createdAt": "2020-04-28T12:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEyOTU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\nindex a3bb2e4222..01c24f7f38 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n\n@@ -74,26 +74,4 @@ public class TripDetail {\n     public long getDurationInMinutes() {\n         return Duration.between(startTime, endTime).toMinutes();\n     }\n-\n-    public Optional<Integer> getFuelConsumption() {\n-        if (fuelConsumption != null) {\n-            return Optional.of(fuelConsumption);\n-        }\n-        return Optional.empty();\n-    }\n-\n-    public Optional<Integer> getElectricalConsumption() {\n-        if (electricalConsumption != null) {\n-            return Optional.of(electricalConsumption);\n-        }\n-        return Optional.empty();\n-    }\n-\n-    public Optional<Integer> getElectricalRegeneration() {\n-        if (electricalRegeneration != null) {\n-            return Optional.of(electricalRegeneration);\n-        }\n-        return Optional.empty();\n-    }\n-\n }\n"}}, {"oid": "e52049458e5d7269d8eb78a152f5b88e9796abe8", "url": "https://github.com/openhab/openhab-addons/commit/e52049458e5d7269d8eb78a152f5b88e9796abe8", "message": "Correcting NPE on certain models\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:40:24Z", "type": "commit"}, {"oid": "ef07de6b4a79249bee1a391e5f27bad0724b7733", "url": "https://github.com/openhab/openhab-addons/commit/ef07de6b4a79249bee1a391e5f27bad0724b7733", "message": "Correcting @Nullable problems\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:40:27Z", "type": "commit"}, {"oid": "7cf8dfcab35ab3ead4dfd4451c156ca389e99168", "url": "https://github.com/openhab/openhab-addons/commit/7cf8dfcab35ab3ead4dfd4451c156ca389e99168", "message": "Code review corrections\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:42:43Z", "type": "commit"}, {"oid": "732f339c355c3b8bb574ded855d08643495163c3", "url": "https://github.com/openhab/openhab-addons/commit/732f339c355c3b8bb574ded855d08643495163c3", "message": "Code review corrections\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:42:45Z", "type": "commit"}, {"oid": "b1b94bf9eb0f82b7f925c0ef6e580b05d1f5284e", "url": "https://github.com/openhab/openhab-addons/commit/b1b94bf9eb0f82b7f925c0ef6e580b05d1f5284e", "message": "Added missing corrections\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:42:46Z", "type": "commit"}, {"oid": "a4446facbe630bc00f31d68bb231f9dd5f6701ff", "url": "https://github.com/openhab/openhab-addons/commit/a4446facbe630bc00f31d68bb231f9dd5f6701ff", "message": "Correcting nullable conflicts\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:42:48Z", "type": "commit"}, {"oid": "fddf46f716830e89ef2f904f61ce76b866dccc8d", "url": "https://github.com/openhab/openhab-addons/commit/fddf46f716830e89ef2f904f61ce76b866dccc8d", "message": "Trying to solve nullable\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:42:50Z", "type": "commit"}, {"oid": "77e1f855a726a4931217f0afe175949fdb704631", "url": "https://github.com/openhab/openhab-addons/commit/77e1f855a726a4931217f0afe175949fdb704631", "message": "Correcting weird conflict\n\nConflicts:\n\tbundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:51:32Z", "type": "commit"}, {"oid": "77e1f855a726a4931217f0afe175949fdb704631", "url": "https://github.com/openhab/openhab-addons/commit/77e1f855a726a4931217f0afe175949fdb704631", "message": "Correcting weird conflict\n\nConflicts:\n\tbundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T11:51:32Z", "type": "forcePushed"}, {"oid": "5a94b22c3811dc72502a13155639b87565b9ecb6", "url": "https://github.com/openhab/openhab-addons/commit/5a94b22c3811dc72502a13155639b87565b9ecb6", "message": "Correcting warnings\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T12:00:12Z", "type": "commit"}, {"oid": "5de0481a14ad48417c59bf7aefb2b2abb90c9398", "url": "https://github.com/openhab/openhab-addons/commit/5de0481a14ad48417c59bf7aefb2b2abb90c9398", "message": "Still some warnings\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T12:14:49Z", "type": "commit"}, {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8", "url": "https://github.com/openhab/openhab-addons/commit/821938fea14c5b463612dbcd57bc5dbe040e00d8", "message": "Still some warnings\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-04-28T12:35:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r418355231", "bodyText": "You should take advantage of having optionals available:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (tripDetails.getFuelConsumption().isPresent()) {\n          \n          \n            \n                                return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n          \n          \n            \n                                        SmartHomeUnits.LITRE);\n          \n          \n            \n                            } else {\n          \n          \n            \n                                return UnDefType.UNDEF;\n          \n          \n            \n                            }\n          \n          \n            \n                            return tripDetails.getFuelConsumption().map(value -> new QuantityType<>(value.floatValue() / 100,\n          \n          \n            \n                                        SmartHomeUnits.LITRE).orElse(UnDefType.UNDEF);", "author": "cpmeister", "createdAt": "2020-05-01T00:04:02Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "originalCommit": "821938fea14c5b463612dbcd57bc5dbe040e00d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2MjcxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r418562715", "bodyText": "This does not work. My usage of Optional is not extensive as it could, I must get used to it.", "author": "clinique", "createdAt": "2020-05-01T14:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxMDQ1MA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419210450", "bodyText": "Looks like my suggestion was missing a parenthesis.", "author": "cpmeister", "createdAt": "2020-05-04T04:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MTM0MA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419481340", "bodyText": "Still fails : The method orElse(QuantityType) in the type Optional<QuantityType> is not applicable for the arguments (UnDefType)", "author": "clinique", "createdAt": "2020-05-04T14:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MzEzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419483133", "bodyText": "But this seems ok :\nreturn tripDetails.getFuelConsumption()\n                        .map(value -> (State) new QuantityType<>(value.floatValue() / 100, SmartHomeUnits.LITRE))\n                        .orElse(UnDefType.UNDEF);", "author": "clinique", "createdAt": "2020-05-04T14:34:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "16a8ebaebd01fff60df89429cbf370e5ea26ea0e", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\nindex cbbcc12240..b01beecf1e 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n\n@@ -241,12 +241,9 @@ public class VehicleHandler extends BaseThingHandler {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.getFuelConsumption().isPresent()) {\n-                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n-                            SmartHomeUnits.LITRE);\n-                } else {\n-                    return UnDefType.UNDEF;\n-                }\n+                return tripDetails.getFuelConsumption()\n+                        .map(value -> (State) new QuantityType<>(value.floatValue() / 100, SmartHomeUnits.LITRE))\n+                        .orElse(UnDefType.UNDEF);\n             case TRIP_DISTANCE:\n                 return new QuantityType<>((double) tripDetails.distance / 1000, KILO(SIUnits.METRE));\n             case TRIP_START_TIME:\n"}}, {"oid": "16a8ebaebd01fff60df89429cbf370e5ea26ea0e", "url": "https://github.com/openhab/openhab-addons/commit/16a8ebaebd01fff60df89429cbf370e5ea26ea0e", "message": "Code review and some enhancements\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-04T16:04:32Z", "type": "commit"}, {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d", "url": "https://github.com/openhab/openhab-addons/commit/ace42c92ac9be426602135c8f8b68805841a0c8d", "message": "Enhanced usage of Optional, corrected header composition\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-05T13:09:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420273287", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Optional<ZonedDateTime> getTimestamp() {\n          \n          \n            \n                    ZonedDateTime timestamp = this.timestamp;\n          \n          \n            \n                    if (timestamp != null) {\n          \n          \n            \n                        return Optional.of(timestamp);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                public Optional<ZonedDateTime> getTimestamp() {\n          \n          \n            \n                    return Optional.ofNullable(timestamp);\n          \n          \n            \n                }", "author": "J-N-K", "createdAt": "2020-05-05T17:13:38Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/PositionData.java", "diffHunk": "@@ -28,14 +29,21 @@\n public class PositionData {\n     public @Nullable Double longitude;\n     public @Nullable Double latitude;\n-    public @Nullable ZonedDateTime timestamp;\n+    private @Nullable ZonedDateTime timestamp;\n     public @Nullable String speed;\n     private @Nullable String heading;\n \n     public Boolean isHeading() {\n         return \"true\".equalsIgnoreCase(heading);\n     }\n \n+    public Optional<ZonedDateTime> getTimestamp() {\n+        ZonedDateTime timestamp = this.timestamp;\n+        if (timestamp != null) {\n+            return Optional.of(timestamp);\n+        }\n+        return Optional.empty();\n+    }", "originalCommit": "ace42c92ac9be426602135c8f8b68805841a0c8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyOTQ5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420329495", "bodyText": "I think I've suggested this before and it can't be done because then it wants you to change the return type to Optional<@Nullable ZonedDateTime>. Really wish we could get a null checker that would allow mixins or at least better support the standard libraries...", "author": "cpmeister", "createdAt": "2020-05-05T18:45:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQwOTUxMA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420409510", "bodyText": "Yes, @cpmeister is right, I've tried this but does not work.", "author": "clinique", "createdAt": "2020-05-05T21:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420273828", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Optional<WindowsStatus> getWindows() {\n          \n          \n            \n                    WindowsStatus windows = this.windows;\n          \n          \n            \n                    if (windows != null) {\n          \n          \n            \n                        return Optional.of(windows);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                public Optional<WindowsStatus> getWindows() {\n          \n          \n            \n                    return Optional.ofNullable(windows);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nalso below", "author": "J-N-K", "createdAt": "2020-05-05T17:14:23Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -36,17 +37,72 @@\n     public int tripMeter1 = UNDEFINED;\n     public int tripMeter2 = UNDEFINED;\n \n-    public @NonNullByDefault({}) OnOffType carLocked;\n-    public @NonNullByDefault({}) OnOffType engineRunning;\n-    public @NonNullByDefault({}) String brakeFluid;\n-    public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n+    private @Nullable OnOffType carLocked;\n+    private @Nullable OnOffType engineRunning;\n+    public String brakeFluid = \"\";\n+    public String washerFluidLevel = \"\";\n+    private @Nullable WindowsStatus windows;\n+    private @Nullable DoorsStatus doors;\n+    private @Nullable TyrePressure tyrePressure;\n+    private @Nullable HvBattery hvBattery;\n+    private @Nullable Heater heater;\n+    public String serviceWarningStatus = \"\";\n+\n+    public Optional<WindowsStatus> getWindows() {\n+        WindowsStatus windows = this.windows;\n+        if (windows != null) {\n+            return Optional.of(windows);\n+        }\n+        return Optional.empty();\n+    }", "originalCommit": "ace42c92ac9be426602135c8f8b68805841a0c8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MzIyOA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420293228", "bodyText": "This is really hard to read. Since we only have JDK8 available, maybe something like this\nZonedDateTime dt = vehicle.position.getTimestamp().orElse(vehicle.calculatedPosition.getTimestamp().orElse(null));\nreturn dt != null ? new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault()) : UnDefType.NULL;", "author": "J-N-K", "createdAt": "2020-05-05T17:45:41Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -81,11 +77,11 @@ public State isHeading() {\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.timestamp != null\n-                ? new DateTimeType(vehicle.position.timestamp.withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.timestamp != null\n-                        ? new DateTimeType(\n-                                vehicle.calculatedPosition.timestamp.withZoneSameInstant(ZoneId.systemDefault()))\n+        return vehicle.position.getTimestamp().isPresent()\n+                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n+                : vehicle.calculatedPosition.getTimestamp().isPresent()\n+                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n+                                .withZoneSameInstant(ZoneId.systemDefault()))\n                         : UnDefType.NULL;", "originalCommit": "ace42c92ac9be426602135c8f8b68805841a0c8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c565500ea7ea3738a325b381c6866fe00625567", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\nindex 59db463e36..bc0bcf501b 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\n\n@@ -69,19 +73,16 @@ public class VehiclePositionWrapper {\n     }\n \n     public State isCalculated() {\n-        return vehicle.calculatedPosition.latitude != null ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> isCalculated ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State isHeading() {\n-        return (vehicle.position.isHeading() || vehicle.calculatedPosition.isHeading()) ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> pos.isHeading() ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.getTimestamp().isPresent()\n-                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.getTimestamp().isPresent()\n-                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n-                                .withZoneSameInstant(ZoneId.systemDefault()))\n-                        : UnDefType.NULL;\n+        return position.map(pos -> pos.getTimestamp()\n+                .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n+                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);\n     }\n }\n"}}, {"oid": "1c565500ea7ea3738a325b381c6866fe00625567", "url": "https://github.com/openhab/openhab-addons/commit/1c565500ea7ea3738a325b381c6866fe00625567", "message": "Enhancing Optional usage\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-05T22:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420505178", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return position.map(pos -> pos.getTimestamp()\n          \n          \n            \n                            .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n          \n          \n            \n                            .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);\n          \n          \n            \n                    return position.flatMap(pos -> pos.getTimestamp())\n          \n          \n            \n                            .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n          \n          \n            \n                            .orElse(UnDefType.NULL);", "author": "cpmeister", "createdAt": "2020-05-06T01:52:23Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -69,19 +73,16 @@ public State getPosition() {\n     }\n \n     public State isCalculated() {\n-        return vehicle.calculatedPosition.latitude != null ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> isCalculated ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State isHeading() {\n-        return (vehicle.position.isHeading() || vehicle.calculatedPosition.isHeading()) ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> pos.isHeading() ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.getTimestamp().isPresent()\n-                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.getTimestamp().isPresent()\n-                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n-                                .withZoneSameInstant(ZoneId.systemDefault()))\n-                        : UnDefType.NULL;\n+        return position.map(pos -> pos.getTimestamp()\n+                .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n+                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);", "originalCommit": "1c565500ea7ea3738a325b381c6866fe00625567", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNzE2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420507163", "bodyText": "You can ignore this suggestion if it isn't the behavior you want.", "author": "cpmeister", "createdAt": "2020-05-06T02:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzMjgxMg==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420632812", "bodyText": "Yes, this is obviously better.", "author": "clinique", "createdAt": "2020-05-06T08:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA=="}], "type": "inlineReview", "revised_code": {"commit": "061e000ca209b736b49870f9a5d5a8402bc04c45", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\nindex bc0bcf501b..8b36c6a22a 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java\n\n@@ -81,8 +81,8 @@ public class VehiclePositionWrapper {\n     }\n \n     public State getTimestamp() {\n-        return position.map(pos -> pos.getTimestamp()\n+        return position.flatMap(pos -> pos.getTimestamp())\n                 .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n-                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);\n+                .orElse(UnDefType.NULL);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNjQ0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420506441", "bodyText": "Isn't this equivalent?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (getPosition() != UnDefType.UNDEF) {\n          \n          \n            \n                   if (position.isPresent()) {", "author": "cpmeister", "createdAt": "2020-05-06T01:57:31Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -46,21 +56,15 @@ private State getPositionAsState(PositionData details) {\n     }\n \n     public State getPosition() {\n-        if (vehicle.position.latitude != null) {\n-            return getPositionAsState(vehicle.position);\n-        } else if (vehicle.calculatedPosition.latitude != null) {\n-            return getPositionAsState(vehicle.calculatedPosition);\n-        }\n-        return UnDefType.NULL;\n+        return position.map(pos -> getPositionAsState(pos)).orElse(UnDefType.UNDEF);\n     }\n \n     public @Nullable String getPositionAsJSon() {\n-        PositionData details = vehicle.position;\n-        if (details != null && details.latitude != null && details.longitude != null) {\n+        if (getPosition() != UnDefType.UNDEF) {", "originalCommit": "1c565500ea7ea3738a325b381c6866fe00625567", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzMDE1OA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420630158", "bodyText": "No because it also checks the presence of underpinned elements (latitude & longitude)", "author": "clinique", "createdAt": "2020-05-06T08:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNjQ0MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "061e000ca209b736b49870f9a5d5a8402bc04c45", "url": "https://github.com/openhab/openhab-addons/commit/061e000ca209b736b49870f9a5d5a8402bc04c45", "message": "Review correction and some enhancements\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-06T09:28:29Z", "type": "commit"}, {"oid": "f9c137c1367c5aade9f20df548d5a22dc54567bf", "url": "https://github.com/openhab/openhab-addons/commit/f9c137c1367c5aade9f20df548d5a22dc54567bf", "message": "Correcting issue #7378\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-07T13:55:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2Mzk0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r421963942", "bodyText": "This should be put into its own method so it can be called during dispose as well.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ScheduledFuture<?> refreshJob = this.refreshJob;\n          \n          \n            \n                            if (refreshJob != null) {\n          \n          \n            \n                                refreshJob.cancel(true);\n          \n          \n            \n                                refreshJob = null;\n          \n          \n            \n                            }\n          \n          \n            \n                            ScheduledFuture<?> refreshJob = this.refreshJob;\n          \n          \n            \n                            if (refreshJob != null) {\n          \n          \n            \n                                refreshJob.cancel(true);\n          \n          \n            \n                                this.refreshJob = null;\n          \n          \n            \n                            }", "author": "cpmeister", "createdAt": "2020-05-08T06:26:31Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -153,21 +158,26 @@ private void queryApiAndUpdateChannels() {\n         VolvoOnCallBridgeHandler bridgeHandler = getBridgeHandler();\n         if (bridgeHandler != null) {\n             try {\n-                vehicleStatus = bridgeHandler.getURL(Status.class, configuration.vin);\n+                vehicleStatus = bridgeHandler.getURL(vehicle.statusURL, Status.class);\n                 vehiclePosition = new VehiclePositionWrapper(bridgeHandler.getURL(Position.class, configuration.vin));\n                 // Update all channels from the updated data\n                 getThing().getChannels().stream().map(Channel::getUID)\n                         .filter(channelUID -> isLinked(channelUID) && !LAST_TRIP_GROUP.equals(channelUID.getGroupId()))\n                         .forEach(channelUID -> {\n-                            State state = getValue(channelUID.getIdWithoutGroup(), vehicleStatus, vehiclePosition);\n+                            State state = getValue(channelUID.getGroupId(), channelUID.getIdWithoutGroup(),\n+                                    vehicleStatus, vehiclePosition);\n \n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob = null;\n+                ScheduledFuture<?> refreshJob = this.refreshJob;\n+                if (refreshJob != null) {\n+                    refreshJob.cancel(true);\n+                    refreshJob = null;\n+                }", "originalCommit": "f9c137c1367c5aade9f20df548d5a22dc54567bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99382a9d1d880bce9ae3abbb90f2ac1d37337540", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\nindex 187d7c03b4..66c4190c2e 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n\n@@ -173,16 +173,26 @@ public class VehicleHandler extends BaseThingHandler {\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                ScheduledFuture<?> refreshJob = this.refreshJob;\n-                if (refreshJob != null) {\n-                    refreshJob.cancel(true);\n-                    refreshJob = null;\n-                }\n+                freeRefreshJob();\n                 startAutomaticRefresh(configuration.refresh);\n             }\n         }\n     }\n \n+    private void freeRefreshJob() {\n+        ScheduledFuture<?> refreshJob = this.refreshJob;\n+        if (refreshJob != null) {\n+            refreshJob.cancel(true);\n+            this.refreshJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        super.dispose();\n+        freeRefreshJob();\n+    }\n+\n     private void updateTrips(VolvoOnCallBridgeHandler bridgeHandler) throws JsonSyntaxException, IOException {\n         // This seems to rewind 100 days by default, did not find any way to filter it\n         Trips carTrips = bridgeHandler.getURL(Trips.class, configuration.vin);\n"}}, {"oid": "99382a9d1d880bce9ae3abbb90f2ac1d37337540", "url": "https://github.com/openhab/openhab-addons/commit/99382a9d1d880bce9ae3abbb90f2ac1d37337540", "message": "Dispose refreshJob reviewed\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-08T07:23:06Z", "type": "commit"}, {"oid": "a76dd1ddd59a60d0fbfb1749270d04eafcedc663", "url": "https://github.com/openhab/openhab-addons/commit/a76dd1ddd59a60d0fbfb1749270d04eafcedc663", "message": "Enhancing webservice error handling\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-08T08:21:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM4NjM4MA==", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r422386380", "bodyText": "As a general rule, super.dispose() should go last.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super.dispose();\n          \n          \n            \n                    freeRefreshJob();\n          \n          \n            \n                    freeRefreshJob();\n          \n          \n            \n                    super.dispose();", "author": "cpmeister", "createdAt": "2020-05-08T21:34:06Z", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -173,16 +173,26 @@ private void queryApiAndUpdateChannels() {\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                ScheduledFuture<?> refreshJob = this.refreshJob;\n-                if (refreshJob != null) {\n-                    refreshJob.cancel(true);\n-                    refreshJob = null;\n-                }\n+                freeRefreshJob();\n                 startAutomaticRefresh(configuration.refresh);\n             }\n         }\n     }\n \n+    private void freeRefreshJob() {\n+        ScheduledFuture<?> refreshJob = this.refreshJob;\n+        if (refreshJob != null) {\n+            refreshJob.cancel(true);\n+            this.refreshJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        super.dispose();\n+        freeRefreshJob();", "originalCommit": "99382a9d1d880bce9ae3abbb90f2ac1d37337540", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e93764990218010be63ce747d8cf46856b2966e9", "chunk": "diff --git a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\nindex 66c4190c2e..7872e1fc30 100644\n--- a/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n+++ b/bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java\n\n@@ -170,7 +171,7 @@ public class VehicleHandler extends BaseThingHandler {\n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n-            } catch (JsonSyntaxException | IOException e) {\n+            } catch (VolvoOnCallException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n                 freeRefreshJob();\n"}}, {"oid": "e93764990218010be63ce747d8cf46856b2966e9", "url": "https://github.com/openhab/openhab-addons/commit/e93764990218010be63ce747d8cf46856b2966e9", "message": "Enhancing error handling\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-05-09T07:12:08Z", "type": "commit"}]}