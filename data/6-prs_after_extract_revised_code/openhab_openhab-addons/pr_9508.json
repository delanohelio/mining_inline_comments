{"pr_number": 9508, "pr_title": "[shelly] Improved documentation, support for UNI, 1L, Color Bulb", "pr_createdAt": "2020-12-24T12:00:46Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9508", "timeline": [{"oid": "1b5870087026072ee462495c02a52d42426d9360", "url": "https://github.com/openhab/openhab-addons/commit/1b5870087026072ee462495c02a52d42426d9360", "message": "Minor fixed, support for Shelly Color Bulb, Shelly Motion\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2020-12-26T14:07:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NDc0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550494749", "bodyText": "Logging to info should be used sparsely e.g. a newly started component or a user file that has been loaded. This could be debug or warn. Also, it seems a bit unreasonable to log the stack trace when the network fails.", "author": "fwolter", "createdAt": "2020-12-31T14:31:56Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/coap/ShellyCoapHandler.java", "diffHunk": "@@ -113,9 +121,21 @@ public synchronized void start(String thingName, ShellyThingConfiguration config\n             coapServer.start(config.localIp, this);\n             statusClient = new CoapClient(completeUrl(config.deviceIp, COLOIT_URI_DEVSTATUS))\n                     .setTimeout((long) SHELLY_API_TIMEOUT_MS).useNONs().setEndpoint(coapServer.getEndpoint());\n+            @Nullable\n+            Endpoint endpoint = null;\n+            if (statusClient != null) {\n+                endpoint = statusClient.getEndpoint();\n+            }\n+            if ((endpoint == null) || !endpoint.isStarted()) {\n+                logger.warn(\"{}: Unable to initialize CoAP access (network error)\", thingName);\n+                throw new ShellyApiException(\"Network initialization failed\");\n+            }\n             discover();\n+        } catch (SocketException e) {\n+            logger.warn(\"{}: Unable to initialize CoAP access (socket exception) - {}\", thingName, e.getMessage());\n+            throw new ShellyApiException(\"Network error\", e);\n         } catch (UnknownHostException e) {\n-            logger.debug(\"{}: CoAP Exception\", thingName, e);\n+            logger.info(\"{}: CoAP Exception (Unknown Host)\", thingName, e);", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg4NjY4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554886685", "bodyText": "changed", "author": "markus7017", "createdAt": "2021-01-11T08:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NDc0OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NTE3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550495175", "bodyText": "Logging to info should be used sparsely e.g. a newly started component or a user file that has been loaded. This could be debug.", "author": "fwolter", "createdAt": "2020-12-31T14:34:11Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java", "diffHunk": "@@ -166,6 +159,9 @@ public DiscoveryResult createResult(final ServiceInfo service) {\n \n                     // create shellyunknown thing - will be changed during thing initialization with valid credentials\n                     thingUID = ShellyThingCreator.getThingUID(name, model, mode, true);\n+                }\n+                if (e.isTimeout()) {\n+                    logger.info(\"{}: {}\", name, messages.get(\"discovery.failed\", address, e.toString()));", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MDE2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554890162", "bodyText": "removed", "author": "markus7017", "createdAt": "2021-01-11T08:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NTE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\nindex 33e003c865..762eaa37d8 100755\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n\n@@ -159,12 +159,8 @@ public class ShellyDiscoveryParticipant implements MDNSDiscoveryParticipant {\n \n                     // create shellyunknown thing - will be changed during thing initialization with valid credentials\n                     thingUID = ShellyThingCreator.getThingUID(name, model, mode, true);\n-                }\n-                if (e.isTimeout()) {\n-                    logger.info(\"{}: {}\", name, messages.get(\"discovery.failed\", address, e.toString()));\n                 } else {\n                     logger.info(\"{}: {}\", name, messages.get(\"discovery.failed\", address, e.toString()));\n-                    logger.debug(\"{}: Discovery failed\", name, e);\n                 }\n             } catch (IllegalArgumentException e) { // maybe some format description was buggy\n                 logger.debug(\"{}: Discovery failed!\", name, e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NTIyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550495221", "bodyText": "Can you fix the line break?", "author": "fwolter", "createdAt": "2020-12-31T14:34:25Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java", "diffHunk": "@@ -188,7 +184,9 @@ public DiscoveryResult createResult(final ServiceInfo service) {\n                 return DiscoveryResultBuilder.create(thingUID).withProperties(properties).withLabel(thingLabel)\n                         .withRepresentationProperty(PROPERTY_DEV_NAME).build();\n             }\n-        } catch (IOException | NullPointerException e) {\n+        } catch (IOException |\n+\n+                NullPointerException e) {", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MDUwOA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554890508", "bodyText": "fixed", "author": "markus7017", "createdAt": "2021-01-11T08:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NTIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\nindex 33e003c865..762eaa37d8 100755\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n\n@@ -184,9 +180,7 @@ public class ShellyDiscoveryParticipant implements MDNSDiscoveryParticipant {\n                 return DiscoveryResultBuilder.create(thingUID).withProperties(properties).withLabel(thingLabel)\n                         .withRepresentationProperty(PROPERTY_DEV_NAME).build();\n             }\n-        } catch (IOException |\n-\n-                NullPointerException e) {\n+        } catch (IOException | NullPointerException e) {\n             // maybe some format description was buggy\n             logger.debug(\"{}: Exception on processing serviceInfo '{}'\", name, service.getNiceTextString(), e);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NTYzMw==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550495633", "bodyText": "See above. Logging to info.", "author": "fwolter", "createdAt": "2020-12-31T14:36:19Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyBaseHandler.java", "diffHunk": "@@ -743,13 +763,13 @@ private void checkVersion(ShellyDeviceProfile prf, ShellySettingsStatus status)\n                 }\n                 autoCoIoT = true;\n             }\n+            if (status.update.hasUpdate && !version.checkBeta(getString(prf.fwVersion))) {\n+                logger.info(\"{}: {}\", thingName,\n+                        messages.get(\"versioncheck.update\", status.update.oldVersion, status.update.newVersion));", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjA3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550496072", "bodyText": "See above. Logging to info.", "author": "fwolter", "createdAt": "2020-12-31T14:38:44Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java", "diffHunk": "@@ -222,17 +238,31 @@ private void handleRoller(Command command, String groupName, Integer index, bool\n             }\n \n             if (((command instanceof UpDownType) && UpDownType.UP.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.ON.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.ON))) {\n                 logger.debug(\"{}: Open roller\", thingName);\n                 api.setRollerTurn(index, SHELLY_ALWD_ROLLER_TURN_OPEN);\n-                position = SHELLY_MAX_ROLLER_POS;\n-\n+                int pos = profile.getRollerFav(config.favoriteUP - 1);\n+                position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n+                if (pos > 0) {\n+                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                            pos);", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MTIxMA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554891210", "bodyText": "changed", "author": "markus7017", "createdAt": "2021-01-11T08:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjA3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\nindex 295cf7db8d..edab6f58e4 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n\n@@ -244,7 +244,7 @@ public class ShellyRelayHandler extends ShellyBaseHandler {\n                 int pos = profile.getRollerFav(config.favoriteUP - 1);\n                 position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n                 if (pos > 0) {\n-                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                    logger.debug(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n                             pos);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjE3NA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550496174", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.OFF))) {\n          \n          \n            \n                                || command == OnOffType.OFF) {", "author": "fwolter", "createdAt": "2020-12-31T14:39:19Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java", "diffHunk": "@@ -222,17 +238,31 @@ private void handleRoller(Command command, String groupName, Integer index, bool\n             }\n \n             if (((command instanceof UpDownType) && UpDownType.UP.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.ON.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.ON))) {\n                 logger.debug(\"{}: Open roller\", thingName);\n                 api.setRollerTurn(index, SHELLY_ALWD_ROLLER_TURN_OPEN);\n-                position = SHELLY_MAX_ROLLER_POS;\n-\n+                int pos = profile.getRollerFav(config.favoriteUP - 1);\n+                position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n+                if (pos > 0) {\n+                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                            pos);\n+                }\n             }\n             if (((command instanceof UpDownType) && UpDownType.DOWN.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.OFF.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.OFF))) {", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MjA1NA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554892054", "bodyText": "changed", "author": "markus7017", "createdAt": "2021-01-11T08:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMjE1OA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r556822158", "bodyText": "I don't see any change.", "author": "fwolter", "createdAt": "2021-01-13T20:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTIxNDA3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r561214071", "bodyText": "changed all", "author": "markus7017", "createdAt": "2021-01-20T19:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjE3NA=="}], "type": "inlineReview", "revised_code": {"commit": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\nindex 295cf7db8d..edab6f58e4 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n\n@@ -244,7 +244,7 @@ public class ShellyRelayHandler extends ShellyBaseHandler {\n                 int pos = profile.getRollerFav(config.favoriteUP - 1);\n                 position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n                 if (pos > 0) {\n-                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                    logger.debug(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n                             pos);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjIxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r550496219", "bodyText": "See above. Logging to info.", "author": "fwolter", "createdAt": "2020-12-31T14:39:41Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java", "diffHunk": "@@ -222,17 +238,31 @@ private void handleRoller(Command command, String groupName, Integer index, bool\n             }\n \n             if (((command instanceof UpDownType) && UpDownType.UP.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.ON.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.ON))) {\n                 logger.debug(\"{}: Open roller\", thingName);\n                 api.setRollerTurn(index, SHELLY_ALWD_ROLLER_TURN_OPEN);\n-                position = SHELLY_MAX_ROLLER_POS;\n-\n+                int pos = profile.getRollerFav(config.favoriteUP - 1);\n+                position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n+                if (pos > 0) {\n+                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                            pos);\n+                }\n             }\n             if (((command instanceof UpDownType) && UpDownType.DOWN.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.OFF.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.OFF))) {\n                 logger.debug(\"{}: Closing roller\", thingName);\n-                api.setRollerTurn(index, SHELLY_ALWD_ROLLER_TURN_CLOSE);\n-                position = SHELLY_MIN_ROLLER_POS;\n+                int pos = profile.getRollerFav(config.favoriteDOWN - 1);\n+                if (pos > 0) {\n+                    // use favorite position\n+                    if (pos > 0) {\n+                        logger.info(\"{}: Use favoriteDOWN id {} for positioning roller ({}%)\", thingName,\n+                                config.favoriteDOWN, pos);", "originalCommit": "1b5870087026072ee462495c02a52d42426d9360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MjIyMA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r554892220", "bodyText": "changed", "author": "markus7017", "createdAt": "2021-01-11T08:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5NjIxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\nindex 295cf7db8d..edab6f58e4 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n\n@@ -244,7 +244,7 @@ public class ShellyRelayHandler extends ShellyBaseHandler {\n                 int pos = profile.getRollerFav(config.favoriteUP - 1);\n                 position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n                 if (pos > 0) {\n-                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                    logger.debug(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n                             pos);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxNzkzMg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r556817932", "bodyText": "Isn't there a reasonable replacement for getHostAddress()? If you don't want to fix it now, better leave the annotation away.", "author": "fwolter", "createdAt": "2021-01-13T20:47:08Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java", "diffHunk": "@@ -105,6 +97,7 @@ protected void modified(final ComponentContext componentContext) {\n         bindingConfig.updateFromProperties(componentContext.getProperties());\n     }\n \n+    @SuppressWarnings(\"deprecation\")", "originalCommit": "19eb517aac90ff1385a936168690f671e3ad0570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MTYzNg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r557651636", "bodyText": "annotation removed", "author": "markus7017", "createdAt": "2021-01-14T19:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxNzkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "94c67caf895503206f5771e5b81dd862e18928f1", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\nindex bdc256b9c3..81bc241582 100755\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/discovery/ShellyDiscoveryParticipant.java\n\n@@ -97,7 +97,6 @@ public class ShellyDiscoveryParticipant implements MDNSDiscoveryParticipant {\n         bindingConfig.updateFromProperties(componentContext.getProperties());\n     }\n \n-    @SuppressWarnings(\"deprecation\")\n     @Nullable\n     @Override\n     public DiscoveryResult createResult(final ServiceInfo service) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMTk1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r556821953", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.ON))) {\n          \n          \n            \n                                || command == OnOffType.ON) {", "author": "fwolter", "createdAt": "2021-01-13T20:54:57Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java", "diffHunk": "@@ -222,17 +238,31 @@ private void handleRoller(Command command, String groupName, Integer index, bool\n             }\n \n             if (((command instanceof UpDownType) && UpDownType.UP.equals(command))\n-                    || ((command instanceof OnOffType) && OnOffType.ON.equals(command))) {\n+                    || ((command instanceof OnOffType) && ((OnOffType) command == OnOffType.ON))) {", "originalCommit": "19eb517aac90ff1385a936168690f671e3ad0570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MjQ3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r557652472", "bodyText": "are you sure that I could remove the instance check (command may be of different types)", "author": "markus7017", "createdAt": "2021-01-14T19:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MjgxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r557652815", "bodyText": "or do you mean\nif (((command instanceof UpDownType) && UpDownType.UP.equals(command))\n|| ((command instanceof OnOffType) && (command == OnOffType.ON))) {\n?", "author": "markus7017", "createdAt": "2021-01-14T19:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODk4OTM2MA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r558989360", "bodyText": "Actually you can do if(command == UpDownType.UP || command == OnOffType.ON). The == operator will return false if the type is different.", "author": "fwolter", "createdAt": "2021-01-16T18:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTIwMTgyNA==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r561201824", "bodyText": "changed all", "author": "markus7017", "createdAt": "2021-01-20T18:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMTk1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "41899568cd384d6610b9833049214ccc94240251", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\nindex 4777b61aee..c229acbe80 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/handler/ShellyRelayHandler.java\n\n@@ -244,7 +244,7 @@ public class ShellyRelayHandler extends ShellyBaseHandler {\n                 int pos = profile.getRollerFav(config.favoriteUP - 1);\n                 position = pos > 0 ? pos : SHELLY_MAX_ROLLER_POS;\n                 if (pos > 0) {\n-                    logger.debug(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n+                    logger.info(\"{}: Use favoriteUP id {} for positioning roller({}%)\", thingName, config.favoriteUP,\n                             pos);\n                 }\n             }\n"}}, {"oid": "41899568cd384d6610b9833049214ccc94240251", "url": "https://github.com/openhab/openhab-addons/commit/41899568cd384d6610b9833049214ccc94240251", "message": "This PR merges the 2.5 code base with new features, a bunch of bug fixes\nand improved documentation. Parts of the code has been re-factored and\nvaious issues are fixed/optimized along the way.\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:43Z", "type": "commit"}, {"oid": "d720f4623f4952d79f90fcf4604d60b7dfaae066", "url": "https://github.com/openhab/openhab-addons/commit/d720f4623f4952d79f90fcf4604d60b7dfaae066", "message": "Minor fixed, support for Shelly Color Bulb, Shelly Motion\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:43Z", "type": "commit"}, {"oid": "ce1a3ba7286dc97b7042039be8174a58a55b1d69", "url": "https://github.com/openhab/openhab-addons/commit/ce1a3ba7286dc97b7042039be8174a58a55b1d69", "message": "Review changes applied\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:43Z", "type": "commit"}, {"oid": "d49e2530d76480933e16c7101c7ddbcf3cbbf051", "url": "https://github.com/openhab/openhab-addons/commit/d49e2530d76480933e16c7101c7ddbcf3cbbf051", "message": "review change applied\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:44Z", "type": "commit"}, {"oid": "94c67caf895503206f5771e5b81dd862e18928f1", "url": "https://github.com/openhab/openhab-addons/commit/94c67caf895503206f5771e5b81dd862e18928f1", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:44Z", "type": "commit"}, {"oid": "94c67caf895503206f5771e5b81dd862e18928f1", "url": "https://github.com/openhab/openhab-addons/commit/94c67caf895503206f5771e5b81dd862e18928f1", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T15:54:44Z", "type": "forcePushed"}, {"oid": "8336b8884903091b6e3f4017f2feb69208263973", "url": "https://github.com/openhab/openhab-addons/commit/8336b8884903091b6e3f4017f2feb69208263973", "message": "Review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T19:10:37Z", "type": "commit"}, {"oid": "41719db5c4c8be7ea03a670d484cbbd7a9987861", "url": "https://github.com/openhab/openhab-addons/commit/41719db5c4c8be7ea03a670d484cbbd7a9987861", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T19:20:53Z", "type": "commit"}, {"oid": "41719db5c4c8be7ea03a670d484cbbd7a9987861", "url": "https://github.com/openhab/openhab-addons/commit/41719db5c4c8be7ea03a670d484cbbd7a9987861", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-20T19:20:53Z", "type": "forcePushed"}, {"oid": "fc0ee6249c8c28d89703915d2264c9573b856a27", "url": "https://github.com/openhab/openhab-addons/commit/fc0ee6249c8c28d89703915d2264c9573b856a27", "message": "README updated\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-23T16:14:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzg4MDk0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r563880943", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ;", "author": "fwolter", "createdAt": "2021-01-25T16:56:28Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyChannelDefinitions.java", "diffHunk": "@@ -0,0 +1,609 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.shelly.internal.provider;\n+\n+import static org.openhab.binding.shelly.internal.ShellyBindingConstants.*;\n+import static org.openhab.binding.shelly.internal.util.ShellyUtils.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellyControlRoller;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellyInputState;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsDimmer;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsEMeter;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsGlobal;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsMeter;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsRelay;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsRgbwLight;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellySettingsStatus;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellyStatusLightChannel;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellyStatusRelay;\n+import org.openhab.binding.shelly.internal.api.ShellyApiJsonDTO.ShellyStatusSensor;\n+import org.openhab.binding.shelly.internal.api.ShellyDeviceProfile;\n+import org.openhab.binding.shelly.internal.handler.ShellyBaseHandler;\n+import org.openhab.core.thing.Channel;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.binding.builder.ChannelBuilder;\n+import org.openhab.core.thing.type.ChannelKind;\n+import org.openhab.core.thing.type.ChannelTypeUID;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The {@link ShellyCHANNEL_DEFINITIONSDTO} defines channel information for dynamically created channels. Those will be\n+ * added on the first thing status update\n+ *\n+ * @author Markus Michels - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(service = ShellyChannelDefinitions.class)\n+public class ShellyChannelDefinitions {\n+\n+    public static final String ITEMT_STRING = \"String\";\n+    public static final String ITEMT_NUMBER = \"Number\";\n+    public static final String ITEMT_SWITCH = \"Switch\";\n+    public static final String ITEMT_CONTACT = \"Contact\";\n+    public static final String ITEMT_ROLLER = \"Rollershutter\";\n+    public static final String ITEMT_DIMMER = \"Dimmer\";\n+    public static final String ITEMT_LOCATION = \"Location\";\n+    public static final String ITEMT_DATETIME = \"DateTime\";\n+    public static final String ITEMT_TEMP = \"Number:Temperature\";\n+    public static final String ITEMT_LUX = \"Number:Illuminance\";\n+    public static final String ITEMT_POWER = \"Number:Power\";\n+    public static final String ITEMT_ENERGY = \"Number:Energy\";\n+    public static final String ITEMT_VOLT = \"Number:ElectricPotential\";\n+    public static final String ITEMT_AMP = \"Number:ElectricPotential\";\n+    public static final String ITEMT_ANGLE = \"Number:Angle\";\n+    public static final String ITEMT_DISTANCE = \"Number:Length\";\n+    public static final String ITEMT_SPEED = \"Number:Speed\";\n+    public static final String ITEMT_VOLUME = \"Number:Volume\";\n+    public static final String ITEMT_TIME = \"Number:Time\";\n+    public static final String ITEMT_PERCENT = \"Number:Dimensionless\";\n+\n+    // shortcuts to avoid line breaks (make code more readable)\n+    private static final String CHGR_DEVST = CHANNEL_GROUP_DEV_STATUS;\n+    private static final String CHGR_RELAY = CHANNEL_GROUP_RELAY_CONTROL;\n+    private static final String CHGR_ROLLER = CHANNEL_GROUP_ROL_CONTROL;\n+    private static final String CHGR_LIGHT = CHANNEL_GROUP_LIGHT_CONTROL;\n+    private static final String CHGR_STATUS = CHANNEL_GROUP_STATUS;\n+    private static final String CHGR_METER = CHANNEL_GROUP_METER;\n+    private static final String CHGR_SENSOR = CHANNEL_GROUP_SENSOR;\n+    private static final String CHGR_BAT = CHANNEL_GROUP_BATTERY;\n+\n+    public static final String PREFIX_GROUP = \"group-type.\" + BINDING_ID + \".\";\n+    public static final String PREFIX_CHANNEL = \"channel-type.\" + BINDING_ID + \".\";\n+\n+    private static final ChannelMap CHANNEL_DEFINITIONS = new ChannelMap();\n+\n+    @Activate\n+    public ShellyChannelDefinitions(@Reference ShellyTranslationProvider translationProvider) {\n+        ShellyTranslationProvider m = translationProvider;\n+\n+        // Device: Internal Temp\n+        CHANNEL_DEFINITIONS\n+                // Device\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_NAME, \"deviceName\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_ITEMP, \"deviceTemp\", ITEMT_TEMP))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_WAKEUP, \"sensorWakeup\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_ACCUWATTS, \"meterAccuWatts\", ITEMT_POWER))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_ACCUTOTAL, \"meterAccuTotal\", ITEMT_POWER))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_ACCURETURNED, \"meterAccuReturned\", ITEMT_POWER))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_CHARGER, \"charger\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_LED_STATUS_DISABLE, \"ledStatusDisable\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_LED_POWER_DISABLE, \"ledPowerDisable\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_SELFTTEST, \"selfTest\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_UPTIME, \"uptime\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_HEARTBEAT, \"heartBeat\", ITEMT_DATETIME))\n+                .add(new ShellyChannel(m, CHGR_DEVST, CHANNEL_DEVST_UPDATE, \"updateAvailable\", ITEMT_SWITCH))\n+\n+                // Relay\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_OUTPUT_NAME, \"outputName\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_OUTPUT, \"system:power\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_INPUT, \"inputState\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_BUTTON_TRIGGER, \"system:button\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_STATUS_EVENTTYPE, \"lastEvent\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_STATUS_EVENTCOUNT, \"eventCount\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_TIMER_AUTOON, \"timerAutoOn\", ITEMT_TIME))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_TIMER_AUTOOFF, \"timerAutoOff\", ITEMT_TIME))\n+                .add(new ShellyChannel(m, CHGR_RELAY, CHANNEL_TIMER_ACTIVE, \"timerActive\", ITEMT_SWITCH))\n+\n+                // Dimmer\n+                .add(new ShellyChannel(m, CHANNEL_GROUP_DIMMER_CONTROL, CHANNEL_BRIGHTNESS, \"dimmerBrightness\",\n+                        ITEMT_DIMMER))\n+\n+                // Roller\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_CONTROL, \"rollerShutter\", ITEMT_ROLLER))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_POS, \"rollerPosition\", ITEMT_DIMMER))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_FAV, \"rollerFavorite\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_STATE, \"rollerState\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_STOPR, \"rollerStop\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_ROL_CONTROL_SAFETY, \"rollerSafety\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_INPUT, \"inputState\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_STATUS_EVENTTYPE, \"lastEvent\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_STATUS_EVENTCOUNT, \"eventCount\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_ROLLER, CHANNEL_EVENT_TRIGGER, \"system:button\", \"system:button\"))\n+\n+                // RGBW2\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_LIGHT_POWER, \"system:power\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_INPUT, \"inputState\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_BUTTON_TRIGGER, \"system:button\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_STATUS_EVENTTYPE, \"lastEvent\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_STATUS_EVENTCOUNT, \"eventCount\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_TIMER_AUTOON, \"timerAutoOn\", ITEMT_TIME))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_TIMER_AUTOOFF, \"timerAutoOff\", ITEMT_TIME))\n+                .add(new ShellyChannel(m, CHGR_LIGHT, CHANNEL_TIMER_ACTIVE, \"timerActive\", ITEMT_SWITCH))\n+\n+                // Power Meter\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_METER_CURRENTWATTS, \"meterWatts\", ITEMT_POWER))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_METER_TOTALKWH, \"meterTotal\", ITEMT_ENERGY))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_METER_LASTMIN1, \"lastPower1\", ITEMT_ENERGY))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_LAST_UPDATE, \"lastUpdate\", ITEMT_DATETIME))\n+\n+                // EMeter\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_EMETER_TOTALRET, \"meterReturned\", ITEMT_ENERGY))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_EMETER_REACTWATTS, \"meterReactive\", ITEMT_POWER))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_EMETER_VOLTAGE, \"meterVoltage\", ITEMT_VOLT))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_EMETER_CURRENT, \"meterCurrent\", ITEMT_AMP))\n+                .add(new ShellyChannel(m, CHGR_METER, CHANNEL_EMETER_PFACTOR, \"meterPowerFactor\", ITEMT_NUMBER))\n+\n+                // Sensors\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_TEMP, \"sensorTemp\", ITEMT_TEMP))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_HUM, \"sensorHumidity\", ITEMT_PERCENT))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_LUX, \"sensorLux\", ITEMT_LUX))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_ILLUM, \"sensorIllumination\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_VOLTAGE, \"sensorADC\", ITEMT_VOLT))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_CONTACT, \"sensorContact\", ITEMT_CONTACT))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_SSTATE, \"sensorState\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_VIBRATION, \"sensorVibration\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_TILT, \"sensorTilt\", ITEMT_ANGLE))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_MOTION, \"sensorMotion\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_MOTION_TS, \"motionTimestamp\", ITEMT_DATETIME))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_FLOOD, \"sensorFlood\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_SMOKE, \"sensorSmoke\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_PPM, \"sensorPPM\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_VALVE, \"sensorValve\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_ALARM_STATE, \"alarmState\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_SENSOR_ERROR, \"sensorError\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_LAST_UPDATE, \"lastUpdate\", ITEMT_DATETIME))\n+\n+                // Button/ix3\n+                .add(new ShellyChannel(m, CHGR_STATUS, CHANNEL_INPUT, \"inputState\", ITEMT_SWITCH))\n+                .add(new ShellyChannel(m, CHGR_STATUS, CHANNEL_STATUS_EVENTTYPE, \"lastEvent\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_STATUS, CHANNEL_STATUS_EVENTCOUNT, \"eventCount\", ITEMT_NUMBER))\n+                .add(new ShellyChannel(m, CHGR_STATUS, CHANNEL_BUTTON_TRIGGER, \"system:button\", ITEMT_STRING))\n+                .add(new ShellyChannel(m, CHGR_STATUS, CHANNEL_LAST_UPDATE, \"lastUpdate\", ITEMT_DATETIME))\n+\n+                // Addon with external sensors\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP1, \"sensorExtTemp\", ITEMT_TEMP))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP2, \"sensorExtTemp\", ITEMT_TEMP))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP3, \"sensorExtTemp\", ITEMT_TEMP))\n+                .add(new ShellyChannel(m, CHGR_SENSOR, CHANNEL_ESENDOR_HUMIDITY, \"sensorExtHum\", ITEMT_PERCENT))\n+\n+                // Battery\n+                .add(new ShellyChannel(m, CHGR_BAT, CHANNEL_SENSOR_BAT_LEVEL, \"system:battery-level\", ITEMT_PERCENT))\n+                .add(new ShellyChannel(m, CHGR_BAT, CHANNEL_SENSOR_BAT_LOW, \"system:low-battery\", ITEMT_SWITCH));\n+    }\n+\n+    public static @Nullable ShellyChannel getDefinition(String channelName) throws IllegalArgumentException {\n+        String group = substringBefore(channelName, \"#\");\n+        String channel = substringAfter(channelName, \"#\");\n+\n+        if (group.contains(CHANNEL_GROUP_METER)) {\n+            group = CHANNEL_GROUP_METER; // map meter1..n to meter\n+        } else if (group.contains(CHANNEL_GROUP_RELAY_CONTROL)) {\n+            group = CHANNEL_GROUP_RELAY_CONTROL; // map meter1..n to meter\n+        } else if (group.contains(CHANNEL_GROUP_LIGHT_CHANNEL)) {\n+            group = CHANNEL_GROUP_LIGHT_CHANNEL;\n+        } else if (group.contains(CHANNEL_GROUP_STATUS)) {\n+            group = CHANNEL_GROUP_STATUS; // map status1..n to meter\n+        }\n+\n+        if (channel.startsWith(CHANNEL_INPUT)) {\n+            channel = CHANNEL_INPUT;\n+        } else if (channel.startsWith(CHANNEL_BUTTON_TRIGGER)) {\n+            channel = CHANNEL_BUTTON_TRIGGER;\n+        } else if (channel.startsWith(CHANNEL_STATUS_EVENTTYPE)) {\n+            channel = CHANNEL_STATUS_EVENTTYPE;\n+        } else if (channel.startsWith(CHANNEL_STATUS_EVENTCOUNT)) {\n+            channel = CHANNEL_STATUS_EVENTCOUNT;\n+        }\n+\n+        String channelId = group + \"#\" + channel;\n+        return CHANNEL_DEFINITIONS.get(channelId);\n+    }\n+\n+    /**\n+     * Auto-create relay channels depending on relay type/mode\n+     *\n+     * @return ArrayList<Channel> of channels to be added to the thing\n+     */\n+    public static Map<String, Channel> createDeviceChannels(final Thing thing, final ShellyDeviceProfile profile,\n+            final ShellySettingsStatus status) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+\n+        addChannel(thing, add, profile.settings.name != null, CHGR_DEVST, CHANNEL_DEVST_NAME);\n+\n+        if (!profile.isSensor) {\n+            // Only some devices report the internal device temp\n+            addChannel(thing, add, (status.tmp != null) || (status.temperature != null), CHGR_DEVST,\n+                    CHANNEL_DEVST_ITEMP);\n+        }\n+\n+        // If device has more than 1 meter the channel accumulatedWatts receives the accumulated value\n+        boolean accuChannel = (((status.meters != null) && (status.meters.size() > 1) && !profile.isRoller\n+                && !profile.isRGBW2) || ((status.emeters != null && status.emeters.size() > 1)));\n+        addChannel(thing, add, accuChannel, CHGR_DEVST, CHANNEL_DEVST_ACCUWATTS);\n+        addChannel(thing, add, accuChannel, CHGR_DEVST, CHANNEL_DEVST_ACCUTOTAL);\n+        addChannel(thing, add, accuChannel && (status.emeters != null), CHGR_DEVST, CHANNEL_DEVST_ACCURETURNED);\n+        addChannel(thing, add, true, CHGR_DEVST, CHANNEL_DEVST_UPDATE);\n+        addChannel(thing, add, true, CHGR_DEVST, CHANNEL_DEVST_UPTIME);\n+        addChannel(thing, add, true, CHGR_DEVST, CHANNEL_DEVST_HEARTBEAT);\n+\n+        if (profile.settings.ledPowerDisable != null) {\n+            addChannel(thing, add, true, CHGR_DEVST, CHANNEL_LED_POWER_DISABLE);\n+        }\n+        if (profile.settings.ledStatusDisable != null) {\n+            addChannel(thing, add, true, CHGR_DEVST, CHANNEL_LED_STATUS_DISABLE); // WiFi status LED\n+        }\n+        return add;\n+    }\n+\n+    /**\n+     * Auto-create relay channels depending on relay type/mode\n+     *\n+     * @return ArrayList<Channel> of channels to be added to the thing\n+     */\n+    public static Map<String, Channel> createRelayChannels(final Thing thing, final ShellyDeviceProfile profile,\n+            final ShellyStatusRelay relay, int idx) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+        String group = profile.getControlGroup(idx);\n+\n+        ShellySettingsRelay rs = profile.settings.relays.get(idx);\n+        addChannel(thing, add, rs.ison != null, group, CHANNEL_OUTPUT);\n+        addChannel(thing, add, rs.name != null, group, CHANNEL_OUTPUT_NAME);\n+        addChannel(thing, add, rs.autoOn != null, group, CHANNEL_TIMER_AUTOON);\n+        addChannel(thing, add, rs.autoOff != null, group, CHANNEL_TIMER_AUTOOFF);\n+        addChannel(thing, add, rs.hasTimer != null, group, CHANNEL_TIMER_ACTIVE);\n+\n+        // Shelly 1/1PM Addon\n+        if (relay.extTemperature != null) {\n+            addChannel(thing, add, relay.extTemperature.sensor1 != null, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP1);\n+            addChannel(thing, add, relay.extTemperature.sensor2 != null, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP2);\n+            addChannel(thing, add, relay.extTemperature.sensor3 != null, CHGR_SENSOR, CHANNEL_ESENDOR_TEMP3);\n+        }\n+        if (relay.extHumidity != null) {\n+            addChannel(thing, add, relay.extHumidity.sensor1 != null, CHGR_SENSOR, CHANNEL_ESENDOR_HUMIDITY);\n+        }\n+\n+        return add;\n+    }\n+\n+    public static Map<String, Channel> createDimmerChannels(final Thing thing, final ShellyDeviceProfile profile,\n+            final ShellySettingsStatus dstatus, int idx) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+        String group = profile.getControlGroup(idx);\n+\n+        // Shelly Dimmer has an additional brightness channel\n+        addChannel(thing, add, profile.isDimmer, group, CHANNEL_BRIGHTNESS);\n+\n+        ShellySettingsDimmer ds = profile.settings.dimmers.get(idx);\n+        addChannel(thing, add, ds.autoOn != null, group, CHANNEL_TIMER_AUTOON);\n+        addChannel(thing, add, ds.autoOff != null, group, CHANNEL_TIMER_AUTOOFF);\n+        return add;\n+    }\n+\n+    public static Map<String, Channel> createLightChannels(final Thing thing, final ShellyDeviceProfile profile,\n+            final ShellyStatusLightChannel status, int idx) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+        String group = profile.getControlGroup(idx);\n+\n+        ShellySettingsRgbwLight light = profile.settings.lights.get(idx);\n+        // The is no brightness channel in color mode, so we need a power channel\n+        addChannel(thing, add, profile.inColor, group, CHANNEL_LIGHT_POWER);\n+\n+        addChannel(thing, add, light.autoOn != null, group, CHANNEL_TIMER_AUTOON);\n+        addChannel(thing, add, light.autoOff != null, group, CHANNEL_TIMER_AUTOOFF);\n+        addChannel(thing, add, status.hasTimer != null, group, CHANNEL_TIMER_ACTIVE);\n+        return add;\n+    }\n+\n+    public static Map<String, Channel> createInputChannels(final Thing thing, final ShellyDeviceProfile profile,\n+            final ShellySettingsStatus status, String group) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+        if (status.inputs != null) {\n+            // Create channels per input. For devices with more than 1 input (Dimmer, 1L) multiple channel sets are\n+            // created by adding the index to the channel name\n+            boolean multi = ((profile.numRelays == 1) || profile.isDimmer || profile.isRoller)\n+                    && (profile.numInputs >= 2);\n+            for (int i = 0; i < profile.numInputs; i++) {\n+                String suffix = multi ? String.valueOf(i + 1) : \"\";\n+                ShellyInputState input = status.inputs.get(i);\n+                addChannel(thing, add, true, group, CHANNEL_INPUT + suffix);\n+                if (profile.inButtonMode(i)) {\n+                    addChannel(thing, add, input.event != null, group, CHANNEL_STATUS_EVENTTYPE + suffix);\n+                    addChannel(thing, add, input.eventCount != null, group, CHANNEL_STATUS_EVENTCOUNT + suffix);\n+                }\n+                addChannel(thing, add, true, group,\n+                        (!profile.isRoller ? CHANNEL_BUTTON_TRIGGER + suffix : CHANNEL_EVENT_TRIGGER));\n+            }\n+        } else if (status.input != null) {\n+            // old RGBW2 firmware\n+            addChannel(thing, add, true, group, CHANNEL_INPUT);\n+            addChannel(thing, add, true, group, CHANNEL_BUTTON_TRIGGER);\n+        }\n+        return add;\n+    }\n+\n+    public static Map<String, Channel> createRollerChannels(Thing thing, final ShellyControlRoller roller) {\n+        Map<String, Channel> add = new LinkedHashMap<>();\n+        addChannel(thing, add, true, CHGR_ROLLER, CHANNEL_ROL_CONTROL_CONTROL);\n+        addChannel(thing, add, true, CHGR_ROLLER, CHANNEL_ROL_CONTROL_STATE);\n+        addChannel(thing, add, true, CHGR_ROLLER, CHANNEL_EVENT_TRIGGER);\n+        addChannel(thing, add, roller.currentPos != null, CHGR_ROLLER, CHANNEL_ROL_CONTROL_POS);\n+        addChannel(thing, add, roller.stopReason != null, CHGR_ROLLER, CHANNEL_ROL_CONTROL_STOPR);\n+        addChannel(thing, add, roller.safetySwitch != null, CHGR_ROLLER, CHANNEL_ROL_CONTROL_SAFETY);\n+\n+        ShellyBaseHandler handler = (ShellyBaseHandler) thing.getHandler();\n+        if (handler != null) {\n+            ShellySettingsGlobal settings = handler.getProfile().settings;\n+            ;", "originalCommit": "fc0ee6249c8c28d89703915d2264c9573b856a27", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8f4417ae76a6d3bf94d567b3a5a0849a2a07ade3", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyChannelDefinitions.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyChannelDefinitions.java\nindex 28df6bb71b..0cce91ea6a 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyChannelDefinitions.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyChannelDefinitions.java\n\n@@ -367,7 +367,6 @@ public class ShellyChannelDefinitions {\n         ShellyBaseHandler handler = (ShellyBaseHandler) thing.getHandler();\n         if (handler != null) {\n             ShellySettingsGlobal settings = handler.getProfile().settings;\n-            ;\n             if (getBool(settings.favoritesEnabled) && (settings.favorites != null)) {\n                 addChannel(thing, add, roller.currentPos != null, CHGR_ROLLER, CHANNEL_ROL_CONTROL_FAV);\n             }\n"}}, {"oid": "8f4417ae76a6d3bf94d567b3a5a0849a2a07ade3", "url": "https://github.com/openhab/openhab-addons/commit/8f4417ae76a6d3bf94d567b3a5a0849a2a07ade3", "message": "review change\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-26T19:49:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTM1ODQzNg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r565358436", "bodyText": "Did you remove the @NonNullByDefault accidentally?", "author": "fwolter", "createdAt": "2021-01-27T14:37:02Z", "path": "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyTranslationProvider.java", "diffHunk": "@@ -10,40 +10,38 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  */\n-package org.openhab.binding.shelly.internal.util;\n+package org.openhab.binding.shelly.internal.provider;\n \n import java.util.Locale;\n \n-import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n import org.osgi.framework.Bundle;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n \n /**\n  * {@link ShellyTranslationProvider} provides i18n message lookup\n  *\n  * @author Markus Michels - Initial contribution\n  */\n-@NonNullByDefault\n+@Component(service = ShellyTranslationProvider.class)", "originalCommit": "8f4417ae76a6d3bf94d567b3a5a0849a2a07ade3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzMyNjA3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9508#discussion_r567326072", "bodyText": "obviously yes, fixed", "author": "markus7017", "createdAt": "2021-01-30T22:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTM1ODQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "61c9d0b23da5e695c0d7530046611934df60a0e1", "chunk": "diff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyTranslationProvider.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyTranslationProvider.java\nindex ccb9a97d5a..b39225c99a 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyTranslationProvider.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/provider/ShellyTranslationProvider.java\n\n@@ -14,6 +14,7 @@ package org.openhab.binding.shelly.internal.provider;\n \n import java.util.Locale;\n \n+import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n"}}, {"oid": "61c9d0b23da5e695c0d7530046611934df60a0e1", "url": "https://github.com/openhab/openhab-addons/commit/61c9d0b23da5e695c0d7530046611934df60a0e1", "message": "review change\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>", "committedDate": "2021-01-30T22:06:52Z", "type": "commit"}]}