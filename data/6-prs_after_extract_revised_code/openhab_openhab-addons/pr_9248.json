{"pr_number": 9248, "pr_title": "[caddx] Add thing actions to the binding", "pr_createdAt": "2020-12-05T19:37:42Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9248", "timeline": [{"oid": "b9b26b6e2dc5b20b11bad02a28a630f5b0bd25d9", "url": "https://github.com/openhab/openhab-addons/commit/b9b26b6e2dc5b20b11bad02a28a630f5b0bd25d9", "message": "Added keypad support and thing actions\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-05T19:28:50Z", "type": "commit"}, {"oid": "8fbba1742769eb13056a445419b2a4a31553b76f", "url": "https://github.com/openhab/openhab-addons/commit/8fbba1742769eb13056a445419b2a4a31553b76f", "message": "Related to #8116\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-05T19:28:57Z", "type": "commit"}, {"oid": "a142a9ba06dca9ba7a2d0a4edad828fedc8f43f9", "url": "https://github.com/openhab/openhab-addons/commit/a142a9ba06dca9ba7a2d0a4edad828fedc8f43f9", "message": "Removed ThingActions workaround\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-05T19:29:03Z", "type": "commit"}, {"oid": "dc779dad540e6d465a751bedb19fe1910b90a024", "url": "https://github.com/openhab/openhab-addons/commit/dc779dad540e6d465a751bedb19fe1910b90a024", "message": "Code cleanup\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-05T19:29:08Z", "type": "commit"}, {"oid": "1ac101086fa4672435e8274ba0a3bc8753a5e000", "url": "https://github.com/openhab/openhab-addons/commit/1ac101086fa4672435e8274ba0a3bc8753a5e000", "message": "Renamed panel actions\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-05T19:29:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMjY2OA==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r537922668", "bodyText": "I think you forgot to remove this.", "author": "cpmeister", "createdAt": "2020-12-07T23:49:20Z", "path": "bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java", "diffHunk": "@@ -26,25 +38,84 @@\n  */\n @NonNullByDefault\n public class ThingHandlerKeypad extends CaddxBaseThingHandler {\n-    /**\n-     * Constructor.\n-     *\n-     * @param thing\n-     */\n+    private final Logger logger = LoggerFactory.getLogger(ThingHandlerKeypad.class);\n+\n     public ThingHandlerKeypad(Thing thing) {\n         super(thing, CaddxThingType.KEYPAD);\n     }\n \n     @Override\n     public void updateChannel(ChannelUID channelUID, String data) {\n+        if (channelUID.getId().equals(CaddxBindingConstants.KEYPAD_KEY_PRESSED)) {\n+            StringType stringType = new StringType(data);\n+            updateState(channelUID, stringType);\n+        }\n     }\n \n     @Override\n-    public void handleCommand(ChannelUID channelUID, Command command) {\n+    public void caddxEventReceived(CaddxEvent event, Thing thing) {\n+        logger.trace(\"caddxEventReceived(): Event Received - {}.\", event);\n+\n+        if (getThing().equals(thing)) {\n+            CaddxMessage message = event.getCaddxMessage();\n+            CaddxMessageType mt = message.getCaddxMessageType();\n+            ChannelUID channelUID = null;\n+\n+            // Log event messages have special handling\n+            if (CaddxMessageType.KEYPAD_MESSAGE_RECEIVED.equals(mt)) {\n+                for (CaddxProperty p : mt.properties) {\n+                    if (!(\"\".equals(p.getId()))) {\n+                        String value = message.getPropertyById(p.getId());\n+                        channelUID = new ChannelUID(getThing().getUID(), p.getId());\n+                        updateChannel(channelUID, value);\n+                    }\n+                }\n+            }\n+\n+            updateStatus(ThingStatus.ONLINE);\n+        }\n     }\n \n     @Override\n-    public void caddxEventReceived(CaddxEvent event, Thing thing) {\n+    public void bridgeStatusChanged(ThingStatusInfo bridgeStatusInfo) {\n         updateStatus(ThingStatus.ONLINE);", "originalCommit": "1ac101086fa4672435e8274ba0a3bc8753a5e000", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5ODUwMw==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r541098503", "bodyText": "I did intentionally not remove this.\nThe keypad has a function that it can act as an input device. To do that first the enterTerminalMode() action has to be executed and then the keypad will receive an event if a button is pressed.\nIf the keypad does not enter terminal mode, it will stay offline.", "author": "jossuar", "createdAt": "2020-12-11T17:11:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMjY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE2MjkxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r541162919", "bodyText": "But the next line just sets a new status anyway...", "author": "cpmeister", "createdAt": "2020-12-11T18:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMjY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUzNjIzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r541536235", "bodyText": "You are right. I needed a coffee...\nCorrected.", "author": "jossuar", "createdAt": "2020-12-12T08:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMjY2OA=="}], "type": "inlineReview", "revised_code": {"commit": "0a61fd7e015e647735dffed8a2236567d1db924e", "chunk": "diff --git a/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java b/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\nindex bff24a7b02..08b73bf15d 100644\n--- a/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\n+++ b/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\n\n@@ -59,14 +59,13 @@ public class ThingHandlerKeypad extends CaddxBaseThingHandler {\n         if (getThing().equals(thing)) {\n             CaddxMessage message = event.getCaddxMessage();\n             CaddxMessageType mt = message.getCaddxMessageType();\n-            ChannelUID channelUID = null;\n \n             // Log event messages have special handling\n             if (CaddxMessageType.KEYPAD_MESSAGE_RECEIVED.equals(mt)) {\n                 for (CaddxProperty p : mt.properties) {\n                     if (!(\"\".equals(p.getId()))) {\n                         String value = message.getPropertyById(p.getId());\n-                        channelUID = new ChannelUID(getThing().getUID(), p.getId());\n+                        ChannelUID channelUID = new ChannelUID(getThing().getUID(), p.getId());\n                         updateChannel(channelUID, value);\n                     }\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNDI4NA==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r537924284", "bodyText": "I see no reason that this variable needs to be defined outside of the for loop.", "author": "cpmeister", "createdAt": "2020-12-07T23:53:13Z", "path": "bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java", "diffHunk": "@@ -26,25 +38,84 @@\n  */\n @NonNullByDefault\n public class ThingHandlerKeypad extends CaddxBaseThingHandler {\n-    /**\n-     * Constructor.\n-     *\n-     * @param thing\n-     */\n+    private final Logger logger = LoggerFactory.getLogger(ThingHandlerKeypad.class);\n+\n     public ThingHandlerKeypad(Thing thing) {\n         super(thing, CaddxThingType.KEYPAD);\n     }\n \n     @Override\n     public void updateChannel(ChannelUID channelUID, String data) {\n+        if (channelUID.getId().equals(CaddxBindingConstants.KEYPAD_KEY_PRESSED)) {\n+            StringType stringType = new StringType(data);\n+            updateState(channelUID, stringType);\n+        }\n     }\n \n     @Override\n-    public void handleCommand(ChannelUID channelUID, Command command) {\n+    public void caddxEventReceived(CaddxEvent event, Thing thing) {\n+        logger.trace(\"caddxEventReceived(): Event Received - {}.\", event);\n+\n+        if (getThing().equals(thing)) {\n+            CaddxMessage message = event.getCaddxMessage();\n+            CaddxMessageType mt = message.getCaddxMessageType();\n+            ChannelUID channelUID = null;", "originalCommit": "1ac101086fa4672435e8274ba0a3bc8753a5e000", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMTQ0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9248#discussion_r541101447", "bodyText": "done", "author": "jossuar", "createdAt": "2020-12-11T17:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNDI4NA=="}], "type": "inlineReview", "revised_code": {"commit": "0a61fd7e015e647735dffed8a2236567d1db924e", "chunk": "diff --git a/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java b/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\nindex bff24a7b02..08b73bf15d 100644\n--- a/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\n+++ b/bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerKeypad.java\n\n@@ -59,14 +59,13 @@ public class ThingHandlerKeypad extends CaddxBaseThingHandler {\n         if (getThing().equals(thing)) {\n             CaddxMessage message = event.getCaddxMessage();\n             CaddxMessageType mt = message.getCaddxMessageType();\n-            ChannelUID channelUID = null;\n \n             // Log event messages have special handling\n             if (CaddxMessageType.KEYPAD_MESSAGE_RECEIVED.equals(mt)) {\n                 for (CaddxProperty p : mt.properties) {\n                     if (!(\"\".equals(p.getId()))) {\n                         String value = message.getPropertyById(p.getId());\n-                        channelUID = new ChannelUID(getThing().getUID(), p.getId());\n+                        ChannelUID channelUID = new ChannelUID(getThing().getUID(), p.getId());\n                         updateChannel(channelUID, value);\n                     }\n                 }\n"}}, {"oid": "0a61fd7e015e647735dffed8a2236567d1db924e", "url": "https://github.com/openhab/openhab-addons/commit/0a61fd7e015e647735dffed8a2236567d1db924e", "message": "Review change. Moved a variable declaration.\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-11T17:16:22Z", "type": "commit"}, {"oid": "87a8a5a3ed84699eb3090ddac64a9ac9482b59f5", "url": "https://github.com/openhab/openhab-addons/commit/87a8a5a3ed84699eb3090ddac64a9ac9482b59f5", "message": "Minor correction\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-12-12T08:53:59Z", "type": "commit"}]}