{"pr_number": 7606, "pr_title": "[miio] Check configuration settings to avoid NPE", "pr_createdAt": "2020-05-11T18:11:19Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7606", "timeline": [{"oid": "150fb3aa922bcd1d7939927650c619f35bf4b176", "url": "https://github.com/openhab/openhab-addons/commit/150fb3aa922bcd1d7939927650c619f35bf4b176", "message": "[miio] Check configuration settings to avoid NPE\n\nFix #7592\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-11T18:08:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDE0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7606#discussion_r423274149", "bodyText": "Couldn't the configuration.token != null be included in the tokenCheckPass method?", "author": "cpmeister", "createdAt": "2020-05-11T19:39:58Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -282,10 +287,14 @@ protected void disconnected(String message) {\n             return miioCom;\n         }\n         final MiIoBindingConfiguration configuration = getConfigAs(MiIoBindingConfiguration.class);\n+        if (configuration.host == null || configuration.host.isEmpty()) {\n+            return null;\n+        }\n         @Nullable\n         String deviceId = configuration.deviceId;\n         try {\n-            if (deviceId != null && deviceId.length() == 8 && tokenCheckPass(configuration.token)) {\n+            if (deviceId != null && deviceId.length() == 8 && configuration.token != null\n+                    && tokenCheckPass(configuration.token)) {", "originalCommit": "150fb3aa922bcd1d7939927650c619f35bf4b176", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NTQ4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7606#discussion_r423275481", "bodyText": "Yes, it could, this was even my first approach and then I changed. But I could revert.", "author": "lolodomo", "createdAt": "2020-05-11T19:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b34c74e00d27631670e8faaaa638f9ecb139772d", "chunk": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\nindex b0d46ac9fc..da0970c6fc 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java\n\n@@ -293,8 +296,7 @@ public abstract class MiIoAbstractHandler extends BaseThingHandler implements Mi\n         @Nullable\n         String deviceId = configuration.deviceId;\n         try {\n-            if (deviceId != null && deviceId.length() == 8 && configuration.token != null\n-                    && tokenCheckPass(configuration.token)) {\n+            if (deviceId != null && deviceId.length() == 8 && tokenCheckPass(configuration.token)) {\n                 logger.debug(\"Ping Mi device {} at {}\", deviceId, configuration.host);\n                 final MiIoAsyncCommunication miioCom = new MiIoAsyncCommunication(configuration.host, token,\n                         Utils.hexStringToByteArray(deviceId), lastId, configuration.timeout);\n"}}, {"oid": "b34c74e00d27631670e8faaaa638f9ecb139772d", "url": "https://github.com/openhab/openhab-addons/commit/b34c74e00d27631670e8faaaa638f9ecb139772d", "message": "Move the null check into tokenCheckPass method\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-05-11T19:45:37Z", "type": "commit"}]}