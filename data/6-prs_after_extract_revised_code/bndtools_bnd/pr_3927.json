{"pr_number": 3927, "pr_title": "[reporter] calculate and show Checksum the bundle", "pr_createdAt": "2020-04-16T15:34:53Z", "pr_url": "https://github.com/bndtools/bnd/pull/3927", "timeline": [{"oid": "2db22607f0e8a6da65ec3a0ed658699c8e3295e8", "url": "https://github.com/bndtools/bnd/commit/2db22607f0e8a6da65ec3a0ed658699c8e3295e8", "message": "[reporter] calculate and show Checksum the bundle\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-04-16T15:38:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MzQ0Mg==", "url": "https://github.com/bndtools/bnd/pull/3927#discussion_r409663442", "bodyText": "See the aQute.libg.cryptography package for classes to compute MD5, SHA1, SHA256. They provide a nice asHex method to return the digest value as a hex string.", "author": "bjhargrave", "createdAt": "2020-04-16T15:49:37Z", "path": "biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package biz.aQute.bnd.reporter.plugins.entries.bundle;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.security.MessageDigest;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import aQute.bnd.annotation.plugin.BndPlugin;\n+import aQute.bnd.osgi.Jar;\n+import aQute.bnd.service.Plugin;\n+import aQute.bnd.service.reporter.ReportEntryPlugin;\n+import aQute.service.reporter.Reporter;\n+import biz.aQute.bnd.reporter.generator.EntryNamesReference;\n+import biz.aQute.bnd.reporter.maven.dto.ChecksumDTO;\n+\n+/**\n+ * This plugin calculates and add the checksums of the file to the report.\n+ */\n+@BndPlugin(name = \"entry.\" + EntryNamesReference.CHECKSUM)\n+public class ChecksumPlugin implements ReportEntryPlugin<Jar>, Plugin {\n+\n+\tprivate Reporter\t\t\t\t\t_reporter;\n+\tprivate final Map<String, String>\t_properties\t= new HashMap<>();\n+\n+\tpublic ChecksumPlugin() {\n+\t\t_properties.put(ReportEntryPlugin.ENTRY_NAME_PROPERTY, EntryNamesReference.CHECKSUM);\n+\t\t_properties.put(ReportEntryPlugin.SOURCE_CLASS_PROPERTY, Jar.class.getCanonicalName());\n+\t}\n+\n+\t@Override\n+\tpublic ChecksumDTO extract(final Jar jar, final Locale locale) {\n+\t\tObjects.requireNonNull(jar, \"jar\");\n+\t\tObjects.requireNonNull(locale, \"locale\");\n+\n+\t\tChecksumDTO checksumDTO = new ChecksumDTO();", "originalCommit": "2db22607f0e8a6da65ec3a0ed658699c8e3295e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MTc1NA==", "url": "https://github.com/bndtools/bnd/pull/3927#discussion_r409691754", "bodyText": "I changed it to aQute.libg.cryptography. I is really useful!\nHad to fix SHA-512. Not sure with that. please have a look.", "author": "stbischof", "createdAt": "2020-04-16T16:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MzQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "70de08af364fade763a083863f78f09771a3a39d", "chunk": "diff --git a/biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java b/biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java\ndeleted file mode 100644\nindex c11a964fd..000000000\n--- a/biz.aQute.bnd.reporter/src/biz/aQute/bnd/reporter/plugins/entries/bundle/ChecksumPlugin.java\n+++ /dev/null\n\n@@ -1,95 +0,0 @@\n-package biz.aQute.bnd.reporter.plugins.entries.bundle;\n-\n-import java.io.File;\n-import java.nio.file.Files;\n-import java.security.MessageDigest;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Objects;\n-\n-import aQute.bnd.annotation.plugin.BndPlugin;\n-import aQute.bnd.osgi.Jar;\n-import aQute.bnd.service.Plugin;\n-import aQute.bnd.service.reporter.ReportEntryPlugin;\n-import aQute.service.reporter.Reporter;\n-import biz.aQute.bnd.reporter.generator.EntryNamesReference;\n-import biz.aQute.bnd.reporter.maven.dto.ChecksumDTO;\n-\n-/**\n- * This plugin calculates and add the checksums of the file to the report.\n- */\n-@BndPlugin(name = \"entry.\" + EntryNamesReference.CHECKSUM)\n-public class ChecksumPlugin implements ReportEntryPlugin<Jar>, Plugin {\n-\n-\tprivate Reporter\t\t\t\t\t_reporter;\n-\tprivate final Map<String, String>\t_properties\t= new HashMap<>();\n-\n-\tpublic ChecksumPlugin() {\n-\t\t_properties.put(ReportEntryPlugin.ENTRY_NAME_PROPERTY, EntryNamesReference.CHECKSUM);\n-\t\t_properties.put(ReportEntryPlugin.SOURCE_CLASS_PROPERTY, Jar.class.getCanonicalName());\n-\t}\n-\n-\t@Override\n-\tpublic ChecksumDTO extract(final Jar jar, final Locale locale) {\n-\t\tObjects.requireNonNull(jar, \"jar\");\n-\t\tObjects.requireNonNull(locale, \"locale\");\n-\n-\t\tChecksumDTO checksumDTO = new ChecksumDTO();\n-\t\tchecksumDTO.md5 = calcChecksum(jar, \"MD5\");\n-\t\tchecksumDTO.sha1 = calcChecksum(jar, \"SHA-1\");\n-\t\tchecksumDTO.sha256 = calcChecksum(jar, \"SHA-256\");\n-\n-\t\tif (checksumDTO.md5 == null && checksumDTO.sha1 == null && checksumDTO.sha256 == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn checksumDTO;\n-\t}\n-\n-\tprivate String calcChecksum(Jar jar, String algorithm) {\n-\n-\t\tFile f = jar.getSource();\n-\t\tif (f != null && f.isFile()) {\n-\t\t\ttry {\n-\n-\t\t\t\tfinal MessageDigest digest = MessageDigest.getInstance(algorithm);\n-\t\t\t\tfinal byte[] hashbytes = digest.digest(Files.readAllBytes(f.toPath()));\n-\t\t\t\tString hex = bytesToHex(hashbytes);\n-\t\t\t\treturn hex;\n-\t\t\t} catch (Exception e) {\n-\t\t\t\t_reporter.warning(\"Could not calculate checksum s%\", algorithm);\n-\t\t\t}\n-\t\t} else {\n-\t\t\t_reporter.warning(\"Could not get File to calculate the checksum\");\n-\t\t}\n-\n-\t\treturn null;\n-\t}\n-\n-\tprivate static String bytesToHex(byte[] hash) {\n-\t\tStringBuffer hexString = new StringBuffer();\n-\t\tfor (int i = 0; i < hash.length; i++) {\n-\t\t\tString hex = Integer.toHexString(0xff & hash[i]);\n-\t\t\tif (hex.length() == 1)\n-\t\t\t\thexString.append('0');\n-\t\t\thexString.append(hex);\n-\t\t}\n-\t\treturn hexString.toString();\n-\t}\n-\n-\t@Override\n-\tpublic Map<String, String> getProperties() {\n-\t\treturn Collections.unmodifiableMap(_properties);\n-\t}\n-\n-\t@Override\n-\tpublic void setProperties(final Map<String, String> map) throws Exception {\n-\t\t_properties.putAll(map);\n-\t}\n-\n-\t@Override\n-\tpublic void setReporter(final Reporter processor) {\n-\t\t_reporter = processor;\n-\t}\n-}\n"}}, {"oid": "70de08af364fade763a083863f78f09771a3a39d", "url": "https://github.com/bndtools/bnd/commit/70de08af364fade763a083863f78f09771a3a39d", "message": "[libg.crypto] fix width of SHA_512  https://tools.ietf.org/html/rfc6234#section-5.2\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-04-16T16:26:55Z", "type": "commit"}, {"oid": "94d3e0376ed042a3176e1ff9514fc107b9435342", "url": "https://github.com/bndtools/bnd/commit/94d3e0376ed042a3176e1ff9514fc107b9435342", "message": "[reporter] calculate and show Checksum the bundle\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-04-16T16:27:07Z", "type": "commit"}, {"oid": "94d3e0376ed042a3176e1ff9514fc107b9435342", "url": "https://github.com/bndtools/bnd/commit/94d3e0376ed042a3176e1ff9514fc107b9435342", "message": "[reporter] calculate and show Checksum the bundle\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-04-16T16:27:07Z", "type": "forcePushed"}]}