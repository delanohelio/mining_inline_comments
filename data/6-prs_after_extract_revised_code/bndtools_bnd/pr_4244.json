{"pr_number": 4244, "pr_title": "[junit-platform] Pluggable test listeners", "pr_createdAt": "2020-08-01T15:38:51Z", "pr_url": "https://github.com/bndtools/bnd/pull/4244", "timeline": [{"oid": "448fea94207b35bf3b5251a763e78761c1f6979f", "url": "https://github.com/bndtools/bnd/commit/448fea94207b35bf3b5251a763e78761c1f6979f", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-01T15:39:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1NDMyMA==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r465854320", "bodyText": "This is problematic. When you close the tracker, you release the services. Which means you should no longer use the service objects. But you clearly keep using the service objects here. A bundle providing the service could use a ServiceFactory and disable the object in someway when the service is released. It is never good practice to use a service object after you release the service.\nA tracker like this should be created and opened in the bundle's activator start method and closed in the stop method.", "author": "bjhargrave", "createdAt": "2020-08-05T16:31:50Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java", "diffHunk": "@@ -209,6 +210,16 @@ public void executionSkipped(TestIdentifier testIdentifier, String reason) {\n \t\t\t\tmessage(\"\", \"TEST %s <<< SKIPPED\", testName(testIdentifier));\n \t\t\t}\n \t\t});\n+\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n+\t\t\tTestExecutionListener.class, null);\n+\t\ttrack.open(true);\n+\t\tOptional.ofNullable(track.getServices())\n+\t\t\t.ifPresent(services -> Stream.of(services)\n+\t\t\t\t.map(TestExecutionListener.class::cast)\n+\t\t\t\t.forEach(listener -> {\n+\t\t\t\t\tlistenerList.add(listener);\n+\t\t\t\t}));\n+\t\ttrack.close();", "originalCommit": "448fea94207b35bf3b5251a763e78761c1f6979f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4NjczOQ==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466186739", "bodyText": "Thanks for the clarification!\nI thought about opening it in the activator start, but in the end I opted for opening it just before the test run starts. The reason for this is because I would like at some time to add the option of supplying a filter to the tracker constructor so that you can control which listeners are included in the test run on a per-run basis. If ever we get the Gogo commandlet working, then in a continuous testing scenario it might be nice to be able to dynamically change that filter and have it take effect straight away without having to restart the test bundle (restarting the test bundle will cause the framework to exit if it has been launched on the main thread). See if what I've done is ok and if not I'll change it.", "author": "kriegfrj", "createdAt": "2020-08-06T07:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1NDMyMA=="}], "type": "inlineReview", "revised_code": {"commit": "e7dcc40c56647e502587755f1502ef7b62ead85e", "chunk": "diff --git a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\nindex 8b657615b..77f6dd9e4 100644\n--- a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n+++ b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n\n@@ -210,18 +207,6 @@ public class Activator implements BundleActivator, Runnable {\n \t\t\t\tmessage(\"\", \"TEST %s <<< SKIPPED\", testName(testIdentifier));\n \t\t\t}\n \t\t});\n-\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n-\t\t\tTestExecutionListener.class, null);\n-\t\ttrack.open(true);\n-\t\tOptional.ofNullable(track.getServices())\n-\t\t\t.ifPresent(services -> Stream.of(services)\n-\t\t\t\t.map(TestExecutionListener.class::cast)\n-\t\t\t\t.forEach(listener -> {\n-\t\t\t\t\tlistenerList.add(listener);\n-\t\t\t\t}));\n-\t\ttrack.close();\n-\t\tlisteners = listenerList.toArray(new TestExecutionListener[0]);\n-\n \t\tif (testcases == null) {\n \t\t\ttrace(\"automatic testing of all bundles with \" + aQute.bnd.osgi.Constants.TESTCASES + \" header\");\n \t\t\ttry {\n"}}, {"oid": "e7dcc40c56647e502587755f1502ef7b62ead85e", "url": "https://github.com/bndtools/bnd/commit/e7dcc40c56647e502587755f1502ef7b62ead85e", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-06T06:39:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyOTQyMA==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466429420", "bodyText": "You do not want true here. Using true means you want to track all services including services which are not type compatible with your bundle. So you could track a TestExecutionListener service which this bundle cannot cast to TestExecutionListener.\nJust use track.open();", "author": "bjhargrave", "createdAt": "2020-08-06T13:54:14Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java", "diffHunk": "@@ -348,11 +344,21 @@ LauncherDiscoveryRequest buildRequest(List<? extends DiscoverySelector> selector\n \tlong test(LauncherDiscoveryRequest testRequest) {\n \t\ttrace(\"testing request %s\", testRequest);\n \t\ttry {\n+\t\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n+\t\t\t\tTestExecutionListener.class, null);\n+\t\t\ttrack.open(true);", "originalCommit": "e7dcc40c56647e502587755f1502ef7b62ead85e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MDk2Mw==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466480963", "bodyText": "Done, thanks (I obviously misunderstood the docs around open(true).)", "author": "kriegfrj", "createdAt": "2020-08-06T15:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyOTQyMA=="}], "type": "inlineReview", "revised_code": {"commit": "533f97ed48158743788ad8679d6188790db537ba", "chunk": "diff --git a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\nindex 77f6dd9e4..74cc571a2 100644\n--- a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n+++ b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n\n@@ -344,21 +359,11 @@ public class Activator implements BundleActivator, Runnable {\n \tlong test(LauncherDiscoveryRequest testRequest) {\n \t\ttrace(\"testing request %s\", testRequest);\n \t\ttry {\n-\t\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n-\t\t\t\tTestExecutionListener.class, null);\n-\t\t\ttrack.open(true);\n \t\t\ttry {\n-\t\t\t\tTestExecutionListener[] listenerArray = Stream\n-\t\t\t\t\t.concat(listeners.stream(), Optional.ofNullable(track.getServices())\n-\t\t\t\t\t\t.map(Stream::of)\n-\t\t\t\t\t\t.orElseGet(Stream::empty)\n-\t\t\t\t\t\t.map(TestExecutionListener.class::cast))\n-\t\t\t\t\t.toArray(TestExecutionListener[]::new);\n-\t\t\t\tlauncher.execute(testRequest, listenerArray);\n+\t\t\t\tlauncher.execute(testRequest, listeners);\n \t\t\t} catch (Throwable t) {\n \t\t\t\ttrace(\"%s\", t);\n \t\t\t} finally {\n-\t\t\t\ttrack.close();\n \t\t\t\tsummary.getSummary()\n \t\t\t\t\t.printTo(new PrintWriter(out));\n \t\t\t}\n"}}, {"oid": "533f97ed48158743788ad8679d6188790db537ba", "url": "https://github.com/bndtools/bnd/commit/533f97ed48158743788ad8679d6188790db537ba", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-06T15:01:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NDYzMw==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466484633", "bodyText": "You revert back to the bad behavior of closing the tracker before using the tracked services.", "author": "bjhargrave", "createdAt": "2020-08-06T15:11:37Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java", "diffHunk": "@@ -209,6 +210,16 @@ public void executionSkipped(TestIdentifier testIdentifier, String reason) {\n \t\t\t\tmessage(\"\", \"TEST %s <<< SKIPPED\", testName(testIdentifier));\n \t\t\t}\n \t\t});\n+\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n+\t\t\tTestExecutionListener.class, null);\n+\t\ttrack.open();\n+\t\tOptional.ofNullable(track.getServices())\n+\t\t\t.ifPresent(services -> Stream.of(services)\n+\t\t\t\t.map(TestExecutionListener.class::cast)\n+\t\t\t\t.forEach(listener -> {\n+\t\t\t\t\tlistenerList.add(listener);\n+\t\t\t\t}));\n+\t\ttrack.close();", "originalCommit": "533f97ed48158743788ad8679d6188790db537ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ5MTQ5Mg==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466491492", "bodyText": "Oops, something went wrong with my git pull before i made the change. Will have to fox it tomorrow now... sorry!", "author": "kriegfrj", "createdAt": "2020-08-06T15:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NDYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc0NzA0Nw==", "url": "https://github.com/bndtools/bnd/pull/4244#discussion_r466747047", "bodyText": "Fixed.", "author": "kriegfrj", "createdAt": "2020-08-06T23:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NDYzMw=="}], "type": "inlineReview", "revised_code": {"commit": "2909034b93ed43da97005032baede4261361c859", "chunk": "diff --git a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\nindex 74cc571a2..866258702 100644\n--- a/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n+++ b/biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/Activator.java\n\n@@ -210,18 +207,6 @@ public class Activator implements BundleActivator, Runnable {\n \t\t\t\tmessage(\"\", \"TEST %s <<< SKIPPED\", testName(testIdentifier));\n \t\t\t}\n \t\t});\n-\t\tServiceTracker<TestExecutionListener, TestExecutionListener> track = new ServiceTracker<>(context,\n-\t\t\tTestExecutionListener.class, null);\n-\t\ttrack.open();\n-\t\tOptional.ofNullable(track.getServices())\n-\t\t\t.ifPresent(services -> Stream.of(services)\n-\t\t\t\t.map(TestExecutionListener.class::cast)\n-\t\t\t\t.forEach(listener -> {\n-\t\t\t\t\tlistenerList.add(listener);\n-\t\t\t\t}));\n-\t\ttrack.close();\n-\t\tlisteners = listenerList.toArray(new TestExecutionListener[0]);\n-\n \t\tif (testcases == null) {\n \t\t\ttrace(\"automatic testing of all bundles with \" + aQute.bnd.osgi.Constants.TESTCASES + \" header\");\n \t\t\ttry {\n"}}, {"oid": "2909034b93ed43da97005032baede4261361c859", "url": "https://github.com/bndtools/bnd/commit/2909034b93ed43da97005032baede4261361c859", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-06T23:56:30Z", "type": "forcePushed"}, {"oid": "593ef447b8d715a404af1799936e1f0d7c840fb8", "url": "https://github.com/bndtools/bnd/commit/593ef447b8d715a404af1799936e1f0d7c840fb8", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-07T00:37:54Z", "type": "commit"}, {"oid": "593ef447b8d715a404af1799936e1f0d7c840fb8", "url": "https://github.com/bndtools/bnd/commit/593ef447b8d715a404af1799936e1f0d7c840fb8", "message": "[junit-platform] Pluggable test listeners\n\nFind any OSGi services registered under the TestExecutionListener\ninterface and use them as listeners for the test execution.\n\nFixes #3526.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-08-07T00:37:54Z", "type": "forcePushed"}]}