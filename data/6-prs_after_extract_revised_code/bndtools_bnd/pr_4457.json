{"pr_number": 4457, "pr_title": "[resource] Main-Class attribute not trimmed", "pr_createdAt": "2020-12-18T09:36:48Z", "pr_url": "https://github.com/bndtools/bnd/pull/4457", "timeline": [{"oid": "f7996a3b7c558032e4656c50a3de556387feb2f1", "url": "https://github.com/bndtools/bnd/commit/f7996a3b7c558032e4656c50a3de556387feb2f1", "message": "[resource] Main-Class attribute not trimmed\n\nThe Main-Class attribute was not trimmed. This\ncaused extraneous spaces to be at the end sometimes.\n\nThis trims the Main-Class and Bundle-Version now.\n\nAlso unrolled a stream loop because the check for\ncapabilities was 20 levels deep in a stream. This makes it impossible to single step or debug.\n\nUnless there  is a demonstrable _and_ significant speed gain we should stop replacing plain old loops by streaming. Not only because it is hard to debug, it also looses the earlier context when you want to report something. Maybe if Java had true closures and no checked exception it might have been useful.\n\n\n\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-12-18T08:29:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA==", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545847004", "bodyText": "Well you lost an nice performance fix of using ResourceUtils.matcher(requirement). requirement never changes in the loop, but ResourceUtils.matches(requirement, c) keeps recomputing the filter object every time through the O(n^2) loop. So there was reason for using stream and blindly changing them back can lose things.", "author": "bjhargrave", "createdAt": "2020-12-18T13:58:30Z", "path": "biz.aQute.bndlib/src/aQute/bnd/build/WorkspaceRepositoryDynamic.java", "diffHunk": "@@ -39,11 +40,16 @@\n \t}\n \n \tprivate List<Capability> findProvider(Collection<? extends Resource> resources, Requirement requirement) {\n+\t\tList<Capability> l = new ArrayList<>();\n \t\tString namespace = requirement.getNamespace();\n-\t\treturn resources.stream()\n-\t\t\t.flatMap(resource -> ResourceUtils.capabilityStream(resource, namespace))\n-\t\t\t.filter(ResourceUtils.matcher(requirement))\n-\t\t\t.collect(ResourceUtils.toCapabilities());\n+\t\tfor (Resource r : resources) {\n+\t\t\tfor (Capability c : r.getCapabilities(namespace)) {\n+\t\t\t\tif (ResourceUtils.matches(requirement, c)) {", "originalCommit": "f7996a3b7c558032e4656c50a3de556387feb2f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0NzgxMQ==", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545947811", "bodyText": "The code had become completely unreadable. I'll check this optimization. The optimization has got nothing to do with streams.", "author": "pkriens", "createdAt": "2020-12-18T16:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk0ODMyNg==", "url": "https://github.com/bndtools/bnd/pull/4457#discussion_r545948326", "bodyText": "I already have the fix in a commit ready to push.", "author": "bjhargrave", "createdAt": "2020-12-18T16:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0NzAwNA=="}], "type": "inlineReview", "revised_code": null}]}