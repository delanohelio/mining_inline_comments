{"pr_number": 3711, "pr_title": "[jareditor] JarEditor Temp project support", "pr_createdAt": "2020-01-13T14:57:42Z", "pr_url": "https://github.com/bndtools/bnd/pull/3711", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1ODc5Mw==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365858793", "bodyText": "Why do you need the non-null filter? The Class.isInstance will already filter out null values.", "author": "bjhargrave", "createdAt": "2020-01-13T15:16:53Z", "path": "bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProjectFilter.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package bndtools.jareditor.internal;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.jdt.core.IJavaProject;\n+import org.eclipse.jface.viewers.Viewer;\n+import org.eclipse.jface.viewers.ViewerFilter;\n+\n+public class TemporaryProjectFilter extends ViewerFilter {\n+\n+\t@Override\n+\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\tif (element instanceof IJavaProject) {\n+\t\t\telement = ((IJavaProject) element).getProject();\n+\t\t}\n+\n+\t\treturn !Optional.ofNullable(element)\n+\t\t\t.filter(IProject.class::isInstance)\n+\t\t\t.map(IProject.class::cast)\n+\t\t\t.filter(Objects::nonNull)", "originalCommit": "1afe6e188c4198bfa9a71cc8af154644983eccd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2NzkzOQ==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365867939", "bodyText": "Good point, I can remove it.", "author": "gamerson", "createdAt": "2020-01-13T15:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1ODc5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "40b7a928d35bd38070cc0cbe6545b8069b913e14", "chunk": "diff --git a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProjectFilter.java b/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProjectFilter.java\ndeleted file mode 100644\nindex f864e0e09..000000000\n--- a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProjectFilter.java\n+++ /dev/null\n\n@@ -1,27 +0,0 @@\n-package bndtools.jareditor.internal;\n-\n-import java.util.Objects;\n-import java.util.Optional;\n-\n-import org.eclipse.core.resources.IProject;\n-import org.eclipse.jdt.core.IJavaProject;\n-import org.eclipse.jface.viewers.Viewer;\n-import org.eclipse.jface.viewers.ViewerFilter;\n-\n-public class TemporaryProjectFilter extends ViewerFilter {\n-\n-\t@Override\n-\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\tif (element instanceof IJavaProject) {\n-\t\t\telement = ((IJavaProject) element).getProject();\n-\t\t}\n-\n-\t\treturn !Optional.ofNullable(element)\n-\t\t\t.filter(IProject.class::isInstance)\n-\t\t\t.map(IProject.class::cast)\n-\t\t\t.filter(Objects::nonNull)\n-\t\t\t.filter(p -> TemporaryProject.PROJECT_NAME.equals(p.getName()))\n-\t\t\t.isPresent();\n-\t}\n-\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1OTY2Mg==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365859662", "bodyText": "Perhaps Bndtools should be in the name so people can associate seeing this with Bndtools?", "author": "bjhargrave", "createdAt": "2020-01-13T15:18:23Z", "path": "bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProject.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package bndtools.jareditor.internal;\n+\n+import org.eclipse.core.resources.IContainer;\n+import org.eclipse.core.resources.IFolder;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.resources.IProjectDescription;\n+import org.eclipse.core.resources.IWorkspace;\n+import org.eclipse.core.resources.IWorkspaceRoot;\n+import org.eclipse.core.resources.ResourcesPlugin;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.IPath;\n+import org.eclipse.core.runtime.IProgressMonitor;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.core.runtime.SubMonitor;\n+import org.eclipse.jdt.core.IClasspathEntry;\n+import org.eclipse.jdt.core.IJavaProject;\n+import org.eclipse.jdt.core.JavaCore;\n+import org.eclipse.jdt.core.JavaModelException;\n+import org.eclipse.jdt.launching.JavaRuntime;\n+\n+public class TemporaryProject {\n+\n+\tpublic static final String PROJECT_NAME = \"JAREditorTempFiles\";", "originalCommit": "1afe6e188c4198bfa9a71cc8af154644983eccd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2ODQ3Ng==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365868476", "bodyText": "Agreed, that would let people know where it is coming from when they encounter it.", "author": "gamerson", "createdAt": "2020-01-13T15:34:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1OTY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "40b7a928d35bd38070cc0cbe6545b8069b913e14", "chunk": "diff --git a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProject.java b/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProject.java\ndeleted file mode 100644\nindex cccf7dfe7..000000000\n--- a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryProject.java\n+++ /dev/null\n\n@@ -1,133 +0,0 @@\n-package bndtools.jareditor.internal;\n-\n-import org.eclipse.core.resources.IContainer;\n-import org.eclipse.core.resources.IFolder;\n-import org.eclipse.core.resources.IProject;\n-import org.eclipse.core.resources.IProjectDescription;\n-import org.eclipse.core.resources.IWorkspace;\n-import org.eclipse.core.resources.IWorkspaceRoot;\n-import org.eclipse.core.resources.ResourcesPlugin;\n-import org.eclipse.core.runtime.CoreException;\n-import org.eclipse.core.runtime.IPath;\n-import org.eclipse.core.runtime.IProgressMonitor;\n-import org.eclipse.core.runtime.NullProgressMonitor;\n-import org.eclipse.core.runtime.SubMonitor;\n-import org.eclipse.jdt.core.IClasspathEntry;\n-import org.eclipse.jdt.core.IJavaProject;\n-import org.eclipse.jdt.core.JavaCore;\n-import org.eclipse.jdt.core.JavaModelException;\n-import org.eclipse.jdt.launching.JavaRuntime;\n-\n-public class TemporaryProject {\n-\n-\tpublic static final String PROJECT_NAME = \"JAREditorTempFiles\";\n-\n-\tpublic TemporaryProject() {}\n-\n-\tpublic IProject getProject() throws CoreException {\n-\t\tIProgressMonitor monitor = new NullProgressMonitor();\n-\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n-\t\tIWorkspaceRoot root = workspace.getRoot();\n-\t\tIProject project = root.getProject(PROJECT_NAME);\n-\n-\t\tif (project.exists()) {\n-\t\t\tif (!project.isOpen()) {\n-\t\t\t\tproject.open(monitor);\n-\t\t\t}\n-\n-\t\t\treturn project;\n-\t\t}\n-\n-\t\tproject.create(SubMonitor.convert(monitor, 1));\n-\t\tproject.open(SubMonitor.convert(monitor, 1));\n-\n-\t\tmakeFolders(project.getFolder(\"src\"));\n-\t\tmakeFolders(project.getFolder(\"temp\"));\n-\n-\t\taddNaturesToProject(project, new String[] {\n-\t\t\tJavaCore.NATURE_ID\n-\t\t}, SubMonitor.convert(monitor, 1));\n-\n-\t\tIJavaProject jProject = JavaCore.create(project);\n-\t\tIPath fullPath = project.getFullPath();\n-\t\tjProject.setOutputLocation(fullPath.append(\"bin\"), SubMonitor.convert(monitor, 1));\n-\n-\t\tcomputeClasspath(jProject, SubMonitor.convert(monitor, 1));\n-\n-\t\treturn project;\n-\t}\n-\n-\tprivate static void addNaturesToProject(IProject proj, String[] natureIds, IProgressMonitor monitor)\n-\t\tthrows CoreException {\n-\t\tIProjectDescription description = proj.getDescription();\n-\t\tString[] prevNatures = description.getNatureIds();\n-\t\tString[] newNatures = new String[prevNatures.length + natureIds.length];\n-\t\tSystem.arraycopy(prevNatures, 0, newNatures, 0, prevNatures.length);\n-\n-\t\tfor (int i = prevNatures.length; i < newNatures.length; i++) {\n-\t\t\tnewNatures[i] = natureIds[i - prevNatures.length];\n-\t\t}\n-\n-\t\tdescription.setNatureIds(newNatures);\n-\t\tproj.setDescription(description, monitor);\n-\t}\n-\n-\tprivate void computeClasspath(IJavaProject project, IProgressMonitor monitor) {\n-\t\tIClasspathEntry[] classpath = new IClasspathEntry[2];\n-\t\tclasspath[0] = JavaCore.newContainerEntry(JavaRuntime.newDefaultJREContainerPath());\n-\t\tIProject javaProject = project.getProject();\n-\t\tIFolder folder = javaProject.getFolder(\"src\");\n-\t\tclasspath[1] = JavaCore.newSourceEntry(folder.getFullPath());\n-\n-\t\ttry {\n-\t\t\tproject.setRawClasspath(classpath, monitor);\n-\t\t} catch (JavaModelException jme) {}\n-\t}\n-\n-\tpublic IJavaProject getJavaProject() {\n-\t\ttry {\n-\t\t\tcheckForSupportProject();\n-\t\t\tIWorkspace workSpace = ResourcesPlugin.getWorkspace();\n-\t\t\tIWorkspaceRoot root = workSpace.getRoot();\n-\t\t\tIProject project = root.getProject(PROJECT_NAME);\n-\n-\t\t\tif (project.exists() && project.isOpen() && project.hasNature(JavaCore.NATURE_ID)) {\n-\t\t\t\treturn JavaCore.create(project);\n-\t\t\t}\n-\t\t} catch (CoreException ce) {}\n-\n-\t\treturn null;\n-\t}\n-\n-\tprivate static void makeFolders(IFolder folder) throws CoreException {\n-\t\tif (folder == null) {\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tIContainer parent = folder.getParent();\n-\n-\t\tif (parent instanceof IFolder) {\n-\t\t\tmakeFolders((IFolder) parent);\n-\t\t}\n-\n-\t\tif (!folder.exists()) {\n-\t\t\tfolder.create(true, true, null);\n-\t\t}\n-\t}\n-\n-\tprivate void checkForSupportProject() {\n-\t\ttry {\n-\t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n-\t\t\tIWorkspaceRoot root = workspace.getRoot();\n-\t\t\tIProject project = root.getProject(PROJECT_NAME);\n-\n-\t\t\tif (!project.exists() || !project.isOpen()) {\n-\t\t\t\tgetProject();\n-\t\t\t}\n-\n-\t\t\tmakeFolders(project.getFolder(\"temp\"));\n-\n-\t\t\tcomputeClasspath(JavaCore.create(project), new NullProgressMonitor());\n-\t\t} catch (CoreException ce) {}\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2MDcwMA==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365860700", "bodyText": "I don't see where this private method selectProject is ever called.", "author": "bjhargrave", "createdAt": "2020-01-13T15:20:14Z", "path": "bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryFile.java", "diffHunk": "@@ -63,7 +64,14 @@\n \t\t}\n \t}\n \n-\tprivate static Result<IFolder, String> select() throws CoreException, IOException {\n+\tprivate static Result<IFolder, String> selectTempProject() throws CoreException, IOException {\n+\t\tIProject project = tempProject.getJavaProject()\n+\t\t\t.getProject();\n+\n+\t\treturn Result.ok(project.getFolder(\"temp\"));\n+\t}\n+\n+\tprivate static Result<IFolder, String> selectProject() throws CoreException, IOException {", "originalCommit": "1afe6e188c4198bfa9a71cc8af154644983eccd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2OTE0NA==", "url": "https://github.com/bndtools/bnd/pull/3711#discussion_r365869144", "bodyText": "It can be removed, I just left it in case we needed both mechanisms for some reason.", "author": "gamerson", "createdAt": "2020-01-13T15:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2MDcwMA=="}], "type": "inlineReview", "revised_code": {"commit": "40b7a928d35bd38070cc0cbe6545b8069b913e14", "chunk": "diff --git a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryFile.java b/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryFile.java\nindex 2f8e0dfc8..35b76716a 100644\n--- a/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryFile.java\n+++ b/bndtools.jareditor/src/bndtools/jareditor/internal/TemporaryFile.java\n\n@@ -64,14 +63,7 @@ public class TemporaryFile {\n \t\t}\n \t}\n \n-\tprivate static Result<IFolder, String> selectTempProject() throws CoreException, IOException {\n-\t\tIProject project = tempProject.getJavaProject()\n-\t\t\t.getProject();\n-\n-\t\treturn Result.ok(project.getFolder(\"temp\"));\n-\t}\n-\n-\tprivate static Result<IFolder, String> selectProject() throws CoreException, IOException {\n+\tprivate static Result<IFolder, String> select() throws CoreException, IOException {\n \t\tif (tempFolder == null) {\n \t\t\tIProject[] projects = root.getProjects();\n \n"}}, {"oid": "40b7a928d35bd38070cc0cbe6545b8069b913e14", "url": "https://github.com/bndtools/bnd/commit/40b7a928d35bd38070cc0cbe6545b8069b913e14", "message": "[jareditor] Use workbench label provider to show standard icons\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>", "committedDate": "2020-01-13T17:08:22Z", "type": "commit"}, {"oid": "1ec7cc188915c845e06e02f6e29551c7f363b683", "url": "https://github.com/bndtools/bnd/commit/1ec7cc188915c845e06e02f6e29551c7f363b683", "message": "[jareditor] add support project for temp files instead of using linked folders\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>", "committedDate": "2020-01-13T17:09:12Z", "type": "commit"}, {"oid": "66df637c3af46ae06ffcdb3157602e4dea772b0b", "url": "https://github.com/bndtools/bnd/commit/66df637c3af46ae06ffcdb3157602e4dea772b0b", "message": "[jareditor] add jareditor temp projects to test repos\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>", "committedDate": "2020-01-13T17:10:24Z", "type": "commit"}, {"oid": "66df637c3af46ae06ffcdb3157602e4dea772b0b", "url": "https://github.com/bndtools/bnd/commit/66df637c3af46ae06ffcdb3157602e4dea772b0b", "message": "[jareditor] add jareditor temp projects to test repos\n\nSigned-off-by: Gregory Amerson <gregory.amerson@liferay.com>", "committedDate": "2020-01-13T17:10:24Z", "type": "forcePushed"}]}