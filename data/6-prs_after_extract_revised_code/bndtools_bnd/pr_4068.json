{"pr_number": 4068, "pr_title": "[explorer] Selection reaction", "pr_createdAt": "2020-05-18T12:59:21Z", "pr_url": "https://github.com/bndtools/bnd/pull/4068", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTg2Mg==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781862", "bodyText": "+1 Nice! I see this as more useful for Bndtools than simply selecting the project.", "author": "gamerson", "createdAt": "2020-05-18T17:22:38Z", "path": "bndtools.core/src/bndtools/command/OpenProjectHandler.java", "diffHunk": "@@ -75,10 +79,25 @@ private static void selectProject(IProject project) throws Exception {\n \t\t\t\t.getId());\n \t\t}\n \n+\t\tIResource select = getNotNull(() -> project.findMember(Workspace.BUILDFILE),", "originalCommit": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r426781946", "bodyText": "I'm not sure I understand the expected behavior.  It seems the \"link with editor\" toggle button that is already in the toolbar does this behavior already.  I don't see this new PartListener you added as adding much value unless I'm missing something.", "author": "gamerson", "createdAt": "2020-05-18T17:22:47Z", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -34,9 +45,34 @@\n \n \tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n-\tprivate PropertyChangeListener\tlistener;\n+\tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n+\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IProject\t\t\t\tselectedProject;\n+\tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partOpened(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partDeactivated(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partClosed(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partBroughtToTop(IWorkbenchPart part) {}\n+\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic void partActivated(IWorkbenchPart part) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (part instanceof IEditorPart) {", "originalCommit": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMTUzMA==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427101530", "bodyText": "No, it seems to not do this. I think what is happening is that the link tries to reveal the object, but if that object is not in the filtered list, it ignores the reveal. I.e. it only reveals objects that are allowed to be displayed. This listener resets the filter selection before the object is revealed.  It seems to follow the Link button. I.e. when it is off, the project is not shown in the list", "author": "pkriens", "createdAt": "2020-05-19T07:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzUwNg==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427323506", "bodyText": "That is the missing piece.  You need to have an active filter in place, and then open an editor that is in a project that is not currently being shown in the filtered list.", "author": "gamerson", "createdAt": "2020-05-19T13:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDg4OQ==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427354889", "bodyText": "Actually, I just tried that, but I'm still not seeing your original problem.  Maybe we should jump on a call so I can see what you are seeing.", "author": "gamerson", "createdAt": "2020-05-19T14:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTk0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "chunk": "diff --git a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\nindex f8e29884d..856691bd5 100644\n--- a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n+++ b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n\n@@ -29,26 +37,30 @@ import org.eclipse.ui.IEditorInput;\n import org.eclipse.ui.IEditorPart;\n import org.eclipse.ui.IFileEditorInput;\n import org.eclipse.ui.IPartListener;\n+import org.eclipse.ui.ISharedImages;\n import org.eclipse.ui.IWorkbench;\n import org.eclipse.ui.IWorkbenchPage;\n import org.eclipse.ui.IWorkbenchPart;\n import org.eclipse.ui.IWorkbenchWindow;\n import org.eclipse.ui.PlatformUI;\n import org.eclipse.ui.actions.ActionFactory;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n \n+import aQute.lib.exceptions.FunctionWithException;\n import aQute.lib.strings.Strings;\n import aQute.libg.glob.Glob;\n import bndtools.Plugin;\n \n public class BndtoolsExplorer extends PackageExplorerPart {\n-\tpublic static final String\t\tVIEW_ID\t\t= \"bndtools.PackageExplorer\";\n+\tpublic static final String\t\tVIEW_ID\t\t\t= \"bndtools.PackageExplorer\";\n \n-\tprivate final FilterPanelPart\tfilterPart\t= new FilterPanelPart(Plugin.getDefault()\n+\tprivate final FilterPanelPart\tfilterPart\t\t= new FilterPanelPart(Plugin.getDefault()\n \t\t.getScheduler());\n \tprivate PropertyChangeListener\tfilterListener;\n \tprivate Glob\t\t\t\t\tglob;\n \tboolean\t\t\t\t\t\t\tinstalled;\n-\tprivate IWorkbench\t\t\t\tworkbench\t= PlatformUI.getWorkbench();\n+\tprivate IWorkbench\t\t\t\tworkbench\t\t= PlatformUI.getWorkbench();\n \tprivate IProject\t\t\t\tselectedProject;\n \tprivate IPartListener\t\t\tpartListener\t= new IPartListener() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353430", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();\n          \n          \n            \n            Optional.ofNullable(workbench.getActiveWorkbenchWindow())\n          \n          \n            \n            \t\t\t.map(IWorkbenchWindow::getActivePage)\n          \n          \n            \n            \t\t\t.ifPresent(page -> page.addPartListener(partListener));", "author": "gamerson", "createdAt": "2020-05-19T14:36:39Z", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -52,66 +88,23 @@ public void createPartControl(Composite parent) {\n \t\t}\n \t\tc.layout();\n \n-\n \t\tfilterPart.setHint(\"Filter for projects (glob)\");\n-\t\tlistener = e -> {\n-\t\t\tString value = (String) e.getNewValue();\n-\n-\t\t\tif (Strings.nonNullOrEmpty(value)) {\n-\t\t\t\tglob = new Glob(value);\n-\t\t\t\tif (!installed) {\n-\t\t\t\t\tinstalled = true;\n-\t\t\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n-\n-\t\t\t\t\t\t@Override\n-\t\t\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n-\t\t\t\t\t\t\tif (glob == null)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\tif (element instanceof JavaProject) {\n-\t\t\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getElementName();\n-\t\t\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n-\n-\t\t\t\t\t\t\t} else if (element instanceof IProject) {\n-\t\t\t\t\t\t\t\tIProject project = (IProject) element;\n-\t\t\t\t\t\t\t\tString name = project.getName();\n-\t\t\t\t\t\t\t\treturn isSelected(project, name);\n-\t\t\t\t\t\t\t} else\n-\t\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n-\t\t\t\t\t\t\tif (glob.finds(name) >= 0)\n-\t\t\t\t\t\t\t\treturn true;\n-\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n-\n-\t\t\t\t\t\t\t\tswitch (maxSeverity) {\n-\t\t\t\t\t\t\t\t\tcase 0 :\n-\t\t\t\t\t\t\t\t\t\treturn false;\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n-\n-\t\t\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n-\t\t\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} catch (CoreException e) {\n-\t\t\t\t\t\t\t\t// ignore\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\treturn false;\n-\n-\t\t\t\t\t\t}\n-\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tglob = null;\n-\t\t\t}\n-\t\t\tgetTreeViewer().refresh();\n+\t\tfilterListener = e -> {\n+\t\t\tGlob old = glob;\n+\t\t\tglob = null;\n+\t\t\tString filterText = (String) e.getNewValue();\n+\t\t\tif (Strings.nonNullOrEmpty(filterText))\n+\t\t\t\tglob = new Glob(filterText);\n+\t\t\tif (!Objects.equals(old, glob))\n+\t\t\t\tupdate();\n \t\t};\n-\t\tfilterPart.addPropertyChangeListener(listener);\n+\t\tfilterPart.addPropertyChangeListener(filterListener);\n+\n+\t\tIWorkbenchWindow activeWorkbenchWindow = workbench.getActiveWorkbenchWindow();", "originalCommit": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2MzEwNw==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427363107", "bodyText": "I thought about this but this is a part that is being constructed. How can we construct a part when there is no activeWorkbenchWindow? I am assuming it is never null at that place?", "author": "pkriens", "createdAt": "2020-05-19T14:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5Nzc0NA==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427397744", "bodyText": "It is possible to have no active workbench window but it's not worth\nconsidering IMHO :)", "author": "gamerson", "createdAt": "2020-05-19T15:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "chunk": "diff --git a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\nindex f8e29884d..856691bd5 100644\n--- a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n+++ b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n\n@@ -74,17 +86,46 @@ public class BndtoolsExplorer extends PackageExplorerPart {\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t\t\t\t\t};\n \n+\tstatic ISharedImages\t\t\tsharedImages\t= PlatformUI.getWorkbench()\n+\t\t.getSharedImages();\n+\tstatic ImageDescriptor\t\t\twarnImage\t\t= sharedImages.getImageDescriptor(ISharedImages.IMG_OBJS_WARN_TSK);\n+\tstatic ImageDescriptor\t\t\terrorImage\t\t= sharedImages.getImageDescriptor(ISharedImages.IMG_OBJS_ERROR_TSK);\n+\tstatic ImageDescriptor\t\t\tokImage\t\t\t= Plugin.getDefault()\n+\t\t.getImageRegistry()\n+\t\t.getDescriptor(Plugin.IMG_OK);\n+\n \t@Override\n \tpublic void createPartControl(Composite parent) {\n \t\tComposite c = new Composite(parent, SWT.NONE);\n-\t\tGridLayout sl = new GridLayout(1, true);\n-\t\tc.setLayout(sl);\n-\t\tfilterPart.createControl(c);\n+\t\tGridLayout compactLayout = GridLayoutFactory.fillDefaults()\n+\t\t\t.spacing(0, 0)\n+\t\t\t.margins(0, 0)\n+\t\t\t.create();\n+\t\tc.setLayout(compactLayout);\n+\n+\t\tComposite header = new Composite(c, SWT.NONE);\n+\t\theader.setLayout(GridLayoutFactory.createFrom(compactLayout)\n+\t\t\t.numColumns(2)\n+\t\t\t.equalWidth(false)\n+\t\t\t.create());\n+\t\tGridData fillData = GridDataFactory.fillDefaults()\n+\t\t\t.grab(true, true)\n+\t\t\t.create();\n+\t\theader.setLayoutData(GridDataFactory.createFrom(fillData)\n+\t\t\t.grab(true, false)\n+\t\t\t.create());\n+\n+\t\tToolBarManager toolBarManager = new ToolBarManager(SWT.HORIZONTAL);\n+\t\ttoolBarManager.createControl(header);\n+\n+\t\tControl filterControl = filterPart.createControl(header);\n+\t\tfilterControl.setLayoutData(fillData);\n \n \t\tsuper.createPartControl(c);\n+\n \t\tControl[] children = c.getChildren();\n \t\tif (children.length > 1) {\n-\t\t\tchildren[1].setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));\n+\t\t\tchildren[1].setLayoutData(fillData);\n \t\t}\n \t\tc.layout();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1Mzg0MA==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427353840", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \tprivate IProject getProject(IEditorInput iEditorInput) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(iEditorInput)\n          \n          \n            \n            \t\t\t.map(input -> input.getAdapter(IResource.class))\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "author": "gamerson", "createdAt": "2020-05-19T14:37:12Z", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {", "originalCommit": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "chunk": "diff --git a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\nindex f8e29884d..856691bd5 100644\n--- a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n+++ b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n\n@@ -122,6 +163,56 @@ public class BndtoolsExplorer extends PackageExplorerPart {\n \t\t\t\t}\n \t\t\t}\n \t\t});\n+\n+\t\tAction action = new Action(\"Build status\", okImage) {\n+\t\t\t@Override\n+\t\t\tpublic void runWithEvent(Event event) {\n+\t\t\t\tImageDescriptor desc = getImageDescriptor();\n+\n+\t\t\t\tif (desc.equals(errorImage)) {\n+\t\t\t\t\tfilterPart.getFilterControl()\n+\t\t\t\t\t\t.setText(\":error\");\n+\t\t\t\t} else if (desc.equals(warnImage)) {\n+\t\t\t\t\tfilterPart.getFilterControl()\n+\t\t\t\t\t\t.setText(\":warning\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t};\n+\n+\t\ttoolBarManager.add(action);\n+\t\ttoolBarManager.update(true);\n+\t\theader.layout(true);\n+\n+\t\tBundleContext bundleContext = FrameworkUtil.getBundle(BndtoolsExplorer.class)\n+\t\t\t.getBundleContext();\n+\n+\t\tBuildListener buildListener = new AbstractBuildListener() {\n+\t\t\t@Override\n+\t\t\tpublic void released(IProject project) {\n+\t\t\t\tint maxStatus = Arrays.stream(ResourcesPlugin.getWorkspace()\n+\t\t\t\t\t.getRoot()\n+\t\t\t\t\t.getProjects())\n+\t\t\t\t\t.filter(IProject::isOpen)\n+\t\t\t\t\t.map(FunctionWithException\n+\t\t\t\t\t\t.asFunction(p -> p.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE)))\n+\t\t\t\t\t.reduce(IMarker.SEVERITY_INFO, Integer::max);\n+\n+\t\t\t\tswitch (maxStatus) {\n+\t\t\t\t\tcase IMarker.SEVERITY_INFO :\n+\t\t\t\t\t\taction.setImageDescriptor(okImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\taction.setImageDescriptor(warnImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\taction.setImageDescriptor(errorImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t\ttoolBarManager.update(true);\n+\t\t\t}\n+\t\t};\n+\n+\t\tbundleContext.registerService(BuildListener.class, buildListener, null);\n \t}\n \n \tprivate void update() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDA5Ng==", "url": "https://github.com/bndtools/bnd/pull/4068#discussion_r427354096", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \tprivate IProject getProject(IResource resource) {\n          \n          \n            \n            \t\treturn Optional.ofNullable(resource)\n          \n          \n            \n            \t\t\t.map(IResource::getProject)\n          \n          \n            \n            \t\t\t.orElse(null);\n          \n          \n            \n            \t}", "author": "gamerson", "createdAt": "2020-05-19T14:37:31Z", "path": "bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java", "diffHunk": "@@ -131,9 +124,115 @@ public void runWithEvent(Event event) {\n \t\t});\n \t}\n \n+\tprivate void update() {\n+\t\tif (!installed) {\n+\t\t\tinstalled = true;\n+\t\t\tgetTreeViewer().addFilter(new ViewerFilter() {\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean select(Viewer viewer, Object parentElement, Object element) {\n+\t\t\t\t\tif (glob == null)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\tif (element instanceof JavaProject) {\n+\t\t\t\t\t\tIJavaProject project = (JavaProject) element;\n+\t\t\t\t\t\tString name = project.getElementName();\n+\t\t\t\t\t\treturn isSelected(project.getProject(), name);\n+\n+\t\t\t\t\t} else if (element instanceof IProject) {\n+\t\t\t\t\t\tIProject project = (IProject) element;\n+\t\t\t\t\t\tString name = project.getName();\n+\t\t\t\t\t\treturn isSelected(project, name);\n+\t\t\t\t\t} else\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tprivate boolean isSelected(IProject project, String name) {\n+\t\t\t\t\tif (project == selectedProject)\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\tif (glob.finds(name) >= 0)\n+\t\t\t\t\t\treturn true;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tint maxSeverity = project.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE);\n+\n+\t\t\t\t\t\tswitch (maxSeverity) {\n+\t\t\t\t\t\t\tcase 0 :\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":error\") >= 0;\n+\n+\t\t\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\t\t\treturn glob.finds(\":warning\") >= 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\t\t// ignore\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn false;\n+\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n+\t\tgetTreeViewer().refresh();\n+\t}\n+\n \t@Override\n \tpublic void dispose() {\n-\t\tfilterPart.removePropertyChangeListener(listener);\n+\t\tfilterPart.removePropertyChangeListener(filterListener);\n \t\tsuper.dispose();\n \t}\n+\n+\t@Override\n+\tpublic int tryToReveal(Object element) {\n+\t\tif (element instanceof IResource) {\n+\t\t\tsetSelection(getProject((IResource) element));\n+\t\t} else\n+\t\t\tsetSelection(null);\n+\t\treturn super.tryToReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectAndReveal(Object element) {\n+\t\ttryToReveal(element);\n+\t\tsuper.selectAndReveal(element);\n+\t}\n+\n+\t@Override\n+\tpublic void selectReveal(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection) {\n+\t\t\tObject firstElement = ((IStructuredSelection) selection).getFirstElement();\n+\t\t}\n+\t\tsuper.selectReveal(selection);\n+\t}\n+\n+\tprivate void setSelection(IProject project) {\n+\t\tif (project != selectedProject) {\n+\t\t\tthis.selectedProject = project;\n+\t\t\tupdate();\n+\t\t}\n+\t}\n+\n+\tprivate IProject getProject(IEditorInput iEditorInput) {\n+\t\tif (iEditorInput == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tif (iEditorInput instanceof IFileEditorInput) {\n+\t\t\tIResource resource = ((IFileEditorInput) iEditorInput).getFile();\n+\t\t\treturn getProject(resource);\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprivate IProject getProject(IResource resource) {", "originalCommit": "7a075db7adbf355a56acd4d341222fd7a31f7a1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "chunk": "diff --git a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\nindex f8e29884d..856691bd5 100644\n--- a/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n+++ b/bndtools.core/src/bndtools/explorer/BndtoolsExplorer.java\n\n@@ -122,6 +163,56 @@ public class BndtoolsExplorer extends PackageExplorerPart {\n \t\t\t\t}\n \t\t\t}\n \t\t});\n+\n+\t\tAction action = new Action(\"Build status\", okImage) {\n+\t\t\t@Override\n+\t\t\tpublic void runWithEvent(Event event) {\n+\t\t\t\tImageDescriptor desc = getImageDescriptor();\n+\n+\t\t\t\tif (desc.equals(errorImage)) {\n+\t\t\t\t\tfilterPart.getFilterControl()\n+\t\t\t\t\t\t.setText(\":error\");\n+\t\t\t\t} else if (desc.equals(warnImage)) {\n+\t\t\t\t\tfilterPart.getFilterControl()\n+\t\t\t\t\t\t.setText(\":warning\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t};\n+\n+\t\ttoolBarManager.add(action);\n+\t\ttoolBarManager.update(true);\n+\t\theader.layout(true);\n+\n+\t\tBundleContext bundleContext = FrameworkUtil.getBundle(BndtoolsExplorer.class)\n+\t\t\t.getBundleContext();\n+\n+\t\tBuildListener buildListener = new AbstractBuildListener() {\n+\t\t\t@Override\n+\t\t\tpublic void released(IProject project) {\n+\t\t\t\tint maxStatus = Arrays.stream(ResourcesPlugin.getWorkspace()\n+\t\t\t\t\t.getRoot()\n+\t\t\t\t\t.getProjects())\n+\t\t\t\t\t.filter(IProject::isOpen)\n+\t\t\t\t\t.map(FunctionWithException\n+\t\t\t\t\t\t.asFunction(p -> p.findMaxProblemSeverity(null, false, IResource.DEPTH_INFINITE)))\n+\t\t\t\t\t.reduce(IMarker.SEVERITY_INFO, Integer::max);\n+\n+\t\t\t\tswitch (maxStatus) {\n+\t\t\t\t\tcase IMarker.SEVERITY_INFO :\n+\t\t\t\t\t\taction.setImageDescriptor(okImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase IMarker.SEVERITY_WARNING :\n+\t\t\t\t\t\taction.setImageDescriptor(warnImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase IMarker.SEVERITY_ERROR :\n+\t\t\t\t\t\taction.setImageDescriptor(errorImage);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t\ttoolBarManager.update(true);\n+\t\t\t}\n+\t\t};\n+\n+\t\tbundleContext.registerService(BuildListener.class, buildListener, null);\n \t}\n \n \tprivate void update() {\n"}}, {"oid": "ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "url": "https://github.com/bndtools/bnd/commit/ea75fa3bc902f46a09d3dd59b3e42ffe734da11b", "message": "[explorer] Selection reaction\n\n- The 'open project' command now selects the bnd.bnd or build.bnd file if present\n- The Bndtools explorer will show the project of the selected editor or the least project that had to be revealed. The reveal is used by the open project command.\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-05-19T16:46:21Z", "type": "commit"}, {"oid": "64722985bb0331b622d3db50651df42bf0c09a36", "url": "https://github.com/bndtools/bnd/commit/64722985bb0331b622d3db50651df42bf0c09a36", "message": "[explorer] Diverse changes\n\n- Added a reload button, rebuilds workspace\n- Use different icons, try to associate with JUnit bar\n- Reorganized code a bit, hard to get Eclipse code to look good :-(\n- Moved build listener to async update\n- Added a 'prompt' bar with an expanded macro\n- Prompt with Macro text in preferences\n- When a macro is selected, the hover will show its expansion\n- Restored the Syntax help on headers and instructions, not sure why that was gone, it wasn't really removed.\n\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-05-19T16:46:21Z", "type": "commit"}, {"oid": "64722985bb0331b622d3db50651df42bf0c09a36", "url": "https://github.com/bndtools/bnd/commit/64722985bb0331b622d3db50651df42bf0c09a36", "message": "[explorer] Diverse changes\n\n- Added a reload button, rebuilds workspace\n- Use different icons, try to associate with JUnit bar\n- Reorganized code a bit, hard to get Eclipse code to look good :-(\n- Moved build listener to async update\n- Added a 'prompt' bar with an expanded macro\n- Prompt with Macro text in preferences\n- When a macro is selected, the hover will show its expansion\n- Restored the Syntax help on headers and instructions, not sure why that was gone, it wasn't really removed.\n\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-05-19T16:46:21Z", "type": "forcePushed"}, {"oid": "322f8613b472cd81fd865c21d673b504dfca1ae2", "url": "https://github.com/bndtools/bnd/commit/322f8613b472cd81fd865c21d673b504dfca1ae2", "message": "[bndtools explorer] Updates\n\n- Reacts to changes in preferences\n- Now has a separate model with update handling\n- Uses closable pattern instead of hard coded dispose\n- No more fields for controls, all local variables now\n- Message Supports link to preferences when href=prefs\n- Message Supports external links\n- No expansion when preference is set to -\n- Default message with link to preferences\n\n\nSigned-off-by: Peter Kriens <Peter.Kriens@aqute.biz>", "committedDate": "2020-05-20T10:10:45Z", "type": "commit"}]}