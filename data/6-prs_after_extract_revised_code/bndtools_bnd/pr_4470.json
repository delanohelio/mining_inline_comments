{"pr_number": 4470, "pr_title": "running tests with remote agent hangs forever #4469", "pr_createdAt": "2020-12-21T20:48:32Z", "pr_url": "https://github.com/bndtools/bnd/pull/4470", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNDgyNg==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r546924826", "bodyText": "This seems an unwanted side effect. We already add me to the launcher above. Jamming into the project seems wrong. Every time you launch, you will add it again, no? I think some other solution is needed.", "author": "bjhargrave", "createdAt": "2020-12-21T20:54:53Z", "path": "biz.aQute.tester/src/aQute/tester/plugin/ProjectTesterImpl.java", "diffHunk": "@@ -83,6 +83,14 @@ protected void updateFromProject() throws Exception {\n \n \t\tlauncher.addRunBundle(me.getFile()\n \t\t\t.getAbsolutePath());\n+\n+\t\t//\n+\t\t// We also add it to the project to handle the case of the remote\n+\t\t// launcher that wants to sync the bundles with the runtime dynamically\n+\t\t//\n+\n+\t\tgetProject().getRunbundles()", "originalCommit": "dff67a6b900cd0f577961df65a326e632fe0be37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMxMzI2Mg==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r547313262", "bodyText": "There's no other way. the remote launcher is blowing away the runbundles set using launcher.addRunBundle.\nI'm open to other options.", "author": "rotty3000", "createdAt": "2020-12-22T14:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNDgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzMzQ0OA==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r547333448", "bodyText": "the tester gets the launcher instance\nthe tester calls prepare() where it adds the tester bundle to launcher runbundles\nthe tester then calls getProjectLauncher().launch(); which calls launcher.prepare() which calls launcher.updateFromProject(); which calls runbundles.clear();\n\nAlso, RemoteProjectLauncherPlugin inherits from aQute.bnd.build.ProjectLauncher which has https://github.com/bndtools/bnd/blob/master/biz.aQute.bndlib/src/aQute/bnd/build/ProjectLauncher.java#L148", "author": "rotty3000", "createdAt": "2020-12-22T15:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNDgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxNjUwMQ==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r548216501", "bodyText": "fixed this", "author": "rotty3000", "createdAt": "2020-12-23T20:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNDgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "bfb122cceb30465e5478d62cfdb657afb1b6c681", "chunk": "diff --git a/biz.aQute.tester/src/aQute/tester/plugin/ProjectTesterImpl.java b/biz.aQute.tester/src/aQute/tester/plugin/ProjectTesterImpl.java\nindex 8c1c66c8d..fb11735f1 100644\n--- a/biz.aQute.tester/src/aQute/tester/plugin/ProjectTesterImpl.java\n+++ b/biz.aQute.tester/src/aQute/tester/plugin/ProjectTesterImpl.java\n\n@@ -83,19 +83,10 @@ public class ProjectTesterImpl extends ProjectTester implements EclipseJUnitTest\n \n \t\tlauncher.addRunBundle(me.getFile()\n \t\t\t.getAbsolutePath());\n-\n-\t\t//\n-\t\t// We also add it to the project to handle the case of the remote\n-\t\t// launcher that wants to sync the bundles with the runtime dynamically\n-\t\t//\n-\n-\t\tgetProject().getRunbundles()\n-\t\t\t.add(me);\n \t}\n \n \t@Override\n \tpublic int test() throws Exception {\n-\t\tprepare();\n \t\treturn getProjectLauncher().launch();\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNTg3MA==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r546925870", "bodyText": "Doesn't this just stack up side effects since the system properties are not restored when done?", "author": "bjhargrave", "createdAt": "2020-12-21T20:57:25Z", "path": "biz.aQute.remote/src/aQute/remote/plugin/RunSessionImpl.java", "diffHunk": "@@ -96,8 +97,13 @@ public int launch() throws Exception {\n \n \t\t\tAgent agent = supervisor.getAgent();\n \n-\t\t\tif (agent.isEnvoy())\n+\t\t\tif (agent.isEnvoy()) {\n \t\t\t\tinstallFramework(agent, dto, properties);\n+\t\t\t} else {\n+\t\t\t\tfor (Entry<String, String> entry : properties.entrySet()) {\n+\t\t\t\t\tagent.setSystemProperty(entry.getKey(), entry.getValue());", "originalCommit": "dff67a6b900cd0f577961df65a326e632fe0be37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMxMjI4Ng==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r547312286", "bodyText": "I'm open to other solutions. We'd have to rewrite a testers to get information via some other means. I can't see that happening in short order. This at least is a short term yet pretty safe fix. No one else cares about these properties... and the ONLY way to hand over -runproperties in the remote use case.", "author": "rotty3000", "createdAt": "2020-12-22T14:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzMzcxMg==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r547333712", "bodyText": "I guess we could track the original value if any and then reset... I can add that.", "author": "rotty3000", "createdAt": "2020-12-22T15:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM1NTUwNg==", "url": "https://github.com/bndtools/bnd/pull/4470#discussion_r547355506", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-12-22T15:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyNTg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "c6144f0549f981bad66d6b3bd743f5de7b08bdcd", "chunk": "diff --git a/biz.aQute.remote/src/aQute/remote/plugin/RunSessionImpl.java b/biz.aQute.remote/src/aQute/remote/plugin/RunSessionImpl.java\nindex 5508bb4bd..8f57d0243 100644\n--- a/biz.aQute.remote/src/aQute/remote/plugin/RunSessionImpl.java\n+++ b/biz.aQute.remote/src/aQute/remote/plugin/RunSessionImpl.java\n\n@@ -92,30 +94,49 @@ public class RunSessionImpl implements RunSession {\n \t@Override\n \tpublic int launch() throws Exception {\n \t\ttry {\n+\t\t\tMap<String, Optional<String>> systemProperties = new HashMap<>();\n+\n \t\t\tsupervisor = new LauncherSupervisor();\n \t\t\tsupervisor.connect(dto.host, dto.agent);\n \n \t\t\tAgent agent = supervisor.getAgent();\n \n-\t\t\tif (agent.isEnvoy()) {\n-\t\t\t\tinstallFramework(agent, dto, properties);\n-\t\t\t} else {\n-\t\t\t\tfor (Entry<String, String> entry : properties.entrySet()) {\n-\t\t\t\t\tagent.setSystemProperty(entry.getKey(), entry.getValue());\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif (stdout != null)\n-\t\t\t\tsupervisor.setStdout(stdout);\n+\t\t\ttry {\n+\t\t\t\tif (agent.isEnvoy()) {\n+\t\t\t\t\tinstallFramework(agent, dto, properties);\n+\t\t\t\t} else {\n+\t\t\t\t\tfor (Entry<String, String> entry : properties.entrySet()) {\n+\t\t\t\t\t\tString key = entry.getKey();\n \n-\t\t\tif (stderr != null)\n-\t\t\t\tsupervisor.setStderr(stderr);\n+\t\t\t\t\t\tString originalValue = agent.setSystemProperty(key, entry.getValue());\n \n-\t\t\tstarted.countDown();\n+\t\t\t\t\t\tsystemProperties.put(key, Optional.ofNullable(originalValue));\n+\t\t\t\t\t}\n+\t\t\t\t}\n \n-\t\t\tupdate(dto);\n-\t\t\tint exitCode = supervisor.join();\n-\t\t\treturn exitCode;\n+\t\t\t\tif (stdout != null)\n+\t\t\t\t\tsupervisor.setStdout(stdout);\n+\n+\t\t\t\tif (stderr != null)\n+\t\t\t\t\tsupervisor.setStderr(stderr);\n+\n+\t\t\t\tstarted.countDown();\n+\n+\t\t\t\tupdate(dto);\n+\t\t\t\tint exitCode = supervisor.join();\n+\t\t\t\treturn exitCode;\n+\t\t\t} finally {\n+\t\t\t\t// Reset the original system property values\n+\t\t\t\tfor (Entry<String, Optional<String>> entry : systemProperties.entrySet()) {\n+\t\t\t\t\tString key = entry.getKey();\n+\t\t\t\t\tOptional<String> value = entry.getValue();\n+\t\t\t\t\tif (value.isPresent()) {\n+\t\t\t\t\t\tagent.setSystemProperty(key, value.get());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tagent.clearProperty(key);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \t\t} catch (Exception e) {\n \t\t\tstarted.countDown();\n \t\t\tthrow e;\n"}}, {"oid": "c6144f0549f981bad66d6b3bd743f5de7b08bdcd", "url": "https://github.com/bndtools/bnd/commit/c6144f0549f981bad66d6b3bd743f5de7b08bdcd", "message": "[remote] enable the agent to set system properties\n\nthis enables the tester to set it's tester properties when running in a remote configuration\n\nfixes #4469\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-12-22T15:53:16Z", "type": "forcePushed"}, {"oid": "bfb122cceb30465e5478d62cfdb657afb1b6c681", "url": "https://github.com/bndtools/bnd/commit/bfb122cceb30465e5478d62cfdb657afb1b6c681", "message": "[tester, launcher] ensure proper interleaving of prepare and updateFromProject\n\nfixes #4469\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-12-23T20:36:27Z", "type": "forcePushed"}, {"oid": "9edd9b00c2af190bb76dcf879e7e4efe7b3be62e", "url": "https://github.com/bndtools/bnd/commit/9edd9b00c2af190bb76dcf879e7e4efe7b3be62e", "message": "[tester] part 1 (API only): allow for tester to release the remote link without terminating the framework\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2021-01-04T17:06:00Z", "type": "commit"}, {"oid": "9edd9b00c2af190bb76dcf879e7e4efe7b3be62e", "url": "https://github.com/bndtools/bnd/commit/9edd9b00c2af190bb76dcf879e7e4efe7b3be62e", "message": "[tester] part 1 (API only): allow for tester to release the remote link without terminating the framework\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2021-01-04T17:06:00Z", "type": "forcePushed"}]}