{"pr_number": 2462, "pr_title": "Added PlayerPreResearchEvent", "pr_createdAt": "2020-10-12T17:29:31Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2462", "timeline": [{"oid": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "url": "https://github.com/Slimefun/Slimefun4/commit/9ded6d1ac410484d8c671d0094f736c6eeaa3037", "message": "Added PreCanUnlockResearchEvent\n\nThis event is called when a player click to unlock a research", "committedDate": "2020-10-12T17:19:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NjkyNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503446927", "bodyText": "This should be placed right before the class declaration.", "author": "poma123", "createdAt": "2020-10-12T17:51:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;\n+\n+    private final Player player;\n+    private final Research research;\n+    private final PlayerProfile profile;\n+    private final SlimefunItem slimefunItem;\n+    private final Category category;\n+\n+    /**\n+     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+     * This is called called before {@link Research#canUnlock(Player)}\n+     * The event is not called for the cheat sheet\n+     *\n+     * @author uiytt\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     *\n+     */", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NzY5NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503447695", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n          \n          \n            \n                @ParametersAreNonnullByDefault\n          \n          \n            \n                public PreCanUnlockResearchEvent(Player p, Research research, PlayerProfile profile, SlimefunItem slimefunItem, Category category) {\n          \n      \n    \n    \n  \n\nMake sure to import javax.annotation.ParametersAreNonnullByDefault if doing so.\nAlso, I think it would be enough to store only the Player, Research and SlimefunItem instance in this event.", "author": "poma123", "createdAt": "2020-10-12T17:52:59Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;\n+\n+    private final Player player;\n+    private final Research research;\n+    private final PlayerProfile profile;\n+    private final SlimefunItem slimefunItem;\n+    private final Category category;\n+\n+    /**\n+     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+     * This is called called before {@link Research#canUnlock(Player)}\n+     * The event is not called for the cheat sheet\n+     *\n+     * @author uiytt\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     *\n+     */\n+    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0ODM3Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503448376", "bodyText": "Please add an empty line between these methods.", "author": "poma123", "createdAt": "2020-10-12T17:54:36Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;\n+\n+    private final Player player;\n+    private final Research research;\n+    private final PlayerProfile profile;\n+    private final SlimefunItem slimefunItem;\n+    private final Category category;\n+\n+    /**\n+     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+     * This is called called before {@link Research#canUnlock(Player)}\n+     * The event is not called for the cheat sheet\n+     *\n+     * @author uiytt\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     *\n+     */\n+    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+        Validate.notNull(p, \"The Player cannot be null\");\n+        Validate.notNull(research, \"Research cannot be null\");\n+        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n+        Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n+        Validate.notNull(category, \"Category cannot be null\");\n+\n+        this.player = p;\n+        this.research = research;\n+        this.profile = profile;\n+        this.slimefunItem = slimefunItem;\n+        this.category = category;\n+    }\n+\n+    @Nonnull\n+    public Player getPlayer() {\n+        return this.player;\n+    }\n+    @Nonnull\n+    public Research getResearch() {\n+        return this.research;\n+    }\n+    @Nonnull\n+    public PlayerProfile getProfile() {\n+        return this.profile;\n+    }\n+    @Nonnull\n+    public SlimefunItem getSlimefunItem() {\n+        return this.slimefunItem;\n+    }", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0ODQ3MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503448471", "bodyText": "Remove this empty line.", "author": "poma123", "createdAt": "2020-10-12T17:54:49Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;\n+\n+    private final Player player;\n+    private final Research research;\n+    private final PlayerProfile profile;\n+    private final SlimefunItem slimefunItem;\n+    private final Category category;\n+\n+    /**\n+     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+     * This is called called before {@link Research#canUnlock(Player)}\n+     * The event is not called for the cheat sheet\n+     *\n+     * @author uiytt\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     *\n+     */\n+    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+        Validate.notNull(p, \"The Player cannot be null\");\n+        Validate.notNull(research, \"Research cannot be null\");\n+        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n+        Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n+        Validate.notNull(category, \"Category cannot be null\");\n+\n+        this.player = p;\n+        this.research = research;\n+        this.profile = profile;\n+        this.slimefunItem = slimefunItem;\n+        this.category = category;\n+    }\n+\n+    @Nonnull\n+    public Player getPlayer() {\n+        return this.player;\n+    }\n+    @Nonnull\n+    public Research getResearch() {\n+        return this.research;\n+    }\n+    @Nonnull\n+    public PlayerProfile getProfile() {\n+        return this.profile;\n+    }\n+    @Nonnull\n+    public SlimefunItem getSlimefunItem() {\n+        return this.slimefunItem;\n+    }\n+    @Nonnull\n+    public Category getCategory() {\n+        return this.category;\n+    }\n+\n+", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0OTk1OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503449958", "bodyText": "Formatting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n          \n          \n            \n                                Bukkit.getPluginManager().callEvent(event);\n          \n          \n            \n                                if(!event.isCancelled()) {\n          \n          \n            \n                                PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, profile, item, category);\n          \n          \n            \n                                Bukkit.getPluginManager().callEvent(event);\n          \n          \n            \n                                if (!event.isCancelled()) {", "author": "poma123", "createdAt": "2020-10-12T17:58:02Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java", "diffHunk": "@@ -237,15 +239,20 @@ private void addSlimefunItem(Category category, int page, Player p, PlayerProfil\n     private void research(Player p, PlayerProfile profile, SlimefunItem item, Research research, Category category, int page) {\n         SlimefunPlugin.runSync(() -> {\n             if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(p.getUniqueId())) {\n-                if (research.canUnlock(p)) {\n-                    if (profile.hasUnlocked(research)) {\n-                        openCategory(profile, category, page);\n-                    } else {\n-                        unlockItem(p, item, pl -> openCategory(profile, category, page));\n-                    }\n+                if (profile.hasUnlocked(research)) {\n+                    openCategory(profile, category, page);\n                 } else {\n-                    SlimefunPlugin.getLocalization().sendMessage(p, \"messages.not-enough-xp\", true);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    Bukkit.getPluginManager().callEvent(event);\n+                    if(!event.isCancelled()) {", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\nindex 9b4aeed6a..b1b19529f 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n\n@@ -242,9 +242,10 @@ public class BookSlimefunGuide implements SlimefunGuideImplementation {\n                 if (profile.hasUnlocked(research)) {\n                     openCategory(profile, category, page);\n                 } else {\n-                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, item);\n                     Bukkit.getPluginManager().callEvent(event);\n-                    if(!event.isCancelled()) {\n+\n+                    if (!event.isCancelled()) {\n                         if (research.canUnlock(p)) {\n                             unlockItem(p, item, pl -> openCategory(profile, category, page));\n                         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1NjMzMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503456330", "bodyText": "Formatting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n          \n          \n            \n                                    Bukkit.getPluginManager().callEvent(event);\n          \n          \n            \n                                    if(!event.isCancelled()) {\n          \n          \n            \n                                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, profile, sfitem, category);\n          \n          \n            \n                                    Bukkit.getPluginManager().callEvent(event);\n          \n          \n            \n                                    if (!event.isCancelled()) {", "author": "poma123", "createdAt": "2020-10-12T18:09:45Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java", "diffHunk": "@@ -284,15 +286,20 @@ private void displaySlimefunItem(ChestMenu menu, Category category, Player p, Pl\n             menu.addItem(index, new CustomItem(Material.BARRIER, ChatColor.WHITE + ItemUtils.getItemName(sfitem.getItem()), \"&4&l\" + SlimefunPlugin.getLocalization().getMessage(p, \"guide.locked\"), \"\", \"&a> Click to unlock\", \"\", \"&7Cost: &b\" + research.getCost() + \" Level(s)\"));\n             menu.addMenuClickHandler(index, (pl, slot, item, action) -> {\n                 if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(pl.getUniqueId())) {\n-                    if (research.canUnlock(pl)) {\n-                        if (profile.hasUnlocked(research)) {\n-                            openCategory(profile, category, page);\n-                        } else {\n-                            unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n-                        }\n+                    if (profile.hasUnlocked(research)) {\n+                        openCategory(profile, category, page);\n                     } else {\n-                        SlimefunPlugin.getLocalization().sendMessage(pl, \"messages.not-enough-xp\", true);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        Bukkit.getPluginManager().callEvent(event);\n+                        if(!event.isCancelled()) {", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\nindex 6d6bdb936..16ad24646 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n\n@@ -289,9 +289,10 @@ public class ChestSlimefunGuide implements SlimefunGuideImplementation {\n                     if (profile.hasUnlocked(research)) {\n                         openCategory(profile, category, page);\n                     } else {\n-                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, sfitem);\n                         Bukkit.getPluginManager().callEvent(event);\n-                        if(!event.isCancelled()) {\n+\n+                        if (!event.isCancelled()) {\n                             if (research.canUnlock(pl)) {\n                                 unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n                             } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1NzYyNQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503457625", "bodyText": "There could be an empty line before this statement.\n                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, profile, sfitem, category);\n                        Bukkit.getPluginManager().callEvent(event);\n                        \n                        if (!event.isCancelled()) {", "author": "poma123", "createdAt": "2020-10-12T18:12:08Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java", "diffHunk": "@@ -284,15 +286,20 @@ private void displaySlimefunItem(ChestMenu menu, Category category, Player p, Pl\n             menu.addItem(index, new CustomItem(Material.BARRIER, ChatColor.WHITE + ItemUtils.getItemName(sfitem.getItem()), \"&4&l\" + SlimefunPlugin.getLocalization().getMessage(p, \"guide.locked\"), \"\", \"&a> Click to unlock\", \"\", \"&7Cost: &b\" + research.getCost() + \" Level(s)\"));\n             menu.addMenuClickHandler(index, (pl, slot, item, action) -> {\n                 if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(pl.getUniqueId())) {\n-                    if (research.canUnlock(pl)) {\n-                        if (profile.hasUnlocked(research)) {\n-                            openCategory(profile, category, page);\n-                        } else {\n-                            unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n-                        }\n+                    if (profile.hasUnlocked(research)) {\n+                        openCategory(profile, category, page);\n                     } else {\n-                        SlimefunPlugin.getLocalization().sendMessage(pl, \"messages.not-enough-xp\", true);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        Bukkit.getPluginManager().callEvent(event);\n+                        if(!event.isCancelled()) {", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\nindex 6d6bdb936..16ad24646 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n\n@@ -289,9 +289,10 @@ public class ChestSlimefunGuide implements SlimefunGuideImplementation {\n                     if (profile.hasUnlocked(research)) {\n                         openCategory(profile, category, page);\n                     } else {\n-                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, sfitem);\n                         Bukkit.getPluginManager().callEvent(event);\n-                        if(!event.isCancelled()) {\n+\n+                        if (!event.isCancelled()) {\n                             if (research.canUnlock(pl)) {\n                                 unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n                             } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1ODA2NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503458065", "bodyText": "There could be an empty line before this statement.\n                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, profile, sfitem, category);\n                        Bukkit.getPluginManager().callEvent(event);\n                        \n                        if (!event.isCancelled()) {", "author": "poma123", "createdAt": "2020-10-12T18:12:35Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java", "diffHunk": "@@ -237,15 +239,20 @@ private void addSlimefunItem(Category category, int page, Player p, PlayerProfil\n     private void research(Player p, PlayerProfile profile, SlimefunItem item, Research research, Category category, int page) {\n         SlimefunPlugin.runSync(() -> {\n             if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(p.getUniqueId())) {\n-                if (research.canUnlock(p)) {\n-                    if (profile.hasUnlocked(research)) {\n-                        openCategory(profile, category, page);\n-                    } else {\n-                        unlockItem(p, item, pl -> openCategory(profile, category, page));\n-                    }\n+                if (profile.hasUnlocked(research)) {\n+                    openCategory(profile, category, page);\n                 } else {\n-                    SlimefunPlugin.getLocalization().sendMessage(p, \"messages.not-enough-xp\", true);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    Bukkit.getPluginManager().callEvent(event);\n+                    if(!event.isCancelled()) {", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\nindex 9b4aeed6a..b1b19529f 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n\n@@ -242,9 +242,10 @@ public class BookSlimefunGuide implements SlimefunGuideImplementation {\n                 if (profile.hasUnlocked(research)) {\n                     openCategory(profile, category, page);\n                 } else {\n-                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, item);\n                     Bukkit.getPluginManager().callEvent(event);\n-                    if(!event.isCancelled()) {\n+\n+                    if (!event.isCancelled()) {\n                         if (research.canUnlock(p)) {\n                             unlockItem(p, item, pl -> openCategory(profile, category, page));\n                         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2MjE1OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503462159", "bodyText": "No need to initialize this variable. Also, could be moved right below the category variable.", "author": "poma123", "createdAt": "2020-10-12T18:20:39Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2NzI2OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503467269", "bodyText": "No need to use this. in these methods.\nCould also add some javadocs to these methods.", "author": "poma123", "createdAt": "2020-10-12T18:32:43Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private boolean cancelled = false;\n+\n+    private final Player player;\n+    private final Research research;\n+    private final PlayerProfile profile;\n+    private final SlimefunItem slimefunItem;\n+    private final Category category;\n+\n+    /**\n+     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+     * This is called called before {@link Research#canUnlock(Player)}\n+     * The event is not called for the cheat sheet\n+     *\n+     * @author uiytt\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     *\n+     */\n+    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+        Validate.notNull(p, \"The Player cannot be null\");\n+        Validate.notNull(research, \"Research cannot be null\");\n+        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n+        Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n+        Validate.notNull(category, \"Category cannot be null\");\n+\n+        this.player = p;\n+        this.research = research;\n+        this.profile = profile;\n+        this.slimefunItem = slimefunItem;\n+        this.category = category;\n+    }\n+\n+    @Nonnull\n+    public Player getPlayer() {\n+        return this.player;\n+    }\n+    @Nonnull\n+    public Research getResearch() {\n+        return this.research;\n+    }\n+    @Nonnull\n+    public PlayerProfile getProfile() {\n+        return this.profile;\n+    }\n+    @Nonnull\n+    public SlimefunItem getSlimefunItem() {\n+        return this.slimefunItem;\n+    }\n+    @Nonnull\n+    public Category getCategory() {\n+        return this.category;\n+    }", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxMjUzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503512532", "bodyText": "I really don't think this need javadocs, I can if you really want but  I think this is really quite explanatory by itself.", "author": "uiytt", "createdAt": "2020-10-12T20:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2NzI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNDQ5NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503514495", "bodyText": "Fair enough.", "author": "poma123", "createdAt": "2020-10-12T20:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2NzI2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex 8ad65c629..f2d7e4447 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -13,64 +13,55 @@ import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n \n import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n \n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}\n+ * The event is not called for the cheat sheet\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private boolean cancelled = false;\n \n     private final Player player;\n     private final Research research;\n-    private final PlayerProfile profile;\n     private final SlimefunItem slimefunItem;\n-    private final Category category;\n-\n-    /**\n-     * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n-     * This is called called before {@link Research#canUnlock(Player)}\n-     * The event is not called for the cheat sheet\n-     *\n-     * @author uiytt\n-     *\n-     * @see ChestSlimefunGuide\n-     * @see BookSlimefunGuide\n-     *\n-     */\n-    public PreCanUnlockResearchEvent(@Nonnull Player p, @Nonnull Research research, @Nonnull PlayerProfile profile, @Nonnull SlimefunItem slimefunItem, @Nonnull Category category) {\n+\n+    private boolean cancelled;\n+\n+\n+    @ParametersAreNonnullByDefault\n+    public PreCanUnlockResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n         Validate.notNull(research, \"Research cannot be null\");\n-        Validate.notNull(profile, \"PlayerProfile cannot be null\");\n         Validate.notNull(slimefunItem, \"SlimefunItem cannot be null\");\n-        Validate.notNull(category, \"Category cannot be null\");\n \n         this.player = p;\n         this.research = research;\n-        this.profile = profile;\n         this.slimefunItem = slimefunItem;\n-        this.category = category;\n     }\n \n     @Nonnull\n     public Player getPlayer() {\n-        return this.player;\n+        return player;\n     }\n+\n     @Nonnull\n     public Research getResearch() {\n-        return this.research;\n-    }\n-    @Nonnull\n-    public PlayerProfile getProfile() {\n-        return this.profile;\n+        return research;\n     }\n+\n     @Nonnull\n     public SlimefunItem getSlimefunItem() {\n-        return this.slimefunItem;\n+        return slimefunItem;\n     }\n-    @Nonnull\n-    public Category getCategory() {\n-        return this.category;\n-    }\n-\n \n     @Nonnull\n     public static HandlerList getHandlerList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2OTc5NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503469794", "bodyText": "Remove this empty line.", "author": "poma123", "createdAt": "2020-10-12T18:38:38Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java", "diffHunk": "@@ -237,15 +239,20 @@ private void addSlimefunItem(Category category, int page, Player p, PlayerProfil\n     private void research(Player p, PlayerProfile profile, SlimefunItem item, Research research, Category category, int page) {\n         SlimefunPlugin.runSync(() -> {\n             if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(p.getUniqueId())) {\n-                if (research.canUnlock(p)) {\n-                    if (profile.hasUnlocked(research)) {\n-                        openCategory(profile, category, page);\n-                    } else {\n-                        unlockItem(p, item, pl -> openCategory(profile, category, page));\n-                    }\n+                if (profile.hasUnlocked(research)) {\n+                    openCategory(profile, category, page);\n                 } else {\n-                    SlimefunPlugin.getLocalization().sendMessage(p, \"messages.not-enough-xp\", true);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    Bukkit.getPluginManager().callEvent(event);\n+                    if(!event.isCancelled()) {\n+                        if (research.canUnlock(p)) {\n+                            unlockItem(p, item, pl -> openCategory(profile, category, page));\n+                        } else {\n+                            SlimefunPlugin.getLocalization().sendMessage(p, \"messages.not-enough-xp\", true);\n+                        }\n+                    }\n                 }\n+", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\nindex 9b4aeed6a..b1b19529f 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n\n@@ -242,9 +242,10 @@ public class BookSlimefunGuide implements SlimefunGuideImplementation {\n                 if (profile.hasUnlocked(research)) {\n                     openCategory(profile, category, page);\n                 } else {\n-                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,item,category);\n+                    PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, item);\n                     Bukkit.getPluginManager().callEvent(event);\n-                    if(!event.isCancelled()) {\n+\n+                    if (!event.isCancelled()) {\n                         if (research.canUnlock(p)) {\n                             unlockItem(p, item, pl -> openCategory(profile, category, page));\n                         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2OTgyMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r503469822", "bodyText": "Remove this empty line.", "author": "poma123", "createdAt": "2020-10-12T18:38:42Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java", "diffHunk": "@@ -284,15 +286,20 @@ private void displaySlimefunItem(ChestMenu menu, Category category, Player p, Pl\n             menu.addItem(index, new CustomItem(Material.BARRIER, ChatColor.WHITE + ItemUtils.getItemName(sfitem.getItem()), \"&4&l\" + SlimefunPlugin.getLocalization().getMessage(p, \"guide.locked\"), \"\", \"&a> Click to unlock\", \"\", \"&7Cost: &b\" + research.getCost() + \" Level(s)\"));\n             menu.addMenuClickHandler(index, (pl, slot, item, action) -> {\n                 if (!SlimefunPlugin.getRegistry().getCurrentlyResearchingPlayers().contains(pl.getUniqueId())) {\n-                    if (research.canUnlock(pl)) {\n-                        if (profile.hasUnlocked(research)) {\n-                            openCategory(profile, category, page);\n-                        } else {\n-                            unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n-                        }\n+                    if (profile.hasUnlocked(research)) {\n+                        openCategory(profile, category, page);\n                     } else {\n-                        SlimefunPlugin.getLocalization().sendMessage(pl, \"messages.not-enough-xp\", true);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        Bukkit.getPluginManager().callEvent(event);\n+                        if(!event.isCancelled()) {\n+                            if (research.canUnlock(pl)) {\n+                                unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n+                            } else {\n+                                SlimefunPlugin.getLocalization().sendMessage(pl, \"messages.not-enough-xp\", true);\n+                            }\n+                        }\n                     }\n+", "originalCommit": "9ded6d1ac410484d8c671d0094f736c6eeaa3037", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd8603a6d854f83956f570c5e7abacebec984d17", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\nindex 6d6bdb936..16ad24646 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/ChestSlimefunGuide.java\n\n@@ -289,9 +289,10 @@ public class ChestSlimefunGuide implements SlimefunGuideImplementation {\n                     if (profile.hasUnlocked(research)) {\n                         openCategory(profile, category, page);\n                     } else {\n-                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p,research,profile,sfitem,category);\n+                        PreCanUnlockResearchEvent event = new PreCanUnlockResearchEvent(p, research, sfitem);\n                         Bukkit.getPluginManager().callEvent(event);\n-                        if(!event.isCancelled()) {\n+\n+                        if (!event.isCancelled()) {\n                             if (research.canUnlock(pl)) {\n                                 unlockItem(pl, sfitem, player -> openCategory(profile, category, page));\n                             } else {\n"}}, {"oid": "cd8603a6d854f83956f570c5e7abacebec984d17", "url": "https://github.com/Slimefun/Slimefun4/commit/cd8603a6d854f83956f570c5e7abacebec984d17", "message": "Formatting fix", "committedDate": "2020-10-12T20:12:37Z", "type": "commit"}, {"oid": "916d2bf4ba807a95e7b66af45128a8d2eb3a95de", "url": "https://github.com/Slimefun/Slimefun4/commit/916d2bf4ba807a95e7b66af45128a8d2eb3a95de", "message": "Removed empty line", "committedDate": "2020-10-12T20:21:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MjI2Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r504572267", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n          \n          \n            \n             * This is called called before {@link Research#canUnlock(Player)}\n          \n          \n            \n             * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n          \n          \n            \n             * This is called before {@link Research#canUnlock(Player)}.", "author": "svr333", "createdAt": "2020-10-14T10:32:04Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n+ * This is called called before {@link Research#canUnlock(Player)}", "originalCommit": "916d2bf4ba807a95e7b66af45128a8d2eb3a95de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5MzA5Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r504593093", "bodyText": "Will fix the typo\nAs for the same code; yes I will add a method in research like Research#clickInteraction(SlimefunGuideImplementation,Player,Item)\n(Looking for a better name)", "author": "uiytt", "createdAt": "2020-10-14T11:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NTM4NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r505645384", "bodyText": "Fixed typo and created : guideClickInteraction method in research", "author": "uiytt", "createdAt": "2020-10-15T15:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MjI2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "08b32ce89f154d648eb3a56e263a4561563f9d28", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex f2d7e4447..ddc3e299d 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -16,9 +16,9 @@ import javax.annotation.Nonnull;\n import javax.annotation.ParametersAreNonnullByDefault;\n \n /**\n- * This {@link Event} is called whenever a {@link Player} click to unlock a research.\n- * This is called called before {@link Research#canUnlock(Player)}\n- * The event is not called for the cheat sheet\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The event is not called for the cheat sheet.\n  *\n  * @author uiytt\n  *\n"}}, {"oid": "08b32ce89f154d648eb3a56e263a4561563f9d28", "url": "https://github.com/Slimefun/Slimefun4/commit/08b32ce89f154d648eb3a56e263a4561563f9d28", "message": "Typo fix", "committedDate": "2020-10-14T15:39:16Z", "type": "commit"}, {"oid": "19133a05f9f17ba8861609b8bbe4f6759abd54b1", "url": "https://github.com/Slimefun/Slimefun4/commit/19133a05f9f17ba8861609b8bbe4f6759abd54b1", "message": "Added guideClickInteraction method\n\nAdded a method in research which manage what to do when a player click on a un-researched item in a guide", "committedDate": "2020-10-14T16:28:54Z", "type": "commit"}, {"oid": "f987e6b85de15da7b17f6a9fcdb17bc40a40c213", "url": "https://github.com/Slimefun/Slimefun4/commit/f987e6b85de15da7b17f6a9fcdb17bc40a40c213", "message": "Added unit test for event\n\nI'm not so sure about this.\nI've never writed any tests before", "committedDate": "2020-10-15T15:34:56Z", "type": "commit"}, {"oid": "0a18c3089092aeeefc65521198c4695266b703f8", "url": "https://github.com/Slimefun/Slimefun4/commit/0a18c3089092aeeefc65521198c4695266b703f8", "message": "Removed now useless method : research", "committedDate": "2020-10-15T15:38:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUyNDk5OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508524998", "bodyText": "I'd rather put @author uiytt to a new line below Cookie's in the javadoc of the constructor.", "author": "poma123", "createdAt": "2020-10-20T13:54:36Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java", "diffHunk": "@@ -189,6 +195,42 @@ public Research addItems(ItemStack... items) {\n         return items;\n     }\n \n+    /**\n+     * Handle what to do when a {@link Player} clicks on an un-researched item in\n+     * a {@link SlimefunGuideImplementation}.\n+     *\n+     * @author TheBusyBiscuit, uiytt", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\nindex d659925a8..8cb014bf7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n\n@@ -199,7 +199,8 @@ public class Research implements Keyed {\n      * Handle what to do when a {@link Player} clicks on an un-researched item in\n      * a {@link SlimefunGuideImplementation}.\n      *\n-     * @author TheBusyBiscuit, uiytt\n+     * @author TheBusyBiscuit\n+     * @author uiytt\n      *\n      * @param guide The {@link SlimefunGuideImplementation} used.\n      * @param player The {@link Player} who clicked on the item.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU0MTUxOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508541518", "bodyText": "Remove this empty line please :(((", "author": "poma123", "createdAt": "2020-10-20T14:10:26Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The event is not called for the cheat sheet.\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+\n+    private final Player player;\n+    private final Research research;\n+    private final SlimefunItem slimefunItem;\n+\n+    private boolean cancelled;\n+", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex ddc3e299d..eda49dcb4 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -1,19 +1,16 @@\n package io.github.thebusybiscuit.slimefun4.api.events;\n \n-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n-import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n-import me.mrCookieSlime.Slimefun.Objects.Category;\n-import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n-import org.apache.commons.lang.Validate;\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.ParametersAreNonnullByDefault;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n \n /**\n  * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2MzE2OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508563169", "bodyText": "should this not be on top", "author": "J3fftw1", "createdAt": "2020-10-20T14:35:06Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex ddc3e299d..eda49dcb4 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -1,19 +1,16 @@\n package io.github.thebusybiscuit.slimefun4.api.events;\n \n-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n-import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n-import me.mrCookieSlime.Slimefun.Objects.Category;\n-import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n-import org.apache.commons.lang.Validate;\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.ParametersAreNonnullByDefault;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n \n /**\n  * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2MzMyNQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508563325", "bodyText": "then this", "author": "J3fftw1", "createdAt": "2020-10-20T14:35:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex ddc3e299d..eda49dcb4 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -1,19 +1,16 @@\n package io.github.thebusybiscuit.slimefun4.api.events;\n \n-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n-import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n-import me.mrCookieSlime.Slimefun.Objects.Category;\n-import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n-import org.apache.commons.lang.Validate;\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.ParametersAreNonnullByDefault;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n \n /**\n  * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2MzQ2Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508563466", "bodyText": "third this", "author": "J3fftw1", "createdAt": "2020-10-20T14:35:27Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.apache.commons.lang.Validate;", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex ddc3e299d..eda49dcb4 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -1,19 +1,16 @@\n package io.github.thebusybiscuit.slimefun4.api.events;\n \n-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n-import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n-import me.mrCookieSlime.Slimefun.Objects.Category;\n-import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n-import org.apache.commons.lang.Validate;\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.ParametersAreNonnullByDefault;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n \n /**\n  * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2MzgwMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r508563801", "bodyText": "this as last", "author": "J3fftw1", "createdAt": "2020-10-20T14:35:53Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;", "originalCommit": "0a18c3089092aeeefc65521198c4695266b703f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MTM0Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510191347", "bodyText": "I think I've done what you wanted (not sure), although I'm not convinced of the utility of sorting imports...", "author": "uiytt", "createdAt": "2020-10-22T14:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2MzgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nindex ddc3e299d..eda49dcb4 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n\n@@ -1,19 +1,16 @@\n package io.github.thebusybiscuit.slimefun4.api.events;\n \n-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n-import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n-import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n-import me.mrCookieSlime.Slimefun.Objects.Category;\n-import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n-import org.apache.commons.lang.Validate;\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.ParametersAreNonnullByDefault;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n \n /**\n  * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n"}}, {"oid": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "url": "https://github.com/Slimefun/Slimefun4/commit/95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "message": "Formatting fix", "committedDate": "2020-10-22T14:06:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MjYzNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510192636", "bodyText": "Formatting.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    research.guideClickInteraction(guide,player,profile,sfItem,sfItem.getCategory(),0);\n          \n          \n            \n                    research.guideClickInteraction(guide, player, profile, sfItem, sfItem.getCategory(), 0);", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:09:16Z", "path": "src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java", "diffHunk": "@@ -182,4 +187,29 @@ void testUnlockableResearch() {\n         Assertions.assertTrue(research.canUnlock(player));\n     }\n \n+    @Test\n+    @DisplayName(\"Test PreCanUnlockResearchEvent\")\n+    void testPreCanUnlockResearchEvent() throws InterruptedException {\n+        SlimefunPlugin.getRegistry().setResearchingEnabled(true);\n+\n+        NamespacedKey key = new NamespacedKey(plugin, \"simple_research\");\n+        Research research = new Research(key, 250, \"Test\", 10);\n+        research.register();\n+\n+        SlimefunGuideImplementation guide = Mockito.mock(SlimefunGuideImplementation.class);\n+        Player player = server.addPlayer();\n+        PlayerProfile profile = TestUtilities.awaitProfile(player);\n+        SlimefunItem sfItem = TestUtilities.mockSlimefunItem(plugin, \"RESEARCH_TEST\", new CustomItem(Material.TORCH, \"&bResearch Test\"));\n+\n+        research.guideClickInteraction(guide,player,profile,sfItem,sfItem.getCategory(),0);", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk1ODcwOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510958708", "bodyText": "Yeah, I should have seen that", "author": "uiytt", "createdAt": "2020-10-23T15:20:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MjYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java b/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\nindex 2a5cb1399..fde341e3d 100644\n--- a/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\n+++ b/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\n\n@@ -188,7 +187,7 @@ class TestResearches {\n     }\n \n     @Test\n-    @DisplayName(\"Test PreCanUnlockResearchEvent\")\n+    @DisplayName(\"Test PlayerPreResearchEvent\")\n     void testPreCanUnlockResearchEvent() throws InterruptedException {\n         SlimefunPlugin.getRegistry().setResearchingEnabled(true);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MzY5Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510193693", "bodyText": "Having brackets on a one-liner would be redundant.\nAlso why don't you just do runSync() inside your interaction method?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                SlimefunPlugin.runSync(() -> {\n          \n          \n            \n                                    research.guideClickInteraction(this, player, profile, item, category, page);\n          \n          \n            \n                                })\n          \n          \n            \n                                SlimefunPlugin.runSync(() -> \n          \n          \n            \n                                    research.guideClickInteraction(this, player, profile, item, category, page);\n          \n          \n            \n                                )", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:10:34Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java", "diffHunk": "@@ -215,7 +217,11 @@ private void addSlimefunItem(Category category, int page, Player p, PlayerProfil\n \n             ChatComponent component = new ChatComponent(ChatUtils.crop(ChatColor.RED, item.getItemName()) + \"\\n\");\n             component.setHoverEvent(new HoverEvent(ChatColor.RESET + item.getItemName(), ChatColor.DARK_RED.toString() + ChatColor.BOLD + SlimefunPlugin.getLocalization().getMessage(p, \"guide.locked\"), \"\", ChatColor.GREEN + \"> Click to unlock\", \"\", ChatColor.GRAY + \"Cost: \" + ChatColor.AQUA.toString() + research.getCost() + \" Level(s)\"));\n-            component.setClickEvent(new ClickEvent(key, player -> research(player, profile, item, research, category, page)));\n+            component.setClickEvent(new ClickEvent(key, player ->\n+                    SlimefunPlugin.runSync(() -> {\n+                        research.guideClickInteraction(this, player, profile, item, category, page);\n+                    })", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\nindex 8246532c4..57eae8b76 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/guide/BookSlimefunGuide.java\n\n@@ -218,9 +216,9 @@ public class BookSlimefunGuide implements SlimefunGuideImplementation {\n             ChatComponent component = new ChatComponent(ChatUtils.crop(ChatColor.RED, item.getItemName()) + \"\\n\");\n             component.setHoverEvent(new HoverEvent(ChatColor.RESET + item.getItemName(), ChatColor.DARK_RED.toString() + ChatColor.BOLD + SlimefunPlugin.getLocalization().getMessage(p, \"guide.locked\"), \"\", ChatColor.GREEN + \"> Click to unlock\", \"\", ChatColor.GRAY + \"Cost: \" + ChatColor.AQUA.toString() + research.getCost() + \" Level(s)\"));\n             component.setClickEvent(new ClickEvent(key, player ->\n-                    SlimefunPlugin.runSync(() -> {\n-                        research.guideClickInteraction(this, player, profile, item, category, page);\n-                    })\n+                    SlimefunPlugin.runSync(() ->\n+                        research.unlockFromGuide(this, player, profile, item, category, page)\n+                    )\n             ));\n \n             items.add(component);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDU0Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510194543", "bodyText": "This method name is absolutely horrible...\nPlease choose a better name, like onPlayerResearch or unlockFromGuide. But not this :NotLikeThis:", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:11:36Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java", "diffHunk": "@@ -189,6 +195,43 @@ public Research addItems(ItemStack... items) {\n         return items;\n     }\n \n+    /**\n+     * Handle what to do when a {@link Player} clicks on an un-researched item in\n+     * a {@link SlimefunGuideImplementation}.\n+     *\n+     * @author TheBusyBiscuit\n+     * @author uiytt\n+     *\n+     * @param guide The {@link SlimefunGuideImplementation} used.\n+     * @param player The {@link Player} who clicked on the item.\n+     * @param profile The {@link PlayerProfile} of that {@link Player}.\n+     * @param sfItem The {@link SlimefunItem} on which the {@link Player} clicked.\n+     * @param category The {@link Category} where the {@link Player} was.\n+     * @param page The page number of where the {@link Player} was in the {@link Category};\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide\n+     */\n+    @ParametersAreNonnullByDefault\n+    public void guideClickInteraction(SlimefunGuideImplementation guide, Player player, PlayerProfile profile, SlimefunItem sfItem, Category category, int page) {", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk1OTk4Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510959987", "bodyText": "I didn't know how to name it \ud83d\ude2d I asked on the discord several time but nobody answered :(\nAnyway, will change this", "author": "uiytt", "createdAt": "2020-10-23T15:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\nindex 8cb014bf7..ca466f4f6 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n\n@@ -199,9 +197,6 @@ public class Research implements Keyed {\n      * Handle what to do when a {@link Player} clicks on an un-researched item in\n      * a {@link SlimefunGuideImplementation}.\n      *\n-     * @author TheBusyBiscuit\n-     * @author uiytt\n-     *\n      * @param guide The {@link SlimefunGuideImplementation} used.\n      * @param player The {@link Player} who clicked on the item.\n      * @param profile The {@link PlayerProfile} of that {@link Player}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDc0OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510194749", "bodyText": "No see tags on methods please.", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:11:52Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java", "diffHunk": "@@ -189,6 +195,43 @@ public Research addItems(ItemStack... items) {\n         return items;\n     }\n \n+    /**\n+     * Handle what to do when a {@link Player} clicks on an un-researched item in\n+     * a {@link SlimefunGuideImplementation}.\n+     *\n+     * @author TheBusyBiscuit\n+     * @author uiytt\n+     *\n+     * @param guide The {@link SlimefunGuideImplementation} used.\n+     * @param player The {@link Player} who clicked on the item.\n+     * @param profile The {@link PlayerProfile} of that {@link Player}.\n+     * @param sfItem The {@link SlimefunItem} on which the {@link Player} clicked.\n+     * @param category The {@link Category} where the {@link Player} was.\n+     * @param page The page number of where the {@link Player} was in the {@link Category};\n+     *\n+     * @see ChestSlimefunGuide\n+     * @see BookSlimefunGuide", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk2NDk5Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510964993", "bodyText": "Why ? but ok will remove this", "author": "uiytt", "createdAt": "2020-10-23T15:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDc0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\nindex 8cb014bf7..ca466f4f6 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n\n@@ -199,9 +197,6 @@ public class Research implements Keyed {\n      * Handle what to do when a {@link Player} clicks on an un-researched item in\n      * a {@link SlimefunGuideImplementation}.\n      *\n-     * @author TheBusyBiscuit\n-     * @author uiytt\n-     *\n      * @param guide The {@link SlimefunGuideImplementation} used.\n      * @param player The {@link Player} who clicked on the item.\n      * @param profile The {@link PlayerProfile} of that {@link Player}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDg1Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510194852", "bodyText": "No author tags on methods please.", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:12:00Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java", "diffHunk": "@@ -189,6 +195,43 @@ public Research addItems(ItemStack... items) {\n         return items;\n     }\n \n+    /**\n+     * Handle what to do when a {@link Player} clicks on an un-researched item in\n+     * a {@link SlimefunGuideImplementation}.\n+     *\n+     * @author TheBusyBiscuit\n+     * @author uiytt", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\nindex 8cb014bf7..ca466f4f6 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/researching/Research.java\n\n@@ -199,9 +197,6 @@ public class Research implements Keyed {\n      * Handle what to do when a {@link Player} clicks on an un-researched item in\n      * a {@link SlimefunGuideImplementation}.\n      *\n-     * @author TheBusyBiscuit\n-     * @author uiytt\n-     *\n      * @param guide The {@link SlimefunGuideImplementation} used.\n      * @param player The {@link Player} who clicked on the item.\n      * @param profile The {@link PlayerProfile} of that {@link Player}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NTU4MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510195581", "bodyText": "This class name doesn't really follow any conventions here...\nPerhaps just  PlayerPreResearchEvent?", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:12:58Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The event is not called for the cheat sheet.\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n+public class PreCanUnlockResearchEvent extends Event implements Cancellable {", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk2MjMzNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510962337", "bodyText": "Thanks,  I'm terrible at naming things", "author": "uiytt", "createdAt": "2020-10-23T15:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NTU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nsimilarity index 85%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nindex eda49dcb4..68140ee46 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n\n@@ -11,11 +11,12 @@ import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.CheatSheetSlimefunGuide;\n \n /**\n- * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a {@link Research}.\n  * This is called before {@link Research#canUnlock(Player)}.\n- * The event is not called for the cheat sheet.\n+ * The {@link Event} is not called for {@link CheatSheetSlimefunGuide}.\n  *\n  * @author uiytt\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NTg0MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510195840", "bodyText": "Event could be a link \ud83d\udc40", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:13:16Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The event is not called for the cheat sheet.", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nsimilarity index 85%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nindex eda49dcb4..68140ee46 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n\n@@ -11,11 +11,12 @@ import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.CheatSheetSlimefunGuide;\n \n /**\n- * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a {@link Research}.\n  * This is called before {@link Research#canUnlock(Player)}.\n- * The event is not called for the cheat sheet.\n+ * The {@link Event} is not called for {@link CheatSheetSlimefunGuide}.\n  *\n  * @author uiytt\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NjAxOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510196018", "bodyText": "You could also link to the Cheet Sheet class here.", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:13:29Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The event is not called for the cheat sheet.", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nsimilarity index 85%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nindex eda49dcb4..68140ee46 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n\n@@ -11,11 +11,12 @@ import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.CheatSheetSlimefunGuide;\n \n /**\n- * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a {@link Research}.\n  * This is called before {@link Research#canUnlock(Player)}.\n- * The event is not called for the cheat sheet.\n+ * The {@link Event} is not called for {@link CheatSheetSlimefunGuide}.\n  *\n  * @author uiytt\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NjEyMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r510196120", "bodyText": "Research could be a link too", "author": "TheBusyBiscuit", "createdAt": "2020-10-22T14:13:40Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.", "originalCommit": "95a2dc08d46c9e7d8d9b961da8887df075b5adfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nsimilarity index 85%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nindex eda49dcb4..68140ee46 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PreCanUnlockResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n\n@@ -11,11 +11,12 @@ import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.CheatSheetSlimefunGuide;\n \n /**\n- * This {@link Event} is called whenever a {@link Player} clicks to unlock a research.\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a {@link Research}.\n  * This is called before {@link Research#canUnlock(Player)}.\n- * The event is not called for the cheat sheet.\n+ * The {@link Event} is not called for {@link CheatSheetSlimefunGuide}.\n  *\n  * @author uiytt\n  *\n"}}, {"oid": "c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "url": "https://github.com/Slimefun/Slimefun4/commit/c56a55dd69d8b6c9b50088c3b3dfd0d360cec1e6", "message": "Again Formatting fix\n\nI will never see the end of these things  ...", "committedDate": "2020-10-23T15:31:27Z", "type": "commit"}, {"oid": "f6a3366aac60e1699aac9d46c8408535548d20f9", "url": "https://github.com/Slimefun/Slimefun4/commit/f6a3366aac60e1699aac9d46c8408535548d20f9", "message": "imports order", "committedDate": "2020-10-23T15:36:58Z", "type": "commit"}, {"oid": "e13694c063a60806e3be0eba3f05f656373cc7b2", "url": "https://github.com/Slimefun/Slimefun4/commit/e13694c063a60806e3be0eba3f05f656373cc7b2", "message": "Fixed name", "committedDate": "2020-10-23T17:05:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTY0OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r515999648", "bodyText": "Missing space\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Assertions.assertEquals(sfItem,event.getSlimefunItem());\n          \n          \n            \n                        Assertions.assertEquals(sfItem, event.getSlimefunItem());", "author": "TheBusyBiscuit", "createdAt": "2020-11-02T14:15:40Z", "path": "src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java", "diffHunk": "@@ -182,4 +186,29 @@ void testUnlockableResearch() {\n         Assertions.assertTrue(research.canUnlock(player));\n     }\n \n+    @Test\n+    @DisplayName(\"Test PlayerPreResearchEvent\")\n+    void testPreCanUnlockResearchEvent() throws InterruptedException {\n+        SlimefunPlugin.getRegistry().setResearchingEnabled(true);\n+\n+        NamespacedKey key = new NamespacedKey(plugin, \"simple_research\");\n+        Research research = new Research(key, 250, \"Test\", 10);\n+        research.register();\n+\n+        SlimefunGuideImplementation guide = Mockito.mock(SlimefunGuideImplementation.class);\n+        Player player = server.addPlayer();\n+        PlayerProfile profile = TestUtilities.awaitProfile(player);\n+        SlimefunItem sfItem = TestUtilities.mockSlimefunItem(plugin, \"RESEARCH_TEST\", new CustomItem(Material.TORCH, \"&bResearch Test\"));\n+\n+        research.unlockFromGuide(guide, player, profile, sfItem, sfItem.getCategory(), 0);\n+\n+        server.getPluginManager().assertEventFired(PlayerPreResearchEvent.class, event -> {\n+            Assertions.assertEquals(player, event.getPlayer());\n+            Assertions.assertEquals(research, event.getResearch());\n+            Assertions.assertEquals(sfItem,event.getSlimefunItem());", "originalCommit": "e13694c063a60806e3be0eba3f05f656373cc7b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54ebfbb18c2c514d232670e2dadae06fc3ba6e6c", "chunk": "diff --git a/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java b/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\nindex fde341e3d..9c6dd4b21 100644\n--- a/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\n+++ b/src/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/researches/TestResearches.java\n\n@@ -205,7 +205,7 @@ class TestResearches {\n         server.getPluginManager().assertEventFired(PlayerPreResearchEvent.class, event -> {\n             Assertions.assertEquals(player, event.getPlayer());\n             Assertions.assertEquals(research, event.getResearch());\n-            Assertions.assertEquals(sfItem,event.getSlimefunItem());\n+            Assertions.assertEquals(sfItem, event.getSlimefunItem());\n             Assertions.assertFalse(event.isCancelled());\n             return true;\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTg4MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2462#discussion_r515999881", "bodyText": "One of these empty lines is enough.", "author": "TheBusyBiscuit", "createdAt": "2020-11-02T14:16:02Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.apache.commons.lang.Validate;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import io.github.thebusybiscuit.slimefun4.core.researching.Research;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.BookSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.ChestSlimefunGuide;\n+import io.github.thebusybiscuit.slimefun4.implementation.guide.CheatSheetSlimefunGuide;\n+\n+/**\n+ * This {@link Event} is called whenever a {@link Player} clicks to unlock a {@link Research}.\n+ * This is called before {@link Research#canUnlock(Player)}.\n+ * The {@link Event} is not called for {@link CheatSheetSlimefunGuide}.\n+ *\n+ * @author uiytt\n+ *\n+ * @see ChestSlimefunGuide\n+ * @see BookSlimefunGuide\n+ *\n+ */\n+public class PlayerPreResearchEvent extends Event implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+\n+    private final Player player;\n+    private final Research research;\n+    private final SlimefunItem slimefunItem;\n+    private boolean cancelled;\n+\n+", "originalCommit": "e13694c063a60806e3be0eba3f05f656373cc7b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54ebfbb18c2c514d232670e2dadae06fc3ba6e6c", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\nindex 0fd9c057e..12282bda7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/PlayerPreResearchEvent.java\n\n@@ -33,8 +33,7 @@ public class PlayerPreResearchEvent extends Event implements Cancellable {\n     private final Research research;\n     private final SlimefunItem slimefunItem;\n     private boolean cancelled;\n-\n-\n+    \n     @ParametersAreNonnullByDefault\n     public PlayerPreResearchEvent(Player p, Research research, SlimefunItem slimefunItem) {\n         Validate.notNull(p, \"The Player cannot be null\");\n"}}, {"oid": "54ebfbb18c2c514d232670e2dadae06fc3ba6e6c", "url": "https://github.com/Slimefun/Slimefun4/commit/54ebfbb18c2c514d232670e2dadae06fc3ba6e6c", "message": "Last formatting fix", "committedDate": "2020-11-02T19:06:03Z", "type": "commit"}]}