{"pr_number": 1925, "pr_title": "Add a way to reload BlockMenu", "pr_createdAt": "2020-05-22T05:52:12Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/1925", "timeline": [{"oid": "f049a750066146d9da5005a58c66363b2d6fd9fd", "url": "https://github.com/Slimefun/Slimefun4/commit/f049a750066146d9da5005a58c66363b2d6fd9fd", "message": "Add a way to reload menus", "committedDate": "2020-05-22T05:43:02Z", "type": "commit"}, {"oid": "fffd9921b373d36da5a9c1e3cedb7001b1857db2", "url": "https://github.com/Slimefun/Slimefun4/commit/fffd9921b373d36da5a9c1e3cedb7001b1857db2", "message": "Doc", "committedDate": "2020-05-22T05:51:39Z", "type": "commit"}, {"oid": "f269c37f7699f50a04c306f397c6765df04d5c39", "url": "https://github.com/Slimefun/Slimefun4/commit/f269c37f7699f50a04c306f397c6765df04d5c39", "message": "Add build num to UpdaterService", "committedDate": "2020-05-22T06:08:17Z", "type": "commit"}, {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "url": "https://github.com/Slimefun/Slimefun4/commit/3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "message": "Unit tests save the day", "committedDate": "2020-05-22T06:11:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125439", "bodyText": "getSlots() seem rather un-intuitive. Think that name could be improved.", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T08:54:00Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java", "diffHunk": "@@ -374,4 +374,13 @@ static boolean matchesFilter(Block block, ItemStack item, int index) {\n         }\n     }\n \n+    /**\n+     * Get the whitelist/blacklist slots in a Cargo Input Node. If you wish to access the items\n+     * in the cargo (without hardcoding the slots in case of change) then you can use this method.\n+     *\n+     * @return The slot indexes for the whutelist/blacklist section.\n+     */\n+    public static int[] getSlots() {", "originalCommit": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTQxNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131416", "bodyText": "getWhitelistBlacklistSlots? It's always awkward to name", "author": "WalshyDev", "createdAt": "2020-05-22T09:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1OTA0Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429159042", "bodyText": "I know, but getSlots() is rather misleading. getNodeConfigArea() maybe?", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T10:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java\nindex 8bf8d8a97..e6e687038 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java\n\n@@ -380,7 +380,7 @@ final class CargoUtils {\n      *\n      * @return The slot indexes for the whutelist/blacklist section.\n      */\n-    public static int[] getSlots() {\n+    public static int[] getWhitelistBlacklistSlots() {\n         return SLOTS;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125641", "bodyText": "Can also just do updater#getVersion() instead all of this.", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T08:54:29Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "originalCommit": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTU3MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131571", "bodyText": "Doesn't that just return the entire thing... I want specifically the build number", "author": "WalshyDev", "createdAt": "2020-05-22T09:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODQ5OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429158499", "bodyText": "No it returns the build number...", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T10:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODgzOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429158839", "bodyText": "https://github.com/TheBusyBiscuit/CS-CoreLib2/blob/master/src/main/java/io/github/thebusybiscuit/cscorelib2/updater/GitHubBuildsUpdater.java#L59", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T10:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1OTc0Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429159743", "bodyText": "My code is still better and returns int... just merge :^) <3\nI want to sleep", "author": "WalshyDev", "createdAt": "2020-05-22T10:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MTQ2MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429161460", "bodyText": "Definitely not better, it's just redundant. Heck it doesn't even compile >.>", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T10:11:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MTg2Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429161863", "bodyText": "it does compile, it's stupid tests failing", "author": "WalshyDev", "createdAt": "2020-05-22T10:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2Mzc1Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429163757", "bodyText": "Still, you should definitely fix this before it's gonna be merged...", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T10:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\nindex 48dad1007..7878b8288 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\n\n@@ -25,7 +25,7 @@ public class UpdaterService {\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n-    private final int buildNum;\n+    private final int buildNumber;\n \n     /**\n      * This will create a new {@link UpdaterService} for the given {@link SlimefunPlugin}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTc1NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125754", "bodyText": "Number please, not just Num.", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T08:54:43Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -78,13 +84,24 @@ else if (version.startsWith(\"RC - \")) {\n      * This method returns the branch the current build of Slimefun is running on.\n      * This can be used to determine whether we are dealing with an official build\n      * or a build that was unofficially modified.\n-     * \n+     *\n      * @return The branch this build of Slimefun is on.\n      */\n     public SlimefunBranch getBranch() {\n         return branch;\n     }\n \n+    /**\n+     * This method returns the build number that this is running on (or -1 if unofficial).\n+     * You should combine the usage with {@link #getBranch()} in order to properly see if this is\n+     * a development or stable build number.\n+     *\n+     * @return The build number of this Slimefun.\n+     */\n+    public int getBuildNum() {\n+        return buildNum;\n+    }", "originalCommit": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTcwMw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131703", "bodyText": "So picky", "author": "WalshyDev", "createdAt": "2020-05-22T09:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java b/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\nindex 48dad1007..7878b8288 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java\n\n@@ -98,8 +98,8 @@ public class UpdaterService {\n      *\n      * @return The build number of this Slimefun.\n      */\n-    public int getBuildNum() {\n-        return buildNum;\n+    public int getBuildNumber() {\n+        return buildNumber;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjAwNQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429126005", "bodyText": "ewwww, abusing try/catch for this is really unideal... We have a Pattern for Numerics you know?", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T08:55:16Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java", "diffHunk": "@@ -57,4 +57,11 @@ public static String getTimeLeft(int seconds) {\n         return timeleft + seconds + \"s\";\n     }\n \n+    public static int getInt(String str, int defaultVal) {\n+        try {\n+            return Integer.parseInt(str);\n+        } catch (NumberFormatException e) {\n+            return defaultVal;\n+        }", "originalCommit": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTg2Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131863", "bodyText": "roll eyes", "author": "WalshyDev", "createdAt": "2020-05-22T09:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java b/src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java\nindex 09199d522..7d22e0034 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java\n\n@@ -58,10 +58,9 @@ public final class NumberUtils {\n     }\n \n     public static int getInt(String str, int defaultVal) {\n-        try {\n+        if (PatternUtils.NUMERIC.matcher(str).matches())\n             return Integer.parseInt(str);\n-        } catch (NumberFormatException e) {\n-            return defaultVal;\n-        }\n+\n+        return defaultVal;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjA4Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429126086", "bodyText": "docs", "author": "TheBusyBiscuit", "createdAt": "2020-05-22T08:55:25Z", "path": "src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java", "diffHunk": "@@ -72,6 +72,10 @@ public void move(Location l) {\n         this.save(l);\n     }\n \n+    public void reload() {\n+        this.preset.clone(this);\n+    }", "originalCommit": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "chunk": "diff --git a/src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java b/src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java\nindex 47c8b5d84..d6e54a0f0 100644\n--- a/src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java\n+++ b/src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java\n\n@@ -72,6 +72,9 @@ public class BlockMenu extends DirtyChestMenu {\n         this.save(l);\n     }\n \n+    /**\n+     * Reload this BlockMenu based on the preset.\n+     */\n     public void reload() {\n         this.preset.clone(this);\n     }\n"}}, {"oid": "8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "url": "https://github.com/Slimefun/Slimefun4/commit/8db67af455c3eb66f6f13b4dcac619ff677e5fa0", "message": "Requested pickiness", "committedDate": "2020-05-22T09:28:21Z", "type": "commit"}, {"oid": "984a96bcb54ddabf14fcc6a5bd6a20a00e240b93", "url": "https://github.com/Slimefun/Slimefun4/commit/984a96bcb54ddabf14fcc6a5bd6a20a00e240b93", "message": "REEE I can't sleep :cry:", "committedDate": "2020-05-22T13:42:28Z", "type": "commit"}, {"oid": "9ddbaf70cdb132b6ba7da6ca9ea7843be1e9ae6f", "url": "https://github.com/Slimefun/Slimefun4/commit/9ddbaf70cdb132b6ba7da6ca9ea7843be1e9ae6f", "message": "So... I can't test this", "committedDate": "2020-05-22T14:02:26Z", "type": "commit"}]}