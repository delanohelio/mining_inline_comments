{"pr_number": 1800, "pr_title": "AncientAltarOutputEvent added", "pr_createdAt": "2020-04-11T04:02:51Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/1800", "timeline": [{"oid": "b7929dfebfe427ee98035d8de3bbc84e3757ec6e", "url": "https://github.com/Slimefun/Slimefun4/commit/b7929dfebfe427ee98035d8de3bbc84e3757ec6e", "message": "Adding Altar Output Event", "committedDate": "2020-04-11T03:49:30Z", "type": "commit"}, {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "url": "https://github.com/Slimefun/Slimefun4/commit/9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "message": "Adding Extra Method", "committedDate": "2020-04-11T04:00:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDMwMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014301", "bodyText": "This should probably be a player event. I'd like to get the player here.", "author": "WalshyDev", "createdAt": "2020-04-11T04:07:33Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends Event implements Cancellable {", "originalCommit": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDQ1Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014456", "bodyText": "Sure thing, hang on a second", "author": "TweepCoding", "createdAt": "2020-04-11T04:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nindex 895d76783..4f19530b3 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n\n@@ -3,9 +3,11 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n import org.bukkit.event.Event;\n import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n import org.bukkit.inventory.ItemStack;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDM4MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014381", "bodyText": "Hmm. Maybe we have a pre and post event or something. I don't really like this running entirely and then not doing anything.\nHmm.", "author": "WalshyDev", "createdAt": "2020-04-11T04:08:31Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +143,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);", "originalCommit": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNTYwMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407015602", "bodyText": "Huh? What do you mean?", "author": "TweepCoding", "createdAt": "2020-04-11T04:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\nindex bc91fc466..28f692e9d 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n\n@@ -144,7 +147,7 @@ public class AncientAltarTask implements Runnable {\n     private void finish() {\n         if (running) {\n \n-            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar);\n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n             Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n             if (!ancientAltarOutputEvent.isCancelled()) {\n                 dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n"}}, {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2", "url": "https://github.com/Slimefun/Slimefun4/commit/332a017c63246c2ca972e4daceb51f24246eb6c2", "message": "Adding Extra Method", "committedDate": "2020-04-11T04:21:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033236", "bodyText": "No one-line methods.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:01:24Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033238", "bodyText": "No one-line methods.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:01:28Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI1OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033259", "bodyText": "Missing documentation", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:01:48Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI2Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033266", "bodyText": "No one-line methods.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:01:52Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI4NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033285", "bodyText": "No one-line methods.\nAlso rename the parameter \"b\" to something more meaningful like \"cancel\".", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:02:12Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }\n+\n+    @Override\n+    public void setCancelled(boolean b) { cancelled = b; }", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzM4OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033388", "bodyText": "Since you are able to modify the output of the item you should also use the output item from that event rather than the original one.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:03:18Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n+            if (!ancientAltarOutputEvent.isCancelled()) {\n+                dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n+                dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n+                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\nindex 28f692e9d..b57f4b67c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n\n@@ -147,12 +146,12 @@ public class AncientAltarTask implements Runnable {\n     private void finish() {\n         if (running) {\n \n-            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n-            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n-            if (!ancientAltarOutputEvent.isCancelled()) {\n+            AncientAltarCraftEvent event = new AncientAltarCraftEvent(output, altar, player);\n+            Bukkit.getPluginManager().callEvent(event);\n+            if (!event.isCancelled()) {\n                 dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n                 dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n+                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), event.getItem());\n             }\n             pedestals.forEach(b -> listener.getAltarsInUse().remove(b.getLocation()));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQyMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033422", "bodyText": "That variable name is rather long, might just be \"event\".", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:03:35Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\nindex 28f692e9d..b57f4b67c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n\n@@ -147,12 +146,12 @@ public class AncientAltarTask implements Runnable {\n     private void finish() {\n         if (running) {\n \n-            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n-            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n-            if (!ancientAltarOutputEvent.isCancelled()) {\n+            AncientAltarCraftEvent event = new AncientAltarCraftEvent(output, altar, player);\n+            Bukkit.getPluginManager().callEvent(event);\n+            if (!event.isCancelled()) {\n                 dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n                 dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n+                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), event.getItem());\n             }\n             pedestals.forEach(b -> listener.getAltarsInUse().remove(b.getLocation()));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQ0OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033448", "bodyText": "This can be final.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:03:51Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -47,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\nindex 28f692e9d..b57f4b67c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n\n@@ -51,15 +50,15 @@ public class AncientAltarTask implements Runnable {\n \n     private boolean running;\n     private int stage;\n-    private Player player;\n+    private final Player player;\n \n-    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player p) {\n+    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player player) {\n         this.dropLocation = altar.getLocation().add(0.5, 1.3, 0.5);\n         this.altar = altar;\n         this.output = output;\n         this.pedestals = pedestals;\n         this.items = items;\n-        player = p;\n+        this.player = player;\n \n         this.running = true;\n         this.stage = 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzUwOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033508", "bodyText": "I would rather name it \"AncientAltarCraftEvent\" instead of Output.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:04:26Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzU3NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033575", "bodyText": "You can also add some \"@see\" tags here to the AncientAltar task and listener class etc... to mark that they belong to each other.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T08:05:10Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nsimilarity index 58%\nrename from src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\nrename to src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 4f19530b3..6cdff2409 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -2,6 +2,8 @@ package io.github.thebusybiscuit.slimefun4.api.events;\n \n \n import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n import org.bukkit.event.Cancellable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTQyOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407051429", "bodyText": "Be consistent with the other this.'s", "author": "WalshyDev", "createdAt": "2020-04-11T11:17:16Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -50,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;\n \n-    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items) {\n+    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player p) {\n         this.dropLocation = altar.getLocation().add(0.5, 1.3, 0.5);\n         this.altar = altar;\n         this.output = output;\n         this.pedestals = pedestals;\n         this.items = items;\n+        player = p;", "originalCommit": "332a017c63246c2ca972e4daceb51f24246eb6c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\nindex 28f692e9d..b57f4b67c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java\n\n@@ -51,15 +50,15 @@ public class AncientAltarTask implements Runnable {\n \n     private boolean running;\n     private int stage;\n-    private Player player;\n+    private final Player player;\n \n-    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player p) {\n+    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player player) {\n         this.dropLocation = altar.getLocation().add(0.5, 1.3, 0.5);\n         this.altar = altar;\n         this.output = output;\n         this.pedestals = pedestals;\n         this.items = items;\n-        player = p;\n+        this.player = player;\n \n         this.running = true;\n         this.stage = 0;\n"}}, {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "url": "https://github.com/Slimefun/Slimefun4/commit/7a798b0bc8daf3e8df60431d682ee12369b953f7", "message": "Adding Fixes", "committedDate": "2020-04-11T14:08:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTc0MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081740", "bodyText": "This comment needs to be one line further down. You can't have it start on the same line as /**", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T16:18:20Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {\n+        return block;\n+    }\n+\n+    /**\n+     * This method returns the {@link ItemStack} that would be dropped by the {@link AncientAltar }\n+     *\n+     * @return the {@link ItemStack} that would be dropped by the {@link AncientAltar}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    /** This method will change the item that would be dropped by the {@link AncientAltar}", "originalCommit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb9e0f1ab8fee07161a74af362dc520cde816c33", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 6cdff2409..26bd524c2 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -32,7 +32,7 @@ public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n \n     /**\n      * @param block\n-     *            The mined {@link Block}\n+     *            The altar {@link Block}\n      * @param output\n      *            The {@link ItemStack} that would be dropped by the ritual\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTg3OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081879", "bodyText": "Maybe rename this to getAltarBlock() to avoid potential confusion.\nOther than that it is ready to be merged!", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T16:19:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {", "originalCommit": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MjU3OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407082579", "bodyText": ":D", "author": "TweepCoding", "createdAt": "2020-04-11T16:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTg3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb9e0f1ab8fee07161a74af362dc520cde816c33", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex 6cdff2409..26bd524c2 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -32,7 +32,7 @@ public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n \n     /**\n      * @param block\n-     *            The mined {@link Block}\n+     *            The altar {@link Block}\n      * @param output\n      *            The {@link ItemStack} that would be dropped by the ritual\n      *\n"}}, {"oid": "fb9e0f1ab8fee07161a74af362dc520cde816c33", "url": "https://github.com/Slimefun/Slimefun4/commit/fb9e0f1ab8fee07161a74af362dc520cde816c33", "message": "Adding Fixes Part 2: Electric Bungaloo", "committedDate": "2020-04-11T16:37:57Z", "type": "commit"}, {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "url": "https://github.com/Slimefun/Slimefun4/commit/79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "message": "Adding Fixes Part 3: I dont know what to put here", "committedDate": "2020-04-11T22:23:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgwOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117808", "bodyText": "This line needs to go", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T22:28:00Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+", "originalCommit": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex f80aab028..1e1564ff6 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -22,7 +22,6 @@ import org.bukkit.inventory.ItemStack;\n  * @see AncientAltarTask\n  * @see AncientAltarListener\n  */\n-\n public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgyMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117820", "bodyText": "And you need a new line before this one.", "author": "TheBusyBiscuit", "createdAt": "2020-04-11T22:28:15Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The altar {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     * @param player\n+     *            The {@link Player} that started the ritual.\n+     */\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**", "originalCommit": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\nindex f80aab028..1e1564ff6 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java\n\n@@ -22,7 +22,6 @@ import org.bukkit.inventory.ItemStack;\n  * @see AncientAltarTask\n  * @see AncientAltarListener\n  */\n-\n public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n \n     private static final HandlerList handlers = new HandlerList();\n"}}, {"oid": "666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "url": "https://github.com/Slimefun/Slimefun4/commit/666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "message": "Adding Fixes Part... you get the point", "committedDate": "2020-04-11T22:29:31Z", "type": "commit"}]}