{"pr_number": 2597, "pr_title": "Refactoring + Fixes to Block Handlers", "pr_createdAt": "2020-12-05T20:39:41Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2597", "timeline": [{"oid": "c84200d2c4e738d635aec7ff009b316d61fb511f", "url": "https://github.com/Slimefun/Slimefun4/commit/c84200d2c4e738d635aec7ff009b316d61fb511f", "message": "Some stuff + fixes #2560", "committedDate": "2020-12-05T12:54:46Z", "type": "commit"}, {"oid": "036c156f409a6dc94cc3aba16453abf160af3fa9", "url": "https://github.com/Slimefun/Slimefun4/commit/036c156f409a6dc94cc3aba16453abf160af3fa9", "message": "Some more changes", "committedDate": "2020-12-05T13:21:14Z", "type": "commit"}, {"oid": "175a79ebdc085b94589260fc4720e1d85291f456", "url": "https://github.com/Slimefun/Slimefun4/commit/175a79ebdc085b94589260fc4720e1d85291f456", "message": "Registered missing Listener", "committedDate": "2020-12-05T13:36:04Z", "type": "commit"}, {"oid": "080bc42130cb4f6387d87e8123964a287382a321", "url": "https://github.com/Slimefun/Slimefun4/commit/080bc42130cb4f6387d87e8123964a287382a321", "message": "Updated more implementations", "committedDate": "2020-12-05T20:35:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3NDg0Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r539674846", "bodyText": "Miners using dynamite :p", "author": "Sfiguz7", "createdAt": "2020-12-09T21:51:12Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MiningAndroidListener.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.AndroidMineEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.BlockBreakHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+public class MiningAndroidListener implements Listener {\n+\n+    public MiningAndroidListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler(ignoreCancelled = true)\n+    public void onEntityExplode(AndroidMineEvent e) {", "originalCommit": "080bc42130cb4f6387d87e8123964a287382a321", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyMjQzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r539722432", "bodyText": "whooooops XD", "author": "TheBusyBiscuit", "createdAt": "2020-12-09T23:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3NDg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7b0f9c1300e43e906b5e1284699119e06702ddf9", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MiningAndroidListener.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MiningAndroidListener.java\nindex 5e78f6498..e47cc528d 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MiningAndroidListener.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MiningAndroidListener.java\n\n@@ -18,7 +18,7 @@ public class MiningAndroidListener implements Listener {\n     }\n \n     @EventHandler(ignoreCancelled = true)\n-    public void onEntityExplode(AndroidMineEvent e) {\n+    public void onAndroidMine(AndroidMineEvent e) {\n         SlimefunItem item = BlockStorage.check(e.getBlock());\n \n         item.callItemHandler(BlockBreakHandler.class, handler -> {\n"}}, {"oid": "7b0f9c1300e43e906b5e1284699119e06702ddf9", "url": "https://github.com/Slimefun/Slimefun4/commit/7b0f9c1300e43e906b5e1284699119e06702ddf9", "message": "Fixed naming", "committedDate": "2020-12-09T23:22:14Z", "type": "commit"}, {"oid": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "url": "https://github.com/Slimefun/Slimefun4/commit/3c72abad7b363d7de9bbe314afcbf927a99957b2", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2020-12-10T21:05:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MTMzNQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r544251335", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new BlockBreakHandler(true, true) {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {\n          \n          \n            \n                            remove(e.getBlock());\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onExplode(Block b, List<ItemStack> drops) {\n          \n          \n            \n                            remove(b);\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onAndroidBreak(AndroidMineEvent e) {\n          \n          \n            \n                            remove(e.getBlock());\n          \n          \n            \n                        }\n          \n          \n            \n                    };\n          \n          \n            \n                    return new SimpleBlockBreakHandler() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onBlockBreaking(@Nonnull Block b) {\n          \n          \n            \n                            remove(b);\n          \n          \n            \n                        }\n          \n          \n            \n                    };", "author": "WalshyDev", "createdAt": "2020-12-16T12:15:50Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java", "diffHunk": "@@ -51,13 +60,28 @@ public void onPlayerPlace(BlockPlaceEvent e) {\n         };\n     }\n \n+    @Nonnull\n     private BlockBreakHandler onBreak() {\n-        return (e, item, fortune, drops) -> {\n-            remove(e.getBlock());\n-            return true;\n+        return new BlockBreakHandler(true, true) {\n+\n+            @Override\n+            public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {\n+                remove(e.getBlock());\n+            }\n+\n+            @Override\n+            public void onExplode(Block b, List<ItemStack> drops) {\n+                remove(b);\n+            }\n+\n+            @Override\n+            public void onAndroidBreak(AndroidMineEvent e) {\n+                remove(e.getBlock());\n+            }\n         };", "originalCommit": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbaca5f7aa479d1219a3556d09741fbf4362134d", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\nindex 38feab530..5312e4b4e 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\n\n@@ -62,22 +62,12 @@ public class HologramProjector extends SlimefunItem {\n \n     @Nonnull\n     private BlockBreakHandler onBreak() {\n-        return new BlockBreakHandler(true, true) {\n+        return new SimpleBlockBreakHandler() {\n \n             @Override\n-            public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {\n-                remove(e.getBlock());\n-            }\n-\n-            @Override\n-            public void onExplode(Block b, List<ItemStack> drops) {\n+            public void onBlockBreaking(@Nonnull Block b) {\n                 remove(b);\n             }\n-\n-            @Override\n-            public void onAndroidBreak(AndroidMineEvent e) {\n-                remove(e.getBlock());\n-            }\n         };\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MTc0OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r544251749", "bodyText": "should be called onBlockBreak", "author": "WalshyDev", "createdAt": "2020-12-16T12:16:32Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/handlers/SimpleBlockBreakHandler.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.handlers;\n+\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.block.BlockBreakEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.AndroidMineEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.BlockBreakHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.androids.MinerAndroid;\n+\n+/**\n+ * This simple implementation of {@link BlockBreakHandler} will execute the same code\n+ * for when the {@link Block} is broken by a {@link Player}, by a {@link MinerAndroid} or an explosion.\n+ * By default, both androids and explosions are allowed.\n+ * \n+ * @author TheBusyBiscuit\n+ * \n+ * @see BlockBreakHandler\n+ *\n+ */\n+public abstract class SimpleBlockBreakHandler extends BlockBreakHandler {\n+\n+    /**\n+     * This constructs a new {@link SimpleBlockBreakHandler}.\n+     */\n+    public SimpleBlockBreakHandler() {\n+        super(true, true);\n+    }\n+\n+    /**\n+     * This method is called when a {@link Block} of this type is broken by a {@link Player},\n+     * by a {@link MinerAndroid} or through an explosion.\n+     * \n+     * @param b\n+     *            The broken {@link Block}\n+     */\n+    public abstract void onBlockBreaking(@Nonnull Block b);", "originalCommit": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ff24c2889601dbfc7ef12e1d5cc0ee98cd5fbba", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/handlers/SimpleBlockBreakHandler.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/handlers/SimpleBlockBreakHandler.java\nindex 0deb75a90..4ea8cefd0 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/handlers/SimpleBlockBreakHandler.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/handlers/SimpleBlockBreakHandler.java\n\n@@ -39,21 +39,21 @@ public abstract class SimpleBlockBreakHandler extends BlockBreakHandler {\n      * @param b\n      *            The broken {@link Block}\n      */\n-    public abstract void onBlockBreaking(@Nonnull Block b);\n+    public abstract void onBlockBreak(@Nonnull Block b);\n \n     @Override\n     public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {\n-        onBlockBreaking(e.getBlock());\n+        onBlockBreak(e.getBlock());\n     }\n \n     @Override\n     public void onAndroidBreak(AndroidMineEvent e) {\n-        onBlockBreaking(e.getBlock());\n+        onBlockBreak(e.getBlock());\n     }\n \n     @Override\n     public void onExplode(Block b, List<ItemStack> drops) {\n-        onBlockBreaking(b);\n+        onBlockBreak(b);\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MTg2NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r544251865", "bodyText": "Can just use SimpleBlockBreakHandler here", "author": "WalshyDev", "createdAt": "2020-12-16T12:16:40Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java", "diffHunk": "@@ -51,13 +60,28 @@ public void onPlayerPlace(BlockPlaceEvent e) {\n         };\n     }\n \n+    @Nonnull\n     private BlockBreakHandler onBreak() {\n-        return (e, item, fortune, drops) -> {\n-            remove(e.getBlock());\n-            return true;\n+        return new BlockBreakHandler(true, true) {", "originalCommit": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbaca5f7aa479d1219a3556d09741fbf4362134d", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\nindex 38feab530..5312e4b4e 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\n\n@@ -62,22 +62,12 @@ public class HologramProjector extends SlimefunItem {\n \n     @Nonnull\n     private BlockBreakHandler onBreak() {\n-        return new BlockBreakHandler(true, true) {\n+        return new SimpleBlockBreakHandler() {\n \n             @Override\n-            public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {\n-                remove(e.getBlock());\n-            }\n-\n-            @Override\n-            public void onExplode(Block b, List<ItemStack> drops) {\n+            public void onBlockBreaking(@Nonnull Block b) {\n                 remove(b);\n             }\n-\n-            @Override\n-            public void onAndroidBreak(AndroidMineEvent e) {\n-                remove(e.getBlock());\n-            }\n         };\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NDgxOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r544254819", "bodyText": "should use isAir, if we're doing an air check may as well make it future proof. Who knows what MC, Spigot or other plugins will do", "author": "WalshyDev", "createdAt": "2020-12-16T12:21:16Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java", "diffHunk": "@@ -41,6 +64,24 @@ public void onEntityExplode(EntityExplodeEvent e) {\n \n                     if (blockHandler != null) {\n                         success = blockHandler.onBreak(null, block, item, UnregisterReason.EXPLODE);\n+                    } else {\n+                        item.callItemHandler(BlockBreakHandler.class, handler -> {\n+                            if (handler.isExplosionAllowed()) {\n+                                BlockStorage.clearBlockInfo(block);\n+                                block.setType(Material.AIR);\n+\n+                                List<ItemStack> drops = new ArrayList<>();\n+                                handler.onExplode(block, drops);\n+\n+                                for (ItemStack drop : drops) {\n+                                    if (drop != null && drop.getType() != Material.AIR) {", "originalCommit": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edd1283dcc27540fc46ac76a708e2bfaf0cf9371", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\nindex aaf620c45..7026f4f4c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\n\n@@ -66,7 +66,7 @@ public class ExplosionsListener implements Listener {\n                         success = blockHandler.onBreak(null, block, item, UnregisterReason.EXPLODE);\n                     } else {\n                         item.callItemHandler(BlockBreakHandler.class, handler -> {\n-                            if (handler.isExplosionAllowed()) {\n+                            if (handler.isExplosionAllowed(block)) {\n                                 BlockStorage.clearBlockInfo(block);\n                                 block.setType(Material.AIR);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1Njc5Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r544256796", "bodyText": "would be great if we could cancel without disabling all explosions. If we had the event we could cancel and then check if cancelled above.\nWould be nice for cases like, block durability (for like factions), allows explosion if out of electricity, etc.", "author": "WalshyDev", "createdAt": "2020-12-16T12:24:28Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java", "diffHunk": "@@ -41,6 +64,24 @@ public void onEntityExplode(EntityExplodeEvent e) {\n \n                     if (blockHandler != null) {\n                         success = blockHandler.onBreak(null, block, item, UnregisterReason.EXPLODE);\n+                    } else {\n+                        item.callItemHandler(BlockBreakHandler.class, handler -> {\n+                            if (handler.isExplosionAllowed()) {\n+                                BlockStorage.clearBlockInfo(block);\n+                                block.setType(Material.AIR);\n+\n+                                List<ItemStack> drops = new ArrayList<>();\n+                                handler.onExplode(block, drops);", "originalCommit": "3c72abad7b363d7de9bbe314afcbf927a99957b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkzODU1NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2597#discussion_r552938554", "bodyText": "I added a Block param to the isExplosionAllowed method, it will be ignored by default but if you were to implement sth like that, you could override the method and handle durability there.", "author": "TheBusyBiscuit", "createdAt": "2021-01-06T20:10:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1Njc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "edd1283dcc27540fc46ac76a708e2bfaf0cf9371", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\nindex aaf620c45..7026f4f4c 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ExplosionsListener.java\n\n@@ -66,7 +66,7 @@ public class ExplosionsListener implements Listener {\n                         success = blockHandler.onBreak(null, block, item, UnregisterReason.EXPLODE);\n                     } else {\n                         item.callItemHandler(BlockBreakHandler.class, handler -> {\n-                            if (handler.isExplosionAllowed()) {\n+                            if (handler.isExplosionAllowed(block)) {\n                                 BlockStorage.clearBlockInfo(block);\n                                 block.setType(Material.AIR);\n \n"}}, {"oid": "dbaca5f7aa479d1219a3556d09741fbf4362134d", "url": "https://github.com/Slimefun/Slimefun4/commit/dbaca5f7aa479d1219a3556d09741fbf4362134d", "message": "Update src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/HologramProjector.java\n\nCo-authored-by: Daniel Walsh <walshydev@gmail.com>", "committedDate": "2020-12-16T14:53:50Z", "type": "commit"}, {"oid": "8c8685b6de91dc322663a3121c37ac0fcc0a40b8", "url": "https://github.com/Slimefun/Slimefun4/commit/8c8685b6de91dc322663a3121c37ac0fcc0a40b8", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2020-12-17T14:35:57Z", "type": "commit"}, {"oid": "26a64004d2cc789549e6f82dcdffcb4ca9e85dbb", "url": "https://github.com/Slimefun/Slimefun4/commit/26a64004d2cc789549e6f82dcdffcb4ca9e85dbb", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2020-12-17T18:42:56Z", "type": "commit"}, {"oid": "2ff24c2889601dbfc7ef12e1d5cc0ee98cd5fbba", "url": "https://github.com/Slimefun/Slimefun4/commit/2ff24c2889601dbfc7ef12e1d5cc0ee98cd5fbba", "message": "Fixed compilation", "committedDate": "2020-12-17T18:45:43Z", "type": "commit"}, {"oid": "e36027fb48d9d229d7da8c7e3a2f6bddd273e8d2", "url": "https://github.com/Slimefun/Slimefun4/commit/e36027fb48d9d229d7da8c7e3a2f6bddd273e8d2", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-06T20:06:26Z", "type": "commit"}, {"oid": "edd1283dcc27540fc46ac76a708e2bfaf0cf9371", "url": "https://github.com/Slimefun/Slimefun4/commit/edd1283dcc27540fc46ac76a708e2bfaf0cf9371", "message": "made requested changes", "committedDate": "2021-01-06T20:12:22Z", "type": "commit"}, {"oid": "2943289c6d86a26fe11cd7634ff105a9ac6286b4", "url": "https://github.com/Slimefun/Slimefun4/commit/2943289c6d86a26fe11cd7634ff105a9ac6286b4", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-10T22:12:34Z", "type": "commit"}, {"oid": "3777b59596e4db9f9806582aee9caeac8e0c566c", "url": "https://github.com/Slimefun/Slimefun4/commit/3777b59596e4db9f9806582aee9caeac8e0c566c", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-11T12:57:33Z", "type": "commit"}, {"oid": "17d11b513e6cc786b88626ec9ed1277f1a6d4c86", "url": "https://github.com/Slimefun/Slimefun4/commit/17d11b513e6cc786b88626ec9ed1277f1a6d4c86", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-12T18:53:48Z", "type": "commit"}, {"oid": "9be11921c77aeaf25510255ad8a66738a84f3c16", "url": "https://github.com/Slimefun/Slimefun4/commit/9be11921c77aeaf25510255ad8a66738a84f3c16", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-13T18:50:06Z", "type": "commit"}, {"oid": "ae4e4bed738bdcb06108852e8c0abeb51305413f", "url": "https://github.com/Slimefun/Slimefun4/commit/ae4e4bed738bdcb06108852e8c0abeb51305413f", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-14T11:35:57Z", "type": "commit"}, {"oid": "570c981de3408141a9aa3cde1c48d760a49a75c4", "url": "https://github.com/Slimefun/Slimefun4/commit/570c981de3408141a9aa3cde1c48d760a49a75c4", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-20T16:19:18Z", "type": "commit"}, {"oid": "1a2858c6a0c082c1e1cbf1d32ec157d41f7ced73", "url": "https://github.com/Slimefun/Slimefun4/commit/1a2858c6a0c082c1e1cbf1d32ec157d41f7ced73", "message": "Fixed imports", "committedDate": "2021-01-20T16:23:25Z", "type": "commit"}, {"oid": "cadf66a13c1a630f84a9d24b891eb6fc5870a6d2", "url": "https://github.com/Slimefun/Slimefun4/commit/cadf66a13c1a630f84a9d24b891eb6fc5870a6d2", "message": "Merge branch 'master' into fixes/blocks", "committedDate": "2021-01-28T12:41:27Z", "type": "commit"}]}