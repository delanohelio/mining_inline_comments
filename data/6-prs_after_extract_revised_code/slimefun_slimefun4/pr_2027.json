{"pr_number": 2027, "pr_title": " Improve the handling of non-registered worlds", "pr_createdAt": "2020-06-25T03:09:14Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2027", "timeline": [{"oid": "c1755965369c265cdb48fdf06255de2080af69bc", "url": "https://github.com/Slimefun/Slimefun4/commit/c1755965369c265cdb48fdf06255de2080af69bc", "message": "Improve the handling of non-registered worlds", "committedDate": "2020-06-25T02:33:02Z", "type": "commit"}, {"oid": "ecd97b3e500a1b5316790d8dc8dcaa3881001b2a", "url": "https://github.com/Slimefun/Slimefun4/commit/ecd97b3e500a1b5316790d8dc8dcaa3881001b2a", "message": "Fixed a tiny typo", "committedDate": "2020-06-25T02:54:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxNzk3MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2027#discussion_r445417971", "bodyText": "Please don't use .forEach(...), it can have quite a negative impact on performance. It is advised to use the standard for loop format instead.", "author": "TheBusyBiscuit", "createdAt": "2020-06-25T09:10:55Z", "path": "src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java", "diffHunk": "@@ -391,21 +391,15 @@ public void onDisable() {\n             }\n         });\n \n-        for (World world : Bukkit.getWorlds()) {\n+        // Save all registered Worlds\n+        getRegistry().getWorlds().forEach((world, storage) -> {", "originalCommit": "ecd97b3e500a1b5316790d8dc8dcaa3881001b2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MTI2OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2027#discussion_r445441268", "bodyText": "Normally it should be done only once when shutting down the server without any players already but I see the point. Agreed, should be resolved now.", "author": "SoSeDiK", "createdAt": "2020-06-25T09:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxNzk3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ed2258eb0b1bb9f03d68fd2fd0b7dcac6af67fe", "chunk": "diff --git a/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java b/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\nindex 8a2fa5b02..a95c1b466 100644\n--- a/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\n+++ b/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\n\n@@ -392,14 +388,14 @@ public final class SlimefunPlugin extends JavaPlugin implements SlimefunAddon {\n         });\n \n         // Save all registered Worlds\n-        getRegistry().getWorlds().forEach((world, storage) -> {\n+        for (Map.Entry<String, BlockStorage> entry : getRegistry().getWorlds().entrySet()) {\n             try {\n-                storage.save(true);\n+                entry.getValue().save(true);\n             }\n             catch (Exception x) {\n-                getLogger().log(Level.SEVERE, x, () -> \"An Error occurred while saving Slimefun-Blocks in World '\" + world + \"' for Slimefun \" + getVersion());\n+                getLogger().log(Level.SEVERE, x, () -> \"An Error occurred while saving Slimefun-Blocks in World '\" + entry.getKey() + \"' for Slimefun \" + getVersion());\n             }\n-        });\n+        }\n \n         for (UniversalBlockMenu menu : registry.getUniversalInventories().values()) {\n             menu.save();\n"}}, {"oid": "4ed2258eb0b1bb9f03d68fd2fd0b7dcac6af67fe", "url": "https://github.com/Slimefun/Slimefun4/commit/4ed2258eb0b1bb9f03d68fd2fd0b7dcac6af67fe", "message": "Replace stream with for loop", "committedDate": "2020-06-25T09:49:18Z", "type": "commit"}, {"oid": "ade18c7bd8b21515b51d9c797608ac400a165331", "url": "https://github.com/Slimefun/Slimefun4/commit/ade18c7bd8b21515b51d9c797608ac400a165331", "message": "Remove unused import", "committedDate": "2020-06-25T09:58:04Z", "type": "commit"}, {"oid": "386cbea53b58765b7bb3390fbb19193607c92ddc", "url": "https://github.com/Slimefun/Slimefun4/commit/386cbea53b58765b7bb3390fbb19193607c92ddc", "message": "Whoops", "committedDate": "2020-06-25T09:59:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0NjYyMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2027#discussion_r445446622", "bodyText": "Please do not use the star import.", "author": "TheBusyBiscuit", "createdAt": "2020-06-25T10:00:06Z", "path": "src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java", "diffHunk": "@@ -1,11 +1,7 @@\n package me.mrCookieSlime.Slimefun;\n \n import java.io.File;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Set;\n+import java.util.*;", "originalCommit": "386cbea53b58765b7bb3390fbb19193607c92ddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0ODEzMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2027#discussion_r445448130", "bodyText": "Yeah. I'm trying to find a solution for that :P\nMy IntelliJ IDEA does that automatically. I guess I'll have to set them manually, as well as add new imports for entries.\nEdit: I found the option for that.", "author": "SoSeDiK", "createdAt": "2020-06-25T10:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0NjYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "e52ac9d43b49cd451d8000e3c71a1603d021c2ba", "chunk": "diff --git a/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java b/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\nindex c3534bb62..b9fd4a396 100644\n--- a/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\n+++ b/src/main/java/me/mrCookieSlime/Slimefun/SlimefunPlugin.java\n\n@@ -1,7 +1,12 @@\n package me.mrCookieSlime.Slimefun;\n \n import java.io.File;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n"}}, {"oid": "e52ac9d43b49cd451d8000e3c71a1603d021c2ba", "url": "https://github.com/Slimefun/Slimefun4/commit/e52ac9d43b49cd451d8000e3c71a1603d021c2ba", "message": "Make it compile", "committedDate": "2020-06-25T10:06:34Z", "type": "commit"}]}