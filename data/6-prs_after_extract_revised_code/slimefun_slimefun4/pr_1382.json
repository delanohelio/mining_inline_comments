{"pr_number": 1382, "pr_title": "Small bug fixing", "pr_createdAt": "2020-01-25T01:50:05Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/1382", "timeline": [{"oid": "e2ff5b2b09401d62bb4968fb30aec1178c8b171a", "url": "https://github.com/Slimefun/Slimefun4/commit/e2ff5b2b09401d62bb4968fb30aec1178c8b171a", "message": "Fixed DebugFishListener casting BlockData of wall skulls to Rotatable instead of Directional.", "committedDate": "2020-01-25T03:07:41Z", "type": "commit"}, {"oid": "e49f7de412b315eeba5a6b763c6275242e8fbacf", "url": "https://github.com/Slimefun/Slimefun4/commit/e49f7de412b315eeba5a6b763c6275242e8fbacf", "message": "Allowed MagicSugar to be placed on Altars.", "committedDate": "2020-01-25T03:42:15Z", "type": "commit"}, {"oid": "4145eeb82d92bd606bb05a347591df53a121cb14", "url": "https://github.com/Slimefun/Slimefun4/commit/4145eeb82d92bd606bb05a347591df53a121cb14", "message": "Fixed formatting", "committedDate": "2020-01-25T03:43:56Z", "type": "commit"}, {"oid": "71d4b74d7228b7a9b97bd1ac1ce7701536282d6e", "url": "https://github.com/Slimefun/Slimefun4/commit/71d4b74d7228b7a9b97bd1ac1ce7701536282d6e", "message": "Null checking is a good idea.", "committedDate": "2020-01-25T03:58:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMDgwOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1382#discussion_r370920809", "bodyText": "This should return true.\nTrue means \"Yes this Item was me\".\nWith false you are telling Slimefun to keep looking for items that match...", "author": "TheBusyBiscuit", "createdAt": "2020-01-25T08:05:13Z", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java", "diffHunk": "@@ -23,6 +26,11 @@ public MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeTy\n \tpublic ItemInteractionHandler getItemHandler() {\n \t\treturn (e, p, item) -> {\n \t\t\tif (isItem(item)) {\n+\t\t\t\tif(e.getClickedBlock() != null) {\n+\t\t\t\t\tString target = BlockStorage.checkID(e.getClickedBlock());\n+\t\t\t\t\tif (\"ANCIENT_PEDESTAL\".equals(target) || \"ANCIENT_ALTAR\".equals(target))\n+\t\t\t\t\t\treturn false;", "originalCommit": "71d4b74d7228b7a9b97bd1ac1ce7701536282d6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a999d01d5d6407f0996b2d91509ded0766950", "chunk": "diff --git a/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java b/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\nindex 271e27947..621e418bf 100644\n--- a/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\n+++ b/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\n\n@@ -11,34 +11,33 @@ import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.api.BlockStorage;\n import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n import org.bukkit.GameMode;\n+import org.bukkit.Material;\n import org.bukkit.Sound;\n import org.bukkit.inventory.ItemStack;\n import org.bukkit.potion.PotionEffect;\n import org.bukkit.potion.PotionEffectType;\n \n public class MagicSugar extends SimpleSlimefunItem<ItemInteractionHandler> {\n-\t\n-\tpublic MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n-\t\tsuper(category, item, recipeType, recipe);\n-\t}\n \n-\t@Override\n-\tpublic ItemInteractionHandler getItemHandler() {\n-\t\treturn (e, p, item) -> {\n-\t\t\tif (isItem(item)) {\n-\t\t\t\tif(e.getClickedBlock() != null) {\n-\t\t\t\t\tString target = BlockStorage.checkID(e.getClickedBlock());\n-\t\t\t\t\tif (\"ANCIENT_PEDESTAL\".equals(target) || \"ANCIENT_ALTAR\".equals(target))\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t\tif (p.getGameMode() != GameMode.CREATIVE) ItemUtils.consumeItem(item, false);\n-\t\t\t\t\n-\t\t\t\tp.getWorld().playSound(p.getLocation(), Sound.ENTITY_GENERIC_EAT, 1, 1);\n-\t\t\t\tp.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 600, 3));\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\telse return false;\n-\t\t};\n-\t}\n+    public MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public ItemInteractionHandler getItemHandler() {\n+        return (e, p, item) -> {\n+            if (isItem(item)) {\n+            \t//Check if it is being placed into an ancient altar.\n+                if (e.getClickedBlock() != null)\n+                    if (e.getClickedBlock().getType() == Material.DISPENSER || e.getClickedBlock().getType() == Material.ENCHANTING_TABLE)\n+                        return true;\n+                if (p.getGameMode() != GameMode.CREATIVE) ItemUtils.consumeItem(item, false);\n+\n+                p.getWorld().playSound(p.getLocation(), Sound.ENTITY_GENERIC_EAT, 1, 1);\n+                p.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 600, 3));\n+                return true;\n+            } else return false;\n+        };\n+    }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzY5Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/1382#discussion_r370923696", "bodyText": "I am also thinking whether a Material comparison for ENCHANTMENT_TABLE and DISPENSER may not be a better idea.\nIt would definitely be better performance-wise.\nAlso please add a comment to this code to explain why it is there.", "author": "TheBusyBiscuit", "createdAt": "2020-01-25T09:26:18Z", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java", "diffHunk": "@@ -23,6 +26,11 @@ public MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeTy\n \tpublic ItemInteractionHandler getItemHandler() {\n \t\treturn (e, p, item) -> {\n \t\t\tif (isItem(item)) {\n+\t\t\t\tif(e.getClickedBlock() != null) {\n+\t\t\t\t\tString target = BlockStorage.checkID(e.getClickedBlock());\n+\t\t\t\t\tif (\"ANCIENT_PEDESTAL\".equals(target) || \"ANCIENT_ALTAR\".equals(target))\n+\t\t\t\t\t\treturn false;", "originalCommit": "71d4b74d7228b7a9b97bd1ac1ce7701536282d6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MDUyNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1382#discussion_r370940527", "bodyText": "I was thinking that too but added the check so that people don\u2019t accidentally open inventories when trying to use the sugar. Tbh it would work either way.", "author": "BigBadE", "createdAt": "2020-01-25T15:53:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "669a999d01d5d6407f0996b2d91509ded0766950", "chunk": "diff --git a/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java b/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\nindex 271e27947..621e418bf 100644\n--- a/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\n+++ b/src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/items/MagicSugar.java\n\n@@ -11,34 +11,33 @@ import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.api.BlockStorage;\n import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n import org.bukkit.GameMode;\n+import org.bukkit.Material;\n import org.bukkit.Sound;\n import org.bukkit.inventory.ItemStack;\n import org.bukkit.potion.PotionEffect;\n import org.bukkit.potion.PotionEffectType;\n \n public class MagicSugar extends SimpleSlimefunItem<ItemInteractionHandler> {\n-\t\n-\tpublic MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n-\t\tsuper(category, item, recipeType, recipe);\n-\t}\n \n-\t@Override\n-\tpublic ItemInteractionHandler getItemHandler() {\n-\t\treturn (e, p, item) -> {\n-\t\t\tif (isItem(item)) {\n-\t\t\t\tif(e.getClickedBlock() != null) {\n-\t\t\t\t\tString target = BlockStorage.checkID(e.getClickedBlock());\n-\t\t\t\t\tif (\"ANCIENT_PEDESTAL\".equals(target) || \"ANCIENT_ALTAR\".equals(target))\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t}\n-\t\t\t\tif (p.getGameMode() != GameMode.CREATIVE) ItemUtils.consumeItem(item, false);\n-\t\t\t\t\n-\t\t\t\tp.getWorld().playSound(p.getLocation(), Sound.ENTITY_GENERIC_EAT, 1, 1);\n-\t\t\t\tp.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 600, 3));\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\telse return false;\n-\t\t};\n-\t}\n+    public MagicSugar(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public ItemInteractionHandler getItemHandler() {\n+        return (e, p, item) -> {\n+            if (isItem(item)) {\n+            \t//Check if it is being placed into an ancient altar.\n+                if (e.getClickedBlock() != null)\n+                    if (e.getClickedBlock().getType() == Material.DISPENSER || e.getClickedBlock().getType() == Material.ENCHANTING_TABLE)\n+                        return true;\n+                if (p.getGameMode() != GameMode.CREATIVE) ItemUtils.consumeItem(item, false);\n+\n+                p.getWorld().playSound(p.getLocation(), Sound.ENTITY_GENERIC_EAT, 1, 1);\n+                p.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 600, 3));\n+                return true;\n+            } else return false;\n+        };\n+    }\n \n }\n"}}, {"oid": "669a999d01d5d6407f0996b2d91509ded0766950", "url": "https://github.com/Slimefun/Slimefun4/commit/669a999d01d5d6407f0996b2d91509ded0766950", "message": "Added comments, switched return for MagicSugar, and made MagicSugar ancient altar check pass on any dispensers/enchantment tables.", "committedDate": "2020-01-25T17:09:58Z", "type": "commit"}]}