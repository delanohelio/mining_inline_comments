{"pr_number": 2396, "pr_title": "Add sticks recipe to table saw", "pr_createdAt": "2020-10-05T14:34:13Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2396", "timeline": [{"oid": "b3ca362df2f766b88dbd8e6faa3efb38d2173a12", "url": "https://github.com/Slimefun/Slimefun4/commit/b3ca362df2f766b88dbd8e6faa3efb38d2173a12", "message": "Add DisplayRecipes", "committedDate": "2020-10-05T14:06:19Z", "type": "commit"}, {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "url": "https://github.com/Slimefun/Slimefun4/commit/0e57d94d61d4249fbfad78ff2d439466a46fa374", "message": "Add Sticks recipe to Table Saw", "committedDate": "2020-10-05T14:28:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1MzQ2Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499653462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Material plank: Tag.PLANKS.getValues()) {\n          \n          \n            \n                    for (Material plank : Tag.PLANKS.getValues()) {", "author": "LinoxGH", "createdAt": "2020-10-05T14:45:07Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +46,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {", "originalCommit": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8675e96e75811a0eac025ab530095016dd5f16e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 3d32e075c..feb3d94f7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -47,7 +47,7 @@ public class TableSaw extends MultiBlockMachine {\n             }\n         }\n \n-        for (Material plank: Tag.PLANKS.getValues()) {\n+        for (Material plank : Tag.PLANKS.getValues()) {\n             displayedRecipes.add(new ItemStack(plank));\n             displayedRecipes.add(new ItemStack(Material.STICK, 4));\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NDUxNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499654517", "bodyText": "Instead of flling the guide wth the same recipe maybe add a dummy plank representing all planks and have its display name as \"Any Wooden Plank\"", "author": "LinoxGH", "createdAt": "2020-10-05T14:46:29Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +46,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {\n+            displayedRecipes.add(new ItemStack(plank));\n+            displayedRecipes.add(new ItemStack(Material.STICK, 4));\n+        }", "originalCommit": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MzgyMw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499673823", "bodyText": "Should I also do that for logs / stripped logs then, @LinoxGH?", "author": "svr333", "createdAt": "2020-10-05T15:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NDUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "8675e96e75811a0eac025ab530095016dd5f16e6", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 3d32e075c..feb3d94f7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -47,7 +47,7 @@ public class TableSaw extends MultiBlockMachine {\n             }\n         }\n \n-        for (Material plank: Tag.PLANKS.getValues()) {\n+        for (Material plank : Tag.PLANKS.getValues()) {\n             displayedRecipes.add(new ItemStack(plank));\n             displayedRecipes.add(new ItemStack(Material.STICK, 4));\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NTE5Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499655193", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Material plank: Tag.PLANKS.getValues()) {\n          \n          \n            \n                    for (Material plank : Tag.PLANKS.getValues()) {", "author": "LinoxGH", "createdAt": "2020-10-05T14:47:21Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +60,32 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+\n+        boolean itemIsAPlank = false;\n+        Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {", "originalCommit": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62aa2dd0d86247565f4332f5a48691c5acbeb773", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 3d32e075c..2fe0a351d 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -62,16 +63,9 @@ public class TableSaw extends MultiBlockMachine {\n     public void onInteract(Player p, Block b) {\n         ItemStack item = p.getInventory().getItemInMainHand();\n \n-        boolean itemIsAPlank = false;\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n \n-        for (Material plank: Tag.PLANKS.getValues()) {\n-            if (item.getType() == plank) {\n-                itemIsAPlank = true;\n-                break;\n-            }\n-        }\n-\n         if (planks.isPresent() || itemIsAPlank) {\n             ItemStack output = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NTYxMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499655611", "bodyText": "You should use Tag.PLANKS.isTagged()", "author": "LinoxGH", "createdAt": "2020-10-05T14:47:56Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +60,32 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+\n+        boolean itemIsAPlank = false;\n+        Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {\n+            if (item.getType() == plank) {\n+                itemIsAPlank = true;\n+                break;\n+            }\n+        }", "originalCommit": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62aa2dd0d86247565f4332f5a48691c5acbeb773", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 3d32e075c..2fe0a351d 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -62,16 +63,9 @@ public class TableSaw extends MultiBlockMachine {\n     public void onInteract(Player p, Block b) {\n         ItemStack item = p.getInventory().getItemInMainHand();\n \n-        boolean itemIsAPlank = false;\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n \n-        for (Material plank: Tag.PLANKS.getValues()) {\n-            if (item.getType() == plank) {\n-                itemIsAPlank = true;\n-                break;\n-            }\n-        }\n-\n         if (planks.isPresent() || itemIsAPlank) {\n             ItemStack output = null;\n \n"}}, {"oid": "8675e96e75811a0eac025ab530095016dd5f16e6", "url": "https://github.com/Slimefun/Slimefun4/commit/8675e96e75811a0eac025ab530095016dd5f16e6", "message": "Add space\n\nCo-authored-by: LinoxGH <54643600+LinoxGH@users.noreply.github.com>", "committedDate": "2020-10-05T15:11:56Z", "type": "commit"}, {"oid": "62aa2dd0d86247565f4332f5a48691c5acbeb773", "url": "https://github.com/Slimefun/Slimefun4/commit/62aa2dd0d86247565f4332f5a48691c5acbeb773", "message": "Simplify displayrecipes and use planks.isTagged()", "committedDate": "2020-10-05T15:23:40Z", "type": "commit"}, {"oid": "983bc103d33f18057cdf590b316a7c2870fc8481", "url": "https://github.com/Slimefun/Slimefun4/commit/983bc103d33f18057cdf590b316a7c2870fc8481", "message": "Refactor", "committedDate": "2020-10-05T16:43:11Z", "type": "commit"}, {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde", "url": "https://github.com/Slimefun/Slimefun4/commit/ff0c2b798440be5adf2c18178345074aafd1abde", "message": "Change else if to else", "committedDate": "2020-10-05T17:37:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Mjg2NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499772864", "bodyText": "Nonnull annotations would be nice.", "author": "LinoxGH", "createdAt": "2020-10-05T17:55:03Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {", "originalCommit": "ff0c2b798440be5adf2c18178345074aafd1abde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9242978a96b4c622a43722a94bfdb109c7ccfad7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex a0d8e0f77..9d55867d1 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -66,32 +66,33 @@ public class TableSaw extends MultiBlockMachine {\n         boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n \n-        if (itemIsALog || itemIsAPlank) {\n-            ItemStack output = null;\n+        ItemStack output = null;\n \n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(item, true);\n-            }\n-\n-            if (itemIsALog) {\n-                Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-                output = new ItemStack(planks.get(), 8);\n-            }\n-            else {\n-                output = new ItemStack(Material.STICK, 4);\n-            }\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return;\n+        }\n \n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        Inventory outputChest = findOutputChest(b, output);\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+        if (outputChest != null) {\n+            outputChest.addItem(output);\n+        }\n+        else {\n+            b.getWorld().dropItemNaturally(b.getLocation(), output);\n         }\n+\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3MzA2MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499773061", "bodyText": "This can be removed.", "author": "LinoxGH", "createdAt": "2020-10-05T17:55:24Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+\n+        if (itemIsALog || itemIsAPlank) {", "originalCommit": "ff0c2b798440be5adf2c18178345074aafd1abde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9242978a96b4c622a43722a94bfdb109c7ccfad7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex a0d8e0f77..9d55867d1 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -66,32 +66,33 @@ public class TableSaw extends MultiBlockMachine {\n         boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n \n-        if (itemIsALog || itemIsAPlank) {\n-            ItemStack output = null;\n+        ItemStack output = null;\n \n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(item, true);\n-            }\n-\n-            if (itemIsALog) {\n-                Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-                output = new ItemStack(planks.get(), 8);\n-            }\n-            else {\n-                output = new ItemStack(Material.STICK, 4);\n-            }\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return;\n+        }\n \n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        Inventory outputChest = findOutputChest(b, output);\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+        if (outputChest != null) {\n+            outputChest.addItem(output);\n+        }\n+        else {\n+            b.getWorld().dropItemNaturally(b.getLocation(), output);\n         }\n+\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NDEwMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499774100", "bodyText": "This is supposed to be called after output is initialized.", "author": "LinoxGH", "createdAt": "2020-10-05T17:57:11Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+\n+        if (itemIsALog || itemIsAPlank) {\n+            ItemStack output = null;\n \n-        if (planks.isPresent()) {\n             if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n+                ItemUtils.consumeItem(item, true);\n+            }", "originalCommit": "ff0c2b798440be5adf2c18178345074aafd1abde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9242978a96b4c622a43722a94bfdb109c7ccfad7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex a0d8e0f77..9d55867d1 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -66,32 +66,33 @@ public class TableSaw extends MultiBlockMachine {\n         boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n \n-        if (itemIsALog || itemIsAPlank) {\n-            ItemStack output = null;\n+        ItemStack output = null;\n \n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(item, true);\n-            }\n-\n-            if (itemIsALog) {\n-                Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-                output = new ItemStack(planks.get(), 8);\n-            }\n-            else {\n-                output = new ItemStack(Material.STICK, 4);\n-            }\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return;\n+        }\n \n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        Inventory outputChest = findOutputChest(b, output);\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+        if (outputChest != null) {\n+            outputChest.addItem(output);\n+        }\n+        else {\n+            b.getWorld().dropItemNaturally(b.getLocation(), output);\n         }\n+\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n     }\n \n }\n"}}, {"oid": "9242978a96b4c622a43722a94bfdb109c7ccfad7", "url": "https://github.com/Slimefun/Slimefun4/commit/9242978a96b4c622a43722a94bfdb109c7ccfad7", "message": "Remove redundant if-else && Consume item after output", "committedDate": "2020-10-05T17:57:50Z", "type": "commit"}, {"oid": "3ef0a67db61ee781086808cb41c2a0fbc0fddb79", "url": "https://github.com/Slimefun/Slimefun4/commit/3ef0a67db61ee781086808cb41c2a0fbc0fddb79", "message": "Add @Nonnull", "committedDate": "2020-10-05T17:59:55Z", "type": "commit"}, {"oid": "038efb83917293aeba23756ed8e3fc61ac4aa2ea", "url": "https://github.com/Slimefun/Slimefun4/commit/038efb83917293aeba23756ed8e3fc61ac4aa2ea", "message": "Add myself @author", "committedDate": "2020-10-05T18:00:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4OTYzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499789632", "bodyText": "I think this should be put into a seperate method returning a nullable ItemStack.", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T18:26:14Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,39 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        ItemStack output = null;\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return;\n+        }", "originalCommit": "038efb83917293aeba23756ed8e3fc61ac4aa2ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e17cd2cc582090c7a864a2b2b5956b1f3a18bd7", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex b1695c59e..11f06b551 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -65,10 +65,23 @@ public class TableSaw extends MultiBlockMachine {\n     @Override\n     public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n         ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n+        if (output == null) {\n+            return;\n+        }\n+\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n+\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n+\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n         boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n         boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-\n         ItemStack output = null;\n \n         if (itemIsALog) {\n"}}, {"oid": "6e17cd2cc582090c7a864a2b2b5956b1f3a18bd7", "url": "https://github.com/Slimefun/Slimefun4/commit/6e17cd2cc582090c7a864a2b2b5956b1f3a18bd7", "message": "Extract to method", "committedDate": "2020-10-05T21:00:44Z", "type": "commit"}, {"oid": "8c44c583cff4cea288d07214f244e150003a1bda", "url": "https://github.com/Slimefun/Slimefun4/commit/8c44c583cff4cea288d07214f244e150003a1bda", "message": "Add nullable tag", "committedDate": "2020-10-05T21:01:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjQ1MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499906450", "bodyText": "Why aren't you adding all planks directly instead of this weird placeholder?", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:28:08Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +51,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        CustomItem ci = new CustomItem(Material.OAK_PLANKS, \"Any Wooden Plank\");\n+\n+        displayedRecipes.add(new ItemStack(ci));\n+        displayedRecipes.add(new ItemStack(Material.STICK, 4));", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxOTc2Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499919763", "bodyText": "I dont know who it was but someone told me that this was better, I had it for each item at the start and changed it to this", "author": "svr333", "createdAt": "2020-10-05T23:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyNTA3Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499925076", "bodyText": "undo or keep?", "author": "svr333", "createdAt": "2020-10-05T23:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1MDE4MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500150180", "bodyText": "I undid cuz I also preferred the older way of doing it", "author": "svr333", "createdAt": "2020-10-06T09:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..ba5298088 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -52,10 +51,10 @@ public class TableSaw extends MultiBlockMachine {\n             }\n         }\n \n-        CustomItem ci = new CustomItem(Material.OAK_PLANKS, \"Any Wooden Plank\");\n-\n-        displayedRecipes.add(new ItemStack(ci));\n-        displayedRecipes.add(new ItemStack(Material.STICK, 4));\n+        for (Material plank : Tag.PLANKS.getValues()) {\n+            displayedRecipes.add(new ItemStack(plank));\n+            displayedRecipes.add(new ItemStack(Material.STICK, 4));\n+        }\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjk5Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499906993", "bodyText": "Unnecessary variable declaration", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:29:35Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..f9adbecd7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -82,19 +82,16 @@ public class TableSaw extends MultiBlockMachine {\n \n     @Nullable\n     private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n-        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n-        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-        ItemStack output = null;\n-\n-        if (itemIsALog) {\n+        if (Tag.LOGS.isTagged(item.getType())) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-            output = new ItemStack(planks.get(), 8);\n+            return new ItemStack(planks.get(), 8);\n         }\n-        else if (itemIsAPlank){\n-            output = new ItemStack(Material.STICK, 4);\n+        else if (Tag.PLANKS.isTagged(item.getType())) {\n+            return new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return null;\n         }\n-\n-        return output;\n     }\n \n     private void outputItems(@Nonnull Block b, @Nonnull ItemStack output) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzAwMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907001", "bodyText": "There isn't really any need for these two variables, just do it inside the if-statement directly.", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:29:36Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..f9adbecd7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -82,19 +82,16 @@ public class TableSaw extends MultiBlockMachine {\n \n     @Nullable\n     private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n-        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n-        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-        ItemStack output = null;\n-\n-        if (itemIsALog) {\n+        if (Tag.LOGS.isTagged(item.getType())) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-            output = new ItemStack(planks.get(), 8);\n+            return new ItemStack(planks.get(), 8);\n         }\n-        else if (itemIsAPlank){\n-            output = new ItemStack(Material.STICK, 4);\n+        else if (Tag.PLANKS.isTagged(item.getType())) {\n+            return new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return null;\n         }\n-\n-        return output;\n     }\n \n     private void outputItems(@Nonnull Block b, @Nonnull ItemStack output) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzA4Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907086", "bodyText": "Just do a return; here, no need to assign a variable.", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:29:50Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..f9adbecd7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -82,19 +82,16 @@ public class TableSaw extends MultiBlockMachine {\n \n     @Nullable\n     private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n-        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n-        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-        ItemStack output = null;\n-\n-        if (itemIsALog) {\n+        if (Tag.LOGS.isTagged(item.getType())) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-            output = new ItemStack(planks.get(), 8);\n+            return new ItemStack(planks.get(), 8);\n         }\n-        else if (itemIsAPlank){\n-            output = new ItemStack(Material.STICK, 4);\n+        else if (Tag.PLANKS.isTagged(item.getType())) {\n+            return new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return null;\n         }\n-\n-        return output;\n     }\n \n     private void outputItems(@Nonnull Block b, @Nonnull ItemStack output) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzEwNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907106", "bodyText": "Just do a return; here, no need to assign a variable.", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:29:54Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..f9adbecd7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -82,19 +82,16 @@ public class TableSaw extends MultiBlockMachine {\n \n     @Nullable\n     private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n-        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n-        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-        ItemStack output = null;\n-\n-        if (itemIsALog) {\n+        if (Tag.LOGS.isTagged(item.getType())) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-            output = new ItemStack(planks.get(), 8);\n+            return new ItemStack(planks.get(), 8);\n         }\n-        else if (itemIsAPlank){\n-            output = new ItemStack(Material.STICK, 4);\n+        else if (Tag.PLANKS.isTagged(item.getType())) {\n+            return new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return null;\n         }\n-\n-        return output;\n     }\n \n     private void outputItems(@Nonnull Block b, @Nonnull ItemStack output) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzE2MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907160", "bodyText": "else return null;", "author": "TheBusyBiscuit", "createdAt": "2020-10-05T22:30:02Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n         }\n+\n+        return output;", "originalCommit": "8c44c583cff4cea288d07214f244e150003a1bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex 191ce446f..f9adbecd7 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -82,19 +82,16 @@ public class TableSaw extends MultiBlockMachine {\n \n     @Nullable\n     private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n-        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n-        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n-        ItemStack output = null;\n-\n-        if (itemIsALog) {\n+        if (Tag.LOGS.isTagged(item.getType())) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n-            output = new ItemStack(planks.get(), 8);\n+            return new ItemStack(planks.get(), 8);\n         }\n-        else if (itemIsAPlank){\n-            output = new ItemStack(Material.STICK, 4);\n+        else if (Tag.PLANKS.isTagged(item.getType())) {\n+            return new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return null;\n         }\n-\n-        return output;\n     }\n \n     private void outputItems(@Nonnull Block b, @Nonnull ItemStack output) {\n"}}, {"oid": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "url": "https://github.com/Slimefun/Slimefun4/commit/37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "message": "Throw out variables", "committedDate": "2020-10-05T23:26:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5NTE4Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499995183", "bodyText": "Instead of ItemStack item you can use Material type to reduce the calls to get the type.", "author": "LinoxGH", "createdAt": "2020-10-06T04:11:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {", "originalCommit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex f9adbecd7..ba5298088 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -66,7 +65,7 @@ public class TableSaw extends MultiBlockMachine {\n     @Override\n     public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n         ItemStack item = p.getInventory().getItemInMainHand();\n-        ItemStack output = getItemsToOutput(item);\n+        ItemStack output = getItemsToOutput(item.getType());\n \n         if (output == null) {\n             return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5NTQxMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499995411", "bodyText": "Move this to the right location.", "author": "LinoxGH", "createdAt": "2020-10-06T04:12:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -4,6 +4,7 @@\n import java.util.List;\n import java.util.Optional;\n \n+import io.github.thebusybiscuit.cscorelib2.item.CustomItem;", "originalCommit": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex f9adbecd7..ba5298088 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -4,7 +4,6 @@ import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n \n-import io.github.thebusybiscuit.cscorelib2.item.CustomItem;\n import org.bukkit.Effect;\n import org.bukkit.GameMode;\n import org.bukkit.Material;\n"}}, {"oid": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "url": "https://github.com/Slimefun/Slimefun4/commit/e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "message": "Refactor + undo placeholder item in displayrecipes", "committedDate": "2020-10-06T09:53:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODQ5Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500478496", "bodyText": "Never call Optional#get() without doing Optional#ifPresent() first.", "author": "TheBusyBiscuit", "createdAt": "2020-10-06T17:37:30Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull Material item) {\n+        if (Tag.LOGS.isTagged(item)) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item);\n+            return new ItemStack(planks.get(), 8);", "originalCommit": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa394b4d447347c06d904ca470fd87f658ba14d5", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex ba5298088..0a272a911 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -83,7 +83,12 @@ public class TableSaw extends MultiBlockMachine {\n     private ItemStack getItemsToOutput(@Nonnull Material item) {\n         if (Tag.LOGS.isTagged(item)) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item);\n-            return new ItemStack(planks.get(), 8);\n+            if (planks.isPresent()) {\n+                return new ItemStack(planks.get(), 8);\n+            }\n+            else {\n+                return null;\n+            }\n         }\n         else if (Tag.PLANKS.isTagged(item)) {\n             return new ItemStack(Material.STICK, 4);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODk4Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500478982", "bodyText": "Just a general thought: Should we maybe send a message or play a sound effect here?", "author": "TheBusyBiscuit", "createdAt": "2020-10-06T17:38:22Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;", "originalCommit": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTQxMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500485411", "bodyText": "Play a sound when the output is null you mean?\nWhat sound, though?", "author": "svr333", "createdAt": "2020-10-06T17:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODk4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MDE4OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500490188", "bodyText": "Just an indicator that this item couldn't be used, either some sound that conveys \"failure\" XD, maybe smoke particles or just the usual \"not a valid recipe\" message.\nIt's just a general idea.", "author": "TheBusyBiscuit", "createdAt": "2020-10-06T17:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODk4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDQ4MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500540480", "bodyText": "Ill do the generic message", "author": "svr333", "createdAt": "2020-10-06T19:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fa394b4d447347c06d904ca470fd87f658ba14d5", "chunk": "diff --git a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\nindex ba5298088..0a272a911 100644\n--- a/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n+++ b/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java\n\n@@ -83,7 +83,12 @@ public class TableSaw extends MultiBlockMachine {\n     private ItemStack getItemsToOutput(@Nonnull Material item) {\n         if (Tag.LOGS.isTagged(item)) {\n             Optional<Material> planks = MaterialConverter.getPlanksFromLog(item);\n-            return new ItemStack(planks.get(), 8);\n+            if (planks.isPresent()) {\n+                return new ItemStack(planks.get(), 8);\n+            }\n+            else {\n+                return null;\n+            }\n         }\n         else if (Tag.PLANKS.isTagged(item)) {\n             return new ItemStack(Material.STICK, 4);\n"}}, {"oid": "fa394b4d447347c06d904ca470fd87f658ba14d5", "url": "https://github.com/Slimefun/Slimefun4/commit/fa394b4d447347c06d904ca470fd87f658ba14d5", "message": "Call planks.isPresent()", "committedDate": "2020-10-06T17:50:57Z", "type": "commit"}, {"oid": "85091516dbeb58823ab604b2bb9ec2674be7416e", "url": "https://github.com/Slimefun/Slimefun4/commit/85091516dbeb58823ab604b2bb9ec2674be7416e", "message": "Add generic fail message", "committedDate": "2020-10-07T10:12:02Z", "type": "commit"}]}