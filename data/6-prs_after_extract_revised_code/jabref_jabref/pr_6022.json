{"pr_number": 6022, "pr_title": "Add month normalization to AstroPhysicsFetcher", "pr_createdAt": "2020-02-26T10:46:49Z", "pr_url": "https://github.com/JabRef/jabref/pull/6022", "timeline": [{"oid": "d2f5d677404497d0900f3ca01b9dbfe135bf6a70", "url": "https://github.com/JabRef/jabref/commit/d2f5d677404497d0900f3ca01b9dbfe135bf6a70", "message": "Try to normalize month", "committedDate": "2020-02-27T06:50:22Z", "type": "commit"}, {"oid": "d2f5d677404497d0900f3ca01b9dbfe135bf6a70", "url": "https://github.com/JabRef/jabref/commit/d2f5d677404497d0900f3ca01b9dbfe135bf6a70", "message": "Try to normalize month", "committedDate": "2020-02-27T06:50:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNjc2OQ==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386136769", "bodyText": "Not sure about our convention, but I don't think we should strive for converting every for loop now to streams just for the sake of it. (Maybe it's just my personal bias and I usually have a harder time to unravel a lot of filter/map combinations that some old-fanished for loop with ifs...)", "author": "tobiasdiez", "createdAt": "2020-03-01T20:11:38Z", "path": "src/main/java/org/jabref/model/cleanup/FieldFormatterCleanup.java", "diffHunk": "@@ -71,28 +69,18 @@ public FieldFormatterCleanup(Field field, Formatter formatter) {\n     }\n \n     private List<FieldChange> cleanupAllFields(BibEntry entry) {\n-        List<FieldChange> fieldChanges = new ArrayList<>();\n-\n-        for (Field fieldKey : entry.getFields()) {\n-            if (!fieldKey.equals(InternalField.KEY_FIELD)) {\n-                fieldChanges.addAll(cleanupSingleField(fieldKey, entry));\n-            }\n-        }\n-\n-        return fieldChanges;\n+        return entry.getFields().stream()\n+             .filter(field -> !field.equals(InternalField.KEY_FIELD))\n+             .flatMap(field -> cleanupSingleField(field, entry).stream())\n+             .collect(Collectors.toList());\n     }\n \n     private List<FieldChange> cleanupAllTextFields(BibEntry entry) {\n-        List<FieldChange> fieldChanges = new ArrayList<>();\n-        Set<Field> fields = new HashSet<>(entry.getFields());\n-        fields.removeAll(FieldFactory.getNotTextFieldNames());\n-        for (Field fieldKey : fields) {\n-            if (!fieldKey.equals(InternalField.KEY_FIELD)) {\n-                fieldChanges.addAll(cleanupSingleField(fieldKey, entry));\n-            }\n-        }\n-\n-        return fieldChanges;\n+        return entry.getFields().stream()", "originalCommit": "5418f526664005f69e576ca8dee85ee8b3a720d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODU3Ng==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386138576", "bodyText": "Since I use streams very often, I find the old code more hard to read. Maybe, we need to fix our style there. Or let it go that each dev can do however he wants (with new code; and don't touch old code)", "author": "koppor", "createdAt": "2020-03-01T20:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNjc2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2f178b12a1ff552e98867b4026bd95b9a00f9ed1", "chunk": "diff --git a/src/main/java/org/jabref/model/cleanup/FieldFormatterCleanup.java b/src/main/java/org/jabref/model/cleanup/FieldFormatterCleanup.java\nindex e1a207e49..546025aa6 100644\n--- a/src/main/java/org/jabref/model/cleanup/FieldFormatterCleanup.java\n+++ b/src/main/java/org/jabref/model/cleanup/FieldFormatterCleanup.java\n\n@@ -69,18 +71,28 @@ public class FieldFormatterCleanup implements CleanupJob {\n     }\n \n     private List<FieldChange> cleanupAllFields(BibEntry entry) {\n-        return entry.getFields().stream()\n-             .filter(field -> !field.equals(InternalField.KEY_FIELD))\n-             .flatMap(field -> cleanupSingleField(field, entry).stream())\n-             .collect(Collectors.toList());\n+        List<FieldChange> fieldChanges = new ArrayList<>();\n+\n+        for (Field fieldKey : entry.getFields()) {\n+            if (!fieldKey.equals(InternalField.KEY_FIELD)) {\n+                fieldChanges.addAll(cleanupSingleField(fieldKey, entry));\n+            }\n+        }\n+\n+        return fieldChanges;\n     }\n \n     private List<FieldChange> cleanupAllTextFields(BibEntry entry) {\n-        return entry.getFields().stream()\n-                    .filter(field -> !FieldFactory.getNotTextFieldNames().contains(field))\n-                    .filter(field -> !field.equals(InternalField.KEY_FIELD))\n-                    .flatMap(field -> cleanupSingleField(field, entry).stream())\n-                    .collect(Collectors.toList());\n+        List<FieldChange> fieldChanges = new ArrayList<>();\n+        Set<Field> fields = new HashSet<>(entry.getFields());\n+        fields.removeAll(FieldFactory.getNotTextFieldNames());\n+        for (Field fieldKey : fields) {\n+            if (!fieldKey.equals(InternalField.KEY_FIELD)) {\n+                fieldChanges.addAll(cleanupSingleField(fieldKey, entry));\n+            }\n+        }\n+\n+        return fieldChanges;\n     }\n \n     public Field getField() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNjg0MQ==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386136841", "bodyText": "Can you please leave the throws Exception. It's good practice to have them so that adding an exception to the method under test doesn't need a change of the test.", "author": "tobiasdiez", "createdAt": "2020-03-01T20:12:49Z", "path": "src/test/java/org/jabref/logic/cleanup/FieldFormatterCleanupTest.java", "diffHunk": "@@ -39,7 +39,7 @@ public void setUp() {\n     }\n \n     @Test\n-    public void testInternalAllField() throws Exception {\n+    public void testInternalAllField() {", "originalCommit": "5418f526664005f69e576ca8dee85ee8b3a720d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODU5OA==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386138598", "bodyText": "Just IntelliJ complained that no exception is thrown and thus the code looked not well maintained. I'll undo it.", "author": "koppor", "createdAt": "2020-03-01T20:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNjg0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2f178b12a1ff552e98867b4026bd95b9a00f9ed1", "chunk": "diff --git a/src/test/java/org/jabref/logic/cleanup/FieldFormatterCleanupTest.java b/src/test/java/org/jabref/logic/cleanup/FieldFormatterCleanupTest.java\nindex e5eb21c1c..dc0b5a995 100644\n--- a/src/test/java/org/jabref/logic/cleanup/FieldFormatterCleanupTest.java\n+++ b/src/test/java/org/jabref/logic/cleanup/FieldFormatterCleanupTest.java\n\n@@ -39,7 +39,7 @@ public class FieldFormatterCleanupTest {\n     }\n \n     @Test\n-    public void testInternalAllField() {\n+    public void testInternalAllField() throws Exception {\n         FieldFormatterCleanup cleanup = new FieldFormatterCleanup(InternalField.INTERNAL_ALL_FIELD, new UpperCaseFormatter());\n         cleanup.cleanup(entry);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzA2NA==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386137064", "bodyText": "I'm a bit undecided about this one, but we had the standing convention that feature tests should specify the data in the returned entry as explicit as possible (i.e. we really want to test that the data is in the right format in the right field). Since the setMonth performs a bit of magic, this change is against this convention.\nOn the other hand, it's a bit more readable / invariant under changes.  Nonetheless I would slightly prefer a setField solution.", "author": "tobiasdiez", "createdAt": "2020-03-01T20:16:00Z", "path": "src/test/java/org/jabref/logic/importer/fetcher/AstrophysicsDataSystemTest.java", "diffHunk": "@@ -42,7 +43,7 @@ public void setUp() throws Exception {\n         diezSliceTheoremEntry.setField(StandardField.EPRINT, \"1812.04698\");\n         diezSliceTheoremEntry.setField(StandardField.JOURNAL, \"arXiv e-prints\");\n         diezSliceTheoremEntry.setField(StandardField.KEYWORDS, \"Mathematics - Differential Geometry, Mathematical Physics, 58B25, (58D19, 58B20, 22E99, 58A35)\");\n-        diezSliceTheoremEntry.setField(StandardField.MONTH, \"Dec\");\n+        diezSliceTheoremEntry.setMonth(Month.DECEMBER);", "originalCommit": "5418f526664005f69e576ca8dee85ee8b3a720d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODQ3Ng==", "url": "https://github.com/JabRef/jabref/pull/6022#discussion_r386138476", "bodyText": "I would have argued for semantical equivalence of the returned BibTeX - not for syntactical equivalence.", "author": "koppor", "createdAt": "2020-03-01T20:35:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzNzA2NA=="}], "type": "inlineReview", "revised_code": {"commit": "2f178b12a1ff552e98867b4026bd95b9a00f9ed1", "chunk": "diff --git a/src/test/java/org/jabref/logic/importer/fetcher/AstrophysicsDataSystemTest.java b/src/test/java/org/jabref/logic/importer/fetcher/AstrophysicsDataSystemTest.java\nindex ea1fd2d66..78e99bf78 100644\n--- a/src/test/java/org/jabref/logic/importer/fetcher/AstrophysicsDataSystemTest.java\n+++ b/src/test/java/org/jabref/logic/importer/fetcher/AstrophysicsDataSystemTest.java\n\n@@ -43,7 +42,7 @@ public class AstrophysicsDataSystemTest {\n         diezSliceTheoremEntry.setField(StandardField.EPRINT, \"1812.04698\");\n         diezSliceTheoremEntry.setField(StandardField.JOURNAL, \"arXiv e-prints\");\n         diezSliceTheoremEntry.setField(StandardField.KEYWORDS, \"Mathematics - Differential Geometry, Mathematical Physics, 58B25, (58D19, 58B20, 22E99, 58A35)\");\n-        diezSliceTheoremEntry.setMonth(Month.DECEMBER);\n+        diezSliceTheoremEntry.setField(StandardField.MONTH, \"Dec\");\n         diezSliceTheoremEntry.setField(StandardField.PAGES, \"arXiv:1812.04698\");\n         diezSliceTheoremEntry.setField(StandardField.EID, \"arXiv:1812.04698\");\n         diezSliceTheoremEntry.setField(StandardField.PRIMARYCLASS, \"math.DG\");\n"}}, {"oid": "2f178b12a1ff552e98867b4026bd95b9a00f9ed1", "url": "https://github.com/JabRef/jabref/commit/2f178b12a1ff552e98867b4026bd95b9a00f9ed1", "message": "Use Collections.emptyList instead of new ArrayList", "committedDate": "2020-03-01T20:39:49Z", "type": "commit"}, {"oid": "d0f0d2261c109816bbde326ff44f0ef96348bacc", "url": "https://github.com/JabRef/jabref/commit/d0f0d2261c109816bbde326ff44f0ef96348bacc", "message": "Add comment on \"toString()\" (and format other comments", "committedDate": "2020-03-01T20:39:53Z", "type": "commit"}, {"oid": "b2d560b83a11d640847e5fe6c64333c16a6ee366", "url": "https://github.com/JabRef/jabref/commit/b2d560b83a11d640847e5fe6c64333c16a6ee366", "message": "Add addtional tests", "committedDate": "2020-03-01T20:39:53Z", "type": "commit"}, {"oid": "b2d560b83a11d640847e5fe6c64333c16a6ee366", "url": "https://github.com/JabRef/jabref/commit/b2d560b83a11d640847e5fe6c64333c16a6ee366", "message": "Add addtional tests", "committedDate": "2020-03-01T20:39:53Z", "type": "forcePushed"}]}