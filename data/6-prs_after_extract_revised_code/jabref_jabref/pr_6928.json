{"pr_number": 6928, "pr_title": "Changed default value of \"search and store files relative to bibtex file\" to true", "pr_createdAt": "2020-09-21T08:38:29Z", "pr_url": "https://github.com/JabRef/jabref/pull/6928", "timeline": [{"oid": "bf784456d6ef73ccfadf12d3fcc13efc04d38ef1", "url": "https://github.com/JabRef/jabref/commit/bf784456d6ef73ccfadf12d3fcc13efc04d38ef1", "message": "Fixes #6863", "committedDate": "2020-09-21T08:15:38Z", "type": "commit"}, {"oid": "cd01dc5dcb48e3dc5dd0b58311db082fa9e9cb61", "url": "https://github.com/JabRef/jabref/commit/cd01dc5dcb48e3dc5dd0b58311db082fa9e9cb61", "message": "CHANGELOG.md", "committedDate": "2020-09-21T08:36:16Z", "type": "commit"}, {"oid": "87caea85de935515fd3b522d54f454e47a9a23be", "url": "https://github.com/JabRef/jabref/commit/87caea85de935515fd3b522d54f454e47a9a23be", "message": "Reworded bibLocationAsPrimary to reflect real meaning of the preference setting, changed default val to true", "committedDate": "2020-09-23T20:01:34Z", "type": "commit"}, {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05", "url": "https://github.com/JabRef/jabref/commit/a32e679676898b4e8dc1639dc431b920a64c4d05", "message": "Cleanup of deprecated methods LinkedFiles(String, String, String) and List<String> getFileDirectories(...)", "committedDate": "2020-09-23T21:59:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw==", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r494138813", "bodyText": "Be careful! This can have unintended consequences, a Linked File \"link\" can also be an online link!", "author": "Siedlerchr", "createdAt": "2020-09-24T08:38:04Z", "path": "src/main/java/org/jabref/gui/filelist/FileListEntry.java", "diffHunk": "@@ -48,7 +49,7 @@ public String toString() {\n     }\n \n     public LinkedFile toParsedFileField() {\n-        return new LinkedFile(getDescription(), getLink(), getType().isPresent() ? getType().get().getName() : \"\");\n+        return new LinkedFile(getDescription(), Path.of(getLink()), getType().isPresent() ? getType().get().getName() : \"\");", "originalCommit": "a32e679676898b4e8dc1639dc431b920a64c4d05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMTAxMg==", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495121012", "bodyText": "I just noticed that this class isn't used anywhere, so I just delete it. \ud83e\udd23", "author": "calixtus", "createdAt": "2020-09-25T17:06:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTU5NQ==", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495135595", "bodyText": "Probably a leftover from previous refactoring...", "author": "Siedlerchr", "createdAt": "2020-09-25T17:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "696f884a5b27a1c92cc0c6ed065a306a9ded36b4", "chunk": "diff --git a/src/main/java/org/jabref/gui/filelist/FileListEntry.java b/src/main/java/org/jabref/gui/filelist/FileListEntry.java\ndeleted file mode 100644\nindex 398623637..000000000\n--- a/src/main/java/org/jabref/gui/filelist/FileListEntry.java\n+++ /dev/null\n\n@@ -1,78 +0,0 @@\n-package org.jabref.gui.filelist;\n-\n-import java.nio.file.Path;\n-import java.util.Objects;\n-import java.util.Optional;\n-\n-import org.jabref.gui.externalfiletype.ExternalFileType;\n-import org.jabref.model.entry.LinkedFile;\n-\n-/**\n- * This class represents a file link for a Bibtex entry.\n- */\n-\n-public class FileListEntry {\n-\n-    private String description;\n-\n-    private String link;\n-\n-    private Optional<ExternalFileType> type;\n-\n-    public FileListEntry(String description, String link) {\n-        this(description, link, Optional.empty());\n-    }\n-\n-    public FileListEntry(String description, String link, ExternalFileType type) {\n-        this.setDescription(Objects.requireNonNull(description));\n-        this.setLink(Objects.requireNonNull(link));\n-        this.setType(Optional.of(Objects.requireNonNull(type)));\n-    }\n-\n-    public FileListEntry(String description, String link, Optional<ExternalFileType> type) {\n-        this.setDescription(Objects.requireNonNull(description));\n-        this.setLink(Objects.requireNonNull(link));\n-        this.setType(Objects.requireNonNull(type));\n-    }\n-\n-    public String[] getStringArrayRepresentation() {\n-        return new String[] {getDescription(), getLink(), getTypeName()};\n-    }\n-\n-    private String getTypeName() {\n-        return this.getType().isPresent() ? this.getType().get().getName() : \"\";\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return getDescription() + \" : \" + getLink() + \" : \" + getType().orElse(null);\n-    }\n-\n-    public LinkedFile toParsedFileField() {\n-        return new LinkedFile(getDescription(), Path.of(getLink()), getType().isPresent() ? getType().get().getName() : \"\");\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n-\n-    public String getLink() {\n-        return link;\n-    }\n-\n-    public void setLink(String link) {\n-        this.link = link;\n-    }\n-\n-    public Optional<ExternalFileType> getType() {\n-        return type;\n-    }\n-\n-    public void setType(Optional<ExternalFileType> type) {\n-        this.type = type;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE0MTM4MQ==", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r494141381", "bodyText": "I doubt this change will work. You are trying to resolve a http url as local path object.\n\nThe Path is obtained by invoking the getPath method of the default FileSystem.\nhttps://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/nio/file/Path.html#of(java.lang.String,java.lang.String...)", "author": "Siedlerchr", "createdAt": "2020-09-24T08:41:10Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java", "diffHunk": "@@ -118,7 +119,7 @@ public static BibEntry parseSpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n                 urls.forEach(data -> {\n                     JSONObject url = (JSONObject) data;\n                     if (url.optString(\"format\").equalsIgnoreCase(\"pdf\")) {\n-                        entry.addFile(new LinkedFile(\"online\", url.optString(\"value\"), \"PDF\"));\n+                        entry.addFile(new LinkedFile(\"online\", Path.of(url.optString(\"value\")), \"PDF\"));", "originalCommit": "a32e679676898b4e8dc1639dc431b920a64c4d05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMTg5Ng==", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495131896", "bodyText": "Should be fixed.", "author": "calixtus", "createdAt": "2020-09-25T17:28:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE0MTM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1924c6ffa98835e2ed4bf04c5978641f85be8adb", "chunk": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java b/src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java\nindex be7a0082a..2b15fd4eb 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java\n\n@@ -119,7 +117,11 @@ public class SpringerFetcher implements SearchBasedParserFetcher {\n                 urls.forEach(data -> {\n                     JSONObject url = (JSONObject) data;\n                     if (url.optString(\"format\").equalsIgnoreCase(\"pdf\")) {\n-                        entry.addFile(new LinkedFile(\"online\", Path.of(url.optString(\"value\")), \"PDF\"));\n+                        try {\n+                            entry.addFile(new LinkedFile(new URL(url.optString(\"value\")), \"PDF\"));\n+                        } catch (MalformedURLException e) {\n+                            LOGGER.info(\"Malformed URL: {}\", url.optString(\"value\"));\n+                        }\n                     }\n                 });\n             }\n"}}, {"oid": "696f884a5b27a1c92cc0c6ed065a306a9ded36b4", "url": "https://github.com/JabRef/jabref/commit/696f884a5b27a1c92cc0c6ed065a306a9ded36b4", "message": "Reworded package filelist to linkedfile", "committedDate": "2020-09-25T17:18:47Z", "type": "commit"}, {"oid": "1924c6ffa98835e2ed4bf04c5978641f85be8adb", "url": "https://github.com/JabRef/jabref/commit/1924c6ffa98835e2ed4bf04c5978641f85be8adb", "message": "Fixed SpringerFetcher", "committedDate": "2020-09-25T17:27:33Z", "type": "commit"}]}