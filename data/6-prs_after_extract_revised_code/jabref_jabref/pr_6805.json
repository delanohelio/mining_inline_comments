{"pr_number": 6805, "pr_title": "Feature/add ui for query parsing", "pr_createdAt": "2020-08-28T14:39:44Z", "pr_url": "https://github.com/JabRef/jabref/pull/6805", "timeline": [{"oid": "e3075dc48bdc760ac27cdc1eb1862fdd73b868c4", "url": "https://github.com/JabRef/jabref/commit/e3075dc48bdc760ac27cdc1eb1862fdd73b868c4", "message": "Squash into one commit\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-08-31T11:53:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0MDk4NQ==", "url": "https://github.com/JabRef/jabref/pull/6805#discussion_r480440985", "bodyText": "Pseudo-classes could be used instead of hardcoding the colors here. See gui/util/ViewModelListCellFactory", "author": "calixtus", "createdAt": "2020-08-31T22:37:24Z", "path": "src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java", "diffHunk": "@@ -91,13 +104,40 @@ public void search() {\n \n         SearchBasedFetcher activeFetcher = getSelectedFetcher();\n \n-        BackgroundTask<ParserResult> task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performSearch(getQuery().trim())))\n-                                                          .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n-\n+        BackgroundTask<ParserResult> task;\n+        QueryParser queryParser = new QueryParser();\n+        Optional<ComplexSearchQuery> generatedQuery = queryParser.parseQueryStringIntoComplexQuery(getQuery());\n+        if (generatedQuery.isPresent()) {\n+            task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performComplexSearch(generatedQuery.get())))\n+                                 .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n+        } else {\n+            task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performSearch(getQuery().trim())))\n+                                 .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n+        }\n         task.onFailure(dialogService::showErrorDialogAndWait);\n \n         ImportEntriesDialog dialog = new ImportEntriesDialog(frame.getCurrentBasePanel().getBibDatabaseContext(), task);\n         dialog.setTitle(activeFetcher.getName());\n         dialog.showAndWait();\n     }\n+\n+    public void validateQueryStringAndGiveColorFeedback(TextField querySource, String queryString) {\n+        Matcher queryValidation = queryPattern.matcher(queryString.strip());\n+        if (queryValidation.matches()) {\n+            if (containsYearAndYearRange(queryString)) {\n+                querySource.setStyle(\"-fx-background-color: rgba(240, 128, 128, 0.5);\");", "originalCommit": "0f8b79a0b039ea01722258c8c6be42ee253f256f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebcb7dc7adb59cd7357c73be05974745d7b0eca9", "chunk": "diff --git a/src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java b/src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java\nindex d426a8a04..a93c3da7e 100644\n--- a/src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java\n+++ b/src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java\n\n@@ -125,18 +126,28 @@ public class WebSearchPaneViewModel {\n         Matcher queryValidation = queryPattern.matcher(queryString.strip());\n         if (queryValidation.matches()) {\n             if (containsYearAndYearRange(queryString)) {\n-                querySource.setStyle(\"-fx-background-color: rgba(240, 128, 128, 0.5);\");\n+                setPseudoClassToInvalid(querySource);\n                 querySource.setTooltip(new Tooltip(Localization.lang(\"The query cannot contain a year and year-range field.\")));\n             } else {\n-                querySource.setStyle(\"-fx-background-color: rgba(50, 205, 50, 0.5);\");\n+                setPseudoClassToValid(querySource);\n                 querySource.setTooltip(new Tooltip(Localization.lang(\"This search contains entries that match all specified terms.\")));\n             }\n         } else {\n-            querySource.setStyle(\"-fx-background-color: rgba(240, 128, 128, 0.5);\");\n+            setPseudoClassToInvalid(querySource);\n             querySource.setTooltip(new Tooltip(Localization.lang(\"This query uses an unsupported syntax.\")));\n         }\n     }\n \n+    private void setPseudoClassToValid(TextField querySource) {\n+        querySource.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"invalid\"), false);\n+        querySource.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"valid\"), true);\n+    }\n+\n+    private void setPseudoClassToInvalid(TextField querySource) {\n+        querySource.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"invalid\"), true);\n+        querySource.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"valid\"), false);\n+    }\n+\n     private boolean containsYearAndYearRange(String queryString) {\n         return queryString.toLowerCase().contains(\"year:\") && queryString.toLowerCase().contains(\"year-range:\");\n     }\n"}}, {"oid": "ebcb7dc7adb59cd7357c73be05974745d7b0eca9", "url": "https://github.com/JabRef/jabref/commit/ebcb7dc7adb59cd7357c73be05974745d7b0eca9", "message": "Add query syntax validity feedback to UI\nMake QueryParser handle query parsing issues more robust\nMake default implementation of performComplexSearch include all fields\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-09-01T10:39:40Z", "type": "commit"}, {"oid": "ebcb7dc7adb59cd7357c73be05974745d7b0eca9", "url": "https://github.com/JabRef/jabref/commit/ebcb7dc7adb59cd7357c73be05974745d7b0eca9", "message": "Add query syntax validity feedback to UI\nMake QueryParser handle query parsing issues more robust\nMake default implementation of performComplexSearch include all fields\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-09-01T10:39:40Z", "type": "forcePushed"}, {"oid": "6fd39c7ccfffa8d55794c3256bc309be4a41bb70", "url": "https://github.com/JabRef/jabref/commit/6fd39c7ccfffa8d55794c3256bc309be4a41bb70", "message": "Make UI use advanced formation\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-09-01T15:56:36Z", "type": "commit"}]}