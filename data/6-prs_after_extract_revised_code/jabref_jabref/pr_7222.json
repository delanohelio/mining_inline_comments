{"pr_number": 7222, "pr_title": "Output java error on console, too", "pr_createdAt": "2020-12-21T18:58:03Z", "pr_url": "https://github.com/JabRef/jabref/pull/7222", "timeline": [{"oid": "5b6f0d89074e1f1cf2082584937df337ea55544b", "url": "https://github.com/JabRef/jabref/commit/5b6f0d89074e1f1cf2082584937df337ea55544b", "message": "Output java error on console, too\n\nCo-authored-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-12-21T18:55:15Z", "type": "commit"}, {"oid": "fd80c30561b95d880912c33bec789a537f46e279", "url": "https://github.com/JabRef/jabref/commit/fd80c30561b95d880912c33bec789a537f46e279", "message": "Use LOGGER instead of System.err\n\nCo-authored-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-12-21T18:56:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4MDQ3Ng==", "url": "https://github.com/JabRef/jabref/pull/7222#discussion_r546880476", "bodyText": "The whole method can be removed. It's useless anyway.", "author": "Siedlerchr", "createdAt": "2020-12-21T19:10:21Z", "path": "src/main/java/org/jabref/gui/JabRefMain.java", "diffHunk": "@@ -127,6 +127,8 @@ private static void ensureCorrectJavaVersion() {\n                 versionError.append(Localization.lang(\"Note that currently, JabRef does not run with Java 9.\"));\n             }\n \n+            LOGGER.error(versionError.toString());", "originalCommit": "fd80c30561b95d880912c33bec789a537f46e279", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "425e32e98a2e670f0ddf0ea648dc2dd11aea677a", "chunk": "diff --git a/src/main/java/org/jabref/gui/JabRefMain.java b/src/main/java/org/jabref/gui/JabRefMain.java\nindex 8b95e150f3..ae0a6acbf9 100644\n--- a/src/main/java/org/jabref/gui/JabRefMain.java\n+++ b/src/main/java/org/jabref/gui/JabRefMain.java\n\n@@ -93,53 +88,6 @@ public class JabRefMain extends Application {\n         Globals.shutdownThreadPools();\n     }\n \n-    /**\n-     * Tests if we are running an acceptable Java and terminates JabRef when we are sure the version is not supported.\n-     * This test uses the requirements for the Java version as specified in <code>gradle.build</code>. It is possible to\n-     * define a minimum version including the built number and to indicate whether Java 9 can be used (which it currently\n-     * can't). It tries to compare this version number to the version of the currently running JVM. The check is\n-     * optimistic and will rather return true even if we could not exactly determine the version.\n-     * <p>\n-     * Note: Users with a very old version like 1.6 will not profit from this since class versions are incompatible and\n-     * JabRef won't even start. Currently, JabRef won't start with Java 9 either, but the warning that it cannot be used\n-     * with this version is helpful anyway to prevent users to update from an old 1.8 directly to version 9. Additionally,\n-     * we soon might have a JabRef that does start with Java 9 but is not perfectly compatible. Therefore, we should leave\n-     * the Java 9 check alive.\n-     */\n-    private static void ensureCorrectJavaVersion() {\n-        // Check if we are running an acceptable version of Java\n-        final BuildInfo buildInfo = Globals.BUILD_INFO;\n-        JavaVersion checker = new JavaVersion();\n-        final boolean java9Fail = !buildInfo.allowJava9 && checker.isJava9();\n-        final boolean versionFail = !checker.isAtLeast(buildInfo.minRequiredJavaVersion);\n-\n-        if (java9Fail || versionFail) {\n-            StringBuilder versionError = new StringBuilder(\n-                    Localization.lang(\"Your current Java version (%0) is not supported. Please install version %1 or higher.\",\n-                            checker.getJavaVersion(),\n-                            buildInfo.minRequiredJavaVersion));\n-\n-            versionError.append(\"\\n\");\n-            versionError.append(Localization.lang(\"Your Java Runtime Environment is located at %0.\", checker.getJavaInstallationDirectory()));\n-\n-            if (!buildInfo.allowJava9) {\n-                versionError.append(\"\\n\");\n-                versionError.append(Localization.lang(\"Note that currently, JabRef does not run with Java 9.\"));\n-            }\n-\n-            LOGGER.error(versionError.toString());\n-\n-            FXDialog alert = new FXDialog(Alert.AlertType.ERROR, Localization.lang(\"Error\"), true);\n-            alert.setHeaderText(null);\n-            alert.setContentText(versionError.toString());\n-\n-            // We exit on Java 9 error since this will definitely not work\n-            if (java9Fail) {\n-                System.exit(0);\n-            }\n-        }\n-    }\n-\n     private static boolean handleMultipleAppInstances(String[] args) {\n         RemotePreferences remotePreferences = Globals.prefs.getRemotePreferences();\n         if (remotePreferences.useRemoteServer()) {\n"}}, {"oid": "425e32e98a2e670f0ddf0ea648dc2dd11aea677a", "url": "https://github.com/JabRef/jabref/commit/425e32e98a2e670f0ddf0ea648dc2dd11aea677a", "message": "remove check", "committedDate": "2020-12-21T19:48:56Z", "type": "commit"}, {"oid": "84da783b5b7ef8ecefa6d7a68636988c11fd1cbf", "url": "https://github.com/JabRef/jabref/commit/84da783b5b7ef8ecefa6d7a68636988c11fd1cbf", "message": "remove properties no longer needed", "committedDate": "2020-12-21T20:13:06Z", "type": "commit"}, {"oid": "90512df271cc7bcd0cedba52d862b07b7d507929", "url": "https://github.com/JabRef/jabref/commit/90512df271cc7bcd0cedba52d862b07b7d507929", "message": "remove from gradle", "committedDate": "2020-12-21T20:28:10Z", "type": "commit"}, {"oid": "e672352eca873ada8ba8419807d4fe9cb2c03607", "url": "https://github.com/JabRef/jabref/commit/e672352eca873ada8ba8419807d4fe9cb2c03607", "message": "fix l10n", "committedDate": "2020-12-21T20:36:36Z", "type": "commit"}]}