{"pr_number": 7037, "pr_title": "Add awt native open commands", "pr_createdAt": "2020-10-23T14:53:14Z", "pr_url": "https://github.com/JabRef/jabref/pull/7037", "timeline": [{"oid": "4f923ccde50e70151d4ee75675ae34650c3bd0b2", "url": "https://github.com/JabRef/jabref/commit/4f923ccde50e70151d4ee75675ae34650c3bd0b2", "message": "Add awt native open commands", "committedDate": "2020-10-23T14:46:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0NzUwNQ==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511047505", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.error(\"Open operation not successful: \" + e.getMessage());\n          \n          \n            \n                                LOGGER.error(\"Open operation not successful\", e);\n          \n      \n    \n    \n  \n\nLogger error has an overload which directly accepts an throwable/eception", "author": "Siedlerchr", "createdAt": "2020-10-23T17:54:43Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -20,23 +21,39 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        if (Desktop.isDesktopSupported()) {\n+            new Thread(() -> {\n+                try {\n+                    File file = new File(filePath);\n+                    Desktop.getDesktop().open(file);\n+                    LOGGER.info(\"Opened file with Desktop integration\");\n+                } catch (Exception e) {\n+                    LOGGER.error(\"Open operation not successful: \" + e.getMessage());", "originalCommit": "4f923ccde50e70151d4ee75675ae34650c3bd0b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8fbc3a897e878042e97ee6bb7933c2eb13a5a49d", "chunk": "diff --git a/src/main/java/org/jabref/gui/desktop/os/Linux.java b/src/main/java/org/jabref/gui/desktop/os/Linux.java\nindex 8a1b48a75..4c15cd2cd 100644\n--- a/src/main/java/org/jabref/gui/desktop/os/Linux.java\n+++ b/src/main/java/org/jabref/gui/desktop/os/Linux.java\n\n@@ -21,20 +24,25 @@ public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    @AllowedToUseAwt(\"\")\n     private void nativeOpenFile(String filePath) {\n-        if (Desktop.isDesktopSupported()) {\n-            new Thread(() -> {\n+        SwingUtilities.invokeLater(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n                 try {\n-                    File file = new File(filePath);\n-                    Desktop.getDesktop().open(file);\n-                    LOGGER.info(\"Opened file with Desktop integration\");\n-                } catch (Exception e) {\n-                    LOGGER.error(\"Open operation not successful: \" + e.getMessage());\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n                 }\n-            }).start();\n-        } else {\n-            LOGGER.error(\"No operation possible\");\n-        }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"oid": "8fbc3a897e878042e97ee6bb7933c2eb13a5a49d", "url": "https://github.com/JabRef/jabref/commit/8fbc3a897e878042e97ee6bb7933c2eb13a5a49d", "message": "Revert to xdg-open if the native awt operation fails.\n\nThis is used in the confined linux packages to open URLs", "committedDate": "2020-10-25T13:11:47Z", "type": "commit"}, {"oid": "b8afcfd8b859eee29aafd7784769016a22a5ad8c", "url": "https://github.com/JabRef/jabref/commit/b8afcfd8b859eee29aafd7784769016a22a5ad8c", "message": "Fix AllowedToUseAwt annotation use", "committedDate": "2020-10-25T14:51:24Z", "type": "commit"}, {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0", "url": "https://github.com/JabRef/jabref/commit/41a4936ac60a2f406f14c6eba3bc16d298fa0be0", "message": "Use Thread to avoid swing dependency", "committedDate": "2020-10-25T14:58:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622472", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new Thread(() -> {\n          \n          \n            \n                    JabRefExecutorService.INSTANCE.execute(() -> {", "author": "Siedlerchr", "createdAt": "2020-10-25T17:01:30Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {", "originalCommit": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjY5Mw==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622693", "bodyText": "This wouldn't close the PDF right?", "author": "LyzardKing", "createdAt": "2020-10-25T17:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMzEzOQ==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511623139", "bodyText": "No, the behaviour should be the same, it's just that it's using a Thraed from the Threadpool instead of a new one.", "author": "Siedlerchr", "createdAt": "2020-10-25T17:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7682bb2b0815c512081a509f36cab37c2447615a", "chunk": "diff --git a/src/main/java/org/jabref/gui/desktop/os/Linux.java b/src/main/java/org/jabref/gui/desktop/os/Linux.java\nindex e1cb32131..e4a73faa1 100644\n--- a/src/main/java/org/jabref/gui/desktop/os/Linux.java\n+++ b/src/main/java/org/jabref/gui/desktop/os/Linux.java\n\n@@ -24,7 +24,7 @@ public class Linux implements NativeDesktop {\n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n     private void nativeOpenFile(String filePath) {\n-        new Thread(() -> {\n+        JabRefExecutorService.INSTANCE.execute(() -> {\n             try {\n                 File file = new File(filePath);\n                 Desktop.getDesktop().open(file);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ5Ng==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622496", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }).start();\n          \n          \n            \n                    });", "author": "Siedlerchr", "createdAt": "2020-10-25T17:01:41Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n+                try {\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n+                }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        }).start();", "originalCommit": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7682bb2b0815c512081a509f36cab37c2447615a", "chunk": "diff --git a/src/main/java/org/jabref/gui/desktop/os/Linux.java b/src/main/java/org/jabref/gui/desktop/os/Linux.java\nindex e1cb32131..e4a73faa1 100644\n--- a/src/main/java/org/jabref/gui/desktop/os/Linux.java\n+++ b/src/main/java/org/jabref/gui/desktop/os/Linux.java\n\n@@ -24,7 +24,7 @@ public class Linux implements NativeDesktop {\n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n     private void nativeOpenFile(String filePath) {\n-        new Thread(() -> {\n+        JabRefExecutorService.INSTANCE.execute(() -> {\n             try {\n                 File file = new File(filePath);\n                 Desktop.getDesktop().open(file);\n"}}, {"oid": "7682bb2b0815c512081a509f36cab37c2447615a", "url": "https://github.com/JabRef/jabref/commit/7682bb2b0815c512081a509f36cab37c2447615a", "message": "Use JabRefExecutorService to open files in Linux", "committedDate": "2020-10-25T17:35:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNTY1NA==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511625654", "bodyText": "@Siedlerchr\nCan we not remove this part and replace it with\nRuntime.getRuntime().exec?\nThe code would be a lot cleaner..both here and in the openFileWithApplication methods..", "author": "LyzardKing", "createdAt": "2020-10-25T17:31:15Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n+                try {\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n+                }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        }).start();\n+    }\n+\n     @Override\n     public void openFile(String filePath, String fileType) throws IOException {\n         Optional<ExternalFileType> type = ExternalFileTypes.getInstance().getExternalFileTypeByExt(fileType);\n         String viewer;\n \n         if (type.isPresent() && !type.get().getOpenWithApplication().isEmpty()) {\n             viewer = type.get().getOpenWithApplication();\n+            ProcessBuilder processBuilder = new ProcessBuilder(viewer, filePath);", "originalCommit": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNzI1Mg==", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511627252", "bodyText": "This method is used when you have defined a specific app in JabRef (Manage external file types in the Settings dialog -> External programs)\nAt least we need this StreamGobblers which read the input and error streams, otherwise it could lead to hanging\nhttps://www.infoworld.com/article/2071275/when-runtime-exec---won-t.html", "author": "Siedlerchr", "createdAt": "2020-10-25T17:46:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNTY1NA=="}], "type": "inlineReview", "revised_code": {"commit": "7682bb2b0815c512081a509f36cab37c2447615a", "chunk": "diff --git a/src/main/java/org/jabref/gui/desktop/os/Linux.java b/src/main/java/org/jabref/gui/desktop/os/Linux.java\nindex e1cb32131..e4a73faa1 100644\n--- a/src/main/java/org/jabref/gui/desktop/os/Linux.java\n+++ b/src/main/java/org/jabref/gui/desktop/os/Linux.java\n\n@@ -24,7 +24,7 @@ public class Linux implements NativeDesktop {\n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n     private void nativeOpenFile(String filePath) {\n-        new Thread(() -> {\n+        JabRefExecutorService.INSTANCE.execute(() -> {\n             try {\n                 File file = new File(filePath);\n                 Desktop.getDesktop().open(file);\n"}}, {"oid": "fa5bd5a3fa9b5a0569e495c829b91b48434bd43c", "url": "https://github.com/JabRef/jabref/commit/fa5bd5a3fa9b5a0569e495c829b91b48434bd43c", "message": "Add line in changelog", "committedDate": "2020-10-26T21:11:07Z", "type": "commit"}]}