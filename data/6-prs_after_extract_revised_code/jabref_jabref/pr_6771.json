{"pr_number": 6771, "pr_title": "Shared database synchronized by FocusChangedEvent", "pr_createdAt": "2020-08-19T17:49:54Z", "pr_url": "https://github.com/JabRef/jabref/pull/6771", "timeline": [{"oid": "87adec3b09a9f65f37dae13b842069e3c7af29cd", "url": "https://github.com/JabRef/jabref/commit/87adec3b09a9f65f37dae13b842069e3c7af29cd", "message": "Added FocusChangedEvent, fired in BibEntry when setFocusedField is called. Focus is changed in EntryEditor.\nCoarseChangeFilter with no special function -> does not work with shared databases.", "committedDate": "2020-08-19T12:18:18Z", "type": "commit"}, {"oid": "0c895c166bfaa19d0f3ef00fc459eb6728523f03", "url": "https://github.com/JabRef/jabref/commit/0c895c166bfaa19d0f3ef00fc459eb6728523f03", "message": "Uncomment FieldChangedEvent listener.", "committedDate": "2020-08-19T14:05:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEyMTA2NQ==", "url": "https://github.com/JabRef/jabref/pull/6771#discussion_r475121065", "bodyText": "I think the problem is that you are listening to an Event from the EventBus which is nowhere fired", "author": "Siedlerchr", "createdAt": "2020-08-22T19:08:24Z", "path": "src/main/java/org/jabref/logic/shared/DBMSSynchronizer.java", "diffHunk": "@@ -136,6 +137,23 @@ public void listen(MetaDataChangedEvent event) {\n         }\n     }\n \n+    /**\n+     * Listening method. Updates an existing shared {@link BibEntry} by focus request.\n+     *\n+     * @param event {@link FocusChangedEvent} object\n+     */\n+    @Subscribe\n+    public void listen(FocusChangedEvent event) {", "originalCommit": "0c895c166bfaa19d0f3ef00fc459eb6728523f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c53ed5675c6da19aff7934a8b651153ea12b0a2f", "chunk": "diff --git a/src/main/java/org/jabref/logic/shared/DBMSSynchronizer.java b/src/main/java/org/jabref/logic/shared/DBMSSynchronizer.java\nindex ca8b1cc39f..d46925ec5a 100644\n--- a/src/main/java/org/jabref/logic/shared/DBMSSynchronizer.java\n+++ b/src/main/java/org/jabref/logic/shared/DBMSSynchronizer.java\n\n@@ -137,23 +136,6 @@ public class DBMSSynchronizer implements DatabaseSynchronizer {\n         }\n     }\n \n-    /**\n-     * Listening method. Updates an existing shared {@link BibEntry} by focus request.\n-     *\n-     * @param event {@link FocusChangedEvent} object\n-     */\n-    @Subscribe\n-    public void listen(FocusChangedEvent event) {\n-        // While synchronizing the local database (see synchronizeLocalDatabase() below), some EntriesEvents may be posted.\n-        // In this case DBSynchronizer should not try to update the bibEntry entry again (but it would not harm).\n-        if (isPresentLocalBibEntry(event.getBibEntry()) && isEventSourceAccepted(event) && checkCurrentConnection()) {\n-            synchronizeLocalMetaData();\n-            BibEntry bibEntry = event.getBibEntry();\n-            synchronizeSharedEntry(bibEntry);\n-            synchronizeLocalDatabase(); // Pull changes for the case that there were some\n-        }\n-    }\n-\n     /**\n      * Sets the table structure of shared database if needed and pulls all shared entries to the new local database.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEyMTEyOA==", "url": "https://github.com/JabRef/jabref/pull/6771#discussion_r475121128", "bodyText": "See the eventBus.post method, the eventBus post method is reposinsible for firing the event.", "author": "Siedlerchr", "createdAt": "2020-08-22T19:09:10Z", "path": "src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java", "diffHunk": "@@ -31,8 +31,10 @@ public synchronized void listen(@SuppressWarnings(\"unused\") BibDatabaseContextCh\n             // Only relay event if the field changes are more than one character or a new field is edited\n             FieldChangedEvent fieldChange = (FieldChangedEvent) event;\n             boolean isEditOnNewField = lastFieldChanged == null || !lastFieldChanged.equals(fieldChange.getField());\n+            // Only deltas of 1 registered by fieldChange\n+            boolean isMajorChange = fieldChange.getDelta() >= 1;\n \n-            if (fieldChange.getDelta() > 1 || isEditOnNewField) {\n+            if (isEditOnNewField) {\n                 lastFieldChanged = fieldChange.getField();", "originalCommit": "0c895c166bfaa19d0f3ef00fc459eb6728523f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c53ed5675c6da19aff7934a8b651153ea12b0a2f", "chunk": "diff --git a/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java b/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java\nindex 708d60c625..8e2903817c 100644\n--- a/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java\n+++ b/src/main/java/org/jabref/model/database/event/CoarseChangeFilter.java\n\n@@ -12,32 +14,59 @@ import com.google.common.eventbus.Subscribe;\n  */\n public class CoarseChangeFilter {\n \n+    private final BibDatabaseContext context;\n     private final EventBus eventBus = new EventBus();\n+    private final DelayTaskThrottler delayPost;\n+\n     private Field lastFieldChanged;\n-    private final BibDatabaseContext context;\n+    private int totalDelta;\n \n     public CoarseChangeFilter(BibDatabaseContext bibDatabaseContext) {\n         // Listen for change events\n         bibDatabaseContext.getDatabase().registerListener(this);\n         bibDatabaseContext.getMetaData().registerListener(this);\n         this.context = bibDatabaseContext;\n+        // Delay event post by 5 seconds\n+        this.delayPost = new DelayTaskThrottler(5000);\n+        // 'null' throws NullPointerException\n+        this.lastFieldChanged = new UnknownField(\"unknownField\");\n+        this.totalDelta = 0;\n     }\n \n     @Subscribe\n     public synchronized void listen(@SuppressWarnings(\"unused\") BibDatabaseContextChangedEvent event) {\n-        if (!(event instanceof FieldChangedEvent)) {\n+        Runnable eventPost = () -> {\n+            // Reset total change delta\n+            totalDelta = 0;\n+            // Post event\n             eventBus.post(event);\n+        };\n+\n+        if (!(event instanceof FieldChangedEvent)) {\n+            eventPost.run();\n         } else {\n             // Only relay event if the field changes are more than one character or a new field is edited\n             FieldChangedEvent fieldChange = (FieldChangedEvent) event;\n-            boolean isEditOnNewField = lastFieldChanged == null || !lastFieldChanged.equals(fieldChange.getField());\n-            // Only deltas of 1 registered by fieldChange\n-            boolean isMajorChange = fieldChange.getDelta() >= 1;\n+            // Sum up change delta\n+            totalDelta += fieldChange.getDelta();\n+\n+            // If editing is started\n+            boolean isNewEdit = lastFieldChanged.getName().equals(\"unknownField\");\n+            // If other field is edited\n+            boolean isEditOnOtherField = !lastFieldChanged.equals(fieldChange.getField());\n+            // Only deltas of 1 registered by fieldChange, major change means editing much content\n+            boolean isMajorChange = totalDelta >= 100;\n \n-            if (isEditOnNewField) {\n-                lastFieldChanged = fieldChange.getField();\n-                eventBus.post(event);\n+            if (isEditOnOtherField && !isNewEdit) {\n+                // Submit old changes immediately\n+                eventPost.run();\n+            } else {\n+                if (isNewEdit || isMajorChange) {\n+                    delayPost.schedule(eventPost);\n+                }\n             }\n+            // Set new last field\n+            lastFieldChanged = fieldChange.getField();\n         }\n     }\n \n"}}, {"oid": "c53ed5675c6da19aff7934a8b651153ea12b0a2f", "url": "https://github.com/JabRef/jabref/commit/c53ed5675c6da19aff7934a8b651153ea12b0a2f", "message": "Removed FocusChangedEvent.java due to improper dependencies.\nIntroduced DelayTaskThrottler on CoarseChangeFilter.", "committedDate": "2020-08-25T07:23:23Z", "type": "commit"}, {"oid": "079f913eb1dbbd8bd9533f67a63f2e05125f2fb1", "url": "https://github.com/JabRef/jabref/commit/079f913eb1dbbd8bd9533f67a63f2e05125f2fb1", "message": "Delete FocusChangedEvent.java", "committedDate": "2020-08-27T07:14:07Z", "type": "commit"}, {"oid": "a680ecb1a328b68007ff704dd2481ded9143d8dc", "url": "https://github.com/JabRef/jabref/commit/a680ecb1a328b68007ff704dd2481ded9143d8dc", "message": "Update EntryEditor.java", "committedDate": "2020-09-01T16:02:45Z", "type": "commit"}, {"oid": "346d85a3a2f4ab60b024cd0a1623fc733e9a904a", "url": "https://github.com/JabRef/jabref/commit/346d85a3a2f4ab60b024cd0a1623fc733e9a904a", "message": "Update CoarseChangeFilter.java", "committedDate": "2020-09-01T16:07:02Z", "type": "commit"}, {"oid": "2fb31f7fe830fc1dd224e28156a58bf388cd496c", "url": "https://github.com/JabRef/jabref/commit/2fb31f7fe830fc1dd224e28156a58bf388cd496c", "message": "Update CoarseChangeFilter.java", "committedDate": "2020-09-01T16:10:35Z", "type": "commit"}, {"oid": "b76e7f21bd1a9c488d0c4a998d432495e5c834ed", "url": "https://github.com/JabRef/jabref/commit/b76e7f21bd1a9c488d0c4a998d432495e5c834ed", "message": "Update CoarseChangeFilter.java", "committedDate": "2020-09-01T16:15:04Z", "type": "commit"}]}