{"pr_number": 7079, "pr_title": "Feature/add abstract field to complex search", "pr_createdAt": "2020-11-06T20:15:21Z", "pr_url": "https://github.com/JabRef/jabref/pull/7079", "timeline": [{"oid": "08fc9b5d9c5faeee7d0a2cc4d6a654664723657a", "url": "https://github.com/JabRef/jabref/commit/08fc9b5d9c5faeee7d0a2cc4d6a654664723657a", "message": "Add abstract field to complex search\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-10-22T20:11:07Z", "type": "commit"}, {"oid": "bb0d4b6cc5b492b0feadee064464312b5937c595", "url": "https://github.com/JabRef/jabref/commit/bb0d4b6cc5b492b0feadee064464312b5937c595", "message": "Merge remote-tracking branch 'upstream/master' into feature/add-abstract-field-to-complex-search", "committedDate": "2020-11-06T20:07:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAyNzA4Nw==", "url": "https://github.com/JabRef/jabref/pull/7079#discussion_r519027087", "bodyText": "Why not return Objects.hash(defaultField, getAuthors(), ...)?", "author": "koppor", "createdAt": "2020-11-06T22:00:40Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java", "diffHunk": "@@ -118,6 +128,7 @@ public int hashCode() {\n         int result = defaultField != null ? defaultField.hashCode() : 0;\n         result = 31 * result + (getAuthors() != null ? getAuthors().hashCode() : 0);\n         result = 31 * result + (getTitlePhrases() != null ? getTitlePhrases().hashCode() : 0);\n+        result = 31 * result + (getAbstractPhrases() != null ? getTitlePhrases().hashCode() : 0);", "originalCommit": "bb0d4b6cc5b492b0feadee064464312b5937c595", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec96dceaef77483f5c0c7cd691a0f59d7b71021f", "chunk": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java b/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\nindex 682b76dff..750a6d68e 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\n\n@@ -125,29 +126,23 @@ public class ComplexSearchQuery {\n \n     @Override\n     public int hashCode() {\n-        int result = defaultField != null ? defaultField.hashCode() : 0;\n-        result = 31 * result + (getAuthors() != null ? getAuthors().hashCode() : 0);\n-        result = 31 * result + (getTitlePhrases() != null ? getTitlePhrases().hashCode() : 0);\n-        result = 31 * result + (getAbstractPhrases() != null ? getTitlePhrases().hashCode() : 0);\n-        result = 31 * result + (getFromYear().isPresent() ? getFromYear().hashCode() : 0);\n-        result = 31 * result + (getToYear().isPresent() ? getToYear().hashCode() : 0);\n-        result = 31 * result + (getSingleYear().isPresent() ? getSingleYear().hashCode() : 0);\n-        result = 31 * result + (getJournal().isPresent() ? getJournal().hashCode() : 0);\n-        return result;\n+        return Objects.hash(defaultField, getAuthors(), getSingleYear(), getAbstractPhrases(), getFromYear(), getToYear(), getTitlePhrases(), getJournal());\n     }\n \n     @Override\n     public String toString() {\n-        StringBuilder stringRepresentation = new StringBuilder();\n-        getSingleYear().ifPresent(singleYear -> stringRepresentation.append(singleYear).append(\" \"));\n-        getFromYear().ifPresent(fromYear -> stringRepresentation.append(fromYear).append(\" \"));\n-        getToYear().ifPresent(toYear -> stringRepresentation.append(toYear).append(\" \"));\n-        getJournal().ifPresent(journal -> stringRepresentation.append(journal).append(\" \"));\n-        stringRepresentation.append(String.join(\" \", getTitlePhrases()))\n-                            .append(String.join(\" \", getDefaultFieldPhrases()))\n-                            .append(String.join(\" \", getAuthors()))\n-                            .append(String.join(\" \", getAbstractPhrases()));\n-        return stringRepresentation.toString();\n+        StringJoiner stringJoiner = new StringJoiner(\" \");\n+\n+        getSingleYear().ifPresent(singleYear -> stringJoiner.add(singleYear.toString()));\n+        getFromYear().ifPresent(fromYear -> stringJoiner.add(fromYear.toString()));\n+        getToYear().ifPresent(toYear -> stringJoiner.add(toYear.toString()));\n+        getJournal().ifPresent(stringJoiner::add);\n+        stringJoiner.add(String.join(\" \", getTitlePhrases()))\n+                    .add(String.join(\" \", getDefaultFieldPhrases()))\n+                    .add(String.join(\" \", getAuthors()))\n+                    .add(String.join(\" \", getAbstractPhrases()));\n+\n+        return stringJoiner.toString();\n     }\n \n     public static class ComplexSearchQueryBuilder {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAyNzgxNg==", "url": "https://github.com/JabRef/jabref/pull/7079#discussion_r519027816", "bodyText": "While you are on it, please switch to StringJoiner\nStringJoiner stringJoiner = new StringJoiner(\" \");\ngetSingleYear().ifPresent(singleYear -> stringJoiner.append(singleYear));\n...", "author": "koppor", "createdAt": "2020-11-06T22:02:41Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java", "diffHunk": "@@ -134,14 +145,16 @@ public String toString() {\n         getJournal().ifPresent(journal -> stringRepresentation.append(journal).append(\" \"));\n         stringRepresentation.append(String.join(\" \", getTitlePhrases()))\n                             .append(String.join(\" \", getDefaultFieldPhrases()))\n-                            .append(String.join(\" \", getAuthors()));\n+                            .append(String.join(\" \", getAuthors()))", "originalCommit": "bb0d4b6cc5b492b0feadee064464312b5937c595", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec96dceaef77483f5c0c7cd691a0f59d7b71021f", "chunk": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java b/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\nindex 682b76dff..750a6d68e 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/ComplexSearchQuery.java\n\n@@ -125,29 +126,23 @@ public class ComplexSearchQuery {\n \n     @Override\n     public int hashCode() {\n-        int result = defaultField != null ? defaultField.hashCode() : 0;\n-        result = 31 * result + (getAuthors() != null ? getAuthors().hashCode() : 0);\n-        result = 31 * result + (getTitlePhrases() != null ? getTitlePhrases().hashCode() : 0);\n-        result = 31 * result + (getAbstractPhrases() != null ? getTitlePhrases().hashCode() : 0);\n-        result = 31 * result + (getFromYear().isPresent() ? getFromYear().hashCode() : 0);\n-        result = 31 * result + (getToYear().isPresent() ? getToYear().hashCode() : 0);\n-        result = 31 * result + (getSingleYear().isPresent() ? getSingleYear().hashCode() : 0);\n-        result = 31 * result + (getJournal().isPresent() ? getJournal().hashCode() : 0);\n-        return result;\n+        return Objects.hash(defaultField, getAuthors(), getSingleYear(), getAbstractPhrases(), getFromYear(), getToYear(), getTitlePhrases(), getJournal());\n     }\n \n     @Override\n     public String toString() {\n-        StringBuilder stringRepresentation = new StringBuilder();\n-        getSingleYear().ifPresent(singleYear -> stringRepresentation.append(singleYear).append(\" \"));\n-        getFromYear().ifPresent(fromYear -> stringRepresentation.append(fromYear).append(\" \"));\n-        getToYear().ifPresent(toYear -> stringRepresentation.append(toYear).append(\" \"));\n-        getJournal().ifPresent(journal -> stringRepresentation.append(journal).append(\" \"));\n-        stringRepresentation.append(String.join(\" \", getTitlePhrases()))\n-                            .append(String.join(\" \", getDefaultFieldPhrases()))\n-                            .append(String.join(\" \", getAuthors()))\n-                            .append(String.join(\" \", getAbstractPhrases()));\n-        return stringRepresentation.toString();\n+        StringJoiner stringJoiner = new StringJoiner(\" \");\n+\n+        getSingleYear().ifPresent(singleYear -> stringJoiner.add(singleYear.toString()));\n+        getFromYear().ifPresent(fromYear -> stringJoiner.add(fromYear.toString()));\n+        getToYear().ifPresent(toYear -> stringJoiner.add(toYear.toString()));\n+        getJournal().ifPresent(stringJoiner::add);\n+        stringJoiner.add(String.join(\" \", getTitlePhrases()))\n+                    .add(String.join(\" \", getDefaultFieldPhrases()))\n+                    .add(String.join(\" \", getAuthors()))\n+                    .add(String.join(\" \", getAbstractPhrases()));\n+\n+        return stringJoiner.toString();\n     }\n \n     public static class ComplexSearchQueryBuilder {\n"}}, {"oid": "ec96dceaef77483f5c0c7cd691a0f59d7b71021f", "url": "https://github.com/JabRef/jabref/commit/ec96dceaef77483f5c0c7cd691a0f59d7b71021f", "message": "Integrate requested changes\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>", "committedDate": "2020-11-06T22:27:01Z", "type": "commit"}]}