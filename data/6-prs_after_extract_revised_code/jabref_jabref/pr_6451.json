{"pr_number": 6451, "pr_title": "Removed BIB file directory from search when preferences has option unchecked", "pr_createdAt": "2020-05-08T22:12:53Z", "pr_url": "https://github.com/JabRef/jabref/pull/6451", "timeline": [{"oid": "c8da256d894b124cdd6a7a998862a7c853d09d6f", "url": "https://github.com/JabRef/jabref/commit/c8da256d894b124cdd6a7a998862a7c853d09d6f", "message": "Partial fix for issue 5891", "committedDate": "2020-05-08T22:06:54Z", "type": "commit"}, {"oid": "ce3335776aca522f3cf4333032bd23a96a6b9551", "url": "https://github.com/JabRef/jabref/commit/ce3335776aca522f3cf4333032bd23a96a6b9551", "message": "Added more tests", "committedDate": "2020-05-09T21:02:34Z", "type": "commit"}, {"oid": "3df1342bdb84ae24cb8233039f4791d67650c4ec", "url": "https://github.com/JabRef/jabref/commit/3df1342bdb84ae24cb8233039f4791d67650c4ec", "message": "Added more tests", "committedDate": "2020-05-09T21:17:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NzczMw==", "url": "https://github.com/JabRef/jabref/pull/6451#discussion_r423587733", "bodyText": "Why did you move the mockings here?", "author": "Siedlerchr", "createdAt": "2020-05-12T09:18:21Z", "path": "src/test/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtilTest.java", "diffHunk": "@@ -30,24 +30,33 @@\n     private final BibDatabaseContext databaseContext = mock(BibDatabaseContext.class);\n     private final ExternalFileTypes externalFileTypes = mock(ExternalFileTypes.class);\n     private final BibEntry entry = new BibEntry(StandardEntryType.Article);\n+    private Path path = null;\n \n     @BeforeEach\n     public void setUp(@TempDir Path folder) throws Exception {\n-        Path path = folder.resolve(\"CiteKey.pdf\");\n+        path = folder.resolve(\"CiteKey.pdf\");\n         Files.createFile(path);\n         entry.setCiteKey(\"CiteKey\");\n-        when(databaseContext.getFileDirectoriesAsPaths(any())).thenReturn(Collections.singletonList(path.getParent()));\n-        when(externalFileTypes.getExternalFileTypeSelection()).thenReturn(new TreeSet<>(ExternalFileTypes.getDefaultExternalFileTypes()));\n     }\n \n     @Test\n-    public void test() throws Exception {\n+    public void testFindAssociatedNotLinkedFilesSuccess() throws Exception {\n         // Due to mocking the externalFileType class, the file extension will not be found\n \n+        when(databaseContext.getFileDirectoriesAsPaths(any())).thenReturn(Collections.singletonList(path.getParent()));", "originalCommit": "3df1342bdb84ae24cb8233039f4791d67650c4ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0MzgyMw==", "url": "https://github.com/JabRef/jabref/pull/6451#discussion_r423743823", "bodyText": "This mocking of getFileDirectoriesAsPaths method returns non empty values, which is not applicable for the newly added test case testFindAssociatedNotLinkedFilesForEmptySearchDir. The new test case expects that getFileDirectoriesAsPaths would return empty list.", "author": "silverhorse", "createdAt": "2020-05-12T13:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NzczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0ODE4Nw==", "url": "https://github.com/JabRef/jabref/pull/6451#discussion_r423748187", "bodyText": "Okay, but the externalFileType should be independent of this", "author": "Siedlerchr", "createdAt": "2020-05-12T13:49:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NzczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MjA5Ng==", "url": "https://github.com/JabRef/jabref/pull/6451#discussion_r423752096", "bodyText": "yeah, agreed. I will move that one back to setup.", "author": "silverhorse", "createdAt": "2020-05-12T13:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NzczMw=="}], "type": "inlineReview", "revised_code": {"commit": "5454a091d5e151a50c44e358b0d4f3bad503aebf", "chunk": "diff --git a/src/test/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtilTest.java b/src/test/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtilTest.java\nindex 2aaf9e98ec..a56080661e 100644\n--- a/src/test/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtilTest.java\n+++ b/src/test/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtilTest.java\n\n@@ -37,16 +37,14 @@ public class AutoSetFileLinksUtilTest {\n         path = folder.resolve(\"CiteKey.pdf\");\n         Files.createFile(path);\n         entry.setCiteKey(\"CiteKey\");\n+        when(externalFileTypes.getExternalFileTypeSelection()).thenReturn(new TreeSet<>(ExternalFileTypes.getDefaultExternalFileTypes()));\n     }\n \n     @Test\n     public void testFindAssociatedNotLinkedFilesSuccess() throws Exception {\n         // Due to mocking the externalFileType class, the file extension will not be found\n-\n         when(databaseContext.getFileDirectoriesAsPaths(any())).thenReturn(Collections.singletonList(path.getParent()));\n-        when(externalFileTypes.getExternalFileTypeSelection()).thenReturn(new TreeSet<>(ExternalFileTypes.getDefaultExternalFileTypes()));\n         List<LinkedFile> expected = Collections.singletonList(new LinkedFile(\"\", \"CiteKey.pdf\", \"\"));\n-\n         AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(databaseContext, fileDirPrefs, autoLinkPrefs, externalFileTypes);\n         List<LinkedFile> actual = util.findAssociatedNotLinkedFiles(entry);\n         assertEquals(expected, actual);\n"}}, {"oid": "5454a091d5e151a50c44e358b0d4f3bad503aebf", "url": "https://github.com/JabRef/jabref/commit/5454a091d5e151a50c44e358b0d4f3bad503aebf", "message": "Added more tests", "committedDate": "2020-05-12T13:58:25Z", "type": "commit"}, {"oid": "e0669586457ff394843da7e234e08ae98ffd0d1e", "url": "https://github.com/JabRef/jabref/commit/e0669586457ff394843da7e234e08ae98ffd0d1e", "message": "Merge branch 'fix-for-issue-5891' of https://github.com/silverhorse/jabref into fix-for-issue-5891", "committedDate": "2020-05-12T13:59:48Z", "type": "commit"}, {"oid": "4b997f8acf805cb440d95013be58fefe1f92d04f", "url": "https://github.com/JabRef/jabref/commit/4b997f8acf805cb440d95013be58fefe1f92d04f", "message": "updating text for checkbox", "committedDate": "2020-05-28T03:47:34Z", "type": "commit"}, {"oid": "5668049e6fef7a7c25d84cb9b8119da472a67090", "url": "https://github.com/JabRef/jabref/commit/5668049e6fef7a7c25d84cb9b8119da472a67090", "message": "reverting change from other properties files", "committedDate": "2020-05-28T13:57:00Z", "type": "commit"}, {"oid": "62a6961ba65e78454e34a49e77f4295a2e3e1313", "url": "https://github.com/JabRef/jabref/commit/62a6961ba65e78454e34a49e77f4295a2e3e1313", "message": "Merge branch 'master' of https://github.com/JabRef/jabref into fix-for-issue-5891", "committedDate": "2020-05-28T14:36:16Z", "type": "commit"}, {"oid": "0ce7c8f230ff2fc5cd92b101458f8da899a17444", "url": "https://github.com/JabRef/jabref/commit/0ce7c8f230ff2fc5cd92b101458f8da899a17444", "message": "updating text", "committedDate": "2020-05-28T16:24:22Z", "type": "commit"}, {"oid": "6a1940f73372d176a03433b2e5beb0fe1cfd0ac2", "url": "https://github.com/JabRef/jabref/commit/6a1940f73372d176a03433b2e5beb0fe1cfd0ac2", "message": "updating text", "committedDate": "2020-05-28T16:27:19Z", "type": "commit"}]}