{"pr_number": 6469, "pr_title": "Fix bracket collisions", "pr_createdAt": "2020-05-12T09:07:53Z", "pr_url": "https://github.com/JabRef/jabref/pull/6469", "timeline": [{"oid": "65d05ed4d2f31092d1034aa725992f004ca3c658", "url": "https://github.com/JabRef/jabref/commit/65d05ed4d2f31092d1034aa725992f004ca3c658", "message": "Fixed brackets in regular expressions", "committedDate": "2020-05-12T09:05:53Z", "type": "commit"}, {"oid": "0d4c7ce7cd525bea20a0cfd148fad87d9a7586e1", "url": "https://github.com/JabRef/jabref/commit/0d4c7ce7cd525bea20a0cfd148fad87d9a7586e1", "message": "Added a test", "committedDate": "2020-05-12T09:06:22Z", "type": "commit"}, {"oid": "5861685e11ba8e1539c35e6c40be9ed6ecf80fc7", "url": "https://github.com/JabRef/jabref/commit/5861685e11ba8e1539c35e6c40be9ed6ecf80fc7", "message": "Changelog update", "committedDate": "2020-05-12T09:08:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1MTgyMw==", "url": "https://github.com/JabRef/jabref/pull/6469#discussion_r423651823", "bodyText": "Question: you fetch the next token above in line 131, and then here the subtoken. So this moves the stream forward twice, right? What happens if the user adds an empty brace, i.e []. Is the closing bracket still found? Can you please add a test for this case as well. Thanks!", "author": "tobiasdiez", "createdAt": "2020-05-12T11:11:52Z", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java", "diffHunk": "@@ -106,40 +106,68 @@ public static String expandBrackets(String pattern, Character keywordDelimiter,\n         Objects.requireNonNull(pattern);\n         Objects.requireNonNull(entry);\n         StringBuilder sb = new StringBuilder();\n-        StringTokenizer st = new StringTokenizer(pattern, \"\\\\[]\", true);\n+        StringTokenizer st = new StringTokenizer(pattern, \"\\\\[]\\\"\", true);\n \n         while (st.hasMoreTokens()) {\n             String token = st.nextToken();\n-            if (\"\\\\\".equals(token)) {\n-                if (st.hasMoreTokens()) {\n-                    sb.append(st.nextToken());\n-                }\n-                // FIXME: else -> raise exception or log? (S.G.)\n-            } else {\n-                if (\"[\".equals(token)) {\n-                    // Fetch the next token after the '[':\n+            if (\"\\\"\".equals(token)) {\n+                sb.append(token);\n+                while (st.hasMoreTokens()) {\n                     token = st.nextToken();\n-                    List<String> fieldParts = parseFieldMarker(token);\n-                    // check whether there is a modifier on the end such as\n-                    // \":lower\":\n-                    if (fieldParts.size() <= 1) {\n-                        sb.append(getFieldValue(entry, token, keywordDelimiter, database));\n-                    } else {\n-                        // apply modifiers:\n-                        String fieldValue = getFieldValue(entry, fieldParts.get(0), keywordDelimiter, database);\n-                        sb.append(applyModifiers(fieldValue, fieldParts, 1));\n+                    sb.append(token);\n+                    if (\"\\\"\".equals(token)) {\n+                        break;\n                     }\n-                    // Fetch and discard the closing ']'\n+                }\n+            } else {\n+                if (\"\\\\\".equals(token)) {\n                     if (st.hasMoreTokens()) {\n+                        sb.append(st.nextToken());\n+                    }\n+                    // FIXME: else -> raise exception or log? (S.G.)\n+                } else {\n+                    if (\"[\".equals(token)) {\n+                        // Fetch the next token after the '[':\n                         token = st.nextToken();\n+                        Boolean foundClosingBracket = false;\n+                        // make sure to read until the next ']'\n+                        while (st.hasMoreTokens()) {\n+                            String subtoken = st.nextToken();", "originalCommit": "5861685e11ba8e1539c35e6c40be9ed6ecf80fc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1NjIxNA==", "url": "https://github.com/JabRef/jabref/pull/6469#discussion_r423656214", "bodyText": "Good catch! But what should \"[]\" expand to? Inside a quote, the parsing should work fine. but what does \"[]\" mean in terms of JabRef fields? Should it just do nothing and print an appropriate warning?", "author": "btut", "createdAt": "2020-05-12T11:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1MTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1OTE5OA==", "url": "https://github.com/JabRef/jabref/pull/6469#discussion_r423659198", "bodyText": "Yes, I would say it should do nothing and log a warning. I don't really see a use case for the empty bracket, it should just not break the parser.", "author": "tobiasdiez", "createdAt": "2020-05-12T11:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1MTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2ODA1MQ==", "url": "https://github.com/JabRef/jabref/pull/6469#discussion_r423668051", "bodyText": "Done 230fef2", "author": "btut", "createdAt": "2020-05-12T11:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1MTgyMw=="}], "type": "inlineReview", "revised_code": {"commit": "230fef2a16cd09ec3bd50647b7499ae943608e80", "chunk": "diff --git a/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java b/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java\nindex d1c07072d2..316de3b4dc 100644\n--- a/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java\n+++ b/src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java\n\n@@ -127,11 +127,15 @@ public class BracketedPattern {\n                     // FIXME: else -> raise exception or log? (S.G.)\n                 } else {\n                     if (\"[\".equals(token)) {\n+                        Boolean foundClosingBracket = false;\n                         // Fetch the next token after the '[':\n                         token = st.nextToken();\n-                        Boolean foundClosingBracket = false;\n+                        if (\"]\".equals(token)) {\n+                            LOGGER.warn(\"Found empty brackets \\\"[]\\\" in '\" + pattern + \"'\");\n+                            foundClosingBracket = true;\n+                        }\n                         // make sure to read until the next ']'\n-                        while (st.hasMoreTokens()) {\n+                        while (st.hasMoreTokens() && !foundClosingBracket) {\n                             String subtoken = st.nextToken();\n                             // I the beginning of a quote is found, include the content in the original token\n                             if (\"\\\"\".equals(subtoken)) {\n"}}, {"oid": "230fef2a16cd09ec3bd50647b7499ae943608e80", "url": "https://github.com/JabRef/jabref/commit/230fef2a16cd09ec3bd50647b7499ae943608e80", "message": "Consider empty brackets", "committedDate": "2020-05-12T11:43:04Z", "type": "commit"}]}