{"pr_number": 7026, "pr_title": "Improve error handling on GROBID server connection issues", "pr_createdAt": "2020-10-18T13:37:17Z", "pr_url": "https://github.com/JabRef/jabref/pull/7026", "timeline": [{"oid": "07f39de6cda6a1123e6806957f9c33eb6e874485", "url": "https://github.com/JabRef/jabref/commit/07f39de6cda6a1123e6806957f9c33eb6e874485", "message": "add explicit configuration for connectTimeout in URLDownload\nadd information on GROBID server connection issue for user\nrelates to #6517 and #6891", "committedDate": "2020-10-18T13:04:30Z", "type": "commit"}, {"oid": "07b6f5ac862a97bde032d919f0ab35025ce16dbd", "url": "https://github.com/JabRef/jabref/commit/07b6f5ac862a97bde032d919f0ab35025ce16dbd", "message": "add CHANGELOG entry", "committedDate": "2020-10-18T13:41:34Z", "type": "commit"}, {"oid": "9abce44e3218295ef4accd7574ec33286c77ef56", "url": "https://github.com/JabRef/jabref/commit/9abce44e3218295ef4accd7574ec33286c77ef56", "message": "fix style issues detected by checkstyle", "committedDate": "2020-10-18T13:56:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507164001", "bodyText": "I think it's not so important for the user which exact url failed (especially since the popup disappears to quickly to type it in the url of a webbrower to check). So I suggest the following wording: \"Could not connect to JabRef server (Connection timed out).\"", "author": "tobiasdiez", "createdAt": "2020-10-18T14:09:37Z", "path": "src/main/java/org/jabref/gui/bibtexextractor/BibtexExtractorViewModel.java", "diffHunk": "@@ -58,6 +64,16 @@ public StringProperty inputTextProperty() {\n     public void startParsing() {\n         BackgroundTask.wrap(() -> currentCitationfetcher.performSearch(inputTextProperty.getValue()))\n                       .onRunning(() -> dialogService.notify(Localization.lang(\"Your text is being parsed...\")))\n+                      .onFailure((e) -> {\n+                          if (e instanceof UncheckedIOException) {\n+                              String msg = Localization.lang(\"There are connection issues with the %0 server. Detailed information: %1.\",", "originalCommit": "9abce44e3218295ef4accd7574ec33286c77ef56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NjIwMA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507166200", "bodyText": "And maybe add the details via error log.", "author": "tobiasdiez", "createdAt": "2020-10-18T14:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NjcwNA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507166704", "bodyText": "Fair point, @tobiasdiez.\nThis should be \"Could not connect to GROBID server (Connection timed out).\" Shouldn't it?", "author": "nitram509", "createdAt": "2020-10-18T14:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2OTk5Nw==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507169997", "bodyText": "I would still say \"JabRef server\"...the user knows what Jabref is, but not necessarily what grobid is. I would see this also as an \"implementation detail\", maybe in the future we switch the backend from grobid to something else..", "author": "tobiasdiez", "createdAt": "2020-10-18T14:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4MDI3MA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507180270", "bodyText": "It was tricky to get the Message to a phrase as you proposed.\nI reduced the level of detail towards:\n\"There are connection issues with a JabRef server. Detailed information: %0.\"\n(See latest screenshot)\n\nIs this OK for you @tobiasdiez ?", "author": "nitram509", "createdAt": "2020-10-18T16:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4MzQ4MA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507183480", "bodyText": "Perfect! Thanks", "author": "tobiasdiez", "createdAt": "2020-10-18T16:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "add6e3e47b6464bf43e2fc3b492d8a4a1743d1de", "chunk": "diff --git a/src/main/java/org/jabref/gui/bibtexextractor/BibtexExtractorViewModel.java b/src/main/java/org/jabref/gui/bibtexextractor/BibtexExtractorViewModel.java\nindex 679a31e9ca..f1d99d7433 100644\n--- a/src/main/java/org/jabref/gui/bibtexextractor/BibtexExtractorViewModel.java\n+++ b/src/main/java/org/jabref/gui/bibtexextractor/BibtexExtractorViewModel.java\n\n@@ -65,9 +65,8 @@ public class BibtexExtractorViewModel {\n         BackgroundTask.wrap(() -> currentCitationfetcher.performSearch(inputTextProperty.getValue()))\n                       .onRunning(() -> dialogService.notify(Localization.lang(\"Your text is being parsed...\")))\n                       .onFailure((e) -> {\n-                          if (e instanceof UncheckedIOException) {\n-                              String msg = Localization.lang(\"There are connection issues with the %0 server. Detailed information: %1.\",\n-                                      currentCitationfetcher.getServerUrl(),\n+                          if (e instanceof FetcherException) {\n+                              String msg = Localization.lang(\"There are connection issues with a JabRef server. Detailed information: %0.\",\n                                       e.getMessage());\n                               dialogService.notify(msg);\n                           } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDQ4NA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507164484", "bodyText": "Please use ParserException instead of the uncheckedioex.", "author": "tobiasdiez", "createdAt": "2020-10-18T14:10:56Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcher.java", "diffHunk": "@@ -39,8 +40,7 @@ public GrobidCitationFetcher(ImportFormatPreferences importFormatPreferences) {\n         try {\n             return Optional.of(grobidService.processCitation(plainText, GrobidService.ConsolidateCitations.WITH_METADATA));\n         } catch (IOException e) {\n-            LOGGER.debug(\"Could not process citation\", e);\n-            return Optional.empty();\n+            throw new UncheckedIOException(\"Could not process citation. \" + e.getMessage(), e);", "originalCommit": "9abce44e3218295ef4accd7574ec33286c77ef56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2OTY4Ng==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507169686", "bodyText": "Hmm \ud83e\udd14\nBut that's not a ParserException, we are not even at the point of parsing yet.\nAlso, ParserException is a checked one, which has way more side-effects in terms of refactoring than an unchecked one.\nSince you're one of the maintainers ... may I ask for your advise?\nHere's the situation: the fetcher implementation before my PR did catch all exceptions (especially all IO related ones).\nWhen an IOException is bubbling up in the call hierarchy, then it will get captured, as said.\nThe SearchBasedFetcher.performSearch method declaration does not mention any exception.\nSo when I want to throw e.g. a ParserException (I would prefer IOException because of its technical nature, though)\nthen I need to adapt the interface/abstract class and this will lead to many more files changed.\nWould this be in your interest and aligned with your general architecture, @tobiasdiez ?", "author": "nitram509", "createdAt": "2020-10-18T14:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MDYxNw==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507170617", "bodyText": "Good catch, not sure where I was with my thoughts... I meant of course the FetcherException instead of ParserException. The general idea is to use FetcherException for everything that is semi-forseeable (e.g. connection time outs, bad response errors etc). So that would be the case here as well.\nYou are right that it might lead to a bit more refactoring as it's a checked exception, but I see this as an advantage instead of an disadvantage. Makes the code more robust and ensures that we covered all the cases where the user might want to prefer to see a user-friendly exception message instead of only having a cryptic one or only a debug log message.\nNote also that you should provide the cause of the FetcherException already when it's created (since that's usual the point where you can figure out what went wrong).", "author": "tobiasdiez", "createdAt": "2020-10-18T14:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4MDA5MQ==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507180091", "bodyText": "I did follow the idea and used the FetcherExeption. That was simple.\nThere's one caveat though, because of Java Stream don't play well with checked exceptions, I had to wrap IOException in RuntimeException. Since this is wrapped and un-wrapped within the same class, I hope you agree, in this is acceptable.\nThe exception thrown by the fetcher is a FetcherException, as discussed.", "author": "nitram509", "createdAt": "2020-10-18T15:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "add6e3e47b6464bf43e2fc3b492d8a4a1743d1de", "chunk": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcher.java b/src/main/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcher.java\nindex 549270996e..68535c5302 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcher.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcher.java\n\n@@ -39,8 +45,14 @@ public class GrobidCitationFetcher implements SearchBasedFetcher {\n     private Optional<String> parseUsingGrobid(String plainText) {\n         try {\n             return Optional.of(grobidService.processCitation(plainText, GrobidService.ConsolidateCitations.WITH_METADATA));\n+        } catch (SocketTimeoutException e) {\n+            String msg = \"Connection timed out.\";\n+            LOGGER.warn(msg, e);\n+            throw new RuntimeException(msg, e);\n         } catch (IOException e) {\n-            throw new UncheckedIOException(\"Could not process citation. \" + e.getMessage(), e);\n+            String msg = \"Could not process citation. \" + e.getMessage();\n+            LOGGER.warn(msg, e);\n+            throw new RuntimeException(msg, e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDg5Nw==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507164897", "bodyText": "what about connectionTimeout.toMillis()?", "author": "tobiasdiez", "createdAt": "2020-10-18T14:12:18Z", "path": "src/main/java/org/jabref/logic/net/URLDownload.java", "diffHunk": "@@ -316,6 +319,7 @@ private void copy(InputStream in, Writer out, Charset encoding) throws IOExcepti\n \n     private URLConnection openConnection() throws IOException {\n         URLConnection connection = this.source.openConnection();\n+        connection.setConnectTimeout((int) connectTimeout.getSeconds() * 1000);", "originalCommit": "9abce44e3218295ef4accd7574ec33286c77ef56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NzcxNw==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507167717", "bodyText": "Good catch. Quite convenient and overseen, thank you.", "author": "nitram509", "createdAt": "2020-10-18T14:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NDg5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "98712e7fa96f643fc78101f77f17fa09971cac1c", "chunk": "diff --git a/src/main/java/org/jabref/logic/net/URLDownload.java b/src/main/java/org/jabref/logic/net/URLDownload.java\nindex 50c1df60c5..99887c7ac9 100644\n--- a/src/main/java/org/jabref/logic/net/URLDownload.java\n+++ b/src/main/java/org/jabref/logic/net/URLDownload.java\n\n@@ -319,7 +319,7 @@ public class URLDownload {\n \n     private URLConnection openConnection() throws IOException {\n         URLConnection connection = this.source.openConnection();\n-        connection.setConnectTimeout((int) connectTimeout.getSeconds() * 1000);\n+        connection.setConnectTimeout((int) connectTimeout.toMillis());\n         for (Entry<String, String> entry : this.parameters.entrySet()) {\n             connection.setRequestProperty(entry.getKey(), entry.getValue());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NTQ4OQ==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507165489", "bodyText": "Very good that you added a test as well. Small suggestion for improvement: use Assertions.assertThrows to ensure that the exception is indeed thrown.", "author": "tobiasdiez", "createdAt": "2020-10-18T14:14:15Z", "path": "src/test/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcherTest.java", "diffHunk": "@@ -100,4 +107,17 @@ public void grobidPerformSearchWithInvalidDataTest(String invalidInput) {\n         assertEquals(Collections.emptyList(), entries);\n     }\n \n+    @Test\n+    public void performSearchThrowsExceptionInCaseOfConnectionIssues() throws IOException {\n+        GrobidService grobidServiceMock = mock(GrobidService.class);\n+        when(grobidServiceMock.processCitation(anyString(), any())).thenThrow(new IOException(\"Any IO Exception\"));\n+        grobidCitationFetcher = new GrobidCitationFetcher(importFormatPreferences, grobidServiceMock);\n+\n+        try {\n+            grobidCitationFetcher.performSearch(\"any text\");\n+            fail(\"performSearch should throw an UncheckedIOException, when there are underlying IOException.\");\n+        } catch (UncheckedIOException expected) {", "originalCommit": "9abce44e3218295ef4accd7574ec33286c77ef56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2Njg4MA==", "url": "https://github.com/JabRef/jabref/pull/7026#discussion_r507166880", "bodyText": "Will have a look. Thank you.", "author": "nitram509", "createdAt": "2020-10-18T14:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE2NTQ4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "98712e7fa96f643fc78101f77f17fa09971cac1c", "chunk": "diff --git a/src/test/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcherTest.java b/src/test/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcherTest.java\nindex 51b17bae00..750c411f0c 100644\n--- a/src/test/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcherTest.java\n+++ b/src/test/java/org/jabref/logic/importer/fetcher/GrobidCitationFetcherTest.java\n\n@@ -113,11 +112,8 @@ public class GrobidCitationFetcherTest {\n         when(grobidServiceMock.processCitation(anyString(), any())).thenThrow(new IOException(\"Any IO Exception\"));\n         grobidCitationFetcher = new GrobidCitationFetcher(importFormatPreferences, grobidServiceMock);\n \n-        try {\n+        assertThrows(UncheckedIOException.class, () -> {\n             grobidCitationFetcher.performSearch(\"any text\");\n-            fail(\"performSearch should throw an UncheckedIOException, when there are underlying IOException.\");\n-        } catch (UncheckedIOException expected) {\n-            // expected\n-        }\n+        }, \"performSearch should throw an UncheckedIOException, when there are underlying IOException.\");\n     }\n }\n"}}, {"oid": "98712e7fa96f643fc78101f77f17fa09971cac1c", "url": "https://github.com/JabRef/jabref/commit/98712e7fa96f643fc78101f77f17fa09971cac1c", "message": "use .toMilliseconds() is more convenient\nuse assertThrow is more convenient", "committedDate": "2020-10-18T14:25:37Z", "type": "commit"}, {"oid": "add6e3e47b6464bf43e2fc3b492d8a4a1743d1de", "url": "https://github.com/JabRef/jabref/commit/add6e3e47b6464bf43e2fc3b492d8a4a1743d1de", "message": "incorporate feedback from review\nreduce detail level from user message\nrework to use FetcherException instead of UncheckedIOException", "committedDate": "2020-10-18T15:53:56Z", "type": "commit"}, {"oid": "7ae5b57dec6525d6a5a87f0a64ac0391a0e10154", "url": "https://github.com/JabRef/jabref/commit/7ae5b57dec6525d6a5a87f0a64ac0391a0e10154", "message": "switch to debug level in order to reduce verboseness in the log", "committedDate": "2020-10-18T15:58:10Z", "type": "commit"}]}