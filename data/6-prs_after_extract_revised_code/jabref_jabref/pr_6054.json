{"pr_number": 6054, "pr_title": "Fix warning display issue for entering a title made of two words", "pr_createdAt": "2020-03-03T06:26:07Z", "pr_url": "https://github.com/JabRef/jabref/pull/6054", "timeline": [{"oid": "1d4bc6712819866395e2864800fea06f6bacf57c", "url": "https://github.com/JabRef/jabref/commit/1d4bc6712819866395e2864800fea06f6bacf57c", "message": "Fix warning display issue for entering a title made of two sentences", "committedDate": "2020-03-03T05:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMzQ5OQ==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r387203499", "bodyText": "Try to avoid abbreviations. E.g. use String[] delimitedString or splitString instead.\nCan you make this \"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\" this a constant and put it to the declarations of the class?", "author": "calixtus", "createdAt": "2020-03-03T18:15:39Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -48,13 +48,18 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS\n-                .test(valueOnlySpacesWithinCurlyBraces);\n-\n-        if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n-            return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+        // Delimiters are . ! ? ; :\n+        String[] delimitedStr = valueOnlySpacesWithinCurlyBraces.split(\"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\");", "originalCommit": "1d4bc6712819866395e2864800fea06f6bacf57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMTg4OA==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r387511888", "bodyText": "Thank you for your review. I have made changes based on your suggestion.", "author": "eetian", "createdAt": "2020-03-04T08:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMzQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 60e27bac0..2d6b84b90 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -49,17 +50,17 @@ public class TitleChecker implements ValueChecker {\n         }\n \n         // Delimiters are . ! ? ; :\n-        String[] delimitedStr = valueOnlySpacesWithinCurlyBraces.split(\"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\");\n-        for (String subStr : delimitedStr) {\n-            subStr = subStr.trim();\n-            if (subStr.length() > 0) {\n-                subStr = subStr.substring(1);\n+        String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n+        for (String subTitle : splitTitle) {\n+            subTitle = subTitle.trim();\n+            if (subTitle.length() > 0) {\n+                subTitle = subTitle.substring(1);\n             }\n-            boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS.test(subStr);\n-            if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n+            if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n                 return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n             }\n         }\n+\n         return Optional.empty();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwNTU0NQ==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r387205545", "bodyText": "I believe, as hasCapitalLettersThatBibtexWillConvertToSmallerOnes is not reused, it can be inlined in the if predicate and still be meaningful. \ud83d\ude09", "author": "calixtus", "createdAt": "2020-03-03T18:19:28Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -48,13 +48,18 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS\n-                .test(valueOnlySpacesWithinCurlyBraces);\n-\n-        if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n-            return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+        // Delimiters are . ! ? ; :\n+        String[] delimitedStr = valueOnlySpacesWithinCurlyBraces.split(\"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\");\n+        for (String subStr : delimitedStr) {\n+            subStr = subStr.trim();\n+            if (subStr.length() > 0) {\n+                subStr = subStr.substring(1);\n+            }\n+            boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS.test(subStr);\n+            if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {", "originalCommit": "1d4bc6712819866395e2864800fea06f6bacf57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMzQ1Ng==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r387513456", "bodyText": "I also changed this :)", "author": "eetian", "createdAt": "2020-03-04T08:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwNTU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 60e27bac0..2d6b84b90 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -49,17 +50,17 @@ public class TitleChecker implements ValueChecker {\n         }\n \n         // Delimiters are . ! ? ; :\n-        String[] delimitedStr = valueOnlySpacesWithinCurlyBraces.split(\"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\");\n-        for (String subStr : delimitedStr) {\n-            subStr = subStr.trim();\n-            if (subStr.length() > 0) {\n-                subStr = subStr.substring(1);\n+        String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n+        for (String subTitle : splitTitle) {\n+            subTitle = subTitle.trim();\n+            if (subTitle.length() > 0) {\n+                subTitle = subTitle.substring(1);\n             }\n-            boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS.test(subStr);\n-            if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n+            if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n                 return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n             }\n         }\n+\n         return Optional.empty();\n     }\n }\n"}}, {"oid": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "url": "https://github.com/JabRef/jabref/commit/18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "message": "Made changes as requested", "committedDate": "2020-03-04T08:26:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjAyMQ==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082021", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * - for each subTitle:\n          \n          \n            \n                 * - for each sub title:", "author": "koppor", "createdAt": "2020-03-05T05:14:42Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -22,10 +23,12 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n \n     /**\n      * Algorithm:\n-     * - remove trailing whitespaces\n-     * - ignore first letter as this can always be written in caps\n      * - remove everything that is in brackets\n-     * - check if at least one capital letter is in the title\n+     * - split the title into subTitles based on the delimiters\n+     * - for each subTitle:", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -24,11 +24,12 @@ public class TitleChecker implements ValueChecker {\n     /**\n      * Algorithm:\n      * - remove everything that is in brackets\n-     * - split the title into subTitles based on the delimiters\n-     * - for each subTitle:\n+     * - split the title into sub titles based on the delimiters\n+     * (defined in the local variable DELIMITERS, currently . ! ? ; :)\n+     * - for each sub title:\n      * -    remove trailing whitespaces\n      * -    ignore first letter as this can always be written in caps\n-     * -    check if at least one capital letter is in the title\n+     * -    check if at least one capital letter is in the sub title\n      */\n     @Override\n     public Optional<String> checkValue(String value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjE1Mg==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082152", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * - split the title into subTitles based on the delimiters\n          \n          \n            \n                 * - split the title into sub titles based on the delimiters (defined in the local variable DELIMITERS, currently . ! ? ; :)", "author": "koppor", "createdAt": "2020-03-05T05:15:29Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -22,10 +23,12 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n \n     /**\n      * Algorithm:\n-     * - remove trailing whitespaces\n-     * - ignore first letter as this can always be written in caps\n      * - remove everything that is in brackets\n-     * - check if at least one capital letter is in the title\n+     * - split the title into subTitles based on the delimiters", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -24,11 +24,12 @@ public class TitleChecker implements ValueChecker {\n     /**\n      * Algorithm:\n      * - remove everything that is in brackets\n-     * - split the title into subTitles based on the delimiters\n-     * - for each subTitle:\n+     * - split the title into sub titles based on the delimiters\n+     * (defined in the local variable DELIMITERS, currently . ! ? ; :)\n+     * - for each sub title:\n      * -    remove trailing whitespaces\n      * -    ignore first letter as this can always be written in caps\n-     * -    check if at least one capital letter is in the title\n+     * -    check if at least one capital letter is in the sub title\n      */\n     @Override\n     public Optional<String> checkValue(String value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjIyNg==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082226", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * -    check if at least one capital letter is in the title\n          \n          \n            \n                 * -    check if at least one capital letter is in the sub title", "author": "koppor", "createdAt": "2020-03-05T05:15:45Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -22,10 +23,12 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n \n     /**\n      * Algorithm:\n-     * - remove trailing whitespaces\n-     * - ignore first letter as this can always be written in caps\n      * - remove everything that is in brackets\n-     * - check if at least one capital letter is in the title\n+     * - split the title into subTitles based on the delimiters\n+     * - for each subTitle:\n+     * -    remove trailing whitespaces\n+     * -    ignore first letter as this can always be written in caps\n+     * -    check if at least one capital letter is in the title", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -24,11 +24,12 @@ public class TitleChecker implements ValueChecker {\n     /**\n      * Algorithm:\n      * - remove everything that is in brackets\n-     * - split the title into subTitles based on the delimiters\n-     * - for each subTitle:\n+     * - split the title into sub titles based on the delimiters\n+     * (defined in the local variable DELIMITERS, currently . ! ? ; :)\n+     * - for each sub title:\n      * -    remove trailing whitespaces\n      * -    ignore first letter as this can always be written in caps\n-     * -    check if at least one capital letter is in the title\n+     * -    check if at least one capital letter is in the sub title\n      */\n     @Override\n     public Optional<String> checkValue(String value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjM3OA==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082378", "bodyText": "This line can be removed - I would assume that coders know that Ctrl + click on \"DELIMITERS\" leads to the definition of the variable.", "author": "koppor", "createdAt": "2020-03-05T05:16:29Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -48,11 +49,16 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS\n-                .test(valueOnlySpacesWithinCurlyBraces);\n-\n-        if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n-            return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+        // Delimiters are . ! ? ; :", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -49,15 +50,14 @@ public class TitleChecker implements ValueChecker {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        // Delimiters are . ! ? ; :\n         String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n         for (String subTitle : splitTitle) {\n             subTitle = subTitle.trim();\n-            if (subTitle.length() > 0) {\n+            if (!subTitle.isEmpty()) {\n                 subTitle = subTitle.substring(1);\n-            }\n-            if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n-                return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n+                    return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                }\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjY1OQ==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082659", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (subTitle.length() > 0) {\n          \n          \n            \n                        if (!subTitle.isEmpty()) {", "author": "koppor", "createdAt": "2020-03-05T05:18:00Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -48,11 +49,16 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS\n-                .test(valueOnlySpacesWithinCurlyBraces);\n-\n-        if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n-            return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+        // Delimiters are . ! ? ; :\n+        String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n+        for (String subTitle : splitTitle) {\n+            subTitle = subTitle.trim();\n+            if (subTitle.length() > 0) {", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -49,15 +50,14 @@ public class TitleChecker implements ValueChecker {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        // Delimiters are . ! ? ; :\n         String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n         for (String subTitle : splitTitle) {\n             subTitle = subTitle.trim();\n-            if (subTitle.length() > 0) {\n+            if (!subTitle.isEmpty()) {\n                 subTitle = subTitle.substring(1);\n-            }\n-            if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n-                return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n+                    return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                }\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjgzMg==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r388082832", "bodyText": "Please move this before the }. In this case, subTitle could be 0 characters long and thus no test is necessary", "author": "koppor", "createdAt": "2020-03-05T05:18:39Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -48,11 +49,16 @@ public TitleChecker(BibDatabaseContext databaseContext) {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        boolean hasCapitalLettersThatBibtexWillConvertToSmallerOnes = HAS_CAPITAL_LETTERS\n-                .test(valueOnlySpacesWithinCurlyBraces);\n-\n-        if (hasCapitalLettersThatBibtexWillConvertToSmallerOnes) {\n-            return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+        // Delimiters are . ! ? ; :\n+        String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n+        for (String subTitle : splitTitle) {\n+            subTitle = subTitle.trim();\n+            if (subTitle.length() > 0) {\n+                subTitle = subTitle.substring(1);\n+            }\n+            if (HAS_CAPITAL_LETTERS.test(subTitle)) {", "originalCommit": "18fe0d4b80d6faff2c78ba74a49deb199c4697a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 2d6b84b90..669c04d04 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -49,15 +50,14 @@ public class TitleChecker implements ValueChecker {\n             valueOnlySpacesWithinCurlyBraces = matcher.replaceAll(\"\");\n         }\n \n-        // Delimiters are . ! ? ; :\n         String[] splitTitle = valueOnlySpacesWithinCurlyBraces.split(DELIMITERS);\n         for (String subTitle : splitTitle) {\n             subTitle = subTitle.trim();\n-            if (subTitle.length() > 0) {\n+            if (!subTitle.isEmpty()) {\n                 subTitle = subTitle.substring(1);\n-            }\n-            if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n-                return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                if (HAS_CAPITAL_LETTERS.test(subTitle)) {\n+                    return Optional.of(Localization.lang(\"capital letters are not masked using curly brackets {}\"));\n+                }\n             }\n         }\n \n"}}, {"oid": "331700b0ce374e5dfb3dd039d23db2bdee9456a5", "url": "https://github.com/JabRef/jabref/commit/331700b0ce374e5dfb3dd039d23db2bdee9456a5", "message": "Add test cases for this issue in the exsiting test file and made all changes as requested", "committedDate": "2020-03-07T05:24:28Z", "type": "commit"}, {"oid": "3b9c091c28509dcb19f5ee93feac5d288475d914", "url": "https://github.com/JabRef/jabref/commit/3b9c091c28509dcb19f5ee93feac5d288475d914", "message": "Merge branch 'master' into fix-for-issue-5832", "committedDate": "2020-03-07T05:40:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3NDI5Mw==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r389374293", "bodyText": "as this is a regex, too, you should create a Pattern analogous to the other ones and then call the split method on the pattern. The Pattern.compile is more efficient when the regex is used multiple times", "author": "Siedlerchr", "createdAt": "2020-03-08T14:26:18Z", "path": "src/main/java/org/jabref/logic/integrity/TitleChecker.java", "diffHunk": "@@ -12,6 +12,7 @@\n public class TitleChecker implements ValueChecker {\n \n     private static final Pattern INSIDE_CURLY_BRAKETS = Pattern.compile(\"\\\\{[^}\\\\{]*\\\\}\");\n+    private static final String DELIMITERS = \"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\";", "originalCommit": "3b9c091c28509dcb19f5ee93feac5d288475d914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzNDc0Nw==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r392034747", "bodyText": "Thanks for pointing out this. Good to learn! I changed it.", "author": "eetian", "createdAt": "2020-03-13T05:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3NDI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4fa903a0cb4d2623897f5ecc161709e50b0d3c17", "chunk": "diff --git a/src/main/java/org/jabref/logic/integrity/TitleChecker.java b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\nindex 669c04d04..43c77df59 100644\n--- a/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n+++ b/src/main/java/org/jabref/logic/integrity/TitleChecker.java\n\n@@ -12,7 +12,7 @@ import org.jabref.model.strings.StringUtil;\n public class TitleChecker implements ValueChecker {\n \n     private static final Pattern INSIDE_CURLY_BRAKETS = Pattern.compile(\"\\\\{[^}\\\\{]*\\\\}\");\n-    private static final String DELIMITERS = \"(\\\\.|\\\\!|\\\\?|\\\\;|\\\\:)\";\n+    private static final Pattern DELIMITERS = Pattern.compile(\"\\\\.|\\\\!|\\\\?|\\\\;|\\\\:\");\n     private static final Predicate<String> HAS_CAPITAL_LETTERS = Pattern.compile(\"[\\\\p{Lu}\\\\p{Lt}]\").asPredicate();\n \n     private final BibDatabaseContext databaseContext;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3MTU0NA==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r389471544", "bodyText": "It is good to have tests here. These are more a end-to-end-test. Would you mind to add separate tests to TitleCheckerTest.java. In IntelliJ, you can create this file using Ctrl+Shift+T (and pressing Enter in the dialog). It would really help to have the tests for the TitleChecker in a dedicated class, which helps to focus on the implementation. -- This should be very easy to do, but will help future work on the title checker (maybe in one, two years) to ensure that the functionality is still correct.", "author": "koppor", "createdAt": "2020-03-09T05:43:30Z", "path": "src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java", "diffHunk": "@@ -194,6 +205,19 @@ void testTitleChecks() {\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"This is a {Title}\"), BibDatabaseMode.BIBLATEX));\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"{C}urrent {C}hronicle\"), BibDatabaseMode.BIBLATEX));\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"{A Model-Driven Approach for Monitoring {ebBP} BusinessTransactions}\"), BibDatabaseMode.BIBLATEX));\n+        assertCorrect(withMode(createContext(StandardField.TITLE, \"This is a sub title 1: This is a sub title 2\"), BibDatabaseMode.BIBLATEX));", "originalCommit": "3b9c091c28509dcb19f5ee93feac5d288475d914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzNzEwMw==", "url": "https://github.com/JabRef/jabref/pull/6054#discussion_r392037103", "bodyText": "Thank you for your explanation! As suggested, I have added separate tests for titles having delimiters in the new file. Those method names may not be perfect. If there is a better way to rename it, please let me know.", "author": "eetian", "createdAt": "2020-03-13T05:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3MTU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "04284e87abf68f91765c22710336cd66986c5993", "chunk": "diff --git a/src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java b/src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java\nindex 07afa7736..ed22b975d 100644\n--- a/src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java\n+++ b/src/test/java/org/jabref/logic/integrity/IntegrityCheckTest.java\n\n@@ -216,8 +216,6 @@ class IntegrityCheckTest {\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"This is; A sub title 1.... This is a sub title 2\"), BibDatabaseMode.BIBLATEX));\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"This!is!!A!Title??\"), BibDatabaseMode.BIBLATEX));\n         assertCorrect(withMode(createContext(StandardField.TITLE, \"This!is!!A!TitlE??\"), BibDatabaseMode.BIBLATEX));\n-\n-\n     }\n \n     @Test\n"}}, {"oid": "4fa903a0cb4d2623897f5ecc161709e50b0d3c17", "url": "https://github.com/JabRef/jabref/commit/4fa903a0cb4d2623897f5ecc161709e50b0d3c17", "message": "Add test cases for titles having delimiters in TitleCheckerTest and make changes as requested", "committedDate": "2020-03-13T04:50:42Z", "type": "commit"}, {"oid": "9133caa162f10ff59374ddefab0c31f4db74b69e", "url": "https://github.com/JabRef/jabref/commit/9133caa162f10ff59374ddefab0c31f4db74b69e", "message": "Add test cases for titles having delimiters in TitleCheckerTest and make changes as requested", "committedDate": "2020-03-13T05:03:30Z", "type": "commit"}, {"oid": "72b1434ee58e3e49d36c967e010b353908e9e816", "url": "https://github.com/JabRef/jabref/commit/72b1434ee58e3e49d36c967e010b353908e9e816", "message": "Delete my old bullet point in CHANGELOG.md", "committedDate": "2020-03-13T05:12:53Z", "type": "commit"}, {"oid": "9bc8a6ce1ee943d2a4ca9da9b8ea4a4c77d0125f", "url": "https://github.com/JabRef/jabref/commit/9bc8a6ce1ee943d2a4ca9da9b8ea4a4c77d0125f", "message": "Fix the checkstyle issues", "committedDate": "2020-03-14T04:47:57Z", "type": "commit"}, {"oid": "04284e87abf68f91765c22710336cd66986c5993", "url": "https://github.com/JabRef/jabref/commit/04284e87abf68f91765c22710336cd66986c5993", "message": "Delete one extra empty line in IntegrityCheckTest.java", "committedDate": "2020-03-14T05:03:32Z", "type": "commit"}, {"oid": "7d95ba74607eb34a114e50ac7aad59843517b39c", "url": "https://github.com/JabRef/jabref/commit/7d95ba74607eb34a114e50ac7aad59843517b39c", "message": "Fix PR Quality Review issues", "committedDate": "2020-03-14T05:21:20Z", "type": "commit"}]}