{"pr_number": 6920, "pr_title": "Improve parsing of short DOIs", "pr_createdAt": "2020-09-17T19:02:19Z", "pr_url": "https://github.com/JabRef/jabref/pull/6920", "timeline": [{"oid": "68c4bebcf7712675379bcdd687ed5ce56be9565c", "url": "https://github.com/JabRef/jabref/commit/68c4bebcf7712675379bcdd687ed5ce56be9565c", "message": "fixed issue #6880: Improved detection of short DOIs.", "committedDate": "2020-09-17T18:38:04Z", "type": "commit"}, {"oid": "404a41ad4d1e3c42940e480d676d41176f523372", "url": "https://github.com/JabRef/jabref/commit/404a41ad4d1e3c42940e480d676d41176f523372", "message": "updated changelog for issue #6880", "committedDate": "2020-09-17T18:43:47Z", "type": "commit"}, {"oid": "d57fbc62f5d508822328d309854f767e758ffaed", "url": "https://github.com/JabRef/jabref/commit/d57fbc62f5d508822328d309854f767e758ffaed", "message": "Merge branch 'master' into bugfix/issue6880", "committedDate": "2020-09-18T06:54:32Z", "type": "commit"}, {"oid": "d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "url": "https://github.com/JabRef/jabref/commit/d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "message": "Update CHANGELOG.md\n\nfix merge", "committedDate": "2020-09-18T06:55:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1OTU0OQ==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490759549", "bodyText": "please remove the added indent.", "author": "tobiasdiez", "createdAt": "2020-09-18T07:37:48Z", "path": "src/main/java/org/jabref/logic/cleanup/DoiCleanup.java", "diffHunk": "@@ -46,7 +46,7 @@\n                 // Doi field seems to contain Doi -> cleanup note, url, ee field\n                 for (Field field : FIELDS) {\n                     entry.getField(field).flatMap(DOI::parse)\n-                         .ifPresent(unused -> removeFieldValue(entry, field, changes));\n+                            .ifPresent(unused -> removeFieldValue(entry, field, changes));", "originalCommit": "d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "chunk": "diff --git a/src/main/java/org/jabref/logic/cleanup/DoiCleanup.java b/src/main/java/org/jabref/logic/cleanup/DoiCleanup.java\nindex 05c1eb3ec..a7fe33dcc 100644\n--- a/src/main/java/org/jabref/logic/cleanup/DoiCleanup.java\n+++ b/src/main/java/org/jabref/logic/cleanup/DoiCleanup.java\n\n@@ -46,7 +46,7 @@ public class DoiCleanup implements CleanupJob {\n                 // Doi field seems to contain Doi -> cleanup note, url, ee field\n                 for (Field field : FIELDS) {\n                     entry.getField(field).flatMap(DOI::parse)\n-                            .ifPresent(unused -> removeFieldValue(entry, field, changes));\n+                        .ifPresent(unused -> removeFieldValue(entry, field, changes));\n                 }\n             }\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MDkzOQ==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490760939", "bodyText": "please remove empty line", "author": "tobiasdiez", "createdAt": "2020-09-18T07:40:41Z", "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -115,12 +133,37 @@ public DOI(String doi) {\n             if (shortDoiMatcher.find()) {\n                 this.doi = shortDoiMatcher.group(1);\n                 isShortDoi = true;\n+                checkForAmbiguousShortDOI(); // can only happen in this case\n             } else {\n-                throw new IllegalArgumentException(trimmedDoi + \" is not a valid DOI/Short DOI.\");\n+                // Shortcut DOI without the \"10/\" as in \"doi.org/d8dn\"\n+                Matcher shortcutDoiMatcher = EXACT_SHORT_DOI_SHORTCUT.matcher(trimmedDoi);\n+                if (shortcutDoiMatcher.find()) {\n+                    this.doi = \"10/\"+shortcutDoiMatcher.group(1);\n+                    isShortDoi = true;\n+                } else {\n+", "originalCommit": "d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "chunk": "diff --git a/src/main/java/org/jabref/model/entry/identifier/DOI.java b/src/main/java/org/jabref/model/entry/identifier/DOI.java\nindex 290366a14..bf6f9be1f 100644\n--- a/src/main/java/org/jabref/model/entry/identifier/DOI.java\n+++ b/src/main/java/org/jabref/model/entry/identifier/DOI.java\n\n@@ -141,7 +141,6 @@ public class DOI implements Identifier {\n                     this.doi = \"10/\"+shortcutDoiMatcher.group(1);\n                     isShortDoi = true;\n                 } else {\n-\n                     throw new IllegalArgumentException(trimmedDoi + \" is not a valid DOI/Short DOI.\");\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjE1Mw==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490762153", "bodyText": "We have the convention that in general dead/unused code should be removed. Do you have any concrete plans/ideas where the isAmbiguous variable is needed?\nIf not, I would ask you to remove it.", "author": "tobiasdiez", "createdAt": "2020-09-18T07:43:12Z", "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -115,12 +133,37 @@ public DOI(String doi) {\n             if (shortDoiMatcher.find()) {\n                 this.doi = shortDoiMatcher.group(1);\n                 isShortDoi = true;\n+                checkForAmbiguousShortDOI(); // can only happen in this case\n             } else {\n-                throw new IllegalArgumentException(trimmedDoi + \" is not a valid DOI/Short DOI.\");\n+                // Shortcut DOI without the \"10/\" as in \"doi.org/d8dn\"\n+                Matcher shortcutDoiMatcher = EXACT_SHORT_DOI_SHORTCUT.matcher(trimmedDoi);\n+                if (shortcutDoiMatcher.find()) {\n+                    this.doi = \"10/\"+shortcutDoiMatcher.group(1);\n+                    isShortDoi = true;\n+                } else {\n+\n+                    throw new IllegalArgumentException(trimmedDoi + \" is not a valid DOI/Short DOI.\");\n+                }\n             }\n         }\n     }\n \n+    /**\n+     * checks whether the DOI might as well be something else, like:\n+     * \"10/2012\" or \" 10:as23 \".\n+     *\n+     * sets the property \"isAmbiguous\" accordingly. ( NOT USED YET! )", "originalCommit": "d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5MjA4Mw==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490792083", "bodyText": "Hi Tobias,\nYes I wasn't sure whether to open a new issue or to discuss my idea here in the comments somewhere:\nWhen dois are cleaned up, the fields Notes and url are scanned for dois and short dois. The way it is implemented now, an entry like eg 10/2021 is interpreted as a short doi, when this might very well be something else, like a date...\ncheckForAmbiguousShortDOI() detects these ambiguous cases and sets the property isAmbiguous accordingly.\nI stopped there, because I am still trying to find out whether a short doi like 10/1234 is even possible i.e. whether it can be fully numeric. I wrote an email to contact@doi.org, but haven't heard back yet...\nAlso, I wanted to open a discussion on what to do with such ambiguous cases. We could implement some DOIexistanceChecker that checks whether the supposed doi can be found. But a) I am not sure what would be the most efficient way of doing this and b) I am worried about scaling issues when there are thousands of ambiguous dois... Maybe the checking should be optional via a tick-box in respective gui?", "author": "PremKolar", "createdAt": "2020-09-18T08:37:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTUxNA==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490835514", "bodyText": "That's a good point to be aware of. For the conversation from the Notes and Url fields, I would say we can be optimistic and put it in the doi field if it's look like an DOI. I guess it's very rare to have only a date in the notes field.\nI like the idea of checking doi's for existence (as an integrity check). I'm not sure how to implement it effectively, without querying crossref's api for each doi separately.", "author": "tobiasdiez", "createdAt": "2020-09-18T09:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0NTA4OQ==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490845089", "bodyText": "ok. the way I understand you, the integrity checking would be applied to all DOIs right? should i remove the unused method and property regarding ambiguous short DOIs then?", "author": "PremKolar", "createdAt": "2020-09-18T10:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3MjQzNg==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490872436", "bodyText": "yes, integrity checks are always applied to all entries; and some users have 10k...\nFor now I would say remove the code for ambiguous dois. The code is not lost, as we can go back to this PR to copy it once it's really needed.", "author": "tobiasdiez", "createdAt": "2020-09-18T11:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjE1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "chunk": "diff --git a/src/main/java/org/jabref/model/entry/identifier/DOI.java b/src/main/java/org/jabref/model/entry/identifier/DOI.java\nindex 290366a14..bf6f9be1f 100644\n--- a/src/main/java/org/jabref/model/entry/identifier/DOI.java\n+++ b/src/main/java/org/jabref/model/entry/identifier/DOI.java\n\n@@ -141,7 +141,6 @@ public class DOI implements Identifier {\n                     this.doi = \"10/\"+shortcutDoiMatcher.group(1);\n                     isShortDoi = true;\n                 } else {\n-\n                     throw new IllegalArgumentException(trimmedDoi + \" is not a valid DOI/Short DOI.\");\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2MjUxNQ==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r490762515", "bodyText": "remove new empty lines", "author": "tobiasdiez", "createdAt": "2020-09-18T07:43:58Z", "path": "src/test/java/org/jabref/model/entry/identifier/DOITest.java", "diffHunk": "@@ -83,18 +88,32 @@ public void acceptDoiPrefixInShortDoi() {\n         assertEquals(\"10/gf4gqc\", new DOI(\"doi:10/gf4gqc\").getDOI());\n     }\n \n+", "originalCommit": "d0208f44dcaeae3c7d9cf4a1b778dfae1f4ad6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "chunk": "diff --git a/src/test/java/org/jabref/model/entry/identifier/DOITest.java b/src/test/java/org/jabref/model/entry/identifier/DOITest.java\nindex 26e0ac82e..4aafeb6df 100644\n--- a/src/test/java/org/jabref/model/entry/identifier/DOITest.java\n+++ b/src/test/java/org/jabref/model/entry/identifier/DOITest.java\n\n@@ -88,8 +88,6 @@ public class DOITest {\n         assertEquals(\"10/gf4gqc\", new DOI(\"doi:10/gf4gqc\").getDOI());\n     }\n \n-\n-\n     @Test\n     public void acceptURNPrefix() {\n         assertEquals(\"10.123/456\", new DOI(\"urn:10.123/456\").getDOI());\n"}}, {"oid": "be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "url": "https://github.com/JabRef/jabref/commit/be8fd198bfd60dc6d8ce1f247f0135ea2dfcc8a9", "message": "fixed formatting/style", "committedDate": "2020-09-18T08:42:39Z", "type": "commit"}, {"oid": "98ea42fe8be96fd5db2cb5c1379b66e3cfcf868c", "url": "https://github.com/JabRef/jabref/commit/98ea42fe8be96fd5db2cb5c1379b66e3cfcf868c", "message": "Merge branch 'bugfix/issue6880' of https://github.com/PremKolar/jabref into bugfix/issue6880", "committedDate": "2020-09-18T08:43:01Z", "type": "commit"}, {"oid": "0a21ee2d5d68eb97de56df09c413fa6f0e7b37ee", "url": "https://github.com/JabRef/jabref/commit/0a21ee2d5d68eb97de56df09c413fa6f0e7b37ee", "message": "removed stuff relating to 'ambiguous DOIs'", "committedDate": "2020-09-18T11:12:07Z", "type": "commit"}, {"oid": "aac71bd83b4867f741f26230b2e49c2ff237f3d5", "url": "https://github.com/JabRef/jabref/commit/aac71bd83b4867f741f26230b2e49c2ff237f3d5", "message": "Merge branch 'master' into bugfix/issue6880", "committedDate": "2020-09-18T14:31:37Z", "type": "commit"}, {"oid": "1e5de7999d2528ba7ae74b3d06cf3ef9007c5db7", "url": "https://github.com/JabRef/jabref/commit/1e5de7999d2528ba7ae74b3d06cf3ef9007c5db7", "message": "fixed checkstyle failures", "committedDate": "2020-09-19T18:31:03Z", "type": "commit"}, {"oid": "e15cd8950ec6c854f548bc7d7f27721ca4cccbce", "url": "https://github.com/JabRef/jabref/commit/e15cd8950ec6c854f548bc7d7f27721ca4cccbce", "message": "re-added the 'urn:doi:' case for FIND_SHORT_DOI_EXP", "committedDate": "2020-09-19T18:46:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcyODkwMQ==", "url": "https://github.com/JabRef/jabref/pull/6920#discussion_r491728901", "bodyText": "Note to self: urn:doi is not a valid DOI: See https://en.wikipedia.org/wiki/Digital_object_identifier#Standardization", "author": "koppor", "createdAt": "2020-09-20T20:06:57Z", "path": "src/test/java/org/jabref/model/entry/identifier/DOITest.java", "diffHunk": "@@ -86,15 +91,24 @@ public void acceptDoiPrefixInShortDoi() {\n     @Test\n     public void acceptURNPrefix() {\n         assertEquals(\"10.123/456\", new DOI(\"urn:10.123/456\").getDOI());\n-        assertEquals(\"10.123/456\", new DOI(\"urn:doi:10.123/456\").getDOI());", "originalCommit": "e15cd8950ec6c854f548bc7d7f27721ca4cccbce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}