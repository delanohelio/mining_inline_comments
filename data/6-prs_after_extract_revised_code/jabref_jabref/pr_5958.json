{"pr_number": 5958, "pr_title": "Refactor BaseAction in RightClickMenu", "pr_createdAt": "2020-02-18T23:46:29Z", "pr_url": "https://github.com/JabRef/jabref/pull/5958", "timeline": [{"oid": "0d2efc46c9a595786f46ce170e1bdd239b7827d8", "url": "https://github.com/JabRef/jabref/commit/0d2efc46c9a595786f46ce170e1bdd239b7827d8", "message": "Preview and XMPWriter", "committedDate": "2020-02-17T19:45:10Z", "type": "commit"}, {"oid": "d1d74c7d4d12c81b1b324fc4f973f2f437b2bb83", "url": "https://github.com/JabRef/jabref/commit/d1d74c7d4d12c81b1b324fc4f973f2f437b2bb83", "message": "OpenConsole, OpenFolder, OpenExternalFile", "committedDate": "2020-02-17T22:14:23Z", "type": "commit"}, {"oid": "f664d10470572e00e1f5c91bbc3eec83853abb92", "url": "https://github.com/JabRef/jabref/commit/f664d10470572e00e1f5c91bbc3eec83853abb92", "message": "Added OpenUrlAction, Refactored MergeEntriesAction, MergeWitchFetchedEntryAction, AttachFileAction", "committedDate": "2020-02-18T17:41:18Z", "type": "commit"}, {"oid": "b71360bd16ad307ac15b86bee828d0338eee49fd", "url": "https://github.com/JabRef/jabref/commit/b71360bd16ad307ac15b86bee828d0338eee49fd", "message": "Refactored SendAsEMailAction", "committedDate": "2020-02-18T19:32:52Z", "type": "commit"}, {"oid": "18a3439bad26f09acc39b0594776e1ae6c54bb57", "url": "https://github.com/JabRef/jabref/commit/18a3439bad26f09acc39b0594776e1ae6c54bb57", "message": "Refactored AttachFileAction", "committedDate": "2020-02-18T19:41:42Z", "type": "commit"}, {"oid": "e1a6e78eaed85d953ea191cefd261dbcdf12bfce", "url": "https://github.com/JabRef/jabref/commit/e1a6e78eaed85d953ea191cefd261dbcdf12bfce", "message": "Refactored CitationStyleToClipboardWorkerTest to CopyCitationAction", "committedDate": "2020-02-18T20:41:58Z", "type": "commit"}, {"oid": "b83d547af4ac0db3a4df350301c2a45487f81054", "url": "https://github.com/JabRef/jabref/commit/b83d547af4ac0db3a4df350301c2a45487f81054", "message": "Refactored CopyBibTeXKeyAndLinkAction, copyTitle, copyCiteKey, copyKey, copyKeyAndTitle to CopyMoreActions", "committedDate": "2020-02-18T23:34:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTExNjI0Mw==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381116243", "bodyText": "You should add a default case or checkstyle or so will complain", "author": "Siedlerchr", "createdAt": "2020-02-19T07:29:14Z", "path": "src/main/java/org/jabref/gui/edit/CopyMoreAction.java", "diffHunk": "@@ -0,0 +1,228 @@\n+package org.jabref.gui.edit;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.Globals;\n+import org.jabref.JabRefGUI;\n+import org.jabref.gui.ClipBoardManager;\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.JabRefDialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.ActionHelper;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.logic.layout.Layout;\n+import org.jabref.logic.layout.LayoutHelper;\n+import org.jabref.logic.util.OS;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.preferences.JabRefPreferences;\n+import org.jabref.preferences.PreferencesService;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CopyMoreAction extends SimpleCommand {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CopyMoreAction.class);\n+    private StandardActions action;\n+    private DialogService dialogService;\n+    private StateManager stateManager;\n+    private final ClipBoardManager clipBoardManager;\n+    private PreferencesService preferencesService;\n+\n+    public CopyMoreAction(StandardActions action, DialogService dialogService, StateManager stateManager, ClipBoardManager clipBoardManager, PreferencesService preferencesService) {\n+        this.action = action;\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+        this.clipBoardManager = clipBoardManager;\n+        this.preferencesService = preferencesService;\n+\n+        this.executable.bind(ActionHelper.needsEntriesSelected(stateManager));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        if (stateManager.getActiveDatabase().isEmpty() || stateManager.getSelectedEntries().isEmpty()) {\n+            return;\n+        }\n+\n+        if (!Arrays.asList(\n+                StandardActions.COPY_TITLE,\n+                StandardActions.COPY_KEY,\n+                StandardActions.COPY_CITE_KEY,\n+                StandardActions.COPY_KEY_AND_TITLE,\n+                StandardActions.COPY_KEY_AND_LINK)\n+                  .contains(action)) {\n+            return;\n+        }\n+\n+        switch (action) {\n+            case COPY_TITLE: copyTitle(); break;\n+            case COPY_KEY: copyKey(); break;\n+            case COPY_CITE_KEY: copyCiteKey(); break;\n+            case COPY_KEY_AND_TITLE: copyKeyAndTitle(); break;\n+            case COPY_KEY_AND_LINK: copyKeyAndLink(); break;", "originalCommit": "b83d547af4ac0db3a4df350301c2a45487f81054", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "def0e67d43a7d604479bf17ba125f0dae43e673e", "chunk": "diff --git a/src/main/java/org/jabref/gui/edit/CopyMoreAction.java b/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\nindex b40353bc3..0026bfcb3 100644\n--- a/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\n+++ b/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\n\n@@ -2,14 +2,11 @@ package org.jabref.gui.edit;\n \n import java.io.IOException;\n import java.io.StringReader;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n import org.jabref.Globals;\n-import org.jabref.JabRefGUI;\n import org.jabref.gui.ClipBoardManager;\n import org.jabref.gui.DialogService;\n import org.jabref.gui.JabRefDialogService;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTExNjQxNw==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381116417", "bodyText": "Maybe a flatmap can be used?", "author": "Siedlerchr", "createdAt": "2020-02-19T07:29:48Z", "path": "src/main/java/org/jabref/gui/edit/CopyMoreAction.java", "diffHunk": "@@ -0,0 +1,228 @@\n+package org.jabref.gui.edit;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.Globals;\n+import org.jabref.JabRefGUI;\n+import org.jabref.gui.ClipBoardManager;\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.JabRefDialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.ActionHelper;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.logic.layout.Layout;\n+import org.jabref.logic.layout.LayoutHelper;\n+import org.jabref.logic.util.OS;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.preferences.JabRefPreferences;\n+import org.jabref.preferences.PreferencesService;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CopyMoreAction extends SimpleCommand {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CopyMoreAction.class);\n+    private StandardActions action;\n+    private DialogService dialogService;\n+    private StateManager stateManager;\n+    private final ClipBoardManager clipBoardManager;\n+    private PreferencesService preferencesService;\n+\n+    public CopyMoreAction(StandardActions action, DialogService dialogService, StateManager stateManager, ClipBoardManager clipBoardManager, PreferencesService preferencesService) {\n+        this.action = action;\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+        this.clipBoardManager = clipBoardManager;\n+        this.preferencesService = preferencesService;\n+\n+        this.executable.bind(ActionHelper.needsEntriesSelected(stateManager));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        if (stateManager.getActiveDatabase().isEmpty() || stateManager.getSelectedEntries().isEmpty()) {\n+            return;\n+        }\n+\n+        if (!Arrays.asList(\n+                StandardActions.COPY_TITLE,\n+                StandardActions.COPY_KEY,\n+                StandardActions.COPY_CITE_KEY,\n+                StandardActions.COPY_KEY_AND_TITLE,\n+                StandardActions.COPY_KEY_AND_LINK)\n+                  .contains(action)) {\n+            return;\n+        }\n+\n+        switch (action) {\n+            case COPY_TITLE: copyTitle(); break;\n+            case COPY_KEY: copyKey(); break;\n+            case COPY_CITE_KEY: copyCiteKey(); break;\n+            case COPY_KEY_AND_TITLE: copyKeyAndTitle(); break;\n+            case COPY_KEY_AND_LINK: copyKeyAndLink(); break;\n+        }\n+    }\n+\n+    private void copyTitle() {\n+        List<BibEntry> selectedBibEntries = stateManager.getSelectedEntries();\n+\n+        List<String> titles = selectedBibEntries.stream()\n+                                                .filter(bibEntry -> bibEntry.getTitle().isPresent())", "originalCommit": "b83d547af4ac0db3a4df350301c2a45487f81054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4MTg0Mg==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381381842", "bodyText": "I think I do not understand, how? Can you give me a hint?", "author": "calixtus", "createdAt": "2020-02-19T16:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTExNjQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MDI5Ng==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381390296", "bodyText": "Think, it is OK as is.", "author": "koppor", "createdAt": "2020-02-19T16:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTExNjQxNw=="}], "type": "inlineReview", "revised_code": {"commit": "def0e67d43a7d604479bf17ba125f0dae43e673e", "chunk": "diff --git a/src/main/java/org/jabref/gui/edit/CopyMoreAction.java b/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\nindex b40353bc3..0026bfcb3 100644\n--- a/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\n+++ b/src/main/java/org/jabref/gui/edit/CopyMoreAction.java\n\n@@ -2,14 +2,11 @@ package org.jabref.gui.edit;\n \n import java.io.IOException;\n import java.io.StringReader;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n import org.jabref.Globals;\n-import org.jabref.JabRefGUI;\n import org.jabref.gui.ClipBoardManager;\n import org.jabref.gui.DialogService;\n import org.jabref.gui.JabRefDialogService;\n"}}, {"oid": "def0e67d43a7d604479bf17ba125f0dae43e673e", "url": "https://github.com/JabRef/jabref/commit/def0e67d43a7d604479bf17ba125f0dae43e673e", "message": "l10n and some minor corrections", "committedDate": "2020-02-19T16:11:58Z", "type": "commit"}, {"oid": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "url": "https://github.com/JabRef/jabref/commit/f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated\n\n# Conflicts:\n#\tsrc/main/resources/l10n/JabRef_en.properties", "committedDate": "2020-02-19T16:20:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwNjk0Mg==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381506942", "bodyText": "I think the old actions here can be completely removed", "author": "tobiasdiez", "createdAt": "2020-02-19T19:50:28Z", "path": "src/main/java/org/jabref/gui/BasePanel.java", "diffHunk": "@@ -282,54 +260,41 @@ private void setupActions() {\n         // The action for cleaning up entry.\n         actions.put(Actions.CLEANUP, cleanUpAction);\n \n-        actions.put(Actions.MERGE_ENTRIES, () -> new MergeEntriesAction(frame, Globals.stateManager).execute());\n+        // actions.put(Actions.MERGE_ENTRIES, () -> new MergeEntriesAction(frame, Globals.stateManager).execute());", "originalCommit": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "chunk": "diff --git a/src/main/java/org/jabref/gui/BasePanel.java b/src/main/java/org/jabref/gui/BasePanel.java\nindex 9ec4eddf7..952b9785c 100644\n--- a/src/main/java/org/jabref/gui/BasePanel.java\n+++ b/src/main/java/org/jabref/gui/BasePanel.java\n\n@@ -260,31 +260,6 @@ public class BasePanel extends StackPane {\n         // The action for cleaning up entry.\n         actions.put(Actions.CLEANUP, cleanUpAction);\n \n-        // actions.put(Actions.MERGE_ENTRIES, () -> new MergeEntriesAction(frame, Globals.stateManager).execute());\n-\n-        // The action for copying the selected entry's key.\n-        // actions.put(Actions.COPY_KEY, this::copyKey);\n-\n-        // The action for copying the selected entry's title.\n-        // actions.put(Actions.COPY_TITLE, this::copyTitle);\n-\n-        // The action for copying a cite for the selected entry.\n-        // actions.put(Actions.COPY_CITE_KEY, this::copyCiteKey);\n-\n-        // The action for copying the BibTeX key and the title for the first selected entry\n-        // actions.put(Actions.COPY_KEY_AND_TITLE, this::copyKeyAndTitle);\n-\n-        /*\n-        actions.put(Actions.COPY_CITATION_ASCII_DOC, () -> copyCitationToClipboard(CitationStyleOutputFormat.ASCII_DOC));\n-        actions.put(Actions.COPY_CITATION_XSLFO, () -> copyCitationToClipboard(CitationStyleOutputFormat.XSL_FO));\n-        actions.put(Actions.COPY_CITATION_HTML, () -> copyCitationToClipboard(CitationStyleOutputFormat.HTML));\n-        actions.put(Actions.COPY_CITATION_RTF, () -> copyCitationToClipboard(CitationStyleOutputFormat.RTF));\n-        actions.put(Actions.COPY_CITATION_TEXT, () -> copyCitationToClipboard(CitationStyleOutputFormat.TEXT));\n-        */\n-\n-        // The action for copying the BibTeX keys as hyperlinks to the urls of the selected entries\n-        // actions.put(Actions.COPY_KEY_AND_LINK, new CopyBibTeXKeyAndLinkAction(mainTable, Globals.clipboardManager));\n-\n         actions.put(Actions.MERGE_DATABASE, new AppendDatabaseAction(frame, this));\n \n         actions.put(Actions.PULL_CHANGES_FROM_SHARED_DATABASE, () -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDE4MQ==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381510181", "bodyText": "I'm afraid this does not work as the MergeEntriesAction is initialized with a given database (the base panel that was open when JabRef was started). Thus, even through the action is invoked from a different database it would merge entries in the original db. Hopefully it is enough to use the statemanger in MergeEntriesAction to get the current database.", "author": "tobiasdiez", "createdAt": "2020-02-19T19:56:33Z", "path": "src/main/java/org/jabref/gui/JabRefFrame.java", "diffHunk": "@@ -748,7 +752,7 @@ private MenuBar createMenu() {\n \n         quality.getItems().addAll(\n                 factory.createMenuItem(StandardActions.FIND_DUPLICATES, new DuplicateSearch(this, dialogService, stateManager)),\n-                factory.createMenuItem(StandardActions.MERGE_ENTRIES, new MergeEntriesAction(this, stateManager)),\n+                factory.createMenuItem(StandardActions.MERGE_ENTRIES, new MergeEntriesAction(this.getCurrentBasePanel(), dialogService, stateManager)),", "originalCommit": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3OTI5Nw==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381979297", "bodyText": "I wonder if there is an architectural problem in BasePanel: BibDatabase::insertEntry does not contain logic to mark the BasePanel as changed and to mark entries with a timestamp, only BasePanel::insertEntry does.\nWould require some more refactoring. \ud83d\ude05", "author": "calixtus", "createdAt": "2020-02-20T12:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NDAzNQ==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381984035", "bodyText": "I put a comment in the code about this issue, but this is something that would need a solution / decision before merging.", "author": "calixtus", "createdAt": "2020-02-20T13:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4MDA2Mw==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r382280063", "bodyText": "Ahh yeah, the insertEntry needs refactoring indeed. For the moment, it should suffice to pass the jabref frame as a parameter to the action and then get the current base panel in the exectue method", "author": "tobiasdiez", "createdAt": "2020-02-20T21:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "chunk": "diff --git a/src/main/java/org/jabref/gui/JabRefFrame.java b/src/main/java/org/jabref/gui/JabRefFrame.java\nindex 771e769e7..f30ff1551 100644\n--- a/src/main/java/org/jabref/gui/JabRefFrame.java\n+++ b/src/main/java/org/jabref/gui/JabRefFrame.java\n\n@@ -752,7 +753,7 @@ public class JabRefFrame extends BorderPane {\n \n         quality.getItems().addAll(\n                 factory.createMenuItem(StandardActions.FIND_DUPLICATES, new DuplicateSearch(this, dialogService, stateManager)),\n-                factory.createMenuItem(StandardActions.MERGE_ENTRIES, new MergeEntriesAction(this.getCurrentBasePanel(), dialogService, stateManager)),\n+                factory.createMenuItem(StandardActions.MERGE_ENTRIES, new MergeEntriesAction(dialogService, stateManager)),\n                 factory.createMenuItem(StandardActions.CHECK_INTEGRITY, new IntegrityCheckAction(this, stateManager, Globals.TASK_EXECUTOR)),\n                 factory.createMenuItem(StandardActions.CLEANUP_ENTRIES, new OldDatabaseCommandWrapper(Actions.CLEANUP, this, stateManager)),\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDk4MQ==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381510981", "bodyText": "Is this line here on purpose? It doesn't seem to make much sense as the action is not relative to the currently selected entry.", "author": "tobiasdiez", "createdAt": "2020-02-19T19:58:15Z", "path": "src/main/java/org/jabref/gui/OpenConsoleAction.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.jabref.gui;\n+\n+import java.io.IOException;\n+\n+import org.jabref.gui.actions.ActionHelper;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class OpenConsoleAction extends SimpleCommand {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(OpenConsoleAction.class);\n+    private final StateManager stateManager;\n+\n+    public OpenConsoleAction(StateManager stateManager) {\n+        this.stateManager = stateManager;\n+\n+        this.executable.bind(ActionHelper.isFieldSetForSelectedEntry(StandardField.FILE, stateManager));", "originalCommit": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "chunk": "diff --git a/src/main/java/org/jabref/gui/OpenConsoleAction.java b/src/main/java/org/jabref/gui/OpenConsoleAction.java\nindex 2dbfbbc99..ce634dd73 100644\n--- a/src/main/java/org/jabref/gui/OpenConsoleAction.java\n+++ b/src/main/java/org/jabref/gui/OpenConsoleAction.java\n\n@@ -6,7 +6,6 @@ import org.jabref.gui.actions.ActionHelper;\n import org.jabref.gui.actions.SimpleCommand;\n import org.jabref.gui.desktop.JabRefDesktop;\n import org.jabref.model.database.BibDatabaseContext;\n-import org.jabref.model.entry.field.StandardField;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMzg1MA==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381513850", "bodyText": "I think entry.getFields().stream().anyMatch(fields::contains) is slightly better performance wise (as disjoint needs to check if all elements of fields are not contained in entry.getFields())", "author": "tobiasdiez", "createdAt": "2020-02-19T20:03:59Z", "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -13,4 +18,22 @@ public static BooleanExpression needsDatabase(StateManager stateManager) {\n     public static BooleanExpression needsEntriesSelected(StateManager stateManager) {\n         return Bindings.isNotEmpty(stateManager.getSelectedEntries());\n     }\n+\n+    public static BooleanExpression needsEntriesSelected(int numberOfEntries, StateManager stateManager) {\n+        return Bindings.createBooleanBinding(\n+                () -> stateManager.getSelectedEntries().size() == numberOfEntries,\n+                stateManager.getSelectedEntries());\n+    }\n+\n+    public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateManager stateManager) {\n+        return isAnyFieldSetForSelectedEntry(Collections.singletonList(field), stateManager);\n+    }\n+\n+    public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n+        BibEntry entry = stateManager.getSelectedEntries().get(0);\n+        return Bindings.createBooleanBinding(\n+                () -> !Collections.disjoint(fields, entry.getFields()),", "originalCommit": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "chunk": "diff --git a/src/main/java/org/jabref/gui/actions/ActionHelper.java b/src/main/java/org/jabref/gui/actions/ActionHelper.java\nindex 199d959c1..01e23d67e 100644\n--- a/src/main/java/org/jabref/gui/actions/ActionHelper.java\n+++ b/src/main/java/org/jabref/gui/actions/ActionHelper.java\n\n@@ -32,7 +32,7 @@ public class ActionHelper {\n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n         BibEntry entry = stateManager.getSelectedEntries().get(0);\n         return Bindings.createBooleanBinding(\n-                () -> !Collections.disjoint(fields, entry.getFields()),\n+                () -> entry.getFields().stream().anyMatch(fields::contains),\n                 entry.getFieldsObservable(),\n                 stateManager.getSelectedEntries());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxNTQ0NQ==", "url": "https://github.com/JabRef/jabref/pull/5958#discussion_r381515445", "bodyText": "This can be written a bit more elegantly now using the isAnyFieldSet method, right?", "author": "tobiasdiez", "createdAt": "2020-02-19T20:07:25Z", "path": "src/main/java/org/jabref/gui/maintable/OpenUrlAction.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.jabref.gui.maintable;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javafx.beans.binding.BooleanBinding;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.ActionHelper;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.entry.field.StandardField;\n+\n+public class OpenUrlAction extends SimpleCommand {\n+\n+    private final DialogService dialogService;\n+    private final StateManager stateManager;\n+\n+    public OpenUrlAction(DialogService dialogService, StateManager stateManager) {\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+\n+        BooleanBinding fieldIsSet = ActionHelper.isFieldSetForSelectedEntry(StandardField.URL, stateManager)\n+                                                .or(ActionHelper.isFieldSetForSelectedEntry(StandardField.DOI, stateManager)", "originalCommit": "f922be3b638ac4e5c8da8ee3a5903beaa307c00a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "chunk": "diff --git a/src/main/java/org/jabref/gui/maintable/OpenUrlAction.java b/src/main/java/org/jabref/gui/maintable/OpenUrlAction.java\nindex 2e42ec30d..cfcd40b26 100644\n--- a/src/main/java/org/jabref/gui/maintable/OpenUrlAction.java\n+++ b/src/main/java/org/jabref/gui/maintable/OpenUrlAction.java\n\n@@ -4,7 +4,7 @@ import java.io.IOException;\n import java.util.List;\n import java.util.Optional;\n \n-import javafx.beans.binding.BooleanBinding;\n+import javafx.beans.binding.BooleanExpression;\n \n import org.jabref.gui.DialogService;\n import org.jabref.gui.StateManager;\n"}}, {"oid": "bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "url": "https://github.com/JabRef/jabref/commit/bca3a0b9f0767c5dcf79adb8ad57f63c50233372", "message": "Refactored ActionHelper, removed some deprecated Actions and minor corrections", "committedDate": "2020-02-20T13:08:32Z", "type": "commit"}, {"oid": "1dc67db379051ee2908e19de797637fb0802d6a8", "url": "https://github.com/JabRef/jabref/commit/1dc67db379051ee2908e19de797637fb0802d6a8", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated\n\n# Conflicts:\n#\tsrc/main/resources/l10n/JabRef_en.properties", "committedDate": "2020-02-20T13:09:29Z", "type": "commit"}, {"oid": "08fa945653e36bc705513fec9ced36e35410c3bd", "url": "https://github.com/JabRef/jabref/commit/08fa945653e36bc705513fec9ced36e35410c3bd", "message": "Fixed l10n merge errors", "committedDate": "2020-02-20T13:18:37Z", "type": "commit"}, {"oid": "9b8e385eb4cc13ae25116287b0750e621dba6683", "url": "https://github.com/JabRef/jabref/commit/9b8e385eb4cc13ae25116287b0750e621dba6683", "message": "CHANGELOG.md", "committedDate": "2020-02-20T22:40:10Z", "type": "commit"}, {"oid": "c84be953371847ffb37f8771b287fa25984d1d2e", "url": "https://github.com/JabRef/jabref/commit/c84be953371847ffb37f8771b287fa25984d1d2e", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/gui/JabRefFrame.java", "committedDate": "2020-02-22T14:29:48Z", "type": "commit"}, {"oid": "a5bf6b7af98596354410b5fb3f0da047479bb32c", "url": "https://github.com/JabRef/jabref/commit/a5bf6b7af98596354410b5fb3f0da047479bb32c", "message": "Extracted BaseAction out of SpecialFieldMenuItemFactory", "committedDate": "2020-02-22T18:27:30Z", "type": "commit"}, {"oid": "a800bf4cde1f1fac6b45c1dae0063e96d114fc92", "url": "https://github.com/JabRef/jabref/commit/a800bf4cde1f1fac6b45c1dae0063e96d114fc92", "message": "Fixed possible NPE in SpecialFieldAction", "committedDate": "2020-02-22T18:42:47Z", "type": "commit"}, {"oid": "dcdef689f0ba013898e2fddb498ed0c169f8c1ca", "url": "https://github.com/JabRef/jabref/commit/dcdef689f0ba013898e2fddb498ed0c169f8c1ca", "message": "Extracted BaseAction out of EditAction", "committedDate": "2020-02-23T16:22:12Z", "type": "commit"}, {"oid": "16409e3226d3fcae3dc820518794418286371740", "url": "https://github.com/JabRef/jabref/commit/16409e3226d3fcae3dc820518794418286371740", "message": "l10n", "committedDate": "2020-02-23T16:41:28Z", "type": "commit"}, {"oid": "da1b68936a6d2e0960242aa53a12007770d6c53b", "url": "https://github.com/JabRef/jabref/commit/da1b68936a6d2e0960242aa53a12007770d6c53b", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated", "committedDate": "2020-02-27T07:53:46Z", "type": "commit"}, {"oid": "2719c9260ddd4f107c6699a6d0ec9a2ebe6b5c09", "url": "https://github.com/JabRef/jabref/commit/2719c9260ddd4f107c6699a6d0ec9a2ebe6b5c09", "message": "CodeCov and moved EditAction to edit package", "committedDate": "2020-02-27T09:29:38Z", "type": "commit"}, {"oid": "3c7da13f4968f3e4f7f21ad94aec7bcc252080b4", "url": "https://github.com/JabRef/jabref/commit/3c7da13f4968f3e4f7f21ad94aec7bcc252080b4", "message": "Fixed import order", "committedDate": "2020-02-27T12:01:49Z", "type": "commit"}, {"oid": "88ca460b9d1e5e10bc50d3fb9767fd74ea73e8ec", "url": "https://github.com/JabRef/jabref/commit/88ca460b9d1e5e10bc50d3fb9767fd74ea73e8ec", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/gui/JabRefFrame.java", "committedDate": "2020-02-28T10:48:05Z", "type": "commit"}, {"oid": "e4136b54a27f9e2c541509248265eaaf36cf6b04", "url": "https://github.com/JabRef/jabref/commit/e4136b54a27f9e2c541509248265eaaf36cf6b04", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated", "committedDate": "2020-02-28T17:26:51Z", "type": "commit"}, {"oid": "789799b1554eca9d125d4de6e41f16731e11eb69", "url": "https://github.com/JabRef/jabref/commit/789799b1554eca9d125d4de6e41f16731e11eb69", "message": "Fixed merge error", "committedDate": "2020-02-28T18:16:52Z", "type": "commit"}, {"oid": "c0abdce95a0fadacae1b69331b3b2512f0fc0f81", "url": "https://github.com/JabRef/jabref/commit/c0abdce95a0fadacae1b69331b3b2512f0fc0f81", "message": "Merge remote-tracking branch 'upstream/master' into replace_deprecated", "committedDate": "2020-03-03T14:40:40Z", "type": "commit"}]}