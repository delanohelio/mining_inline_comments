{"pr_number": 7269, "pr_title": "Only disable  move to file dir when path equals", "pr_createdAt": "2020-12-29T12:33:55Z", "pr_url": "https://github.com/JabRef/jabref/pull/7269", "timeline": [{"oid": "9d67aae792607425545ed24c4bdada78401355d7", "url": "https://github.com/JabRef/jabref/commit/9d67aae792607425545ed24c4bdada78401355d7", "message": "Only disable  move to file dir when path equals\n\nFix equals in path method\nFixes #7194", "committedDate": "2020-12-29T12:33:36Z", "type": "commit"}, {"oid": "57887baac14fd9102e10f009b4eb45439f735f36", "url": "https://github.com/JabRef/jabref/commit/57887baac14fd9102e10f009b4eb45439f735f36", "message": "fix checkstyle", "committedDate": "2020-12-29T12:38:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTM4MA==", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549771380", "bodyText": "The MOVE_FILE_TO_FOLDER_AND_RENAME should still be enabled if the file is already in the correct folder, but not of the correct name, or not?", "author": "tobiasdiez", "createdAt": "2020-12-29T16:40:24Z", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java", "diffHunk": "@@ -275,7 +275,7 @@ public ContextAction(StandardActions command, LinkedFileViewModel linkedFile, Pr\n                         case MOVE_FILE_TO_FOLDER_AND_RENAME, MOVE_FILE_TO_FOLDER -> Bindings.createBooleanBinding(\n                                 () -> !linkedFile.getFile().isOnlineLink()\n                                         && linkedFile.getFile().findIn(databaseContext, preferencesService.getFilePreferences()).isPresent()\n-                                        && linkedFile.isGeneratedPathSameAsOriginal(),\n+                                        && !linkedFile.isGeneratedPathSameAsOriginal(),", "originalCommit": "57887baac14fd9102e10f009b4eb45439f735f36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgzMDcwMA==", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549830700", "bodyText": "Changed that.", "author": "Siedlerchr", "createdAt": "2020-12-29T20:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "46925314ce1d32af89efa6161b33b64f5e131c0d", "chunk": "diff --git a/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java b/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java\nindex b08d2f67c9..b005a1a062 100644\n--- a/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java\n+++ b/src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java\n\n@@ -267,12 +267,12 @@ public class LinkedFilesEditor extends HBox implements FieldEditorFX {\n \n             this.executable.bind(\n                     switch (command) {\n-                        case RENAME_FILE_TO_PATTERN -> Bindings.createBooleanBinding(\n+                        case RENAME_FILE_TO_PATTERN, MOVE_FILE_TO_FOLDER_AND_RENAME -> Bindings.createBooleanBinding(\n                                 () -> !linkedFile.getFile().isOnlineLink()\n                                         && linkedFile.getFile().findIn(databaseContext, preferencesService.getFilePreferences()).isPresent()\n                                         && !linkedFile.isGeneratedNameSameAsOriginal(),\n                                 linkedFile.getFile().linkProperty());\n-                        case MOVE_FILE_TO_FOLDER_AND_RENAME, MOVE_FILE_TO_FOLDER -> Bindings.createBooleanBinding(\n+                        case MOVE_FILE_TO_FOLDER -> Bindings.createBooleanBinding(\n                                 () -> !linkedFile.getFile().isOnlineLink()\n                                         && linkedFile.getFile().findIn(databaseContext, preferencesService.getFilePreferences()).isPresent()\n                                         && !linkedFile.isGeneratedPathSameAsOriginal(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MjExNA==", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549772114", "bodyText": "If it's hard to write tests, then it's a good indication that some refactoring should be done. Indeed, we use the mvvm pattern to make testing easy. Could you thus please add a constructor in the viewmodel that accepts a linkedFileHandler .", "author": "tobiasdiez", "createdAt": "2020-12-29T16:42:51Z", "path": "src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java", "diffHunk": "@@ -170,4 +168,28 @@ void downloadDoesNotOverwriteFileTypeExtension() throws MalformedURLException {\n         task.onFailure(Assertions::fail);\n         new CurrentThreadTaskExecutor().execute(task);\n     }\n+\n+    @Test\n+    void isNotSamePath() {\n+        linkedFile = new LinkedFile(\"desc\", tempFile, \"pdf\");\n+        databaseContext = mock(BibDatabaseContext.class);\n+        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\"); // use this variant, as we cannot mock the linkedFileHandler cause it's initialized inside the viewModel", "originalCommit": "57887baac14fd9102e10f009b4eb45439f735f36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MjYyNQ==", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549782625", "bodyText": "Actually, it's just the comment which is obsolete here, as the linkedFilesHandler is not required and can be tested separately (and already is). Would need the same mocking, so no difference.", "author": "Siedlerchr", "createdAt": "2020-12-29T17:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MjExNA=="}], "type": "inlineReview", "revised_code": {"commit": "46925314ce1d32af89efa6161b33b64f5e131c0d", "chunk": "diff --git a/src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java b/src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java\nindex 4eefee9768..7e37ca2430 100644\n--- a/src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java\n+++ b/src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java\n\n@@ -173,11 +173,10 @@ class LinkedFileViewModelTest {\n     void isNotSamePath() {\n         linkedFile = new LinkedFile(\"desc\", tempFile, \"pdf\");\n         databaseContext = mock(BibDatabaseContext.class);\n-        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\"); // use this variant, as we cannot mock the linkedFileHandler cause it's initialized inside the viewModel\n+        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\");\n         when(databaseContext.getFirstExistingFileDir(filePreferences)).thenReturn(Optional.of(Path.of(\"/home\")));\n \n         LinkedFileViewModel viewModel = new LinkedFileViewModel(linkedFile, entry, databaseContext, taskExecutor, dialogService, xmpPreferences, filePreferences, externalFileType);\n-\n         assertFalse(viewModel.isGeneratedPathSameAsOriginal());\n     }\n \n"}}, {"oid": "46925314ce1d32af89efa6161b33b64f5e131c0d", "url": "https://github.com/JabRef/jabref/commit/46925314ce1d32af89efa6161b33b64f5e131c0d", "message": "Allow rename and move when in file dir", "committedDate": "2020-12-29T17:23:38Z", "type": "commit"}]}