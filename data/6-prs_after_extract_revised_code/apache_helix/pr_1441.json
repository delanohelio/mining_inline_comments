{"pr_number": 1441, "pr_title": "Catch exception in group commit", "pr_createdAt": "2020-10-06T17:26:39Z", "pr_url": "https://github.com/apache/helix/pull/1441", "timeline": [{"oid": "ce95333419e6e0082b1b75938178941ff6ef49c0", "url": "https://github.com/apache/helix/commit/ce95333419e6e0082b1b75938178941ff6ef49c0", "message": "Catch exception in group commit", "committedDate": "2020-10-06T17:24:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3OTkyMw==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500479923", "bodyText": "I suggest covering all the accessor related calls inside the commit(). There should be 3 as I remember.", "author": "jiajunwang", "createdAt": "2020-10-06T17:40:01Z", "path": "helix-core/src/main/java/org/apache/helix/GroupCommit.java", "diffHunk": "@@ -112,6 +112,9 @@ public boolean commit(BaseDataAccessor<ZNRecord> accessor, int options, String k\n             merged = accessor.get(mergedKey, null, options);", "originalCommit": "ce95333419e6e0082b1b75938178941ff6ef49c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NjA5OA==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500486098", "bodyText": "What do you mean?", "author": "lei-xia", "createdAt": "2020-10-06T17:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3OTkyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTk1Nw==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500485957", "bodyText": "There are a few places that call DataAccessor.updateProperty but did not check the return results, we may want to double check whether it is appropriate (i.e, adding check there if it cares writing failure).\none example is:  HelixAdmin->addTypeToCustomizedStateConfig()", "author": "lei-xia", "createdAt": "2020-10-06T17:50:09Z", "path": "helix-core/src/main/java/org/apache/helix/GroupCommit.java", "diffHunk": "@@ -112,6 +112,9 @@ public boolean commit(BaseDataAccessor<ZNRecord> accessor, int options, String k\n             merged = accessor.get(mergedKey, null, options);\n           } catch (ZkNoNodeException e) {\n             // OK.\n+          } catch (Exception e) {", "originalCommit": "ce95333419e6e0082b1b75938178941ff6ef49c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MjIyNQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500492225", "bodyText": "Yep, I'll address them together with #1436", "author": "zhangmeng916", "createdAt": "2020-10-06T18:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5ODI4MA==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500498280", "bodyText": "Can you search all existing use cases (no related to customized state) and make sure there is no assumption on old behavior?", "author": "lei-xia", "createdAt": "2020-10-06T18:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMTcxNQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500531715", "bodyText": "This change only impacts group commit. As shown in the following, only current state and customized state use group commit.\ncase CURRENTSTATES:\ncase CUSTOMIZEDSTATES:\nsuccess = _groupCommit.commit(_baseDataAccessor, options, path, value.getRecord(), true);\nHowever, as you mentioned, for normal update, there're cases that don't really check response. I'll take a look to see whether they're reasonable.", "author": "zhangmeng916", "createdAt": "2020-10-06T19:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU4NjMzNQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500586335", "bodyText": "Done. Actually no impact on other function.", "author": "zhangmeng916", "createdAt": "2020-10-06T20:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTk1Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a2244a468105c4d378c3011dfc0ede7ff62f4c19", "url": "https://github.com/apache/helix/commit/a2244a468105c4d378c3011dfc0ede7ff62f4c19", "message": "catch for all accessor", "committedDate": "2020-10-06T18:00:40Z", "type": "commit"}, {"oid": "93b3d1091d74a8364325fb3cc7d4981ce5a0a2d6", "url": "https://github.com/apache/helix/commit/93b3d1091d74a8364325fb3cc7d4981ce5a0a2d6", "message": "check response", "committedDate": "2020-10-06T19:15:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzQ3OQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500597479", "bodyText": "Let us log this exception here.", "author": "kaisun2000", "createdAt": "2020-10-06T21:09:52Z", "path": "helix-core/src/main/java/org/apache/helix/GroupCommit.java", "diffHunk": "@@ -139,14 +142,22 @@ public boolean commit(BaseDataAccessor<ZNRecord> accessor, int options, String k\n           success = false;\n           while (++retry <= MAX_RETRY && !success) {\n             if (removeIfEmpty && merged.getMapFields().isEmpty()) {\n-              success = accessor.remove(mergedKey, options);\n+              try {\n+                success = accessor.remove(mergedKey, options);\n+              } catch (Exception e) {\n+                success = false;", "originalCommit": "93b3d1091d74a8364325fb3cc7d4981ce5a0a2d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwNTgzNA==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500605834", "bodyText": "if you look at the next line. It's already logged there.", "author": "zhangmeng916", "createdAt": "2020-10-06T21:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwOTQyOQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500609429", "bodyText": "The thing is that we did not log out the exception. At the time of investigation of production issue, you always want to know what is the exception thrown.\nCurrent code actually \"eat\" the exception from IO (zk access). This is normally not a good idea.\nhow about something like this?\n try {\n                success = accessor.remove(mergedKey, options);\n  } catch (Exception e) {\n                LOG.error (\" failed to remove {} from zk, retry it\", mergedkey, e);\n                return false;\n  }\n\n LOG.info( \"removed {}\", mergedkey);", "author": "kaisun2000", "createdAt": "2020-10-06T21:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzQ3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzY4OQ==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500597689", "bodyText": "log exception here.", "author": "kaisun2000", "createdAt": "2020-10-06T21:10:16Z", "path": "helix-core/src/main/java/org/apache/helix/GroupCommit.java", "diffHunk": "@@ -139,14 +142,22 @@ public boolean commit(BaseDataAccessor<ZNRecord> accessor, int options, String k\n           success = false;\n           while (++retry <= MAX_RETRY && !success) {\n             if (removeIfEmpty && merged.getMapFields().isEmpty()) {\n-              success = accessor.remove(mergedKey, options);\n+              try {\n+                success = accessor.remove(mergedKey, options);\n+              } catch (Exception e) {\n+                success = false;\n+              }\n               if (!success) {\n                 LOG.error(\"Fails to remove \" + mergedKey + \" from ZK, retry it!\");\n               } else {\n                 LOG.info(\"Removed \" + mergedKey);\n               }\n             } else {\n-              success = accessor.set(mergedKey, merged, options);\n+              try {\n+                success = accessor.set(mergedKey, merged, options);\n+              } catch (Exception e) {\n+                success = false;", "originalCommit": "93b3d1091d74a8364325fb3cc7d4981ce5a0a2d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwNTkyNA==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500605924", "bodyText": "It's logged next line.", "author": "zhangmeng916", "createdAt": "2020-10-06T21:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NzY4OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5ODQ1OA==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500598458", "bodyText": "This pull only deals with exception in group commit. How about the zkclient closed issue in callbackhandler?", "author": "kaisun2000", "createdAt": "2020-10-06T21:11:41Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1315,8 +1315,11 @@ public void addTypeToCustomizedStateConfig(String clusterName, String type) {\n     ZKHelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    accessor.updateProperty(keyBuilder.customizedStateConfig(),\n-        customizedStateConfigFromBuilder);\n+    if(!accessor.updateProperty(keyBuilder.customizedStateConfig(),", "originalCommit": "93b3d1091d74a8364325fb3cc7d4981ce5a0a2d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwNjcwNg==", "url": "https://github.com/apache/helix/pull/1441#discussion_r500606706", "bodyText": "The reason we need this PR is that we need to make sure updateProperty with group commit or non group commit have the same behavior. Currently non group commit update return error code, while group commit throws exception. This should not impact any callbackhandler existing logic.", "author": "zhangmeng916", "createdAt": "2020-10-06T21:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5ODQ1OA=="}], "type": "inlineReview", "revised_code": null}]}