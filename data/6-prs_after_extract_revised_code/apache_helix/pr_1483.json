{"pr_number": 1483, "pr_title": "Replace the system.out.printlns in the ThreadLeakageChecker with debug log or error log to avoid verbose output.", "pr_createdAt": "2020-10-23T17:30:29Z", "pr_url": "https://github.com/apache/helix/pull/1483", "timeline": [{"oid": "5aaca9c867d31b05896bda308162bc3e841bf7c5", "url": "https://github.com/apache/helix/commit/5aaca9c867d31b05896bda308162bc3e841bf7c5", "message": "Replace the system.out.printlns in the ThreadLeakageChecker with debug log or error log to avoid verbose output.\n\nThis is a pure test code change. No logic change.", "committedDate": "2020-10-23T17:27:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0MDA4NQ==", "url": "https://github.com/apache/helix/pull/1483#discussion_r511040085", "bodyText": "LOG.error(\"message\", e);?", "author": "huizhilu", "createdAt": "2020-10-23T17:42:41Z", "path": "helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java", "diffHunk": "@@ -160,7 +164,7 @@ public static boolean afterClassCheck(String classname) {\n               &&  ! \"system\".equals(p.getThreadGroup().getName())).\n           collect(Collectors.groupingBy(p -> p.getName()));\n     } catch (Exception e) {\n-      System.out.println(\"filtering thread failure with exception:\" + e.getStackTrace());\n+      LOG.error(\"Filtering thread failure with exception:\" + e.getStackTrace());", "originalCommit": "5aaca9c867d31b05896bda308162bc3e841bf7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMTEzNw==", "url": "https://github.com/apache/helix/pull/1483#discussion_r512201137", "bodyText": "Good point.", "author": "jiajunwang", "createdAt": "2020-10-26T19:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0MDA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "eacd79538335dd9a9d6099e5688fb488a8fdaa1c", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java b/helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java\nindex a6b06bec7..bc02d6cd6 100644\n--- a/helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java\n+++ b/helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java\n\n@@ -164,7 +164,7 @@ public class ThreadLeakageChecker {\n               &&  ! \"system\".equals(p.getThreadGroup().getName())).\n           collect(Collectors.groupingBy(p -> p.getName()));\n     } catch (Exception e) {\n-      LOG.error(\"Filtering thread failure with exception:\" + e.getStackTrace());\n+      LOG.error(\"Filtering thread failure with exception:\", e);\n     }\n \n     threadByName.entrySet().stream().forEach(entry -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEyNjk0Nw==", "url": "https://github.com/apache/helix/pull/1483#discussion_r512126947", "bodyText": "Nit: LOG.info may be better. Otherwise, it is hard for people using it to see the leaked thread if they wish as they need to turn on debug. which can result in a lot more other lines.", "author": "kaisun2000", "createdAt": "2020-10-26T17:07:00Z", "path": "helix-core/src/test/java/org/apache/helix/ThreadLeakageChecker.java", "diffHunk": "@@ -189,26 +193,26 @@ public static boolean afterClassCheck(String classname) {\n         boolean dumpThread = false;\n         if (categoryThreadCnt > limit) {\n           checkStatus = false;\n-          System.out.println(\n+          LOG.info(\n               \"Failure \" + threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n           dumpThread = true;\n         } else if (categoryThreadCnt > warningLimit) {\n-          System.out.println(\n+          LOG.info(\n               \"Warning \" + threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n           dumpThread = true;\n         } else {\n-          System.out.println(threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n+          LOG.info(threadCategory.getDescription() + \" has \" + categoryThreadCnt + \" thread\");\n         }\n         if (!dumpThread) {\n           continue;\n         }\n         // print first 100 thread names\n         int i = 0;\n         for (Thread t : threadByCat.get(threadCategory)) {\n-          System.out.println(i + \" thread:\" + t.getName());\n+          LOG.debug(i + \" thread:\" + t.getName());", "originalCommit": "5aaca9c867d31b05896bda308162bc3e841bf7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMTk2NA==", "url": "https://github.com/apache/helix/pull/1483#discussion_r512201964", "bodyText": "This is the main source of verbose output. Before we enforce it, I think it is not a good idea to output it. Note that for now, EVERY single test class prints these 100 lines.", "author": "jiajunwang", "createdAt": "2020-10-26T19:05:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEyNjk0Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "eacd79538335dd9a9d6099e5688fb488a8fdaa1c", "url": "https://github.com/apache/helix/commit/eacd79538335dd9a9d6099e5688fb488a8fdaa1c", "message": "Address comment.", "committedDate": "2020-10-26T19:06:04Z", "type": "commit"}]}