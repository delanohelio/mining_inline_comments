{"pr_number": 1111, "pr_title": "Add Cluster and instance level metrics to report the past-due incompleted message count.", "pr_createdAt": "2020-06-22T18:31:07Z", "pr_url": "https://github.com/apache/helix/pull/1111", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMTcwOQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r444511709", "bodyText": "This is not epoch time. epoch time is not at milisecond but second level.", "author": "junkaixue", "createdAt": "2020-06-23T21:12:33Z", "path": "helix-core/src/main/java/org/apache/helix/model/Message.java", "diffHunk": "@@ -522,12 +538,25 @@ public long getExecuteStartTimeStamp() {\n \n   /**\n    * Get the time that this message was created\n-   * @return UNIX timestamp\n+   * @return UNIX epoch timestamp", "originalCommit": "9abe2aa5a57771962e16bbf80c6d30f47bdd491b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc3MDIzMQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r446770231", "bodyText": "Fixed", "author": "lei-xia", "createdAt": "2020-06-29T04:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMTcwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "6553c726f1df277698198ef62767b4441caf7082", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/Message.java b/helix-core/src/main/java/org/apache/helix/model/Message.java\nindex 557b855b7..4ebfbe92f 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/Message.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/Message.java\n\n@@ -530,7 +530,7 @@ public class Message extends HelixProperty {\n \n   /**\n    * Get the time that execution occurred as a result of this message\n-   * @return UNIX timestamp\n+   * @return UNIX timestamp (in ms)\n    */\n   public long getExecuteStartTimeStamp() {\n     return _record.getLongField(Attributes.EXECUTE_START_TIMESTAMP.toString(), 0L);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjM5NQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r444512395", "bodyText": "Do we want to have this param for our internal message report or including for some user defined messages? It is hard to define the time from user perspective.", "author": "junkaixue", "createdAt": "2020-06-23T21:14:02Z", "path": "helix-core/src/main/java/org/apache/helix/model/Message.java", "diffHunk": "@@ -117,6 +120,11 @@\n   // Currently, the field is only used for invalidating messages in controller's message cache.\n   private boolean _expired = false;\n \n+  // The expect period of time (in ms) that a message should be completed, default 1 day\n+  public static final long MESSAGE_EXPECT_COMPLETION_PERIOD = HelixUtil", "originalCommit": "9abe2aa5a57771962e16bbf80c6d30f47bdd491b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM0ODY5NQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r446348695", "bodyText": "We have message.setExpectedCompleteTime(), if user would like to set their customer time for different message, they can do that, right?", "author": "lei-xia", "createdAt": "2020-06-26T18:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/Message.java b/helix-core/src/main/java/org/apache/helix/model/Message.java\nindex 557b855b7..7d9e0473d 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/Message.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/Message.java\n\n@@ -123,7 +124,7 @@ public class Message extends HelixProperty {\n   // The expect period of time (in ms) that a message should be completed, default 1 day\n   public static final long MESSAGE_EXPECT_COMPLETION_PERIOD = HelixUtil\n       .getSystemPropertyAsLong(SystemPropertyKeys.MESSAGE_EXPECTED_COMPLETION_PERIOD,\n-          24 * 60 * 60 * 1000 /* 1 day in ms */);\n+          TimeUnit.DAYS.toMillis(1));\n \n   /**\n    * Compares the creation time of two Messages\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjk5Ng==", "url": "https://github.com/apache/helix/pull/1111#discussion_r444512996", "bodyText": "We can combine it as:\nlong completionDue = _record.getLongField(Attributes.COMPLETION_DUE_TIMESTAMP.name(), getCreateTimeStamp() + MESSAGE_EXPECT_COMPLETION_PERIOD);", "author": "junkaixue", "createdAt": "2020-06-23T21:15:15Z", "path": "helix-core/src/main/java/org/apache/helix/model/Message.java", "diffHunk": "@@ -522,12 +538,25 @@ public long getExecuteStartTimeStamp() {\n \n   /**\n    * Get the time that this message was created\n-   * @return UNIX timestamp\n+   * @return UNIX epoch timestamp\n    */\n   public long getCreateTimeStamp() {\n     return _record.getLongField(Attributes.CREATE_TIMESTAMP.toString(), 0L);\n   }\n \n+  /**\n+   * Get the time that the message was expected to be completed\n+   * @return UNIX epoch timestamp\n+   */\n+  public long getCompletionDueTimeStamp() {\n+    long completionDue = _record.getLongField(Attributes.COMPLETION_DUE_TIMESTAMP.name(), 0L);\n+    if (completionDue == 0) {\n+      completionDue = getCreateTimeStamp() + MESSAGE_EXPECT_COMPLETION_PERIOD;\n+    }", "originalCommit": "9abe2aa5a57771962e16bbf80c6d30f47bdd491b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM0OTMwNQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r446349305", "bodyText": "I considered this, but think to avoid calling getCreateTimeStamp() everytime since it involves string passing, may not be big deal though.", "author": "lei-xia", "createdAt": "2020-06-26T18:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM1ODE5Mg==", "url": "https://github.com/apache/helix/pull/1111#discussion_r447358192", "bodyText": "To be safe, shall we define a constant COMPLETION_DUE_TIMESTAMP_NOT_SET = -1 for the default value?", "author": "jiajunwang", "createdAt": "2020-06-30T01:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6553c726f1df277698198ef62767b4441caf7082", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/Message.java b/helix-core/src/main/java/org/apache/helix/model/Message.java\nindex 557b855b7..4ebfbe92f 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/Message.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/Message.java\n\n@@ -530,7 +530,7 @@ public class Message extends HelixProperty {\n \n   /**\n    * Get the time that execution occurred as a result of this message\n-   * @return UNIX timestamp\n+   * @return UNIX timestamp (in ms)\n    */\n   public long getExecuteStartTimeStamp() {\n     return _record.getLongField(Attributes.EXECUTE_START_TIMESTAMP.toString(), 0L);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMzM5NQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r444513395", "bodyText": "Do we need any validation here? For example, it timestamp already < currentmilisecond.", "author": "junkaixue", "createdAt": "2020-06-23T21:16:07Z", "path": "helix-core/src/main/java/org/apache/helix/model/Message.java", "diffHunk": "@@ -173,6 +181,14 @@ public void setCreateTimeStamp(long timestamp) {\n     _record.setLongField(Attributes.CREATE_TIMESTAMP.toString(), timestamp);\n   }\n \n+  /**\n+   * Set the time that the message was expected to be completed\n+   * @param timestamp a UNIX epoch timestamp\n+   */\n+  public void setCompletionDueTimeStamp(long timestamp) {\n+    _record.setLongField(Attributes.COMPLETION_DUE_TIMESTAMP.name(), timestamp);", "originalCommit": "9abe2aa5a57771962e16bbf80c6d30f47bdd491b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM1NTY4NQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r446355685", "bodyText": "Is that a problem, for example, I may set an time before current time to invalid the message immediately?", "author": "lei-xia", "createdAt": "2020-06-26T18:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMzM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM1NjUzNQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r447356535", "bodyText": "Is this method set by the controller or the participant?\nIf controller, can we just update it when set the create time? So we don't need to consider validating.\nOr, if the messages are created with different expected run time, then we can add the expected run time as the parameter. That logic would easier to justify (and easier to valid) compared with passing the exact due timestamp.\nAnd I am thinking that it might be better if the participant updates it. Since 1. participant knows the estimation better. 2. if the participant has not read the message yet, then we probably don't want to mark it as a past-due message.", "author": "jiajunwang", "createdAt": "2020-06-30T01:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMzM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6553c726f1df277698198ef62767b4441caf7082", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/Message.java b/helix-core/src/main/java/org/apache/helix/model/Message.java\nindex 557b855b7..4ebfbe92f 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/Message.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/Message.java\n\n@@ -175,7 +175,7 @@ public class Message extends HelixProperty {\n \n   /**\n    * Set the time that the message was created\n-   * @param timestamp a UNIX timestamp\n+   * @param timestamp a UNIX timestamp (in ms)\n    */\n   public void setCreateTimeStamp(long timestamp) {\n     _record.setLongField(Attributes.CREATE_TIMESTAMP.toString(), timestamp);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNDI3MA==", "url": "https://github.com/apache/helix/pull/1111#discussion_r444514270", "bodyText": "pastDueMsgCount", "author": "junkaixue", "createdAt": "2020-06-23T21:17:56Z", "path": "helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java", "diffHunk": "@@ -289,6 +288,32 @@ public void setClusterInstanceStatus(Set<String> liveInstanceSet, Set<String> in\n           }\n         }\n       }\n+\n+      // update all message related gauges\n+      long now = System.currentTimeMillis();\n+      long totalMsgQueueSize = 0L;\n+      long maxInstanceMsgQueueSize = 0L;\n+      long totalPastdueMsgSize = 0L;\n+      for (String instance : instanceMessageMap.keySet()) {\n+        Set<Message> messages = instanceMessageMap.get(instance);\n+        InstanceMonitor bean = _instanceMonitorMap.get(instance);\n+\n+        long msgQueueSize = messages.size();\n+        bean.updateMessageQueueSize(msgQueueSize);\n+        totalMsgQueueSize += msgQueueSize;\n+        if (msgQueueSize > maxInstanceMsgQueueSize) {\n+          maxInstanceMsgQueueSize = msgQueueSize;\n+        }\n+\n+        long pastdueMsgCount = messages.stream()", "originalCommit": "9abe2aa5a57771962e16bbf80c6d30f47bdd491b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6553c726f1df277698198ef62767b4441caf7082", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\nindex b5050ca0e..078c78e68 100644\n--- a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n+++ b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n\n@@ -293,7 +293,7 @@ public class ClusterStatusMonitor implements ClusterStatusMonitorMBean {\n       long now = System.currentTimeMillis();\n       long totalMsgQueueSize = 0L;\n       long maxInstanceMsgQueueSize = 0L;\n-      long totalPastdueMsgSize = 0L;\n+      long totalPastDueMsgSize = 0L;\n       for (String instance : instanceMessageMap.keySet()) {\n         Set<Message> messages = instanceMessageMap.get(instance);\n         InstanceMonitor bean = _instanceMonitorMap.get(instance);\n"}}, {"oid": "6553c726f1df277698198ef62767b4441caf7082", "url": "https://github.com/apache/helix/commit/6553c726f1df277698198ef62767b4441caf7082", "message": "Add Cluster and instance level metrics to report the number of messages that have not been completed after their expected completion time.", "committedDate": "2020-06-29T02:38:02Z", "type": "forcePushed"}, {"oid": "b66d8b5dc863f5dfc162324b19c6d7ef2999015c", "url": "https://github.com/apache/helix/commit/b66d8b5dc863f5dfc162324b19c6d7ef2999015c", "message": "Add Cluster and instance level metrics to report the number of messages that have not been completed after their expected completion time\n\nChanges in this commit:\n1) Add expected completion time field to Message, set the default expected completion period to be 1 day (can be configurable via system property).\n2) Add Past-Due incomplete message gauge in both cluster and instance monitor.", "committedDate": "2020-06-29T04:59:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM2MTI1Mw==", "url": "https://github.com/apache/helix/pull/1111#discussion_r447361253", "bodyText": "nit, can we organically add the new logic to the existing one. As you can see the logic is,\n\nensure instance mbeans created\ndo the metric data calculation\nupdate the metrics\n\nCan we split the new logic into 2 parts and put the logic to the corresponding sections 2 and 3?\n\nWe have some check regarding the monitor objects there.\nWe want to keep the structure of the code.", "author": "jiajunwang", "createdAt": "2020-06-30T01:54:43Z", "path": "helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java", "diffHunk": "@@ -289,6 +288,32 @@ public void setClusterInstanceStatus(Set<String> liveInstanceSet, Set<String> in\n           }\n         }\n       }\n+\n+      // update all message related gauges", "originalCommit": "b66d8b5dc863f5dfc162324b19c6d7ef2999015c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwNjg2Mg==", "url": "https://github.com/apache/helix/pull/1111#discussion_r448606862", "bodyText": "Merged the logic into existing instance bean update loop.", "author": "lei-xia", "createdAt": "2020-07-01T20:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM2MTI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\nindex 078c78e68..39ef1e192 100644\n--- a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n+++ b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n\n@@ -289,28 +313,7 @@ public class ClusterStatusMonitor implements ClusterStatusMonitorMBean {\n         }\n       }\n \n-      // update all message related gauges\n-      long now = System.currentTimeMillis();\n-      long totalMsgQueueSize = 0L;\n-      long maxInstanceMsgQueueSize = 0L;\n-      long totalPastDueMsgSize = 0L;\n-      for (String instance : instanceMessageMap.keySet()) {\n-        Set<Message> messages = instanceMessageMap.get(instance);\n-        InstanceMonitor bean = _instanceMonitorMap.get(instance);\n-\n-        long msgQueueSize = messages.size();\n-        bean.updateMessageQueueSize(msgQueueSize);\n-        totalMsgQueueSize += msgQueueSize;\n-        if (msgQueueSize > maxInstanceMsgQueueSize) {\n-          maxInstanceMsgQueueSize = msgQueueSize;\n-        }\n-\n-        long pastDueMsgCount = messages.stream()\n-            .filter(m -> (m.getCompletionDueTimeStamp() <= now)).count();\n-        bean.updatePastDueMessageGauge(pastDueMsgCount);\n-        totalPastDueMsgSize += pastDueMsgCount;\n-      }\n-\n+      // Update cluster level message related gauges\n       _maxInstanceMsgQueueSize.set(maxInstanceMsgQueueSize);\n       _totalMsgQueueSize.set(totalMsgQueueSize);\n       _totalPastDueMsgSize.set(totalPastDueMsgSize);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM2NDE4NQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r447364185", "bodyText": "I don't have strong preference here.\n\nShall protected or package-private enough here?\nOr, on the other hand, with these two methods made to the public, we can avoid several test codes using INSTANCE_DN_KEY and RESOURCE_DN_KEY directly. Not a must in this PR, though.", "author": "jiajunwang", "createdAt": "2020-06-30T02:05:01Z", "path": "helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java", "diffHunk": "@@ -881,7 +910,7 @@ public String clusterBeanName() {\n    * @param instanceName\n    * @return instance bean name\n    */\n-  private String getInstanceBeanName(String instanceName) {\n+  public String getInstanceBeanName(String instanceName) {", "originalCommit": "b66d8b5dc863f5dfc162324b19c6d7ef2999015c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwNzAyOQ==", "url": "https://github.com/apache/helix/pull/1111#discussion_r448607029", "bodyText": "I changed all getXXXBeanName() methods to protected.", "author": "lei-xia", "createdAt": "2020-07-01T20:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM2NDE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\nindex 078c78e68..39ef1e192 100644\n--- a/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n+++ b/helix-core/src/main/java/org/apache/helix/monitoring/mbeans/ClusterStatusMonitor.java\n\n@@ -910,7 +913,7 @@ public class ClusterStatusMonitor implements ClusterStatusMonitorMBean {\n    * @param instanceName\n    * @return instance bean name\n    */\n-  public String getInstanceBeanName(String instanceName) {\n+  protected String getInstanceBeanName(String instanceName) {\n     return String.format(\"%s,%s=%s\", clusterBeanName(), INSTANCE_DN_KEY, instanceName);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzAwMg==", "url": "https://github.com/apache/helix/pull/1111#discussion_r447883002", "bodyText": "This is legacy way of converting times. Better to use TimeUnit.DAYS.toMillis(1);", "author": "junkaixue", "createdAt": "2020-06-30T18:09:39Z", "path": "helix-core/src/main/java/org/apache/helix/model/Message.java", "diffHunk": "@@ -117,6 +120,11 @@\n   // Currently, the field is only used for invalidating messages in controller's message cache.\n   private boolean _expired = false;\n \n+  // The expect period of time (in ms) that a message should be completed, default 1 day\n+  public static final long MESSAGE_EXPECT_COMPLETION_PERIOD = HelixUtil\n+      .getSystemPropertyAsLong(SystemPropertyKeys.MESSAGE_EXPECTED_COMPLETION_PERIOD,\n+          24 * 60 * 60 * 1000 /* 1 day in ms */);", "originalCommit": "b66d8b5dc863f5dfc162324b19c6d7ef2999015c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5NDgxMA==", "url": "https://github.com/apache/helix/pull/1111#discussion_r448594810", "bodyText": "Neat.", "author": "lei-xia", "createdAt": "2020-07-01T20:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/Message.java b/helix-core/src/main/java/org/apache/helix/model/Message.java\nindex 4ebfbe92f..7d9e0473d 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/Message.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/Message.java\n\n@@ -123,7 +124,7 @@ public class Message extends HelixProperty {\n   // The expect period of time (in ms) that a message should be completed, default 1 day\n   public static final long MESSAGE_EXPECT_COMPLETION_PERIOD = HelixUtil\n       .getSystemPropertyAsLong(SystemPropertyKeys.MESSAGE_EXPECTED_COMPLETION_PERIOD,\n-          24 * 60 * 60 * 1000 /* 1 day in ms */);\n+          TimeUnit.DAYS.toMillis(1));\n \n   /**\n    * Compares the creation time of two Messages\n"}}, {"oid": "6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "url": "https://github.com/apache/helix/commit/6e25e7d78454ecd8526703ec1869d3dd6eb501bd", "message": "Add Cluster and instance level metrics to report the number of messages that have not been completed after their expected completion time\n\nChanges in this commit:\n1) Add expected completion time field to Message, set the default expected completion period to be 1 day (can be configurable via system property).\n2) Add Past-Due incomplete message gauge in both cluster and instance monitor.", "committedDate": "2020-07-01T20:35:55Z", "type": "forcePushed"}, {"oid": "3fc870815219d910c6e357b6b4ba843b2244c776", "url": "https://github.com/apache/helix/commit/3fc870815219d910c6e357b6b4ba843b2244c776", "message": "Shutdown the TaskStateModelFactory threads created in the tests. (#1140)\n\nThe TaskStateModelFactory initialization creates a thread pool. The expectation is that the application code closes the thread pool and the threads when the participant instance is shutting down. In most cases, this means the JVM is going to be shutdown. So this operation is not a must. However, in the test cases, these thread pools leak thousands of threads.\r\nThis PR adds cleanup logic to shutdown thread pools that are created for the participant instances. Note that there is still thread leakage when the participants are created separately instead of using the general methods.", "committedDate": "2020-07-07T18:05:56Z", "type": "forcePushed"}, {"oid": "9b29a6e2f13344fa43f81d2bb21845cb65a83c7d", "url": "https://github.com/apache/helix/commit/9b29a6e2f13344fa43f81d2bb21845cb65a83c7d", "message": "Add Cluster and instance level metrics to report the number of messages that have not been completed after their expected completion time\n\nChanges in this commit:\n1) Add expected completion time field to Message, set the default expected completion period to be 1 day (can be configurable via system property).\n2) Add Past-Due incomplete message gauge in both cluster and instance monitor.", "committedDate": "2020-07-17T20:11:33Z", "type": "commit"}, {"oid": "9b29a6e2f13344fa43f81d2bb21845cb65a83c7d", "url": "https://github.com/apache/helix/commit/9b29a6e2f13344fa43f81d2bb21845cb65a83c7d", "message": "Add Cluster and instance level metrics to report the number of messages that have not been completed after their expected completion time\n\nChanges in this commit:\n1) Add expected completion time field to Message, set the default expected completion period to be 1 day (can be configurable via system property).\n2) Add Past-Due incomplete message gauge in both cluster and instance monitor.", "committedDate": "2020-07-17T20:11:33Z", "type": "forcePushed"}]}