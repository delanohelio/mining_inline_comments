{"pr_number": 1579, "pr_title": "Task Current State Migration: helix-rest, utils, tests changes", "pr_createdAt": "2020-12-08T23:06:05Z", "pr_url": "https://github.com/apache/helix/pull/1579", "timeline": [{"oid": "9d3963bbba3fb7b465a9cd249300e843978088f8", "url": "https://github.com/apache/helix/commit/9d3963bbba3fb7b465a9cd249300e843978088f8", "message": "revert non essential changes", "committedDate": "2020-12-08T22:54:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjA5Mg==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052092", "bodyText": "This is fine, I guess you can just deprecate the older one.", "author": "jiajunwang", "createdAt": "2020-12-09T06:51:28Z", "path": "helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java", "diffHunk": "@@ -65,10 +66,10 @@ StringRepresentation getInstanceCurrentStatesRepresentation(String clusterName,\n     String instanceSessionId =\n         ClusterRepresentationUtil.getInstanceSessionId(zkClient, clusterName, instanceName);\n \n-    String message =\n-        ClusterRepresentationUtil\n-            .getInstancePropertyNameListAsString(zkClient, clusterName, instanceName,\n-                PropertyType.CURRENTSTATES, instanceSessionId, MediaType.APPLICATION_JSON);\n+    String message = ClusterRepresentationUtil\n+        .getMultiInstancePropertyNameListsAsString(zkClient, clusterName, instanceName,", "originalCommit": "9d3963bbba3fb7b465a9cd249300e843978088f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUwNTgwOA==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539505808", "bodyText": "You mean deprecate getInstancePropertyNameListAsString? Technically it does different things from this new method, so is it better to keep it?", "author": "NealSun96", "createdAt": "2020-12-09T17:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "74da32be1a891ca16215d4952a6c8d2343920c71", "chunk": "diff --git a/helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java b/helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java\nindex 240ffe447..efb59f500 100644\n--- a/helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java\n+++ b/helix-admin-webapp/src/main/java/org/apache/helix/webapp/resources/CurrentStatesResource.java\n\n@@ -66,10 +65,10 @@ public class CurrentStatesResource extends ServerResource {\n     String instanceSessionId =\n         ClusterRepresentationUtil.getInstanceSessionId(zkClient, clusterName, instanceName);\n \n-    String message = ClusterRepresentationUtil\n-        .getMultiInstancePropertyNameListsAsString(zkClient, clusterName, instanceName,\n-            Arrays.asList(PropertyType.CURRENTSTATES, PropertyType.TASKCURRENTSTATES),\n-            instanceSessionId);\n+    String message =\n+        ClusterRepresentationUtil\n+            .getInstancePropertyNameListAsString(zkClient, clusterName, instanceName,\n+                PropertyType.CURRENTSTATES, instanceSessionId, MediaType.APPLICATION_JSON);\n \n     StringRepresentation representation =\n         new StringRepresentation(message, MediaType.APPLICATION_JSON);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539052638", "bodyText": "A new controller supports the older participants. So this should not be a required path, no?", "author": "jiajunwang", "createdAt": "2020-12-09T06:52:45Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -153,6 +153,7 @@ public static boolean isInstanceSetup(RealmAwareZkClient zkclient, String cluste\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n+      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));", "originalCommit": "9d3963bbba3fb7b465a9cd249300e843978088f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NDY1MQ==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539454651", "bodyText": "You're right.", "author": "NealSun96", "createdAt": "2020-12-09T16:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzNTQ0Mw==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539535443", "bodyText": "+1", "author": "alirezazamani", "createdAt": "2020-12-09T18:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MjYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\nindex 597756627..101583476 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\n\n@@ -153,7 +153,6 @@ public final class ZKUtil {\n       requiredPaths.add(PropertyPathBuilder.instanceConfig(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceMessage(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceCurrentState(clusterName, instanceName));\n-      requiredPaths.add(PropertyPathBuilder.instanceTaskCurrentState(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceStatusUpdate(clusterName, instanceName));\n       requiredPaths.add(PropertyPathBuilder.instanceError(clusterName, instanceName));\n       boolean isValid = true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MzQ0NQ==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539053445", "bodyText": "Can we change to use the multi remove method that is also supported by the accessor?", "author": "jiajunwang", "createdAt": "2020-12-09T06:54:39Z", "path": "helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java", "diffHunk": "@@ -124,15 +125,21 @@ public ZNRecord update(ZNRecord currentData) {\n       LOG.info(String.format(\"Processing cleaning current state for instance: %s\", instanceName));\n       List<String> currentStateNames =\n           accessor.getChildNames(accessor.keyBuilder().currentStates(instanceName, session));\n-      for (String currentStateName : currentStateNames) {\n-        PropertyKey key =\n-            accessor.keyBuilder().currentState(instanceName, session, currentStateName);\n+      List<String> taskCurrentStateNames =\n+          accessor.getChildNames(accessor.keyBuilder().taskCurrentStates(instanceName, session));\n+      List<PropertyKey> allCurrentStateKeys = new ArrayList<>();\n+      currentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().currentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      taskCurrentStateNames.stream()\n+          .map(name -> accessor.keyBuilder().taskCurrentState(instanceName, session, name))\n+          .forEach(allCurrentStateKeys::add);\n+      for (PropertyKey key : allCurrentStateKeys) {\n         accessor.getBaseDataAccessor().update(key.getPath(), updater, AccessOption.PERSISTENT);\n         CurrentState currentState = accessor.getProperty(key);\n         if (currentState.getPartitionStateMap().size() == 0) {\n           accessor.getBaseDataAccessor().remove(key.getPath(), AccessOption.PERSISTENT);", "originalCommit": "9d3963bbba3fb7b465a9cd249300e843978088f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ5OTI2Mg==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539499262", "bodyText": "Sure, factoring out the remove to be done after filtering.", "author": "NealSun96", "createdAt": "2020-12-09T17:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MzQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java b/helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java\nindex 06bbedb63..31c3cc736 100644\n--- a/helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java\n+++ b/helix-core/src/main/java/org/apache/helix/tools/commandtools/CurrentStateCleanUp.java\n\n@@ -134,15 +134,18 @@ public class CurrentStateCleanUp {\n       taskCurrentStateNames.stream()\n           .map(name -> accessor.keyBuilder().taskCurrentState(instanceName, session, name))\n           .forEach(allCurrentStateKeys::add);\n+\n+      List<String> pathsToRemove = new ArrayList<>();\n       for (PropertyKey key : allCurrentStateKeys) {\n         accessor.getBaseDataAccessor().update(key.getPath(), updater, AccessOption.PERSISTENT);\n         CurrentState currentState = accessor.getProperty(key);\n         if (currentState.getPartitionStateMap().size() == 0) {\n-          accessor.getBaseDataAccessor().remove(key.getPath(), AccessOption.PERSISTENT);\n+          pathsToRemove.add(key.getPath());\n           LOG.info(String.format(\"Remove current state for path %s\", key.getPath()));\n         }\n-\n       }\n+\n+      accessor.getBaseDataAccessor().remove(pathsToRemove, AccessOption.PERSISTENT);\n     } catch (Exception e) {\n       e.printStackTrace();\n     } finally {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1NDM2OA==", "url": "https://github.com/apache/helix/pull/1579#discussion_r539054368", "bodyText": "nit, could you also update the method comment?\n\"at least 1 resource\" -> \"at least 1 resource or task\", something like this.", "author": "jiajunwang", "createdAt": "2020-12-09T06:56:57Z", "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -104,9 +104,8 @@ public static boolean hasResourceAssigned(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      List<String> resourceNames = dataAccessor.getChildNames(propertyKeyBuilder.currentStates(instanceName, sessionId));\n-      for (String resourceName : resourceNames) {\n-        PropertyKey currentStateKey = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n+      for (PropertyKey currentStateKey : getAllCurrentStateKeys(dataAccessor, instanceName,", "originalCommit": "9d3963bbba3fb7b465a9cd249300e843978088f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java b/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\nindex 6d2e120cb..fb3c4f9a4 100644\n--- a/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\n+++ b/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\n\n@@ -104,8 +104,9 @@ public class InstanceValidationUtil {\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      for (PropertyKey currentStateKey : getAllCurrentStateKeys(dataAccessor, instanceName,\n-          sessionId)) {\n+      List<String> resourceNames = dataAccessor.getChildNames(propertyKeyBuilder.currentStates(instanceName, sessionId));\n+      for (String resourceName : resourceNames) {\n+        PropertyKey currentStateKey = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n         CurrentState currentState = dataAccessor.getProperty(currentStateKey);\n         if (currentState != null && currentState.getPartitionStateMap().size() > 0) {\n           return true;\n"}}, {"oid": "b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "url": "https://github.com/apache/helix/commit/b0d0cb84da704e3c14dd4ff2d62d0ee3d2fa6bde", "message": "Address comments", "committedDate": "2020-12-09T18:58:10Z", "type": "commit"}, {"oid": "74da32be1a891ca16215d4952a6c8d2343920c71", "url": "https://github.com/apache/helix/commit/74da32be1a891ca16215d4952a6c8d2343920c71", "message": "revert webapp changes", "committedDate": "2020-12-09T23:05:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTM5MA==", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545390", "bodyText": "This is not necessary to instance validation util. Because this management API is used for check real data resource. Our split could even better to filter out the TASK current state.", "author": "junkaixue", "createdAt": "2020-12-10T22:31:41Z", "path": "helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java", "diffHunk": "@@ -188,11 +187,7 @@ public static boolean hasErrorPartitions(HelixDataAccessor dataAccessor, String\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      PropertyKey currentStatesKey = propertyKeyBuilder.currentStates(instanceName, sessionId);\n-      List<String> resourceNames = dataAccessor.getChildNames(currentStatesKey);\n-      for (String resourceName : resourceNames) {\n-        PropertyKey key = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n-\n+      for (PropertyKey key : getAllCurrentStateKeys(dataAccessor, instanceName, sessionId)) {", "originalCommit": "74da32be1a891ca16215d4952a6c8d2343920c71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5MTY0NA==", "url": "https://github.com/apache/helix/pull/1579#discussion_r540591644", "bodyText": "@dasahcc removed", "author": "NealSun96", "createdAt": "2020-12-11T00:04:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTM5MA=="}], "type": "inlineReview", "revised_code": {"commit": "d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java b/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\nindex 979a2f242..fb3c4f9a4 100644\n--- a/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\n+++ b/helix-core/src/main/java/org/apache/helix/util/InstanceValidationUtil.java\n\n@@ -187,7 +188,11 @@ public class InstanceValidationUtil {\n     if (liveInstance != null) {\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      for (PropertyKey key : getAllCurrentStateKeys(dataAccessor, instanceName, sessionId)) {\n+      PropertyKey currentStatesKey = propertyKeyBuilder.currentStates(instanceName, sessionId);\n+      List<String> resourceNames = dataAccessor.getChildNames(currentStatesKey);\n+      for (String resourceName : resourceNames) {\n+        PropertyKey key = propertyKeyBuilder.currentState(instanceName, sessionId, resourceName);\n+\n         CurrentState currentState = dataAccessor.getProperty(key);\n         if (currentState != null\n             && currentState.getPartitionStateMap().containsValue(HelixDefinedState.ERROR.name())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTk2Mw==", "url": "https://github.com/apache/helix/pull/1579#discussion_r540545963", "bodyText": "Same here. We dont care about tasks for management API.", "author": "junkaixue", "createdAt": "2020-12-10T22:32:44Z", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java", "diffHunk": "@@ -119,19 +120,25 @@ public InstanceInfo getInstanceInfo(String clusterId, String instanceName,\n       instanceInfoBuilder.liveInstance(liveInstance.getRecord());\n       String sessionId = liveInstance.getEphemeralOwner();\n \n+      Map<String, PropertyKey> resourcePropertyKeyPair = new HashMap<>();", "originalCommit": "74da32be1a891ca16215d4952a6c8d2343920c71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "chunk": "diff --git a/helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java b/helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java\nindex 5bf2e88a4..2c8458d98 100644\n--- a/helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java\n+++ b/helix-rest/src/main/java/org/apache/helix/rest/server/service/InstanceServiceImpl.java\n\n@@ -120,25 +119,19 @@ public class InstanceServiceImpl implements InstanceService {\n       instanceInfoBuilder.liveInstance(liveInstance.getRecord());\n       String sessionId = liveInstance.getEphemeralOwner();\n \n-      Map<String, PropertyKey> resourcePropertyKeyPair = new HashMap<>();\n       List<String> resourceNames = _dataAccessor\n           .getChildNames(_dataAccessor.keyBuilder().currentStates(instanceName, sessionId));\n-      resourceNames.forEach(resourceName -> resourcePropertyKeyPair.put(resourceName,\n-          _dataAccessor.keyBuilder().currentState(instanceName, sessionId, resourceName)));\n-      List<String> taskResourceNames = _dataAccessor\n-          .getChildNames(_dataAccessor.keyBuilder().taskCurrentStates(instanceName, sessionId));\n-      taskResourceNames.forEach(resourceName -> resourcePropertyKeyPair.put(resourceName,\n-          _dataAccessor.keyBuilder().taskCurrentState(instanceName, sessionId, resourceName)));\n-\n+      instanceInfoBuilder.resources(resourceNames);\n       List<String> partitions = new ArrayList<>();\n-      for (Map.Entry<String, PropertyKey> entry : resourcePropertyKeyPair.entrySet()) {\n-        CurrentState currentState = _dataAccessor.getProperty(entry.getValue());\n+      for (String resourceName : resourceNames) {\n+        CurrentState currentState = _dataAccessor.getProperty(\n+            _dataAccessor.keyBuilder().currentState(instanceName, sessionId, resourceName));\n         if (currentState != null && currentState.getPartitionStateMap() != null) {\n           partitions.addAll(currentState.getPartitionStateMap().keySet());\n         } else {\n           LOG.warn(\n               \"Current state is either null or partitionStateMap is missing. InstanceName: {}, SessionId: {}, ResourceName: {}\",\n-              instanceName, sessionId, entry.getKey());\n+              instanceName, sessionId, resourceName);\n         }\n       }\n       instanceInfoBuilder.partitions(partitions);\n"}}, {"oid": "d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "url": "https://github.com/apache/helix/commit/d5e2c19dc341ba89d1955d4c8ffe367e8630cd9e", "message": "Revert manage util changes", "committedDate": "2020-12-11T00:04:14Z", "type": "commit"}]}