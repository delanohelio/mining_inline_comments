{"pr_number": 1447, "pr_title": "Replace Thread.sleep() with TestHelper.verify() to fix the flaky unit tests", "pr_createdAt": "2020-10-07T00:04:40Z", "pr_url": "https://github.com/apache/helix/pull/1447", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3Mjg0Nw==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500672847", "bodyText": "nit, \"== true\" is not necessary.", "author": "jiajunwang", "createdAt": "2020-10-07T00:40:33Z", "path": "helix-core/src/test/java/org/apache/helix/TestZKCallback.java", "diffHunk": "@@ -165,8 +166,10 @@ public void testInvocation() throws Exception {\n \n       ExternalView extView = new ExternalView(\"db-12345\");\n       accessor.setProperty(keyBuilder.externalView(\"db-12345\"), extView);\n-      Thread.sleep(100);\n-      AssertJUnit.assertTrue(testListener.externalViewChangeReceived);\n+      boolean result = TestHelper.verify(() -> {\n+        return testListener.externalViewChangeReceived == true;", "originalCommit": "9a7be1ae37325e48f0061d84c4259ad859fbf5fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyOTUwNA==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500729504", "bodyText": "removed all", "author": "kaisun2000", "createdAt": "2020-10-07T04:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3Mjg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/TestZKCallback.java b/helix-core/src/test/java/org/apache/helix/TestZKCallback.java\nindex c2278c0c9..d97471c0f 100644\n--- a/helix-core/src/test/java/org/apache/helix/TestZKCallback.java\n+++ b/helix-core/src/test/java/org/apache/helix/TestZKCallback.java\n\n@@ -167,7 +167,7 @@ public class TestZKCallback extends ZkUnitTestBase {\n       ExternalView extView = new ExternalView(\"db-12345\");\n       accessor.setProperty(keyBuilder.externalView(\"db-12345\"), extView);\n       boolean result = TestHelper.verify(() -> {\n-        return testListener.externalViewChangeReceived == true;\n+        return testListener.externalViewChangeReceived;\n       }, TestHelper.WAIT_DURATION);\n       Assert.assertTrue(result);\n       testListener.Reset();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3Mjk4OQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500672989", "bodyText": "nit, \"== true\" is not necessary.", "author": "jiajunwang", "createdAt": "2020-10-07T00:41:03Z", "path": "helix-core/src/test/java/org/apache/helix/TestListenerCallback.java", "diffHunk": "@@ -131,22 +131,28 @@ public void testConfigChangeListeners() throws Exception {\n     TestConfigListener listener = new TestConfigListener();\n     listener.reset();\n     _manager.addInstanceConfigChangeListener(listener);\n-    Assert.assertTrue(listener._instanceConfigChanged,\n-        \"Should get initial instanceConfig callback invoked\");\n+    boolean result = TestHelper.verify(()-> {\n+      return listener._instanceConfigChanged == true;", "originalCommit": "9a7be1ae37325e48f0061d84c4259ad859fbf5fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyOTQ1MA==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500729450", "bodyText": "removed all.", "author": "kaisun2000", "createdAt": "2020-10-07T04:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3Mjk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java b/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\nindex bea5d3517..88efebb5b 100644\n--- a/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\n+++ b/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\n\n@@ -132,7 +132,7 @@ public class TestListenerCallback extends ZkUnitTestBase {\n     listener.reset();\n     _manager.addInstanceConfigChangeListener(listener);\n     boolean result = TestHelper.verify(()-> {\n-      return listener._instanceConfigChanged == true;\n+      return listener._instanceConfigChanged;\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(result, \"Should get initial instanceConfig callback invoked\");\n     Assert.assertEquals(listener._instanceConfigs.size(), _numNodes,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MzU5Mg==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500673592", "bodyText": "This reminds me that we are not testing for the latency for now. For example, if the callback does not happen within one second, then we may want to fail the test.\nWill it be a good idea to have at least 2 Duration?\nPipeline_Wait_Duration = 60000;\nCallback_Wait_Duration = 2000;", "author": "jiajunwang", "createdAt": "2020-10-07T00:43:31Z", "path": "helix-core/src/test/java/org/apache/helix/TestHelper.java", "diffHunk": "@@ -76,7 +76,7 @@\n \n public class TestHelper {\n   private static final Logger LOG = LoggerFactory.getLogger(TestHelper.class);\n-  public static final long WAIT_DURATION = 20 * 1000L; // 20 seconds\n+  public static final long WAIT_DURATION = 60 * 1000L; // 60 seconds", "originalCommit": "9a7be1ae37325e48f0061d84c4259ad859fbf5fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4MTIzOA==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500681238", "bodyText": "In this pull request, we don't have the case of waiting too long, we should fail the test case. How about let us add them once we have this case.", "author": "kaisun2000", "createdAt": "2020-10-07T01:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NTE3OQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501245179", "bodyText": "Sure. This is not a big concern.", "author": "jiajunwang", "createdAt": "2020-10-07T19:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MzU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e8fef8e2dd16b0c9b50c8d9484e52c0531f2ddcb", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/TestHelper.java b/helix-core/src/test/java/org/apache/helix/TestHelper.java\nindex e87794ec3..7a6c1221f 100644\n--- a/helix-core/src/test/java/org/apache/helix/TestHelper.java\n+++ b/helix-core/src/test/java/org/apache/helix/TestHelper.java\n\n@@ -76,7 +76,9 @@ import org.testng.Assert;\n \n public class TestHelper {\n   private static final Logger LOG = LoggerFactory.getLogger(TestHelper.class);\n+\n   public static final long WAIT_DURATION = 60 * 1000L; // 60 seconds\n+  public static final int DEFAULT_REBALANCE_PROCESSING_WAIT_TIME = 1500;\n \n   /**\n    * Returns a unused random port.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NDA5OQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500674099", "bodyText": "This changes the original test logic. We shall only need one pipeline run after the delay. And it shall guarantee the operation is done correctly.\nIf there is a concern about the delay time, we can wait for 2 * DEFAULT_OBSELETE_MSG_PURGE_DELAY.", "author": "jiajunwang", "createdAt": "2020-10-07T00:45:26Z", "path": "helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java", "diffHunk": "@@ -152,15 +152,15 @@ public void testDuplicateMsg() throws Exception {\n     Assert.assertTrue(messages.get(0).getFromState().equalsIgnoreCase(\"SLAVE\"));\n     Assert.assertTrue(messages.get(0).getToState().equalsIgnoreCase(\"MASTER\"));\n \n-    runPipeline(event, dataRefresh);\n-\n+    Thread.sleep(MessageGenerationPhase.DEFAULT_OBSELETE_MSG_PURGE_DELAY);\n     // Verify the stale message should be deleted\n     Assert.assertTrue(TestHelper.verify(() -> {\n+      runPipeline(event, dataRefresh);", "originalCommit": "9a7be1ae37325e48f0061d84c4259ad859fbf5fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4MDc0NA==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500680744", "bodyText": "Ok.\nThread.sleep(2 * MessageGenerationPhase.DEFAULT_OBSELETE_MSG_PURGE_DELAY);\nrunPipeline(event, dataRefresh);\nAssert.assertTrue(TestHelper.verify(() -> {\nif (dataCache.getStaleMessages().size() != 0) {\n        return false;\n      }\n      return true;\n    }, TestHelper.WAIT_DURATION));\n\nSomething like the above.", "author": "kaisun2000", "createdAt": "2020-10-07T01:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NDA5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java b/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java\nindex 02fcfb02c..81f66147f 100644\n--- a/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java\n+++ b/helix-core/src/test/java/org/apache/helix/controller/stages/TestRebalancePipeline.java\n\n@@ -152,10 +152,11 @@ public class TestRebalancePipeline extends ZkUnitTestBase {\n     Assert.assertTrue(messages.get(0).getFromState().equalsIgnoreCase(\"SLAVE\"));\n     Assert.assertTrue(messages.get(0).getToState().equalsIgnoreCase(\"MASTER\"));\n \n-    Thread.sleep(MessageGenerationPhase.DEFAULT_OBSELETE_MSG_PURGE_DELAY);\n+    Thread.sleep(2 * MessageGenerationPhase.DEFAULT_OBSELETE_MSG_PURGE_DELAY);\n+    runPipeline(event, dataRefresh);\n+\n     // Verify the stale message should be deleted\n     Assert.assertTrue(TestHelper.verify(() -> {\n-      runPipeline(event, dataRefresh);\n       if (dataCache.getStaleMessages().size() != 0) {\n         return false;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NTE3Mw==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500675173", "bodyText": "Please mind the naming of the variables. A meaningful name is required in all cases.", "author": "jiajunwang", "createdAt": "2020-10-07T00:49:41Z", "path": "helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java", "diffHunk": "@@ -130,18 +130,24 @@ public void testWithDisabledInstancesLimit() throws Exception {\n       admin.enableInstance(CLUSTER_NAME, instance, false);\n     }\n \n-    Thread.sleep(500);\n-\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNull(maintenanceSignal);\n+    boolean result = TestHelper.verify(() -> {\n+      MaintenanceSignal ms = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n+      return ms == null;\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(result);\n \n     String instance = _participants.get(i).getInstanceName();\n     admin.enableInstance(CLUSTER_NAME, instance, false);\n \n-    Thread.sleep(500);\n-    maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n-    Assert.assertNotNull(maintenanceSignal);\n-    Assert.assertNotNull(maintenanceSignal.getReason());\n+    ZkHelixClusterVerifier clusterVerifier1 =", "originalCommit": "9a7be1ae37325e48f0061d84c4259ad859fbf5fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMDAxMw==", "url": "https://github.com/apache/helix/pull/1447#discussion_r500730013", "bodyText": "changed to clusterVerifier. there is only 1 verifier in this test case.", "author": "kaisun2000", "createdAt": "2020-10-07T04:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NTE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java b/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java\nindex 04742dfe7..92fa12d1d 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/rebalancer/TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit.java\n\n@@ -139,10 +139,10 @@ public class TestClusterInMaintenanceModeWhenReachingOfflineInstancesLimit exten\n     String instance = _participants.get(i).getInstanceName();\n     admin.enableInstance(CLUSTER_NAME, instance, false);\n \n-    ZkHelixClusterVerifier clusterVerifier1 =\n+    ZkHelixClusterVerifier clusterVerifier =\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .build();\n-    Assert.assertTrue(clusterVerifier1.verifyByPolling());\n+    Assert.assertTrue(clusterVerifier.verifyByPolling());\n \n     result = TestHelper.verify(() -> {\n       MaintenanceSignal ms =_dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance());\n"}}, {"oid": "77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "url": "https://github.com/apache/helix/commit/77bd5533f3c8aafd0edf9d7db9d86a7f20b19e08", "message": "some enhancement based on jj's feedback.", "committedDate": "2020-10-07T04:29:02Z", "type": "forcePushed"}, {"oid": "fdfc11248e7ac32eafab0b350b55748c6c3b1415", "url": "https://github.com/apache/helix/commit/fdfc11248e7ac32eafab0b350b55748c6c3b1415", "message": "some enhancement based on jj's feedback.", "committedDate": "2020-10-07T04:34:24Z", "type": "forcePushed"}, {"oid": "fdfc11248e7ac32eafab0b350b55748c6c3b1415", "url": "https://github.com/apache/helix/commit/fdfc11248e7ac32eafab0b350b55748c6c3b1415", "message": "some enhancement based on jj's feedback.", "committedDate": "2020-10-07T04:34:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NjM3OQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501246379", "bodyText": "nit, this one shall assert the result.", "author": "jiajunwang", "createdAt": "2020-10-07T19:07:00Z", "path": "helix-core/src/test/java/org/apache/helix/TestListenerCallback.java", "diffHunk": "@@ -206,21 +206,24 @@ public void testScopedConfigChangeListener() throws Exception {\n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.CLUSTER);\n     boolean result = TestHelper.verify(()-> {\n-      return listener._configChanged == true;\n+      return listener._configChanged;\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(result,\"Should get initial clusterConfig callback invoked\");\n     Assert.assertEquals(listener._configSize, 1, \"Cluster Config size should be 1\");\n \n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.RESOURCE);\n+    result = TestHelper.verify(()-> {\n+      return listener._configChanged;\n+    }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(listener._configChanged,", "originalCommit": "fdfc11248e7ac32eafab0b350b55748c6c3b1415", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MzA4Nw==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501253087", "bodyText": "Good catch.", "author": "kaisun2000", "createdAt": "2020-10-07T19:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NjM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NTc5MQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501255791", "bodyText": "fixed.", "author": "kaisun2000", "createdAt": "2020-10-07T19:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0NjM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8fef8e2dd16b0c9b50c8d9484e52c0531f2ddcb", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java b/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\nindex 88efebb5b..bea5d3517 100644\n--- a/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\n+++ b/helix-core/src/test/java/org/apache/helix/TestListenerCallback.java\n\n@@ -206,16 +206,13 @@ public class TestListenerCallback extends ZkUnitTestBase {\n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.CLUSTER);\n     boolean result = TestHelper.verify(()-> {\n-      return listener._configChanged;\n+      return listener._configChanged == true;\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(result,\"Should get initial clusterConfig callback invoked\");\n     Assert.assertEquals(listener._configSize, 1, \"Cluster Config size should be 1\");\n \n     listener.reset();\n     _manager.addConfigChangeListener(listener, ConfigScopeProperty.RESOURCE);\n-    result = TestHelper.verify(()-> {\n-      return listener._configChanged;\n-    }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(listener._configChanged,\n         \"Should get initial resourceConfig callback invoked\");\n     Assert.assertEquals(listener._configSize, 0, \"Resource Config size does not match\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTMwNA==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501325304", "bodyText": "The stack trace will be printed in one line with this code. I suggest we use new throwable().printstacktrace()", "author": "huizhilu", "createdAt": "2020-10-07T21:39:00Z", "path": "helix-core/src/test/java/org/apache/helix/TestHelper.java", "diffHunk": "@@ -799,7 +799,12 @@ public static boolean verify(Verifier verifier, long timeout) throws Exception {\n     long start = System.currentTimeMillis();\n     do {\n       boolean result = verifier.verify();\n-      if (result || (System.currentTimeMillis() - start) > timeout) {\n+      boolean isTimedout = (System.currentTimeMillis() - start) > timeout;\n+      if (result || isTimedout) {\n+        if (isTimedout && !result) {\n+          LOG.error(\"verifier time out, consider try longer timeout, stack trace{}\",\n+              Arrays.asList(Thread.currentThread().getStackTrace()));", "originalCommit": "304df54719ca1f3456e7571a4490b2f4c3dac7ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyOTE5MQ==", "url": "https://github.com/apache/helix/pull/1447#discussion_r501329191", "bodyText": "The is intentional one line. new throwable().printstacktrace() would give you multiple lines. That is used for true exception logging.\nThis is not really exception. Just a hint that verify() did not finish in time. We don't want to mix both case for easy reading the test output.\nThis Arrays.asList is used also in other places in our test.", "author": "kaisun2000", "createdAt": "2020-10-07T21:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTMwNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e8fef8e2dd16b0c9b50c8d9484e52c0531f2ddcb", "url": "https://github.com/apache/helix/commit/e8fef8e2dd16b0c9b50c8d9484e52c0531f2ddcb", "message": "fix #1446\nQuite some unit test still use Thread.sleep(xxx) to wait for a\ncondition to happen. This is a source of falkiness of test. This\nmay also make the test running unnecessarily long. We address\nthis issue with TestHelper.verify() method.", "committedDate": "2020-10-08T00:07:49Z", "type": "commit"}, {"oid": "717c42cbe915fad9a05328741070eaa41f782c05", "url": "https://github.com/apache/helix/commit/717c42cbe915fad9a05328741070eaa41f782c05", "message": "some enhancement based on jj's feedback.", "committedDate": "2020-10-08T00:07:52Z", "type": "commit"}, {"oid": "dfe58b6c80e8c9c4c0263029ba1176fd05cb2312", "url": "https://github.com/apache/helix/commit/dfe58b6c80e8c9c4c0263029ba1176fd05cb2312", "message": "fix one issue of asserting", "committedDate": "2020-10-08T00:07:52Z", "type": "commit"}, {"oid": "32af649fd750cdadf289fffed683443f015cccfd", "url": "https://github.com/apache/helix/commit/32af649fd750cdadf289fffed683443f015cccfd", "message": "address another two place lacking assert.", "committedDate": "2020-10-08T00:07:52Z", "type": "commit"}, {"oid": "a1a05e5125b060b6aad8f43ab2d8a8f39d772539", "url": "https://github.com/apache/helix/commit/a1a05e5125b060b6aad8f43ab2d8a8f39d772539", "message": "still one more lacking assert", "committedDate": "2020-10-08T00:07:52Z", "type": "commit"}, {"oid": "a1a05e5125b060b6aad8f43ab2d8a8f39d772539", "url": "https://github.com/apache/helix/commit/a1a05e5125b060b6aad8f43ab2d8a8f39d772539", "message": "still one more lacking assert", "committedDate": "2020-10-08T00:07:52Z", "type": "forcePushed"}]}