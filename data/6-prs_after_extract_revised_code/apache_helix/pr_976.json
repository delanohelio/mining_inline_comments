{"pr_number": 976, "pr_title": "Fix incorrect exception type and confusing assertion messages", "pr_createdAt": "2020-04-28T22:45:05Z", "pr_url": "https://github.com/apache/helix/pull/976", "timeline": [{"oid": "fa972ad15e372ef3911c06948156fef44774c2be", "url": "https://github.com/apache/helix/commit/fa972ad15e372ef3911c06948156fef44774c2be", "message": "Fix incorrect exception type and confusing assertion messages in TestZNRecordSizeLimit", "committedDate": "2020-04-28T22:46:08Z", "type": "commit"}, {"oid": "fa972ad15e372ef3911c06948156fef44774c2be", "url": "https://github.com/apache/helix/commit/fa972ad15e372ef3911c06948156fef44774c2be", "message": "Fix incorrect exception type and confusing assertion messages in TestZNRecordSizeLimit", "committedDate": "2020-04-28T22:46:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzYyMw==", "url": "https://github.com/apache/helix/pull/976#discussion_r416977623", "bodyText": "What is this test log testing?\nIf the expectation is no error, then we don't care what is the exception. If the operation fails, just throw it. If we use Assert.fail(), we get a message, but we are actually not sure the detail of the exception, because we never include it in the assert fail message.\nIf the expectation is we have an error, then the assert in the catch block will fail the test.\nCan we make it straight?", "author": "jiajunwang", "createdAt": "2020-04-28T23:09:31Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java", "diffHunk": "@@ -86,8 +89,8 @@ public void testZNRecordSizeLimitUseZNRecordSerializer() {\n     _gZkClient.createPersistent(path2, true);\n     try {\n       _gZkClient.writeData(path2, largeRecord);\n-    } catch (HelixException e) {\n-      Assert.fail(\"Should not fail because data size is larger than 1M since compression applied\");\n+    } catch (ZkMarshallingError e) {", "originalCommit": "fa972ad15e372ef3911c06948156fef44774c2be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMDIxOQ==", "url": "https://github.com/apache/helix/pull/976#discussion_r417000219", "bodyText": "We are testing a ZkMarshallingError should not be thrown by the serializer. This message specifies the reason why this bad exception is thrown.\nFYI, exception stack trace is added to the message.", "author": "huizhilu", "createdAt": "2020-04-29T00:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMTMxOQ==", "url": "https://github.com/apache/helix/pull/976#discussion_r417011319", "bodyText": "I don't have a strong preference here. But I think it is redundant try-catch. Otherwise, why we are not adding this try-catch then throw exception blocks to all the test code? Because all test code, as long as it is not testing for the negative cases, will have the same assumption that we shall not have a certain Exception thrown.", "author": "jiajunwang", "createdAt": "2020-04-29T00:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNDI1Nw==", "url": "https://github.com/apache/helix/pull/976#discussion_r417014257", "bodyText": "I understand your point. And I agree we shouldn\u2019t do redundant code. But in this specific case here, since compression is such a critical part, I would prefer to make it bold. If there is anything change in the logic and triggers the test failed, the message should tell the reason. And one more reason I use assert.fail is to avoid that if someone changes the test and catch the exception Without failing the test , the exception thrown from here may not fail the test. This is what I would like to prevent.", "author": "huizhilu", "createdAt": "2020-04-29T01:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "a1f896f411ab3f4a762ccadf9a68c318cc2eeb15", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java\nindex bee7a6455..daf99bb9e 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZNRecordSizeLimit.java\n\n@@ -90,7 +90,7 @@ public class TestZNRecordSizeLimit extends ZkUnitTestBase {\n     try {\n       _gZkClient.writeData(path2, largeRecord);\n     } catch (ZkMarshallingError e) {\n-      Assert.fail(ASSERTION_MESSAGE);\n+      Assert.fail(ASSERTION_MESSAGE + e);\n     }\n     record = _gZkClient.readData(path2);\n     Assert.assertNotNull(record);\n"}}, {"oid": "a1f896f411ab3f4a762ccadf9a68c318cc2eeb15", "url": "https://github.com/apache/helix/commit/a1f896f411ab3f4a762ccadf9a68c318cc2eeb15", "message": "Add exception stacktrace in the failure message", "committedDate": "2020-04-29T00:09:23Z", "type": "commit"}]}