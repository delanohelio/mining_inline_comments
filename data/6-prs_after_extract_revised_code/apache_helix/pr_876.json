{"pr_number": 876, "pr_title": "Add construction of domain in Helix participant logic", "pr_createdAt": "2020-03-06T21:48:52Z", "pr_url": "https://github.com/apache/helix/pull/876", "timeline": [{"oid": "c59bc5e6e26f79a9441fcb76438ce9b2ab380b21", "url": "https://github.com/apache/helix/commit/c59bc5e6e26f79a9441fcb76438ce9b2ab380b21", "message": "add domain construction in Helix participant manager", "committedDate": "2020-03-06T21:50:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2ODc3NA==", "url": "https://github.com/apache/helix/pull/876#discussion_r389168774", "bodyText": "Do we need this? If we know the environment is Azure, then we can directly get the topology from AzureConstants instead of reading from ClusterConfig.", "author": "junkaixue", "createdAt": "2020-03-06T22:11:01Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java", "diffHunk": "@@ -200,6 +201,22 @@ private void joinCluster() {\n     }\n   }\n \n+  private String ConstructDomainField(String faultDomain) {\n+    Boolean topologyEnabled = _configAccessor.getClusterConfig(_clusterName).isTopologyAwareEnabled();", "originalCommit": "c59bc5e6e26f79a9441fcb76438ce9b2ab380b21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3OTA3NA==", "url": "https://github.com/apache/helix/pull/876#discussion_r389179074", "bodyText": "In this logic, we do not parse the cloud provider directly. That logic is in the processor. I was thinking that if we read from clusterConfig, it'll be generic, and independent of cloud provider. thoughts?", "author": "zhangmeng916", "createdAt": "2020-03-06T22:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2ODc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNzExNg==", "url": "https://github.com/apache/helix/pull/876#discussion_r389217116", "bodyText": "Discussed offline. We'll move the logic to cloud instance information processor and not to depend on cluster config.", "author": "zhangmeng916", "createdAt": "2020-03-07T02:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2ODc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "d31b6e48fba009e8c7a52611952c753eae51a253", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java\nindex 705ade683..7b75c7a42 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java\n\n@@ -201,22 +200,6 @@ public class ParticipantManager {\n     }\n   }\n \n-  private String ConstructDomainField(String faultDomain) {\n-    Boolean topologyEnabled = _configAccessor.getClusterConfig(_clusterName).isTopologyAwareEnabled();\n-    if (!topologyEnabled) {\n-      throw new HelixException(\"Topology is not enabled, so Helix cannot do auto \"\n-          + \"registration\");\n-    }\n-    String topologyDef = _configAccessor.getClusterConfig(_clusterName).getTopology();\n-    String[] parts = topologyDef.trim().split(\"/\");\n-    if (parts.length != 2) {\n-      throw new HelixException(\"Invalid cluster topology definition, so Helix cannot do auto \"\n-          + \"registration\" + topologyDef);\n-    }\n-    String domain = parts[0] + \"=\" + faultDomain + \",\" + parts[1] + \"=\" + _instanceName;\n-    return domain;\n-  }\n-\n   private CloudInstanceInformation getCloudInstanceInformation() {\n     String cloudInstanceInformationProcessorName =\n         _helixManagerProperty.getHelixCloudProperty().getCloudInfoProcessorName();\n"}}, {"oid": "bebadf1358eaf481a9736c776c07228f6603933a", "url": "https://github.com/apache/helix/commit/bebadf1358eaf481a9736c776c07228f6603933a", "message": "add domain construction in Helix participant manager", "committedDate": "2020-03-07T01:43:40Z", "type": "commit"}, {"oid": "bebadf1358eaf481a9736c776c07228f6603933a", "url": "https://github.com/apache/helix/commit/bebadf1358eaf481a9736c776c07228f6603933a", "message": "add domain construction in Helix participant manager", "committedDate": "2020-03-07T01:43:40Z", "type": "forcePushed"}, {"oid": "d31b6e48fba009e8c7a52611952c753eae51a253", "url": "https://github.com/apache/helix/commit/d31b6e48fba009e8c7a52611952c753eae51a253", "message": "move domain construction to cloud information processor", "committedDate": "2020-03-07T01:58:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjM5Mw==", "url": "https://github.com/apache/helix/pull/876#discussion_r389902393", "bodyText": "This is not necessary, right? Unless we offer flexibility for user to customize it.", "author": "junkaixue", "createdAt": "2020-03-09T19:09:09Z", "path": "helix-core/src/main/java/org/apache/helix/cloud/azure/AzureCloudInstanceInformationProcessor.java", "diffHunk": "@@ -142,8 +142,16 @@ public AzureCloudInstanceInformation parseCloudInstanceInformation(List<String>\n         String vmName = computeNode.path(INSTANCE_NAME).getTextValue();\n         String platformFaultDomain = computeNode.path(DOMAIN).getTextValue();\n         String vmssName = computeNode.path(INSTANCE_SET_NAME).getValueAsText();\n+        String azureTopology = AzureConstants.AZURE_TOPOLOGY;\n+        String[] parts = azureTopology.trim().split(\"/\");\n+        if (parts.length != 2) {\n+          throw new HelixException(\"Invalid Azure topology definition: \" + azureTopology);\n+        }", "originalCommit": "d31b6e48fba009e8c7a52611952c753eae51a253", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNTA1MA==", "url": "https://github.com/apache/helix/pull/876#discussion_r389925050", "bodyText": "I was thinking whether it's possible the file was accidentally changed.", "author": "zhangmeng916", "createdAt": "2020-03-09T19:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3MzMwMg==", "url": "https://github.com/apache/helix/pull/876#discussion_r389973302", "bodyText": "But this is not from the file. This is from Java class AzureConstants.", "author": "junkaixue", "createdAt": "2020-03-09T21:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3NTI4NQ==", "url": "https://github.com/apache/helix/pull/876#discussion_r389975285", "bodyText": "oh yes, I was thinking about my property file. Removed.", "author": "zhangmeng916", "createdAt": "2020-03-09T21:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjM5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7f171fe64c78f297bd743793342b8daa7e833fd8", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/cloud/azure/AzureCloudInstanceInformationProcessor.java b/helix-core/src/main/java/org/apache/helix/cloud/azure/AzureCloudInstanceInformationProcessor.java\nindex 6ea4d22d8..464ff5515 100644\n--- a/helix-core/src/main/java/org/apache/helix/cloud/azure/AzureCloudInstanceInformationProcessor.java\n+++ b/helix-core/src/main/java/org/apache/helix/cloud/azure/AzureCloudInstanceInformationProcessor.java\n\n@@ -144,9 +144,6 @@ public class AzureCloudInstanceInformationProcessor\n         String vmssName = computeNode.path(INSTANCE_SET_NAME).getValueAsText();\n         String azureTopology = AzureConstants.AZURE_TOPOLOGY;\n         String[] parts = azureTopology.trim().split(\"/\");\n-        if (parts.length != 2) {\n-          throw new HelixException(\"Invalid Azure topology definition: \" + azureTopology);\n-        }\n         //The hostname will be filled in by each participant\n         String domain = parts[0] + \"=\" + platformFaultDomain + \",\" + parts[1] + \"=\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMzUxMA==", "url": "https://github.com/apache/helix/pull/876#discussion_r389903510", "bodyText": "This is domain string right? Then it should looked like \"FD=xxx, InstanceName=xxxx\". But the code is adding them together?", "author": "junkaixue", "createdAt": "2020-03-09T19:11:17Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ParticipantManager.java", "diffHunk": "@@ -178,7 +178,7 @@ private void joinCluster() {\n           LOG.info(_instanceName + \" is auto-registering cluster: \" + _clusterName);\n           CloudInstanceInformation cloudInstanceInformation = getCloudInstanceInformation();\n           String domain = cloudInstanceInformation\n-              .get(CloudInstanceInformation.CloudInstanceField.FAULT_DOMAIN.name());\n+              .get(CloudInstanceInformation.CloudInstanceField.FAULT_DOMAIN.name()) + _instanceName;", "originalCommit": "d31b6e48fba009e8c7a52611952c753eae51a253", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNDc4MQ==", "url": "https://github.com/apache/helix/pull/876#discussion_r389924781", "bodyText": "The prefix is in the processor:\n//The hostname will be filled in by each participant\nString domain = parts[0] + \"=\" + platformFaultDomain + \",\" + parts[1] + \"=\";", "author": "zhangmeng916", "createdAt": "2020-03-09T19:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMzUxMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7f171fe64c78f297bd743793342b8daa7e833fd8", "url": "https://github.com/apache/helix/commit/7f171fe64c78f297bd743793342b8daa7e833fd8", "message": "minor fix", "committedDate": "2020-03-09T21:34:56Z", "type": "commit"}]}