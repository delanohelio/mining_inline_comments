{"pr_number": 1007, "pr_title": "Add more accurate error message for resetPartition ", "pr_createdAt": "2020-05-13T19:04:14Z", "pr_url": "https://github.com/apache/helix/pull/1007", "timeline": [{"oid": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "url": "https://github.com/apache/helix/commit/8438bf23038a05bf422c8a5bf07e69da90d95d46", "message": "sq commits", "committedDate": "2020-05-13T19:16:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTcxMg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424741712", "bodyText": "Suggest diamond new HashSet<>()\nAnd it seems the partitions are only used for next step containsAll(). Would it be fine just use the reference to keySet() partitions = Address unclean helix controller leadership switch, instead of making a copy?", "author": "huizhilu", "createdAt": "2020-05-13T21:28:24Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -588,20 +596,16 @@ public void resetPartition(String clusterName, String instanceName, String resou\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MDkzNQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424760935", "bodyText": "TFTR. Will fix.", "author": "xyuanlu", "createdAt": "2020-05-13T22:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTcxMg=="}], "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 5f2c53fae..282c73393 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -573,39 +573,41 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has ever exist in the cluster\n+      // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n       } else {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n       }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n     Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n+      partitions = idealState.getRecord().getListFields().keySet();\n     }\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because not all \" + partitionNames + \" exist\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n+              partitionNames, instanceName, partitionNames));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjMzNQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424742335", "bodyText": "No need to catch this exception. If an exception is thrown from connect(), the test will throw this exception and fail.", "author": "huizhilu", "createdAt": "2020-05-13T21:29:48Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on \" + instanceName\n+              + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    try {\n+      manager.connect();\n+    } catch (Exception e) {", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxMzE4MA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424813180", "bodyText": "I think I need to catch it so that compile won't fail.", "author": "xyuanlu", "createdAt": "2020-05-14T00:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MjMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex d2dec9ee5..bf17ccd2c 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -561,7 +561,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n   }\n \n   @Test\n-  public void testResetPartition() {\n+  public void testResetPartition() throws Exception {\n     String className = TestHelper.getTestClassName();\n     String methodName = TestHelper.getTestMethodName();\n     String clusterName = className + \"_\" + methodName;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTgzMQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424749831", "bodyText": "\"has ever existed\"", "author": "narendly", "createdAt": "2020-05-13T21:46:24Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 5f2c53fae..282c73393 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -573,39 +573,41 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has ever exist in the cluster\n+      // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n       } else {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n       }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n     Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n+      partitions = idealState.getRecord().getListFields().keySet();\n     }\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because not all \" + partitionNames + \" exist\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n+              partitionNames, instanceName, partitionNames));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDcwMA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424750700", "bodyText": "\"not live\"", "author": "narendly", "createdAt": "2020-05-13T21:48:20Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+      } else {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 5f2c53fae..282c73393 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -573,39 +573,41 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has ever exist in the cluster\n+      // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n       } else {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n       }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n     Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n+      partitions = idealState.getRecord().getListFields().keySet();\n     }\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because not all \" + partitionNames + \" exist\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n+              partitionNames, instanceName, partitionNames));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDk4Nw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424750987", "bodyText": "Can you just create the error message in the if-else block and throw only once to avoid code duplication?", "author": "narendly", "createdAt": "2020-05-13T21:48:59Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+      } else {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n+            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MTMwMg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424761302", "bodyText": "TFTR. Will fix.", "author": "xyuanlu", "createdAt": "2020-05-13T22:13:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDk4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 5f2c53fae..282c73393 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -573,39 +573,41 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has ever exist in the cluster\n+      // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n       } else {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n       }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n     Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n+      partitions = idealState.getRecord().getListFields().keySet();\n     }\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because not all \" + partitionNames + \" exist\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n+              partitionNames, instanceName, partitionNames));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTcwOQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751709", "bodyText": "\"nonexistent\"", "author": "narendly", "createdAt": "2020-05-13T21:50:41Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex d2dec9ee5..bf17ccd2c 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -561,7 +561,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n   }\n \n   @Test\n-  public void testResetPartition() {\n+  public void testResetPartition() throws Exception {\n     String className = TestHelper.getTestClassName();\n     String methodName = TestHelper.getTestMethodName();\n     String clusterName = className + \"_\" + methodName;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTg3OA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751878", "bodyText": "non-live", "author": "narendly", "createdAt": "2020-05-13T21:51:03Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex d2dec9ee5..bf17ccd2c 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -561,7 +561,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n   }\n \n   @Test\n-  public void testResetPartition() {\n+  public void testResetPartition() throws Exception {\n     String className = TestHelper.getTestClassName();\n     String methodName = TestHelper.getTestMethodName();\n     String clusterName = className + \"_\" + methodName;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTk1MQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424751951", "bodyText": "not live", "author": "narendly", "createdAt": "2020-05-13T21:51:13Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,93 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a non-exist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on WrongTestInstance,\" +\n+              \" because WrongTestInstance never existed in cluster \" + clusterName);\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-alive instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource,\n+          Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(),\n+          \"Can't reset state for \" + testResource  + \"/[1, 2] on \" + instanceName\n+              + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex d2dec9ee5..bf17ccd2c 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -561,7 +561,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n   }\n \n   @Test\n-  public void testResetPartition() {\n+  public void testResetPartition() throws Exception {\n     String className = TestHelper.getTestClassName();\n     String methodName = TestHelper.getTestMethodName();\n     String clusterName = className + \"_\" + methodName;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2NjYyMg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r424766622", "bodyText": "Let's use \".\" instead of \"/\" to connect the resource name and partition name?\nAnd use String.format() to make the code cleaner.", "author": "jiajunwang", "createdAt": "2020-05-13T22:27:29Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,9 +573,17 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has ever exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName", "originalCommit": "8438bf23038a05bf422c8a5bf07e69da90d95d46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 5f2c53fae..282c73393 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -573,39 +573,41 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has ever exist in the cluster\n+      // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" never existed in cluster \" + clusterName);\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n       } else {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-            + \", because \" + instanceName + \" is not alive in cluster \" + clusterName + \" anymore\");\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n       }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n     Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-       partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n+      partitions = idealState.getRecord().getListFields().keySet();\n     }\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because not all \" + partitionNames + \" exist\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n+              partitionNames, instanceName, partitionNames));\n     }\n \n     // check partition is in ERROR state\n"}}, {"oid": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "url": "https://github.com/apache/helix/commit/4564141b3557c8437fb410a9da9af0eb3661f3e1", "message": "Address comments", "committedDate": "2020-05-14T01:33:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDQzNg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425390436", "bodyText": "Looks like either branch of the below if/else needs this, might as well just init partitions here?\nAlso, since the original code makes a copy, better keep the original semantics here to prevent accidental mutation.\nJunlong\n: )", "author": "junlong-gao", "createdAt": "2020-05-14T19:49:48Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n+      }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;", "originalCommit": "4564141b3557c8437fb410a9da9af0eb3661f3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NTgyOA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425395828", "bodyText": "Looks like there is a slight difference getMapFields vs getListFields requires this if-else, so perhaps a ternary operator or the current if-else is already unavoidable.", "author": "junlong-gao", "createdAt": "2020-05-14T19:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NDMwMg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425564302", "bodyText": "nit, you could use (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED)? idealState.getRecord().getMapFields().keySet() : partitions = idealState.getRecord().getListFields().keySet() to simplify it a little bit.", "author": "jiajunwang", "createdAt": "2020-05-15T04:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MDQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"oid": "f44662a0ddd5566a4a3524b505a36eba812a3fe6", "url": "https://github.com/apache/helix/commit/f44662a0ddd5566a4a3524b505a36eba812a3fe6", "message": "address comments", "committedDate": "2020-05-14T20:59:26Z", "type": "forcePushed"}, {"oid": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "url": "https://github.com/apache/helix/commit/57fa62f9ef322843d54f2e13c32b494859ed6ca8", "message": "address comments", "committedDate": "2020-05-14T21:00:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNDgyNg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425534826", "bodyText": "does not -> is not", "author": "narendly", "createdAt": "2020-05-15T02:41:15Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTA3NA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535074", "bodyText": "Please add a TestHelper.verify() to verify that the cluster has indeed been fully deleted at this point.", "author": "narendly", "createdAt": "2020-05-15T02:42:27Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the resource is not added.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because %s is not added\", testResource,\n+              instanceName, testResource));\n+    }\n+\n+    IdealState idealState = new IdealState(testResource);\n+    idealState.setNumPartitions(3);\n+    admin.addStateModelDef(clusterName, \"MasterSlave\", new MasterSlaveSMD());\n+    idealState.setStateModelDefRef(\"MasterSlave\");\n+    idealState.setRebalanceMode(IdealState.RebalanceMode.FULL_AUTO);\n+    admin.addResource(clusterName, testResource, idealState);\n+\n+    admin.enableResource(clusterName, testResource, true);\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because partitions do not exist.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because not all [1, 2] exist\",\n+              testResource, instanceName));\n+    }\n+\n+    // clean up\n+    manager.disconnect();\n+    admin.dropCluster(clusterName);", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzE4OA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r430047188", "bodyText": "Could you add a verify() to make sure the cluster has been removed successfully?", "author": "narendly", "createdAt": "2020-05-25T18:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTMwNA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535304", "bodyText": "nonexistent", "author": "narendly", "createdAt": "2020-05-15T02:43:19Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2ODk4OQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425568989", "bodyText": "TFTR. Will fix.", "author": "xyuanlu", "createdAt": "2020-05-15T05:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTQ4MQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535481", "bodyText": "Make \"WrongTestInstance\" a string constant throughout?", "author": "narendly", "createdAt": "2020-05-15T02:44:03Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNTgyNw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425535827", "bodyText": "nonexistent", "author": "narendly", "createdAt": "2020-05-15T02:45:35Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjA5Mg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425536092", "bodyText": "Do you need to add a verifier check here? It might take some time for the controller to rebalance.", "author": "narendly", "createdAt": "2020-05-15T02:46:43Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexist instance.\n+    try {\n+      admin.resetPartition(clusterName, \"WrongTestInstance\", testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance name is made up.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on WrongTestInstance, because WrongTestInstance\"\n+              + \" has never existed in cluster %s\", testResource, clusterName));\n+    }\n+\n+    // resetPartition is expected to throw an exception when provided with a non-live instance.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the instance is not alive.\n+      Assert.assertEquals(expected.getMessage(), String.format(\n+          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          testResource, instanceName, instanceName, clusterName));\n+    }\n+\n+    HelixManager manager = initializeHelixManager(clusterName, instanceConfig.getInstanceName());\n+    manager.connect();\n+\n+    // resetPartition is expected to throw an exception when provided with a non-exist resource.\n+    try {\n+      admin.resetPartition(clusterName, instanceName, testResource, Arrays.asList(\"1\", \"2\"));\n+      Assert.fail(\"Should throw HelixException\");\n+    } catch (HelixException expected) {\n+      // This exception is expected because the resource is not added.\n+      Assert.assertEquals(expected.getMessage(), String\n+          .format(\"Can't reset state for %s.[1, 2] on %s, because %s is not added\", testResource,\n+              instanceName, testResource));\n+    }\n+\n+    IdealState idealState = new IdealState(testResource);\n+    idealState.setNumPartitions(3);\n+    admin.addStateModelDef(clusterName, \"MasterSlave\", new MasterSlaveSMD());\n+    idealState.setStateModelDefRef(\"MasterSlave\");\n+    idealState.setRebalanceMode(IdealState.RebalanceMode.FULL_AUTO);\n+    admin.addResource(clusterName, testResource, idealState);\n+\n+    admin.enableResource(clusterName, testResource, true);", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2ODYxNw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425568617", "bodyText": "TFTR. May I ask are you suggesting verify if the resource is enabled? In my understanding, if not, then we won't get the expected exception for nonexistent partitions in the next try/catch block.", "author": "xyuanlu", "createdAt": "2020-05-15T05:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3MjczOQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425572739", "bodyText": "Please correct me if I am wrong. For example, I guess if we get \"resource not added\" exception while \"nonexistent partition\" is expected, we would know the resource is not correctly added.", "author": "xyuanlu", "createdAt": "2020-05-15T05:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjE2MQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425536161", "bodyText": "Do we need a verifier check after this?", "author": "narendly", "createdAt": "2020-05-15T02:46:58Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2ODgxOA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425568818", "bodyText": "Same as above. If the instance is not corrected added and enabled, we wont get all following expected exceptions.", "author": "xyuanlu", "createdAt": "2020-05-15T05:08:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MzkwMw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r427763903", "bodyText": "This is a unit test for sanity check. There is no running controller.  We have end-to-end tests for resetPartition() under webapp/TestResetPartitionState and integration/TestResetPartitionState.", "author": "xyuanlu", "createdAt": "2020-05-20T06:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzNjE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex 15838751c..6e3c25799 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -594,7 +594,7 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     } catch (HelixException expected) {\n       // This exception is expected because the instance is not alive.\n       Assert.assertEquals(expected.getMessage(), String.format(\n-          \"Can't reset state for %s.[1, 2] on %s, because %s does not live in cluster %s anymore\",\n+          \"Can't reset state for %s.[1, 2] on %s, because %s is not live in cluster %s anymore\",\n           testResource, instanceName, instanceName, clusterName));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MjgzMg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425562832", "bodyText": "Why there is still a \"+\", it is not necessary, right?", "author": "jiajunwang", "createdAt": "2020-05-15T04:42:54Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2Mjk4Ng==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425562986", "bodyText": "BTW, if this is for the format, just use the auto format supported by the IDE after you import the Helix code style.", "author": "jiajunwang", "createdAt": "2020-05-15T04:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MjgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NjU2Nw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425566567", "bodyText": "The auto formatter collapse 2 lines into 1 line and leave the \"+\" here.  I missed it.  Will fix", "author": "xyuanlu", "createdAt": "2020-05-15T04:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MjgzMg=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MzQyNQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425563425", "bodyText": "The check only shows it is not alive for now. \"anymore\" is not accurate, we can remove it.", "author": "jiajunwang", "createdAt": "2020-05-15T04:45:40Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NjM4MQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425566381", "bodyText": "Please correct me if I am wrong. In my understanding, if the instance has ever lived in the cluster, we would be able to find it under /instance Path but not under the /liveInstance ?", "author": "xyuanlu", "createdAt": "2020-05-15T04:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MzQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2Mzc5MA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425563790", "bodyText": "nit, You can init the errMessage like String.format( \"Can't reset state for %s.%s on %s,\", resourceName, partitionNames, instanceName), then in the different branches, append more content.", "author": "jiajunwang", "createdAt": "2020-05-15T04:47:26Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2NTAzNg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r425565036", "bodyText": "It looks like there are many error messages look like this, I think we can have a private method to generate the formated messaged based on the input, the parameters could be: partitionNames, instanceName, failure reason (so the callers just have different logic of generating the different reasons).", "author": "jiajunwang", "createdAt": "2020-05-15T04:53:05Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +573,41 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      String errMessage;\n+      if (!_zkClient.exists(instancePath)) {\n+        errMessage = String.format(\n+            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n+            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+      } else {\n+        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n+                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n+            clusterName);\n+      }\n+      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + resourceName + \" is not added\");\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n+              partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n+    Set<String> partitions;\n     if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getMapFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+      partitions = idealState.getRecord().getMapFields().keySet();\n     } else {\n-      Set<String> partitions = new HashSet<String>(idealState.getRecord().getListFields().keySet());\n-      if (!partitions.containsAll(resetPartitionNames)) {\n-        throw new HelixException(\n-            \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-                + \", because not all \" + partitionNames + \" exist\");\n-      }\n+      partitions = idealState.getRecord().getListFields().keySet();\n+    }\n+    if (!partitions.containsAll(resetPartitionNames)) {\n+      throw new HelixException(String\n+          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,", "originalCommit": "57fa62f9ef322843d54f2e13c32b494859ed6ca8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c73393..c8012bb92 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,39 +620,34 @@ public class ZKHelixAdmin implements HelixAdmin {\n     if (liveInstance == null) {\n       // check if the instance has never exist in the cluster\n       String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      String errMessage;\n       if (!_zkClient.exists(instancePath)) {\n-        errMessage = String.format(\n-            \"Can't reset state for %s.%s on %s, because %s has never existed\" + \" in cluster %s\",\n-            resourceName, partitionNames, instanceName, instanceName, clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n       } else {\n-        errMessage = String.format(\"Can't reset state for %s.%s on %s, because %s does not live in\"\n-                + \" cluster %s anymore\", resourceName, partitionNames, instanceName, instanceName,\n-            clusterName);\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n       }\n-      throw new HelixException(errMessage);\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because %s is not added\", resourceName,\n-              partitionNames, instanceName, resourceName));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n     }\n \n     // check partition exists in resource group\n     Set<String> resetPartitionNames = new HashSet<String>(partitionNames);\n-    Set<String> partitions;\n-    if (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) {\n-      partitions = idealState.getRecord().getMapFields().keySet();\n-    } else {\n-      partitions = idealState.getRecord().getListFields().keySet();\n-    }\n+    Set<String> partitions =\n+        (idealState.getRebalanceMode() == RebalanceMode.CUSTOMIZED) ? idealState.getRecord()\n+            .getMapFields().keySet() : idealState.getRecord().getListFields().keySet();\n     if (!partitions.containsAll(resetPartitionNames)) {\n-      throw new HelixException(String\n-          .format(\"Can't reset state for %s.%s on %s, because not all %s exist\", resourceName,\n-              partitionNames, instanceName, partitionNames));\n+      throw new HelixException(\n+          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+              ResetPartitionFailureReason.PARTITION_NONEXISTENT));\n     }\n \n     // check partition is in ERROR state\n"}}, {"oid": "01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "url": "https://github.com/apache/helix/commit/01fe0adee03f1b928d93d719e44aa0a90a53ea7e", "message": "Address comments", "committedDate": "2020-05-15T07:13:37Z", "type": "forcePushed"}, {"oid": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "url": "https://github.com/apache/helix/commit/d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "message": "Address comments", "committedDate": "2020-05-15T07:29:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMzE0MA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r426823140", "bodyText": "nit, this is about style.\nIn Java, you can put fields into enum items. This format string can be a field of the ResetPartitionFailureReason enum item. Then you don't need the switch here.", "author": "jiajunwang", "createdAt": "2020-05-18T18:41:32Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,51 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE,\n+    INSTANCE_NONEXISTENT,\n+    RESOURCE_NONEXISTENT,\n+    PARTITION_NONEXISTENT,\n+    PARTITION_NOT_ERROR,\n+    STATE_MODEL_NONEXISTENT,\n+    PENDING_MSG\n+  }\n+\n+  private String resetPartitionLogHelper(String clusterName, String instanceName,\n+      String resourceName, List<String> partitionNames, String strArg,\n+      ResetPartitionFailureReason reason) {\n+    String errMessage = String\n+        .format(\"Can't reset state for %s.%s on %s, because \", resourceName, partitionNames,\n+            instanceName);\n+\n+    switch (reason) {\n+      case INSTANCE_NOTALIVE:\n+        errMessage +=\n+            String.format(\"%s has never existed in cluster %s\", instanceName, clusterName);", "originalCommit": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1c0cf419d437a320853a84464c868afce5fca46", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex c8012bb92..b531e8778 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -561,48 +561,26 @@ public class ZKHelixAdmin implements HelixAdmin {\n   }\n \n   private enum ResetPartitionFailureReason {\n-    INSTANCE_NOTALIVE,\n-    INSTANCE_NONEXISTENT,\n-    RESOURCE_NONEXISTENT,\n-    PARTITION_NONEXISTENT,\n-    PARTITION_NOT_ERROR,\n-    STATE_MODEL_NONEXISTENT,\n-    PENDING_MSG\n-  }\n-\n-  private String resetPartitionLogHelper(String clusterName, String instanceName,\n-      String resourceName, List<String> partitionNames, String strArg,\n-      ResetPartitionFailureReason reason) {\n-    String errMessage = String\n-        .format(\"Can't reset state for %s.%s on %s, because \", resourceName, partitionNames,\n-            instanceName);\n-\n-    switch (reason) {\n-      case INSTANCE_NOTALIVE:\n-        errMessage +=\n-            String.format(\"%s has never existed in cluster %s\", instanceName, clusterName);\n-        break;\n-      case INSTANCE_NONEXISTENT:\n-        errMessage +=\n-            String.format(\"%s is not live in cluster %s anymore\", instanceName, clusterName);\n-        break;\n-      case RESOURCE_NONEXISTENT:\n-        errMessage += String.format(\"resource %s is not added\", resourceName);\n-        break;\n-      case PARTITION_NONEXISTENT:\n-        errMessage += String.format(\"not all %s exist\", partitionNames);\n-        break;\n-      case PARTITION_NOT_ERROR:\n-        errMessage += String.format(\"not all %s are in ERROR state\", partitionNames);\n-        break;\n-      case STATE_MODEL_NONEXISTENT:\n-        errMessage += String.format(\"%s is NOT found\", strArg);\n-        break;\n-      case PENDING_MSG:\n-        errMessage += String.format(\"a pending message exists: %s\", strArg);\n-        break;\n-    }\n-    return errMessage;\n+    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NONEXISTENT(\"resource %s is not added\"),\n+    PARTITION_NONEXISTENT(\"not all %s exist\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found\"),\n+    STATE_MODEL_NONEXISTENT(\"%s is NOT found\"),\n+    PENDING_MSG(\"a pending message exists: %s\");\n+\n+    private String message;\n+\n+    ResetPartitionFailureReason(String message) {\n+      this.message = message;\n+    }\n+\n+    public String getMessage(String instanceName, String resourceName,\n+        List<String> partitionNames) {\n+      return String\n+          .format(\"Can't reset state for %s.%s on %s, because \", resourceName, partitionNames,\n+              instanceName) + message;\n+    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyNzQyOQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r426827429", "bodyText": "This test case works but not very clean. Since the testResource has not been created, the resetPartition may fail due to other reasons. So the test logic here might be impacted if we change that logic. For example, we check the resource existence first in the future.\nTo avoid that impact, let's have the resource created and then test reset.\nBTW, in that case, you will need to use the verifier to wait until resource assignment has been done and state converged.", "author": "jiajunwang", "createdAt": "2020-05-18T18:49:50Z", "path": "helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java", "diffHunk": "@@ -560,6 +560,82 @@ public void testLegacyEnableDisablePartition() {\n         2);\n   }\n \n+  @Test\n+  public void testResetPartition() throws Exception {\n+    String className = TestHelper.getTestClassName();\n+    String methodName = TestHelper.getTestMethodName();\n+    String clusterName = className + \"_\" + methodName;\n+    String instanceName = \"TestInstance\";\n+    String testResource = \"TestResource\";\n+    String wrongTestInstance = \"WrongTestInstance\";\n+    System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n+    HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n+    admin.addCluster(clusterName, true);\n+    admin.addInstance(clusterName, new InstanceConfig(instanceName));\n+    admin.enableInstance(clusterName, instanceName, true);\n+\n+    InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+\n+    // Test the sanity check for resetPartition.\n+    // resetPartition is expected to throw an exception when provided with a nonexistent instance.\n+    try {\n+      admin.resetPartition(clusterName, wrongTestInstance, testResource, Arrays.asList(\"1\", \"2\"));", "originalCommit": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1c0cf419d437a320853a84464c868afce5fca46", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\nindex ab0892a5f..9501bab1d 100644\n--- a/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n+++ b/helix-core/src/test/java/org/apache/helix/manager/zk/TestZkHelixAdmin.java\n\n@@ -568,15 +568,27 @@ public class TestZkHelixAdmin extends ZkUnitTestBase {\n     String instanceName = \"TestInstance\";\n     String testResource = \"TestResource\";\n     String wrongTestInstance = \"WrongTestInstance\";\n+    String wrongTestResource = \"WrongTestResource\";\n     System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()));\n     HelixAdmin admin = new ZKHelixAdmin(_gZkClient);\n     admin.addCluster(clusterName, true);\n     admin.addInstance(clusterName, new InstanceConfig(instanceName));\n     admin.enableInstance(clusterName, instanceName, true);\n-\n     InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n \n-    // Test the sanity check for resetPartition.\n+    IdealState idealState = new IdealState(testResource);\n+    idealState.setNumPartitions(3);\n+    admin.addStateModelDef(clusterName, \"MasterSlave\", new MasterSlaveSMD());\n+    idealState.setStateModelDefRef(\"MasterSlave\");\n+    idealState.setRebalanceMode(IdealState.RebalanceMode.FULL_AUTO);\n+    admin.addResource(clusterName, testResource, idealState);\n+    admin.enableResource(clusterName, testResource, true);\n+\n+    /*\n+     * This is an unit test for sanity check in resetPartition().\n+     * There is no running controller in this test. We have end-to-end tests for resetPartition()\n+     * under webapp/TestResetPartitionState and integration/TestResetPartitionState.\n+     */\n     // resetPartition is expected to throw an exception when provided with a nonexistent instance.\n     try {\n       admin.resetPartition(clusterName, wrongTestInstance, testResource, Arrays.asList(\"1\", \"2\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0ODE1OQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r426848159", "bodyText": "Nit, just about style :) To reduce the duplicate code, I would do something like this\nString failureReason = _zkClient.exists(instancePath) ? ResetPartitionFailureReason.INSTANCE_NONEXISTENT) :  ResetPartitionFailureReason.INSTANCE_NOTALIVE);\nthrow new HelixException(...);", "author": "huizhilu", "createdAt": "2020-05-18T19:30:27Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +618,36 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has never exist in the cluster\n+      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n+      if (!_zkClient.exists(instancePath)) {\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n+      } else {\n+        throw new HelixException(\n+            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n+                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));", "originalCommit": "d3d95cff2d4b3aeac09c936e3893f40ad00c63d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1c0cf419d437a320853a84464c868afce5fca46", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex c8012bb92..b531e8778 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -618,25 +596,21 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has never exist in the cluster\n-      String instancePath = PropertyPathBuilder.instance(clusterName, instanceName);\n-      if (!_zkClient.exists(instancePath)) {\n-        throw new HelixException(\n-            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n-                ResetPartitionFailureReason.INSTANCE_NOTALIVE));\n-      } else {\n-        throw new HelixException(\n-            resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n-                ResetPartitionFailureReason.INSTANCE_NONEXISTENT));\n-      }\n+      // check if the instance has added to the cluster\n+      String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n+      throw new HelixException(String.format(\n+          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOTALIVE\n+              .getMessage(instanceName, resourceName, partitionNames)\n+              : ResetPartitionFailureReason.INSTANCE_NONEXISTENT\n+                  .getMessage(instanceName, resourceName, partitionNames), instanceName,\n+          clusterName));\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n-      throw new HelixException(\n-          resetPartitionLogHelper(clusterName, instanceName, resourceName, partitionNames, null,\n-              ResetPartitionFailureReason.RESOURCE_NONEXISTENT));\n+      throw new HelixException(String.format(ResetPartitionFailureReason.RESOURCE_NONEXISTENT\n+          .getMessage(instanceName, resourceName, partitionNames), resourceName));\n     }\n \n     // check partition exists in resource group\n"}}, {"oid": "d1c0cf419d437a320853a84464c868afce5fca46", "url": "https://github.com/apache/helix/commit/d1c0cf419d437a320853a84464c868afce5fca46", "message": "Address comments", "committedDate": "2020-05-19T21:26:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1NjYwNw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r427756607", "bodyText": "The method should either return a formated message or a pure format string. The current design is mixing and would be hard to use.", "author": "jiajunwang", "createdAt": "2020-05-20T05:52:07Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,29 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NONEXISTENT(\"resource %s is not added\"),\n+    PARTITION_NONEXISTENT(\"not all %s exist\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found\"),\n+    STATE_MODEL_NONEXISTENT(\"%s is NOT found\"),\n+    PENDING_MSG(\"a pending message exists: %s\");\n+\n+    private String message;\n+\n+    ResetPartitionFailureReason(String message) {\n+      this.message = message;\n+    }\n+\n+    public String getMessage(String instanceName, String resourceName,", "originalCommit": "d1c0cf419d437a320853a84464c868afce5fca46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e7fee0b9f4bff34e20426b476495709ffc529d1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex b531e8778..96f2284ff 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -575,11 +575,8 @@ public class ZKHelixAdmin implements HelixAdmin {\n       this.message = message;\n     }\n \n-    public String getMessage(String instanceName, String resourceName,\n-        List<String> partitionNames) {\n-      return String\n-          .format(\"Can't reset state for %s.%s on %s, because \", resourceName, partitionNames,\n-              instanceName) + message;\n+    public String getMessage() {\n+      return \"Can't reset state for %s.%s on %s, because \"+ message;\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1Njg3Nw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r427756877", "bodyText": "I would suggest passing the cluster name to getMessage, and let it return the fully formated string.", "author": "jiajunwang", "createdAt": "2020-05-20T05:52:50Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +596,31 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance has added to the cluster\n+      String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n+      throw new HelixException(String.format(\n+          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOTALIVE\n+              .getMessage(instanceName, resourceName, partitionNames)\n+              : ResetPartitionFailureReason.INSTANCE_NONEXISTENT\n+                  .getMessage(instanceName, resourceName, partitionNames), instanceName,\n+          clusterName));", "originalCommit": "d1c0cf419d437a320853a84464c868afce5fca46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MzI2Mg==", "url": "https://github.com/apache/helix/pull/1007#discussion_r427763262", "bodyText": "Some messages require 2 args an others need one arg. Please correct me if I am wrong but I think it is hard to return a fully formated string if we do not add extra logic here.", "author": "xyuanlu", "createdAt": "2020-05-20T06:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1Njg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8e7fee0b9f4bff34e20426b476495709ffc529d1", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex b531e8778..96f2284ff 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -596,21 +593,19 @@ public class ZKHelixAdmin implements HelixAdmin {\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      // check if the instance has added to the cluster\n+      // check if the instance exists in the cluster\n       String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n       throw new HelixException(String.format(\n           _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOTALIVE\n-              .getMessage(instanceName, resourceName, partitionNames)\n-              : ResetPartitionFailureReason.INSTANCE_NONEXISTENT\n-                  .getMessage(instanceName, resourceName, partitionNames), instanceName,\n-          clusterName));\n+              .getMessage() : ResetPartitionFailureReason.INSTANCE_NONEXISTENT.getMessage(),\n+           resourceName, partitionNames, instanceName, instanceName, clusterName));\n     }\n \n     // check resource group exists\n     IdealState idealState = accessor.getProperty(keyBuilder.idealStates(resourceName));\n     if (idealState == null) {\n       throw new HelixException(String.format(ResetPartitionFailureReason.RESOURCE_NONEXISTENT\n-          .getMessage(instanceName, resourceName, partitionNames), resourceName));\n+          .getMessage(), resourceName, partitionNames, instanceName, resourceName));\n     }\n \n     // check partition exists in resource group\n"}}, {"oid": "8e7fee0b9f4bff34e20426b476495709ffc529d1", "url": "https://github.com/apache/helix/commit/8e7fee0b9f4bff34e20426b476495709ffc529d1", "message": "Adddress comment", "committedDate": "2020-05-20T06:48:36Z", "type": "forcePushed"}, {"oid": "437168584083b3fa2d3241ddb45221f7c77a7a70", "url": "https://github.com/apache/helix/commit/437168584083b3fa2d3241ddb45221f7c77a7a70", "message": "Adddress comment", "committedDate": "2020-05-20T06:56:23Z", "type": "forcePushed"}, {"oid": "e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "url": "https://github.com/apache/helix/commit/e493b1c0f5f3f1a46a2d43b435ea0f8e2b925d76", "message": "address comment", "committedDate": "2020-05-21T00:06:02Z", "type": "forcePushed"}, {"oid": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "url": "https://github.com/apache/helix/commit/7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "message": "add verifier for clean up", "committedDate": "2020-05-26T00:44:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwODM2Nw==", "url": "https://github.com/apache/helix/pull/1007#discussion_r431408367", "bodyText": "Let's make the naming convention consistent. NON will be a word that better to have:\nINSTANCE_NOT_ALIVE\nINSTANCE_NON_EXISTENT\n...\nPARTITION_NOT_ERROR", "author": "junkaixue", "createdAt": "2020-05-27T19:59:43Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,28 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NONEXISTENT(\"resource %s is not added to cluster %s\"),\n+    PARTITION_NONEXISTENT(\"not all %s exist in cluster %s\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n+    STATE_MODEL_NONEXISTENT(\"%s is NOT found in cluster %s\"),", "originalCommit": "7394764e0a1ad0ec6247e75b949ca15ddee78c1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 2a626ae48..20f673655 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -561,12 +561,12 @@ public class ZKHelixAdmin implements HelixAdmin {\n   }\n \n   private enum ResetPartitionFailureReason {\n-    INSTANCE_NOTALIVE(\"%s is not alive in cluster %s\"),\n-    INSTANCE_NONEXISTENT(\"%s does not exist in cluster %s\"),\n-    RESOURCE_NONEXISTENT(\"resource %s is not added to cluster %s\"),\n-    PARTITION_NONEXISTENT(\"not all %s exist in cluster %s\"),\n+    INSTANCE_NOT_ALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NON_EXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NON_EXISTENT(\"resource %s is not added to cluster %s\"),\n+    PARTITION_NON_EXISTENT(\"not all %s exist in cluster %s\"),\n     PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n-    STATE_MODEL_NONEXISTENT(\"%s is NOT found in cluster %s\"),\n+    STATE_MODEL_NON_EXISTENT(\"%s is NOT found in cluster %s\"),\n     PENDING_MSG(\"a pending message %s exists for resource %s\");\n \n     private String message;\n"}}, {"oid": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "url": "https://github.com/apache/helix/commit/8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "message": "Address comment", "committedDate": "2020-05-28T18:52:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ5MTQyNQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r433491425", "bodyText": "Let's don't bother including PENDING_MSG here. This is not compatible with the other types. And if there is no other better way, we should not be blocked on this.\nJust leave it as it originally be.", "author": "jiajunwang", "createdAt": "2020-06-01T21:08:39Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -560,6 +560,28 @@ private void processMaintenanceMode(String clusterName, final boolean enabled,\n     }\n   }\n \n+  private enum ResetPartitionFailureReason {\n+    INSTANCE_NOT_ALIVE(\"%s is not alive in cluster %s\"),\n+    INSTANCE_NON_EXISTENT(\"%s does not exist in cluster %s\"),\n+    RESOURCE_NON_EXISTENT(\"resource %s is not added to cluster %s\"),\n+    PARTITION_NON_EXISTENT(\"not all %s exist in cluster %s\"),\n+    PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n+    STATE_MODEL_NON_EXISTENT(\"%s is NOT found in cluster %s\"),\n+    PENDING_MSG(\"a pending message %s exists for resource %s\");", "originalCommit": "8613b685f1a6bd8d1fe3ab454c9993c9b356b629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1MzEzOQ==", "url": "https://github.com/apache/helix/pull/1007#discussion_r433553139", "bodyText": "Updated. THX", "author": "xyuanlu", "createdAt": "2020-06-02T00:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ5MTQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "96881338cbdb1f43b41d30e8b777d02de917ad72", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 20f673655..e94ad0a17 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -560,28 +560,6 @@ public class ZKHelixAdmin implements HelixAdmin {\n     }\n   }\n \n-  private enum ResetPartitionFailureReason {\n-    INSTANCE_NOT_ALIVE(\"%s is not alive in cluster %s\"),\n-    INSTANCE_NON_EXISTENT(\"%s does not exist in cluster %s\"),\n-    RESOURCE_NON_EXISTENT(\"resource %s is not added to cluster %s\"),\n-    PARTITION_NON_EXISTENT(\"not all %s exist in cluster %s\"),\n-    PARTITION_NOT_ERROR(\"%s is NOT found in cluster %s\"),\n-    STATE_MODEL_NON_EXISTENT(\"%s is NOT found in cluster %s\"),\n-    PENDING_MSG(\"a pending message %s exists for resource %s\");\n-\n-    private String message;\n-\n-    ResetPartitionFailureReason(String message) {\n-      this.message = message;\n-    }\n-\n-    public String getMessage(String resourceName, List<String> partitionNames, String instanceName,\n-        String errorStateEntity, String clusterName) {\n-      return String.format(\"Can't reset state for %s.%s on %s, because \" + message, resourceName,\n-          partitionNames, instanceName, errorStateEntity, clusterName);\n-    }\n-  }\n-\n   @Override\n   public void resetPartition(String clusterName, String instanceName, String resourceName,\n       List<String> partitionNames) {\n"}}, {"oid": "96881338cbdb1f43b41d30e8b777d02de917ad72", "url": "https://github.com/apache/helix/commit/96881338cbdb1f43b41d30e8b777d02de917ad72", "message": "sq commits", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "f8984aa7af708f97b43bd444512b3702abc8d0fd", "url": "https://github.com/apache/helix/commit/f8984aa7af708f97b43bd444512b3702abc8d0fd", "message": "address comments", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "1ac63d93bae47a29c5ac9bb7fcc51170436b6bf4", "url": "https://github.com/apache/helix/commit/1ac63d93bae47a29c5ac9bb7fcc51170436b6bf4", "message": "Address comments", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "b27ab21d77bc418188226f71aa160d7bdc8a34da", "url": "https://github.com/apache/helix/commit/b27ab21d77bc418188226f71aa160d7bdc8a34da", "message": "Address comments", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "da5d5942e4da0a6fbb18472fff45804addefa2bd", "url": "https://github.com/apache/helix/commit/da5d5942e4da0a6fbb18472fff45804addefa2bd", "message": "Adddress comment", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "9523d3987741c2333f4cb11f6a238c30c983032b", "url": "https://github.com/apache/helix/commit/9523d3987741c2333f4cb11f6a238c30c983032b", "message": "address comment", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "7fcdacb1b715940577319443bd6bad26ad556014", "url": "https://github.com/apache/helix/commit/7fcdacb1b715940577319443bd6bad26ad556014", "message": "add verifier for clean up", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "6f63ebeeb7b814747d63c75ec4a865ef0e76e3c1", "url": "https://github.com/apache/helix/commit/6f63ebeeb7b814747d63c75ec4a865ef0e76e3c1", "message": "Address comment", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c", "url": "https://github.com/apache/helix/commit/9a27da800047648cb017b3411aedcfbb0d76fd2c", "message": "address comment", "committedDate": "2020-06-01T23:37:20Z", "type": "commit"}, {"oid": "9a27da800047648cb017b3411aedcfbb0d76fd2c", "url": "https://github.com/apache/helix/commit/9a27da800047648cb017b3411aedcfbb0d76fd2c", "message": "address comment", "committedDate": "2020-06-01T23:37:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0ODE2NA==", "url": "https://github.com/apache/helix/pull/1007#discussion_r433648164", "bodyText": "nit, but will the following code be easier:\n(_zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE : ResetPartitionFailureReason.INSTANCE_NON_EXISTENT)\n.getMessage(resourceName, partitionNames, instanceName, instanceName, clusterName);", "author": "jiajunwang", "createdAt": "2020-06-02T06:30:20Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -573,35 +594,32 @@ public void resetPartition(String clusterName, String instanceName, String resou\n     // check the instance is alive\n     LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName));\n     if (liveInstance == null) {\n-      throw new HelixException(\n-          \"Can't reset state for \" + resourceName + \"/\" + partitionNames + \" on \" + instanceName\n-              + \", because \" + instanceName + \" is not alive\");\n+      // check if the instance exists in the cluster\n+      String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n+      throw new HelixException(String.format(\n+          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE", "originalCommit": "9a27da800047648cb017b3411aedcfbb0d76fd2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dae29e98e0b905e99ed8d0abfba5ba4057816b66", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 282c89440..e5a5e5cce 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -597,11 +597,9 @@ public class ZKHelixAdmin implements HelixAdmin {\n       // check if the instance exists in the cluster\n       String instanceConfigPath = PropertyPathBuilder.instanceConfig(clusterName, instanceName);\n       throw new HelixException(String.format(\n-          _zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE\n-              .getMessage(resourceName, partitionNames, instanceName, instanceName, clusterName)\n-              : ResetPartitionFailureReason.INSTANCE_NON_EXISTENT\n-                  .getMessage(resourceName, partitionNames, instanceName, instanceName,\n-                      clusterName)));\n+          (_zkClient.exists(instanceConfigPath) ? ResetPartitionFailureReason.INSTANCE_NOT_ALIVE\n+              : ResetPartitionFailureReason.INSTANCE_NON_EXISTENT)\n+              .getMessage(resourceName, partitionNames, instanceName, instanceName, clusterName)));\n     }\n \n     // check resource group exists\n"}}, {"oid": "dae29e98e0b905e99ed8d0abfba5ba4057816b66", "url": "https://github.com/apache/helix/commit/dae29e98e0b905e99ed8d0abfba5ba4057816b66", "message": "Address comment", "committedDate": "2020-06-02T18:49:50Z", "type": "commit"}]}