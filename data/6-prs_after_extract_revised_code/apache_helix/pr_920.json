{"pr_number": 920, "pr_title": "Refresh live instance while fetching the current state information in the RoutingTableProvider", "pr_createdAt": "2020-03-31T06:50:45Z", "pr_url": "https://github.com/apache/helix/pull/920", "timeline": [{"oid": "c77ec5505d91905d998fe200cba4a04a497eb90b", "url": "https://github.com/apache/helix/commit/c77ec5505d91905d998fe200cba4a04a497eb90b", "message": "Refresh live instance while fetching the current state information in the RoutingTableProvider.\n\nThis change is a workaround to fix helix-919.\nThe additional read is to prevent the provider from reading the stale current states.", "committedDate": "2020-03-31T05:16:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MTQ5Mw==", "url": "https://github.com/apache/helix/pull/920#discussion_r401181493", "bodyText": "Why do not we refresh the liveInstance when there is CurrentState change at the BasicClusterDataCache?", "author": "lei-xia", "createdAt": "2020-03-31T20:06:01Z", "path": "helix-core/src/main/java/org/apache/helix/spectator/RoutingDataCache.java", "diffHunk": "@@ -79,6 +79,17 @@ public synchronized void refresh(HelixDataAccessor accessor) {\n         .get(HelixConstants.ChangeType.CURRENT_STATE)) {\n       long start = System.currentTimeMillis();\n       _propertyDataChangedMap.put(HelixConstants.ChangeType.CURRENT_STATE, false);\n+      /**\n+       * Workaround of https://github.com/apache/helix/issues/919.\n+       * Why it is workaround?\n+       * 1. Before a larger scale refactoring, to minimize the impact on cache logic, this change\n+       * introduces extra read to update the liveInstance list before processing current states.\n+       * 2. This change does not handle the corresponding callback handlers, which should also be\n+       * registered when a new liveInstance node is found.\n+       * TODO: Refactor cache processing logic and also refine the callback handler registration\n+       * TODO: logic.\n+       **/\n+      _liveInstancePropertyCache.refresh(accessor);", "originalCommit": "c77ec5505d91905d998fe200cba4a04a497eb90b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}