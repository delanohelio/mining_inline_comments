{"pr_number": 1151, "pr_title": "Fix enableWagedRebalance by respecting resource names argument", "pr_createdAt": "2020-07-14T21:24:15Z", "pr_url": "https://github.com/apache/helix/pull/1151", "timeline": [{"oid": "e4df2430de55b80df5cc62e79041707211e3a56c", "url": "https://github.com/apache/helix/commit/e4df2430de55b80df5cc62e79041707211e3a56c", "message": "Fix enableWagedRebalance", "committedDate": "2020-07-14T16:51:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2NDU1NA==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454664554", "bodyText": "I don't think we need this list, just throw the exception on the first null IS.", "author": "jiajunwang", "createdAt": "2020-07-14T21:46:16Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,23 +1861,25 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    List<IdealState> idealStates = new ArrayList<>();\n+    List<PropertyKey> idealStateKeys = new ArrayList<>();\n     List<String> nullIdealStates = new ArrayList<>();", "originalCommit": "e4df2430de55b80df5cc62e79041707211e3a56c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca2860bb3187e35244098daa1e006e0f2ec07b20", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 612e7bf47..05397ed84 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -1861,26 +1861,28 @@ public class ZKHelixAdmin implements HelixAdmin {\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = new ArrayList<>();\n-    List<PropertyKey> idealStateKeys = new ArrayList<>();\n-    List<String> nullIdealStates = new ArrayList<>();\n-    for (String resourceName : resourceNames) {\n-      PropertyKey key = keyBuilder.idealStates(resourceName);\n-      IdealState idealState = accessor.getProperty(key);\n-      if (idealState == null) {\n-        nullIdealStates.add(resourceName);\n-      } else {\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();\n+\n+    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    for (IdealState idealState : idealStates) {\n+      if (resourceNames.contains(idealState.getResourceName())) {\n         idealState.setRebalancerClassName(WagedRebalancer.class.getName());\n         idealState.setRebalanceMode(RebalanceMode.FULL_AUTO);\n-        idealStates.add(idealState);\n-        idealStateKeys.add(key);\n+        enabledIdealStates.add(idealState);\n+        enabledIdealStateKeys.add(keyBuilder.idealStates(idealState.getResourceName()));\n+        enabledResourceNames.add(idealState.getResourceName());\n       }\n     }\n-    if (!nullIdealStates.isEmpty()) {\n+    List<String> resourcesNotFound =\n+        resourceNames.stream().filter(resourceName -> !enabledResourceNames.contains(resourceName))\n+            .collect(Collectors.toList());\n+    if (!resourcesNotFound.isEmpty()) {\n       throw new HelixException(\n-          String.format(\"Not all IdealStates exist in the cluster: %s\", nullIdealStates));\n+          String.format(\"Some resources do not have IdealStates: %s\", resourcesNotFound));\n     }\n-    boolean[] success = accessor.setChildren(idealStateKeys, idealStates);\n+    boolean[] success = accessor.setChildren(enabledIdealStateKeys, enabledIdealStates);\n     for (boolean s : success) {\n       if (!s) {\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2NjQwNQ==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454666405", "bodyText": "The original batch call is more efficient. Why do we want to change it?\nYou can still iterate the returned IS list but filter by the resourceNames list. Then check if any item in the resourceNames but not in the returned IS list.", "author": "jiajunwang", "createdAt": "2020-07-14T21:50:24Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,23 +1861,25 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    List<IdealState> idealStates = new ArrayList<>();\n+    List<PropertyKey> idealStateKeys = new ArrayList<>();\n     List<String> nullIdealStates = new ArrayList<>();\n-    for (int i = 0; i < idealStates.size(); i++) {\n-      if (idealStates.get(i) == null) {\n-        nullIdealStates.add(resourceNames.get(i));\n+    for (String resourceName : resourceNames) {\n+      PropertyKey key = keyBuilder.idealStates(resourceName);\n+      IdealState idealState = accessor.getProperty(key);", "originalCommit": "e4df2430de55b80df5cc62e79041707211e3a56c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MDg5Mw==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454670893", "bodyText": "I agree, okay.", "author": "NealSun96", "createdAt": "2020-07-14T22:00:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2NjQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca2860bb3187e35244098daa1e006e0f2ec07b20", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 612e7bf47..05397ed84 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -1861,26 +1861,28 @@ public class ZKHelixAdmin implements HelixAdmin {\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n-    List<IdealState> idealStates = new ArrayList<>();\n-    List<PropertyKey> idealStateKeys = new ArrayList<>();\n-    List<String> nullIdealStates = new ArrayList<>();\n-    for (String resourceName : resourceNames) {\n-      PropertyKey key = keyBuilder.idealStates(resourceName);\n-      IdealState idealState = accessor.getProperty(key);\n-      if (idealState == null) {\n-        nullIdealStates.add(resourceName);\n-      } else {\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();\n+\n+    List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n+    for (IdealState idealState : idealStates) {\n+      if (resourceNames.contains(idealState.getResourceName())) {\n         idealState.setRebalancerClassName(WagedRebalancer.class.getName());\n         idealState.setRebalanceMode(RebalanceMode.FULL_AUTO);\n-        idealStates.add(idealState);\n-        idealStateKeys.add(key);\n+        enabledIdealStates.add(idealState);\n+        enabledIdealStateKeys.add(keyBuilder.idealStates(idealState.getResourceName()));\n+        enabledResourceNames.add(idealState.getResourceName());\n       }\n     }\n-    if (!nullIdealStates.isEmpty()) {\n+    List<String> resourcesNotFound =\n+        resourceNames.stream().filter(resourceName -> !enabledResourceNames.contains(resourceName))\n+            .collect(Collectors.toList());\n+    if (!resourcesNotFound.isEmpty()) {\n       throw new HelixException(\n-          String.format(\"Not all IdealStates exist in the cluster: %s\", nullIdealStates));\n+          String.format(\"Some resources do not have IdealStates: %s\", resourcesNotFound));\n     }\n-    boolean[] success = accessor.setChildren(idealStateKeys, idealStates);\n+    boolean[] success = accessor.setChildren(enabledIdealStateKeys, enabledIdealStates);\n     for (boolean s : success) {\n       if (!s) {\n         return false;\n"}}, {"oid": "ca2860bb3187e35244098daa1e006e0f2ec07b20", "url": "https://github.com/apache/helix/commit/ca2860bb3187e35244098daa1e006e0f2ec07b20", "message": "Batch call", "committedDate": "2020-07-14T22:41:27Z", "type": "commit"}, {"oid": "ceda668f76718f50eb1e39205dd71d9f5cdb8849", "url": "https://github.com/apache/helix/commit/ceda668f76718f50eb1e39205dd71d9f5cdb8849", "message": "null check", "committedDate": "2020-07-14T22:48:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDQzMA==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454690430", "bodyText": "nit, use Set so the contains check is faster.", "author": "jiajunwang", "createdAt": "2020-07-14T22:52:39Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,24 +1861,28 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();", "originalCommit": "ceda668f76718f50eb1e39205dd71d9f5cdb8849", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "073e633bf15384bf292d45b0012bf1941b9aba5b", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 43fda4609..c81de5bb3 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -1863,7 +1863,7 @@ public class ZKHelixAdmin implements HelixAdmin {\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n     List<IdealState> enabledIdealStates = new ArrayList<>();\n     List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n-    List<String> enabledResourceNames = new ArrayList<>();\n+    Set<String> enabledResourceNames = new HashSet<>();\n \n     List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n     for (IdealState idealState : idealStates) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDkzMA==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454690930", "bodyText": "if (!enabledResourceNames.containsAll(resourceNames)) {\nthrow\n}", "author": "jiajunwang", "createdAt": "2020-07-14T22:54:02Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1861,24 +1861,28 @@ public boolean enableWagedRebalance(String clusterName, List<String> resourceNam\n     HelixDataAccessor accessor =\n         new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<>(_zkClient));\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n+    List<IdealState> enabledIdealStates = new ArrayList<>();\n+    List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n+    List<String> enabledResourceNames = new ArrayList<>();\n+\n     List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n-    List<String> nullIdealStates = new ArrayList<>();\n-    for (int i = 0; i < idealStates.size(); i++) {\n-      if (idealStates.get(i) == null) {\n-        nullIdealStates.add(resourceNames.get(i));\n-      } else {\n-        idealStates.get(i).setRebalancerClassName(WagedRebalancer.class.getName());\n-        idealStates.get(i).setRebalanceMode(RebalanceMode.FULL_AUTO);\n+    for (IdealState idealState : idealStates) {\n+      if (idealState != null && resourceNames.contains(idealState.getResourceName())) {\n+        idealState.setRebalancerClassName(WagedRebalancer.class.getName());\n+        idealState.setRebalanceMode(RebalanceMode.FULL_AUTO);\n+        enabledIdealStates.add(idealState);\n+        enabledIdealStateKeys.add(keyBuilder.idealStates(idealState.getResourceName()));\n+        enabledResourceNames.add(idealState.getResourceName());\n       }\n     }\n-    if (!nullIdealStates.isEmpty()) {\n+    List<String> resourcesNotFound =\n+        resourceNames.stream().filter(resourceName -> !enabledResourceNames.contains(resourceName))\n+            .collect(Collectors.toList());\n+    if (!resourcesNotFound.isEmpty()) {", "originalCommit": "ceda668f76718f50eb1e39205dd71d9f5cdb8849", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcwMzg3Nw==", "url": "https://github.com/apache/helix/pull/1151#discussion_r454703877", "bodyText": "I want to show what resources don't have idealStates, otherwise I don't think it's informative enough.", "author": "NealSun96", "createdAt": "2020-07-14T23:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDkzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzODgxNg==", "url": "https://github.com/apache/helix/pull/1151#discussion_r455238816", "bodyText": "Make sense.", "author": "jiajunwang", "createdAt": "2020-07-15T17:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDkzMA=="}], "type": "inlineReview", "revised_code": {"commit": "073e633bf15384bf292d45b0012bf1941b9aba5b", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 43fda4609..c81de5bb3 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -1863,7 +1863,7 @@ public class ZKHelixAdmin implements HelixAdmin {\n     PropertyKey.Builder keyBuilder = accessor.keyBuilder();\n     List<IdealState> enabledIdealStates = new ArrayList<>();\n     List<PropertyKey> enabledIdealStateKeys = new ArrayList<>();\n-    List<String> enabledResourceNames = new ArrayList<>();\n+    Set<String> enabledResourceNames = new HashSet<>();\n \n     List<IdealState> idealStates = accessor.getChildValues(keyBuilder.idealStates(), true);\n     for (IdealState idealState : idealStates) {\n"}}, {"oid": "073e633bf15384bf292d45b0012bf1941b9aba5b", "url": "https://github.com/apache/helix/commit/073e633bf15384bf292d45b0012bf1941b9aba5b", "message": "Set over list", "committedDate": "2020-07-14T23:37:28Z", "type": "commit"}]}