{"pr_number": 889, "pr_title": "Remove possible score-tie between two AssignableNodes", "pr_createdAt": "2020-03-12T18:33:41Z", "pr_url": "https://github.com/apache/helix/pull/889", "timeline": [{"oid": "86ac985cd5be90cd215d0ebacc29dfa2c137ed59", "url": "https://github.com/apache/helix/commit/86ac985cd5be90cd215d0ebacc29dfa2c137ed59", "message": "Attempt to break tie", "committedDate": "2020-03-12T00:06:07Z", "type": "commit"}, {"oid": "dcd767da1dfc832d59ffedde6321e6fe9f97a4f7", "url": "https://github.com/apache/helix/commit/dcd767da1dfc832d59ffedde6321e6fe9f97a4f7", "message": "unit test case", "committedDate": "2020-03-12T17:29:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MDI4NQ==", "url": "https://github.com/apache/helix/pull/889#discussion_r392390285", "bodyText": "nit, adding parenthesis to the calculation so it is cleaner and safer.", "author": "jiajunwang", "createdAt": "2020-03-13T18:07:14Z", "path": "helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/constraints/ConstraintBasedAlgorithm.java", "diffHunk": "@@ -122,9 +121,12 @@ public OptimalAssignment calculate(ClusterModel clusterModel)\n           if (scoreCompareResult == 0) {\n             // If the evaluation scores of 2 nodes are the same, the algorithm assigns the replica\n             // to the idle node first.\n-            int idleScore1 = busyInstances.contains(nodeEntry1.getKey().getInstanceName()) ? 0 : 1;\n-            int idleScore2 = busyInstances.contains(nodeEntry2.getKey().getInstanceName()) ? 0 : 1;\n-            return idleScore1 - idleScore2;\n+            String instanceName1 = nodeEntry1.getKey().getInstanceName();\n+            String instanceName2 = nodeEntry2.getKey().getInstanceName();\n+            int idleScore1 = busyInstances.contains(instanceName1) ? 0 : 1;\n+            int idleScore2 = busyInstances.contains(instanceName2) ? 0 : 1;\n+            return idleScore1 != idleScore2 ? idleScore1 - idleScore2", "originalCommit": "dcd767da1dfc832d59ffedde6321e6fe9f97a4f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccb4f4d7badb1fc949fcac311a76c06a8fc1c98b", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/constraints/ConstraintBasedAlgorithm.java b/helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/constraints/ConstraintBasedAlgorithm.java\nindex 8e8bcbad3..2f6c9cd48 100644\n--- a/helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/constraints/ConstraintBasedAlgorithm.java\n+++ b/helix-core/src/main/java/org/apache/helix/controller/rebalancer/waged/constraints/ConstraintBasedAlgorithm.java\n\n@@ -125,7 +125,7 @@ class ConstraintBasedAlgorithm implements RebalanceAlgorithm {\n             String instanceName2 = nodeEntry2.getKey().getInstanceName();\n             int idleScore1 = busyInstances.contains(instanceName1) ? 0 : 1;\n             int idleScore2 = busyInstances.contains(instanceName2) ? 0 : 1;\n-            return idleScore1 != idleScore2 ? idleScore1 - idleScore2\n+            return idleScore1 != idleScore2 ? (idleScore1 - idleScore2)\n                 : - instanceName1.compareTo(instanceName2);\n           } else {\n             return scoreCompareResult;\n"}}, {"oid": "ccb4f4d7badb1fc949fcac311a76c06a8fc1c98b", "url": "https://github.com/apache/helix/commit/ccb4f4d7badb1fc949fcac311a76c06a8fc1c98b", "message": "add brackets for clarity", "committedDate": "2020-03-13T21:13:15Z", "type": "commit"}]}