{"pr_number": 856, "pr_title": "Instrument ConfigAccessor's constructors", "pr_createdAt": "2020-03-04T18:40:50Z", "pr_url": "https://github.com/apache/helix/pull/856", "timeline": [{"oid": "65c165452565dd38abf2a57c68fcb69d74e088aa", "url": "https://github.com/apache/helix/commit/65c165452565dd38abf2a57c68fcb69d74e088aa", "message": "Instrument ConfigAccessor's constructors\n\nThis diff instruments ConfigAccessor's constructors to make it realm-aware. If ConfigAccessor is unable to start on multi-realm mode, then it falls back to starting on single-realm mode.", "committedDate": "2020-03-04T18:36:46Z", "type": "commit"}, {"oid": "3671e098e9998f687d1850f75844a6dda6d65c33", "url": "https://github.com/apache/helix/commit/3671e098e9998f687d1850f75844a6dda6d65c33", "message": "Format", "committedDate": "2020-03-04T18:41:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2MTUzOQ==", "url": "https://github.com/apache/helix/pull/856#discussion_r387861539", "bodyText": "Nit: change the java doc: \"HelixZkClient\" -> \"RealmAwareZkClient\"", "author": "huizhilu", "createdAt": "2020-03-04T18:45:38Z", "path": "helix-core/src/main/java/org/apache/helix/ConfigAccessor.java", "diffHunk": "@@ -111,7 +111,7 @@ private ConfigAccessor(Builder builder) throws IOException, InvalidRoutingDataEx\n    * @param zkClient", "originalCommit": "3671e098e9998f687d1850f75844a6dda6d65c33", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e48361e751bce32089fb544b44f6b08a94e613df", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java b/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\nindex 1b733d0b5..7d969b6fd 100644\n--- a/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\n+++ b/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\n\n@@ -107,7 +107,7 @@ public class ConfigAccessor {\n   /**\n    * Initialize an accessor with a Zookeeper client\n    * Note: it is recommended to use the other constructor instead to avoid having to create a\n-   * HelixZkClient.\n+   * RealmAwareZkClient.\n    * @param zkClient\n    */\n   @Deprecated\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NjE3Ng==", "url": "https://github.com/apache/helix/pull/856#discussion_r387866176", "bodyText": "IllegalStateException floated from HttpRoutingDataReader should also be caught.", "author": "huizhilu", "createdAt": "2020-03-04T18:54:08Z", "path": "helix-core/src/main/java/org/apache/helix/ConfigAccessor.java", "diffHunk": "@@ -123,9 +123,22 @@ public ConfigAccessor(HelixZkClient zkClient) {\n    * @param zkAddress\n    */\n   public ConfigAccessor(String zkAddress) {\n-    _zkClient = SharedZkClientFactory.getInstance()\n-        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddress),\n-            new HelixZkClient.ZkClientConfig().setZkSerializer(new ZNRecordSerializer()));\n+    // First, attempt to connect on multi-realm mode using FederatedZkClient\n+    RealmAwareZkClient zkClient;\n+    try {\n+      zkClient = new FederatedZkClient(\n+          new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build(),\n+          new RealmAwareZkClient.RealmAwareZkClientConfig());\n+    } catch (IOException | InvalidRoutingDataException e) {", "originalCommit": "3671e098e9998f687d1850f75844a6dda6d65c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2ODA2MQ==", "url": "https://github.com/apache/helix/pull/856#discussion_r387868061", "bodyText": "Good catch! Got those sharp eyes on you :)", "author": "narendly", "createdAt": "2020-03-04T18:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NjE3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e48361e751bce32089fb544b44f6b08a94e613df", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java b/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\nindex 1b733d0b5..7d969b6fd 100644\n--- a/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\n+++ b/helix-core/src/main/java/org/apache/helix/ConfigAccessor.java\n\n@@ -129,7 +129,7 @@ public class ConfigAccessor {\n       zkClient = new FederatedZkClient(\n           new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build(),\n           new RealmAwareZkClient.RealmAwareZkClientConfig());\n-    } catch (IOException | InvalidRoutingDataException e) {\n+    } catch (IOException | InvalidRoutingDataException | IllegalStateException e) {\n       // Connecting multi-realm failed - fall back to creating it on single-realm mode using the given ZK address\n       LOG.info(\n           \"ConfigAccessor: not able to connect on multi-realm mode; connecting single-realm mode to ZK: {}\",\n"}}, {"oid": "e48361e751bce32089fb544b44f6b08a94e613df", "url": "https://github.com/apache/helix/commit/e48361e751bce32089fb544b44f6b08a94e613df", "message": "address comments", "committedDate": "2020-03-04T18:57:54Z", "type": "commit"}]}