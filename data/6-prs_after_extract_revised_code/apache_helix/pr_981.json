{"pr_number": 981, "pr_title": "Stabilizing 4 flaky tests", "pr_createdAt": "2020-04-29T18:47:11Z", "pr_url": "https://github.com/apache/helix/pull/981", "timeline": [{"oid": "10826c51e7e05d377c118536edd4fe1c05e588e1", "url": "https://github.com/apache/helix/commit/10826c51e7e05d377c118536edd4fe1c05e588e1", "message": "Stabilizing 4 flaky tests\n\nFour tests has been stabilized in this commit.\nThese tests are:\n1-TestJobFailure\n2-TestRebalanceRunningTask\n3-TestTaskRebalancerStopResume\n4-TestTaskSchedulingTwoCurrentStates", "committedDate": "2020-04-29T16:57:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1Nzc5MA==", "url": "https://github.com/apache/helix/pull/981#discussion_r417557790", "bodyText": "Make sure external view has been created for the resource...", "author": "narendly", "createdAt": "2020-04-29T19:27:38Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created to the resource", "originalCommit": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzI4MQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r417573281", "bodyText": "Done.", "author": "alirezazamani", "createdAt": "2020-04-29T19:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1Nzc5MA=="}], "type": "inlineReview", "revised_code": {"commit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\nindex e96ac563d..ca41a0c1c 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n\n@@ -120,7 +120,7 @@ public final class TestJobFailure extends TaskSynchronizedTestBase {\n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n       List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n-    // Make sure external view is has been created to the resource\n+    // Make sure external view is has been created for the resource\n     boolean isExternalViewCreated = TestHelper.verify(() -> {\n       ExternalView externalView =\n           _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA==", "url": "https://github.com/apache/helix/pull/981#discussion_r417562574", "bodyText": "If you're expecting null, there's really no reason to use getOrDefault?", "author": "narendly", "createdAt": "2020-04-29T19:36:28Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }", "originalCommit": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2Mjg3OA==", "url": "https://github.com/apache/helix/pull/981#discussion_r417562878", "bodyText": "In this case, a simple containsKey check would do..", "author": "narendly", "createdAt": "2020-04-29T19:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzQ4Nw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417573487", "bodyText": "Fixed. I simplified the logic.", "author": "alirezazamani", "createdAt": "2020-04-29T19:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjU3NA=="}], "type": "inlineReview", "revised_code": {"commit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\nindex 1ceaeb656..706f4de04 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n\n@@ -143,11 +143,10 @@ public class TestTaskSchedulingTwoCurrentStates extends TaskTestBase {\n     boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n       ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n       Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n-      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n-      if (state == null) {\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n         return false;\n       }\n-      return (state.equals(\"MASTER\"));\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(isMasterSwitchedToCorrectInstance);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY4Mw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417562683", "bodyText": "redundant parentheses", "author": "narendly", "createdAt": "2020-04-29T19:36:39Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n+      if (state == null) {\n+        return false;\n+      }\n+      return (state.equals(\"MASTER\"));", "originalCommit": "5a1c6611f2a31ef262bf6f929ff9e30bc319f77e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzU3MQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r417573571", "bodyText": "Fixed.", "author": "alirezazamani", "createdAt": "2020-04-29T19:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MjY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\nindex 1ceaeb656..706f4de04 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n\n@@ -143,11 +143,10 @@ public class TestTaskSchedulingTwoCurrentStates extends TaskTestBase {\n     boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n       ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n       Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n-      String state = stateMap.getOrDefault(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1), null);\n-      if (state == null) {\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n         return false;\n       }\n-      return (state.equals(\"MASTER\"));\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(isMasterSwitchedToCorrectInstance);\n \n"}}, {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "url": "https://github.com/apache/helix/commit/f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "message": "Address comments", "committedDate": "2020-04-29T19:55:18Z", "type": "commit"}, {"oid": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "url": "https://github.com/apache/helix/commit/f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "message": "Address comments", "committedDate": "2020-04-29T19:55:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NjMzMA==", "url": "https://github.com/apache/helix/pull/981#discussion_r417666330", "bodyText": "A counter is enough, no need to create a HashSet, right?", "author": "huizhilu", "createdAt": "2020-04-29T23:15:05Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,28 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "originalCommit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MjQ0Mg==", "url": "https://github.com/apache/helix/pull/981#discussion_r417692442", "bodyText": "Please note that we want to make sure that the master for two different resources are existed in two different instances. Counter is also possible. However, I still think this implementation in more readable. Specially considering that this is only a test.", "author": "alirezazamani", "createdAt": "2020-04-30T00:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NjMzMA=="}], "type": "inlineReview", "revised_code": {"commit": "d4348d7b79a8d538aa3f776a4848d1435140e520", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\nindex 91a4ea5d1..20396ec0e 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n\n@@ -269,6 +269,9 @@ public final class TestRebalanceRunningTask extends TaskSynchronizedTestBase {\n       HashSet<String> masterInstances = new HashSet<>();\n       ExternalView externalView =\n           _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n       Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n       Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n       for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NzQ1Mw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417667453", "bodyText": "Nit, I would just do assertTrue(TestHelper.verify()); to get rid of the temp boolean isExternalViewCreated var to minimize variable scope. Same for following usages.", "author": "huizhilu", "createdAt": "2020-04-29T23:18:42Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view is has been created for the resource\n+    boolean isExternalViewCreated = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);\n+    }, TestHelper.WAIT_DURATION);\n+    Assert.assertTrue(isExternalViewCreated);", "originalCommit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MzgzMw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417693833", "bodyText": "Good suggestion. Changed.", "author": "alirezazamani", "createdAt": "2020-04-30T00:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2NzQ1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5f44801cbf9dbe8589155b418c411642dbcf9a23", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\nindex ca41a0c1c..4bb325039 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n\n@@ -120,13 +120,13 @@ public final class TestJobFailure extends TaskSynchronizedTestBase {\n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n       List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n-    // Make sure external view is has been created for the resource\n-    boolean isExternalViewCreated = TestHelper.verify(() -> {\n+    // Make sure external view has been created for the resource\n+    Assert.assertTrue(TestHelper.verify(() -> {\n       ExternalView externalView =\n           _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n       return (externalView != null);\n-    }, TestHelper.WAIT_DURATION);\n-    Assert.assertTrue(isExternalViewCreated);\n+    }, TestHelper.WAIT_DURATION));\n+\n     ExternalView externalView =\n         _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n     Set<String> partitionSet = externalView.getPartitionSet();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODQ2Mw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417668463", "bodyText": "Is externalView possible to be null?", "author": "huizhilu", "createdAt": "2020-04-29T23:21:53Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");", "originalCommit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5NTIzNg==", "url": "https://github.com/apache/helix/pull/981#discussion_r417695236", "bodyText": "Yeah it is possible. I added new check for the null EV.", "author": "alirezazamani", "createdAt": "2020-04-30T00:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5f44801cbf9dbe8589155b418c411642dbcf9a23", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\nindex 706f4de04..28858ed26 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n\n@@ -141,12 +141,16 @@ public class TestTaskSchedulingTwoCurrentStates extends TaskTestBase {\n \n     // Make sure master has been correctly switched to Participant1\n     boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n-      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n-      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n       if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n         return false;\n       }\n-      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(isMasterSwitchedToCorrectInstance);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODc2Nw==", "url": "https://github.com/apache/helix/pull/981#discussion_r417668767", "bodyText": "These checks could be simplified to \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "author": "huizhilu", "createdAt": "2020-04-29T23:22:52Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,17 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n+        return false;\n+      }\n+      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");", "originalCommit": "f5f29b51dc32cee30eefd82e2dbc5a91873085f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5NDcwNQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r417694705", "bodyText": "Fixed. Thanks.", "author": "alirezazamani", "createdAt": "2020-04-30T00:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2ODc2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5f44801cbf9dbe8589155b418c411642dbcf9a23", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\nindex 706f4de04..28858ed26 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n\n@@ -141,12 +141,16 @@ public class TestTaskSchedulingTwoCurrentStates extends TaskTestBase {\n \n     // Make sure master has been correctly switched to Participant1\n     boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n-      ExternalView externalView = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n-      Map <String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n       if (!stateMap.containsKey(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))) {\n         return false;\n       }\n-      return stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)).equals(\"MASTER\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(isMasterSwitchedToCorrectInstance);\n \n"}}, {"oid": "5f44801cbf9dbe8589155b418c411642dbcf9a23", "url": "https://github.com/apache/helix/commit/5f44801cbf9dbe8589155b418c411642dbcf9a23", "message": "Fix comments 2", "committedDate": "2020-04-30T00:55:34Z", "type": "commit"}, {"oid": "d4348d7b79a8d538aa3f776a4848d1435140e520", "url": "https://github.com/apache/helix/commit/d4348d7b79a8d538aa3f776a4848d1435140e520", "message": "Added further checks in verify", "committedDate": "2020-04-30T01:31:23Z", "type": "commit"}, {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "url": "https://github.com/apache/helix/commit/ffed6ca68399fb9c499807e866834ec2e63be9ae", "message": "final modifications", "committedDate": "2020-04-30T02:46:17Z", "type": "commit"}, {"oid": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "url": "https://github.com/apache/helix/commit/ffed6ca68399fb9c499807e866834ec2e63be9ae", "message": "final modifications", "committedDate": "2020-04-30T02:46:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTE4MQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r418251181", "bodyText": "Parentheses aren't needed here.", "author": "narendly", "createdAt": "2020-04-30T19:51:47Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java", "diffHunk": "@@ -118,8 +118,15 @@ public void testNormalJobFailure(String comment, List<String> taskStates,\n   }\n \n   private Map<String, Map<String, String>> createPartitionConfig(List<String> taskStates,\n-      List<String> expectedTaskEndingStates) {\n+      List<String> expectedTaskEndingStates) throws Exception {\n     Map<String, Map<String, String>> targetPartitionConfigs = new HashMap<>();\n+    // Make sure external view has been created for the resource\n+    Assert.assertTrue(TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n+      return (externalView != null);", "originalCommit": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjU1NQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r418322555", "bodyText": "Done.", "author": "alirezazamani", "createdAt": "2020-04-30T22:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\nindex 4bb325039..b06cebb6d 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestJobFailure.java\n\n@@ -124,7 +124,7 @@ public final class TestJobFailure extends TaskSynchronizedTestBase {\n     Assert.assertTrue(TestHelper.verify(() -> {\n       ExternalView externalView =\n           _manager.getClusterManagmentTool().getResourceExternalView(CLUSTER_NAME, DB_NAME);\n-      return (externalView != null);\n+      return externalView != null;\n     }, TestHelper.WAIT_DURATION));\n \n     ExternalView externalView =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTYxNw==", "url": "https://github.com/apache/helix/pull/981#discussion_r418251617", "bodyText": "Could we declare it as Set instead of HashSet here?", "author": "narendly", "createdAt": "2020-04-30T19:52:43Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();", "originalCommit": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjYxMg==", "url": "https://github.com/apache/helix/pull/981#discussion_r418322612", "bodyText": "Done.", "author": "alirezazamani", "createdAt": "2020-04-30T22:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTYxNw=="}], "type": "inlineReview", "revised_code": {"commit": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\nindex 20396ec0e..e65979761 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n\n@@ -264,16 +264,21 @@ public final class TestRebalanceRunningTask extends TaskSynchronizedTestBase {\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n \n-    // Wait until master is switched to new instance and two masters existed on two different instance\n+    // Wait until master is switched to new instance and two masters exist on two different instances\n     boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n-      HashSet<String> masterInstances = new HashSet<>();\n+      Set<String> masterInstances = new HashSet<>();\n       ExternalView externalView =\n           _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n       if (externalView == null) {\n         return false;\n       }\n+\n       Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n       Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      if (stateMap0 == null || stateMap1 == null) {\n+        return false;\n+      }\n+\n       for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n         if (entry.getValue().equals(\"MASTER\")) {\n           masterInstances.add(entry.getKey());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTg2MA==", "url": "https://github.com/apache/helix/pull/981#discussion_r418251860", "bodyText": "Nit: \"two masters exist on two different instances\"", "author": "narendly", "createdAt": "2020-04-30T19:53:15Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance", "originalCommit": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjcwOA==", "url": "https://github.com/apache/helix/pull/981#discussion_r418322708", "bodyText": "Fixed.", "author": "alirezazamani", "createdAt": "2020-04-30T22:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MTg2MA=="}], "type": "inlineReview", "revised_code": {"commit": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\nindex 20396ec0e..e65979761 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n\n@@ -264,16 +264,21 @@ public final class TestRebalanceRunningTask extends TaskSynchronizedTestBase {\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n \n-    // Wait until master is switched to new instance and two masters existed on two different instance\n+    // Wait until master is switched to new instance and two masters exist on two different instances\n     boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n-      HashSet<String> masterInstances = new HashSet<>();\n+      Set<String> masterInstances = new HashSet<>();\n       ExternalView externalView =\n           _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n       if (externalView == null) {\n         return false;\n       }\n+\n       Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n       Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      if (stateMap0 == null || stateMap1 == null) {\n+        return false;\n+      }\n+\n       for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n         if (entry.getValue().equals(\"MASTER\")) {\n           masterInstances.add(entry.getKey());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjUwNw==", "url": "https://github.com/apache/helix/pull/981#discussion_r418252507", "bodyText": "Parentheses not needed?", "author": "narendly", "createdAt": "2020-04-30T19:54:30Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java", "diffHunk": "@@ -261,6 +263,31 @@ public void testFixedTargetTaskAndDisabledRebalanceAndNodeAdded() throws Interru\n         new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient)\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n+\n+    // Wait until master is switched to new instance and two masters existed on two different instance\n+    boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n+      HashSet<String> masterInstances = new HashSet<>();\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n+      Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      for (Map.Entry<String, String> entry : stateMap1.entrySet()) {\n+        if (entry.getValue().equals(\"MASTER\")) {\n+          masterInstances.add(entry.getKey());\n+        }\n+      }\n+      return (masterInstances.size() == 2);", "originalCommit": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjY2MQ==", "url": "https://github.com/apache/helix/pull/981#discussion_r418322661", "bodyText": "Done.", "author": "alirezazamani", "createdAt": "2020-04-30T22:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjUwNw=="}], "type": "inlineReview", "revised_code": {"commit": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\nindex 20396ec0e..e65979761 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestRebalanceRunningTask.java\n\n@@ -264,16 +264,21 @@ public final class TestRebalanceRunningTask extends TaskSynchronizedTestBase {\n             .setResources(Sets.newHashSet(DATABASE)).build();\n     Assert.assertTrue(clusterVerifier.verify(10 * 1000));\n \n-    // Wait until master is switched to new instance and two masters existed on two different instance\n+    // Wait until master is switched to new instance and two masters exist on two different instances\n     boolean isMasterOnTwoDifferentNodes = TestHelper.verify(() -> {\n-      HashSet<String> masterInstances = new HashSet<>();\n+      Set<String> masterInstances = new HashSet<>();\n       ExternalView externalView =\n           _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n       if (externalView == null) {\n         return false;\n       }\n+\n       Map<String, String> stateMap0 = externalView.getStateMap(DATABASE + \"_0\");\n       Map<String, String> stateMap1 = externalView.getStateMap(DATABASE + \"_1\");\n+      if (stateMap0 == null || stateMap1 == null) {\n+        return false;\n+      }\n+\n       for (Map.Entry<String, String> entry : stateMap0.entrySet()) {\n         if (entry.getValue().equals(\"MASTER\")) {\n           masterInstances.add(entry.getKey());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MzQxMA==", "url": "https://github.com/apache/helix/pull/981#discussion_r418253410", "bodyText": "Do we need to do a null check on stateMap here?", "author": "narendly", "createdAt": "2020-04-30T19:56:21Z", "path": "helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java", "diffHunk": "@@ -138,6 +139,18 @@ public void testTargetedTaskTwoCurrentStates() throws Exception {\n     JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName);\n     jobQueue.enqueueJob(\"JOB0\", jobBuilder0);\n \n+    // Make sure master has been correctly switched to Participant1\n+    boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(() -> {\n+      ExternalView externalView =\n+          _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME, DATABASE);\n+      if (externalView == null) {\n+        return false;\n+      }\n+      Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));", "originalCommit": "ffed6ca68399fb9c499807e866834ec2e63be9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMjgxNw==", "url": "https://github.com/apache/helix/pull/981#discussion_r418322817", "bodyText": "Added null check.", "author": "alirezazamani", "createdAt": "2020-04-30T22:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MzQxMA=="}], "type": "inlineReview", "revised_code": {"commit": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\nindex 60f4fb42f..85996e7cc 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/task/TestTaskSchedulingTwoCurrentStates.java\n\n@@ -147,6 +147,9 @@ public class TestTaskSchedulingTwoCurrentStates extends TaskTestBase {\n         return false;\n       }\n       Map<String, String> stateMap = externalView.getStateMap(DATABASE + \"_0\");\n+      if (stateMap == null) {\n+        return false;\n+      }\n       return \"MASTER\".equals(stateMap.get(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)));\n     }, TestHelper.WAIT_DURATION);\n     Assert.assertTrue(isMasterSwitchedToCorrectInstance);\n"}}, {"oid": "c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "url": "https://github.com/apache/helix/commit/c0437c03dcf8147bd70f8bfdddcf24a86c9746de", "message": "address new comments", "committedDate": "2020-04-30T20:19:26Z", "type": "commit"}]}