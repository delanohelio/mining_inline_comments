{"pr_number": 1104, "pr_title": "Enhance flaky test TestRemoveUserCbHandlerOnPathRemoval", "pr_createdAt": "2020-06-18T00:35:04Z", "pr_url": "https://github.com/apache/helix/pull/1104", "timeline": [{"oid": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3", "url": "https://github.com/apache/helix/commit/8475450c98f0bf15cf81f9fb69cc6fef876a9ac3", "message": "Fix flaky test testRemoveUserCbHandlerOnPathRemoval # #1102\n\nTestRemoveUserCbHandlerOnPathRemoval has a flaky assert. Addres\nthe assertion in this diff.", "committedDate": "2020-06-18T00:26:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw==", "url": "https://github.com/apache/helix/pull/1104#discussion_r442525807", "bodyText": "Please correct me if I am wrong.\nWhen the participant handles the new session, this folder of the old session will be removed, right? With the new change, should the watcher be removed as well when the folder being deleted?", "author": "jiajunwang", "createdAt": "2020-06-18T22:00:20Z", "path": "helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java", "diffHunk": "@@ -605,9 +605,12 @@ public void onStateChange(String instanceName, List<CurrentState> statesInfo,\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n-    Assert\n-        .assertEquals(watchPaths.get(\"existWatches\").size(), 2,\n-            \"Should have 2 exist-watches: CURRENTSTATE/{oldSessionId} and CURRENTSTATE/{oldSessionId}/TestDB0\");\n+    result = TestHelper.verify(()-> {\n+      Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n+      return wPaths.get(\"existWatches\").size() == 1;\n+    }, 10000);\n+    Assert.assertTrue(result,\n+        \"Should have 1 exist-watches: CURRENTSTATE/{oldSessionId}\");", "originalCommit": "8475450c98f0bf15cf81f9fb69cc6fef876a9ac3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2NzY2Ng==", "url": "https://github.com/apache/helix/pull/1104#discussion_r442567666", "bodyText": "This test is confusing. Note here it is a participant0, register and currentstate/{sessionid} callbackhandler of itself.\nThis does not normally happen in production,\nThe only case this can happen is that controller have CB for participant 1. At the same time controller and participant 1 both have session expiration.\nBack to the question, yes, the old session will be removed from participant point of view. But from router point of view (participant0 is also router as it subscribe to callbackhandler of current state), each existing callbackhandler of router would be called via lambda from zkclient event queue inserted by fireAllEvent() after session expiration.\n fireChildChangedEvents(entry.getKey(), entry.getValue(), true);\nThe lambda would install this watch.\nNote, this is normally not a problem as we don't have such usage case. Only if both participant and controller/router have session expiration at the same time.\nLater, we plan to make it clear the responsibility of who should install watcher. We can simplify the logic here.", "author": "kaisun2000", "createdAt": "2020-06-19T00:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDQ3MQ==", "url": "https://github.com/apache/helix/pull/1104#discussion_r442584471", "bodyText": "Make sense. Thanks for the explanation. Could you please add the critical points of the explanation to the comment of the code? I think we will need to improve this further, and for sure the test case needs to be updated accordingly. Then with this additional info, it would easier to understand what shall we expect in this scenario later.", "author": "jiajunwang", "createdAt": "2020-06-19T01:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA2NTU4OA==", "url": "https://github.com/apache/helix/pull/1104#discussion_r443065588", "bodyText": "Good point, added the comment.", "author": "kaisun2000", "createdAt": "2020-06-19T22:28:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyNTgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "499c504fa52bafd7f58c603e899f72312283d165", "chunk": "diff --git a/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java b/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java\nindex 8b1cd3c95..ddf2a5f4c 100644\n--- a/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java\n+++ b/helix-core/src/test/java/org/apache/helix/integration/TestZkCallbackHandlerLeak.java\n\n@@ -605,6 +605,17 @@ public class TestZkCallbackHandlerLeak extends ZkUnitTestBase {\n         \"Should have 1 data-watches: MESSAGES\");\n     Assert.assertEquals(watchPaths.get(\"childWatches\").size(), 1,\n         \"Should have 1 child-watches: MESSAGES\");\n+\n+    // In this test participant0 also register to its own cocurrent state with a callbackhandler\n+    // When session expiration happens, the current state parent path would also changes. However,\n+    // an exists watch would still be installed by event pushed to ZkCLient event thread by\n+    // fireAllEvent() children even path on behalf of old session callbackhandler. By the time this\n+    // event gets invoked, the old session callbackhandler was removed, but the event would still\n+    // install a exist watch for old session.\n+    // The closest similar case in production is that router/controller has an session expiration at\n+    // the same time as participant.\n+    // Currently there are many places to register watch in Zookeeper over the evolution of Helix\n+    // and ZkClient. We plan for further simplify the logic of watch installation next.\n     result = TestHelper.verify(()-> {\n       Map<String, List<String>> wPaths = ZkTestHelper.getZkWatch(participantToExpire.getZkClient());\n       return wPaths.get(\"existWatches\").size() == 1;\n"}}, {"oid": "499c504fa52bafd7f58c603e899f72312283d165", "url": "https://github.com/apache/helix/commit/499c504fa52bafd7f58c603e899f72312283d165", "message": "add comment about reasoning this test case.", "committedDate": "2020-06-19T22:27:01Z", "type": "commit"}]}