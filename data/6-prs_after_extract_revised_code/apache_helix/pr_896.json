{"pr_number": 896, "pr_title": "Make ZkUtil realm-aware", "pr_createdAt": "2020-03-13T06:48:38Z", "pr_url": "https://github.com/apache/helix/pull/896", "timeline": [{"oid": "48ae8d40297fb94c06613d93c0cd03bf0d4d15cb", "url": "https://github.com/apache/helix/commit/48ae8d40297fb94c06613d93c0cd03bf0d4d15cb", "message": "Make ZkUtil realm-aware\n\nThere were some places that were missed in previous PRs. This makes ZkUtil realm-aware.", "committedDate": "2020-03-13T06:46:32Z", "type": "commit"}, {"oid": "4edc7d10c99b2ba9c15510d2b6feb406a6f8c549", "url": "https://github.com/apache/helix/commit/4edc7d10c99b2ba9c15510d2b6feb406a6f8c549", "message": "Update javadoc", "committedDate": "2020-03-13T21:40:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNDk0Mw==", "url": "https://github.com/apache/helix/pull/896#discussion_r392504943", "bodyText": "Nit, no need for else.", "author": "huizhilu", "createdAt": "2020-03-13T21:58:21Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java", "diffHunk": "@@ -601,16 +607,30 @@ public static String toHexSessionId(long sessionId) {\n   }\n \n   /**\n-   * Returns a dedicated ZkClient.\n+   * Returns a dedicated ZkClient. A federatedZkClient will be used on multi-zk mode.\n+   * WARNING: ephemeral operations will not be supported on multi-zk mode!\n    * @return\n    */\n-  private static HelixZkClient getHelixZkClient(String zkAddr) {\n-    if (zkAddr == null || zkAddr.isEmpty()) {\n-      throw new HelixException(\"ZK Address given is either null or empty!\");\n+  private static RealmAwareZkClient getHelixZkClient(String zkAddr) {\n+    if (Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED)) {\n+      try {\n+        // Create realm-aware ZkClient.\n+        RealmAwareZkClient.RealmAwareZkConnectionConfig connectionConfig =\n+            new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build();\n+        RealmAwareZkClient.RealmAwareZkClientConfig clientConfig =\n+            new RealmAwareZkClient.RealmAwareZkClientConfig();\n+        return new FederatedZkClient(connectionConfig, clientConfig);\n+      } catch (IllegalArgumentException | IOException | InvalidRoutingDataException e) {\n+        throw new HelixException(\"Not able to connect on realm-aware mode\", e);\n+      }\n+    } else {", "originalCommit": "4edc7d10c99b2ba9c15510d2b6feb406a6f8c549", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNzQwNw==", "url": "https://github.com/apache/helix/pull/896#discussion_r392537407", "bodyText": "Removed the else clause", "author": "narendly", "createdAt": "2020-03-14T00:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNDk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "32fb789c9a3feaa880bf1fa4278f3ba162a10455", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\nindex f2fac3c5e..8a33d1185 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKUtil.java\n\n@@ -623,14 +623,13 @@ public final class ZKUtil {\n       } catch (IllegalArgumentException | IOException | InvalidRoutingDataException e) {\n         throw new HelixException(\"Not able to connect on realm-aware mode\", e);\n       }\n-    } else {\n-      if (zkAddr == null || zkAddr.isEmpty()) {\n-        throw new HelixException(\"ZK Address given is either null or empty!\");\n-      }\n-      HelixZkClient.ZkClientConfig clientConfig = new HelixZkClient.ZkClientConfig();\n-      clientConfig.setZkSerializer(new ZNRecordSerializer());\n-      return DedicatedZkClientFactory.getInstance()\n-          .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n     }\n+    if (zkAddr == null || zkAddr.isEmpty()) {\n+      throw new HelixException(\"ZK Address given is either null or empty!\");\n+    }\n+    HelixZkClient.ZkClientConfig clientConfig = new HelixZkClient.ZkClientConfig();\n+    clientConfig.setZkSerializer(new ZNRecordSerializer());\n+    return DedicatedZkClientFactory.getInstance()\n+        .buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr), clientConfig);\n   }\n }\n"}}, {"oid": "32fb789c9a3feaa880bf1fa4278f3ba162a10455", "url": "https://github.com/apache/helix/commit/32fb789c9a3feaa880bf1fa4278f3ba162a10455", "message": "remove else", "committedDate": "2020-03-14T00:31:54Z", "type": "commit"}]}