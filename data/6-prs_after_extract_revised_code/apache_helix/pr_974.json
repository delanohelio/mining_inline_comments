{"pr_number": 974, "pr_title": "Enforce result check for data accessors batch get calls to prevent partial batch read.", "pr_createdAt": "2020-04-28T21:01:45Z", "pr_url": "https://github.com/apache/helix/pull/974", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA==", "url": "https://github.com/apache/helix/pull/974#discussion_r416931634", "bodyText": "Are we retrying for these? Or we need some way to monitor the failure ones.", "author": "junkaixue", "createdAt": "2020-04-28T21:23:22Z", "path": "helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java", "diffHunk": "@@ -186,7 +186,8 @@ private HelixDataAccessor getRecipientDataAccessor(final Criteria recipientCrite\n       Map<String, String> sessionIdMap = new HashMap<String, String>();\n       if (recipientCriteria.isSessionSpecific()) {\n         Builder keyBuilder = targetDataAccessor.keyBuilder();\n-        List<LiveInstance> liveInstances = targetDataAccessor.getChildValues(keyBuilder.liveInstances());\n+        List<LiveInstance> liveInstances =\n+            targetDataAccessor.getChildValues(keyBuilder.liveInstances(), true);", "originalCommit": "44d4766a3d15d0cb7344381b54354f40e2459d74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0MTY4Ng==", "url": "https://github.com/apache/helix/pull/974#discussion_r416941686", "bodyText": "Retry is in #970.\nI thought about this. If the liveInstance list is not complete, I guess we will only send partial messages, I guess it would be bad since there might be some relationship between the messages if they are done within the same pipeline.\nBut I don't have a strong preference. After PR 970 is in, there is very little chance we see this error. Please let me know if you think this shall be false (and why). I can change it and comment with the reason.", "author": "jiajunwang", "createdAt": "2020-04-28T21:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwNjQzNw==", "url": "https://github.com/apache/helix/pull/974#discussion_r417506437", "bodyText": "I agree it will have little chance. Was worrying about if we throw an exception, it could totally miss the message delivery.", "author": "junkaixue", "createdAt": "2020-04-29T17:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1NjkyMA==", "url": "https://github.com/apache/helix/pull/974#discussion_r425456920", "bodyText": "I still not suggest to have this for DefaultMessaging service. Because this changes behavior and it is used by customer. It may break their logic.\nExcept this one, others are in our control and should be fine for me.", "author": "junkaixue", "createdAt": "2020-05-14T22:04:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MDUxOQ==", "url": "https://github.com/apache/helix/pull/974#discussion_r425470519", "bodyText": "Reasonable, I will change this to false.", "author": "jiajunwang", "createdAt": "2020-05-14T22:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzMTYzNA=="}], "type": "inlineReview", "revised_code": {"commit": "37dc2db81e745d64458f2637c1841ce92180317c", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java b/helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java\nindex 03b26668e..6785381fc 100644\n--- a/helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java\n+++ b/helix-core/src/main/java/org/apache/helix/messaging/DefaultMessagingService.java\n\n@@ -186,8 +186,10 @@ public class DefaultMessagingService implements ClusterMessagingService {\n       Map<String, String> sessionIdMap = new HashMap<String, String>();\n       if (recipientCriteria.isSessionSpecific()) {\n         Builder keyBuilder = targetDataAccessor.keyBuilder();\n+        // For backward compatibility, allow partial read for the live instances.\n+        // Note that this may cause the pending message to be sent with null target session Id.\n         List<LiveInstance> liveInstances =\n-            targetDataAccessor.getChildValues(keyBuilder.liveInstances(), true);\n+            targetDataAccessor.getChildValues(keyBuilder.liveInstances(), false);\n \n         for (LiveInstance liveInstance : liveInstances) {\n           sessionIdMap.put(liveInstance.getInstanceName(), liveInstance.getEphemeralOwner());\n"}}, {"oid": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "url": "https://github.com/apache/helix/commit/cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "message": "Format fix.", "committedDate": "2020-05-05T00:19:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMzgwMw==", "url": "https://github.com/apache/helix/pull/974#discussion_r420313803", "bodyText": "What is the unit of retryInterval, second or millisecond?  Should be use long?  Usually have three consecutive parameters with the same type is not easy to use.", "author": "lei-xia", "createdAt": "2020-05-05T18:19:20Z", "path": "helix-core/src/main/java/org/apache/helix/BaseDataAccessor.java", "diffHunk": "@@ -166,6 +167,7 @@\n    * @param options Set the type of ZNode see the valid values in {@link AccessOption}\n    * @return A list of children of the parent ZNode\n    */\n+  @Deprecated\n   List<T> getChildren(String parentPath, List<Stat> stats, int options);\n \n   /**", "originalCommit": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxODQ4NQ==", "url": "https://github.com/apache/helix/pull/974#discussion_r420318485", "bodyText": "Lei, let's address the interface design question in separate PR if necessary? This design is not changed here.\nIn the current change, I am retrying once in the callers. But zero retry also works, I think, since we have added the async internal retry on connectivity issues. Do you think we shall just make it zero retry?", "author": "jiajunwang", "createdAt": "2020-05-05T18:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMzgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxMzIyOA==", "url": "https://github.com/apache/helix/pull/974#discussion_r421013228", "bodyText": "Since we already checked in the zkclient async call retry PR, let me change to zero retry for the newly changed callers in this PR.", "author": "jiajunwang", "createdAt": "2020-05-06T18:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMzgwMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4OTczOA==", "url": "https://github.com/apache/helix/pull/974#discussion_r420989738", "bodyText": "This is not a good idea. If we throws exception here, then there is no event to trigger message read. Then it could only relies on @mgao0 's periodical message refresh. But if user does not set this up?\nDo not throw exception at least can read some message back and process them. Also when ST done with these partial messages, delete message operation can trigger another round of read. I know relies on this logic is not robust. But at least, it is not worse scenario than throw exception here.", "author": "junkaixue", "createdAt": "2020-05-06T18:06:31Z", "path": "helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java", "diffHunk": "@@ -701,7 +701,7 @@ private void syncSessionToController(HelixManager manager) {\n       }\n     }\n \n-    List<Message> newMessages = accessor.getProperty(keys);\n+    List<Message> newMessages = accessor.getProperty(keys, true);", "originalCommit": "cba4ec72a1ea2b7e0bfacbdbb881fa5118016f4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5NDAzMA==", "url": "https://github.com/apache/helix/pull/974#discussion_r420994030", "bodyText": "Good point. I will change it back and add this to the comment.\nPlease help to check the other changes. My goal is to make all calls strictly checked unless we have a good reason.", "author": "jiajunwang", "createdAt": "2020-05-06T18:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4OTczOA=="}], "type": "inlineReview", "revised_code": {"commit": "9e71c3881e7d5c65d15049beeeea09041a229c72", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java b/helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java\nindex eff318b74..a44ba4780 100644\n--- a/helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java\n+++ b/helix-core/src/main/java/org/apache/helix/messaging/handling/HelixTaskExecutor.java\n\n@@ -701,7 +701,15 @@ public class HelixTaskExecutor implements MessageListener, TaskExecutor {\n       }\n     }\n \n-    List<Message> newMessages = accessor.getProperty(keys, true);\n+    /**\n+     * Do not throw exception on partial message read.\n+     * 1. There is no way to resolve the error on the participant side. And once it fails here, we\n+     * are running the risk of ignoring the message change event. And the participant might be stuck.\n+     * 2. Even this is a partial read, we have another chance to retry in the business logic since\n+     * as long as the participant processes messages, it will touch the message folder and triggers\n+     * another message event.\n+     */\n+    List<Message> newMessages = accessor.getProperty(keys, false);\n     // Message may be removed before get read, clean up null messages.\n     Iterator<Message> messageIterator = newMessages.iterator();\n     while(messageIterator.hasNext()) {\n"}}, {"oid": "9e71c3881e7d5c65d15049beeeea09041a229c72", "url": "https://github.com/apache/helix/commit/9e71c3881e7d5c65d15049beeeea09041a229c72", "message": "Address comments.", "committedDate": "2020-05-06T18:32:51Z", "type": "forcePushed"}, {"oid": "3e0b70e17f96b9bc004755ea795d6c4459bed261", "url": "https://github.com/apache/helix/commit/3e0b70e17f96b9bc004755ea795d6c4459bed261", "message": "Address comments.", "committedDate": "2020-05-06T22:50:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTQ5Mw==", "url": "https://github.com/apache/helix/pull/974#discussion_r425335493", "bodyText": "Does it mean if passing true here, it would throw exception? Then how do we handle this exception?", "author": "kaisun2000", "createdAt": "2020-05-14T18:08:48Z", "path": "helix-core/src/main/java/org/apache/helix/common/caches/TaskDataCache.java", "diffHunk": "@@ -194,9 +194,9 @@ private void refreshContextsAndPreviousAssignments(HelixDataAccessor accessor) {\n       }\n     }\n \n-    List<ZNRecord> contexts = accessor.getBaseDataAccessor().get(contextPaths, null, 0);\n+    List<ZNRecord> contexts = accessor.getBaseDataAccessor().get(contextPaths, null, 0, true);", "originalCommit": "3e0b70e17f96b9bc004755ea795d6c4459bed261", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTc4Ng==", "url": "https://github.com/apache/helix/pull/974#discussion_r425335786", "bodyText": "By the way, if passing false here, it would retry this batch async reads infinitely?", "author": "kaisun2000", "createdAt": "2020-05-14T18:09:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTQ5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MDk4Mw==", "url": "https://github.com/apache/helix/pull/974#discussion_r425370983", "bodyText": "It will fail the current pipeline, which is what we want. Otherwise, the rebalance will be done based on incomplete information.\nIf false, it will return partial result.", "author": "jiajunwang", "createdAt": "2020-05-14T19:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTQ5Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ==", "url": "https://github.com/apache/helix/pull/974#discussion_r425340619", "bodyText": "Same question. Before this change, partial read would not terminate rest flow, so onLiveInstance(), onMessage() etc would be called.\nNow if exception thrown, this is not the case. This would\n1/ result onLiveInstance() etc not called, but the exception got caught in the ZkEvent thread.\n2/ For Molly's change to add perodical checking messages PULL request, this would break the time thread which calls onMessage(). Basically if the exception thrown from onMessage() when timer thread calls this one, this would stop later timer thread I believe. (We can test. I recall Java Concurrency Controller book mentioned this issue there.) This would defeat the purpose of Molly's change.", "author": "kaisun2000", "createdAt": "2020-05-14T18:17:55Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/CallbackHandler.java", "diffHunk": "@@ -525,7 +526,7 @@ public void invoke(NotificationContext changeContext) throws Exception {\n \n   private <T extends HelixProperty> List<T> preFetch(PropertyKey key) {\n     if (_preFetchEnabled) {\n-      return _accessor.getChildValues(key);\n+      return _accessor.getChildValues(key, true);", "originalCommit": "3e0b70e17f96b9bc004755ea795d6c4459bed261", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MzY3OA==", "url": "https://github.com/apache/helix/pull/974#discussion_r425373678", "bodyText": "\"partial read would not terminate rest flow\", true. But it will cause the controller to make the wrong decision. Which is even worse. To prevent this is the target of this change.\nI don't think it will fail the ZkEvent thread. All the callers as I can find has been try-catched. Do you have an example of exception?", "author": "jiajunwang", "createdAt": "2020-05-14T19:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ0NjE4OA==", "url": "https://github.com/apache/helix/pull/974#discussion_r425446188", "bodyText": "Note, if exception thrown. For this CallbackHandler, before this change, partial read result would be feed to OnMessage() or OnWhatever; now, onMessage() would not be called, instead, zkEvent would get an exception, catch the exception nad do logging. This is what we want.\nThen, in Molly's case, the timer thread can see exception too, right? The thing is that I suspect that timer's internal thread may not schedule more OnMessage() if the previous one has exception thrown.  This needs to be tested and verified. Otherwise, the timer thread may never work after exception thrown if my suspicion is right.", "author": "kaisun2000", "createdAt": "2020-05-14T21:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MzI0MA==", "url": "https://github.com/apache/helix/pull/974#discussion_r425473240", "bodyText": "@kaisun2000, that change has not been checked in yet. But it is a good point.\n@mgao0, Please be aware of what Kai mentioned.", "author": "jiajunwang", "createdAt": "2020-05-14T22:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ4MzUxNw==", "url": "https://github.com/apache/helix/pull/974#discussion_r425483517", "bodyText": "Let me add this point to @mgao0's pull request.", "author": "kaisun2000", "createdAt": "2020-05-14T23:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDYxOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "da07cf38fc759a8b997f591bf74e062c79004cdf", "url": "https://github.com/apache/helix/commit/da07cf38fc759a8b997f591bf74e062c79004cdf", "message": "Enforce result check for data accessors batch get calls to prevent partial batch read.\n\nThis will help to ensure the main Helix logic does not calculate based on incomplete input.", "committedDate": "2020-05-14T22:13:08Z", "type": "commit"}, {"oid": "2ae66bb721e2ff5f27b744e74eb17e6dca4ab57d", "url": "https://github.com/apache/helix/commit/2ae66bb721e2ff5f27b744e74eb17e6dca4ab57d", "message": "Format fix.", "committedDate": "2020-05-14T22:13:08Z", "type": "commit"}, {"oid": "305e112d89ffe49ed6bae1a3c26dc9776ca9ec9d", "url": "https://github.com/apache/helix/commit/305e112d89ffe49ed6bae1a3c26dc9776ca9ec9d", "message": "Address comments.", "committedDate": "2020-05-14T22:13:08Z", "type": "commit"}, {"oid": "37dc2db81e745d64458f2637c1841ce92180317c", "url": "https://github.com/apache/helix/commit/37dc2db81e745d64458f2637c1841ce92180317c", "message": "Allow partial read in the ZkPathDataDumpTask and DefaultMessagingService class.", "committedDate": "2020-05-14T22:47:25Z", "type": "commit"}, {"oid": "37dc2db81e745d64458f2637c1841ce92180317c", "url": "https://github.com/apache/helix/commit/37dc2db81e745d64458f2637c1841ce92180317c", "message": "Allow partial read in the ZkPathDataDumpTask and DefaultMessagingService class.", "committedDate": "2020-05-14T22:47:25Z", "type": "forcePushed"}]}