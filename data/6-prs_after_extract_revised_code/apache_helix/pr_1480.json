{"pr_number": 1480, "pr_title": "Make byte array data accessor use RealmAwareZkClient", "pr_createdAt": "2020-10-22T00:13:25Z", "pr_url": "https://github.com/apache/helix/pull/1480", "timeline": [{"oid": "c0b34e334453108213536a33a5885d3cdb143324", "url": "https://github.com/apache/helix/commit/c0b34e334453108213536a33a5885d3cdb143324", "message": "Make byte array data accessor use RealmAwareZkClient\n\nThis change was left out of the ZooScalability migration of helix-rest, making ZooKeeperAccessor endpoints fail in a multi-zk setting. This change fixes this.", "committedDate": "2020-10-21T23:16:15Z", "type": "commit"}, {"oid": "29cf37253f77381656535101be40cb8a2cd46c45", "url": "https://github.com/apache/helix/commit/29cf37253f77381656535101be40cb8a2cd46c45", "message": "fix", "committedDate": "2020-10-22T00:04:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjAxMQ==", "url": "https://github.com/apache/helix/pull/1480#discussion_r509812011", "bodyText": "Just have one suggestion. There are many duplicated pieces with previous function. Can we abstract it as a private function and called in both public method?", "author": "junkaixue", "createdAt": "2020-10-22T00:34:06Z", "path": "helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java", "diffHunk": "@@ -157,6 +158,50 @@ public RealmAwareZkClient getRealmAwareZkClient() {\n     return _zkClient;\n   }\n \n+  /**\n+   * Returns a RealmAWareZkClient with ByteArraySerializer with double-checked locking.\n+   * NOTE: this is different from getRealmAwareZkClient in that it does not reset listeners for\n+   * _zkClientForListener because this RealmAwareZkClient is independent from routing data changes.\n+   * @return\n+   */\n+  public RealmAwareZkClient getByteArrayRealmAwareZkClient() {", "originalCommit": "29cf37253f77381656535101be40cb8a2cd46c45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxOTE3OA==", "url": "https://github.com/apache/helix/pull/1480#discussion_r509819178", "bodyText": "+1, the only difference is the serializer, right?", "author": "jiajunwang", "createdAt": "2020-10-22T01:00:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2MzkwNw==", "url": "https://github.com/apache/helix/pull/1480#discussion_r509863907", "bodyText": "I agree with the suggestions made here. This PR has been updated with the refactor. @jiajunwang the serializer is not the only thing that differs, but I pulled some trick to make it work to cut down on duplication.", "author": "narendly", "createdAt": "2020-10-22T03:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjAxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "6cf2d658500db87c6847e57d98eeaa6cad79ef19", "chunk": "diff --git a/helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java b/helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java\nindex dc6b0bc85..231284a29 100644\n--- a/helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java\n+++ b/helix-rest/src/main/java/org/apache/helix/rest/server/ServerContext.java\n\n@@ -110,48 +111,15 @@ public class ServerContext implements IZkDataListener, IZkChildListener, IZkStat\n     _zkMetadataStoreDirectory = ZkMetadataStoreDirectory.getInstance();\n   }\n \n+  /**\n+   * Lazy initialization of RealmAwareZkClient used throughout the REST server.\n+   * @return\n+   */\n   public RealmAwareZkClient getRealmAwareZkClient() {\n     if (_zkClient == null) {\n       synchronized (this) {\n         if (_zkClient == null) {\n-          // If the multi ZK config is enabled, use FederatedZkClient on multi-realm mode\n-          if (_isMultiZkEnabled || Boolean\n-              .parseBoolean(System.getProperty(SystemPropertyKeys.MULTI_ZK_ENABLED))) {\n-            try {\n-              // Make sure the ServerContext is subscribed to routing data change so that it knows\n-              // when to reset ZkClient and Helix APIs\n-              if (_zkClientForListener == null) {\n-                _zkClientForListener = DedicatedZkClientFactory.getInstance()\n-                    .buildZkClient(new HelixZkClient.ZkConnectionConfig(_zkAddr),\n-                        new HelixZkClient.ZkClientConfig()\n-                            .setZkSerializer(new ZNRecordSerializer()));\n-              }\n-              // Refresh data subscription\n-              _zkClientForListener.unsubscribeAll();\n-              _zkClientForListener.subscribeRoutingDataChanges(this, this);\n-              LOG.info(\"ServerContext: subscribed to routing data in routing ZK at {}!\", _zkAddr);\n-\n-              RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder connectionConfigBuilder =\n-                  new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder();\n-              // If MSDS endpoint is set for this namespace, use that instead.\n-              if (_msdsEndpoint != null && !_msdsEndpoint.isEmpty()) {\n-                connectionConfigBuilder.setRoutingDataSourceEndpoint(_msdsEndpoint)\n-                    .setRoutingDataSourceType(RoutingDataReaderType.HTTP.name());\n-              }\n-              _zkClient = new FederatedZkClient(connectionConfigBuilder.build(),\n-                  new RealmAwareZkClient.RealmAwareZkClientConfig()\n-                      .setZkSerializer(new ZNRecordSerializer()));\n-              LOG.info(\"ServerContext: FederatedZkClient created successfully!\");\n-            } catch (InvalidRoutingDataException | IllegalStateException e) {\n-              throw new HelixException(\"Failed to create FederatedZkClient!\", e);\n-            }\n-          } else {\n-            // If multi ZK config is not set, just connect to the ZK address given\n-            HelixZkClient.ZkClientConfig clientConfig = new HelixZkClient.ZkClientConfig();\n-            clientConfig.setZkSerializer(new ZNRecordSerializer());\n-            _zkClient = SharedZkClientFactory.getInstance()\n-                .buildZkClient(new HelixZkClient.ZkConnectionConfig(_zkAddr), clientConfig);\n-          }\n+          _zkClient = createRealmAwareZkClient(_zkClient, true, new ZNRecordSerializer());\n         }\n       }\n     }\n"}}, {"oid": "6cf2d658500db87c6847e57d98eeaa6cad79ef19", "url": "https://github.com/apache/helix/commit/6cf2d658500db87c6847e57d98eeaa6cad79ef19", "message": "Refactor", "committedDate": "2020-10-22T03:50:58Z", "type": "commit"}]}