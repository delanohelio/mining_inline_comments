{"pr_number": 1215, "pr_title": "Remove the unnecessary checks to allow cleaning up map/list fields in the ClusterConfig and InstanceConfig.", "pr_createdAt": "2020-08-04T18:07:14Z", "pr_url": "https://github.com/apache/helix/pull/1215", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTI5Mw==", "url": "https://github.com/apache/helix/pull/1215#discussion_r465385293", "bodyText": "What is the meaning of setting to 'null' and empty? What is the difference between  'null' and empty?", "author": "kaisun2000", "createdAt": "2020-08-04T23:27:41Z", "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -709,9 +709,6 @@ public void enableP2PMessage(boolean enabled) {\n    * @param capacityKeys\n    */\n   public void setInstanceCapacityKeys(List<String> capacityKeys) {\n-    if (capacityKeys == null || capacityKeys.isEmpty()) {\n-      throw new IllegalArgumentException(\"The input instance capacity key list is empty.\");\n-    }", "originalCommit": "eb80c6c82afbe44bf307a58a5bcaaf60cf3ca3f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxNjI1MQ==", "url": "https://github.com/apache/helix/pull/1215#discussion_r465916251", "bodyText": "Both empty the list. Null will remove the key. Empty list will set an empty list to the key. Both are fine for our logic.", "author": "jiajunwang", "createdAt": "2020-08-05T18:19:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyNDQ3Ng==", "url": "https://github.com/apache/helix/pull/1215#discussion_r465924476", "bodyText": "How about add an comment to let user know the intention. This would save further clarification etc,", "author": "kaisun2000", "createdAt": "2020-08-05T18:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5NDg3OQ==", "url": "https://github.com/apache/helix/pull/1215#discussion_r465994879", "bodyText": "I was wrong, it actually just put a null value there. This is not what I want to do. Let me change it to the right behavior. Good catch!", "author": "jiajunwang", "createdAt": "2020-08-05T20:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NTI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f48718250558f4646a203c6c10c2e10475612b24", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\nindex cad09d8e5..dfb340508 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\n@@ -706,9 +706,13 @@ public class ClusterConfig extends HelixProperty {\n \n   /**\n    * Set the required Instance Capacity Keys.\n-   * @param capacityKeys\n+   * @param capacityKeys - the capacity key list.\n+   *                     If null, the capacity keys item will be removed from the config.\n    */\n   public void setInstanceCapacityKeys(List<String> capacityKeys) {\n+    if (capacityKeys == null) {\n+      _record.getListFields().remove(ClusterConfigProperty.INSTANCE_CAPACITY_KEYS.name());\n+    }\n     _record.setListField(ClusterConfigProperty.INSTANCE_CAPACITY_KEYS.name(), capacityKeys);\n   }\n \n"}}, {"oid": "f48718250558f4646a203c6c10c2e10475612b24", "url": "https://github.com/apache/helix/commit/f48718250558f4646a203c6c10c2e10475612b24", "message": "Change the behavior when input null as the config value.", "committedDate": "2020-08-05T20:53:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MDg0OQ==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466060849", "bodyText": "If the value string is not valid integer representation, will this throw other Exception? If so, do you want to catch it and convert to IllegalArgumentException?", "author": "kaisun2000", "createdAt": "2020-08-05T23:33:30Z", "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -788,39 +791,43 @@ public void setDefaultPartitionWeightMap(Map<String, Integer> weightDataMap)\n   private void setDefaultCapacityMap(ClusterConfigProperty capacityPropertyType,\n       Map<String, Integer> capacityDataMap) throws IllegalArgumentException {\n     if (capacityDataMap == null) {\n-      throw new IllegalArgumentException(\"Default capacity data is null\");\n+      _record.getMapFields().remove(capacityPropertyType.name());\n+    } else {\n+      Map<String, String> data = new HashMap<>();\n+      capacityDataMap.entrySet().stream().forEach(entry -> {\n+        if (entry.getValue() < 0) {", "originalCommit": "f48718250558f4646a203c6c10c2e10475612b24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MjE3Ng==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466072176", "bodyText": "The value is not a string, it is Integer.", "author": "jiajunwang", "createdAt": "2020-08-06T00:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MDg0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "55d203d3a332806882a436eacccfee2b9a887c9c", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\nindex dfb340508..cad09d8e5 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\n@@ -791,7 +785,7 @@ public class ClusterConfig extends HelixProperty {\n   private void setDefaultCapacityMap(ClusterConfigProperty capacityPropertyType,\n       Map<String, Integer> capacityDataMap) throws IllegalArgumentException {\n     if (capacityDataMap == null) {\n-      _record.getMapFields().remove(capacityPropertyType.name());\n+      _record.setMapField(capacityPropertyType.name(), null);\n     } else {\n       Map<String, String> data = new HashMap<>();\n       capacityDataMap.entrySet().stream().forEach(entry -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzQ5NQ==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466063495", "bodyText": "I am a little bit confused.\nanyMatch(className -> className == null)) means if there is a className (key) in resolverMap, we throw exception.\nThen how about value in resolverMap, can it be null? What does it mean then?", "author": "kaisun2000", "createdAt": "2020-08-05T23:42:18Z", "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,13 +866,18 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n+    if (resolverMap != null && resolverMap.values().stream()", "originalCommit": "f48718250558f4646a203c6c10c2e10475612b24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3Mjk5Mg==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466072992", "bodyText": "It is searching through the value set (the class name is value here). The stream() is not done to the key set. I think you missed the first part.\nBut it is a good catch that I should not remove \"className.isEmpty()\" check.", "author": "jiajunwang", "createdAt": "2020-08-06T00:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzQ5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NDEzOA==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466074138", "bodyText": "Right, we are saying value can't be empty or 'null'. However, don't forget about key, the key in resovlerMap is potentially can be null too, right? Shall we also throw an exception there?", "author": "kaisun2000", "createdAt": "2020-08-06T00:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "55d203d3a332806882a436eacccfee2b9a887c9c", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\nindex dfb340508..cad09d8e5 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\n@@ -866,8 +859,6 @@ public class ClusterConfig extends HelixProperty {\n \n   /**\n    * Set the abnormal state resolver class map.\n-   * @param resolverMap - the resolver map\n-   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n     if (resolverMap != null && resolverMap.values().stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MTU3Nw==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466081577", "bodyText": "resolverMap can also contain key as null. Do we want to throw exception of this case?", "author": "kaisun2000", "createdAt": "2020-08-06T00:47:21Z", "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,14 +866,20 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n-      throw new IllegalArgumentException(\n-          \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+    if (resolverMap == null) {\n+      _record.getMapFields().remove(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name());\n+    } else {\n+      if (resolverMap.values().stream()\n+          .anyMatch(className -> className == null || className.isEmpty())) {\n+        throw new IllegalArgumentException(\n+            \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+      }\n+      _record.setMapField(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name(), resolverMap);", "originalCommit": "0e2f4469f0e3d5e0fc43a374bcc4eda8133ecdd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjExMTcxMw==", "url": "https://github.com/apache/helix/pull/1215#discussion_r466111713", "bodyText": "I see what you mean now. Make sense. Let me add the check for keys too.", "author": "jiajunwang", "createdAt": "2020-08-06T02:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MTU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "55d203d3a332806882a436eacccfee2b9a887c9c", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\nindex 79ba2b740..cad09d8e5 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\n@@ -866,20 +859,14 @@ public class ClusterConfig extends HelixProperty {\n \n   /**\n    * Set the abnormal state resolver class map.\n-   * @param resolverMap - the resolver map\n-   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap == null) {\n-      _record.getMapFields().remove(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name());\n-    } else {\n-      if (resolverMap.values().stream()\n-          .anyMatch(className -> className == null || className.isEmpty())) {\n-        throw new IllegalArgumentException(\n-            \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n-      }\n-      _record.setMapField(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name(), resolverMap);\n+    if (resolverMap != null && resolverMap.values().stream()\n+        .anyMatch(className -> className == null)) {\n+      throw new IllegalArgumentException(\n+          \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n     }\n+    _record.setMapField(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name(), resolverMap);\n   }\n \n   public Map<String, String> getAbnormalStateResolverMap() {\n"}}, {"oid": "55d203d3a332806882a436eacccfee2b9a887c9c", "url": "https://github.com/apache/helix/commit/55d203d3a332806882a436eacccfee2b9a887c9c", "message": "Remove the unnecessary checks to allow cleaning up map/list fields in the ClusterConfig and InstanceConfig.\n\nThe null check or empty check disallow class users to clean up the corresponding fields.\nThis change remove these checkes in follow methods,\n- ClusterConfig.setDefaultCapacityMap\n- ClusterConfig.setGlobalRebalancePreference\n- ClusterConfig.setAbnormalStateResolverMap\n- InstanceConfig.setInstanceCapacityMap", "committedDate": "2020-08-07T05:14:56Z", "type": "commit"}, {"oid": "1cdfe12c919c92cd1bc29075241beefa0f68b860", "url": "https://github.com/apache/helix/commit/1cdfe12c919c92cd1bc29075241beefa0f68b860", "message": "Change the behavior when input null as the config value.", "committedDate": "2020-08-07T05:14:56Z", "type": "commit"}, {"oid": "2ab19c5cd0c59c66a5d386c2f8b9ccbc86f39a1a", "url": "https://github.com/apache/helix/commit/2ab19c5cd0c59c66a5d386c2f8b9ccbc86f39a1a", "message": "Address comment.", "committedDate": "2020-08-07T05:14:56Z", "type": "commit"}, {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "url": "https://github.com/apache/helix/commit/1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "message": "Add more check for the abnormal resolver configuration set method.", "committedDate": "2020-08-07T05:14:56Z", "type": "commit"}, {"oid": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "url": "https://github.com/apache/helix/commit/1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "message": "Add more check for the abnormal resolver configuration set method.", "committedDate": "2020-08-07T05:14:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMTQ1Ng==", "url": "https://github.com/apache/helix/pull/1215#discussion_r467211456", "bodyText": "nit.\nStateModel definition name can't be null, resolver class name cannot be empty can't be null or empty.", "author": "kaisun2000", "createdAt": "2020-08-07T18:47:59Z", "path": "helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java", "diffHunk": "@@ -859,14 +866,24 @@ public boolean isGlobalRebalanceAsyncModeEnabled() {\n \n   /**\n    * Set the abnormal state resolver class map.\n+   * @param resolverMap - the resolver map\n+   *                    If null, the resolver map item will be removed from the config.\n    */\n   public void setAbnormalStateResolverMap(Map<String, String> resolverMap) {\n-    if (resolverMap.values().stream()\n-        .anyMatch(className -> className == null || className.isEmpty())) {\n-      throw new IllegalArgumentException(\n-          \"Invalid Abnormal State Resolver Map definition. Class name cannot be empty.\");\n+    if (resolverMap == null) {\n+      _record.getMapFields().remove(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name());\n+    } else {\n+      if (resolverMap.entrySet().stream().anyMatch(e -> {\n+        String stateModelDefName = e.getKey();\n+        String className = e.getValue();\n+        return stateModelDefName == null || stateModelDefName.isEmpty() || className == null\n+            || className.isEmpty();\n+      })) {\n+        throw new IllegalArgumentException(\n+            \"Invalid Abnormal State Resolver Map definition. StateModel definition name and the resolver class name cannot be empty.\");", "originalCommit": "1d6af5d1b273a11f5b92eae88fcd26165b4e3c55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMTY2MQ==", "url": "https://github.com/apache/helix/pull/1215#discussion_r467211661", "bodyText": "We have a test case for this?", "author": "kaisun2000", "createdAt": "2020-08-07T18:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMTQ1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NTE1Mw==", "url": "https://github.com/apache/helix/pull/1215#discussion_r467245153", "bodyText": "Yes, the test has been added. Let me modify the log string.", "author": "jiajunwang", "createdAt": "2020-08-07T20:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMTQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e27a9a44a5d81b868f5011852aa0132fb8d9236e", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\nindex cc138a09b..f6a64812b 100644\n--- a/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n+++ b/helix-core/src/main/java/org/apache/helix/model/ClusterConfig.java\n\n@@ -880,7 +880,7 @@ public class ClusterConfig extends HelixProperty {\n             || className.isEmpty();\n       })) {\n         throw new IllegalArgumentException(\n-            \"Invalid Abnormal State Resolver Map definition. StateModel definition name and the resolver class name cannot be empty.\");\n+            \"Invalid Abnormal State Resolver Map definition. StateModel definition name and the resolver class name cannot be null or empty.\");\n       }\n       _record.setMapField(ClusterConfigProperty.ABNORMAL_STATES_RESOLVER_MAP.name(), resolverMap);\n     }\n"}}, {"oid": "e27a9a44a5d81b868f5011852aa0132fb8d9236e", "url": "https://github.com/apache/helix/commit/e27a9a44a5d81b868f5011852aa0132fb8d9236e", "message": "Update ClusterConfig.java", "committedDate": "2020-08-07T20:06:34Z", "type": "commit"}]}