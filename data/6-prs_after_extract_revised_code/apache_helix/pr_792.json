{"pr_number": 792, "pr_title": "Add java API to add or remove CustomizedStateAggregationConfig", "pr_createdAt": "2020-02-21T00:05:05Z", "pr_url": "https://github.com/apache/helix/pull/792", "timeline": [{"oid": "c2232de7d2bdde91f0239ccfd0cafa990a4a28f3", "url": "https://github.com/apache/helix/commit/c2232de7d2bdde91f0239ccfd0cafa990a4a28f3", "message": "Add java API to add or remove CustomizedStateAggregationConfig\n\nIn this commit the below APIs have been added.\n1- addCustomizedStateAggregationConfig\n2- removeCustomizedStateAggregationConfig.\nTests have been added to check the functionality of these APIs.", "committedDate": "2020-02-21T00:05:33Z", "type": "commit"}, {"oid": "c2232de7d2bdde91f0239ccfd0cafa990a4a28f3", "url": "https://github.com/apache/helix/commit/c2232de7d2bdde91f0239ccfd0cafa990a4a28f3", "message": "Add java API to add or remove CustomizedStateAggregationConfig\n\nIn this commit the below APIs have been added.\n1- addCustomizedStateAggregationConfig\n2- removeCustomizedStateAggregationConfig.\nTests have been added to check the functionality of these APIs.", "committedDate": "2020-02-21T00:05:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNjc2OA==", "url": "https://github.com/apache/helix/pull/792#discussion_r382706768", "bodyText": "If a user would like to add one type of state or remove one type of state, how to do it? It seems the API is to add or remove the config as a whole, but in most cases, we will use it as a way to add/remove one item in the list view.", "author": "zhangmeng916", "createdAt": "2020-02-21T17:21:54Z", "path": "helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java", "diffHunk": "@@ -1104,6 +1105,40 @@ public void setConfig(HelixConfigScope scope, Map<String, String> properties) {\n     return _configAccessor.get(scope, keys);\n   }\n \n+  @Override\n+  public void addCustomizedStateAggregationConfig(String clusterName,", "originalCommit": "c2232de7d2bdde91f0239ccfd0cafa990a4a28f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczMTI4Nw==", "url": "https://github.com/apache/helix/pull/792#discussion_r382731287", "bodyText": "Fixed. I just Added two new APIs.", "author": "alirezazamani", "createdAt": "2020-02-21T18:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNjc2OA=="}], "type": "inlineReview", "revised_code": {"commit": "32ca99cd0fac08a4d3665b50348fd321137e3130", "chunk": "diff --git a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\nindex 617530bc7..e08772839 100644\n--- a/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n+++ b/helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixAdmin.java\n\n@@ -1139,6 +1139,53 @@ public class ZKHelixAdmin implements HelixAdmin {\n \n   }\n \n+  @Override\n+  public void addTypeToCustomizedStateAggregationConfig(String clusterName, String type) {\n+    logger.info(\"Add type {} to CustomizedStateAggregationConfig of cluster {}\", type, clusterName);\n+\n+    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n+      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n+    }\n+    CustomizedStateAggregationConfig.Builder builder =\n+        new CustomizedStateAggregationConfig.Builder();\n+\n+    builder.addAggregationEnabledType(type);\n+    CustomizedStateAggregationConfig customizedStateAggregationConfigFromBuilder = builder.build();\n+\n+    ZKHelixDataAccessor accessor =\n+        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n+    Builder keyBuilder = accessor.keyBuilder();\n+    accessor.updateProperty(keyBuilder.customizedStateAggregationConfig(),\n+        customizedStateAggregationConfigFromBuilder);\n+  }\n+\n+\n+  @Override\n+  public void removeTypeFromCustomizedStateAggregationConfig(String clusterName, String type) {\n+    logger.info(\"Remove type {} to CustomizedStateAggregationConfig of cluster {}\", type,\n+        clusterName);\n+\n+    if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {\n+      throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\");\n+    }\n+\n+    CustomizedStateAggregationConfig.Builder builder = new CustomizedStateAggregationConfig.Builder(\n+        _configAccessor.getCustomizedStateAggregationConfig(clusterName));\n+\n+    if (!builder.getAggregationEnabledTypes().contains(type)) {\n+      throw new HelixException(\"Type \" + type\n+          + \" is missing from the CustomizedStateAggregationConfig of cluster \" + clusterName);\n+    }\n+\n+    builder.removeAggregationEnabledType(type);\n+    CustomizedStateAggregationConfig customizedStateAggregationConfigFromBuilder = builder.build();\n+    ZKHelixDataAccessor accessor =\n+        new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));\n+    Builder keyBuilder = accessor.keyBuilder();\n+    accessor.setProperty(keyBuilder.customizedStateAggregationConfig(),\n+        customizedStateAggregationConfigFromBuilder);\n+  }\n+\n   @Override\n   public List<String> getConfigKeys(HelixConfigScope scope) {\n     return _configAccessor.getKeys(scope);\n"}}, {"oid": "32ca99cd0fac08a4d3665b50348fd321137e3130", "url": "https://github.com/apache/helix/commit/32ca99cd0fac08a4d3665b50348fd321137e3130", "message": "Add API for adding and removing type from config", "committedDate": "2020-02-21T18:32:38Z", "type": "commit"}, {"oid": "32ca99cd0fac08a4d3665b50348fd321137e3130", "url": "https://github.com/apache/helix/commit/32ca99cd0fac08a4d3665b50348fd321137e3130", "message": "Add API for adding and removing type from config", "committedDate": "2020-02-21T18:32:38Z", "type": "forcePushed"}]}