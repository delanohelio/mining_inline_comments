{"pr_number": 1157, "pr_title": "Enable subclasses to override OutputFormat, output path implementation", "pr_createdAt": "2020-08-04T21:54:40Z", "pr_url": "https://github.com/cdapio/hydrator-plugins/pull/1157", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MjUwMA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465362500", "bodyText": "style: should have something on the previous line besides just return. Also, indentation for a new line should be 2 spaces and not 4.", "author": "albertshau", "createdAt": "2020-08-04T22:19:54Z", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -88,32 +88,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     }\n \n     FileFormat format = config.getFormat();\n-    ValidatingOutputFormat validatingOutputFormat =\n-      pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n-                                   format.name().toLowerCase(), config.getRawProperties());\n+    ValidatingOutputFormat validatingOutputFormat = getValidatingOutputFormat(pipelineConfigurer);\n     FormatContext context = new FormatContext(collector, pipelineConfigurer.getStageConfigurer().getInputSchema());\n     validateOutputFormatProvider(context, format, validatingOutputFormat);\n   }\n \n+  public ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {\n+    FileFormat format = config.getFormat();\n+    return\n+        pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),", "originalCommit": "274ee44e3c9ac8b8523abb9a26615cb0ab7811de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MTIzOQ==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465381239", "bodyText": "Fixed.", "author": "greeshmaswaminathan", "createdAt": "2020-08-04T23:14:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MjUwMA=="}], "type": "inlineReview", "revised_code": {"commit": "608ccbf4828955ba91a8ea76fc872f8072b5f54c", "chunk": "diff --git a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\nindex d02aeead..a8ec57bb 100644\n--- a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n+++ b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n\n@@ -93,11 +93,10 @@ public abstract class AbstractFileSink<T extends PluginConfig & FileSinkProperti\n     validateOutputFormatProvider(context, format, validatingOutputFormat);\n   }\n \n-  public ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {\n+  protected ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {\n     FileFormat format = config.getFormat();\n-    return\n-        pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n-            format.name().toLowerCase(), config.getRawProperties());\n+    return pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n+                                        format.name().toLowerCase(), config.getRawProperties());\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MzAyMA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465363020", "bodyText": "I assume this is pulled into its own method so subclasses can use it? If that's the case, can this be protected instead of public?", "author": "albertshau", "createdAt": "2020-08-04T22:21:11Z", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -135,12 +127,28 @@ public void prepareRun(BatchSinkContext context) throws Exception {\n     Map<String, String> outputProperties = new HashMap<>(validatingOutputFormat.getOutputFormatConfiguration());\n     outputProperties.putAll(getFileSystemProperties(context));\n     outputProperties.put(FileOutputFormat.OUTDIR, getOutputDir(context.getLogicalStartTime()));\n-\n     context.addOutput(Output.of(config.getReferenceName(),\n                                 new SinkOutputFormatProvider(validatingOutputFormat.getOutputFormatClassName(),\n                                                              outputProperties)));\n   }\n \n+  public ValidatingOutputFormat getOutputFormatForRun(BatchSinkContext context) throws InstantiationException {", "originalCommit": "274ee44e3c9ac8b8523abb9a26615cb0ab7811de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MTM3Ng==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465381376", "bodyText": "Yes, protected is enough. Fixed.", "author": "greeshmaswaminathan", "createdAt": "2020-08-04T23:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MzAyMA=="}], "type": "inlineReview", "revised_code": {"commit": "608ccbf4828955ba91a8ea76fc872f8072b5f54c", "chunk": "diff --git a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\nindex d02aeead..a8ec57bb 100644\n--- a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n+++ b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n\n@@ -132,7 +131,7 @@ public abstract class AbstractFileSink<T extends PluginConfig & FileSinkProperti\n                                                              outputProperties)));\n   }\n \n-  public ValidatingOutputFormat getOutputFormatForRun(BatchSinkContext context) throws InstantiationException {\n+  protected ValidatingOutputFormat getOutputFormatForRun(BatchSinkContext context) throws InstantiationException {\n     FileFormat fileFormat = config.getFormat();\n     try {\n       return context.newPluginInstance(fileFormat.name().toLowerCase());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MzUzOA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465363538", "bodyText": "can this be protected instead of public?", "author": "albertshau", "createdAt": "2020-08-04T22:22:30Z", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -88,32 +88,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     }\n \n     FileFormat format = config.getFormat();\n-    ValidatingOutputFormat validatingOutputFormat =\n-      pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n-                                   format.name().toLowerCase(), config.getRawProperties());\n+    ValidatingOutputFormat validatingOutputFormat = getValidatingOutputFormat(pipelineConfigurer);\n     FormatContext context = new FormatContext(collector, pipelineConfigurer.getStageConfigurer().getInputSchema());\n     validateOutputFormatProvider(context, format, validatingOutputFormat);\n   }\n \n+  public ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {", "originalCommit": "274ee44e3c9ac8b8523abb9a26615cb0ab7811de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MTQ0OA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1157#discussion_r465381448", "bodyText": "Done.", "author": "greeshmaswaminathan", "createdAt": "2020-08-04T23:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MzUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "608ccbf4828955ba91a8ea76fc872f8072b5f54c", "chunk": "diff --git a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\nindex d02aeead..a8ec57bb 100644\n--- a/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n+++ b/format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java\n\n@@ -93,11 +93,10 @@ public abstract class AbstractFileSink<T extends PluginConfig & FileSinkProperti\n     validateOutputFormatProvider(context, format, validatingOutputFormat);\n   }\n \n-  public ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {\n+  protected ValidatingOutputFormat getValidatingOutputFormat(PipelineConfigurer pipelineConfigurer) {\n     FileFormat format = config.getFormat();\n-    return\n-        pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n-            format.name().toLowerCase(), config.getRawProperties());\n+    return pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, format.name().toLowerCase(),\n+                                        format.name().toLowerCase(), config.getRawProperties());\n   }\n \n   @Override\n"}}, {"oid": "608ccbf4828955ba91a8ea76fc872f8072b5f54c", "url": "https://github.com/cdapio/hydrator-plugins/commit/608ccbf4828955ba91a8ea76fc872f8072b5f54c", "message": "Enable subclasses to override OutputFormat and output path implementation", "committedDate": "2020-08-04T23:08:19Z", "type": "commit"}, {"oid": "608ccbf4828955ba91a8ea76fc872f8072b5f54c", "url": "https://github.com/cdapio/hydrator-plugins/commit/608ccbf4828955ba91a8ea76fc872f8072b5f54c", "message": "Enable subclasses to override OutputFormat and output path implementation", "committedDate": "2020-08-04T23:08:19Z", "type": "forcePushed"}]}