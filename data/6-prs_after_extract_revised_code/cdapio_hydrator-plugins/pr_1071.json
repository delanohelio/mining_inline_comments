{"pr_number": 1071, "pr_title": "[CDAP-16290] Added recordLineage method to ReferenceBatchSink and ReferenceBatchSource so all subclasses plugins can use it", "pr_createdAt": "2020-04-07T06:01:58Z", "pr_url": "https://github.com/cdapio/hydrator-plugins/pull/1071", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTE3Mw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971173", "bodyText": "nit - put a new line after this, the convention is to have a new line before the params", "author": "yaojiefeng", "createdAt": "2020-04-07T17:05:04Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.", "originalCommit": "ad20a5d95609ee2ff452afaa6a858cccc5231c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\nindex 7728289c..848a86cf 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n\n@@ -50,6 +54,7 @@ public abstract class ReferenceBatchSink<IN, KEY_OUT, VAL_OUT> extends BatchSink\n   /**\n    * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n    * any batch sink plugin.\n+   *\n    * @param context BatchSinkContext from prepareRun\n    * @param outputName name of output dataset\n    * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTczNw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971737", "bodyText": "it is better to check if the schema is null, if it is null or the fields is null, if that is true, we should log a message", "author": "yaojiefeng", "createdAt": "2020-04-07T17:05:51Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n+    lineageRecorder.createExternalDataset(tableSchema);\n+    List<String> fieldNames = tableSchema.getFields().stream().map(Schema.Field::getName).collect(Collectors.toList());", "originalCommit": "ad20a5d95609ee2ff452afaa6a858cccc5231c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\nindex 7728289c..848a86cf 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n\n@@ -50,6 +54,7 @@ public abstract class ReferenceBatchSink<IN, KEY_OUT, VAL_OUT> extends BatchSink\n   /**\n    * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n    * any batch sink plugin.\n+   *\n    * @param context BatchSinkContext from prepareRun\n    * @param outputName name of output dataset\n    * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTgxNg==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971816", "bodyText": "schema can be null", "author": "yaojiefeng", "createdAt": "2020-04-07T17:05:58Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,", "originalCommit": "ad20a5d95609ee2ff452afaa6a858cccc5231c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\nindex 7728289c..848a86cf 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n\n@@ -50,6 +54,7 @@ public abstract class ReferenceBatchSink<IN, KEY_OUT, VAL_OUT> extends BatchSink\n   /**\n    * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n    * any batch sink plugin.\n+   *\n    * @param context BatchSinkContext from prepareRun\n    * @param outputName name of output dataset\n    * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjA0NA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404972044", "bodyText": "Same comment here as the ReferenceBatchSink", "author": "yaojiefeng", "createdAt": "2020-04-07T17:06:19Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   * @param context BatchSourceContext from prepareRun", "originalCommit": "ad20a5d95609ee2ff452afaa6a858cccc5231c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\nindex dfae5c80..bdc24d24 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n\n@@ -50,6 +54,7 @@ public abstract class ReferenceBatchSource<KEY_IN, VAL_IN, OUT> extends BatchSou\n   /**\n    * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n    * of any batch source plugin.\n+   *\n    * @param context BatchSourceContext from prepareRun\n    * @param outputName name of output dataset\n    * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzI3NA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405177274", "bodyText": "Don't use Precondition, if will fail the pipeline. Should just do a if check and log as a warn message that field lineage will be missing", "author": "yaojiefeng", "createdAt": "2020-04-07T23:44:16Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +47,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   *\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);", "originalCommit": "f775cf8201de14f420cd81f9c4b0a3213b55dbf3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\nindex ef86e61f..848a86cf 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n\n@@ -61,8 +64,14 @@ public abstract class ReferenceBatchSink<IN, KEY_OUT, VAL_OUT> extends BatchSink\n    */\n   protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n                                String description) {\n-    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);\n-    Preconditions.checkNotNull(tableSchema.getFields(), \"schema.getFields() for output %s is null.\", outputName);\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"Schema fields for output %s is empty. Field-level lineage will not be recorded\", outputName);\n+      return;\n+    }\n     LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n     lineageRecorder.createExternalDataset(tableSchema);\n     List<String> fieldNames = tableSchema.getFields().stream().map(Schema.Field::getName).collect(Collectors.toList());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzMwMg==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405177302", "bodyText": "same here", "author": "yaojiefeng", "createdAt": "2020-04-07T23:44:22Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +47,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   *\n+   * @param context BatchSourceContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSourceContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);", "originalCommit": "f775cf8201de14f420cd81f9c4b0a3213b55dbf3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\nindex fea0cae8..bdc24d24 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n\n@@ -61,8 +64,14 @@ public abstract class ReferenceBatchSource<KEY_IN, VAL_IN, OUT> extends BatchSou\n    */\n   protected void recordLineage(BatchSourceContext context, String outputName, Schema tableSchema, String operationName,\n                                String description) {\n-    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);\n-    Preconditions.checkNotNull(tableSchema.getFields(), \"schema.getFields() for output %s is null.\", outputName);\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"Schema fields for output %s is empty. Field-level lineage will not be recorded\", outputName);\n+      return;\n+    }\n     LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n     lineageRecorder.createExternalDataset(tableSchema);\n     List<String> fieldNames = tableSchema.getFields().stream().map(Schema.Field::getName).collect(Collectors.toList());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NzgzNA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405187834", "bodyText": "nit - just say schema fields is empty", "author": "yaojiefeng", "createdAt": "2020-04-08T00:19:19Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +50,33 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   *\n+   * @param context BatchSourceContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSourceContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);", "originalCommit": "f277e092a3ee085af781a16acb4122c93b89675e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\nindex cb45b89d..bdc24d24 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java\n\n@@ -69,7 +69,7 @@ public abstract class ReferenceBatchSource<KEY_IN, VAL_IN, OUT> extends BatchSou\n       return;\n     }\n     if (tableSchema.getFields() == null) {\n-      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      LOG.warn(\"Schema fields for output %s is empty. Field-level lineage will not be recorded\", outputName);\n       return;\n     }\n     LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4Nzg2Nw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405187867", "bodyText": "nit - just say schema fields is empty", "author": "yaojiefeng", "createdAt": "2020-04-08T00:19:28Z", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +50,33 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   *\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);", "originalCommit": "f277e092a3ee085af781a16acb4122c93b89675e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "chunk": "diff --git a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\nindex 6f4823e0..848a86cf 100644\n--- a/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n+++ b/hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java\n\n@@ -69,7 +69,7 @@ public abstract class ReferenceBatchSink<IN, KEY_OUT, VAL_OUT> extends BatchSink\n       return;\n     }\n     if (tableSchema.getFields() == null) {\n-      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      LOG.warn(\"Schema fields for output %s is empty. Field-level lineage will not be recorded\", outputName);\n       return;\n     }\n     LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n"}}, {"oid": "c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "url": "https://github.com/cdapio/hydrator-plugins/commit/c9dcf7291a757d7acc3535f24090fc0c90fd0ae6", "message": "[CDAP-16290] Added recordLineage method to ReferenceBatchSink and ReferenceBatchSource so all subclasses plugins can use it", "committedDate": "2020-04-08T00:43:12Z", "type": "commit"}, {"oid": "ae6300882a9f74b8b20b13c40eb31976fc5f7eb6", "url": "https://github.com/cdapio/hydrator-plugins/commit/ae6300882a9f74b8b20b13c40eb31976fc5f7eb6", "message": "Merge branch 'develop' into feature/CDAP-16290-recordLineage-to-source-and-sink", "committedDate": "2020-04-08T00:43:59Z", "type": "commit"}, {"oid": "ae6300882a9f74b8b20b13c40eb31976fc5f7eb6", "url": "https://github.com/cdapio/hydrator-plugins/commit/ae6300882a9f74b8b20b13c40eb31976fc5f7eb6", "message": "Merge branch 'develop' into feature/CDAP-16290-recordLineage-to-source-and-sink", "committedDate": "2020-04-08T00:43:59Z", "type": "forcePushed"}]}