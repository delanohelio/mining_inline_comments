{"pr_number": 1030, "pr_title": "[CDAP-16289] Added FLL for core plugins", "pr_createdAt": "2020-02-26T01:06:50Z", "pr_url": "https://github.com/cdapio/hydrator-plugins/pull/1030", "timeline": [{"oid": "51f57fe2dcbc629f1f8eaea61d9ccedf36553df6", "url": "https://github.com/cdapio/hydrator-plugins/commit/51f57fe2dcbc629f1f8eaea61d9ccedf36553df6", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-26T01:05:36Z", "type": "commit"}, {"oid": "674073105fb647e0a165306ed882740ce1331ea6", "url": "https://github.com/cdapio/hydrator-plugins/commit/674073105fb647e0a165306ed882740ce1331ea6", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-26T02:00:26Z", "type": "commit"}, {"oid": "087c35db5174f754d1a5fba6abc209ee645f864e", "url": "https://github.com/cdapio/hydrator-plugins/commit/087c35db5174f754d1a5fba6abc209ee645f864e", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-26T02:14:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzMTIxNg==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1030#discussion_r384831216", "bodyText": "You can just create this field with List<String> fields = conf.getFields() == null ?  ... : ... to avoid the if else block", "author": "yaojiefeng", "createdAt": "2020-02-26T23:33:23Z", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java", "diffHunk": "@@ -106,6 +108,17 @@ public void prepareRun(BatchAggregatorContext context) throws Exception {\n     validate(context.getInputSchema(), conf.getFields(), context.getFailureCollector());\n     context.getFailureCollector().getOrThrowException();\n \n+    if (conf.getFields() == null) {\n+      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n+        TransformLineageRecorderUtils.getFields(context.getInputSchema()),", "originalCommit": "087c35db5174f754d1a5fba6abc209ee645f864e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e89c18967f3e5d342744b0b7cc69af51042f433", "chunk": "diff --git a/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java b/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\nindex 491be9f7..edeb82ec 100644\n--- a/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\n+++ b/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\n\n@@ -108,17 +108,10 @@ public class DistinctAggregator extends RecordAggregator {\n     validate(context.getInputSchema(), conf.getFields(), context.getFailureCollector());\n     context.getFailureCollector().getOrThrowException();\n \n-    if (conf.getFields() == null) {\n-      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n-        TransformLineageRecorderUtils.getFields(context.getInputSchema()),\n-        \"distinctAggregator\",\n-        \"Removed duplicates in input records.\"));\n-    } else {\n-      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n-        Lists.newArrayList(conf.getFields()),\n-        \"distinctAggregator\",\n-        \"Removed duplicates in input records.\"));\n-    }\n+    List<String> fields = conf.getFields() == null ?\n+      TransformLineageRecorderUtils.getFields(context.getInputSchema()) : Lists.newArrayList(conf.getFields());\n+    context.record(TransformLineageRecorderUtils.generateOneToOnes(fields, \"distinctAggregator\",\n+      \"Removed duplicates in input records.\"));\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNjA5Mw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1030#discussion_r384836093", "bodyText": "use new ArrayList<>(conf.getFields())", "author": "yaojiefeng", "createdAt": "2020-02-26T23:48:25Z", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java", "diffHunk": "@@ -106,6 +108,17 @@ public void prepareRun(BatchAggregatorContext context) throws Exception {\n     validate(context.getInputSchema(), conf.getFields(), context.getFailureCollector());\n     context.getFailureCollector().getOrThrowException();\n \n+    if (conf.getFields() == null) {\n+      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n+        TransformLineageRecorderUtils.getFields(context.getInputSchema()),\n+        \"distinctAggregator\",\n+        \"Removed duplicates in input records.\"));\n+    } else {\n+      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n+        Lists.newArrayList(conf.getFields()),", "originalCommit": "087c35db5174f754d1a5fba6abc209ee645f864e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzOTEyOA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1030#discussion_r384839128", "bodyText": "That won't work since conf.getFields() returns an Iterable, and there's no ArrayList constructor that converts an Iterable to a list.", "author": "vravish", "createdAt": "2020-02-26T23:57:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNjA5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4e89c18967f3e5d342744b0b7cc69af51042f433", "chunk": "diff --git a/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java b/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\nindex 491be9f7..edeb82ec 100644\n--- a/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\n+++ b/core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DistinctAggregator.java\n\n@@ -108,17 +108,10 @@ public class DistinctAggregator extends RecordAggregator {\n     validate(context.getInputSchema(), conf.getFields(), context.getFailureCollector());\n     context.getFailureCollector().getOrThrowException();\n \n-    if (conf.getFields() == null) {\n-      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n-        TransformLineageRecorderUtils.getFields(context.getInputSchema()),\n-        \"distinctAggregator\",\n-        \"Removed duplicates in input records.\"));\n-    } else {\n-      context.record(TransformLineageRecorderUtils.generateOneToOnes(\n-        Lists.newArrayList(conf.getFields()),\n-        \"distinctAggregator\",\n-        \"Removed duplicates in input records.\"));\n-    }\n+    List<String> fields = conf.getFields() == null ?\n+      TransformLineageRecorderUtils.getFields(context.getInputSchema()) : Lists.newArrayList(conf.getFields());\n+    context.record(TransformLineageRecorderUtils.generateOneToOnes(fields, \"distinctAggregator\",\n+      \"Removed duplicates in input records.\"));\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNzU3OA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1030#discussion_r384837578", "bodyText": "just create a keep list using new ArrayList<>(fieldsToKeep)", "author": "yaojiefeng", "createdAt": "2020-02-26T23:53:01Z", "path": "core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java", "diffHunk": "@@ -138,6 +146,25 @@ public void initialize(TransformContext context) throws Exception {\n     collector.getOrThrowException();\n   }\n \n+  @Override\n+  public void prepareRun(StageSubmitterContext context) {\n+    init(context.getInputSchema(), context.getFailureCollector());\n+\n+    List<FieldOperation> output = new ArrayList<>();\n+    Collection<String> fieldsToKeep = this.fieldsToKeep;", "originalCommit": "087c35db5174f754d1a5fba6abc209ee645f864e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e89c18967f3e5d342744b0b7cc69af51042f433", "chunk": "diff --git a/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java b/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\nindex 8d713e54..1088763d 100644\n--- a/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\n+++ b/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\n\n@@ -151,13 +151,17 @@ public class ProjectionTransform extends Transform<StructuredRecord, StructuredR\n     init(context.getInputSchema(), context.getFailureCollector());\n \n     List<FieldOperation> output = new ArrayList<>();\n-    Collection<String> fieldsToKeep = this.fieldsToKeep;\n+    List<String> fieldsToKeep = new ArrayList<>(this.fieldsToKeep);\n+    List<String> fieldsToDrop = new ArrayList<>(this.fieldsToDrop);\n     if (fieldsToKeep.isEmpty()) {\n       fieldsToKeep = TransformLineageRecorderUtils.getFields(context.getInputSchema());\n+    } else {\n+      fieldsToDrop = new ArrayList<>(TransformLineageRecorderUtils.getFields(context.getInputSchema()));\n+      fieldsToDrop.removeAll(fieldsToKeep);\n     }\n-    output.addAll(TransformLineageRecorderUtils.generateOneToOnes(new ArrayList<>(fieldsToKeep),\n-      \"identity\", TransformLineageRecorderUtils.IDENTITY_TRANSFORM_DESCRIPTION));\n-    output.addAll(TransformLineageRecorderUtils.generateDrops(new ArrayList<>(fieldsToDrop)));\n+    output.addAll(TransformLineageRecorderUtils.generateOneToOnes(fieldsToKeep,\"identity\",\n+      TransformLineageRecorderUtils.IDENTITY_TRANSFORM_DESCRIPTION));\n+    output.addAll(TransformLineageRecorderUtils.generateDrops(fieldsToDrop));\n     output.addAll(fieldsToRename.keySet().stream().map(field -> new FieldTransformOperation(\"renameField\" + field,\n       \"Renamed fields as specified.\",\n       Collections.singletonList(field), fieldsToRename.get(field))).collect(Collectors.toList()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzODM2OA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1030#discussion_r384838368", "bodyText": "for drops, if the fieldsToKeep is not empty, any field that is not in the keep list is dropped. See \n  \n    \n      hydrator-plugins/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\n    \n    \n        Lines 175 to 176\n      in\n      087c35d\n    \n    \n    \n    \n\n        \n          \n           if (!fieldsToKeep.isEmpty() && !fieldsToKeep.contains(inputFieldName)) { \n        \n\n        \n          \n               continue;", "author": "yaojiefeng", "createdAt": "2020-02-26T23:55:28Z", "path": "core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java", "diffHunk": "@@ -138,6 +146,25 @@ public void initialize(TransformContext context) throws Exception {\n     collector.getOrThrowException();\n   }\n \n+  @Override\n+  public void prepareRun(StageSubmitterContext context) {\n+    init(context.getInputSchema(), context.getFailureCollector());\n+\n+    List<FieldOperation> output = new ArrayList<>();\n+    Collection<String> fieldsToKeep = this.fieldsToKeep;\n+    if (fieldsToKeep.isEmpty()) {\n+      fieldsToKeep = TransformLineageRecorderUtils.getFields(context.getInputSchema());\n+    }\n+    output.addAll(TransformLineageRecorderUtils.generateOneToOnes(new ArrayList<>(fieldsToKeep),\n+      \"identity\", TransformLineageRecorderUtils.IDENTITY_TRANSFORM_DESCRIPTION));\n+    output.addAll(TransformLineageRecorderUtils.generateDrops(new ArrayList<>(fieldsToDrop)));", "originalCommit": "087c35db5174f754d1a5fba6abc209ee645f864e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e89c18967f3e5d342744b0b7cc69af51042f433", "chunk": "diff --git a/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java b/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\nindex 8d713e54..1088763d 100644\n--- a/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\n+++ b/core-plugins/src/main/java/io/cdap/plugin/transform/ProjectionTransform.java\n\n@@ -151,13 +151,17 @@ public class ProjectionTransform extends Transform<StructuredRecord, StructuredR\n     init(context.getInputSchema(), context.getFailureCollector());\n \n     List<FieldOperation> output = new ArrayList<>();\n-    Collection<String> fieldsToKeep = this.fieldsToKeep;\n+    List<String> fieldsToKeep = new ArrayList<>(this.fieldsToKeep);\n+    List<String> fieldsToDrop = new ArrayList<>(this.fieldsToDrop);\n     if (fieldsToKeep.isEmpty()) {\n       fieldsToKeep = TransformLineageRecorderUtils.getFields(context.getInputSchema());\n+    } else {\n+      fieldsToDrop = new ArrayList<>(TransformLineageRecorderUtils.getFields(context.getInputSchema()));\n+      fieldsToDrop.removeAll(fieldsToKeep);\n     }\n-    output.addAll(TransformLineageRecorderUtils.generateOneToOnes(new ArrayList<>(fieldsToKeep),\n-      \"identity\", TransformLineageRecorderUtils.IDENTITY_TRANSFORM_DESCRIPTION));\n-    output.addAll(TransformLineageRecorderUtils.generateDrops(new ArrayList<>(fieldsToDrop)));\n+    output.addAll(TransformLineageRecorderUtils.generateOneToOnes(fieldsToKeep,\"identity\",\n+      TransformLineageRecorderUtils.IDENTITY_TRANSFORM_DESCRIPTION));\n+    output.addAll(TransformLineageRecorderUtils.generateDrops(fieldsToDrop));\n     output.addAll(fieldsToRename.keySet().stream().map(field -> new FieldTransformOperation(\"renameField\" + field,\n       \"Renamed fields as specified.\",\n       Collections.singletonList(field), fieldsToRename.get(field))).collect(Collectors.toList()));\n"}}, {"oid": "4e89c18967f3e5d342744b0b7cc69af51042f433", "url": "https://github.com/cdapio/hydrator-plugins/commit/4e89c18967f3e5d342744b0b7cc69af51042f433", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-27T01:42:12Z", "type": "commit"}, {"oid": "fb90c332ae195969ece2f2412707e7d71058f7bf", "url": "https://github.com/cdapio/hydrator-plugins/commit/fb90c332ae195969ece2f2412707e7d71058f7bf", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-27T01:54:14Z", "type": "commit"}, {"oid": "7c4b34730be0fc9fd31960ffae1f1a12b4d2ffae", "url": "https://github.com/cdapio/hydrator-plugins/commit/7c4b34730be0fc9fd31960ffae1f1a12b4d2ffae", "message": "[CDAP-16289] Added FLL for core plugins", "committedDate": "2020-02-27T03:10:58Z", "type": "commit"}, {"oid": "f3f645ceb6661cd22050f5e354d40693b69733a8", "url": "https://github.com/cdapio/hydrator-plugins/commit/f3f645ceb6661cd22050f5e354d40693b69733a8", "message": "Merge branch 'feature/CDAP-16289-fll-for-core-plugins-2' of https://github.com/cdapio/hydrator-plugins into feature/CDAP-16289-fll-for-core-plugins-2", "committedDate": "2020-02-27T03:11:43Z", "type": "commit"}]}