{"pr_number": 1208, "pr_title": "Fixed: decimal type handled correctly", "pr_createdAt": "2020-08-28T14:25:46Z", "pr_url": "https://github.com/cdapio/hydrator-plugins/pull/1208", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDIwOA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r499010208", "bodyText": "why the precision is 2?", "author": "CuriousVini", "createdAt": "2020-10-02T19:26:18Z", "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "diffHunk": "@@ -233,11 +233,7 @@ private static Schema getSchema(String typeName, int sqlType, int precision, int\n \n       case Types.NUMERIC:\n       case Types.DECIMAL:\n-        // if there are no digits after the point, use integer types\n-        type = scale != 0 ? Schema.Type.DOUBLE :\n-          // with 10 digits we can represent 2^32 and LONG is required\n-          precision > 9 ? Schema.Type.LONG : Schema.Type.INT;\n-        break;\n+        return  Schema.decimalOf(2,scale);", "originalCommit": "c26b97560d880a7b451355f7dcd96c9279908ad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDYyMg==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r499010622", "bodyText": "Has this been tested with any database? Please add a unit test", "author": "CuriousVini", "createdAt": "2020-10-02T19:27:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDIwOA=="}], "type": "inlineReview", "revised_code": {"commit": "a90cdc730338aca0359e2600cd7b532e39f493ce", "chunk": "diff --git a/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java b/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\nindex 1336dc11..30104ce1 100644\n--- a/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\n+++ b/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\n\n@@ -233,7 +233,7 @@ public final class DBUtils {\n \n       case Types.NUMERIC:\n       case Types.DECIMAL:\n-        return  Schema.decimalOf(2,scale);\n+        return Schema.decimalOf(precision, scale);\n \n       case Types.DOUBLE:\n         type = Schema.Type.DOUBLE;\n"}}, {"oid": "a90cdc730338aca0359e2600cd7b532e39f493ce", "url": "https://github.com/cdapio/hydrator-plugins/commit/a90cdc730338aca0359e2600cd7b532e39f493ce", "message": "Fixed: decimal type handled correctly", "committedDate": "2020-10-16T11:51:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MDY2OA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r507480668", "bodyText": "Please move this logic here:\nhttps://github.com/cdapio/hydrator-plugins/blob/develop/database-plugins/src/main/java/io/cdap/plugin/DBRecord.java#L137", "author": "CuriousVini", "createdAt": "2020-10-19T05:42:50Z", "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "diffHunk": "@@ -284,15 +280,7 @@ public static Object transformValue(int sqlType, int precision, int scale,\n         case Types.NUMERIC:\n         case Types.DECIMAL:\n           BigDecimal decimal = (BigDecimal) original;\n-          if (scale != 0) {\n-            // if there are digits after the point, use double types\n-            return decimal.doubleValue();\n-          } else if (precision > 9) {\n-            // with 10 digits we can represent 2^32 and LONG is required\n-            return decimal.longValue();\n-          } else {\n-            return decimal.intValue();\n-          }\n+          return decimal.unscaledValue().toByteArray();", "originalCommit": "a90cdc730338aca0359e2600cd7b532e39f493ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c934f7416d6e42c023163440d36dc9b15455a0", "chunk": "diff --git a/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java b/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\nindex 30104ce1..5c69849a 100644\n--- a/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\n+++ b/database-plugins/src/main/java/io/cdap/plugin/DBUtils.java\n\n@@ -278,9 +283,18 @@ public final class DBUtils {\n         case Types.TINYINT:\n           return ((Number) original).intValue();\n         case Types.NUMERIC:\n-        case Types.DECIMAL:\n           BigDecimal decimal = (BigDecimal) original;\n-          return decimal.unscaledValue().toByteArray();\n+        if (scale != 0) {\n+          // if there are digits after the point, use double types\n+          return decimal.doubleValue();\n+        } else if (precision > 9) {\n+          // with 10 digits we can represent 2^32 and LONG is required\n+          return decimal.longValue();\n+        } else {\n+          return decimal.intValue();\n+        }\n+        case Types.DECIMAL:\n+          return original;\n         case Types.DATE:\n           return resultSet.getDate(fieldName);\n         case Types.TIME:\n"}}, {"oid": "90c934f7416d6e42c023163440d36dc9b15455a0", "url": "https://github.com/cdapio/hydrator-plugins/commit/90c934f7416d6e42c023163440d36dc9b15455a0", "message": "Fixed: decimal type handled correctly", "committedDate": "2020-10-21T13:49:32Z", "type": "commit"}, {"oid": "90c934f7416d6e42c023163440d36dc9b15455a0", "url": "https://github.com/cdapio/hydrator-plugins/commit/90c934f7416d6e42c023163440d36dc9b15455a0", "message": "Fixed: decimal type handled correctly", "committedDate": "2020-10-21T13:49:32Z", "type": "forcePushed"}]}