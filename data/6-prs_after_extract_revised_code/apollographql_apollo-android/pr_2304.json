{"pr_number": 2304, "pr_title": "Rx3 support", "pr_createdAt": "2020-05-26T18:52:32Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2304", "timeline": [{"oid": "6601cf3de376256ec06e129b0443be0e208130cc", "url": "https://github.com/apollographql/apollo-android/commit/6601cf3de376256ec06e129b0443be0e208130cc", "message": "Rx3 support", "committedDate": "2020-05-26T18:49:05Z", "type": "commit"}, {"oid": "41a777f53f734e9c6ee198ec5b97882784ea0f56", "url": "https://github.com/apollographql/apollo-android/commit/41a777f53f734e9c6ee198ec5b97882784ea0f56", "message": "Add docs for it", "committedDate": "2020-05-26T18:57:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430688054", "bodyText": "Now that we have Kotlin in the repository, I think it would be much better to have this implemented fully in Kotlin.\nThat means, maybe we should merge it with RxJavaExtensions below and have everything as top-level functions.\nLet me know what you think.", "author": "tasomaniac", "createdAt": "2020-05-26T20:26:47Z", "path": "apollo-rx3-support/src/main/java/com/apollographql/apollo/rx3/Rx3Apollo.java", "diffHunk": "@@ -0,0 +1,250 @@\n+package com.apollographql.apollo.rx3;\n+\n+import com.apollographql.apollo.ApolloCall;\n+import com.apollographql.apollo.ApolloPrefetch;\n+import com.apollographql.apollo.ApolloQueryWatcher;\n+import com.apollographql.apollo.ApolloSubscriptionCall;\n+import com.apollographql.apollo.api.Response;\n+import com.apollographql.apollo.cache.normalized.ApolloStoreOperation;\n+import com.apollographql.apollo.exception.ApolloException;\n+import com.apollographql.apollo.internal.subscription.ApolloSubscriptionTerminatedException;\n+import com.apollographql.apollo.internal.util.Cancelable;\n+import org.jetbrains.annotations.NotNull;\n+import io.reactivex.rxjava3.annotations.CheckReturnValue;\n+import io.reactivex.rxjava3.core.BackpressureStrategy;\n+import io.reactivex.rxjava3.core.Completable;\n+import io.reactivex.rxjava3.core.CompletableEmitter;\n+import io.reactivex.rxjava3.core.CompletableOnSubscribe;\n+import io.reactivex.rxjava3.core.Flowable;\n+import io.reactivex.rxjava3.core.FlowableEmitter;\n+import io.reactivex.rxjava3.core.FlowableOnSubscribe;\n+import io.reactivex.rxjava3.core.Observable;\n+import io.reactivex.rxjava3.core.ObservableEmitter;\n+import io.reactivex.rxjava3.core.ObservableOnSubscribe;\n+import io.reactivex.rxjava3.core.Single;\n+import io.reactivex.rxjava3.core.SingleEmitter;\n+import io.reactivex.rxjava3.core.SingleOnSubscribe;\n+import io.reactivex.rxjava3.disposables.Disposable;\n+import io.reactivex.rxjava3.exceptions.Exceptions;\n+import static com.apollographql.apollo.api.internal.Utils.checkNotNull;\n+\n+/**\n+ * The Rx3Apollo class provides methods for converting ApolloCall, ApolloPrefetch and ApolloWatcher types to RxJava 3\n+ * sources.\n+ */\n+public class Rx3Apollo {", "originalCommit": "41a777f53f734e9c6ee198ec5b97882784ea0f56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwNTI4OA==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430705288", "bodyText": "Totally agree! I would love to follow up with another PR doing this - I think adding that to this PR would be a little bit out of scope since it would be done for both Rx2 and Rx3 support.", "author": "Jawnnypoo", "createdAt": "2020-05-26T21:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMDAyOQ==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430710029", "bodyText": "That means, maybe we should merge it with RxJavaExtensions below and have everything as top-level functions.\n\nDoes that mean RxJava3 support will not be usable for Java callers ?", "author": "martinbonnin", "createdAt": "2020-05-26T21:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczMTU1MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430731551", "bodyText": "Ah no, the changes could be made in a way that makes it fully compatible and callable from Java.", "author": "Jawnnypoo", "createdAt": "2020-05-26T21:59:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc1MTI2MA==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430751260", "bodyText": "Yep, that can be done via JvmStatic and JvmName annotations", "author": "tasomaniac", "createdAt": "2020-05-26T22:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDcwOQ==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430920709", "bodyText": "@tasomaniac Would you prefer me to change this PR to include those changes as well? Or can I do a follow up PR?", "author": "Jawnnypoo", "createdAt": "2020-05-27T07:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMTkyMg==", "url": "https://github.com/apollographql/apollo-android/pull/2304#discussion_r430921922", "bodyText": "If you want to do a follow-up that would be awesome. Let's merge this then.", "author": "tasomaniac", "createdAt": "2020-05-27T07:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4ODA1NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "14293f0e4d32a291b6fadb99e8fa24756d317f7d", "url": "https://github.com/apollographql/apollo-android/commit/14293f0e4d32a291b6fadb99e8fa24756d317f7d", "message": "Add integration tests", "committedDate": "2020-05-26T21:02:02Z", "type": "commit"}]}