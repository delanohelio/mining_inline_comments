{"pr_number": 532, "pr_title": "Configurable default locale; get supported locales for offline mode", "pr_createdAt": "2020-05-05T01:13:49Z", "pr_url": "https://github.com/vmware/singleton/pull/532", "timeline": [{"oid": "fa56388fa66f56bce4c746ff4c662591246908f4", "url": "https://github.com/vmware/singleton/commit/fa56388fa66f56bce4c746ff4c662591246908f4", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-05-08T02:50:00Z", "type": "commit"}, {"oid": "f4c12147f958c5014b8e47959cf216a9db1d380d", "url": "https://github.com/vmware/singleton/commit/f4c12147f958c5014b8e47959cf216a9db1d380d", "message": "Loading configuration from the JSON configuration file", "committedDate": "2020-03-11T00:00:20Z", "type": "commit"}, {"oid": "1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "url": "https://github.com/vmware/singleton/commit/1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "message": "Removing code that is not yet ready to be used from the sample application", "committedDate": "2020-03-11T00:54:17Z", "type": "commit"}, {"oid": "5e72b73b497563607e5031d5afa322caffd03fca", "url": "https://github.com/vmware/singleton/commit/5e72b73b497563607e5031d5afa322caffd03fca", "message": "fixing failing code scan\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68NFL24bPpi-pS5s&open=AXDG68NFL24bPpi-pS5s\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68IGL24bPpi-pS2r&open=AXDG68IGL24bPpi-pS2r\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-03-11T22:01:24Z", "type": "commit"}, {"oid": "73d85ca7fca1290a93558fd937afd18dc27e92d6", "url": "https://github.com/vmware/singleton/commit/73d85ca7fca1290a93558fd937afd18dc27e92d6", "message": "Adding a cache properties map to hold cache details such as etag and cache control", "committedDate": "2020-03-12T07:58:55Z", "type": "commit"}, {"oid": "2a381070ef1e057fda0b08ca5d65323482273a86", "url": "https://github.com/vmware/singleton/commit/2a381070ef1e057fda0b08ca5d65323482273a86", "message": "Removing white space\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-03-12T08:09:09Z", "type": "commit"}, {"oid": "c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "url": "https://github.com/vmware/singleton/commit/c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "message": "Fixing failing unit test", "committedDate": "2020-03-12T09:09:08Z", "type": "commit"}, {"oid": "056891a79856058bf9af28c44110f588e61eeefc", "url": "https://github.com/vmware/singleton/commit/056891a79856058bf9af28c44110f588e61eeefc", "message": "Parse headers, response code, response message from an HTTP response and return them upstream.", "committedDate": "2020-03-12T22:59:17Z", "type": "commit"}, {"oid": "a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "url": "https://github.com/vmware/singleton/commit/a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "message": "Storing response headers in Map of cache properties", "committedDate": "2020-03-17T19:30:18Z", "type": "commit"}, {"oid": "17978bd621bc7ee7de27205534568fee986b1d0b", "url": "https://github.com/vmware/singleton/commit/17978bd621bc7ee7de27205534568fee986b1d0b", "message": "Fixing failing unit test due to NullPointerException when doing Map.putAll(null)", "committedDate": "2020-03-17T22:50:12Z", "type": "commit"}, {"oid": "6c691708a3b9b0a891622a7a96d3d979ff3cb807", "url": "https://github.com/vmware/singleton/commit/6c691708a3b9b0a891622a7a96d3d979ff3cb807", "message": "Changes after code review.", "committedDate": "2020-03-17T23:41:27Z", "type": "commit"}, {"oid": "41a8aa1c4afd56cc1042939892a22dbca64adc1d", "url": "https://github.com/vmware/singleton/commit/41a8aa1c4afd56cc1042939892a22dbca64adc1d", "message": "Removing exception handling for now", "committedDate": "2020-03-18T22:09:37Z", "type": "commit"}, {"oid": "dd2455d5e68187dd4061b9c71ccd2799480d3d85", "url": "https://github.com/vmware/singleton/commit/dd2455d5e68187dd4061b9c71ccd2799480d3d85", "message": "Deprecating VIPCfg.initialize; cleaning up code", "committedDate": "2020-03-19T16:43:36Z", "type": "commit"}, {"oid": "e26d372496ced19785a48b187e3bcdb1c1442ba1", "url": "https://github.com/vmware/singleton/commit/e26d372496ced19785a48b187e3bcdb1c1442ba1", "message": "Storing the http response code in the cache", "committedDate": "2020-03-20T15:45:46Z", "type": "commit"}, {"oid": "01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "url": "https://github.com/vmware/singleton/commit/01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "message": "Using cached etag as if-none-match request header value in the request in order to get a 304 NOT MODIFIED http response", "committedDate": "2020-03-25T20:11:07Z", "type": "commit"}, {"oid": "750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "url": "https://github.com/vmware/singleton/commit/750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "message": "Handling 404 response from Singleton service", "committedDate": "2020-03-26T04:04:49Z", "type": "commit"}, {"oid": "529e5cc756460c5314a09a015caad7f4d26482d9", "url": "https://github.com/vmware/singleton/commit/529e5cc756460c5314a09a015caad7f4d26482d9", "message": "Using HTTP repsonse's Cache-Control max-age and timestamp to dertermine if component locale's cache has expired", "committedDate": "2020-03-26T23:38:04Z", "type": "commit"}, {"oid": "b40fcf9dc23a01cc336b67e7eddea16d85be9817", "url": "https://github.com/vmware/singleton/commit/b40fcf9dc23a01cc336b67e7eddea16d85be9817", "message": "Moving constants to URLUtils", "committedDate": "2020-03-26T23:49:56Z", "type": "commit"}, {"oid": "fa123f9a1bee0d349ab6c36384288c99e865fb99", "url": "https://github.com/vmware/singleton/commit/fa123f9a1bee0d349ab6c36384288c99e865fb99", "message": "Fixing failing test", "committedDate": "2020-03-27T00:07:11Z", "type": "commit"}, {"oid": "30b2054bc21a61ecdcecbb74f5a97b7af714682f", "url": "https://github.com/vmware/singleton/commit/30b2054bc21a61ecdcecbb74f5a97b7af714682f", "message": "Fixing failing code scan", "committedDate": "2020-03-27T02:47:23Z", "type": "commit"}, {"oid": "0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "url": "https://github.com/vmware/singleton/commit/0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-03-27T06:47:07Z", "type": "commit"}, {"oid": "ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "url": "https://github.com/vmware/singleton/commit/ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "message": "Cleaning up import in ComponentService,java", "committedDate": "2020-03-30T00:29:34Z", "type": "commit"}, {"oid": "d8450e444632e849f020704d65106fed11417b0a", "url": "https://github.com/vmware/singleton/commit/d8450e444632e849f020704d65106fed11417b0a", "message": "Cleaning up code - caching/expiry", "committedDate": "2020-03-30T03:03:20Z", "type": "commit"}, {"oid": "d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "url": "https://github.com/vmware/singleton/commit/d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "message": "Merge branch 'g11n-java-client' of https://github.com/jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-03-30T03:04:44Z", "type": "commit"}, {"oid": "0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "url": "https://github.com/vmware/singleton/commit/0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "message": "Adding tests for new caching workflow; enabling old caching workflow using cacheExpiredTime config", "committedDate": "2020-03-31T02:51:56Z", "type": "commit"}, {"oid": "d06adb3ac3d456f897882ee1af237d29c7f03967", "url": "https://github.com/vmware/singleton/commit/d06adb3ac3d456f897882ee1af237d29c7f03967", "message": "Fixing a failing test", "committedDate": "2020-03-31T03:16:31Z", "type": "commit"}, {"oid": "48c855873e5585f19152290738e4dbf6f0180b06", "url": "https://github.com/vmware/singleton/commit/48c855873e5585f19152290738e4dbf6f0180b06", "message": "Adding mock server response", "committedDate": "2020-03-31T05:37:28Z", "type": "commit"}, {"oid": "4e45bedd128d76023c8089f9194069ea0bf30f6a", "url": "https://github.com/vmware/singleton/commit/4e45bedd128d76023c8089f9194069ea0bf30f6a", "message": "Removing unused file sampleconfig.json", "committedDate": "2020-03-31T18:55:50Z", "type": "commit"}, {"oid": "6a40dc87413ed76788fc60332b91741137d5e829", "url": "https://github.com/vmware/singleton/commit/6a40dc87413ed76788fc60332b91741137d5e829", "message": "Changes from code review", "committedDate": "2020-03-31T21:46:03Z", "type": "commit"}, {"oid": "4c3c12d4549eac93be3481db3309dea80c6a9e6c", "url": "https://github.com/vmware/singleton/commit/4c3c12d4549eac93be3481db3309dea80c6a9e6c", "message": "Value of VIPCfg.cacheExpiredTime is -1 when value is not set in config file. This means max age from server will be used. Setting VIPCfg.cacheExpiredTime to 0 disables caching.", "committedDate": "2020-03-31T23:34:51Z", "type": "commit"}, {"oid": "7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "url": "https://github.com/vmware/singleton/commit/7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "message": "Changing a LinkedHashMap to a HashMap because insertion order does not need to be maintained.", "committedDate": "2020-04-02T17:10:51Z", "type": "commit"}, {"oid": "baef0d06f0facd4fe2383185dc1b7979bba186a7", "url": "https://github.com/vmware/singleton/commit/baef0d06f0facd4fe2383185dc1b7979bba186a7", "message": "Adding CacheItem object to contain map of data and a another map for any other cache properties", "committedDate": "2020-04-03T05:54:04Z", "type": "commit"}, {"oid": "02a96e9a7dbec8e912f29439334792d7b51069d6", "url": "https://github.com/vmware/singleton/commit/02a96e9a7dbec8e912f29439334792d7b51069d6", "message": "Fixing failing unit test", "committedDate": "2020-04-03T05:59:48Z", "type": "commit"}, {"oid": "78d88f796cb3bd3f015bb1d589717fe6897abc05", "url": "https://github.com/vmware/singleton/commit/78d88f796cb3bd3f015bb1d589717fe6897abc05", "message": "Fixing code scan issues", "committedDate": "2020-04-03T06:14:21Z", "type": "commit"}, {"oid": "655c223992bf244c4136a52c636119c9edf605fe", "url": "https://github.com/vmware/singleton/commit/655c223992bf244c4136a52c636119c9edf605fe", "message": "Code cleanup", "committedDate": "2020-04-03T08:36:12Z", "type": "commit"}, {"oid": "8746915f5015f497b6956e8f8b743806330cc51c", "url": "https://github.com/vmware/singleton/commit/8746915f5015f497b6956e8f8b743806330cc51c", "message": "Lazily instantiating cacheProps; code clean up and comments", "committedDate": "2020-04-05T17:28:09Z", "type": "commit"}, {"oid": "897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "url": "https://github.com/vmware/singleton/commit/897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "message": "Changes after code review", "committedDate": "2020-04-07T03:26:44Z", "type": "commit"}, {"oid": "3a4e18358f37c29502cfdeb60c44b94e63653601", "url": "https://github.com/vmware/singleton/commit/3a4e18358f37c29502cfdeb60c44b94e63653601", "message": "Adding header to CacheItem.java", "committedDate": "2020-04-07T03:36:56Z", "type": "commit"}, {"oid": "b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "url": "https://github.com/vmware/singleton/commit/b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "message": "Fixing code san issue. Synchronize on a final field", "committedDate": "2020-04-07T03:49:29Z", "type": "commit"}, {"oid": "8f57e243ed1f450349392e990b4502dd74543f91", "url": "https://github.com/vmware/singleton/commit/8f57e243ed1f450349392e990b4502dd74543f91", "message": "Fixing code scan bug", "committedDate": "2020-04-07T04:07:44Z", "type": "commit"}, {"oid": "72c8799ffbbb23dc61115375cbee52573e792ec9", "url": "https://github.com/vmware/singleton/commit/72c8799ffbbb23dc61115375cbee52573e792ec9", "message": "Changes after code review", "committedDate": "2020-04-07T17:15:34Z", "type": "commit"}, {"oid": "92edfc88a64c21470fc06c37b65503a6d9042f90", "url": "https://github.com/vmware/singleton/commit/92edfc88a64c21470fc06c37b65503a6d9042f90", "message": "Updating CasheService.isContainComponent to return false if cache key is stored but has a null value", "committedDate": "2020-04-07T19:15:13Z", "type": "commit"}, {"oid": "2042554b861d0b97b04a8d29c3a051106e24d8f0", "url": "https://github.com/vmware/singleton/commit/2042554b861d0b97b04a8d29c3a051106e24d8f0", "message": "HttpRequester if-none-match header and other customized headers are added to each specific request locally.", "committedDate": "2020-04-08T04:57:56Z", "type": "commit"}, {"oid": "ae707fface7ade445bc391f9f0e4125734eeddb1", "url": "https://github.com/vmware/singleton/commit/ae707fface7ade445bc391f9f0e4125734eeddb1", "message": "Code clean up; keep old caching expiration logic", "committedDate": "2020-04-08T17:09:39Z", "type": "commit"}, {"oid": "82818d5909f1b1e2117f7599993ea50777bd982a", "url": "https://github.com/vmware/singleton/commit/82818d5909f1b1e2117f7599993ea50777bd982a", "message": "Fixing code scan bug", "committedDate": "2020-04-08T21:12:57Z", "type": "commit"}, {"oid": "31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "url": "https://github.com/vmware/singleton/commit/31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-04-08T21:50:07Z", "type": "commit"}, {"oid": "c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "url": "https://github.com/vmware/singleton/commit/c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "message": "code clean up", "committedDate": "2020-04-09T00:13:02Z", "type": "commit"}, {"oid": "78dcc1cc7de1700d332c4901ec3f09e546befd26", "url": "https://github.com/vmware/singleton/commit/78dcc1cc7de1700d332c4901ec3f09e546befd26", "message": "Removing response code and response msg from cache; Passing cacheItem object to be updated down the line.", "committedDate": "2020-04-09T07:14:14Z", "type": "commit"}, {"oid": "9281c640b3b78d987e1fd865b01f16e4edbfd768", "url": "https://github.com/vmware/singleton/commit/9281c640b3b78d987e1fd865b01f16e4edbfd768", "message": "Changes after code review", "committedDate": "2020-04-10T04:03:05Z", "type": "commit"}, {"oid": "26577625b3eb13f1f9367f313dd94d47c9113749", "url": "https://github.com/vmware/singleton/commit/26577625b3eb13f1f9367f313dd94d47c9113749", "message": "Adding header to CacheItem.java file", "committedDate": "2020-04-10T04:08:23Z", "type": "commit"}, {"oid": "9e80f09d4838f9de33bf9dce100744f4832630a0", "url": "https://github.com/vmware/singleton/commit/9e80f09d4838f9de33bf9dce100744f4832630a0", "message": "Fixing failing unit test", "committedDate": "2020-04-10T04:35:16Z", "type": "commit"}, {"oid": "68467f34882da413ed852f2ed4b1394e88bf64b1", "url": "https://github.com/vmware/singleton/commit/68467f34882da413ed852f2ed4b1394e88bf64b1", "message": "Changes after code review", "committedDate": "2020-04-10T23:14:41Z", "type": "commit"}, {"oid": "d67c72ee939034deb58b99d4fdf0fcc38857c006", "url": "https://github.com/vmware/singleton/commit/d67c72ee939034deb58b99d4fdf0fcc38857c006", "message": "Fixing code scan bugs", "committedDate": "2020-04-10T23:28:38Z", "type": "commit"}, {"oid": "85919738596847c3cd42fd2397226fb498cf6e28", "url": "https://github.com/vmware/singleton/commit/85919738596847c3cd42fd2397226fb498cf6e28", "message": "Not storing anything in cache if response is neither 200 nor 304", "committedDate": "2020-04-13T21:22:27Z", "type": "commit"}, {"oid": "22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "url": "https://github.com/vmware/singleton/commit/22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "message": "Loading messages from specified offline resource bundles", "committedDate": "2020-04-15T00:36:42Z", "type": "commit"}, {"oid": "ce2488b8af539a1456959b97e482435b11d5aeff", "url": "https://github.com/vmware/singleton/commit/ce2488b8af539a1456959b97e482435b11d5aeff", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-04-15T00:43:12Z", "type": "commit"}, {"oid": "109296301af054a8def120b98fd7e877acdb465f", "url": "https://github.com/vmware/singleton/commit/109296301af054a8def120b98fd7e877acdb465f", "message": "Adding header", "committedDate": "2020-04-15T00:48:03Z", "type": "commit"}, {"oid": "35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "url": "https://github.com/vmware/singleton/commit/35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "message": "Fixing failing unie test", "committedDate": "2020-04-15T01:14:11Z", "type": "commit"}, {"oid": "ada17f19d4e56d283ae65886b08e0d6a71031ba7", "url": "https://github.com/vmware/singleton/commit/ada17f19d4e56d283ae65886b08e0d6a71031ba7", "message": "Code changes after review; code clean up", "committedDate": "2020-04-16T17:06:32Z", "type": "commit"}, {"oid": "fc60eeffd82dc8e8214207524bda4864edd05add", "url": "https://github.com/vmware/singleton/commit/fc60eeffd82dc8e8214207524bda4864edd05add", "message": "Using java.nio.file.Paths", "committedDate": "2020-04-17T16:14:41Z", "type": "commit"}, {"oid": "3e70449176a975fa30985714d2c9f03795c72d6b", "url": "https://github.com/vmware/singleton/commit/3e70449176a975fa30985714d2c9f03795c72d6b", "message": "Offline mode as fallback when service fetch fails", "committedDate": "2020-04-17T17:07:36Z", "type": "commit"}, {"oid": "609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "url": "https://github.com/vmware/singleton/commit/609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "message": "Resetting VIPCfg and I18nFactory instances for each test", "committedDate": "2020-04-17T17:56:53Z", "type": "commit"}, {"oid": "dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "url": "https://github.com/vmware/singleton/commit/dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "message": "Resetting VIPCfg and I18nFactory after test", "committedDate": "2020-04-17T17:59:27Z", "type": "commit"}, {"oid": "7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "url": "https://github.com/vmware/singleton/commit/7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "message": "Fixing tests", "committedDate": "2020-04-17T22:31:30Z", "type": "commit"}, {"oid": "5b92e4480ca25d122c7f98dc389d7e4884a59a25", "url": "https://github.com/vmware/singleton/commit/5b92e4480ca25d122c7f98dc389d7e4884a59a25", "message": "Limit to wiremock test logging", "committedDate": "2020-04-20T17:42:50Z", "type": "commit"}, {"oid": "dfb41b5042e733f21f5cda4428faab6e0a95e19a", "url": "https://github.com/vmware/singleton/commit/dfb41b5042e733f21f5cda4428faab6e0a95e19a", "message": "Decreasing unit test log", "committedDate": "2020-04-20T21:47:47Z", "type": "commit"}, {"oid": "21a7105c4fdc5d88d8db80340b3b00d947622cc7", "url": "https://github.com/vmware/singleton/commit/21a7105c4fdc5d88d8db80340b3b00d947622cc7", "message": "this test is timing out and trying to connect 70+ times", "committedDate": "2020-04-21T00:43:23Z", "type": "commit"}, {"oid": "84343d506461aea4976a86fa25e7bb1b06703150", "url": "https://github.com/vmware/singleton/commit/84343d506461aea4976a86fa25e7bb1b06703150", "message": "Adding comments to code", "committedDate": "2020-04-21T00:56:15Z", "type": "commit"}, {"oid": "be8e443e6de5070baf91c76e1f4001188e8be0d5", "url": "https://github.com/vmware/singleton/commit/be8e443e6de5070baf91c76e1f4001188e8be0d5", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-04-21T18:26:20Z", "type": "commit"}, {"oid": "b805d3672e0b286648b612dd48d3fabe73f92fd4", "url": "https://github.com/vmware/singleton/commit/b805d3672e0b286648b612dd48d3fabe73f92fd4", "message": "Adding timestamp to cache fromn local bundle", "committedDate": "2020-04-21T19:14:03Z", "type": "commit"}, {"oid": "17bc16cd019c4d40ad82df7590869f82a76b0a96", "url": "https://github.com/vmware/singleton/commit/17bc16cd019c4d40ad82df7590869f82a76b0a96", "message": "Deprecating methods in TranslationMessage; adding new method getMessage", "committedDate": "2020-04-23T04:26:42Z", "type": "commit"}, {"oid": "15da01004363a3441944149c106b79908ba4cde6", "url": "https://github.com/vmware/singleton/commit/15da01004363a3441944149c106b79908ba4cde6", "message": "Added tests for TranslationMessage.getMessage", "committedDate": "2020-04-24T08:58:03Z", "type": "commit"}, {"oid": "631de868cb3b40899ace35017268bdb65b236091", "url": "https://github.com/vmware/singleton/commit/631de868cb3b40899ace35017268bdb65b236091", "message": "Fixing test", "committedDate": "2020-04-24T09:15:35Z", "type": "commit"}, {"oid": "ffd9adb09499997921630426e9a8327bf615ee50", "url": "https://github.com/vmware/singleton/commit/ffd9adb09499997921630426e9a8327bf615ee50", "message": "Fixing test", "committedDate": "2020-04-24T09:28:59Z", "type": "commit"}, {"oid": "c00f7ae3cacc0e17ab59a776b02c3be04a106252", "url": "https://github.com/vmware/singleton/commit/c00f7ae3cacc0e17ab59a776b02c3be04a106252", "message": "Fixing test", "committedDate": "2020-04-24T20:29:27Z", "type": "commit"}, {"oid": "d0504c49a179166868cbae84874647925d88c2a3", "url": "https://github.com/vmware/singleton/commit/d0504c49a179166868cbae84874647925d88c2a3", "message": "Removing comment field because source collection is not supported anymore; cleaning up tests; adding comments for javadoc", "committedDate": "2020-04-24T22:28:00Z", "type": "commit"}, {"oid": "79b18d0035a35a23fb26fe76cae4868e848a11b8", "url": "https://github.com/vmware/singleton/commit/79b18d0035a35a23fb26fe76cae4868e848a11b8", "message": "Code clean up", "committedDate": "2020-04-24T22:44:30Z", "type": "commit"}, {"oid": "ec9f5db8cd6110c5b714bc098d54680308c63d9a", "url": "https://github.com/vmware/singleton/commit/ec9f5db8cd6110c5b714bc098d54680308c63d9a", "message": "Changes from code review", "committedDate": "2020-04-24T22:58:26Z", "type": "commit"}, {"oid": "2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "url": "https://github.com/vmware/singleton/commit/2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "message": "Code clean up", "committedDate": "2020-04-24T23:25:19Z", "type": "commit"}, {"oid": "4e44a8c46fd2856ca97cf71158cb9804880e3e17", "url": "https://github.com/vmware/singleton/commit/4e44a8c46fd2856ca97cf71158cb9804880e3e17", "message": "Optional SourceOpt in initialization\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-04-26T22:36:42Z", "type": "commit"}, {"oid": "de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "url": "https://github.com/vmware/singleton/commit/de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "message": "Fixing test", "committedDate": "2020-04-27T00:58:16Z", "type": "commit"}, {"oid": "406cb2a268cd5e18eee310577137c8f364bc8309", "url": "https://github.com/vmware/singleton/commit/406cb2a268cd5e18eee310577137c8f364bc8309", "message": "Adding comments to code", "committedDate": "2020-04-28T03:14:02Z", "type": "commit"}, {"oid": "c80696ab2f0bdfcc80ba268705ed147aed423b07", "url": "https://github.com/vmware/singleton/commit/c80696ab2f0bdfcc80ba268705ed147aed423b07", "message": "Adding comment for javadoc", "committedDate": "2020-04-28T04:33:36Z", "type": "commit"}, {"oid": "79d111e4404a4f171dcdfb001228afcbad996753", "url": "https://github.com/vmware/singleton/commit/79d111e4404a4f171dcdfb001228afcbad996753", "message": "Cleaning up code", "committedDate": "2020-04-28T21:54:07Z", "type": "commit"}, {"oid": "24d8d5d7ee9e667c88187761c5332d3c9485cf26", "url": "https://github.com/vmware/singleton/commit/24d8d5d7ee9e667c88187761c5332d3c9485cf26", "message": "Code clean up", "committedDate": "2020-04-28T22:02:21Z", "type": "commit"}, {"oid": "23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "url": "https://github.com/vmware/singleton/commit/23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "message": "Fixing test", "committedDate": "2020-04-28T23:28:49Z", "type": "commit"}, {"oid": "369643f588359e1ceb430768ab473566c503da3c", "url": "https://github.com/vmware/singleton/commit/369643f588359e1ceb430768ab473566c503da3c", "message": "Removing source message fallback from this PR", "committedDate": "2020-04-29T03:17:37Z", "type": "commit"}, {"oid": "4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "url": "https://github.com/vmware/singleton/commit/4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-04-29T04:09:00Z", "type": "commit"}, {"oid": "636b5b4cf56f121cf871e07911dcb4d763a16c64", "url": "https://github.com/vmware/singleton/commit/636b5b4cf56f121cf871e07911dcb4d763a16c64", "message": "Default locale in config file instead of hardcoded; get supported locales for offline mode; fixing some bugs in getting supported locales", "committedDate": "2020-05-05T01:10:59Z", "type": "commit"}, {"oid": "71a87e52447b0fede8230e7f8f7e5c65ce034546", "url": "https://github.com/vmware/singleton/commit/71a87e52447b0fede8230e7f8f7e5c65ce034546", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-05-05T01:20:57Z", "type": "commit"}, {"oid": "b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "url": "https://github.com/vmware/singleton/commit/b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "message": "Fixing test", "committedDate": "2020-05-05T01:25:06Z", "type": "commit"}, {"oid": "060666d54ddfa7156433209ad06c959b4af649da", "url": "https://github.com/vmware/singleton/commit/060666d54ddfa7156433209ad06c959b4af649da", "message": "Fixing tests", "committedDate": "2020-05-05T01:56:26Z", "type": "commit"}, {"oid": "52e3695951a48d21de82180c140beead3924cf75", "url": "https://github.com/vmware/singleton/commit/52e3695951a48d21de82180c140beead3924cf75", "message": "Default locale to Locale.ENGLISH if not set in config file", "committedDate": "2020-05-05T03:04:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MDY2Ng==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420560666", "bodyText": "Isn't the parameter 'language' used? so remove it?\nFor the returned type 'Map<String, String>\u2018, if the key and value are some, why not use List instead of Map?", "author": "linr211", "createdAt": "2020-05-06T05:59:12Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class.getName());\n+    \n+    @Override\n+    public Map<String, String> getDisplayNamesFromCLDR(String language) {", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2NjYzOQ==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420966639", "bodyText": "It now used.\nIt is not the same anymore.", "author": "jessiejuachon", "createdAt": "2020-05-06T17:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MDY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex 694ab5c4..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -8,6 +8,7 @@ import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Stream;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDY2MQ==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420564661", "bodyText": "Check if a language tag matches the default locale -> Check if a language tag matches the default locale from configuration file", "author": "linr211", "createdAt": "2020-05-06T06:12:33Z", "path": "src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java", "diffHunk": "@@ -101,19 +101,13 @@ public static boolean isDefaultLocale(Locale locale) {\n     }\n \n     /*\n-     * Judge if a locale string is English locale string.\n+     * Check if a language tag matches the default locale", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\nindex 5d313d25..d35efc06 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\n@@ -101,7 +101,7 @@ public class LocaleUtility {\n     }\n \n     /*\n-     * Check if a language tag matches the default locale\n+     * Check if a language tag matches the default locale that is from the config file\n      */\n     public static boolean isDefaultLocale(String languageTag) {\n     \tlanguageTag = languageTag.replaceAll(\"_\", \"-\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3MTM4OA==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420571388", "bodyText": "getName() is unncessary.", "author": "Xiaochao8", "createdAt": "2020-05-06T06:33:23Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class.getName());", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex 694ab5c4..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -8,6 +8,7 @@ import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Stream;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3MzY2Mw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420573663", "bodyText": "file.getFileName().toString() are called twice, so it's better to save it in a variable?", "author": "Xiaochao8", "createdAt": "2020-05-06T06:39:54Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class.getName());\n+    \n+    @Override\n+    public Map<String, String> getDisplayNamesFromCLDR(String language) {\n+   \n+    \tMap<String, String> supportedLocales = new HashMap<String, String>();\n+    \t\n+    \tString offlineResourcesBaseUrl = VIPCfg.getInstance().getOfflineResourcesBaseUrl();\n+\t\ttry {\n+\t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n+\t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n+\t\t\t\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\t\tlistOfFiles.map(file -> file.getFileName().toString().substring(9, file.getFileName().toString().indexOf(\".\")))", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex 694ab5c4..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -8,6 +8,7 @@ import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Stream;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3NDcyMg==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420574722", "bodyText": "What does it have to do with CLDR?", "author": "Xiaochao8", "createdAt": "2020-05-06T06:42:50Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class.getName());\n+    \n+    @Override\n+    public Map<String, String> getDisplayNamesFromCLDR(String language) {", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex 694ab5c4..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -8,6 +8,7 @@ import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Stream;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420578235", "bodyText": "Why change LocaleOpt to RemoteLocaleOpt?", "author": "Xiaochao8", "createdAt": "2020-05-06T06:52:18Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/LocaleService.java", "diffHunk": "@@ -47,7 +49,7 @@ public LocaleService() {\n             }\n             logger.trace(\"get region list of '\" + language\n                     + \"' data from backend\");\n-            Map<String, String> tmpMap = new LocaleOpt()\n+            Map<String, String> tmpMap = new RemoteLocaleOpt()", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk3MDYxMw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420970613", "bodyText": "Because LocaleOpt is now the interface. Implementing types are RemoteLocaleOpt and LocalLocaleOpt.", "author": "jessiejuachon", "createdAt": "2020-05-06T17:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNzYxMA==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421207610", "bodyText": "What if offline mode, then call this method?", "author": "Xiaochao8", "createdAt": "2020-05-07T02:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczMDkzNw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421730937", "bodyText": "This gets the supported regions per language from the service, which returns the list from CLDR. I am not up to date with @linr211 plan for CLDR data in offline mode (sorry, I will catch up). Are we planning to package CLDR with the client library?", "author": "jessiejuachon", "createdAt": "2020-05-07T19:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4OTc3OA==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421889778", "bodyText": "I mean you need to handle this situation. When offline mode, return error or empty.", "author": "Xiaochao8", "createdAt": "2020-05-08T01:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkwNDc4Mw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421904783", "bodyText": "If offline mode, isn't it okay to still allow the user to get the list from remote? If service is not available, http call will error out.\nBy the way, what is this list for? Where will product teams use this list?", "author": "jessiejuachon", "createdAt": "2020-05-08T02:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkwODU4Ng==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421908586", "bodyText": "@Xiaochao8 , let's continue this one in the next PR.", "author": "jessiejuachon", "createdAt": "2020-05-08T02:58:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3ODIzNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4MjAzNw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420582037", "bodyText": "Suggest substituting loop for recursion. That maybe more efficient.", "author": "Xiaochao8", "createdAt": "2020-05-06T07:01:44Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/LocaleService.java", "diffHunk": "@@ -59,8 +61,12 @@ public LocaleService() {\n         return respMap;\n     }\n \n-    public Map<String, String> getDisplayNamesFromCLDR(String language) {\n-        Map<String, String> dispMap = null;\n+    public Map<String, String> getDisplayNamesFromCLDR(String language, ", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4NjAxNw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420986017", "bodyText": "Efficiency wise, it is the same: O(n), n = number of items in msgSourceQueueIter.\nIt is exactly the same number of lines of code also, so I do not prefer anything.\nNonetheless, I changed it to while loop (iteration).", "author": "jessiejuachon", "createdAt": "2020-05-06T18:00:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4MjAzNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU5MTU0Mg==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420591542", "bodyText": "Why change to L2?", "author": "Xiaochao8", "createdAt": "2020-05-06T07:24:02Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java", "diffHunk": "@@ -104,18 +104,16 @@ public void addCacheOfStatus(Map<String, String> dataMap) {\n \n     public List<Locale> getSupportedLocalesFromCache() {\n         List<Locale> locales = new ArrayList<Locale>();\n-        Cache c = VIPCfg.getInstance().getCacheManager().getCache(VIPCfg.CACHE_L3);\n+        Cache c = VIPCfg.getInstance().getCacheManager().getCache(VIPCfg.CACHE_L2);", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MDAxNA==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420980014", "bodyText": "This is actually a bug that I just fixed. I found it by writing LocaleTest.testGetSupportedLocalesOfflineBundles().\nHere is the bug description:\nIn LocaleService.getDisplayNamesFromCLDR, the list of supported locales is cached in CACHE_L2. But CacheService. getSupportedLocalesFromCache never find it in the cache because it has been looking for it in CACHE_L3. So it always tries to get it from the service every time.", "author": "jessiejuachon", "createdAt": "2020-05-06T17:51:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU5MTU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java\nindex caf7a482..63fbcb8a 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java\n\n@@ -109,15 +110,16 @@ public class CacheService {\n             return locales;\n         }\n         Set<String> keySet = c.keySet();\n-        Map<String, Object> tempMap = new HashMap<String, Object>();\n+       \n         for (String key : keySet) {\n-            String locale = key.substring(\n-                    key.indexOf(ConstantsKeys.UNDERLINE_POUND) + 2,\n-                    key.length());\n-            if (!tempMap.containsKey(locale)) {\n-                locales.add(Locale.forLanguageTag(locale.replace(\"_\", \"-\")));\n-                tempMap.put(locale, locale);\n-            }\n+        \tif (key.startsWith(LocaleService.DISPN_PREFIX)) {\n+        \t\tFormatCacheItem cacheItem = (FormatCacheItem) c.get(key);\n+        \t\tMap<String, String> langTagToDisplayNameMap = cacheItem.getCachedData();\n+        \t\tfor (String languageTag : langTagToDisplayNameMap.keySet()) {\n+        \t\t\tlocales.add(Locale.forLanguageTag(languageTag));\n+        \t\t}\n+        \t\tbreak;\n+        \t}\n         }\n         return locales;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzNDgzMw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r420634833", "bodyText": "Change 9 to length(\"messages_\")?", "author": "Xiaochao8", "createdAt": "2020-05-06T08:46:55Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class.getName());\n+    \n+    @Override\n+    public Map<String, String> getDisplayNamesFromCLDR(String language) {\n+   \n+    \tMap<String, String> supportedLocales = new HashMap<String, String>();\n+    \t\n+    \tString offlineResourcesBaseUrl = VIPCfg.getInstance().getOfflineResourcesBaseUrl();\n+\t\ttry {\n+\t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n+\t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n+\t\t\t\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\t\tlistOfFiles.map(file -> file.getFileName().toString().substring(9, file.getFileName().toString().indexOf(\".\")))", "originalCommit": "52e3695951a48d21de82180c140beead3924cf75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex 694ab5c4..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -8,6 +8,7 @@ import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.stream.Stream;\n \n"}}, {"oid": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "url": "https://github.com/vmware/singleton/commit/2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "message": "Changed after code review: code clean up, bug fix", "committedDate": "2020-05-06T21:58:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNDk1Nw==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421204957", "bodyText": "Java 8's \"Files.exists\" should not be used (squid:S3725)\nCODE_SMELLCode smellMAJORMajor\nThe Files.exists method has noticeably poor performance in JDK 8, and can slow an application significantly when used to check files that don't actually exist.\nThe same goes for Files.notExists, Files.isDirectory and Files.isRegularFile.\nNote that this rule is automatically disabled when the project's sonar.java.source is not 8.\nNoncompliant Code Example\nPath myPath;\nif(java.nio.Files.exists(myPath)) {  // Noncompliant\n// do something\n}\nCompliant Solution\nPath myPath;\nif(myPath.toFile().exists())) {\n// do something\n}", "author": "Xiaochao8", "createdAt": "2020-05-07T02:38:46Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class);\n+    private static final String BUNDLE_PREFIX = \"messages_\";\n+    \n+    @Override\n+    public Map<String, String> getLanguages(String displayLanguage) {\n+   \n+    \tMap<String, String> supportedLocales = new HashMap<String, String>();\n+    \tLocale inLocale = Locale.forLanguageTag(displayLanguage); \n+    \tString offlineResourcesBaseUrl = VIPCfg.getInstance().getOfflineResourcesBaseUrl();\n+\t\ttry {\n+\t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n+\t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n+\t\t\t\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {", "originalCommit": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyNjUyNg==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421726526", "bodyText": "I did not use Files.exists.", "author": "jessiejuachon", "createdAt": "2020-05-07T19:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNDk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczMTQ4OQ==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421731489", "bodyText": "I did not use Files.exists.\nDo you mean Files.walk? Can you suggest an alternative? Thanks.", "author": "jessiejuachon", "createdAt": "2020-05-07T19:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNDk1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex e0c53bd1..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -33,10 +33,10 @@ public class LocalLocaleOpt implements LocaleOpt{\n \t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n \t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n \t\t\t\n-\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(p -> p.toFile().isFile())) {\n \t\t\t\tlistOfFiles.map(file -> {\n \t\t\t\t\tString fileName = file.getFileName().toString();\n-\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf(\".\"));\n+\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf('.'));\n \t\t\t\t}).forEach(s->supportedLocales.put(s, Locale.forLanguageTag(s).getDisplayName(inLocale)));\n \t\t\t}\t\t\n \t\t} catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4ODg0NA==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421888844", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n          \n          \n            \n            \t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(p -> p.toFile().isFile())) {", "author": "Xiaochao8", "createdAt": "2020-05-08T01:40:57Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class);\n+    private static final String BUNDLE_PREFIX = \"messages_\";\n+    \n+    @Override\n+    public Map<String, String> getLanguages(String displayLanguage) {\n+   \n+    \tMap<String, String> supportedLocales = new HashMap<String, String>();\n+    \tLocale inLocale = Locale.forLanguageTag(displayLanguage); \n+    \tString offlineResourcesBaseUrl = VIPCfg.getInstance().getOfflineResourcesBaseUrl();\n+\t\ttry {\n+\t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n+\t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n+\t\t\t\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {", "originalCommit": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex e0c53bd1..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -33,10 +33,10 @@ public class LocalLocaleOpt implements LocaleOpt{\n \t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n \t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n \t\t\t\n-\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(p -> p.toFile().isFile())) {\n \t\t\t\tlistOfFiles.map(file -> {\n \t\t\t\t\tString fileName = file.getFileName().toString();\n-\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf(\".\"));\n+\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf('.'));\n \t\t\t\t}).forEach(s->supportedLocales.put(s, Locale.forLanguageTag(s).getDisplayName(inLocale)));\n \t\t\t}\t\t\n \t\t} catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4OTI1NQ==", "url": "https://github.com/vmware/singleton/pull/532#discussion_r421889255", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf(\".\"));\n          \n          \n            \n            \t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf('.'));\n          \n      \n    \n    \n  \n\nPut single-quotes around '.' to use the faster \"indexOf(char)\" method.", "author": "Xiaochao8", "createdAt": "2020-05-08T01:42:23Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.LocaleOpt;\n+\n+public class LocalLocaleOpt implements LocaleOpt{\n+\n+    private Logger logger = LoggerFactory.getLogger(LocalLocaleOpt.class);\n+    private static final String BUNDLE_PREFIX = \"messages_\";\n+    \n+    @Override\n+    public Map<String, String> getLanguages(String displayLanguage) {\n+   \n+    \tMap<String, String> supportedLocales = new HashMap<String, String>();\n+    \tLocale inLocale = Locale.forLanguageTag(displayLanguage); \n+    \tString offlineResourcesBaseUrl = VIPCfg.getInstance().getOfflineResourcesBaseUrl();\n+\t\ttry {\n+\t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n+\t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n+\t\t\t\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\t\tlistOfFiles.map(file -> {\n+\t\t\t\t\tString fileName = file.getFileName().toString();\n+\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf(\".\"));", "originalCommit": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa56388fa66f56bce4c746ff4c662591246908f4", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\nindex e0c53bd1..df558f05 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\n@@ -33,10 +33,10 @@ public class LocalLocaleOpt implements LocaleOpt{\n \t\t\tPath path = Paths.get(Thread.currentThread().getContextClassLoader().\n \t\t\t\t\tgetResource(Paths.get(offlineResourcesBaseUrl).toString()).toURI());\n \t\t\t\n-\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(Files::isRegularFile)) {\n+\t\t\ttry (Stream<Path> listOfFiles = Files.walk(path).filter(p -> p.toFile().isFile())) {\n \t\t\t\tlistOfFiles.map(file -> {\n \t\t\t\t\tString fileName = file.getFileName().toString();\n-\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf(\".\"));\n+\t\t\t\t\treturn fileName.substring(BUNDLE_PREFIX.length(), fileName.indexOf('.'));\n \t\t\t\t}).forEach(s->supportedLocales.put(s, Locale.forLanguageTag(s).getDisplayName(inLocale)));\n \t\t\t}\t\t\n \t\t} catch (Exception e) {\n"}}, {"oid": "bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "url": "https://github.com/vmware/singleton/commit/bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-05-08T02:49:19Z", "type": "commit"}]}