{"pr_number": 823, "pr_title": "G11n java client [BUG 754] Performance impact on the very first L3 fetch for a non-supported locale", "pr_createdAt": "2020-10-13T21:07:54Z", "pr_url": "https://github.com/vmware/singleton/pull/823", "timeline": [{"oid": "680aab45f2ca90ae5ce471eeae46b711e5984c72", "url": "https://github.com/vmware/singleton/commit/680aab45f2ca90ae5ce471eeae46b711e5984c72", "message": "code clean up", "committedDate": "2020-09-25T22:32:04Z", "type": "commit"}, {"oid": "b10eec5e3a2631adfbc8bc7b263b58e18a986fff", "url": "https://github.com/vmware/singleton/commit/b10eec5e3a2631adfbc8bc7b263b58e18a986fff", "message": "code clean up", "committedDate": "2020-09-25T22:34:04Z", "type": "commit"}, {"oid": "610ffd0747abfc093e73769d82302f9ac6d784c7", "url": "https://github.com/vmware/singleton/commit/610ffd0747abfc093e73769d82302f9ac6d784c7", "message": "code clean up", "committedDate": "2020-09-25T22:35:23Z", "type": "commit"}, {"oid": "01e8222bf9673929c797a3303be06e8f05ad2ea4", "url": "https://github.com/vmware/singleton/commit/01e8222bf9673929c797a3303be06e8f05ad2ea4", "message": "Removing locale property from MessageCacheItem", "committedDate": "2020-09-25T22:54:50Z", "type": "commit"}, {"oid": "e78a92ebfb9dbfc34b6c3d05df590c3c6f96e2ef", "url": "https://github.com/vmware/singleton/commit/e78a92ebfb9dbfc34b6c3d05df590c3c6f96e2ef", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-09-29T15:51:09Z", "type": "commit"}, {"oid": "ce6cd774d6e0d87900cf3ef0ab8b13c5b6b8a40d", "url": "https://github.com/vmware/singleton/commit/ce6cd774d6e0d87900cf3ef0ab8b13c5b6b8a40d", "message": "Merge branch 'g11n-java-client' of github.com:jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-09-29T15:51:31Z", "type": "commit"}, {"oid": "138e1f95ff2404a046eaa8b8578b00ab0dd741c1", "url": "https://github.com/vmware/singleton/commit/138e1f95ff2404a046eaa8b8578b00ab0dd741c1", "message": "changes based on review comments", "committedDate": "2020-09-29T17:00:30Z", "type": "commit"}, {"oid": "b1a824a868c91bbf34d415e7d64fb8702b3ec804", "url": "https://github.com/vmware/singleton/commit/b1a824a868c91bbf34d415e7d64fb8702b3ec804", "message": "Enablling locale fallback for matched locale", "committedDate": "2020-09-29T19:29:47Z", "type": "commit"}, {"oid": "6c4bb645e7ae877f7084dfac085fdd704791d0c0", "url": "https://github.com/vmware/singleton/commit/6c4bb645e7ae877f7084dfac085fdd704791d0c0", "message": "merging changes", "committedDate": "2020-09-30T02:59:42Z", "type": "commit"}, {"oid": "a4ddbdd2998da691ac6f55bd3166f9fe7e19b902", "url": "https://github.com/vmware/singleton/commit/a4ddbdd2998da691ac6f55bd3166f9fe7e19b902", "message": "Merge branch 'g11n-java-client' into g11n-java-client-754", "committedDate": "2020-10-05T21:17:33Z", "type": "commit"}, {"oid": "a97ccfc34fc31c713ca5053bc19e138811e217bd", "url": "https://github.com/vmware/singleton/commit/a97ccfc34fc31c713ca5053bc19e138811e217bd", "message": "Merge branch 'g11n-java-client' of github.com:vmware/singleton into g11n-java-client-754", "committedDate": "2020-10-13T17:53:13Z", "type": "commit"}, {"oid": "eb8b625a13e707fb1b5ee8e7659431170aa23735", "url": "https://github.com/vmware/singleton/commit/eb8b625a13e707fb1b5ee8e7659431170aa23735", "message": "Fixing bug 754 - Performance impact on the very first L3 fetch for a non-supported locale", "committedDate": "2020-10-13T21:04:27Z", "type": "commit"}, {"oid": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "url": "https://github.com/vmware/singleton/commit/dd03ac877e2f0b986ee8b3e8df69c2d025887875", "message": "Merge branch 'g11n-java-client-754' of github.com:jessiejuachon/singleton into g11n-java-client-754", "committedDate": "2020-10-13T21:05:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NzUxNw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504347517", "bodyText": "Add one more test case: zh is supported, zh-Hans and zh-Hant aren't supported.  Request zh-Hant will return null rather than zh.", "author": "Xiaochao8", "createdAt": "2020-10-14T01:26:53Z", "path": "src/test/java/com/vmware/vip/i18n/LocaleTest.java", "diffHunk": "@@ -46,34 +42,72 @@ public void init() {\n     public void testPickupLocaleFromList() {\n         Locale[] supportedLocales = { Locale.forLanguageTag(\"de\"),\n                 Locale.forLanguageTag(\"es\"), Locale.forLanguageTag(\"fr\"),\n+                Locale.forLanguageTag(\"fr-CA\"),\n                 Locale.forLanguageTag(\"ja\"), Locale.forLanguageTag(\"ko\"),\n+                Locale.forLanguageTag(\"zh\"),\n                 Locale.forLanguageTag(\"zh-Hans\"),\n                 Locale.forLanguageTag(\"zh-Hant\")\n \n         };\n         Locale[] testLocales = { Locale.forLanguageTag(\"de\"),\n                 Locale.forLanguageTag(\"es\"), Locale.forLanguageTag(\"fr\"),\n+                Locale.forLanguageTag(\"fr-CA\"), Locale.forLanguageTag(\"fr-FR\"),\n                 Locale.forLanguageTag(\"ja\"), Locale.forLanguageTag(\"ko\"),\n-                Locale.forLanguageTag(\"zh\"), Locale.forLanguageTag(\"zh-CN\"),\n+                Locale.forLanguageTag(\"zh\"),\n+                Locale.forLanguageTag(\"zh-CN\"),\n                 Locale.forLanguageTag(\"zh-TW\"),\n                 Locale.forLanguageTag(\"zh-HANS-CN\"),\n                 Locale.forLanguageTag(\"zh-HANT-TW\"),\n                 Locale.forLanguageTag(\"zh-HANS\"),\n                 Locale.forLanguageTag(\"zh-HANT\") };\n \n-        String[] expectedLocales = { \"de\", \"es\", \"fr\", \"ja\", \"ko\", \"zh\",\n+        String[] expectedLocales = { \"de\", \"es\", \"fr\", \"fr-CA\", \"fr\", \"ja\", \"ko\", \"zh\",\n                 \"zh-Hans\", \"zh-Hant\", \"zh-Hans\", \"zh-Hant\", \"zh-Hans\", \"zh-Hant\" };\n \n         for (int i = 0; i < testLocales.length; i++) {\n             String matchedLanguageTag = LocaleUtility.pickupLocaleFromList(\n-                    Arrays.asList(supportedLocales), testLocales[i])\n+                    new HashSet<>(Arrays.asList(supportedLocales)), testLocales[i])\n                     .toLanguageTag();\n \n             logger.debug(matchedLanguageTag + \"-----\" + expectedLocales[i]);\n             Assert.assertEquals(expectedLocales[i], matchedLanguageTag);\n         }\n     }\n \n+    @Test\n+    public void testPickupLocaleFromListNotFound() {\n+        Locale[] supportedLocales = { Locale.forLanguageTag(\"de\"),\n+                Locale.forLanguageTag(\"es\"), Locale.forLanguageTag(\"fr\"),\n+                Locale.forLanguageTag(\"fr-CA\"),\n+                Locale.forLanguageTag(\"ja\"), Locale.forLanguageTag(\"ko\"),\n+                Locale.forLanguageTag(\"zh-Hans\"),\n+                Locale.forLanguageTag(\"zh-Hant\")\n+\n+        };\n+        Assert.assertNull(LocaleUtility.pickupLocaleFromList(new HashSet<>(Arrays.asList(supportedLocales)), Locale.forLanguageTag(\"fil\")));\n+    }\n+\n+    /**\n+     *  For any Chinese locale (zh-*) that is not supported,\n+     *  return null so that fallback locale will be used even if \"zh\" is supported.\n+     *  For any non-Chinese locale, return the best match (e.g. 'de' if 'de-DE' is not supported).\n+     */\n+    @Test\n+    public void testPickupLocaleFromList_special_case_zh_HK() {", "originalCommit": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "chunk": "diff --git a/src/test/java/com/vmware/vip/i18n/LocaleTest.java b/src/test/java/com/vmware/vip/i18n/LocaleTest.java\nindex 4a0e2392..5d1e51bc 100644\n--- a/src/test/java/com/vmware/vip/i18n/LocaleTest.java\n+++ b/src/test/java/com/vmware/vip/i18n/LocaleTest.java\n\n@@ -87,6 +87,32 @@ public class LocaleTest extends BaseTestClass {\n         Assert.assertNull(LocaleUtility.pickupLocaleFromList(new HashSet<>(Arrays.asList(supportedLocales)), Locale.forLanguageTag(\"fil\")));\n     }\n \n+    @Test\n+    public void testPickupLocaleFromListZh() {\n+        Locale[] supportedLocales = {\n+                Locale.forLanguageTag(\"zh\")\n+        };\n+        Locale[] testLocales = {\n+                Locale.forLanguageTag(\"zh\"),\n+                Locale.forLanguageTag(\"zh-CN\"),\n+                Locale.forLanguageTag(\"zh-TW\"),\n+                Locale.forLanguageTag(\"zh-HANS-CN\"),\n+                Locale.forLanguageTag(\"zh-HANT-TW\"),\n+                Locale.forLanguageTag(\"zh-HANS\"),\n+                Locale.forLanguageTag(\"zh-HANT\") };\n+\n+        String[] expectedLocales = {\"zh\" ,\"zh\", \"zh\", \"zh\", \"zh\", \"zh\", \"zh\"};\n+\n+        for (int i = 0; i < testLocales.length; i++) {\n+            String matchedLanguageTag = LocaleUtility.pickupLocaleFromList(\n+                    new HashSet<>(Arrays.asList(supportedLocales)), testLocales[i])\n+                    .toLanguageTag();\n+\n+            logger.debug(matchedLanguageTag + \"-----\" + expectedLocales[i]);\n+            Assert.assertEquals(expectedLocales[i], matchedLanguageTag);\n+        }\n+    }\n+\n     /**\n      *  For any Chinese locale (zh-*) that is not supported,\n      *  return null so that fallback locale will be used even if \"zh\" is supported.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMjA3Nw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504502077", "bodyText": "Is it better rename 'getMessagesFallbackLocale' to 'getFallbackLocaleMessages' ?", "author": "huihuiw01", "createdAt": "2020-10-14T08:38:30Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -108,38 +106,48 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \t\t}\n     \t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t} else { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n+\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n+\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n+\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n \t\t\t}\n-\n-\t\t\t//Create and store cacheItem for the requested locale\n-\t\t\tcacheItem = createCacheItem(fallbackLocalesIter);\n     \t}\n     \treturn cacheItem;\n     }\n \n+    /**\n+     * Gets the messages in the next fallback locale by passing the next fallback locale DTO to a new instance of ComponentService\n+\t * and then invoking {@link #getMessages(Iterator)}.\n+\t * @param fallbackLocalesIter The fallback locale queue to use in case of failure. If null, no locale fallback will be applied.\n+     */\n+    private MessageCacheItem getMessagesFallbackLocale(Iterator<Locale> fallbackLocalesIter) {", "originalCommit": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\nindex 303f9ee0..c6a718fd 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\n@@ -110,14 +109,14 @@ public class ComponentService {\n \t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n \t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n \t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t} else { // Requested locale is not supported\n \t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n \t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n \t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n \t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t}\n     \t}\n     \treturn cacheItem;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMjI4MA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504522280", "bodyText": "I think if you handle locale before looking for the messages from cache, the logic here may be  simplifier.\nIn my opinion, the logic should be as below:\n\nHandle locale:\nLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\nIf matchedLocale is not empty, use matchedLocale to fetch messages from data source;\nif matchedLocale is empty, directly use fallback locale to fetch messages from data source;\nif above fetch failed, fallback;", "author": "huihuiw01", "createdAt": "2020-10-14T09:08:45Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -108,38 +106,48 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \t\t}\n     \t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t} else { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n+\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n+\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n+\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);", "originalCommit": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2NjgzNw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504966837", "bodyText": "I understand what you are saying. The problem with this is due to the legacy code where locale is part of the DTO. If the matched locale is not null, there are 2 possible scenarios:\na. The requested locale is a supported locale (exact match) -- lines 110-113\nHere, createCacheItem in line 111 fetches the matched locale and caches it. Take note that it uses the dto's locale to generate the cache key.\nb. The requested locale is not an exact match (e.g. fr-CA which is not supported matches fr which is supported) -- lines 117-118\nHere, createCacheItem must be done on the supported locale (fr), not the requested locale (fr-CA). If I directly call createCacheItem for this case, the cache key will have fr-CA for the same set of fr messages, causing duplicate sets of messages in the cache, which is not good. So, call ComponentService(matchedLocaleDTO).getMessages instead.\nThis is why these 2 scenarios are handled differently. We can refactor this in the future and extract locale out of the DTO, but I did not want to touch that legacy code for now.", "author": "jessiejuachon", "createdAt": "2020-10-14T20:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMjI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE0MDU1Nw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r509140557", "bodyText": "Can reseting dto's locale after locale matching resolve the problem you mentioned?\nI think when matchedLocale is not empty, all later logic(no matter find from cache or find from data source) should use matchedLocale, request locale is useless.", "author": "huihuiw01", "createdAt": "2020-10-21T09:45:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMjI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\nindex 303f9ee0..c6a718fd 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\n@@ -110,14 +109,14 @@ public class ComponentService {\n \t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n \t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n \t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t} else { // Requested locale is not supported\n \t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n \t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n \t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n \t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t}\n     \t}\n     \treturn cacheItem;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODUwNA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504528504", "bodyText": "Why use fallback locale instead of 'zh'?", "author": "huihuiw01", "createdAt": "2020-10-14T09:18:56Z", "path": "src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java", "diffHunk": "@@ -147,43 +142,15 @@ public static boolean isSameLocale(String locale1, String locale2) {\n     /*\n      * pick up the matched locale from a locale list\n      */\n-    public static Locale pickupLocaleFromList(List<Locale> locales,\n-            Locale preferredLocale) {\n-        Locale langLocale = null;\n-        preferredLocale = fmtToMappedLocale(preferredLocale);\n+    public static Locale pickupLocaleFromList(Set<Locale> locales,\n+                                              Locale preferredLocale) {\n+        Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n \n-        // Use the first locale from the browser's list of preferred languages\n-        // for the matching, so that it can keep the same way of getting locale\n-        // with other VMware products, like vSphere Web Client, etc.\n-        for (Locale configuredLocale : locales) {\n-            // Language is matched\n-            configuredLocale = fmtToMappedLocale(configuredLocale);\n-            if (configuredLocale.getLanguage().equals(\n-                    preferredLocale.getLanguage())) {\n-                String configuredScript = configuredLocale.getScript();\n-                String preferredScript = preferredLocale.getScript();\n-                // Country is matched\n-                if (((preferredScript.equalsIgnoreCase(\"\")) && (configuredScript\n-                        .equalsIgnoreCase(\"\")))\n-                        || ((!preferredScript.equalsIgnoreCase(\"\")) && (preferredScript\n-                                .equalsIgnoreCase(configuredScript)))) {\n-                    return configuredLocale;\n-                }\n-                langLocale = langLocale == null ? configuredLocale : langLocale;\n-            }\n-        }\n-\n-        // With Chinese locale which is not configured/supported in web.xml, it\n-        // will return 'en_US' as default to meet the usage custom of Chinese,\n-        // e.g. for 'zh-HK' from client(browser) which is not\n-        // configured/supported yet, it will return 'en_US';\n-        // Other locale, like 'de-DE' 'ja-JP' etc.,\n-        // it will return 'de' 'ja'(main/parent language).\n-        if (langLocale != null\n-                && (!langLocale.getLanguage().equalsIgnoreCase(\"zh\"))) {\n-            return new Locale(langLocale.getLanguage());\n+        // For any Chinese locale (zh-*) that is not supported, use the fallback locale even if \"zh\" is supported.", "originalCommit": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2MDA5OA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504960098", "bodyText": "It has been like that previously. I am guessing it was an old requirement.", "author": "jessiejuachon", "createdAt": "2020-10-14T20:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODUwNA=="}], "type": "inlineReview", "revised_code": {"commit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\nindex 44fe4c2f..141da973 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\n@@ -146,9 +146,12 @@ public class LocaleUtility {\n                                               Locale preferredLocale) {\n         Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n \n-        // For any Chinese locale (zh-*) that is not supported, use the fallback locale even if \"zh\" is supported.\n-        if (bestMatch != null && bestMatch.toLanguageTag().equals(\"zh\") && !preferredLocale.toLanguageTag().equals(\"zh\")) {\n-            return null;\n+        // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n+        if (preferredLocale.getLanguage().equals(\"zh\")) {\n+            Locale zhLocale = fmtToMappedLocale(preferredLocale);\n+            if (!locales.contains(zhLocale) && !zhLocale.toLanguageTag().equals(\"zh-Hans\") && !zhLocale.toLanguageTag().equals(\"zh-Hant\")) {\n+                return null;\n+            }\n         }\n         return bestMatch;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504551228", "bodyText": "We can unify this these 2 situations. If matchedLocale == null, then set locale to fallback locale. Get its translation afterwards.", "author": "Xiaochao8", "createdAt": "2020-10-14T09:55:07Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -108,38 +106,48 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \t\t}\n     \t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t} else { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n+\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n+\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n+\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n+\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);", "originalCommit": "dd03ac877e2f0b986ee8b3e8df69c2d025887875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MjA0MQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r504972041", "bodyText": "You have a similar comment as Huihui. Pasting my reply below:\nThe problem with this is due to the legacy code where locale is part of the DTO. If the matched locale is not null, there are 2 possible scenarios:\na. The requested locale is a supported locale (exact match) -- lines 110-113\nHere, createCacheItem in line 111 fetches the matched locale and caches it. Take note that it uses the dto's locale to generate the cache key.\nb. The requested locale is not an exact match (e.g. fr-CA which is not supported matches fr which is supported) -- lines 117-118\nHere, createCacheItem must be done on the supported locale (fr), not the requested locale (fr-CA). If I directly call createCacheItem for this case, the cache key will have fr-CA for the same set of fr messages, causing duplicate sets of messages in the cache, which is not good. So, call ComponentService(matchedLocaleDTO).getMessages instead.\nThis is why these 2 scenarios are handled differently. We can refactor this in the future and extract locale out of the DTO, but I did not want to touch that legacy code for now.", "author": "jessiejuachon", "createdAt": "2020-10-14T21:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIxODk3OQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r505218979", "bodyText": "I think that our comments are different. I'm saying 115~120.", "author": "Xiaochao8", "createdAt": "2020-10-15T06:49:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1OTcyNA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r505959724", "bodyText": "I do not understand then. Could you please provide a code suggestion?", "author": "jessiejuachon", "createdAt": "2020-10-16T01:19:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk3MzgyMg==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r505973822", "bodyText": "Please check this code suggestion for 115 - 120:\nProductService ps = new ProductService(dto);\nLocale localeToQuery = Locale.forLanguageTag(dto.getLocale());\nif (!ps.isSupportedLocale(localeToQuery)) {\nlocaleToQuery = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), localeToQuery);\nif (localeToQuery == null) {// Requested locale is not supported and does not match any supported locales\nif (!dto.getLocale().equals(ConstantsKeys.SOURCE) && fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {\nlocaleToQuery = fallbackLocalesIter.next();\n}\n} else {\nreturn new MessageCacheItem();\n}\n}\n\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), localeToQuery.toLanguageTag(), dto.getProductID(), dto.getVersion());\n\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n\t}", "author": "Xiaochao8", "createdAt": "2020-10-16T01:47:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjczNTIwOQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r506735209", "bodyText": "Thanks for the code suggestion. It will work, but I think what I currently have is cleaner and has less lines of code, don't you think? Basically, your if (!dto.getLocale().equals(ConstantsKeys.SOURCE) && fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) \nis a repeat of line 132 in getMessagesFallbackLocale.", "author": "jessiejuachon", "createdAt": "2020-10-16T21:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1MTIyOA=="}], "type": "inlineReview", "revised_code": {"commit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\nindex 303f9ee0..c6a718fd 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\n@@ -110,14 +109,14 @@ public class ComponentService {\n \t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n \t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n \t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t} else { // Requested locale is not supported\n \t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n \t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n \t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n \t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n-\t\t\t\t\tcacheItem = getMessagesFallbackLocale(fallbackLocalesIter);\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t}\n     \t}\n     \treturn cacheItem;\n"}}, {"oid": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "url": "https://github.com/vmware/singleton/commit/f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "message": "more test cases", "committedDate": "2020-10-14T21:44:54Z", "type": "commit"}, {"oid": "c2b1fd9470c31ddac319b39ec4b67a4605685c96", "url": "https://github.com/vmware/singleton/commit/c2b1fd9470c31ddac319b39ec4b67a4605685c96", "message": "fixing intermittently failing test", "committedDate": "2020-10-14T22:55:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzMDYxMg==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r505230612", "bodyText": "Is it necessary to judge dto locale is same as the fallback locale?", "author": "Xiaochao8", "createdAt": "2020-10-15T06:58:53Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -108,38 +105,48 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \t\t}\n     \t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t\t} else { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n+\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n+\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n+\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t}\n-\n-\t\t\t//Create and store cacheItem for the requested locale\n-\t\t\tcacheItem = createCacheItem(fallbackLocalesIter);\n     \t}\n     \treturn cacheItem;\n     }\n \n+    /**\n+     * Gets the messages in the next fallback locale by passing the next fallback locale DTO to a new instance of ComponentService\n+\t * and then invoking {@link #getMessages(Iterator)}.\n+\t * @param fallbackLocalesIter The fallback locale queue to use in case of failure. If null, no locale fallback will be applied.\n+     */\n+    private MessageCacheItem getFallbackLocaleMessages(Iterator<Locale> fallbackLocalesIter) {\n+\t\tif (!dto.getLocale().equals(ConstantsKeys.SOURCE) && fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {", "originalCommit": "c2b1fd9470c31ddac319b39ec4b67a4605685c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0Nzk3Mg==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r506747972", "bodyText": "It's not necessary, but it is an improvement. If we do not check for dto.getLocale == fallback and it happens, it will just try to fetch for the dto locale again and will fail again, and move on to the next item in the queue. Nonetheless, I have added the check for optimization.\nMoreover, I hsve removed the following restriction to allow falling back to SOURCE messages:\n!dto.getLocale().equals(ConstantsKeys.SOURCE)", "author": "jessiejuachon", "createdAt": "2020-10-16T22:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzMDYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "7d8f943d1676121428d1e243f58ee763ac4d01ae", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\nindex c6a718fd..ab285173 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\n@@ -128,9 +128,13 @@ public class ComponentService {\n \t * @param fallbackLocalesIter The fallback locale queue to use in case of failure. If null, no locale fallback will be applied.\n      */\n     private MessageCacheItem getFallbackLocaleMessages(Iterator<Locale> fallbackLocalesIter) {\n-\t\tif (!dto.getLocale().equals(ConstantsKeys.SOURCE) && fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {\n+\t\tif (fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {\n+\t\t\tLocale fallbackLocale = fallbackLocalesIter.next();\n+\t\t\tif (fallbackLocale.toLanguageTag().equals(dto.getLocale())) {\n+\t\t\t\treturn getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t\t}\n \t\t\t// Use MessageCacheItem of the next fallback locale.\n-\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), fallbackLocalesIter.next().toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), fallbackLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n \t\t\treturn new ComponentService(fallbackLocaleDTO).getMessages(fallbackLocalesIter);\n \t\t}\n \t\treturn new MessageCacheItem();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0Nzk4NQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r505247985", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!locales.contains(zhLocale) && !zhLocale.toLanguageTag().equals(\"zh-Hans\") && !zhLocale.toLanguageTag().equals(\"zh-Hant\")) {\n          \n          \n            \n                            return null;\n          \n          \n            \n                        }\n          \n          \n            \n                   if (preferredLocale.getLanguage().equals(\"zh\")) {\n          \n          \n            \n                        Locale zhLocale = fmtToMappedLocale(preferredLocale);\n          \n          \n            \n                        if (!locales.contains(zhLocale)) {\n          \n          \n            \n                            String langTag = zhLocale.toLanguageTag();\n          \n          \n            \n                            if (langTag.equals(\"zh-Hans\") || langTag.equals(\"zh-Hant\")) {\n          \n          \n            \n                                return null;\n          \n          \n            \n                            }\n          \n          \n            \n                        }\n          \n          \n            \n                    }", "author": "Xiaochao8", "createdAt": "2020-10-15T07:14:28Z", "path": "src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java", "diffHunk": "@@ -146,9 +146,12 @@ public static Locale pickupLocaleFromList(Set<Locale> locales,\n                                               Locale preferredLocale) {\n         Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n \n-        // For any Chinese locale (zh-*) that is not supported, use the fallback locale even if \"zh\" is supported.\n-        if (bestMatch != null && bestMatch.toLanguageTag().equals(\"zh\") && !preferredLocale.toLanguageTag().equals(\"zh\")) {\n-            return null;\n+        // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n+        if (preferredLocale.getLanguage().equals(\"zh\")) {\n+            Locale zhLocale = fmtToMappedLocale(preferredLocale);\n+            if (!locales.contains(zhLocale) && !zhLocale.toLanguageTag().equals(\"zh-Hans\") && !zhLocale.toLanguageTag().equals(\"zh-Hant\")) {\n+                return null;\n+            }", "originalCommit": "f8ce5c1dc63a10049ca5f4e144ab8db44853000c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0MDk2OA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r506740968", "bodyText": "I understand you want it to be more readable. There is incorrect logic in your suggestion though. It should be if (!langTag.equals(\"zh-Hans\") && !langTag.equals(\"zh-Hant\")) in line 160. Please review the new code.", "author": "jessiejuachon", "createdAt": "2020-10-16T22:05:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0Nzk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6bbdfff4b97baf640c929bbff8c695780f1fff94", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\nindex 141da973..a7502678 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\n@@ -149,8 +149,10 @@ public class LocaleUtility {\n         // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n         if (preferredLocale.getLanguage().equals(\"zh\")) {\n             Locale zhLocale = fmtToMappedLocale(preferredLocale);\n-            if (!locales.contains(zhLocale) && !zhLocale.toLanguageTag().equals(\"zh-Hans\") && !zhLocale.toLanguageTag().equals(\"zh-Hant\")) {\n-                return null;\n+            if (!locales.contains(zhLocale)) {\n+                String langTag = zhLocale.toLanguageTag();\n+                if (langTag.equals(\"zh-Hans\") || langTag.equals(\"zh-Hant\"))\n+                    return null;\n             }\n         }\n         return bestMatch;\n"}}, {"oid": "6bbdfff4b97baf640c929bbff8c695780f1fff94", "url": "https://github.com/vmware/singleton/commit/6bbdfff4b97baf640c929bbff8c695780f1fff94", "message": "code clean up for readability", "committedDate": "2020-10-16T21:53:24Z", "type": "commit"}, {"oid": "d8e70b79407ae92f2a5dc0d559531ed74e7c20b5", "url": "https://github.com/vmware/singleton/commit/d8e70b79407ae92f2a5dc0d559531ed74e7c20b5", "message": "fixing incorrect if statement", "committedDate": "2020-10-16T22:06:31Z", "type": "commit"}, {"oid": "7d8f943d1676121428d1e243f58ee763ac4d01ae", "url": "https://github.com/vmware/singleton/commit/7d8f943d1676121428d1e243f58ee763ac4d01ae", "message": "code optimization", "committedDate": "2020-10-16T22:30:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5Nzc2OA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r508197768", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n          \n          \n            \n            \t\tLocale localeObject = fmtToMappedLocale(preferredLocale);\n          \n          \n            \n            \t\tLocale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(localeObject.toLanguageTag())),\n          \n          \n            \n            \t\t\t\tlocales);", "author": "Xiaochao8", "createdAt": "2020-10-20T04:10:37Z", "path": "src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java", "diffHunk": "@@ -147,43 +142,21 @@ public static boolean isSameLocale(String locale1, String locale2) {\n     /*\n      * pick up the matched locale from a locale list\n      */\n-    public static Locale pickupLocaleFromList(List<Locale> locales,\n-            Locale preferredLocale) {\n-        Locale langLocale = null;\n-        preferredLocale = fmtToMappedLocale(preferredLocale);\n-\n-        // Use the first locale from the browser's list of preferred languages\n-        // for the matching, so that it can keep the same way of getting locale\n-        // with other VMware products, like vSphere Web Client, etc.\n-        for (Locale configuredLocale : locales) {\n-            // Language is matched\n-            configuredLocale = fmtToMappedLocale(configuredLocale);\n-            if (configuredLocale.getLanguage().equals(\n-                    preferredLocale.getLanguage())) {\n-                String configuredScript = configuredLocale.getScript();\n-                String preferredScript = preferredLocale.getScript();\n-                // Country is matched\n-                if (((preferredScript.equalsIgnoreCase(\"\")) && (configuredScript\n-                        .equalsIgnoreCase(\"\")))\n-                        || ((!preferredScript.equalsIgnoreCase(\"\")) && (preferredScript\n-                                .equalsIgnoreCase(configuredScript)))) {\n-                    return configuredLocale;\n-                }\n-                langLocale = langLocale == null ? configuredLocale : langLocale;\n+    public static Locale pickupLocaleFromList(Set<Locale> locales,\n+                                              Locale preferredLocale) {\n+        Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);", "originalCommit": "7d8f943d1676121428d1e243f58ee763ac4d01ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3bb30ab6c61e48b9ef13d39ef622fcdae5ff9f6", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\nindex 3238e293..3813bcfa 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\n@@ -144,7 +144,9 @@ public class LocaleUtility {\n      */\n     public static Locale pickupLocaleFromList(Set<Locale> locales,\n                                               Locale preferredLocale) {\n-        Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n+\t\tLocale localeObject = fmtToMappedLocale(preferredLocale);\n+\t\tLocale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(localeObject.toLanguageTag())),\n+\t\t\t\tlocales);\n \n         // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n         if (preferredLocale.getLanguage().equals(\"zh\")) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5Nzg3Mw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r508197873", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n          \n          \n            \n                    if (preferredLocale.getLanguage().equals(\"zh\")) {\n          \n          \n            \n                        Locale zhLocale = fmtToMappedLocale(preferredLocale);\n          \n          \n            \n                        if (!locales.contains(zhLocale)) {\n          \n          \n            \n                            String langTag = zhLocale.toLanguageTag();\n          \n          \n            \n                            if (!langTag.equals(\"zh-Hans\") && !langTag.equals(\"zh-Hant\"))\n          \n          \n            \n                                return null;\n          \n          \n            \n            \t\t// With Chinese locale which is not configured/supported in web.xml, it\n          \n          \n            \n            \t\t// will return 'en_US' as default to meet the usage custom of Chinese,\n          \n          \n            \n            \t\t// e.g. for 'zh-HK' from client(browser) which is not\n          \n          \n            \n            \t\t// configured/supported yet, it will return 'en_US';\n          \n          \n            \n            \t\t// Other locale, like 'de-DE' 'ja-JP' etc.,\n          \n          \n            \n            \t\t// it will return 'de' 'ja'(main/parent language).\n          \n          \n            \n            \t\tif (bestMatch != null && bestMatch.getLanguage().equals(\"zh\")) {\n          \n          \n            \n            \t\t\tif (!locales.contains(localeObject)) {\n          \n          \n            \n            \t\t\t\treturn null;\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t}", "author": "Xiaochao8", "createdAt": "2020-10-20T04:11:03Z", "path": "src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java", "diffHunk": "@@ -147,43 +142,21 @@ public static boolean isSameLocale(String locale1, String locale2) {\n     /*\n      * pick up the matched locale from a locale list\n      */\n-    public static Locale pickupLocaleFromList(List<Locale> locales,\n-            Locale preferredLocale) {\n-        Locale langLocale = null;\n-        preferredLocale = fmtToMappedLocale(preferredLocale);\n-\n-        // Use the first locale from the browser's list of preferred languages\n-        // for the matching, so that it can keep the same way of getting locale\n-        // with other VMware products, like vSphere Web Client, etc.\n-        for (Locale configuredLocale : locales) {\n-            // Language is matched\n-            configuredLocale = fmtToMappedLocale(configuredLocale);\n-            if (configuredLocale.getLanguage().equals(\n-                    preferredLocale.getLanguage())) {\n-                String configuredScript = configuredLocale.getScript();\n-                String preferredScript = preferredLocale.getScript();\n-                // Country is matched\n-                if (((preferredScript.equalsIgnoreCase(\"\")) && (configuredScript\n-                        .equalsIgnoreCase(\"\")))\n-                        || ((!preferredScript.equalsIgnoreCase(\"\")) && (preferredScript\n-                                .equalsIgnoreCase(configuredScript)))) {\n-                    return configuredLocale;\n-                }\n-                langLocale = langLocale == null ? configuredLocale : langLocale;\n+    public static Locale pickupLocaleFromList(Set<Locale> locales,\n+                                              Locale preferredLocale) {\n+        Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n+\n+        // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n+        if (preferredLocale.getLanguage().equals(\"zh\")) {\n+            Locale zhLocale = fmtToMappedLocale(preferredLocale);\n+            if (!locales.contains(zhLocale)) {\n+                String langTag = zhLocale.toLanguageTag();\n+                if (!langTag.equals(\"zh-Hans\") && !langTag.equals(\"zh-Hant\"))\n+                    return null;", "originalCommit": "7d8f943d1676121428d1e243f58ee763ac4d01ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODA3Ng==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r508698076", "bodyText": "@Xiaochao8 , this most recent suggested change fails for test LocaleTest.testPickupLocaleFromListZh.\nIsn't it supposed to return \"zh\" for any non-supported Chinese locale EXCEPT for zh-Hans/zh-Hant/zh-TW/zh-CN/zh-hans-CN/zh-Hant-TW?\nI am not familiar with custom usage of Chinese, and so I will rely on you. I will make the suggested change and also update the test . Please double-check the expected behavior for me.", "author": "jessiejuachon", "createdAt": "2020-10-20T17:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5Nzg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b3bb30ab6c61e48b9ef13d39ef622fcdae5ff9f6", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\nindex 3238e293..3813bcfa 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\n@@ -144,7 +144,9 @@ public class LocaleUtility {\n      */\n     public static Locale pickupLocaleFromList(Set<Locale> locales,\n                                               Locale preferredLocale) {\n-        Locale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(fmtToMappedLocale(preferredLocale).toLanguageTag())), locales);\n+\t\tLocale localeObject = fmtToMappedLocale(preferredLocale);\n+\t\tLocale bestMatch = Locale.lookup(Arrays.asList(new Locale.LanguageRange(localeObject.toLanguageTag())),\n+\t\t\t\tlocales);\n \n         // For any Chinese locale (zh-*) that is not supported (except for zh-Hans and zh-Hant), use the fallback locale even if \"zh\" is supported.\n         if (preferredLocale.getLanguage().equals(\"zh\")) {\n"}}, {"oid": "b3bb30ab6c61e48b9ef13d39ef622fcdae5ff9f6", "url": "https://github.com/vmware/singleton/commit/b3bb30ab6c61e48b9ef13d39ef622fcdae5ff9f6", "message": "Update src/main/java/com/vmware/vipclient/i18n/util/LocaleUtility.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-10-20T17:00:18Z", "type": "commit"}, {"oid": "bdbae094935ed9fafe558505758f7fdc123d1dab", "url": "https://github.com/vmware/singleton/commit/bdbae094935ed9fafe558505758f7fdc123d1dab", "message": "rolling back change", "committedDate": "2020-10-20T17:09:59Z", "type": "commit"}, {"oid": "03bf400e8df3e8e6abdfce6c8f70339c304f2b33", "url": "https://github.com/vmware/singleton/commit/03bf400e8df3e8e6abdfce6c8f70339c304f2b33", "message": "changing Chinese locale matching rule", "committedDate": "2020-10-20T19:17:49Z", "type": "commit"}, {"oid": "71404e3bde05d8dffcc864bcd83dbd450916b184", "url": "https://github.com/vmware/singleton/commit/71404e3bde05d8dffcc864bcd83dbd450916b184", "message": "Merge branch 'g11n-java-client' into g11n-java-client-754", "committedDate": "2020-10-21T00:10:42Z", "type": "commit"}, {"oid": "236ab56b01c52c13d6c03468233bbaf0dfc366bd", "url": "https://github.com/vmware/singleton/commit/236ab56b01c52c13d6c03468233bbaf0dfc366bd", "message": "correcting incorrect merge", "committedDate": "2020-10-21T00:14:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDE5Nw==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r509330197", "bodyText": "In this way when dto locale is 'source' and source messages not found, it will fallback to default locale.", "author": "huihuiw01", "createdAt": "2020-10-21T14:21:17Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -113,38 +110,52 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \t\t}\n     \t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t\t} else { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n+\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n \t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n+\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n+\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n \t\t\t}\n-\n-\t\t\t//Create and store cacheItem for the requested locale\n-\t\t\tcacheItem = createCacheItem(fallbackLocalesIter);\n     \t}\n     \treturn cacheItem;\n     }\n \n+    /**\n+     * Gets the messages in the next fallback locale by passing the next fallback locale DTO to a new instance of ComponentService\n+\t * and then invoking {@link #getMessages(Iterator)}.\n+\t * @param fallbackLocalesIter The fallback locale queue to use in case of failure. If null, no locale fallback will be applied.\n+     */\n+    private MessageCacheItem getFallbackLocaleMessages(Iterator<Locale> fallbackLocalesIter) {\n+\t\tif (fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {\n+\t\t\tLocale fallbackLocale = fallbackLocalesIter.next();\n+\t\t\tif (fallbackLocale.toLanguageTag().equals(dto.getLocale())) {\n+\t\t\t\treturn getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t\t}\n+\t\t\t// Use MessageCacheItem of the next fallback locale.\n+\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), fallbackLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\treturn new ComponentService(fallbackLocaleDTO).getMessages(fallbackLocalesIter);", "originalCommit": "236ab56b01c52c13d6c03468233bbaf0dfc366bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNTQ0NQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r509705445", "bodyText": "If dto locale is source, it means it has reached the end of the fallback queue. Hence, it won't enter the if in line 136 because  fallbackLocalesIter.hasNext() is false.", "author": "jessiejuachon", "createdAt": "2020-10-21T21:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3ODI4MA==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r510278280", "bodyText": "I mean when request locale is 'source', which make dto locale is 'source'", "author": "huihuiw01", "createdAt": "2020-10-22T15:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxOTQ3Mg==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r510319472", "bodyText": "Do you mean the preferred locale from the user is \"source\"? What use case do you have in mind where locale will be \"source\"? I suppose \"source\" will only be used as fallback.\nNonetheless, if user actually sends \"source\" as the preferred locale and source messages are not found, then yes, it should go though the usual locale fallback queue. What is your concern with this?", "author": "jessiejuachon", "createdAt": "2020-10-22T17:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU2MjYyOQ==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r510562629", "bodyText": "Discussed this offline. Huihui is referring to this issue which is not within the scope of this PR: #839", "author": "jessiejuachon", "createdAt": "2020-10-23T02:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7c2535c3f32cb79595de51f8fe02ddb5344a4ae8", "chunk": "diff --git a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\nindex 31e64e9f..22ce8ce2 100644\n--- a/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n+++ b/src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java\n\n@@ -100,32 +100,32 @@ public class ComponentService {\n \t * \t \t<li>The messages in a fallback locale</li>\n \t * </ul>\n \t */\n-    public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n-    \tCacheService cacheService = new CacheService(dto);\n-    \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n-    \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.isExpired()) {\n-    \t\t\t// Refresh the cacheItem in a separate thread\n-    \t\t\trefreshCacheItemTask(cacheItem);\n-    \t\t}\n-    \t} else { // Item is not in cache.\n+\tpublic MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n+\t\tthis.doLocaleMatching();\n+\n+\t\tCacheService cacheService = new CacheService(dto);\n+\t\tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n+\t\tif (cacheItem != null) { // Item is in cache\n+\t\t\tif (cacheItem.isExpired())\n+\t\t\t\trefreshCacheItemTask(cacheItem); // Refresh the cacheItem in a separate thread\n+\t\t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n \t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n \t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n \t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n \t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n \t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n-\t\t\t} else { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(ps.getSupportedLocales(), locale);\n-\t\t\t\tif (matchedLocale != null) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n-\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t} else  // Requested locale is not supported and does not match any supported locales\n-\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n-\t\t\t}\n-    \t}\n-    \treturn cacheItem;\n-    }\n+\t\t\t} else   // Requested locale is not supported and does not match any supported locales\n+\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t}\n+\t\treturn cacheItem;\n+\t}\n+\n+\tprivate void doLocaleMatching() {\n+\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new ProductService(dto).getSupportedLocales(), Locale.forLanguageTag(dto.getLocale()));\n+\t\tif (matchedLocale != null) // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\tdto.setLocale(matchedLocale.toLanguageTag());\n+\t}\n \n     /**\n      * Gets the messages in the next fallback locale by passing the next fallback locale DTO to a new instance of ComponentService\n"}}, {"oid": "7c2535c3f32cb79595de51f8fe02ddb5344a4ae8", "url": "https://github.com/vmware/singleton/commit/7c2535c3f32cb79595de51f8fe02ddb5344a4ae8", "message": "Do Locale matching first in Componentservice.getMessages", "committedDate": "2020-10-23T16:34:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNDU5Ng==", "url": "https://github.com/vmware/singleton/pull/823#discussion_r511704596", "bodyText": "Suggest code for this method, then doLocaleMatching can be removed:\n\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new ProductService(dto).getSupportedLocales(),\n\t\t\tLocale.forLanguageTag(dto.getLocale()));\n\tMessageCacheItem cacheItem = null;\n\tif (matchedLocale != null) {\n\t\tdto.setLocale(matchedLocale.toLanguageTag());\n\t\tcacheItem = new CacheService(dto).getCacheOfComponent();\n\t\tif (cacheItem != null) { // Item is in cache\n\t\t\tif (cacheItem.isExpired())\n\t\t\t\trefreshCacheItemTask(cacheItem); // Refresh the cacheItem in a separate thread\n\t\t} else { // Item is not in cache.\n\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n\t\t}\n\t}\n\t\n\tif (cacheItem == null || cacheItem.getCachedData().isEmpty()) // Failed to fetch messages for the requested locale\n\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n\n\treturn cacheItem;", "author": "Xiaochao8", "createdAt": "2020-10-26T03:37:04Z", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -103,48 +100,62 @@ public MessageCacheItem getMessages() {\n \t * \t \t<li>The messages in a fallback locale</li>\n \t * </ul>\n \t */\n-    public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n-    \tCacheService cacheService = new CacheService(dto);\n-    \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n-    \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.isExpired()) {\n-    \t\t\t// Refresh the cacheItem in a separate thread\n-    \t\t\trefreshCacheItemTask(cacheItem);\n-    \t\t}\n-    \t} else { // Item is not in cache.\n+\tpublic MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n+\t\tthis.doLocaleMatching();\n+\n+\t\tCacheService cacheService = new CacheService(dto);\n+\t\tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n+\t\tif (cacheItem != null) { // Item is in cache\n+\t\t\tif (cacheItem.isExpired())\n+\t\t\t\trefreshCacheItemTask(cacheItem); // Refresh the cacheItem in a separate thread\n+\t\t} else { // Item is not in cache.\n \t\t\tProductService ps = new ProductService(dto);\n-\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n-\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n-\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages();\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\tLocale locale = Locale.forLanguageTag(dto.getLocale());\n+\t\t\tif (ps.isSupportedLocale(locale) || VIPCfg.getInstance().isPseudo()) {\n+\t\t\t\tcacheItem = createCacheItem(); // Fetch for the requested locale from data store, create cacheItem and store in cache\n+\t\t\t\tif (cacheItem.getCachedData().isEmpty())  // Failed to fetch messages for the requested locale\n+\t\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t\t} else   // Requested locale is not supported and does not match any supported locales\n+\t\t\t\tcacheItem = getFallbackLocaleMessages(fallbackLocalesIter);\n+\t\t}\n+\t\treturn cacheItem;", "originalCommit": "7c2535c3f32cb79595de51f8fe02ddb5344a4ae8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "06b60bbeead5438944a301ac10507610654f5d71", "url": "https://github.com/vmware/singleton/commit/06b60bbeead5438944a301ac10507610654f5d71", "message": "code clean up", "committedDate": "2020-05-12T23:55:53Z", "type": "commit"}, {"oid": "51b4dfa4d673a96f003757fe2b2692576bdfd92c", "url": "https://github.com/vmware/singleton/commit/51b4dfa4d673a96f003757fe2b2692576bdfd92c", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-05-13T00:09:46Z", "type": "commit"}, {"oid": "778a7a1ef4cdc9251c8e1db2501e1fe8f9440223", "url": "https://github.com/vmware/singleton/commit/778a7a1ef4cdc9251c8e1db2501e1fe8f9440223", "message": "Commenting out a test", "committedDate": "2020-05-13T02:35:06Z", "type": "commit"}, {"oid": "077f19b3a3ecf74662b7df27a2062d376b64d9a7", "url": "https://github.com/vmware/singleton/commit/077f19b3a3ecf74662b7df27a2062d376b64d9a7", "message": "code clean up", "committedDate": "2020-05-13T02:49:13Z", "type": "commit"}, {"oid": "9424346a07fa645376b7711cdd936573804b3192", "url": "https://github.com/vmware/singleton/commit/9424346a07fa645376b7711cdd936573804b3192", "message": "code clean up", "committedDate": "2020-05-13T18:23:03Z", "type": "commit"}, {"oid": "c25a676dd876b503b1b7738ab22edf262e836458", "url": "https://github.com/vmware/singleton/commit/c25a676dd876b503b1b7738ab22edf262e836458", "message": "Error logging when fetch failed", "committedDate": "2020-05-13T18:57:59Z", "type": "commit"}, {"oid": "db641b9ea0816671a56600c1651632a5f62b7cef", "url": "https://github.com/vmware/singleton/commit/db641b9ea0816671a56600c1651632a5f62b7cef", "message": "bug fix", "committedDate": "2020-05-13T23:31:12Z", "type": "commit"}, {"oid": "5cd06d60a04a85e57a1fe4f5aeb9d8537d2e2ed7", "url": "https://github.com/vmware/singleton/commit/5cd06d60a04a85e57a1fe4f5aeb9d8537d2e2ed7", "message": "code clean up", "committedDate": "2020-05-14T18:53:40Z", "type": "commit"}, {"oid": "6915f11ed80e515e7d24777a8c1f21cb4eb02e24", "url": "https://github.com/vmware/singleton/commit/6915f11ed80e515e7d24777a8c1f21cb4eb02e24", "message": "Updating sample application", "committedDate": "2020-05-15T02:53:42Z", "type": "commit"}, {"oid": "a64be3f7aae480fcf13d943b8e703c4deb58ffac", "url": "https://github.com/vmware/singleton/commit/a64be3f7aae480fcf13d943b8e703c4deb58ffac", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-05-17T18:54:06Z", "type": "commit"}, {"oid": "71281946f39629abfa181ab13536b4510c087184", "url": "https://github.com/vmware/singleton/commit/71281946f39629abfa181ab13536b4510c087184", "message": "fixing failing smoke test", "committedDate": "2020-05-19T03:05:45Z", "type": "commit"}, {"oid": "c4a388c17543e5197481497cdbc38c92da291ae6", "url": "https://github.com/vmware/singleton/commit/c4a388c17543e5197481497cdbc38c92da291ae6", "message": "Merge branch 'g11n-java-client' of https://github.com/jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-05-19T03:06:24Z", "type": "commit"}, {"oid": "5ecea939edab6ca083db4fafaddd9b721632dad8", "url": "https://github.com/vmware/singleton/commit/5ecea939edab6ca083db4fafaddd9b721632dad8", "message": "code clean up", "committedDate": "2020-05-19T04:20:20Z", "type": "commit"}, {"oid": "4c5b0a12142b092519391c128f31f69d1fdc5c7c", "url": "https://github.com/vmware/singleton/commit/4c5b0a12142b092519391c128f31f69d1fdc5c7c", "message": "fixing code scan", "committedDate": "2020-05-19T05:05:43Z", "type": "commit"}, {"oid": "067d19d4bbd130bd36fd43d9c686fe8e1f22ef33", "url": "https://github.com/vmware/singleton/commit/067d19d4bbd130bd36fd43d9c686fe8e1f22ef33", "message": "Fixing code scan", "committedDate": "2020-05-19T05:31:41Z", "type": "commit"}, {"oid": "711ce808a4225af2d0e0330711b46442841c9af4", "url": "https://github.com/vmware/singleton/commit/711ce808a4225af2d0e0330711b46442841c9af4", "message": "Adding prodMode configuration", "committedDate": "2020-05-19T22:32:44Z", "type": "commit"}, {"oid": "b7dabdba91d395294a9c4ee497cde547b1c1b5a4", "url": "https://github.com/vmware/singleton/commit/b7dabdba91d395294a9c4ee497cde547b1c1b5a4", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-05-19T22:36:01Z", "type": "commit"}, {"oid": "d8543ecc66657e97b222be404632503193a37b91", "url": "https://github.com/vmware/singleton/commit/d8543ecc66657e97b222be404632503193a37b91", "message": "code clean up", "committedDate": "2020-05-20T23:27:19Z", "type": "commit"}, {"oid": "e8094f40d6ea7c7e196d310238080f228a050e36", "url": "https://github.com/vmware/singleton/commit/e8094f40d6ea7c7e196d310238080f228a050e36", "message": "Setting default prodMode to true", "committedDate": "2020-05-21T04:26:40Z", "type": "commit"}, {"oid": "9a5ef77f77349a48b15851181fc41146b2128878", "url": "https://github.com/vmware/singleton/commit/9a5ef77f77349a48b15851181fc41146b2128878", "message": "Removing prodMode configuration and logic. Throwing exception if source key not found. Returning default locale message if locale not supported.", "committedDate": "2020-06-17T01:14:24Z", "type": "commit"}, {"oid": "5011c382379eef35d44c9c6c7f2b2ac9be18f10c", "url": "https://github.com/vmware/singleton/commit/5011c382379eef35d44c9c6c7f2b2ac9be18f10c", "message": "Updating javadoc", "committedDate": "2020-06-17T02:45:16Z", "type": "commit"}, {"oid": "33432b1673cbc2956cd91f2e5a9186e1d0c8bc58", "url": "https://github.com/vmware/singleton/commit/33432b1673cbc2956cd91f2e5a9186e1d0c8bc58", "message": "Fixing bug: Fallback shall apply to both TranslationMessage.getMessage and TranslationMessage.getMessages", "committedDate": "2020-06-17T06:38:14Z", "type": "commit"}, {"oid": "c9d3cae952a2a5d2957b6c9b008dc4dd0ea53ba4", "url": "https://github.com/vmware/singleton/commit/c9d3cae952a2a5d2957b6c9b008dc4dd0ea53ba4", "message": "Adding test for Translateion.getMessages, locale not supported", "committedDate": "2020-06-17T06:51:06Z", "type": "commit"}, {"oid": "adb40eca02003a216df29187d4688206dfed5268", "url": "https://github.com/vmware/singleton/commit/adb40eca02003a216df29187d4688206dfed5268", "message": "code comments", "committedDate": "2020-06-17T07:02:50Z", "type": "commit"}, {"oid": "7ab5c59fb1c97e8b2a826f669b4ca096f34632ca", "url": "https://github.com/vmware/singleton/commit/7ab5c59fb1c97e8b2a826f669b4ca096f34632ca", "message": "code clean up", "committedDate": "2020-06-19T08:28:28Z", "type": "commit"}, {"oid": "3c100893aa6e53535cf703ecfd6bef8f03f12009", "url": "https://github.com/vmware/singleton/commit/3c100893aa6e53535cf703ecfd6bef8f03f12009", "message": "Fix issue: https://github.com/vmware/singleton/issues/622", "committedDate": "2020-06-19T09:48:51Z", "type": "commit"}, {"oid": "76105b7fc941321e7522e429b330b02aab6fb4f9", "url": "https://github.com/vmware/singleton/commit/76105b7fc941321e7522e429b330b02aab6fb4f9", "message": "code clean up", "committedDate": "2020-06-29T20:05:15Z", "type": "commit"}, {"oid": "49c564894f62214104a7d62aa6fe65a33f6c450e", "url": "https://github.com/vmware/singleton/commit/49c564894f62214104a7d62aa6fe65a33f6c450e", "message": "code clean up", "committedDate": "2020-06-29T20:20:06Z", "type": "commit"}, {"oid": "d543e99fa6589c8dff25446f23b381e14bdc293e", "url": "https://github.com/vmware/singleton/commit/d543e99fa6589c8dff25446f23b381e14bdc293e", "message": "code clean up", "committedDate": "2020-06-29T20:26:41Z", "type": "commit"}, {"oid": "3ecf958b199a67032fcc42cec63f5cff8813732f", "url": "https://github.com/vmware/singleton/commit/3ecf958b199a67032fcc42cec63f5cff8813732f", "message": "code clean up", "committedDate": "2020-06-29T20:28:09Z", "type": "commit"}, {"oid": "e6a07a1ce6589b8768f30097bee0c90761cfffc2", "url": "https://github.com/vmware/singleton/commit/e6a07a1ce6589b8768f30097bee0c90761cfffc2", "message": "code clean up", "committedDate": "2020-06-29T20:30:38Z", "type": "commit"}, {"oid": "89ff0889154a93f9069124033acc18e5f1179e48", "url": "https://github.com/vmware/singleton/commit/89ff0889154a93f9069124033acc18e5f1179e48", "message": "code clean up", "committedDate": "2020-06-29T20:31:46Z", "type": "commit"}, {"oid": "f1356abf4b930f054da32a7722f9e4d0d3ff1cb1", "url": "https://github.com/vmware/singleton/commit/f1356abf4b930f054da32a7722f9e4d0d3ff1cb1", "message": "code clean up", "committedDate": "2020-06-29T20:32:47Z", "type": "commit"}, {"oid": "c63bc2d3318e40775f0d10e888226f73a8055180", "url": "https://github.com/vmware/singleton/commit/c63bc2d3318e40775f0d10e888226f73a8055180", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-07-15T23:19:28Z", "type": "commit"}, {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2", "url": "https://github.com/vmware/singleton/commit/beab1483a10b248c243fe2c3c6dc63107d8204f2", "message": "Fix for https://github.com/vmware/singleton/issues/661", "committedDate": "2020-07-15T23:26:39Z", "type": "commit"}, {"oid": "2cd77135f8bf23ee5c002cb61b62c5233f7e8700", "url": "https://github.com/vmware/singleton/commit/2cd77135f8bf23ee5c002cb61b62c5233f7e8700", "message": "adding license header", "committedDate": "2020-07-16T16:53:06Z", "type": "commit"}, {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a", "url": "https://github.com/vmware/singleton/commit/e13b694a1a12048760e0a8dd3980ddb585c71a9a", "message": "changes after code review", "committedDate": "2020-07-16T22:43:40Z", "type": "commit"}, {"oid": "f1f70b37b1a34a89d9550dd1fc270d2c63d9ad79", "url": "https://github.com/vmware/singleton/commit/f1f70b37b1a34a89d9550dd1fc270d2c63d9ad79", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalComponentOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-07-20T16:49:34Z", "type": "commit"}, {"oid": "fe535dc2d54452de5ff4b9278eee82c517d296eb", "url": "https://github.com/vmware/singleton/commit/fe535dc2d54452de5ff4b9278eee82c517d296eb", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-07-20T16:57:53Z", "type": "commit"}, {"oid": "0d22b9ff0cee55c40c0e264da3e8d57b959aedf3", "url": "https://github.com/vmware/singleton/commit/0d22b9ff0cee55c40c0e264da3e8d57b959aedf3", "message": "changes after code review", "committedDate": "2020-07-20T17:04:33Z", "type": "commit"}, {"oid": "48707824a91ca35fd409f77bc866da11257100dc", "url": "https://github.com/vmware/singleton/commit/48707824a91ca35fd409f77bc866da11257100dc", "message": "changes after code review", "committedDate": "2020-07-20T20:26:01Z", "type": "commit"}, {"oid": "f451436e3ba3b202fff3c53eab23f9bb82b57eeb", "url": "https://github.com/vmware/singleton/commit/f451436e3ba3b202fff3c53eab23f9bb82b57eeb", "message": "fix for issues: 664, 662, 686", "committedDate": "2020-07-22T22:39:34Z", "type": "commit"}, {"oid": "89d7b0d9e8e8f90037bf46d09ef705ad7cb9389c", "url": "https://github.com/vmware/singleton/commit/89d7b0d9e8e8f90037bf46d09ef705ad7cb9389c", "message": "code clean up", "committedDate": "2020-07-23T21:22:32Z", "type": "commit"}, {"oid": "ec6e6932a4b8770af6030f604dcc32f2b1a619c3", "url": "https://github.com/vmware/singleton/commit/ec6e6932a4b8770af6030f604dcc32f2b1a619c3", "message": "code clean up", "committedDate": "2020-07-24T01:12:24Z", "type": "commit"}, {"oid": "65f1d08c41daa07b08508b98274d86b49f3dc766", "url": "https://github.com/vmware/singleton/commit/65f1d08c41daa07b08508b98274d86b49f3dc766", "message": "Adding LocaleDTO", "committedDate": "2020-07-24T01:16:46Z", "type": "commit"}, {"oid": "60fb3b3e00b77c5f4147709e93fa798f7c0f8961", "url": "https://github.com/vmware/singleton/commit/60fb3b3e00b77c5f4147709e93fa798f7c0f8961", "message": "code clean up", "committedDate": "2020-07-24T19:51:46Z", "type": "commit"}, {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec", "url": "https://github.com/vmware/singleton/commit/a698f202047d29cd793d87cd5718b4cb691ed2ec", "message": "code clean up", "committedDate": "2020-07-24T19:55:27Z", "type": "commit"}, {"oid": "eede3b59f72dcf1733a243545f9b3ed189f0911e", "url": "https://github.com/vmware/singleton/commit/eede3b59f72dcf1733a243545f9b3ed189f0911e", "message": "changes after code review", "committedDate": "2020-07-31T02:33:48Z", "type": "commit"}, {"oid": "2dbfc727cd22a8dc3285e92d5de013b9e6949e6f", "url": "https://github.com/vmware/singleton/commit/2dbfc727cd22a8dc3285e92d5de013b9e6949e6f", "message": "Bug fix https://github.com/vmware/singleton/issues/604, https://github.com/vmware/singleton/issues/664, https://github.com/vmware/singleton/issues/662", "committedDate": "2020-08-03T21:47:34Z", "type": "commit"}, {"oid": "e63ab9471832fc0fdc29f948658ebbc29d716fea", "url": "https://github.com/vmware/singleton/commit/e63ab9471832fc0fdc29f948658ebbc29d716fea", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-08-03T21:56:48Z", "type": "commit"}, {"oid": "ae1dccd0a50c6e6e04b88e721346c03c8c6854d2", "url": "https://github.com/vmware/singleton/commit/ae1dccd0a50c6e6e04b88e721346c03c8c6854d2", "message": "code clean up", "committedDate": "2020-08-03T22:02:39Z", "type": "commit"}, {"oid": "6fbaab46f23d88a6aa0aea77ff9c5584cfa22a84", "url": "https://github.com/vmware/singleton/commit/6fbaab46f23d88a6aa0aea77ff9c5584cfa22a84", "message": "Mapping to the fallback locale's cache", "committedDate": "2020-08-05T01:55:27Z", "type": "commit"}, {"oid": "ff99a372495ad5f7c71e1daf39085f0b23389e0f", "url": "https://github.com/vmware/singleton/commit/ff99a372495ad5f7c71e1daf39085f0b23389e0f", "message": "code clean up", "committedDate": "2020-08-05T02:23:28Z", "type": "commit"}, {"oid": "271ee08a424106a9cc38e874fe07c14535bd1d96", "url": "https://github.com/vmware/singleton/commit/271ee08a424106a9cc38e874fe07c14535bd1d96", "message": "changes after code review", "committedDate": "2020-08-07T16:58:05Z", "type": "commit"}, {"oid": "230e21c5857baa6e9c82d7e935108a9376673c0d", "url": "https://github.com/vmware/singleton/commit/230e21c5857baa6e9c82d7e935108a9376673c0d", "message": "code clean up", "committedDate": "2020-08-12T00:31:47Z", "type": "commit"}, {"oid": "55764a7c6a54cc60d0290482df7cb38824754e71", "url": "https://github.com/vmware/singleton/commit/55764a7c6a54cc60d0290482df7cb38824754e71", "message": "code clean up", "committedDate": "2020-08-12T21:05:25Z", "type": "commit"}, {"oid": "e9214cb0589f8ff416af75882ed86dfb3b627c07", "url": "https://github.com/vmware/singleton/commit/e9214cb0589f8ff416af75882ed86dfb3b627c07", "message": "code clean up", "committedDate": "2020-08-12T21:47:49Z", "type": "commit"}, {"oid": "beaa5ef4ad2c3303215dd7640d10a28591778f91", "url": "https://github.com/vmware/singleton/commit/beaa5ef4ad2c3303215dd7640d10a28591778f91", "message": "code clean up", "committedDate": "2020-08-12T22:01:25Z", "type": "commit"}, {"oid": "673b8fd1b44f9bc38fa3f4b366d702230dc3e1c7", "url": "https://github.com/vmware/singleton/commit/673b8fd1b44f9bc38fa3f4b366d702230dc3e1c7", "message": "code clean up", "committedDate": "2020-08-12T22:10:39Z", "type": "commit"}, {"oid": "e8bb5b71dae1e2192497866ab2b083631a68ed6a", "url": "https://github.com/vmware/singleton/commit/e8bb5b71dae1e2192497866ab2b083631a68ed6a", "message": "Fixing bug on reading offline bundles in jar file.", "committedDate": "2020-08-19T20:11:36Z", "type": "commit"}, {"oid": "fe82e31b34db454cce0d5ecdb1b2d903bd021b6a", "url": "https://github.com/vmware/singleton/commit/fe82e31b34db454cce0d5ecdb1b2d903bd021b6a", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-08-19T22:17:48Z", "type": "commit"}, {"oid": "57aeb9b1403613865911e1adea5789dad1b0d338", "url": "https://github.com/vmware/singleton/commit/57aeb9b1403613865911e1adea5789dad1b0d338", "message": "sample shared library", "committedDate": "2020-08-21T14:23:49Z", "type": "commit"}, {"oid": "a7f6d3689006ec5b38c9a1c09154a0e5e1f41c11", "url": "https://github.com/vmware/singleton/commit/a7f6d3689006ec5b38c9a1c09154a0e5e1f41c11", "message": "sample application with shared library", "committedDate": "2020-08-21T14:36:31Z", "type": "commit"}, {"oid": "423090ce6f15df0d4c267de790f7a81d63185aae", "url": "https://github.com/vmware/singleton/commit/423090ce6f15df0d4c267de790f7a81d63185aae", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-08-21T14:41:52Z", "type": "commit"}, {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e", "url": "https://github.com/vmware/singleton/commit/4723dbf16f17bbbb9abdc60e16077f0f1280663e", "message": "Adding license header", "committedDate": "2020-08-21T14:54:23Z", "type": "commit"}, {"oid": "203dbb8fda40b4b141cf669ca02745143e647ac7", "url": "https://github.com/vmware/singleton/commit/203dbb8fda40b4b141cf669ca02745143e647ac7", "message": "Fix for https://github.com/vmware/singleton/issues/746 MsgOriginsQueue cannot be cleared once initializing VIPCfg", "committedDate": "2020-08-31T21:41:35Z", "type": "commit"}, {"oid": "0a755b17f475591387739be8fa639b5eb350c29d", "url": "https://github.com/vmware/singleton/commit/0a755b17f475591387739be8fa639b5eb350c29d", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-08-31T21:44:30Z", "type": "commit"}, {"oid": "ed6032758e7fd452610f3333de6df7c15ba18e6b", "url": "https://github.com/vmware/singleton/commit/ed6032758e7fd452610f3333de6df7c15ba18e6b", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-09-01T20:40:01Z", "type": "commit"}, {"oid": "b76346c41a944787e2b314b46c95c6900467676e", "url": "https://github.com/vmware/singleton/commit/b76346c41a944787e2b314b46c95c6900467676e", "message": "Fix for bug 781 - L3's CacheService.getSupportedLocalesFromCache is incorrectly using L2's data.", "committedDate": "2020-09-14T19:33:56Z", "type": "commit"}, {"oid": "a6aa09e4cdbcaef61b32385310acb75db46f8618", "url": "https://github.com/vmware/singleton/commit/a6aa09e4cdbcaef61b32385310acb75db46f8618", "message": "code clean up", "committedDate": "2020-09-15T02:22:14Z", "type": "commit"}, {"oid": "550de8c10adc68e50124a5be911f6cc15e5434fd", "url": "https://github.com/vmware/singleton/commit/550de8c10adc68e50124a5be911f6cc15e5434fd", "message": "code clean up", "committedDate": "2020-09-15T15:27:58Z", "type": "commit"}, {"oid": "1599f5c616b65f1592e7d4590cfbe5380b1c1d09", "url": "https://github.com/vmware/singleton/commit/1599f5c616b65f1592e7d4590cfbe5380b1c1d09", "message": "Fix for issue 781: CacheService.getCacheOfComponent cannot get \"matchedLocale\" properly if L2 supported locale list cache is not yet populated.", "committedDate": "2020-09-17T01:09:38Z", "type": "commit"}, {"oid": "8f0a9ddb949210dfb1b1bb4cdae68b476f2ec144", "url": "https://github.com/vmware/singleton/commit/8f0a9ddb949210dfb1b1bb4cdae68b476f2ec144", "message": "adding test", "committedDate": "2020-09-17T02:03:54Z", "type": "commit"}, {"oid": "24b8e3a075254feae7a9c35d6cbe406b3a14780e", "url": "https://github.com/vmware/singleton/commit/24b8e3a075254feae7a9c35d6cbe406b3a14780e", "message": "code clean up", "committedDate": "2020-09-17T03:55:27Z", "type": "commit"}, {"oid": "22b2159f01fc3311cb18b4ec93eb50e6b5545b7c", "url": "https://github.com/vmware/singleton/commit/22b2159f01fc3311cb18b4ec93eb50e6b5545b7c", "message": "code clean up", "committedDate": "2020-09-17T04:25:08Z", "type": "commit"}, {"oid": "4247c994d7edc94bab9f178f714ee779e9633ec8", "url": "https://github.com/vmware/singleton/commit/4247c994d7edc94bab9f178f714ee779e9633ec8", "message": "code clean up", "committedDate": "2020-09-17T21:18:16Z", "type": "commit"}, {"oid": "88a0a4c9252680a248be21158e361b1a6652c569", "url": "https://github.com/vmware/singleton/commit/88a0a4c9252680a248be21158e361b1a6652c569", "message": "code clean up", "committedDate": "2020-09-17T21:54:02Z", "type": "commit"}, {"oid": "3d82802c83348c7bad66f6b4c58521fa69a2e43d", "url": "https://github.com/vmware/singleton/commit/3d82802c83348c7bad66f6b4c58521fa69a2e43d", "message": "code clean up", "committedDate": "2020-09-17T22:01:09Z", "type": "commit"}, {"oid": "444b0bf7d50cd00a2b56f44ef947759fbb451efb", "url": "https://github.com/vmware/singleton/commit/444b0bf7d50cd00a2b56f44ef947759fbb451efb", "message": "code clean up", "committedDate": "2020-09-17T22:25:09Z", "type": "commit"}, {"oid": "d975d9796b68690d669d61685bec6e646bf610df", "url": "https://github.com/vmware/singleton/commit/d975d9796b68690d669d61685bec6e646bf610df", "message": "adding test", "committedDate": "2020-09-18T01:37:58Z", "type": "commit"}, {"oid": "d7a9a44184972db0266d45725a736db45ad0b94b", "url": "https://github.com/vmware/singleton/commit/d7a9a44184972db0266d45725a736db45ad0b94b", "message": "fixing test", "committedDate": "2020-09-18T01:52:45Z", "type": "commit"}, {"oid": "534137ac37d9d112ea0b90faf32f18b33a0843b5", "url": "https://github.com/vmware/singleton/commit/534137ac37d9d112ea0b90faf32f18b33a0843b5", "message": "fixing test", "committedDate": "2020-09-18T02:01:54Z", "type": "commit"}, {"oid": "7e540e9ad43cc82954d97a6516726f682172b11f", "url": "https://github.com/vmware/singleton/commit/7e540e9ad43cc82954d97a6516726f682172b11f", "message": "fixing test", "committedDate": "2020-09-18T02:07:33Z", "type": "commit"}, {"oid": "8899bfe6698c88d86bca1973bab3ce9dbbc4a2e4", "url": "https://github.com/vmware/singleton/commit/8899bfe6698c88d86bca1973bab3ce9dbbc4a2e4", "message": "fixing test", "committedDate": "2020-09-18T02:24:13Z", "type": "commit"}, {"oid": "5ce24535976e852325ecc330570b3fac50d81080", "url": "https://github.com/vmware/singleton/commit/5ce24535976e852325ecc330570b3fac50d81080", "message": "code clean up", "committedDate": "2020-09-18T02:27:12Z", "type": "commit"}, {"oid": "c5e9620db2a0af01c4226169b07beec90abee0b8", "url": "https://github.com/vmware/singleton/commit/c5e9620db2a0af01c4226169b07beec90abee0b8", "message": "code clean up", "committedDate": "2020-09-18T02:33:23Z", "type": "commit"}, {"oid": "d2905e394b44b4dbca0b1f649553d8c18e0ac5b3", "url": "https://github.com/vmware/singleton/commit/d2905e394b44b4dbca0b1f649553d8c18e0ac5b3", "message": "code cleanup", "committedDate": "2020-09-18T19:13:45Z", "type": "commit"}, {"oid": "8b1e4e942eb38181e3a570181910b80d3d2467a3", "url": "https://github.com/vmware/singleton/commit/8b1e4e942eb38181e3a570181910b80d3d2467a3", "message": "code clean up", "committedDate": "2020-09-18T22:32:58Z", "type": "commit"}, {"oid": "303957ed1b264b5fdaa6b2b55f89ad5225565f14", "url": "https://github.com/vmware/singleton/commit/303957ed1b264b5fdaa6b2b55f89ad5225565f14", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/service/CacheService.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-09-18T22:51:17Z", "type": "commit"}, {"oid": "f238d95f5266b54feb7e585cad2138a8b3992be0", "url": "https://github.com/vmware/singleton/commit/f238d95f5266b54feb7e585cad2138a8b3992be0", "message": "adding comments to code", "committedDate": "2020-09-19T00:46:09Z", "type": "commit"}, {"oid": "d5dffd6d34f587752c26f625e22ecccb58bd4d06", "url": "https://github.com/vmware/singleton/commit/d5dffd6d34f587752c26f625e22ecccb58bd4d06", "message": "clean up code", "committedDate": "2020-09-21T15:58:49Z", "type": "commit"}, {"oid": "f09633098597875043343c72416e9f04f7984917", "url": "https://github.com/vmware/singleton/commit/f09633098597875043343c72416e9f04f7984917", "message": "Merge branch 'g11n-java-client-781' of github.com:jessiejuachon/singleton into g11n-java-client-781", "committedDate": "2020-09-21T16:00:23Z", "type": "commit"}, {"oid": "ef3c67f8a5295867ec53e93a4f755646b56469ed", "url": "https://github.com/vmware/singleton/commit/ef3c67f8a5295867ec53e93a4f755646b56469ed", "message": "code clean up", "committedDate": "2020-09-22T07:31:00Z", "type": "commit"}, {"oid": "0c6f313329c70155c876dd750365b3ece9df9147", "url": "https://github.com/vmware/singleton/commit/0c6f313329c70155c876dd750365b3ece9df9147", "message": "code clean up", "committedDate": "2020-09-22T09:03:34Z", "type": "commit"}, {"oid": "cfdc2896f67d00261805325d960179c9dc0de4a4", "url": "https://github.com/vmware/singleton/commit/cfdc2896f67d00261805325d960179c9dc0de4a4", "message": "Adding list of supported locales used by L3 in cache", "committedDate": "2020-09-23T16:42:14Z", "type": "commit"}, {"oid": "67d6c89ffe78d1ed32361f660677e35429842b22", "url": "https://github.com/vmware/singleton/commit/67d6c89ffe78d1ed32361f660677e35429842b22", "message": "Merge branch 'g11n-java-client' of github.com:vmware/singleton into g11n-java-client", "committedDate": "2020-09-23T16:53:47Z", "type": "commit"}, {"oid": "23d7ec816cc510afbe7d7926efa2829eeffcd0a6", "url": "https://github.com/vmware/singleton/commit/23d7ec816cc510afbe7d7926efa2829eeffcd0a6", "message": "Merge branch 'g11n-java-client' of github.com:jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-09-23T16:57:57Z", "type": "commit"}, {"oid": "7d51498936bef18baf95fa723543882dafaa6bf2", "url": "https://github.com/vmware/singleton/commit/7d51498936bef18baf95fa723543882dafaa6bf2", "message": "Removing logic of adding a cacheItem with an empty dataMap to cache", "committedDate": "2020-09-25T16:38:48Z", "type": "commit"}, {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405", "url": "https://github.com/vmware/singleton/commit/943bb140cea5cebe4012aa7c2e7ec47e2d938405", "message": "Merge branch 'g11n-java-client' of github.com:jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-09-25T16:59:46Z", "type": "commit"}, {"oid": "3f488e087d2a5eead4a958ee14842a33e1279464", "url": "https://github.com/vmware/singleton/commit/3f488e087d2a5eead4a958ee14842a33e1279464", "message": "Merge branch 'g11n-java-client' of github.com:jessiejuachon/singleton into g11n-java-client-754", "committedDate": "2020-09-25T22:23:54Z", "type": "commit"}, {"oid": "f4c12147f958c5014b8e47959cf216a9db1d380d", "url": "https://github.com/vmware/singleton/commit/f4c12147f958c5014b8e47959cf216a9db1d380d", "message": "Loading configuration from the JSON configuration file", "committedDate": "2020-03-11T00:00:20Z", "type": "commit"}, {"oid": "1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "url": "https://github.com/vmware/singleton/commit/1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "message": "Removing code that is not yet ready to be used from the sample application", "committedDate": "2020-03-11T00:54:17Z", "type": "commit"}, {"oid": "5e72b73b497563607e5031d5afa322caffd03fca", "url": "https://github.com/vmware/singleton/commit/5e72b73b497563607e5031d5afa322caffd03fca", "message": "fixing failing code scan\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68NFL24bPpi-pS5s&open=AXDG68NFL24bPpi-pS5s\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68IGL24bPpi-pS2r&open=AXDG68IGL24bPpi-pS2r\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-03-11T22:01:24Z", "type": "commit"}, {"oid": "73d85ca7fca1290a93558fd937afd18dc27e92d6", "url": "https://github.com/vmware/singleton/commit/73d85ca7fca1290a93558fd937afd18dc27e92d6", "message": "Adding a cache properties map to hold cache details such as etag and cache control", "committedDate": "2020-03-12T07:58:55Z", "type": "commit"}, {"oid": "2a381070ef1e057fda0b08ca5d65323482273a86", "url": "https://github.com/vmware/singleton/commit/2a381070ef1e057fda0b08ca5d65323482273a86", "message": "Removing white space\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-03-12T08:09:09Z", "type": "commit"}, {"oid": "c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "url": "https://github.com/vmware/singleton/commit/c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "message": "Fixing failing unit test", "committedDate": "2020-03-12T09:09:08Z", "type": "commit"}, {"oid": "056891a79856058bf9af28c44110f588e61eeefc", "url": "https://github.com/vmware/singleton/commit/056891a79856058bf9af28c44110f588e61eeefc", "message": "Parse headers, response code, response message from an HTTP response and return them upstream.", "committedDate": "2020-03-12T22:59:17Z", "type": "commit"}, {"oid": "a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "url": "https://github.com/vmware/singleton/commit/a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "message": "Storing response headers in Map of cache properties", "committedDate": "2020-03-17T19:30:18Z", "type": "commit"}, {"oid": "17978bd621bc7ee7de27205534568fee986b1d0b", "url": "https://github.com/vmware/singleton/commit/17978bd621bc7ee7de27205534568fee986b1d0b", "message": "Fixing failing unit test due to NullPointerException when doing Map.putAll(null)", "committedDate": "2020-03-17T22:50:12Z", "type": "commit"}, {"oid": "6c691708a3b9b0a891622a7a96d3d979ff3cb807", "url": "https://github.com/vmware/singleton/commit/6c691708a3b9b0a891622a7a96d3d979ff3cb807", "message": "Changes after code review.", "committedDate": "2020-03-17T23:41:27Z", "type": "commit"}, {"oid": "41a8aa1c4afd56cc1042939892a22dbca64adc1d", "url": "https://github.com/vmware/singleton/commit/41a8aa1c4afd56cc1042939892a22dbca64adc1d", "message": "Removing exception handling for now", "committedDate": "2020-03-18T22:09:37Z", "type": "commit"}, {"oid": "dd2455d5e68187dd4061b9c71ccd2799480d3d85", "url": "https://github.com/vmware/singleton/commit/dd2455d5e68187dd4061b9c71ccd2799480d3d85", "message": "Deprecating VIPCfg.initialize; cleaning up code", "committedDate": "2020-03-19T16:43:36Z", "type": "commit"}, {"oid": "e26d372496ced19785a48b187e3bcdb1c1442ba1", "url": "https://github.com/vmware/singleton/commit/e26d372496ced19785a48b187e3bcdb1c1442ba1", "message": "Storing the http response code in the cache", "committedDate": "2020-03-20T15:45:46Z", "type": "commit"}, {"oid": "01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "url": "https://github.com/vmware/singleton/commit/01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "message": "Using cached etag as if-none-match request header value in the request in order to get a 304 NOT MODIFIED http response", "committedDate": "2020-03-25T20:11:07Z", "type": "commit"}, {"oid": "750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "url": "https://github.com/vmware/singleton/commit/750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "message": "Handling 404 response from Singleton service", "committedDate": "2020-03-26T04:04:49Z", "type": "commit"}, {"oid": "529e5cc756460c5314a09a015caad7f4d26482d9", "url": "https://github.com/vmware/singleton/commit/529e5cc756460c5314a09a015caad7f4d26482d9", "message": "Using HTTP repsonse's Cache-Control max-age and timestamp to dertermine if component locale's cache has expired", "committedDate": "2020-03-26T23:38:04Z", "type": "commit"}, {"oid": "b40fcf9dc23a01cc336b67e7eddea16d85be9817", "url": "https://github.com/vmware/singleton/commit/b40fcf9dc23a01cc336b67e7eddea16d85be9817", "message": "Moving constants to URLUtils", "committedDate": "2020-03-26T23:49:56Z", "type": "commit"}, {"oid": "fa123f9a1bee0d349ab6c36384288c99e865fb99", "url": "https://github.com/vmware/singleton/commit/fa123f9a1bee0d349ab6c36384288c99e865fb99", "message": "Fixing failing test", "committedDate": "2020-03-27T00:07:11Z", "type": "commit"}, {"oid": "30b2054bc21a61ecdcecbb74f5a97b7af714682f", "url": "https://github.com/vmware/singleton/commit/30b2054bc21a61ecdcecbb74f5a97b7af714682f", "message": "Fixing failing code scan", "committedDate": "2020-03-27T02:47:23Z", "type": "commit"}, {"oid": "0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "url": "https://github.com/vmware/singleton/commit/0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-03-27T06:47:07Z", "type": "commit"}, {"oid": "ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "url": "https://github.com/vmware/singleton/commit/ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "message": "Cleaning up import in ComponentService,java", "committedDate": "2020-03-30T00:29:34Z", "type": "commit"}, {"oid": "d8450e444632e849f020704d65106fed11417b0a", "url": "https://github.com/vmware/singleton/commit/d8450e444632e849f020704d65106fed11417b0a", "message": "Cleaning up code - caching/expiry", "committedDate": "2020-03-30T03:03:20Z", "type": "commit"}, {"oid": "d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "url": "https://github.com/vmware/singleton/commit/d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "message": "Merge branch 'g11n-java-client' of https://github.com/jessiejuachon/singleton into g11n-java-client", "committedDate": "2020-03-30T03:04:44Z", "type": "commit"}, {"oid": "0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "url": "https://github.com/vmware/singleton/commit/0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "message": "Adding tests for new caching workflow; enabling old caching workflow using cacheExpiredTime config", "committedDate": "2020-03-31T02:51:56Z", "type": "commit"}, {"oid": "d06adb3ac3d456f897882ee1af237d29c7f03967", "url": "https://github.com/vmware/singleton/commit/d06adb3ac3d456f897882ee1af237d29c7f03967", "message": "Fixing a failing test", "committedDate": "2020-03-31T03:16:31Z", "type": "commit"}, {"oid": "48c855873e5585f19152290738e4dbf6f0180b06", "url": "https://github.com/vmware/singleton/commit/48c855873e5585f19152290738e4dbf6f0180b06", "message": "Adding mock server response", "committedDate": "2020-03-31T05:37:28Z", "type": "commit"}, {"oid": "4e45bedd128d76023c8089f9194069ea0bf30f6a", "url": "https://github.com/vmware/singleton/commit/4e45bedd128d76023c8089f9194069ea0bf30f6a", "message": "Removing unused file sampleconfig.json", "committedDate": "2020-03-31T18:55:50Z", "type": "commit"}, {"oid": "6a40dc87413ed76788fc60332b91741137d5e829", "url": "https://github.com/vmware/singleton/commit/6a40dc87413ed76788fc60332b91741137d5e829", "message": "Changes from code review", "committedDate": "2020-03-31T21:46:03Z", "type": "commit"}, {"oid": "4c3c12d4549eac93be3481db3309dea80c6a9e6c", "url": "https://github.com/vmware/singleton/commit/4c3c12d4549eac93be3481db3309dea80c6a9e6c", "message": "Value of VIPCfg.cacheExpiredTime is -1 when value is not set in config file. This means max age from server will be used. Setting VIPCfg.cacheExpiredTime to 0 disables caching.", "committedDate": "2020-03-31T23:34:51Z", "type": "commit"}, {"oid": "7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "url": "https://github.com/vmware/singleton/commit/7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "message": "Changing a LinkedHashMap to a HashMap because insertion order does not need to be maintained.", "committedDate": "2020-04-02T17:10:51Z", "type": "commit"}, {"oid": "baef0d06f0facd4fe2383185dc1b7979bba186a7", "url": "https://github.com/vmware/singleton/commit/baef0d06f0facd4fe2383185dc1b7979bba186a7", "message": "Adding CacheItem object to contain map of data and a another map for any other cache properties", "committedDate": "2020-04-03T05:54:04Z", "type": "commit"}, {"oid": "02a96e9a7dbec8e912f29439334792d7b51069d6", "url": "https://github.com/vmware/singleton/commit/02a96e9a7dbec8e912f29439334792d7b51069d6", "message": "Fixing failing unit test", "committedDate": "2020-04-03T05:59:48Z", "type": "commit"}, {"oid": "78d88f796cb3bd3f015bb1d589717fe6897abc05", "url": "https://github.com/vmware/singleton/commit/78d88f796cb3bd3f015bb1d589717fe6897abc05", "message": "Fixing code scan issues", "committedDate": "2020-04-03T06:14:21Z", "type": "commit"}, {"oid": "655c223992bf244c4136a52c636119c9edf605fe", "url": "https://github.com/vmware/singleton/commit/655c223992bf244c4136a52c636119c9edf605fe", "message": "Code cleanup", "committedDate": "2020-04-03T08:36:12Z", "type": "commit"}, {"oid": "8746915f5015f497b6956e8f8b743806330cc51c", "url": "https://github.com/vmware/singleton/commit/8746915f5015f497b6956e8f8b743806330cc51c", "message": "Lazily instantiating cacheProps; code clean up and comments", "committedDate": "2020-04-05T17:28:09Z", "type": "commit"}, {"oid": "897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "url": "https://github.com/vmware/singleton/commit/897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "message": "Changes after code review", "committedDate": "2020-04-07T03:26:44Z", "type": "commit"}, {"oid": "3a4e18358f37c29502cfdeb60c44b94e63653601", "url": "https://github.com/vmware/singleton/commit/3a4e18358f37c29502cfdeb60c44b94e63653601", "message": "Adding header to CacheItem.java", "committedDate": "2020-04-07T03:36:56Z", "type": "commit"}, {"oid": "b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "url": "https://github.com/vmware/singleton/commit/b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "message": "Fixing code san issue. Synchronize on a final field", "committedDate": "2020-04-07T03:49:29Z", "type": "commit"}, {"oid": "8f57e243ed1f450349392e990b4502dd74543f91", "url": "https://github.com/vmware/singleton/commit/8f57e243ed1f450349392e990b4502dd74543f91", "message": "Fixing code scan bug", "committedDate": "2020-04-07T04:07:44Z", "type": "commit"}, {"oid": "72c8799ffbbb23dc61115375cbee52573e792ec9", "url": "https://github.com/vmware/singleton/commit/72c8799ffbbb23dc61115375cbee52573e792ec9", "message": "Changes after code review", "committedDate": "2020-04-07T17:15:34Z", "type": "commit"}, {"oid": "92edfc88a64c21470fc06c37b65503a6d9042f90", "url": "https://github.com/vmware/singleton/commit/92edfc88a64c21470fc06c37b65503a6d9042f90", "message": "Updating CasheService.isContainComponent to return false if cache key is stored but has a null value", "committedDate": "2020-04-07T19:15:13Z", "type": "commit"}, {"oid": "2042554b861d0b97b04a8d29c3a051106e24d8f0", "url": "https://github.com/vmware/singleton/commit/2042554b861d0b97b04a8d29c3a051106e24d8f0", "message": "HttpRequester if-none-match header and other customized headers are added to each specific request locally.", "committedDate": "2020-04-08T04:57:56Z", "type": "commit"}, {"oid": "ae707fface7ade445bc391f9f0e4125734eeddb1", "url": "https://github.com/vmware/singleton/commit/ae707fface7ade445bc391f9f0e4125734eeddb1", "message": "Code clean up; keep old caching expiration logic", "committedDate": "2020-04-08T17:09:39Z", "type": "commit"}, {"oid": "82818d5909f1b1e2117f7599993ea50777bd982a", "url": "https://github.com/vmware/singleton/commit/82818d5909f1b1e2117f7599993ea50777bd982a", "message": "Fixing code scan bug", "committedDate": "2020-04-08T21:12:57Z", "type": "commit"}, {"oid": "31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "url": "https://github.com/vmware/singleton/commit/31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-04-08T21:50:07Z", "type": "commit"}, {"oid": "c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "url": "https://github.com/vmware/singleton/commit/c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "message": "code clean up", "committedDate": "2020-04-09T00:13:02Z", "type": "commit"}, {"oid": "78dcc1cc7de1700d332c4901ec3f09e546befd26", "url": "https://github.com/vmware/singleton/commit/78dcc1cc7de1700d332c4901ec3f09e546befd26", "message": "Removing response code and response msg from cache; Passing cacheItem object to be updated down the line.", "committedDate": "2020-04-09T07:14:14Z", "type": "commit"}, {"oid": "9281c640b3b78d987e1fd865b01f16e4edbfd768", "url": "https://github.com/vmware/singleton/commit/9281c640b3b78d987e1fd865b01f16e4edbfd768", "message": "Changes after code review", "committedDate": "2020-04-10T04:03:05Z", "type": "commit"}, {"oid": "26577625b3eb13f1f9367f313dd94d47c9113749", "url": "https://github.com/vmware/singleton/commit/26577625b3eb13f1f9367f313dd94d47c9113749", "message": "Adding header to CacheItem.java file", "committedDate": "2020-04-10T04:08:23Z", "type": "commit"}, {"oid": "9e80f09d4838f9de33bf9dce100744f4832630a0", "url": "https://github.com/vmware/singleton/commit/9e80f09d4838f9de33bf9dce100744f4832630a0", "message": "Fixing failing unit test", "committedDate": "2020-04-10T04:35:16Z", "type": "commit"}, {"oid": "68467f34882da413ed852f2ed4b1394e88bf64b1", "url": "https://github.com/vmware/singleton/commit/68467f34882da413ed852f2ed4b1394e88bf64b1", "message": "Changes after code review", "committedDate": "2020-04-10T23:14:41Z", "type": "commit"}, {"oid": "d67c72ee939034deb58b99d4fdf0fcc38857c006", "url": "https://github.com/vmware/singleton/commit/d67c72ee939034deb58b99d4fdf0fcc38857c006", "message": "Fixing code scan bugs", "committedDate": "2020-04-10T23:28:38Z", "type": "commit"}, {"oid": "85919738596847c3cd42fd2397226fb498cf6e28", "url": "https://github.com/vmware/singleton/commit/85919738596847c3cd42fd2397226fb498cf6e28", "message": "Not storing anything in cache if response is neither 200 nor 304", "committedDate": "2020-04-13T21:22:27Z", "type": "commit"}, {"oid": "22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "url": "https://github.com/vmware/singleton/commit/22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "message": "Loading messages from specified offline resource bundles", "committedDate": "2020-04-15T00:36:42Z", "type": "commit"}, {"oid": "ce2488b8af539a1456959b97e482435b11d5aeff", "url": "https://github.com/vmware/singleton/commit/ce2488b8af539a1456959b97e482435b11d5aeff", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-04-15T00:43:12Z", "type": "commit"}, {"oid": "109296301af054a8def120b98fd7e877acdb465f", "url": "https://github.com/vmware/singleton/commit/109296301af054a8def120b98fd7e877acdb465f", "message": "Adding header", "committedDate": "2020-04-15T00:48:03Z", "type": "commit"}, {"oid": "35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "url": "https://github.com/vmware/singleton/commit/35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "message": "Fixing failing unie test", "committedDate": "2020-04-15T01:14:11Z", "type": "commit"}, {"oid": "ada17f19d4e56d283ae65886b08e0d6a71031ba7", "url": "https://github.com/vmware/singleton/commit/ada17f19d4e56d283ae65886b08e0d6a71031ba7", "message": "Code changes after review; code clean up", "committedDate": "2020-04-16T17:06:32Z", "type": "commit"}, {"oid": "fc60eeffd82dc8e8214207524bda4864edd05add", "url": "https://github.com/vmware/singleton/commit/fc60eeffd82dc8e8214207524bda4864edd05add", "message": "Using java.nio.file.Paths", "committedDate": "2020-04-17T16:14:41Z", "type": "commit"}, {"oid": "3e70449176a975fa30985714d2c9f03795c72d6b", "url": "https://github.com/vmware/singleton/commit/3e70449176a975fa30985714d2c9f03795c72d6b", "message": "Offline mode as fallback when service fetch fails", "committedDate": "2020-04-17T17:07:36Z", "type": "commit"}, {"oid": "609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "url": "https://github.com/vmware/singleton/commit/609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "message": "Resetting VIPCfg and I18nFactory instances for each test", "committedDate": "2020-04-17T17:56:53Z", "type": "commit"}, {"oid": "dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "url": "https://github.com/vmware/singleton/commit/dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "message": "Resetting VIPCfg and I18nFactory after test", "committedDate": "2020-04-17T17:59:27Z", "type": "commit"}, {"oid": "7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "url": "https://github.com/vmware/singleton/commit/7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "message": "Fixing tests", "committedDate": "2020-04-17T22:31:30Z", "type": "commit"}, {"oid": "5b92e4480ca25d122c7f98dc389d7e4884a59a25", "url": "https://github.com/vmware/singleton/commit/5b92e4480ca25d122c7f98dc389d7e4884a59a25", "message": "Limit to wiremock test logging", "committedDate": "2020-04-20T17:42:50Z", "type": "commit"}, {"oid": "dfb41b5042e733f21f5cda4428faab6e0a95e19a", "url": "https://github.com/vmware/singleton/commit/dfb41b5042e733f21f5cda4428faab6e0a95e19a", "message": "Decreasing unit test log", "committedDate": "2020-04-20T21:47:47Z", "type": "commit"}, {"oid": "21a7105c4fdc5d88d8db80340b3b00d947622cc7", "url": "https://github.com/vmware/singleton/commit/21a7105c4fdc5d88d8db80340b3b00d947622cc7", "message": "this test is timing out and trying to connect 70+ times", "committedDate": "2020-04-21T00:43:23Z", "type": "commit"}, {"oid": "84343d506461aea4976a86fa25e7bb1b06703150", "url": "https://github.com/vmware/singleton/commit/84343d506461aea4976a86fa25e7bb1b06703150", "message": "Adding comments to code", "committedDate": "2020-04-21T00:56:15Z", "type": "commit"}, {"oid": "be8e443e6de5070baf91c76e1f4001188e8be0d5", "url": "https://github.com/vmware/singleton/commit/be8e443e6de5070baf91c76e1f4001188e8be0d5", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-04-21T18:26:20Z", "type": "commit"}, {"oid": "b805d3672e0b286648b612dd48d3fabe73f92fd4", "url": "https://github.com/vmware/singleton/commit/b805d3672e0b286648b612dd48d3fabe73f92fd4", "message": "Adding timestamp to cache fromn local bundle", "committedDate": "2020-04-21T19:14:03Z", "type": "commit"}, {"oid": "17bc16cd019c4d40ad82df7590869f82a76b0a96", "url": "https://github.com/vmware/singleton/commit/17bc16cd019c4d40ad82df7590869f82a76b0a96", "message": "Deprecating methods in TranslationMessage; adding new method getMessage", "committedDate": "2020-04-23T04:26:42Z", "type": "commit"}, {"oid": "15da01004363a3441944149c106b79908ba4cde6", "url": "https://github.com/vmware/singleton/commit/15da01004363a3441944149c106b79908ba4cde6", "message": "Added tests for TranslationMessage.getMessage", "committedDate": "2020-04-24T08:58:03Z", "type": "commit"}, {"oid": "631de868cb3b40899ace35017268bdb65b236091", "url": "https://github.com/vmware/singleton/commit/631de868cb3b40899ace35017268bdb65b236091", "message": "Fixing test", "committedDate": "2020-04-24T09:15:35Z", "type": "commit"}, {"oid": "ffd9adb09499997921630426e9a8327bf615ee50", "url": "https://github.com/vmware/singleton/commit/ffd9adb09499997921630426e9a8327bf615ee50", "message": "Fixing test", "committedDate": "2020-04-24T09:28:59Z", "type": "commit"}, {"oid": "c00f7ae3cacc0e17ab59a776b02c3be04a106252", "url": "https://github.com/vmware/singleton/commit/c00f7ae3cacc0e17ab59a776b02c3be04a106252", "message": "Fixing test", "committedDate": "2020-04-24T20:29:27Z", "type": "commit"}, {"oid": "d0504c49a179166868cbae84874647925d88c2a3", "url": "https://github.com/vmware/singleton/commit/d0504c49a179166868cbae84874647925d88c2a3", "message": "Removing comment field because source collection is not supported anymore; cleaning up tests; adding comments for javadoc", "committedDate": "2020-04-24T22:28:00Z", "type": "commit"}, {"oid": "79b18d0035a35a23fb26fe76cae4868e848a11b8", "url": "https://github.com/vmware/singleton/commit/79b18d0035a35a23fb26fe76cae4868e848a11b8", "message": "Code clean up", "committedDate": "2020-04-24T22:44:30Z", "type": "commit"}, {"oid": "ec9f5db8cd6110c5b714bc098d54680308c63d9a", "url": "https://github.com/vmware/singleton/commit/ec9f5db8cd6110c5b714bc098d54680308c63d9a", "message": "Changes from code review", "committedDate": "2020-04-24T22:58:26Z", "type": "commit"}, {"oid": "2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "url": "https://github.com/vmware/singleton/commit/2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "message": "Code clean up", "committedDate": "2020-04-24T23:25:19Z", "type": "commit"}, {"oid": "4e44a8c46fd2856ca97cf71158cb9804880e3e17", "url": "https://github.com/vmware/singleton/commit/4e44a8c46fd2856ca97cf71158cb9804880e3e17", "message": "Optional SourceOpt in initialization\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>", "committedDate": "2020-04-26T22:36:42Z", "type": "commit"}, {"oid": "de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "url": "https://github.com/vmware/singleton/commit/de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "message": "Fixing test", "committedDate": "2020-04-27T00:58:16Z", "type": "commit"}, {"oid": "406cb2a268cd5e18eee310577137c8f364bc8309", "url": "https://github.com/vmware/singleton/commit/406cb2a268cd5e18eee310577137c8f364bc8309", "message": "Adding comments to code", "committedDate": "2020-04-28T03:14:02Z", "type": "commit"}, {"oid": "c80696ab2f0bdfcc80ba268705ed147aed423b07", "url": "https://github.com/vmware/singleton/commit/c80696ab2f0bdfcc80ba268705ed147aed423b07", "message": "Adding comment for javadoc", "committedDate": "2020-04-28T04:33:36Z", "type": "commit"}, {"oid": "79d111e4404a4f171dcdfb001228afcbad996753", "url": "https://github.com/vmware/singleton/commit/79d111e4404a4f171dcdfb001228afcbad996753", "message": "Cleaning up code", "committedDate": "2020-04-28T21:54:07Z", "type": "commit"}, {"oid": "24d8d5d7ee9e667c88187761c5332d3c9485cf26", "url": "https://github.com/vmware/singleton/commit/24d8d5d7ee9e667c88187761c5332d3c9485cf26", "message": "Code clean up", "committedDate": "2020-04-28T22:02:21Z", "type": "commit"}, {"oid": "23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "url": "https://github.com/vmware/singleton/commit/23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "message": "Fixing test", "committedDate": "2020-04-28T23:28:49Z", "type": "commit"}, {"oid": "369643f588359e1ceb430768ab473566c503da3c", "url": "https://github.com/vmware/singleton/commit/369643f588359e1ceb430768ab473566c503da3c", "message": "Removing source message fallback from this PR", "committedDate": "2020-04-29T03:17:37Z", "type": "commit"}, {"oid": "4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "url": "https://github.com/vmware/singleton/commit/4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-04-29T04:09:00Z", "type": "commit"}, {"oid": "636b5b4cf56f121cf871e07911dcb4d763a16c64", "url": "https://github.com/vmware/singleton/commit/636b5b4cf56f121cf871e07911dcb4d763a16c64", "message": "Default locale in config file instead of hardcoded; get supported locales for offline mode; fixing some bugs in getting supported locales", "committedDate": "2020-05-05T01:10:59Z", "type": "commit"}, {"oid": "71a87e52447b0fede8230e7f8f7e5c65ce034546", "url": "https://github.com/vmware/singleton/commit/71a87e52447b0fede8230e7f8f7e5c65ce034546", "message": "Merge branch 'g11n-java-client' into g11n-java-client", "committedDate": "2020-05-05T01:20:57Z", "type": "commit"}, {"oid": "b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "url": "https://github.com/vmware/singleton/commit/b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "message": "Fixing test", "committedDate": "2020-05-05T01:25:06Z", "type": "commit"}, {"oid": "060666d54ddfa7156433209ad06c959b4af649da", "url": "https://github.com/vmware/singleton/commit/060666d54ddfa7156433209ad06c959b4af649da", "message": "Fixing tests", "committedDate": "2020-05-05T01:56:26Z", "type": "commit"}, {"oid": "52e3695951a48d21de82180c140beead3924cf75", "url": "https://github.com/vmware/singleton/commit/52e3695951a48d21de82180c140beead3924cf75", "message": "Default locale to Locale.ENGLISH if not set in config file", "committedDate": "2020-05-05T03:04:12Z", "type": "commit"}, {"oid": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "url": "https://github.com/vmware/singleton/commit/2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "message": "Changed after code review: code clean up, bug fix", "committedDate": "2020-05-06T21:58:32Z", "type": "commit"}, {"oid": "bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "url": "https://github.com/vmware/singleton/commit/bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-05-08T02:49:19Z", "type": "commit"}, {"oid": "fa56388fa66f56bce4c746ff4c662591246908f4", "url": "https://github.com/vmware/singleton/commit/fa56388fa66f56bce4c746ff4c662591246908f4", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>", "committedDate": "2020-05-08T02:50:00Z", "type": "commit"}, {"oid": "08cd96d71656e546810805466962d82b4ab623ab", "url": "https://github.com/vmware/singleton/commit/08cd96d71656e546810805466962d82b4ab623ab", "message": "code clean up, error logging, bug fix", "committedDate": "2020-05-08T07:42:06Z", "type": "commit"}, {"oid": "e89ff56539cbf52e2819b70b28138356a0a6dd11", "url": "https://github.com/vmware/singleton/commit/e89ff56539cbf52e2819b70b28138356a0a6dd11", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client", "committedDate": "2020-05-08T07:48:46Z", "type": "commit"}, {"oid": "119aebde51e1777a164c914bbd7d132d41ece371", "url": "https://github.com/vmware/singleton/commit/119aebde51e1777a164c914bbd7d132d41ece371", "message": "code clean up", "committedDate": "2020-05-08T07:52:57Z", "type": "commit"}, {"oid": "e8a937d79fb0a7b48b85ca5ac8623aa459d9c8a2", "url": "https://github.com/vmware/singleton/commit/e8a937d79fb0a7b48b85ca5ac8623aa459d9c8a2", "message": "code clean up", "committedDate": "2020-05-11T21:00:45Z", "type": "commit"}, {"oid": "9d95cd1379ac1e8cd3d30f8c085cbfc0a68d8ab2", "url": "https://github.com/vmware/singleton/commit/9d95cd1379ac1e8cd3d30f8c085cbfc0a68d8ab2", "message": "Using messages_source.json for source locale messages.", "committedDate": "2020-05-12T23:35:30Z", "type": "commit"}]}