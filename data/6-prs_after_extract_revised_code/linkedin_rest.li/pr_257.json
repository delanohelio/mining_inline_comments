{"pr_number": 257, "pr_title": "Extend the use of argFile and pathing Jar across all tasks.", "pr_createdAt": "2020-04-10T22:09:08Z", "pr_url": "https://github.com/linkedin/rest.li/pull/257", "timeline": [{"oid": "ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "url": "https://github.com/linkedin/rest.li/commit/ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "message": "Extend the use of argFile and pathing Jar across all tasks.\nProvide a easy to use config to enable argFile across all tasks.", "committedDate": "2020-04-10T22:23:06Z", "type": "commit"}, {"oid": "ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "url": "https://github.com/linkedin/rest.li/commit/ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "message": "Extend the use of argFile and pathing Jar across all tasks.\nProvide a easy to use config to enable argFile across all tasks.", "committedDate": "2020-04-10T22:23:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2OTQwMg==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406969402", "bodyText": "This is sort of a general question, but I always wonder if having properties like this could collide with other properties in other plugins. Do you think it would make sense to prefix our properties with pegasus.?", "author": "evanw555", "createdAt": "2020-04-10T22:31:29Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -561,6 +561,8 @@\n       \"dataTemplateGenerator\", \"restTools\", \"avroSchemaGenerator\");\n   // Directory in the dataTemplate jar that holds schemas translated from PDL to PDSC.\n   private static final String TRANSLATED_SCHEMAS_DIR = \"legacyPegasusSchemas\";\n+  // Enable the use of argFiles for the tasks that support them\n+  private static final String ENABLE_ARG_FILE = \"enableArgFile\";", "originalCommit": "ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3MzMwNA==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406973304", "bodyText": "Good point, prefixed with pegasusPlugin", "author": "karthikbalasub", "createdAt": "2020-04-10T22:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2OTQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "a786d57f0ac5bbcd3c1d30bdee3b7b5026a2c8a3", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\nindex baf105148..e4440e272 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n\n@@ -562,7 +562,7 @@ public class PegasusPlugin implements Plugin<Project>\n   // Directory in the dataTemplate jar that holds schemas translated from PDL to PDSC.\n   private static final String TRANSLATED_SCHEMAS_DIR = \"legacyPegasusSchemas\";\n   // Enable the use of argFiles for the tasks that support them\n-  private static final String ENABLE_ARG_FILE = \"enableArgFile\";\n+  private static final String ENABLE_ARG_FILE = \"pegasusPlugin.enableArgFile\";\n \n   @SuppressWarnings(\"unchecked\")\n   private Class<? extends Plugin<Project>> _thisPluginType = (Class<? extends Plugin<Project>>)\n"}}, {"oid": "a786d57f0ac5bbcd3c1d30bdee3b7b5026a2c8a3", "url": "https://github.com/linkedin/rest.li/commit/a786d57f0ac5bbcd3c1d30bdee3b7b5026a2c8a3", "message": "Address review comments.", "committedDate": "2020-04-10T22:47:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NTg2Mw==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406975863", "bodyText": "I know I just approved, but I just realized this code is a duplicate of RestLiToolsUtils#readArgFromFileIfNeeded, right?", "author": "evanw555", "createdAt": "2020-04-10T23:00:08Z", "path": "data-avro-generator/src/main/java/com/linkedin/data/avro/generator/AvroSchemaGenerator.java", "diffHunk": "@@ -112,7 +113,14 @@ public static void main(String[] args) throws IOException\n       System.exit(1);\n     }\n \n-    run(System.getProperty(GENERATOR_RESOLVER_PATH),\n+    String resolverPath = System.getProperty(AbstractGenerator.GENERATOR_RESOLVER_PATH);", "originalCommit": "a786d57f0ac5bbcd3c1d30bdee3b7b5026a2c8a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NjE2OQ==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406976169", "bodyText": "Yes, but this is in a different module, so I didn't want to add dependency to restli-tools here.", "author": "karthikbalasub", "createdAt": "2020-04-10T23:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NTg2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MTE3OA==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406991178", "bodyText": "Makes sense", "author": "evanw555", "createdAt": "2020-04-11T00:19:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NTg2Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3Mjc2Mw==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406972763", "bodyText": "nit : the brace should be in the next line", "author": "nickibi", "createdAt": "2020-04-10T22:45:42Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/GenerateRestModelTask.java", "diffHunk": "@@ -219,9 +237,15 @@ private void executeSnapshotExporter(String name, List<String> inputDirs, List<S\n                                        boolean additionalDocProviders)\n   {\n     getProject().javaexec(javaExecSpec -> {\n+      String resolverPathArg = _resolverPath.getAsPath();\n+      if (isEnableArgFile()) {", "originalCommit": "ce123b2bbfc8f3b3fa34f0a7a0f2f1ad91bc8378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4MTA0MA==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406981040", "bodyText": "fixed", "author": "karthikbalasub", "createdAt": "2020-04-10T23:23:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3Mjc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "afa7c3ce0d706ccf30a03062d722e38c41343afb", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/GenerateRestModelTask.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/GenerateRestModelTask.java\nindex bdc069bc1..154f35586 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/GenerateRestModelTask.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/GenerateRestModelTask.java\n\n@@ -236,9 +234,11 @@ public class GenerateRestModelTask extends DefaultTask\n   private void executeSnapshotExporter(String name, List<String> inputDirs, List<String> packages, String destinationPath,\n                                        boolean additionalDocProviders)\n   {\n-    getProject().javaexec(javaExecSpec -> {\n+    getProject().javaexec(javaExecSpec ->\n+    {\n       String resolverPathArg = _resolverPath.getAsPath();\n-      if (isEnableArgFile()) {\n+      if (isEnableArgFile())\n+      {\n         resolverPathArg = ArgumentFileGenerator.getArgFileSyntax(ArgumentFileGenerator.createArgFile(\n             \"generateRestModel_resolverPath\", Collections.singletonList(resolverPathArg), getTemporaryDir()));\n       }\n"}}, {"oid": "afa7c3ce0d706ccf30a03062d722e38c41343afb", "url": "https://github.com/linkedin/rest.li/commit/afa7c3ce0d706ccf30a03062d722e38c41343afb", "message": "Fix style issues", "committedDate": "2020-04-10T23:21:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4MTAxNQ==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406981015", "bodyText": "here", "author": "nickibi", "createdAt": "2020-04-10T23:23:25Z", "path": "restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java", "diffHunk": "@@ -106,4 +109,26 @@ public static boolean isParameterOptional(ParameterSchema param)\n     boolean optional = param.isOptional() == null ? false : param.isOptional();\n     return optional || param.hasDefault();\n   }\n+\n+  /**\n+   * Reads and returns the resolver path from system property {@link AbstractGenerator#GENERATOR_RESOLVER_PATH}.\n+   * If the value points to an arg file, reads the contents of the file and returns it.\n+   */\n+  public static String getResolverPathFromSystemProperty() throws IOException {", "originalCommit": "afa7c3ce0d706ccf30a03062d722e38c41343afb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f80421dc0055872b198bc07c0354a7914b62a75", "chunk": "diff --git a/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java b/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\nindex 46f98255f..055574e5b 100644\n--- a/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\n+++ b/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\n\n@@ -114,7 +114,8 @@ public class RestLiToolsUtils\n    * Reads and returns the resolver path from system property {@link AbstractGenerator#GENERATOR_RESOLVER_PATH}.\n    * If the value points to an arg file, reads the contents of the file and returns it.\n    */\n-  public static String getResolverPathFromSystemProperty() throws IOException {\n+  public static String getResolverPathFromSystemProperty() throws IOException\n+  {\n     String resolverPath = System.getProperty(AbstractGenerator.GENERATOR_RESOLVER_PATH);\n     return readArgFromFileIfNeeded(resolverPath);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4MTA2Mw==", "url": "https://github.com/linkedin/rest.li/pull/257#discussion_r406981063", "bodyText": "here", "author": "nickibi", "createdAt": "2020-04-10T23:23:34Z", "path": "restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java", "diffHunk": "@@ -106,4 +109,26 @@ public static boolean isParameterOptional(ParameterSchema param)\n     boolean optional = param.isOptional() == null ? false : param.isOptional();\n     return optional || param.hasDefault();\n   }\n+\n+  /**\n+   * Reads and returns the resolver path from system property {@link AbstractGenerator#GENERATOR_RESOLVER_PATH}.\n+   * If the value points to an arg file, reads the contents of the file and returns it.\n+   */\n+  public static String getResolverPathFromSystemProperty() throws IOException {\n+    String resolverPath = System.getProperty(AbstractGenerator.GENERATOR_RESOLVER_PATH);\n+    return readArgFromFileIfNeeded(resolverPath);\n+  }\n+\n+  /**\n+   * If argValue points to an arg file, reads the contents of the file and returns it.\n+   */\n+  public static String readArgFromFileIfNeeded(String argValue) throws IOException {", "originalCommit": "afa7c3ce0d706ccf30a03062d722e38c41343afb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f80421dc0055872b198bc07c0354a7914b62a75", "chunk": "diff --git a/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java b/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\nindex 46f98255f..055574e5b 100644\n--- a/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\n+++ b/restli-tools/src/main/java/com/linkedin/restli/internal/tools/RestLiToolsUtils.java\n\n@@ -114,7 +114,8 @@ public class RestLiToolsUtils\n    * Reads and returns the resolver path from system property {@link AbstractGenerator#GENERATOR_RESOLVER_PATH}.\n    * If the value points to an arg file, reads the contents of the file and returns it.\n    */\n-  public static String getResolverPathFromSystemProperty() throws IOException {\n+  public static String getResolverPathFromSystemProperty() throws IOException\n+  {\n     String resolverPath = System.getProperty(AbstractGenerator.GENERATOR_RESOLVER_PATH);\n     return readArgFromFileIfNeeded(resolverPath);\n   }\n"}}, {"oid": "1f80421dc0055872b198bc07c0354a7914b62a75", "url": "https://github.com/linkedin/rest.li/commit/1f80421dc0055872b198bc07c0354a7914b62a75", "message": "Fix more style issues!", "committedDate": "2020-04-10T23:25:27Z", "type": "commit"}, {"oid": "a49a0b13d7fca653540cee61311fe3a1aba5f652", "url": "https://github.com/linkedin/rest.li/commit/a49a0b13d7fca653540cee61311fe3a1aba5f652", "message": "Release 28.2.5", "committedDate": "2020-04-10T23:30:46Z", "type": "commit"}, {"oid": "d9271f1a01fd2b4ca7a7dcc5782dd0c80f8022b0", "url": "https://github.com/linkedin/rest.li/commit/d9271f1a01fd2b4ca7a7dcc5782dd0c80f8022b0", "message": "Merge branch 'master' into feature/arg_too_long", "committedDate": "2020-04-11T00:22:00Z", "type": "commit"}]}