{"pr_number": 358, "pr_title": "Implement support for always projecting fields by name.", "pr_createdAt": "2020-07-30T19:58:02Z", "pr_url": "https://github.com/linkedin/rest.li/pull/358", "timeline": [{"oid": "c16f150211e80b5b0f8a186d7ef22f974902f134", "url": "https://github.com/linkedin/rest.li/commit/c16f150211e80b5b0f8a186d7ef22f974902f134", "message": "Implement support for always projecting fields by name.", "committedDate": "2020-07-30T20:02:33Z", "type": "commit"}, {"oid": "c16f150211e80b5b0f8a186d7ef22f974902f134", "url": "https://github.com/linkedin/rest.li/commit/c16f150211e80b5b0f8a186d7ef22f974902f134", "message": "Implement support for always projecting fields by name.", "committedDate": "2020-07-30T20:02:33Z", "type": "forcePushed"}, {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783", "url": "https://github.com/linkedin/rest.li/commit/e23a912cc3834e14581ddbcf0fa497b8f554b783", "message": "Release 29.4.7", "committedDate": "2020-07-30T21:47:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMzk0Nw==", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463413947", "bodyText": "If the name is already escaped(replaced \"$\" to \"$$\"), could it happen to a case that we did a second replaceAll escape to make it un-readable.", "author": "BrianPin", "createdAt": "2020-07-31T05:36:03Z", "path": "data-transform/src/main/java/com/linkedin/data/transform/filter/AbstractFilter.java", "diffHunk": "@@ -248,21 +260,33 @@ private Object filterDataMap(DataMap opNode,\n     for (Map.Entry<String, Object> entry : valueDataMap.entrySet())\n     {\n       final String name = entry.getKey();\n+      final String nameEscaped = Escaper.replaceAll(name, \"$\", \"$$\");", "originalCommit": "e23a912cc3834e14581ddbcf0fa497b8f554b783", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4NzMxNw==", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463787317", "bodyText": "Field names in the data are never escaped. We only escape them in the mask tree as it has special meaning for $ (eg $*, $start etc)", "author": "karthikbalasub", "createdAt": "2020-07-31T19:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMzk0Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTA1NA==", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463421054", "bodyText": "Do you think since this adding field is in response, maybe this projectFields should be in Response Util class instead of Rest Utils?", "author": "BrianPin", "createdAt": "2020-07-31T06:03:08Z", "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/util/RestUtils.java", "diffHunk": "@@ -251,6 +250,36 @@ public static String pickBestEncoding(String acceptHeader, Set<String> customMim\n    */\n   public static DataMap projectFields(final DataMap dataMap, final ProjectionMode projectionMode,\n       final MaskTree projectionMask)\n+  {", "originalCommit": "e23a912cc3834e14581ddbcf0fa497b8f554b783", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4Nzc3MQ==", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463787771", "bodyText": "We can move, unfortunately this is a public API and so we cannot delete it.\nIf this is not a big concern, I prefer to do this refactoring in a different PR. The current PR is already large.", "author": "karthikbalasub", "createdAt": "2020-07-31T19:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTA1NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ccdcf9cc6008d52d20390967c7bb98cf8f1f83d9", "url": "https://github.com/linkedin/rest.li/commit/ccdcf9cc6008d52d20390967c7bb98cf8f1f83d9", "message": "Merge branch 'master' into feature/projection", "committedDate": "2020-08-04T05:27:42Z", "type": "commit"}]}