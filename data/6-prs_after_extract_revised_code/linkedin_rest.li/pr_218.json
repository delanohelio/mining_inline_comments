{"pr_number": 218, "pr_title": "Change ValidateSchemaAnnotationTask to ignore exception or errors durng initializaing class by classLoader", "pr_createdAt": "2020-03-12T06:20:41Z", "pr_url": "https://github.com/linkedin/rest.li/pull/218", "timeline": [{"oid": "7bb68ab5a3e266d864d20e1423db4b4450a89d17", "url": "https://github.com/linkedin/rest.li/commit/7bb68ab5a3e266d864d20e1423db4b4450a89d17", "message": "Change ValidateSchemaAnnotationTask to ignore exception or errors during initializaing class by classLoader", "committedDate": "2020-03-12T06:11:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzYzNQ==", "url": "https://github.com/linkedin/rest.li/pull/218#discussion_r392407635", "bodyText": "Why do we need both info and debug logs? One is not enough?", "author": "nickibi", "createdAt": "2020-03-13T18:42:44Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -173,34 +173,36 @@ private String toNativePath(final String path)\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n+   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.\n    *\n    * @param name the name of class to be search annotation from.\n    * @param foundClasses a list of class names of the classes that contains {@link SCHEMA_HANDLER_JAVA_ANNOTATION}\n-   * @return whether this\n-   * @throws IOException\n    */\n-  private void checkHandlerAnnotation(String name, List<String> foundClasses) throws IOException\n+  private void checkHandlerAnnotation(String name, List<String> foundClasses)\n   {\n     if (name.endsWith(CLASS_SUFFIX))\n     {\n       int end = name.lastIndexOf(CLASS_SUFFIX);\n       String clazzPath = name.substring(0, end);\n       String clazzName = pathToName(clazzPath);\n \n+      Class<?> clazz = null;\n       try\n       {\n-        Class<?> clazz = classForName(clazzName);\n-        for (Annotation a : clazz.getAnnotations())\n+        clazz = classForName(clazzName);\n+      } catch (Exception | Error e)\n+      {\n+        getProject().getLogger().info(\"Unexpected exceptions or errors [{}] found during instantiating the class, will skip this class: [{}]\", e.getClass(), clazzName);\n+        getProject().getLogger().debug(\"Unexpected exceptions or errors found during instantiating the class [{}], detailed error: \", clazzName, e);", "originalCommit": "7bb68ab5a3e266d864d20e1423db4b4450a89d17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyNjIzNQ==", "url": "https://github.com/linkedin/rest.li/pull/218#discussion_r393826235", "bodyText": "usually people don't open \"--debug\" flag, so I don't want them to be spammed by so many exception details. If they want to find out what are the concrete exceptions, they can check the debug information.", "author": "junchuanwang", "createdAt": "2020-03-17T16:53:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f07d577d83bb2db4e977c70b9a2fb019644d0398", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\nindex 611ad404b..87bff0396 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\n\n@@ -173,7 +173,7 @@ public class ValidateSchemaAnnotationTask extends DefaultTask\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n-   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.\n+   * if exceptions or errors detected during instantiation of the class, this method will return without doing anything.\n    *\n    * @param name the name of class to be search annotation from.\n    * @param foundClasses a list of class names of the classes that contains {@link SCHEMA_HANDLER_JAVA_ANNOTATION}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzc3Ng==", "url": "https://github.com/linkedin/rest.li/pull/218#discussion_r392407776", "bodyText": "nit: errors", "author": "nickibi", "createdAt": "2020-03-13T18:43:04Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -173,34 +173,36 @@ private String toNativePath(final String path)\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n+   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.", "originalCommit": "7bb68ab5a3e266d864d20e1423db4b4450a89d17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f07d577d83bb2db4e977c70b9a2fb019644d0398", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\nindex 611ad404b..87bff0396 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java\n\n@@ -173,7 +173,7 @@ public class ValidateSchemaAnnotationTask extends DefaultTask\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n-   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.\n+   * if exceptions or errors detected during instantiation of the class, this method will return without doing anything.\n    *\n    * @param name the name of class to be search annotation from.\n    * @param foundClasses a list of class names of the classes that contains {@link SCHEMA_HANDLER_JAVA_ANNOTATION}\n"}}, {"oid": "f07d577d83bb2db4e977c70b9a2fb019644d0398", "url": "https://github.com/linkedin/rest.li/commit/f07d577d83bb2db4e977c70b9a2fb019644d0398", "message": "Address ybi's comment", "committedDate": "2020-03-17T16:54:45Z", "type": "commit"}, {"oid": "5e43c2cdaf01736d1aa73dc10ed79bbbeaa09bf5", "url": "https://github.com/linkedin/rest.li/commit/5e43c2cdaf01736d1aa73dc10ed79bbbeaa09bf5", "message": "Merge branch 'master' into validation_schema", "committedDate": "2020-03-17T17:03:48Z", "type": "commit"}, {"oid": "6f361610a56fa886f3bdcdb85c0c1834e8406773", "url": "https://github.com/linkedin/rest.li/commit/6f361610a56fa886f3bdcdb85c0c1834e8406773", "message": "release 28.1.29", "committedDate": "2020-03-17T17:12:04Z", "type": "commit"}]}