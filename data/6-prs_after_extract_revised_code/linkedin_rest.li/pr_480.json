{"pr_number": 480, "pr_title": "remove empty map as invalid union", "pr_createdAt": "2020-11-18T18:16:11Z", "pr_url": "https://github.com/linkedin/rest.li/pull/480", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMDc4MQ==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526320781", "bodyText": "Do you mind adding a comment here that we allow empty union", "author": "nickibi", "createdAt": "2020-11-18T18:21:10Z", "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,11 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        if (map.size() > 1)", "originalCommit": "77acc20f0a925447dd28e7db7d671fc083616e7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyOTcyMw==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526329723", "bodyText": "Added some comment", "author": "BrianPin", "createdAt": "2020-11-18T18:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMDc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ffd98b872fed8186ad00a55da92a96390603642b", "chunk": "diff --git a/data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java b/data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java\nindex 11aa35950..d5dc98615 100644\n--- a/data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java\n+++ b/data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java\n\n@@ -505,6 +505,7 @@ public final class ValidateDataAgainstSchema\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n+        // we allow empty union\n         if (map.size() > 1)\n         {\n           addMessage(element, \"DataMap should have no more than one entry for a union type\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU2NQ==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526321565", "bodyText": "shall we move this case to goodObjects?", "author": "nickibi", "createdAt": "2020-11-18T18:22:25Z", "path": "data/src/test/java/com/linkedin/data/schema/validation/TestValidation.java", "diffHunk": "@@ -1111,7 +1111,6 @@ public void testUnionNoCoercionValidation() throws IOException\n         new Double(1),\n         new String(),\n         new DataList(),\n-        new DataMap(),", "originalCommit": "77acc20f0a925447dd28e7db7d671fc083616e7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyOTY2Mg==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526329662", "bodyText": "Added to good object", "author": "BrianPin", "createdAt": "2020-11-18T18:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU2NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2c18a52cee8993d78a9a3f5258ea254d56b44d6a", "url": "https://github.com/linkedin/rest.li/commit/2c18a52cee8993d78a9a3f5258ea254d56b44d6a", "message": "remove empty map as invalid union", "committedDate": "2020-11-20T19:16:52Z", "type": "commit"}, {"oid": "ffd98b872fed8186ad00a55da92a96390603642b", "url": "https://github.com/linkedin/rest.li/commit/ffd98b872fed8186ad00a55da92a96390603642b", "message": "adding comment and good object test case", "committedDate": "2020-11-20T19:16:52Z", "type": "commit"}, {"oid": "441fc9569f4ad725250dbc1b69320d3a03f83b37", "url": "https://github.com/linkedin/rest.li/commit/441fc9569f4ad725250dbc1b69320d3a03f83b37", "message": "update a major version", "committedDate": "2020-11-20T19:32:02Z", "type": "commit"}, {"oid": "441fc9569f4ad725250dbc1b69320d3a03f83b37", "url": "https://github.com/linkedin/rest.li/commit/441fc9569f4ad725250dbc1b69320d3a03f83b37", "message": "update a major version", "committedDate": "2020-11-20T19:32:02Z", "type": "forcePushed"}, {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934", "url": "https://github.com/linkedin/rest.li/commit/9d0ef746beb5710a33f784e1c3eae66aea9ec934", "message": "rephrase the change log", "committedDate": "2020-11-20T19:36:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r529386870", "bodyText": "This will allow empty unions even if they were not caused by a projection.\nI was thinking we should allow only when the union has projection applied. One option is to add a custom property (e.g, \"$projectedUnion\" = \"true\" ) when we generate the schema from projection and use that to allow empty union here.\nWhat do you think?", "author": "karthikbalasub", "createdAt": "2020-11-24T10:02:04Z", "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "originalCommit": "9d0ef746beb5710a33f784e1c3eae66aea9ec934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMzI4Ng==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530133286", "bodyText": "I thought about it when I was working on it (because it was written in the ticket).\nAfter making the change, I did some manual integration test and when there is a projection, there will only contain the projected field. I think the projection happens after validation. I think the projection still comes to the picture.\nI may have probably misunderstood your idea, feel free to comment", "author": "BrianPin", "createdAt": "2020-11-25T06:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMzU5Mw==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530133593", "bodyText": "The other thought on it was that to introduce projection into validation seems like bound to make it a miss..but that was probably me.", "author": "BrianPin", "createdAt": "2020-11-25T06:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwOTUyMw==", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530509523", "bodyText": "AFAIK this is the flow today:\nRequest -> 1. Validation Filter (create subset schema from projection) -> 2. Resource -> 3. Apply Projection -> 4. Validation Filter (validate using projection schema)\nSo we can add a flag in the UnionDataSchema created in step 1 using the projection. And then use that flag in the check done in step 4. It is slightly hacky as we are using a property. A cleaner approach would be to add a flag in the union schema to say if empty union data is allowed.", "author": "karthikbalasub", "createdAt": "2020-11-25T16:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}], "type": "inlineReview", "revised_code": null}]}