{"pr_number": 224, "pr_title": "Improvements to the PDL translation task.", "pr_createdAt": "2020-03-18T03:29:57Z", "pr_url": "https://github.com/linkedin/rest.li/pull/224", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzI1OQ==", "url": "https://github.com/linkedin/rest.li/pull/224#discussion_r394103259", "bodyText": "the log will be huge, shall we use LOGGER.debug instead?", "author": "nickibi", "createdAt": "2020-03-18T04:40:12Z", "path": "restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java", "diffHunk": "@@ -268,8 +282,13 @@ private void verifyTranslatedSchemas(Map<String, SchemaInfo> topLevelTranslatedS\n         if (!sourceSchema.equals(destSchema))\n         {\n           LOGGER.error(\"Translation failed for schema: {}\", schemaName);\n-          LOGGER.error(\"Source format: {}, schema:\\n{}\", _sourceFormat, sourceSchema.toString());\n-          LOGGER.error(\"Destination format: {}, schema:\\n{}\", _destFormat, destSchema.toString());\n+          // Write the translated schema to temp dir.\n+          File sourceFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _sourceFormat);\n+          FileUtils.writeStringToFile(sourceFile, SchemaToJsonEncoder.schemaToJson(sourceSchema, JsonBuilder.Pretty.INDENTED));\n+          File destFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _destFormat);\n+          FileUtils.writeStringToFile(destFile, SchemaToJsonEncoder.schemaToJson(destSchema, JsonBuilder.Pretty.INDENTED));\n+          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \");\n+          LOGGER.error(\"diff {} {}\", sourceFile.getAbsolutePath(), destFile.getAbsolutePath());", "originalCommit": "0f2e7f504a072cee06c862d324dd56a06e5bb094", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzMDkxMw==", "url": "https://github.com/linkedin/rest.li/pull/224#discussion_r394130913", "bodyText": "This is logging the file name, not contents of the file", "author": "karthikbalasub", "createdAt": "2020-03-18T06:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b8d1347e8226eab3f18ff1b73d2d7cf9935e60e0", "chunk": "diff --git a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\nindex 7cc549a77..7fd74aa83 100644\n--- a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n+++ b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n\n@@ -287,8 +287,8 @@ public class SchemaFormatTranslator\n           FileUtils.writeStringToFile(sourceFile, SchemaToJsonEncoder.schemaToJson(sourceSchema, JsonBuilder.Pretty.INDENTED));\n           File destFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _destFormat);\n           FileUtils.writeStringToFile(destFile, SchemaToJsonEncoder.schemaToJson(destSchema, JsonBuilder.Pretty.INDENTED));\n-          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \");\n-          LOGGER.error(\"diff {} {}\", sourceFile.getAbsolutePath(), destFile.getAbsolutePath());\n+          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \\ndiff {} {}\",\n+              sourceFile.getAbsolutePath(), destFile.getAbsolutePath());\n           failedSchemas.add(schemaInfo);\n           hasError = true;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNzQyNA==", "url": "https://github.com/linkedin/rest.li/pull/224#discussion_r394117424", "bodyText": "By RE convention \"\\s+$\" is what is usually used.", "author": "junchuanwang", "createdAt": "2020-03-18T05:44:31Z", "path": "restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java", "diffHunk": "@@ -59,6 +60,8 @@\n {\n   private static final Logger LOGGER = LoggerFactory.getLogger(SchemaFormatTranslator.class);\n \n+  private static final Pattern LINE_END_SPACES = Pattern.compile(\" +$\", Pattern.MULTILINE);", "originalCommit": "0f2e7f504a072cee06c862d324dd56a06e5bb094", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b8d1347e8226eab3f18ff1b73d2d7cf9935e60e0", "chunk": "diff --git a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\nindex 7cc549a77..7fd74aa83 100644\n--- a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n+++ b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n\n@@ -60,7 +60,7 @@ public class SchemaFormatTranslator\n {\n   private static final Logger LOGGER = LoggerFactory.getLogger(SchemaFormatTranslator.class);\n \n-  private static final Pattern LINE_END_SPACES = Pattern.compile(\" +$\", Pattern.MULTILINE);\n+  private static final Pattern LINE_END_SPACES = Pattern.compile(\"\\\\s+$\", Pattern.MULTILINE);\n \n   private static final Options OPTIONS = new Options();\n   static\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMzgxOA==", "url": "https://github.com/linkedin/rest.li/pull/224#discussion_r394123818", "bodyText": "I understand you want to show them in two lines, but following code would feel better\nLOGGER.error(\"To see the difference between source and tanslated schemas, run: \\n diff {} {}\", sourceFile.getAbsolutePath(), destFile.getAbsolutePath());", "author": "junchuanwang", "createdAt": "2020-03-18T06:09:06Z", "path": "restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java", "diffHunk": "@@ -268,8 +282,13 @@ private void verifyTranslatedSchemas(Map<String, SchemaInfo> topLevelTranslatedS\n         if (!sourceSchema.equals(destSchema))\n         {\n           LOGGER.error(\"Translation failed for schema: {}\", schemaName);\n-          LOGGER.error(\"Source format: {}, schema:\\n{}\", _sourceFormat, sourceSchema.toString());\n-          LOGGER.error(\"Destination format: {}, schema:\\n{}\", _destFormat, destSchema.toString());\n+          // Write the translated schema to temp dir.\n+          File sourceFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _sourceFormat);\n+          FileUtils.writeStringToFile(sourceFile, SchemaToJsonEncoder.schemaToJson(sourceSchema, JsonBuilder.Pretty.INDENTED));\n+          File destFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _destFormat);\n+          FileUtils.writeStringToFile(destFile, SchemaToJsonEncoder.schemaToJson(destSchema, JsonBuilder.Pretty.INDENTED));\n+          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \");\n+          LOGGER.error(\"diff {} {}\", sourceFile.getAbsolutePath(), destFile.getAbsolutePath());", "originalCommit": "0f2e7f504a072cee06c862d324dd56a06e5bb094", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b8d1347e8226eab3f18ff1b73d2d7cf9935e60e0", "chunk": "diff --git a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\nindex 7cc549a77..7fd74aa83 100644\n--- a/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n+++ b/restli-tools/src/main/java/com/linkedin/restli/tools/data/SchemaFormatTranslator.java\n\n@@ -287,8 +287,8 @@ public class SchemaFormatTranslator\n           FileUtils.writeStringToFile(sourceFile, SchemaToJsonEncoder.schemaToJson(sourceSchema, JsonBuilder.Pretty.INDENTED));\n           File destFile = new File(errorSchemasDir, sourceSchema.getName() + \"_\" + _destFormat);\n           FileUtils.writeStringToFile(destFile, SchemaToJsonEncoder.schemaToJson(destSchema, JsonBuilder.Pretty.INDENTED));\n-          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \");\n-          LOGGER.error(\"diff {} {}\", sourceFile.getAbsolutePath(), destFile.getAbsolutePath());\n+          LOGGER.error(\"To see the difference between source and tanslated schemas, run: \\ndiff {} {}\",\n+              sourceFile.getAbsolutePath(), destFile.getAbsolutePath());\n           failedSchemas.add(schemaInfo);\n           hasError = true;\n         }\n"}}, {"oid": "457d4762e146cd36a0ef14cef211f4016d10e2a7", "url": "https://github.com/linkedin/rest.li/commit/457d4762e146cd36a0ef14cef211f4016d10e2a7", "message": "Improvements to the PDL translation task.\n - Add option to skip verification.\n - Don't failfast on errors while loading schemas.\n - Write schemas failing verification to temp location to diff them\n   easily.\n - Strip trailing whitespaces in PDL.", "committedDate": "2020-03-18T06:40:11Z", "type": "commit"}, {"oid": "b8d1347e8226eab3f18ff1b73d2d7cf9935e60e0", "url": "https://github.com/linkedin/rest.li/commit/b8d1347e8226eab3f18ff1b73d2d7cf9935e60e0", "message": "Address review comments", "committedDate": "2020-03-18T06:40:11Z", "type": "forcePushed"}, {"oid": "522521314fee33995f9ab4f3168312f777d41522", "url": "https://github.com/linkedin/rest.li/commit/522521314fee33995f9ab4f3168312f777d41522", "message": "Address review comments\nRelease 28.1.30", "committedDate": "2020-03-18T06:41:56Z", "type": "forcePushed"}, {"oid": "73d68346bda01c845e16871da17e8b49d73e3276", "url": "https://github.com/linkedin/rest.li/commit/73d68346bda01c845e16871da17e8b49d73e3276", "message": "Address review comments", "committedDate": "2020-03-18T06:50:21Z", "type": "commit"}, {"oid": "73d68346bda01c845e16871da17e8b49d73e3276", "url": "https://github.com/linkedin/rest.li/commit/73d68346bda01c845e16871da17e8b49d73e3276", "message": "Address review comments", "committedDate": "2020-03-18T06:50:21Z", "type": "forcePushed"}]}