{"pr_number": 356, "pr_title": "Remove stacktrace from RestException and StreamException ", "pr_createdAt": "2020-07-29T02:10:21Z", "pr_url": "https://github.com/linkedin/rest.li/pull/356", "timeline": [{"oid": "e691a625b7bc3084827cb772d7bb892224437be2", "url": "https://github.com/linkedin/rest.li/commit/e691a625b7bc3084827cb772d7bb892224437be2", "message": "Allow RestRestliServer and StreamRestliServer throw RestException and StreamException with no stacktrace\n\nRestException and StreamException are nested exceptions wrapped around low level throwable, usually a restliServerException.\nRemove stack trace for outter nested exception can save time and reduce logging effort on server side.", "committedDate": "2020-07-29T01:20:40Z", "type": "commit"}, {"oid": "cbefd9cf64ecec48a991d690041fc8cb432adb85", "url": "https://github.com/linkedin/rest.li/commit/cbefd9cf64ecec48a991d690041fc8cb432adb85", "message": ":keep version", "committedDate": "2020-07-29T02:31:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2NTU1Mg==", "url": "https://github.com/linkedin/rest.li/pull/356#discussion_r465265552", "bodyText": "Can we make this backward compatible change by introducing an overloaded method?", "author": "nizarm", "createdAt": "2020-08-04T19:03:44Z", "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java", "diffHunk": "@@ -130,7 +130,7 @@ private static RestResponseBuilder encodeResult(String mimeType,\n     return builder;\n   }\n \n-  public static RestException buildRestException(RestLiResponseException restLiResponseException)\n+  public static RestException buildRestException(RestLiResponseException restLiResponseException, boolean writableStackTrace)", "originalCommit": "e691a625b7bc3084827cb772d7bb892224437be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyOTc0Mw==", "url": "https://github.com/linkedin/rest.li/pull/356#discussion_r465329743", "bodyText": "Thanks. Updated", "author": "xuli-in", "createdAt": "2020-08-04T21:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2NTU1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2de41091b9d20d69e03055535dbf0b2ce6a47a3d", "chunk": "diff --git a/restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java b/restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java\nindex 60d51c4b9..6f9424b9e 100644\n--- a/restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java\n+++ b/restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java\n\n@@ -130,6 +130,11 @@ public class ResponseUtils\n     return builder;\n   }\n \n+  public static RestException buildRestException(RestLiResponseException restLiResponseException)\n+  {\n+    return buildRestException(restLiResponseException, true);\n+  }\n+\n   public static RestException buildRestException(RestLiResponseException restLiResponseException, boolean writableStackTrace)\n   {\n     RestLiResponse restLiResponse = restLiResponseException.getRestLiResponse();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDE1Mg==", "url": "https://github.com/linkedin/rest.li/pull/356#discussion_r465304152", "bodyText": "Shouldn't the cause.toString() end up printing the entire stack trace? You probably just want to include the exception message for 'message' parameter (cause.getMessage())", "author": "nizarm", "createdAt": "2020-08-04T20:14:37Z", "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/ResponseUtils.java", "diffHunk": "@@ -148,7 +148,8 @@ public static RestException buildRestException(RestLiResponseException restLiRes\n     }\n \n     RestResponse restResponse = responseBuilder.build();\n-    return new RestException(restResponse, restLiResponseException.getCause());\n+    Throwable cause = restLiResponseException.getCause();\n+    return new RestException(restResponse, cause==null ? null : cause.toString(), cause, writableStackTrace);", "originalCommit": "e691a625b7bc3084827cb772d7bb892224437be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDU5MQ==", "url": "https://github.com/linkedin/rest.li/pull/356#discussion_r465330591", "bodyText": "public Throwable(Throwable cause) {\n    fillInStackTrace();\n    detailMessage = (cause==null ? null : cause.toString());\n    this.cause = cause;\n}\n\nI am thinking of keep the message the same as before and per throwable that is use cause.toString()", "author": "xuli-in", "createdAt": "2020-08-04T21:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMzAxOA==", "url": "https://github.com/linkedin/rest.li/pull/356#discussion_r465333018", "bodyText": "For RestLiServiceException, the toString is overritten and not include stacktrace.", "author": "xuli-in", "createdAt": "2020-08-04T21:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDE1Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2de41091b9d20d69e03055535dbf0b2ce6a47a3d", "url": "https://github.com/linkedin/rest.li/commit/2de41091b9d20d69e03055535dbf0b2ce6a47a3d", "message": "add backward compatible method", "committedDate": "2020-08-04T21:16:31Z", "type": "commit"}, {"oid": "6cdd78f31dac86cca4f0b1b5b031a8cd138c0d7b", "url": "https://github.com/linkedin/rest.li/commit/6cdd78f31dac86cca4f0b1b5b031a8cd138c0d7b", "message": "Merge branch 'master' into stacktracelessServer", "committedDate": "2020-08-04T22:23:36Z", "type": "commit"}, {"oid": "35d58fa836df017b4bb864882ecb4afc331eda1d", "url": "https://github.com/linkedin/rest.li/commit/35d58fa836df017b4bb864882ecb4afc331eda1d", "message": "Merge branch 'master' into stacktracelessServer", "committedDate": "2020-08-04T23:08:35Z", "type": "commit"}, {"oid": "be4b2b8861dc1018fb74d94ba587df283982f1e2", "url": "https://github.com/linkedin/rest.li/commit/be4b2b8861dc1018fb74d94ba587df283982f1e2", "message": "Merge branch 'master' into stacktracelessServer", "committedDate": "2020-08-05T16:39:45Z", "type": "commit"}, {"oid": "3cbdaede8c4a075602d54a53a1421a5aa34da7e7", "url": "https://github.com/linkedin/rest.li/commit/3cbdaede8c4a075602d54a53a1421a5aa34da7e7", "message": "Merge branch 'master' into stacktracelessServer", "committedDate": "2020-08-05T21:22:11Z", "type": "commit"}, {"oid": "94869b67c5a6c9b5252600fcec03580a85db0fb6", "url": "https://github.com/linkedin/rest.li/commit/94869b67c5a6c9b5252600fcec03580a85db0fb6", "message": "Merge remote-tracking branch 'upstream/master' into stacktracelessServer", "committedDate": "2020-08-05T22:11:25Z", "type": "commit"}, {"oid": "09933d7605b799f4cef290be02bfcf4edddff2b5", "url": "https://github.com/linkedin/rest.li/commit/09933d7605b799f4cef290be02bfcf4edddff2b5", "message": "Merge branch 'stacktracelessServer' of https://github.com/xuli-in/rest.li into stacktracelessServer", "committedDate": "2020-08-05T22:17:06Z", "type": "commit"}]}