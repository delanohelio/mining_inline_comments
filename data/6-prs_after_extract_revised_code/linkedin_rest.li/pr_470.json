{"pr_number": 470, "pr_title": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "pr_createdAt": "2020-11-05T20:49:38Z", "pr_url": "https://github.com/linkedin/rest.li/pull/470", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1Njk2NA==", "url": "https://github.com/linkedin/rest.li/pull/470#discussion_r518356964", "bodyText": "Does changing the ordering here fix the problem we talked about earlier (related to the wrong pegasus version being picked up in the schema annotation handler configuration)?", "author": "evanw555", "createdAt": "2020-11-05T20:51:48Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1441,8 +1447,8 @@ protected void configurePegasusSchemaSnapshotGeneration(Project project, SourceS\n           task.dependsOn(generatePegasusSchemaSnapshot);\n           task.setCurrentSnapshotDirectory(publishablePegasusSchemaSnapshotDir.toFile());\n           task.setPreviousSnapshotDirectory(pegasusSchemaSnapshotDir);\n-          task.setCodegenClasspath(project.getConfigurations() .getByName(SCHEMA_ANNOTATION_HANDLER_CONFIGURATION)\n-              .plus(project.getConfigurations().getByName(PEGASUS_PLUGIN_CONFIGURATION))\n+          task.setCodegenClasspath(project.getConfigurations().getByName(PEGASUS_PLUGIN_CONFIGURATION)", "originalCommit": "3e24f1138bf9dab9052a157edb575130e01b9cf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1OTU5NQ==", "url": "https://github.com/linkedin/rest.li/pull/470#discussion_r518359595", "bodyText": "Yes, it fixes the problem", "author": "nickibi", "createdAt": "2020-11-05T20:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1Njk2NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1ODk5Mg==", "url": "https://github.com/linkedin/rest.li/pull/470#discussion_r518358992", "bodyText": "Looking at other methods like configureRestClientConfiguration, this sort of conditional check is done inside the method. I'd suggest making it consistent.", "author": "evanw555", "createdAt": "2020-11-05T20:55:38Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -850,7 +850,13 @@ public void apply(Project project)\n         configurePegasusSchemaSnapshotGeneration(project, sourceSet, false);\n       }\n \n-      configurePegasusSchemaSnapshotGeneration(project, sourceSet, true);\n+      // Do compatibility check if there are extension schemas.\n+      if (!SharedFileUtils.getSuffixedFiles(project,  project.file(getExtensionSchemaPath(project, sourceSet)),", "originalCommit": "3e24f1138bf9dab9052a157edb575130e01b9cf8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e173170189470f1ab5c5af28dab8280e4167f99", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\nindex 877693da8..1694a7763 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n\n@@ -850,13 +850,7 @@ public class PegasusPlugin implements Plugin<Project>\n         configurePegasusSchemaSnapshotGeneration(project, sourceSet, false);\n       }\n \n-      // Do compatibility check if there are extension schemas.\n-      if (!SharedFileUtils.getSuffixedFiles(project,  project.file(getExtensionSchemaPath(project, sourceSet)),\n-              PDL_FILE_SUFFIX).isEmpty())\n-      {\n-          configurePegasusSchemaSnapshotGeneration(project, sourceSet, true);\n-      }\n-\n+      configurePegasusSchemaSnapshotGeneration(project, sourceSet, true);\n \n       configureConversionUtilities(project, sourceSet);\n \n"}}, {"oid": "6e173170189470f1ab5c5af28dab8280e4167f99", "url": "https://github.com/linkedin/rest.li/commit/6e173170189470f1ab5c5af28dab8280e4167f99", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "committedDate": "2020-11-05T21:19:55Z", "type": "forcePushed"}, {"oid": "ab0963909878c2447bab9cbe7606968c041451a0", "url": "https://github.com/linkedin/rest.li/commit/ab0963909878c2447bab9cbe7606968c041451a0", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "committedDate": "2020-11-05T21:22:20Z", "type": "commit"}, {"oid": "ab0963909878c2447bab9cbe7606968c041451a0", "url": "https://github.com/linkedin/rest.li/commit/ab0963909878c2447bab9cbe7606968c041451a0", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "committedDate": "2020-11-05T21:22:20Z", "type": "forcePushed"}]}