{"pr_number": 202, "pr_title": "Fix data translator for translating Pegasus non-union field to Avro union and vise versa", "pr_createdAt": "2020-03-02T17:50:28Z", "pr_url": "https://github.com/linkedin/rest.li/pull/202", "timeline": [{"oid": "88481cd337d06f7953b20a3e8dbd0b9d654e0a71", "url": "https://github.com/linkedin/rest.li/commit/88481cd337d06f7953b20a3e8dbd0b9d654e0a71", "message": "temp commit", "committedDate": "2020-02-26T22:16:20Z", "type": "commit"}, {"oid": "8ca4ac12255713b4dbf22a8d1afdbdd6e1b3742b", "url": "https://github.com/linkedin/rest.li/commit/8ca4ac12255713b4dbf22a8d1afdbdd6e1b3742b", "message": "temp fix for datatranslator", "committedDate": "2020-02-27T18:16:00Z", "type": "commit"}, {"oid": "0c52fea053e34252a1a120d65e9ca08330530aa5", "url": "https://github.com/linkedin/rest.li/commit/0c52fea053e34252a1a120d65e9ca08330530aa5", "message": "added more test cases", "committedDate": "2020-03-02T04:11:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM4MTYxOQ==", "url": "https://github.com/linkedin/rest.li/pull/202#discussion_r387381619", "bodyText": "Realizing that this comment makes no sense. I think you accidentally copied one of the comments from above in your last PR. You should fix this.\n// Translate default value as null, depending on specified options -> // Translate the pegasus field data to Avro data", "author": "evanw555", "createdAt": "2020-03-04T00:47:49Z", "path": "data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java", "diffHunk": "@@ -666,6 +645,19 @@ else if (fieldValue == null)\n                 continue;\n               }\n             }\n+\n+            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {\n+              // Since optional field will be represented as union in Avro\n+              // Need to extract the Avro type corresponding to the pegasus type from the Avro union\n+              Map.Entry<String, Schema> fieldAvroEntry = findUnionMember(fieldDataSchema, fieldAvroSchema);\n+              if (fieldAvroEntry == null)\n+              {\n+                _path.removeLast();\n+                continue;\n+              }\n+              fieldAvroSchema = fieldAvroEntry.getValue();\n+            }\n+\n             // Translate default value as null, depending on specified options", "originalCommit": "0c52fea053e34252a1a120d65e9ca08330530aa5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "chunk": "diff --git a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\nindex a0ca2b07b..76bb6771a 100644\n--- a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n+++ b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n\n@@ -646,8 +643,9 @@ public class DataTranslator implements DataTranslatorContext\n               }\n             }\n \n-            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {\n-              // Since optional field will be represented as union in Avro\n+            if (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION &&\n+                fieldAvroSchema.getType() == Schema.Type.UNION)\n+            {\n               // Need to extract the Avro type corresponding to the pegasus type from the Avro union\n               Map.Entry<String, Schema> fieldAvroEntry = findUnionMember(fieldDataSchema, fieldAvroSchema);\n               if (fieldAvroEntry == null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM4MjE5Mw==", "url": "https://github.com/linkedin/rest.li/pull/202#discussion_r387382193", "bodyText": "nit: remove unnecessary parentheses", "author": "evanw555", "createdAt": "2020-03-04T00:50:00Z", "path": "data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java", "diffHunk": "@@ -666,6 +645,19 @@ else if (fieldValue == null)\n                 continue;\n               }\n             }\n+\n+            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {", "originalCommit": "0c52fea053e34252a1a120d65e9ca08330530aa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NzA2OA==", "url": "https://github.com/linkedin/rest.li/pull/202#discussion_r387447068", "bodyText": "I just think it hard to read. I split this line into two so I can remove unnecessary parentheses but still make it look nice.", "author": "junchuanwang", "createdAt": "2020-03-04T04:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM4MjE5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "chunk": "diff --git a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\nindex a0ca2b07b..76bb6771a 100644\n--- a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n+++ b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n\n@@ -646,8 +643,9 @@ public class DataTranslator implements DataTranslatorContext\n               }\n             }\n \n-            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {\n-              // Since optional field will be represented as union in Avro\n+            if (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION &&\n+                fieldAvroSchema.getType() == Schema.Type.UNION)\n+            {\n               // Need to extract the Avro type corresponding to the pegasus type from the Avro union\n               Map.Entry<String, Schema> fieldAvroEntry = findUnionMember(fieldDataSchema, fieldAvroSchema);\n               if (fieldAvroEntry == null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM4Mjc3Nw==", "url": "https://github.com/linkedin/rest.li/pull/202#discussion_r387382777", "bodyText": "This comment is misleading. This case is no longer is unique to optional fields (after all, this revelation is the reason for this PR). I'd suggest just removing this line comment and keeping the comment in the line below.", "author": "evanw555", "createdAt": "2020-03-04T00:51:56Z", "path": "data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java", "diffHunk": "@@ -666,6 +645,19 @@ else if (fieldValue == null)\n                 continue;\n               }\n             }\n+\n+            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {\n+              // Since optional field will be represented as union in Avro", "originalCommit": "0c52fea053e34252a1a120d65e9ca08330530aa5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "chunk": "diff --git a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\nindex a0ca2b07b..76bb6771a 100644\n--- a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n+++ b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n\n@@ -646,8 +643,9 @@ public class DataTranslator implements DataTranslatorContext\n               }\n             }\n \n-            if ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) && fieldAvroSchema.getType() == Schema.Type.UNION) {\n-              // Since optional field will be represented as union in Avro\n+            if (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION &&\n+                fieldAvroSchema.getType() == Schema.Type.UNION)\n+            {\n               // Need to extract the Avro type corresponding to the pegasus type from the Avro union\n               Map.Entry<String, Schema> fieldAvroEntry = findUnionMember(fieldDataSchema, fieldAvroSchema);\n               if (fieldAvroEntry == null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM4NDc4OQ==", "url": "https://github.com/linkedin/rest.li/pull/202#discussion_r387384789", "bodyText": "There are a few things wrong with this if-statement:\n\nisOptional is no longer necessary, since we can no longer assume that this scenario is unique to optional fields.\nIt would be a lot simpler if you just made this consistent with the other if-statement in this diff; this condition should simply see if the pegasus type is not a union yet the Avro type is a union.\nIt has a lot of unnecessary parentheses, though if you follow my suggestions above, this should solve itself.", "author": "evanw555", "createdAt": "2020-03-04T00:58:56Z", "path": "data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java", "diffHunk": "@@ -355,7 +355,9 @@ private Object translate(Object value, DataSchema dataSchema, Schema avroSchema)\n             boolean isOptional = field.getOptional();\n             DataSchema fieldDataSchema = field.getType();\n             Schema fieldAvroSchema = avroSchema.getField(fieldName).schema();\n-            if (isOptional && (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION))\n+            if (isOptional && (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) ||", "originalCommit": "0c52fea053e34252a1a120d65e9ca08330530aa5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "chunk": "diff --git a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\nindex a0ca2b07b..76bb6771a 100644\n--- a/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n+++ b/data-avro/src/main/java/com/linkedin/data/avro/DataTranslator.java\n\n@@ -352,12 +352,9 @@ public class DataTranslator implements DataTranslatorContext\n             {\n               continue;\n             }\n-            boolean isOptional = field.getOptional();\n             DataSchema fieldDataSchema = field.getType();\n             Schema fieldAvroSchema = avroSchema.getField(fieldName).schema();\n-            if (isOptional && (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) ||\n-                ((fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION) &&\n-                 fieldAvroSchema.getType() == Schema.Type.UNION))\n+            if (fieldDataSchema.getDereferencedType() != DataSchema.Type.UNION && fieldAvroSchema.getType() == Schema.Type.UNION)\n             {\n               // Avro schema should be union with 2 types: null and the field's type.\n               Map.Entry<String, Schema> fieldAvroEntry = findUnionMember(fieldDataSchema, fieldAvroSchema);\n"}}, {"oid": "2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "url": "https://github.com/linkedin/rest.li/commit/2ba14eb70d24d9b78545c8561ce40fdcffdb6dbd", "message": "Address Dvan comments", "committedDate": "2020-03-04T04:52:20Z", "type": "commit"}, {"oid": "55a79da91eda6e2bba9e04c90d57c5393cba904c", "url": "https://github.com/linkedin/rest.li/commit/55a79da91eda6e2bba9e04c90d57c5393cba904c", "message": "Merge branch 'master' into junchuan_fix_data_translator", "committedDate": "2020-03-04T21:35:08Z", "type": "commit"}]}