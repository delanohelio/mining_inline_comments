{"pr_number": 477, "pr_title": "[Relative Load Balancer] Add parity of do not slow start in Dyno test", "pr_createdAt": "2020-11-11T21:52:06Z", "pr_url": "https://github.com/linkedin/rest.li/pull/477", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxODcwMw==", "url": "https://github.com/linkedin/rest.li/pull/477#discussion_r522518703", "bodyText": "minor: bracket on the new line", "author": "rickzx", "createdAt": "2020-11-13T00:04:29Z", "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java", "diffHunk": "@@ -313,9 +313,16 @@ else if (trackerClientState.getHealthScore() < MAX_HEALTH_SCORE\n       }\n       else\n       {\n-        // If it is a new client, we directly set health score as the initial health score to initialize\n-        trackerClientStateMap.put(trackerClient, new TrackerClientState(_relativeStrategyProperties.getInitialHealthScore(),\n-            _relativeStrategyProperties.getMinCallCount()));\n+        // Initializing a new client score\n+        if (trackerClient.doNotSlowStart())\n+        {\n+          trackerClientStateMap.put(trackerClient, new TrackerClientState(MAX_HEALTH_SCORE,\n+              _relativeStrategyProperties.getMinCallCount()));\n+        }\n+        else {", "originalCommit": "b586a0d9a832e866b02273f7943e628081996299", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "chunk": "diff --git a/d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java b/d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java\nindex 261aad0bc..797ebc011 100644\n--- a/d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java\n+++ b/d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java\n\n@@ -319,7 +319,8 @@ public class StateUpdater\n           trackerClientStateMap.put(trackerClient, new TrackerClientState(MAX_HEALTH_SCORE,\n               _relativeStrategyProperties.getMinCallCount()));\n         }\n-        else {\n+        else\n+        {\n           trackerClientStateMap.put(trackerClient,\n               new TrackerClientState(_relativeStrategyProperties.getInitialHealthScore(), _relativeStrategyProperties.getMinCallCount()));\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTE2NA==", "url": "https://github.com/linkedin/rest.li/pull/477#discussion_r522519164", "bodyText": "minor: bracket on the new line", "author": "rickzx", "createdAt": "2020-11-13T00:06:03Z", "path": "d2/src/test/java/com/linkedin/d2/balancer/strategies/relative/StateUpdaterTest.java", "diffHunk": "@@ -97,25 +97,43 @@ public void testInitializePartition(int partitionId)\n         };\n   }\n \n-  @Test\n-  public void testInitializePartitionWithSlowStartInitialHealthScore()\n+  @Test(dataProvider = \"doNotSlowStart\")\n+  public void testInitializePartitionWithSlowStartInitialHealthScore(boolean doNotSlowStart)\n   {\n     double initialHealthScore = 0.01;\n     D2RelativeStrategyProperties relativeStrategyProperties = new D2RelativeStrategyProperties()\n         .setInitialHealthScore(initialHealthScore);\n     setup(relativeStrategyProperties, new ConcurrentHashMap<>());\n \n     List<TrackerClient> trackerClients = TrackerClientMockHelper.mockTrackerClients(2,\n-        Arrays.asList(20, 20), Arrays.asList(10, 10), Arrays.asList(200L, 500L), Arrays.asList(100L, 200L), Arrays.asList(0, 0));\n+        Arrays.asList(20, 20), Arrays.asList(10, 10), Arrays.asList(200L, 500L), Arrays.asList(100L, 200L), Arrays.asList(0, 0), doNotSlowStart);\n \n     assertTrue(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).isEmpty(), \"There should be no state before initialization\");\n \n     _stateUpdater.updateState(new HashSet<>(trackerClients), DEFAULT_PARTITION_ID, DEFAULT_CLUSTER_GENERATION_ID);\n \n-    assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(0).getUri()).intValue(),\n-        (int) (initialHealthScore * RelativeLoadBalancerStrategyFactory.DEFAULT_POINTS_PER_WEIGHT));\n-    assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(1).getUri()).intValue(),\n-        (int) (initialHealthScore * RelativeLoadBalancerStrategyFactory.DEFAULT_POINTS_PER_WEIGHT));\n+    if (!doNotSlowStart)\n+    {\n+      assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(0).getUri()).intValue(),\n+          (int) (initialHealthScore * RelativeLoadBalancerStrategyFactory.DEFAULT_POINTS_PER_WEIGHT));\n+      assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(1).getUri()).intValue(),\n+          (int) (initialHealthScore * RelativeLoadBalancerStrategyFactory.DEFAULT_POINTS_PER_WEIGHT));\n+    }\n+    else {", "originalCommit": "b586a0d9a832e866b02273f7943e628081996299", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "chunk": "diff --git a/d2/src/test/java/com/linkedin/d2/balancer/strategies/relative/StateUpdaterTest.java b/d2/src/test/java/com/linkedin/d2/balancer/strategies/relative/StateUpdaterTest.java\nindex 4bc8196c7..cecf6268a 100644\n--- a/d2/src/test/java/com/linkedin/d2/balancer/strategies/relative/StateUpdaterTest.java\n+++ b/d2/src/test/java/com/linkedin/d2/balancer/strategies/relative/StateUpdaterTest.java\n\n@@ -119,7 +119,8 @@ public class StateUpdaterTest\n       assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(1).getUri()).intValue(),\n           (int) (initialHealthScore * RelativeLoadBalancerStrategyFactory.DEFAULT_POINTS_PER_WEIGHT));\n     }\n-    else {\n+    else\n+    {\n       assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(0).getUri()).intValue(), HEALTHY_POINTS);\n       assertEquals(_stateUpdater.getPointsMap(DEFAULT_PARTITION_ID).get(trackerClients.get(1).getUri()).intValue(), HEALTHY_POINTS);\n     }\n"}}, {"oid": "05ce0b07c6e8d759b3470a17287c3959986fcd3f", "url": "https://github.com/linkedin/rest.li/commit/05ce0b07c6e8d759b3470a17287c3959986fcd3f", "message": "[Relative Load Balancer] Add parity of do not slow start in Dyno tests in relative load balancer", "committedDate": "2020-11-17T06:14:44Z", "type": "commit"}, {"oid": "d6c27c91abd2adc772d13b52138ef31141a03f33", "url": "https://github.com/linkedin/rest.li/commit/d6c27c91abd2adc772d13b52138ef31141a03f33", "message": "Change java doc", "committedDate": "2020-11-17T06:14:44Z", "type": "commit"}, {"oid": "0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "url": "https://github.com/linkedin/rest.li/commit/0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "message": "Add change log", "committedDate": "2020-11-17T06:17:35Z", "type": "commit"}, {"oid": "0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "url": "https://github.com/linkedin/rest.li/commit/0443f51f56735376ce82f9a9583d5a1dd96c1c2a", "message": "Add change log", "committedDate": "2020-11-17T06:17:35Z", "type": "forcePushed"}]}