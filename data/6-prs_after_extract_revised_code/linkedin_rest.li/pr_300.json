{"pr_number": 300, "pr_title": "JsonBuilder efficiency improvements", "pr_createdAt": "2020-05-18T22:25:18Z", "pr_url": "https://github.com/linkedin/rest.li/pull/300", "timeline": [{"oid": "9d4501fc55d92f5dd43df820b789faf433bb7fb2", "url": "https://github.com/linkedin/rest.li/commit/9d4501fc55d92f5dd43df820b789faf433bb7fb2", "message": "Reuse the expensive Jackson factories in the JsonBuilder to reduce garbage. Provide an option to encode to a custom writer to allow writing directly to files in some cases for reasons of efficiency", "committedDate": "2020-05-18T23:24:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NzM5Mw==", "url": "https://github.com/linkedin/rest.li/pull/300#discussion_r426997393", "bodyText": "@karthikbalasub do you know what is the intension to disable INTERNING in the first place?", "author": "seliang", "createdAt": "2020-05-19T02:40:42Z", "path": "data/src/main/java/com/linkedin/data/schema/JsonBuilder.java", "diffHunk": "@@ -310,12 +337,12 @@ public void writeDataTemplate(DataTemplate<?> template, Boolean order) throws IO\n     _jacksonDataTemplateCodec.dataTemplateToJsonGenerator(template, _jsonGenerator, order);\n   }\n \n-  private final StringWriter _writer;\n+  private final Writer _writer;\n   private final JsonGenerator _jsonGenerator;\n-  private final JacksonDataCodec _jacksonDataCodec = new JacksonDataCodec();\n-  private final JacksonDataTemplateCodec _jacksonDataTemplateCodec = new JacksonDataTemplateCodec();\n \n-  private static final JsonFactory _jsonFactory = new JsonFactory().disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "originalCommit": "9d4501fc55d92f5dd43df820b789faf433bb7fb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwMjE1OA==", "url": "https://github.com/linkedin/rest.li/pull/300#discussion_r427002158", "bodyText": "We disabled Jackson string interning to avoid OOM from PermGen space in 2013. String interning stopped using PermGen space starting from some intermediate update version of JDK 7. We should have removed this config long way back.", "author": "nickibi", "createdAt": "2020-05-19T02:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NzM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxODU3Mw==", "url": "https://github.com/linkedin/rest.li/pull/300#discussion_r427018573", "bodyText": "In JacksonSmileStreamDataCodec, we have disable INTERNING, not sure if there is special reason? @karthikrg But in JacksonStreamDataCodec, we have started all using default value (enabled) and reuse JsonFactory based on https://github.com/FasterXML/jackson-docs/wiki/Presentation:-Jackson-Performance", "author": "mchen07", "createdAt": "2020-05-19T04:08:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5NzM5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "252462f31019e37edf04cbbe3e11e7a98e99b9cd", "url": "https://github.com/linkedin/rest.li/commit/252462f31019e37edf04cbbe3e11e7a98e99b9cd", "message": "Reuse the expensive Jackson factories in the JsonBuilder to reduce garbage. Provide an option to encode to a custom writer to allow writing directly to files in some cases for reasons of efficiency", "committedDate": "2020-05-19T04:34:39Z", "type": "forcePushed"}, {"oid": "81aa69044b67ea2bb1bf2d95b96b1bc9ba48f4b9", "url": "https://github.com/linkedin/rest.li/commit/81aa69044b67ea2bb1bf2d95b96b1bc9ba48f4b9", "message": "Reuse the expensive Jackson factories in the JsonBuilder to reduce garbage. Provide an option to encode to a custom writer to allow writing directly to files in some cases for reasons of efficiency", "committedDate": "2020-05-19T18:43:19Z", "type": "commit"}, {"oid": "81aa69044b67ea2bb1bf2d95b96b1bc9ba48f4b9", "url": "https://github.com/linkedin/rest.li/commit/81aa69044b67ea2bb1bf2d95b96b1bc9ba48f4b9", "message": "Reuse the expensive Jackson factories in the JsonBuilder to reduce garbage. Provide an option to encode to a custom writer to allow writing directly to files in some cases for reasons of efficiency", "committedDate": "2020-05-19T18:43:19Z", "type": "forcePushed"}]}