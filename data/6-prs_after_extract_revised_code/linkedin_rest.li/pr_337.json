{"pr_number": 337, "pr_title": "Update Pegasus Plugin's CopySchema tasks to delete stale schemas ", "pr_createdAt": "2020-06-22T20:44:56Z", "pr_url": "https://github.com/linkedin/rest.li/pull/337", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NDAzMQ==", "url": "https://github.com/linkedin/rest.li/pull/337#discussion_r443874031", "bodyText": "I would undo this change to the imports (probably IJ organized the imports for you).", "author": "DPUkyle", "createdAt": "2020-06-22T23:12:20Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -57,9 +57,7 @@\n import org.gradle.api.plugins.JavaBasePlugin;\n import org.gradle.api.plugins.JavaPlugin;\n import org.gradle.api.plugins.JavaPluginConvention;\n-import org.gradle.api.tasks.Copy;\n-import org.gradle.api.tasks.SourceSet;\n-import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.*;", "originalCommit": "00161e0849dd203dafe724ea21c41a388e2f2ad7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NDIzMA==", "url": "https://github.com/linkedin/rest.li/pull/337#discussion_r443894230", "bodyText": "Updated as stated.  and yes, it was automatic after the 5th one I believe.", "author": "Astro03", "createdAt": "2020-06-23T00:24:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NDAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "117c06415025ed217a48c97fbff717ba9893283d", "chunk": "diff --git a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\nindex b136a3067..4b536217c 100644\n--- a/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n+++ b/gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java\n\n@@ -57,7 +57,11 @@ import org.gradle.api.file.FileCollection;\n import org.gradle.api.plugins.JavaBasePlugin;\n import org.gradle.api.plugins.JavaPlugin;\n import org.gradle.api.plugins.JavaPluginConvention;\n-import org.gradle.api.tasks.*;\n+import org.gradle.api.tasks.Copy;\n+import org.gradle.api.tasks.Delete;\n+import org.gradle.api.tasks.SourceSet;\n+import org.gradle.api.tasks.SourceSetContainer;\n+import org.gradle.api.tasks.Sync;\n import org.gradle.api.tasks.bundling.Jar;\n import org.gradle.api.tasks.compile.JavaCompile;\n import org.gradle.api.tasks.javadoc.Javadoc;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NDQ3MQ==", "url": "https://github.com/linkedin/rest.li/pull/337#discussion_r443874471", "bodyText": "Good use of Task#onlyIf to leverage logging", "author": "DPUkyle", "createdAt": "2020-06-22T23:13:48Z", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1631,26 +1629,28 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     Task compileTask = project.getTasks().getByName(targetSourceSet.getCompileJavaTaskName());\n     compileTask.dependsOn(generateDataTemplatesTask);\n \n-    // we need to delete the build directory before staging files for translation/code generation, in case there were\n-    // left over files from a previous execution. This is not a problem if the input for translation/code generation\n-    // hasn't changed at all, because gradle will just realize the buildDir can be rebuilt from cache.\n-    Task destroyStaleFiles = project.getTasks().create(sourceSet.getName() + \"DestroyStaleFiles\");\n-    if (isPropertyTrue(project, DESTROY_STALE_FILES_ENABLE) && publishableSchemasBuildDir.exists())\n-    {\n-      destroyStaleFiles.getInputs().dir(publishableSchemasBuildDir);\n-      destroyStaleFiles.doLast(new CacheableAction<>(task -> project.delete(publishableSchemasBuildDir)));\n-    }\n+    // Dummy task to maintain backward compatibility\n+    // TODO: Delete this task once use cases have had time to reference the new task\n+    Task destroyStaleFiles = project.getTasks().create(sourceSet.getName() + \"DestroyStaleFiles\", Delete.class);\n+    destroyStaleFiles.onlyIf(task -> {\n+      project.getLogger().lifecycle(\"{} task is a NO-OP task.\", task.getPath());\n+      return false;\n+    });\n \n     // Dummy task to maintain backward compatibility, as this task was replaced by CopySchemas\n     // TODO: Delete this task once use cases have had time to reference the new task\n-    Task copyPdscSchemasTask = project.getTasks().create(sourceSet.getName() + \"CopyPdscSchemas\");\n+    Task copyPdscSchemasTask = project.getTasks().create(sourceSet.getName() + \"CopyPdscSchemas\", Copy.class);\n     copyPdscSchemasTask.dependsOn(destroyStaleFiles);\n+    copyPdscSchemasTask.onlyIf(task -> {\n+      project.getLogger().lifecycle(\"{} task is a NO-OP task.\", task.getPath());\n+      return false;", "originalCommit": "00161e0849dd203dafe724ea21c41a388e2f2ad7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "117c06415025ed217a48c97fbff717ba9893283d", "url": "https://github.com/linkedin/rest.li/commit/117c06415025ed217a48c97fbff717ba9893283d", "message": "Update Pegasus Plugin's CopySchema tasks to delete stale schemas\n\nThe Issue:\nThe issue is that the pegasus plugin, when preparing the schemas for\npublication, will copy the schemas to the build directory without\nremoving stale schemas. Without the fix, these stale schemas will be\npackaged into the data template jar -> which is a problem.\n\nThe current workaround, which is implemented, is that we have a delete\ntask and a copy task. The delete task is triggered by a gradle project\nflag. The copy moves the files as intended. This workaround is not\nviable since it breaks the UP-TO-DATE checks between builds. In\nparticular, it breaks the UP-TO-DATE checks during a HOT RELOAD\n(runPlay task of the Play Framework).\n\nThe Fix:\nInstead of the workaround as above, we \"skip\" the delete task and make\nthe copy task become a sync task. The task name stays the same but the\nclass type will be a sync task which will \"Synchronizes the contents of\na destination directory with some source directories and files\n[https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Sync.html]\".\nThis task will now delete stale files in the destination and will pass\nthe 'up-to-date' between builds.\n\nTesting:\nInteg test:\n1) Validate cacheability/up-to-date of tasks between builds\n2) Validate the mainCopySchemas task will delete stale schemas\n\nUnit test:\n1) Validate the mainCopySchemas task is a Sync task\n\nIn addition, I worked with @DPUKyle to create multiple configurations\nto allow the integ test to work. (Kyle's original PR:\nhttps://github.com/Astro03/rest.li/pull/2)\n - Pass necessary configurations using sysprops and custom configurations\n - Custom task to keep pegasus-version.properties out of the integTest classpath\n - Override TemporaryFolder to prevent cleanup\n - Use settings.gradle to prevent randomly-generated values in project under test", "committedDate": "2020-06-23T00:23:28Z", "type": "forcePushed"}, {"oid": "8a9661b3d88ba16239a3e4208befcc806d90c808", "url": "https://github.com/linkedin/rest.li/commit/8a9661b3d88ba16239a3e4208befcc806d90c808", "message": "Update tests to use os independent file paths", "committedDate": "2020-06-23T21:35:23Z", "type": "forcePushed"}, {"oid": "88a784dd4bce5dedf8582aa8d44b8f94e7e288e6", "url": "https://github.com/linkedin/rest.li/commit/88a784dd4bce5dedf8582aa8d44b8f94e7e288e6", "message": "Update Pegasus Plugin's CopySchema tasks to delete stale schemas\n\nThe Issue:\nThe issue is that the pegasus plugin, when preparing the schemas for\npublication, will copy the schemas to the build directory without\nremoving stale schemas. Without the fix, these stale schemas will be\npackaged into the data template jar -> which is a problem.\n\nThe current workaround, which is implemented, is that we have a delete\ntask and a copy task. The delete task is triggered by a gradle project\nflag. The copy moves the files as intended. This workaround is not\nviable since it breaks the UP-TO-DATE checks between builds. In\nparticular, it breaks the UP-TO-DATE checks during a HOT RELOAD\n(runPlay task of the Play Framework).\n\nThe Fix:\nInstead of the workaround as above, we \"skip\" the delete task and make\nthe copy task become a sync task. The task name stays the same but the\nclass type will be a sync task which will \"Synchronizes the contents of\na destination directory with some source directories and files\n[https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Sync.html]\".\nThis task will now delete stale files in the destination and will pass\nthe 'up-to-date' between builds.\n\nTesting:\nInteg test:\n1) Validate cacheability/up-to-date of tasks between builds\n2) Validate the mainCopySchemas task will delete stale schemas\n\nUnit test:\n1) Validate the mainCopySchemas task is a Sync task\n\nIn addition, I worked with @DPUKyle to create multiple configurations\nto allow the integ test to work. (Kyle's original PR:\nhttps://github.com/Astro03/rest.li/pull/2)\n - Pass necessary configurations using sysprops and custom configurations\n - Custom task to keep pegasus-version.properties out of the integTest classpath\n - Override TemporaryFolder to prevent cleanup\n - Use settings.gradle to prevent randomly-generated values in project under test", "committedDate": "2020-06-23T22:54:35Z", "type": "forcePushed"}, {"oid": "925ed0e9f1ddd8b0840d61c3a2d6efbb2972ee08", "url": "https://github.com/linkedin/rest.li/commit/925ed0e9f1ddd8b0840d61c3a2d6efbb2972ee08", "message": "Update Pegasus Plugin's CopySchema tasks to delete stale schemas\n\nThe Issue:\nThe issue is that the pegasus plugin, when preparing the schemas for\npublication, will copy the schemas to the build directory without\nremoving stale schemas. Without the fix, these stale schemas will be\npackaged into the data template jar -> which is a problem.\n\nThe current workaround, which is implemented, is that we have a delete\ntask and a copy task. The delete task is triggered by a gradle project\nflag. The copy moves the files as intended. This workaround is not\nviable since it breaks the UP-TO-DATE checks between builds. In\nparticular, it breaks the UP-TO-DATE checks during a HOT RELOAD\n(runPlay task of the Play Framework).\n\nThe Fix:\nInstead of the workaround as above, we \"skip\" the delete task and make\nthe copy task become a sync task. The task name stays the same but the\nclass type will be a sync task which will \"Synchronizes the contents of\na destination directory with some source directories and files\n[https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Sync.html]\".\nThis task will now delete stale files in the destination and will pass\nthe 'up-to-date' between builds.\n\nTesting:\nInteg test:\n1) Validate cacheability/up-to-date of tasks between builds\n2) Validate the mainCopySchemas task will delete stale schemas\n\nUnit test:\n1) Validate the mainCopySchemas task is a Sync task\n\nIn addition, I worked with @DPUKyle to create multiple configurations\nto allow the integ test to work. (Kyle's original PR:\nhttps://github.com/Astro03/rest.li/pull/2)\n - Pass necessary configurations using sysprops and custom configurations\n - Custom task to keep pegasus-version.properties out of the integTest classpath\n - Override TemporaryFolder to prevent cleanup\n - Use settings.gradle to prevent randomly-generated values in project under test", "committedDate": "2020-06-24T19:43:07Z", "type": "commit"}, {"oid": "925ed0e9f1ddd8b0840d61c3a2d6efbb2972ee08", "url": "https://github.com/linkedin/rest.li/commit/925ed0e9f1ddd8b0840d61c3a2d6efbb2972ee08", "message": "Update Pegasus Plugin's CopySchema tasks to delete stale schemas\n\nThe Issue:\nThe issue is that the pegasus plugin, when preparing the schemas for\npublication, will copy the schemas to the build directory without\nremoving stale schemas. Without the fix, these stale schemas will be\npackaged into the data template jar -> which is a problem.\n\nThe current workaround, which is implemented, is that we have a delete\ntask and a copy task. The delete task is triggered by a gradle project\nflag. The copy moves the files as intended. This workaround is not\nviable since it breaks the UP-TO-DATE checks between builds. In\nparticular, it breaks the UP-TO-DATE checks during a HOT RELOAD\n(runPlay task of the Play Framework).\n\nThe Fix:\nInstead of the workaround as above, we \"skip\" the delete task and make\nthe copy task become a sync task. The task name stays the same but the\nclass type will be a sync task which will \"Synchronizes the contents of\na destination directory with some source directories and files\n[https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Sync.html]\".\nThis task will now delete stale files in the destination and will pass\nthe 'up-to-date' between builds.\n\nTesting:\nInteg test:\n1) Validate cacheability/up-to-date of tasks between builds\n2) Validate the mainCopySchemas task will delete stale schemas\n\nUnit test:\n1) Validate the mainCopySchemas task is a Sync task\n\nIn addition, I worked with @DPUKyle to create multiple configurations\nto allow the integ test to work. (Kyle's original PR:\nhttps://github.com/Astro03/rest.li/pull/2)\n - Pass necessary configurations using sysprops and custom configurations\n - Custom task to keep pegasus-version.properties out of the integTest classpath\n - Override TemporaryFolder to prevent cleanup\n - Use settings.gradle to prevent randomly-generated values in project under test", "committedDate": "2020-06-24T19:43:07Z", "type": "forcePushed"}, {"oid": "9d92327c7128571c5479a74e5a7504b938714b8a", "url": "https://github.com/linkedin/rest.li/commit/9d92327c7128571c5479a74e5a7504b938714b8a", "message": "Merge branch 'master' into fpe/fix-copying-schemas", "committedDate": "2020-06-24T23:37:15Z", "type": "commit"}]}