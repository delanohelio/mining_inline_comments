{"pr_number": 14095, "pr_title": "Reapply \"Throw exception instead of returning null when reading application id\"", "pr_createdAt": "2020-08-19T08:51:45Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14095", "timeline": [{"oid": "2d8013592b52073f48697d899778b2f8c20b6c34", "url": "https://github.com/vespa-engine/vespa/commit/2d8013592b52073f48697d899778b2f8c20b6c34", "message": "Revert \"Revert \"Throw exception instead of returning null when reading application id\u2026\"\"", "committedDate": "2020-08-19T08:37:12Z", "type": "commit"}, {"oid": "5237d30ab21f17bf69b7ad817a48d85eb8f9f6a8", "url": "https://github.com/vespa-engine/vespa/commit/5237d30ab21f17bf69b7ad817a48d85eb8f9f6a8", "message": "Add and use getOptionalApplicationId in some places\n\nIn some scenarios data might be missing in ZooKeeper, in those\ncases handle that instead of failing", "committedDate": "2020-08-19T08:49:25Z", "type": "commit"}, {"oid": "6e61a311040ffd2c7ee00410fa85ade70f77d5b6", "url": "https://github.com/vespa-engine/vespa/commit/6e61a311040ffd2c7ee00410fa85ade70f77d5b6", "message": "Add test of expiring a local session that has no zookeeper data", "committedDate": "2020-08-19T09:58:38Z", "type": "commit"}, {"oid": "441c5945add33a4b7f643c167272a9ce8e7fcff8", "url": "https://github.com/vespa-engine/vespa/commit/441c5945add33a4b7f643c167272a9ce8e7fcff8", "message": "Fix comment", "committedDate": "2020-08-19T10:02:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxNjk4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/14095#discussion_r472916986", "bodyText": "It would perhaps be better if the readApplicationId() returned an optional, and getApplicationId() threw on empty? I fear something else may go wrong, and we then believe that was because the id didn't exist, even though it does.", "author": "jonmv", "createdAt": "2020-08-19T10:10:52Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/Session.java", "diffHunk": "@@ -134,8 +134,18 @@ public void setAthenzDomain(Optional<AthenzDomain> athenzDomain) {\n         sessionZooKeeperClient.writeAthenzDomain(athenzDomain);\n     }\n \n+    /** Returns application id read from ZooKeeper. Will throw RuntimeException if not found */\n     public ApplicationId getApplicationId() { return sessionZooKeeperClient.readApplicationId(); }\n \n+    /** Returns application id read from ZooKeeper. Will return Optional.empty() if not found */\n+    public Optional<ApplicationId> getOptionalApplicationId() {\n+        try {\n+            return Optional.of(getApplicationId());", "originalCommit": "5237d30ab21f17bf69b7ad817a48d85eb8f9f6a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxODIxMw==", "url": "https://github.com/vespa-engine/vespa/pull/14095#discussion_r472918213", "bodyText": "Yes, good point, that's better", "author": "hmusum", "createdAt": "2020-08-19T10:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxNjk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3NzY4OQ==", "url": "https://github.com/vespa-engine/vespa/pull/14095#discussion_r472977689", "bodyText": "Fixed", "author": "hmusum", "createdAt": "2020-08-19T12:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxNjk4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d286ae0b58047a439b67c6f68137e0f7d72fd764", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/Session.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/Session.java\nindex c0b8b20d26..b3e35e955d 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/Session.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/Session.java\n\n@@ -135,7 +135,10 @@ public abstract class Session implements Comparable<Session>  {\n     }\n \n     /** Returns application id read from ZooKeeper. Will throw RuntimeException if not found */\n-    public ApplicationId getApplicationId() { return sessionZooKeeperClient.readApplicationId(); }\n+    public ApplicationId getApplicationId() {\n+        return sessionZooKeeperClient.readApplicationId()\n+                .orElseThrow(() -> new RuntimeException(\"Unable to read application id for session \" + sessionId));\n+    }\n \n     /** Returns application id read from ZooKeeper. Will return Optional.empty() if not found */\n     public Optional<ApplicationId> getOptionalApplicationId() {\n"}}, {"oid": "d286ae0b58047a439b67c6f68137e0f7d72fd764", "url": "https://github.com/vespa-engine/vespa/commit/d286ae0b58047a439b67c6f68137e0f7d72fd764", "message": "Return Optional when reading application id from zookeeper", "committedDate": "2020-08-19T12:05:00Z", "type": "commit"}]}