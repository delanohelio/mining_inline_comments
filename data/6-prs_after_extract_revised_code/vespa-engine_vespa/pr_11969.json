{"pr_number": 11969, "pr_title": "Bjorncs/response based retry handler", "pr_createdAt": "2020-01-27T16:05:53Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11969", "timeline": [{"oid": "2016d352e512d446d16b6f837288f69025afc661", "url": "https://github.com/vespa-engine/vespa/commit/2016d352e512d446d16b6f837288f69025afc661", "message": "Move Sleeper and DelaySupplier to separate files", "committedDate": "2020-01-27T15:51:26Z", "type": "commit"}, {"oid": "b0eb3902031985e6750b518f38473cd3578dee17", "url": "https://github.com/vespa-engine/vespa/commit/b0eb3902031985e6750b518f38473cd3578dee17", "message": "Rename 'DelayedHttpRequestRetryHandler' => 'DelayedConnectionLevelRetryHandler'", "committedDate": "2020-01-27T15:51:26Z", "type": "commit"}, {"oid": "3d069ee97754f05edc14f785b084d9b6205b2576", "url": "https://github.com/vespa-engine/vespa/commit/3d069ee97754f05edc14f785b084d9b6205b2576", "message": "Move functional interfaces to separate files + generify", "committedDate": "2020-01-27T15:51:26Z", "type": "commit"}, {"oid": "8dc7df4e97d9d9c280912cb82cefb2e2fba6d965", "url": "https://github.com/vespa-engine/vespa/commit/8dc7df4e97d9d9c280912cb82cefb2e2fba6d965", "message": "Introduce response level retry strategy", "committedDate": "2020-01-27T16:04:41Z", "type": "commit"}, {"oid": "1f8eccf8955cb400f43d693b04bbab571c51de9f", "url": "https://github.com/vespa-engine/vespa/commit/1f8eccf8955cb400f43d693b04bbab571c51de9f", "message": "Remove old call to setRetryHandler", "committedDate": "2020-01-27T16:04:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4MTk5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/11969#discussion_r371381999", "bodyText": "multipliedBy(1 << (executionCount-1)) or similar?", "author": "hakonhall", "createdAt": "2020-01-27T17:36:05Z", "path": "http-utils/src/main/java/ai/vespa/util/http/retry/DelaySupplier.java", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package ai.vespa.util.http.retry;\n+\n+import java.time.Duration;\n+\n+/**\n+ * An abstraction that calculates the next delay based on the current retry count.\n+ *\n+ * @author bjorncs\n+ */\n+@FunctionalInterface\n+interface DelaySupplier {\n+    Duration getDelay(int executionCount);\n+\n+    class Fixed implements DelaySupplier {\n+        private final Duration delay;\n+\n+        Fixed(Duration delay) {\n+            this.delay = delay;\n+        }\n+\n+        @Override\n+        public Duration getDelay(int executionCount) { return delay; }\n+    }\n+\n+    class Exponential implements DelaySupplier {\n+        private final Duration startDelay;\n+        private final Duration maxDelay;\n+\n+        Exponential(Duration startDelay, Duration maxDelay) {\n+            this.startDelay = startDelay;\n+            this.maxDelay = maxDelay;\n+        }\n+\n+        @Override\n+        public Duration getDelay(int executionCount) {\n+            Duration nextDelay = startDelay;\n+            for (int i = 1; i < executionCount; ++i) {\n+                nextDelay = nextDelay.multipliedBy(2);", "originalCommit": "1f8eccf8955cb400f43d693b04bbab571c51de9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4MDUyMQ==", "url": "https://github.com/vespa-engine/vespa/pull/11969#discussion_r371680521", "bodyText": "That was a bit more elegant yes \ud83d\udc4d", "author": "bjorncs", "createdAt": "2020-01-28T09:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4MTk5OQ=="}], "type": "inlineReview", "revised_code": null}]}