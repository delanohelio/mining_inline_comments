{"pr_number": 13714, "pr_title": "Avoid adding local session to session cache twice", "pr_createdAt": "2020-06-26T05:59:42Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13714", "timeline": [{"oid": "e8ce57c2efd44a3e50590e6646a2aceec06fe25d", "url": "https://github.com/vespa-engine/vespa/commit/e8ce57c2efd44a3e50590e6646a2aceec06fe25d", "message": "Avoid adding local session to session cache twice\n\ncreateLocalSessionUsingDistributedApplicationPackage already adds the\nsession to session cache", "committedDate": "2020-06-26T05:45:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA3NDk0NQ==", "url": "https://github.com/vespa-engine/vespa/pull/13714#discussion_r446074945", "bodyText": "Intentional?", "author": "gjoranv", "createdAt": "2020-06-26T09:30:30Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -596,7 +599,7 @@ private File getSessionAppDir(long sessionId) {\n         return new TenantFileSystemDirs(componentRegistry.getConfigServerDB(), tenantName).getUserApplicationDir(sessionId);\n     }\n \n-    private void addWatcher(long sessionId, Curator.FileCache fileCache, RemoteSession remoteSession, Optional<LocalSession> localSession) {\n+    public void addWatcher(long sessionId, Curator.FileCache fileCache, RemoteSession remoteSession, Optional<LocalSession> localSession) {", "originalCommit": "e8ce57c2efd44a3e50590e6646a2aceec06fe25d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NDY3Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13714#discussion_r446084677", "bodyText": "No, that was leftover from another take at this where I needed the method to be public. Thanks, will fix", "author": "hmusum", "createdAt": "2020-06-26T09:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA3NDk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1c5d906292a3b4ec101fbcc591208aa09b6dd007", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\nindex 43b1b84c1e..53821a9289 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n\n@@ -599,7 +599,7 @@ public class SessionRepository {\n         return new TenantFileSystemDirs(componentRegistry.getConfigServerDB(), tenantName).getUserApplicationDir(sessionId);\n     }\n \n-    public void addWatcher(long sessionId, Curator.FileCache fileCache, RemoteSession remoteSession, Optional<LocalSession> localSession) {\n+    private void addWatcher(long sessionId, Curator.FileCache fileCache, RemoteSession remoteSession, Optional<LocalSession> localSession) {\n         // Remote session will always be present in an existing state watcher, but local session might not\n         if (sessionStateWatchers.containsKey(sessionId)) {\n             localSession.ifPresent(session -> sessionStateWatchers.get(sessionId).addLocalSession(session));\n"}}, {"oid": "1c5d906292a3b4ec101fbcc591208aa09b6dd007", "url": "https://github.com/vespa-engine/vespa/commit/1c5d906292a3b4ec101fbcc591208aa09b6dd007", "message": "Method should be private", "committedDate": "2020-06-26T09:50:47Z", "type": "commit"}]}