{"pr_number": 12960, "pr_title": "Reduce initial maintainer delay in controller", "pr_createdAt": "2020-04-17T08:34:17Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12960", "timeline": [{"oid": "08f512b1c9317cd09e621cad3446e97d6ff79bfb", "url": "https://github.com/vespa-engine/vespa/commit/08f512b1c9317cd09e621cad3446e97d6ff79bfb", "message": "Reduce initial maintainer delay in controller", "committedDate": "2020-04-17T08:34:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3ODU4Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12960#discussion_r410078587", "bodyText": "Should be changed in com.yahoo.vespa.hosted.provision.maintenance.Maintainer too.", "author": "mpolden", "createdAt": "2020-04-17T08:40:53Z", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java", "diffHunk": "@@ -116,7 +116,7 @@ static long staggeredDelay(List<HostName> cluster, HostName host, Instant now, D\n \n         long offset = cluster.indexOf(host) * interval.toMillis() / cluster.size();\n         long timeUntilNextRun = Math.floorMod(offset - now.toEpochMilli(), interval.toMillis());\n-        return timeUntilNextRun + interval.toMillis() / cluster.size();\n+        return timeUntilNextRun;", "originalCommit": "08f512b1c9317cd09e621cad3446e97d6ff79bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b536d61af0be52103fdb83e0fb6f2b6947b57c7", "chunk": "diff --git a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\nindex 779b8dcdfc..252df554e2 100644\n--- a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\n+++ b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\n\n@@ -115,8 +115,7 @@ public abstract class Maintainer extends AbstractComponent implements Runnable {\n             return interval.toMillis();\n \n         long offset = cluster.indexOf(host) * interval.toMillis() / cluster.size();\n-        long timeUntilNextRun = Math.floorMod(offset - now.toEpochMilli(), interval.toMillis());\n-        return timeUntilNextRun;\n+        return Math.floorMod(offset - now.toEpochMilli(), interval.toMillis());\n     }\n \n }\n"}}, {"oid": "3a6fbf844732dd41ad2fc2ef6b597a281808868d", "url": "https://github.com/vespa-engine/vespa/commit/3a6fbf844732dd41ad2fc2ef6b597a281808868d", "message": "Reduce initial delay of config server maintainers too", "committedDate": "2020-04-17T09:15:22Z", "type": "commit"}, {"oid": "5644d4216c1ca3c2ec48a666db915ca02dd21259", "url": "https://github.com/vespa-engine/vespa/commit/5644d4216c1ca3c2ec48a666db915ca02dd21259", "message": "Used named threads in maintainers", "committedDate": "2020-04-17T09:16:35Z", "type": "commit"}, {"oid": "1b536d61af0be52103fdb83e0fb6f2b6947b57c7", "url": "https://github.com/vespa-engine/vespa/commit/1b536d61af0be52103fdb83e0fb6f2b6947b57c7", "message": "Inline variables", "committedDate": "2020-04-17T10:38:04Z", "type": "commit"}, {"oid": "564ea2ed446154746bfb23a29aa8f1a414de3c9b", "url": "https://github.com/vespa-engine/vespa/commit/564ea2ed446154746bfb23a29aa8f1a414de3c9b", "message": "Expand ContactInformationMaintainer unit test to verify exception handling", "committedDate": "2020-04-17T10:38:33Z", "type": "commit"}, {"oid": "cf3a25d6906c976fbe12b4eb686c916a383e3bd6", "url": "https://github.com/vespa-engine/vespa/commit/cf3a25d6906c976fbe12b4eb686c916a383e3bd6", "message": "Log process during contact information updates", "committedDate": "2020-04-17T10:49:33Z", "type": "commit"}, {"oid": "b98bf882f2d90808349d0ae482c5694aa08e3b2c", "url": "https://github.com/vespa-engine/vespa/commit/b98bf882f2d90808349d0ae482c5694aa08e3b2c", "message": "break, not return, from switch statement", "committedDate": "2020-04-17T12:16:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM4OA==", "url": "https://github.com/vespa-engine/vespa/pull/12960#discussion_r410185388", "bodyText": "Use name() in case maintainer has specified a custom one.", "author": "mpolden", "createdAt": "2020-04-17T12:20:48Z", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java", "diffHunk": "@@ -52,7 +52,7 @@ public Maintainer(Controller controller, Duration interval, JobControl jobContro\n         this.name = name;\n         this.activeSystems = Set.copyOf(activeSystems);\n \n-        service = new ScheduledThreadPoolExecutor(1);\n+        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));", "originalCommit": "5644d4216c1ca3c2ec48a666db915ca02dd21259", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyMzgzNQ==", "url": "https://github.com/vespa-engine/vespa/pull/12960#discussion_r410423835", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));\n          \n          \n            \n                    service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, name() + \"-worker\"));", "author": "jonmv", "createdAt": "2020-04-17T19:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "c16e37ada9df0cca4e686ee546442e02a3cd1ed9", "chunk": "diff --git a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\nindex 0334883389..3e283d6c54 100644\n--- a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\n+++ b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/Maintainer.java\n\n@@ -52,7 +52,7 @@ public abstract class Maintainer extends AbstractComponent implements Runnable {\n         this.name = name;\n         this.activeSystems = Set.copyOf(activeSystems);\n \n-        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));\n+        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, name() + \"-worker\"));\n         long delay = staggeredDelay(controller.curator().cluster(), controller.hostname(), controller.clock().instant(), interval);\n         service.scheduleAtFixedRate(this, delay, interval.toMillis(), TimeUnit.MILLISECONDS);\n         jobControl.started(name());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTk4NA==", "url": "https://github.com/vespa-engine/vespa/pull/12960#discussion_r410185984", "bodyText": "\ud83d\ude01", "author": "mpolden", "createdAt": "2020-04-17T12:22:04Z", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/ContactInformationMaintainer.java", "diffHunk": "@@ -48,9 +48,9 @@ protected void maintain() {\n                                           (Optional.of(contact).equals(tenant.contact()) ? \"un\" : \"\") + \"changed\");\n                             tenants.store(lockedTenant.with(contact));\n                         });\n-                        return;\n+                        break;\n                     case cloud:\n-                        return;\n+                        break;", "originalCommit": "b98bf882f2d90808349d0ae482c5694aa08e3b2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyMzYxOQ==", "url": "https://github.com/vespa-engine/vespa/pull/12960#discussion_r410423619", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));\n          \n          \n            \n                    service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, name() + \"-worker\"));", "author": "jonmv", "createdAt": "2020-04-17T19:21:07Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/Maintainer.java", "diffHunk": "@@ -42,7 +42,7 @@ public Maintainer(NodeRepository nodeRepository, Duration interval) {\n \n         HostName hostname = HostName.from(com.yahoo.net.HostName.getLocalhost());\n         long delay = staggeredDelay(nodeRepository.database().cluster(), hostname, nodeRepository.clock().instant(), interval);\n-        service = new ScheduledThreadPoolExecutor(1);\n+        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));", "originalCommit": "b98bf882f2d90808349d0ae482c5694aa08e3b2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c16e37ada9df0cca4e686ee546442e02a3cd1ed9", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/Maintainer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/Maintainer.java\nindex 1608bf7511..17c73282b4 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/Maintainer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/Maintainer.java\n\n@@ -42,7 +42,7 @@ public abstract class Maintainer extends AbstractComponent implements Runnable {\n \n         HostName hostname = HostName.from(com.yahoo.net.HostName.getLocalhost());\n         long delay = staggeredDelay(nodeRepository.database().cluster(), hostname, nodeRepository.clock().instant(), interval);\n-        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, getClass().getSimpleName() + \"-worker\"));\n+        service = new ScheduledThreadPoolExecutor(1, r -> new Thread(r, name() + \"-worker\"));\n         service.scheduleAtFixedRate(this, delay, interval.toMillis(), TimeUnit.MILLISECONDS);\n         jobControl.started(name(), this);\n     }\n"}}, {"oid": "c16e37ada9df0cca4e686ee546442e02a3cd1ed9", "url": "https://github.com/vespa-engine/vespa/commit/c16e37ada9df0cca4e686ee546442e02a3cd1ed9", "message": "Apply suggestions from code review", "committedDate": "2020-04-17T19:21:47Z", "type": "commit"}]}