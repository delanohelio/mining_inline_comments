{"pr_number": 14190, "pr_title": "Move code from RemoteSession to SessionRepository", "pr_createdAt": "2020-08-28T07:14:39Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14190", "timeline": [{"oid": "c4dc7b37309d87a5cd9ef13891a29132101017c9", "url": "https://github.com/vespa-engine/vespa/commit/c4dc7b37309d87a5cd9ef13891a29132101017c9", "message": "Move code from RemoteSession to SessionRepository\n\nSimplify and move in the direction of unifying remote and local sessions\nMove tests and avoid a lot of lowe-level setup code", "committedDate": "2020-08-28T07:13:21Z", "type": "commit"}, {"oid": "3b632cd8e96793f8d6b99cef7be0aab9808ebff8", "url": "https://github.com/vespa-engine/vespa/commit/3b632cd8e96793f8d6b99cef7be0aab9808ebff8", "message": "Throw NotFoundException when active session not found", "committedDate": "2020-08-28T08:32:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1Mjc4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479052786", "bodyText": "Would like a name change here, to deactivated()", "author": "jonmv", "createdAt": "2020-08-28T09:55:49Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSession.java", "diffHunk": "@@ -26,95 +15,46 @@\n  */\n public class RemoteSession extends Session {\n \n-    private static final Logger log = Logger.getLogger(RemoteSession.class.getName());\n-    private ApplicationSet applicationSet = null;\n-    private final ActivatedModelsBuilder applicationLoader;\n-    private final Clock clock;\n+    private final Optional<ApplicationSet> applicationSet;\n \n     /**\n-     * Creates a session. This involves loading the application, validating it and distributing it.\n+     * Creates a remote session, no application set loaded\n      *\n      * @param tenant The name of the tenant creating session\n      * @param sessionId The session id for this session.\n-     * @param componentRegistry a registry of global components\n      * @param zooKeeperClient a SessionZooKeeperClient instance\n      */\n     public RemoteSession(TenantName tenant,\n                          long sessionId,\n-                         GlobalComponentRegistry componentRegistry,\n                          SessionZooKeeperClient zooKeeperClient) {\n-        super(tenant, sessionId, zooKeeperClient);\n-        this.applicationLoader = new ActivatedModelsBuilder(tenant, sessionId, zooKeeperClient, componentRegistry);\n-        this.clock = componentRegistry.getClock();\n-    }\n-\n-    void prepare() {\n-        Curator.CompletionWaiter waiter = sessionZooKeeperClient.getPrepareWaiter();\n-        ensureApplicationLoaded();\n-        notifyCompletion(waiter);\n+        this(tenant, sessionId, zooKeeperClient, Optional.empty());\n     }\n \n-    private ApplicationSet loadApplication() {\n-        ApplicationPackage applicationPackage = sessionZooKeeperClient.loadApplicationPackage();\n-\n-        // Read hosts allocated on the config server instance which created this\n-        Optional<AllocatedHosts> allocatedHosts = applicationPackage.getAllocatedHosts();\n-\n-        return ApplicationSet.fromList(applicationLoader.buildModels(getApplicationId(),\n-                                                                     sessionZooKeeperClient.readDockerImageRepository(),\n-                                                                     sessionZooKeeperClient.readVespaVersion(),\n-                                                                     applicationPackage,\n-                                                                     new SettableOptional<>(allocatedHosts),\n-                                                                     clock.instant()));\n+    /**\n+     * Creates a remote session, with application set\n+     *\n+     * @param tenant The name of the tenant creating session\n+     * @param sessionId The session id for this session.\n+     * @param zooKeeperClient a SessionZooKeeperClient instance\n+     */\n+    public RemoteSession(TenantName tenant,\n+                         long sessionId,\n+                         SessionZooKeeperClient zooKeeperClient,\n+                         Optional<ApplicationSet> applicationSet) {\n+        super(tenant, sessionId, zooKeeperClient);\n+        this.applicationSet = applicationSet;\n     }\n \n-    public synchronized ApplicationSet ensureApplicationLoaded() {\n-        return applicationSet == null ? applicationSet = loadApplication() : applicationSet;\n+    Optional<ApplicationSet> applicationSet() {\n+        return applicationSet;\n     }\n \n-    public synchronized void deactivate() {\n-        applicationSet = null;\n+    public synchronized RemoteSession deactivate() {", "originalCommit": "c4dc7b37309d87a5cd9ef13891a29132101017c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEwNzY5OA==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479107698", "bodyText": "\ud83d\udc4d", "author": "hmusum", "createdAt": "2020-08-28T10:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1Mjc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "96a55f7d48380e4e42c7383baa2eacf15ec973e4", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSession.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSession.java\nindex a00c0f6043..ed401e65f2 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSession.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/RemoteSession.java\n\n@@ -49,7 +49,7 @@ public class RemoteSession extends Session {\n         return applicationSet;\n     }\n \n-    public synchronized RemoteSession deactivate() {\n+    public synchronized RemoteSession deactivated() {\n         return new RemoteSession(tenant, sessionId, sessionZooKeeperClient, Optional.empty());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1Njg5NQ==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479056895", "bodyText": "addSession should perhaps also be named putSession?", "author": "jonmv", "createdAt": "2020-08-28T09:59:09Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -275,13 +280,25 @@ public int deleteExpiredRemoteSessions(Clock clock, Duration expiryTime) {\n             if (session.getStatus() == Session.Status.ACTIVATE) continue;\n             if (sessionHasExpired(session.getCreateTime(), expiryTime, clock)) {\n                 log.log(Level.FINE, \"Remote session \" + sessionId + \" for \" + tenantName + \" has expired, deleting it\");\n-                session.delete();\n+                deleteSession(session);\n                 deleted++;\n             }\n         }\n         return deleted;\n     }\n \n+\n+    public void deactivate(RemoteSession remoteSession) {\n+        remoteSessionCache.addSession(remoteSession.deactivate());", "originalCommit": "c4dc7b37309d87a5cd9ef13891a29132101017c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEwNzU5OA==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479107598", "bodyText": "Agreed, will fix", "author": "hmusum", "createdAt": "2020-08-28T10:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA1Njg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "96a55f7d48380e4e42c7383baa2eacf15ec973e4", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\nindex f5a19e37d2..2a3a0d5227 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n\n@@ -287,9 +287,8 @@ public class SessionRepository {\n         return deleted;\n     }\n \n-\n     public void deactivate(RemoteSession remoteSession) {\n-        remoteSessionCache.addSession(remoteSession.deactivate());\n+        remoteSessionCache.putSession(remoteSession.deactivated());\n     }\n \n     public void deleteSession(RemoteSession session) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2MDE0MQ==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479060141", "bodyText": "Shouldn't this also be deactivate(remoteSession)? This does nothing now.", "author": "jonmv", "createdAt": "2020-08-28T10:01:45Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -358,27 +375,19 @@ void activate(RemoteSession session) {\n         long sessionId = session.getSessionId();\n         Curator.CompletionWaiter waiter = createSessionZooKeeperClient(sessionId).getActiveWaiter();\n         log.log(Level.FINE, () -> session.logPre() + \"Getting session from repo: \" + sessionId);\n-        ApplicationSet app = session.ensureApplicationLoaded();\n+        ApplicationSet app = ensureApplicationLoaded(session);\n         log.log(Level.FINE, () -> session.logPre() + \"Reloading config for \" + sessionId);\n         applicationRepo.reloadConfig(app);\n         log.log(Level.FINE, () -> session.logPre() + \"Notifying \" + waiter);\n-        session.notifyCompletion(waiter);\n+        notifyCompletion(waiter, session);\n         log.log(Level.INFO, session.logPre() + \"Session activated: \" + sessionId);\n     }\n \n-    public void deactivate(RemoteSession remoteSession) {\n-        remoteSession.deactivate();\n-    }\n-\n-    public void delete(RemoteSession remoteSession, Optional<LocalSession> localSession) {\n+    public void deleteSession(RemoteSession remoteSession, Optional<LocalSession> localSession) {\n         localSession.ifPresent(this::deleteLocalSession);\n         remoteSession.deactivate();", "originalCommit": "c4dc7b37309d87a5cd9ef13891a29132101017c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTExMTA1NQ==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479111055", "bodyText": "Yes, thanks", "author": "hmusum", "createdAt": "2020-08-28T10:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2MDE0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "96a55f7d48380e4e42c7383baa2eacf15ec973e4", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\nindex f5a19e37d2..2a3a0d5227 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n\n@@ -385,7 +384,7 @@ public class SessionRepository {\n \n     public void deleteSession(RemoteSession remoteSession, Optional<LocalSession> localSession) {\n         localSession.ifPresent(this::deleteLocalSession);\n-        remoteSession.deactivate();\n+        deactivate(remoteSession);\n     }\n \n     boolean distributeApplicationPackage() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2NjU1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479066557", "bodyText": "Why session.getSessionZooKeeperClient() here, and createSessionZooKeeperClient(session.getSessionId()) elsewhere?", "author": "jonmv", "createdAt": "2020-08-28T10:07:00Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -394,13 +403,84 @@ private void loadSessionIfActive(RemoteSession session) {\n         for (ApplicationId applicationId : applicationRepo.activeApplications()) {\n             if (applicationRepo.requireActiveSessionOf(applicationId) == session.getSessionId()) {\n                 log.log(Level.FINE, () -> \"Found active application for session \" + session.getSessionId() + \" , loading it\");\n-                applicationRepo.reloadConfig(session.ensureApplicationLoaded());\n+                applicationRepo.reloadConfig(ensureApplicationLoaded(session));\n                 log.log(Level.INFO, session.logPre() + \"Application activated successfully: \" + applicationId + \" (generation \" + session.getSessionId() + \")\");\n                 return;\n             }\n         }\n     }\n \n+    void prepareRemoteSession(RemoteSession session) {\n+        SessionZooKeeperClient sessionZooKeeperClient = createSessionZooKeeperClient(session.getSessionId());\n+        Curator.CompletionWaiter waiter = sessionZooKeeperClient.getPrepareWaiter();\n+        ensureApplicationLoaded(session);\n+        notifyCompletion(waiter, session);\n+    }\n+\n+    public synchronized ApplicationSet ensureApplicationLoaded(RemoteSession session) {\n+        Optional<ApplicationSet> applicationSet = session.applicationSet();\n+        if (applicationSet.isPresent()) {\n+            return applicationSet.get();\n+        }\n+\n+        ApplicationSet newApplicationSet = loadApplication(session);\n+        RemoteSession newSession = new RemoteSession(session.getTenantName(),\n+                                    session.getSessionId(),\n+                                    session.getSessionZooKeeperClient(),\n+                                    Optional.of(newApplicationSet));\n+        remoteSessionCache.addSession(newSession);\n+        return newApplicationSet;\n+    }\n+\n+    void confirmUpload(RemoteSession session) {\n+        Curator.CompletionWaiter waiter = session.getSessionZooKeeperClient().getUploadWaiter();", "originalCommit": "c4dc7b37309d87a5cd9ef13891a29132101017c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEwNzI2NQ==", "url": "https://github.com/vespa-engine/vespa/pull/14190#discussion_r479107265", "bodyText": "Yes, both are used, I want to clean up that, will do in a later PR", "author": "hmusum", "createdAt": "2020-08-28T10:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2NjU1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "96a55f7d48380e4e42c7383baa2eacf15ec973e4", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\nindex f5a19e37d2..2a3a0d5227 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java\n\n@@ -428,7 +427,7 @@ public class SessionRepository {\n                                     session.getSessionId(),\n                                     session.getSessionZooKeeperClient(),\n                                     Optional.of(newApplicationSet));\n-        remoteSessionCache.addSession(newSession);\n+        remoteSessionCache.putSession(newSession);\n         return newApplicationSet;\n     }\n \n"}}, {"oid": "96a55f7d48380e4e42c7383baa2eacf15ec973e4", "url": "https://github.com/vespa-engine/vespa/commit/96a55f7d48380e4e42c7383baa2eacf15ec973e4", "message": "Changes after code review", "committedDate": "2020-08-28T10:58:22Z", "type": "commit"}]}