{"pr_number": 15399, "pr_title": "Jonmv/throw during prepare with disallowed config change actions", "pr_createdAt": "2020-11-19T20:38:57Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15399", "timeline": [{"oid": "2a00cc99b5a0cc92d286725af22fe46d0aa00142", "url": "https://github.com/vespa-engine/vespa/commit/2a00cc99b5a0cc92d286725af22fe46d0aa00142", "message": "Use proper ValidationId instead of their String names in ConfigChangeAction subclasses", "committedDate": "2020-11-19T18:30:40Z", "type": "commit"}, {"oid": "11e4907006c94bdd761e8f37bc9d006ae5b7bb40", "url": "https://github.com/vespa-engine/vespa/commit/11e4907006c94bdd761e8f37bc9d006ae5b7bb40", "message": "Model disallowable actions separately, and collect and throw these in validation", "committedDate": "2020-11-19T20:38:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1MjYwNQ==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527452605", "bodyText": "Given this usage, I think it would be simpler to just put validationId on ConfigChangeAction as an Optional.", "author": "bratseth", "createdAt": "2020-11-20T06:14:39Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java", "diffHunk": "@@ -99,9 +105,17 @@\n                 new ContainerRestartValidator(),\n                 new NodeResourceChangeValidator()\n         };\n-        return Arrays.stream(validators)\n-                .flatMap(v -> v.validate(currentModel, nextModel, overrides, now).stream())\n-                .collect(toList());\n+        List<ConfigChangeAction> actions = Arrays.stream(validators)\n+                                                 .flatMap(v -> v.validate(currentModel, nextModel, overrides, now).stream())\n+                                                 .collect(toList());\n+        overrides.invalid(actions.stream()\n+                                 .filter(DisallowableConfigChangeAction.class::isInstance)", "originalCommit": "11e4907006c94bdd761e8f37bc9d006ae5b7bb40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4MDc0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527480747", "bodyText": "I suppose that's equally not super-obvious, but good enough, and a bit simpler, yes. Can't even remember why I didn't do this. Probably no good reason. It's \"you must provide a validatoin id for implementations which may block deployment\", in any case.", "author": "jonmv", "createdAt": "2020-11-20T07:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1MjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4NTA2Mg==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527485062", "bodyText": "Ah, so it's because making it optional makes you have to .get() or .orElseThrow() to get the name() in the child interfaces, which is ugly. It's clearer with a separate interface, although more verbose.", "author": "jonmv", "createdAt": "2020-11-20T07:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1MjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUxNzM2OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527517369", "bodyText": "Should just remove the allowed() altogether, since it no longer serves a purpose with these changes. Guess there'' be some more work here, then ...", "author": "jonmv", "createdAt": "2020-11-20T08:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1MjYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "335f9f2d38db46e94185132ad9b6a9aac0475379", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\nindex 355391a485..533d0034ae 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\n\n@@ -108,12 +109,14 @@ public class Validation {\n         List<ConfigChangeAction> actions = Arrays.stream(validators)\n                                                  .flatMap(v -> v.validate(currentModel, nextModel, overrides, now).stream())\n                                                  .collect(toList());\n-        overrides.invalid(actions.stream()\n-                                 .filter(DisallowableConfigChangeAction.class::isInstance)\n-                                 .map(DisallowableConfigChangeAction.class::cast)\n-                                 .filter(action -> ! action.allowed())\n-                                 .collect(groupingBy(DisallowableConfigChangeAction::validationId,\n-                                                     mapping(ConfigChangeAction::getMessage, toList()))),\n+\n+        Stream<DisallowableConfigChangeAction> disallowedActions = actions.stream()\n+                                                                          .filter(DisallowableConfigChangeAction.class::isInstance)\n+                                                                          .map(DisallowableConfigChangeAction.class::cast)\n+                                                                          .filter(action -> ! action.allowed());\n+\n+        overrides.invalid(disallowedActions.collect(groupingBy(DisallowableConfigChangeAction::validationId,\n+                                                               mapping(ConfigChangeAction::getMessage, toList()))),\n                           now);\n         return actions;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1NTk4NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527455985", "bodyText": "Just to repeat my standard comment to your code: These stream statements that does everything are like a long sentence with lots of subsentences. It's easier to read shorter sentences, especially since it makes you name the thing they produce.", "author": "bratseth", "createdAt": "2020-11-20T06:18:21Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java", "diffHunk": "@@ -99,9 +105,17 @@\n                 new ContainerRestartValidator(),\n                 new NodeResourceChangeValidator()\n         };\n-        return Arrays.stream(validators)\n-                .flatMap(v -> v.validate(currentModel, nextModel, overrides, now).stream())\n-                .collect(toList());\n+        List<ConfigChangeAction> actions = Arrays.stream(validators)", "originalCommit": "11e4907006c94bdd761e8f37bc9d006ae5b7bb40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4MTk0Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527481946", "bodyText": "But.\nI.\nLike.\nLong.\nSentences.\nI appreciate your comment on this; you're probably not the only one, so I will try to adjust for readability.", "author": "jonmv", "createdAt": "2020-11-20T07:10:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1NTk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "335f9f2d38db46e94185132ad9b6a9aac0475379", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\nindex 355391a485..533d0034ae 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/Validation.java\n\n@@ -108,12 +109,14 @@ public class Validation {\n         List<ConfigChangeAction> actions = Arrays.stream(validators)\n                                                  .flatMap(v -> v.validate(currentModel, nextModel, overrides, now).stream())\n                                                  .collect(toList());\n-        overrides.invalid(actions.stream()\n-                                 .filter(DisallowableConfigChangeAction.class::isInstance)\n-                                 .map(DisallowableConfigChangeAction.class::cast)\n-                                 .filter(action -> ! action.allowed())\n-                                 .collect(groupingBy(DisallowableConfigChangeAction::validationId,\n-                                                     mapping(ConfigChangeAction::getMessage, toList()))),\n+\n+        Stream<DisallowableConfigChangeAction> disallowedActions = actions.stream()\n+                                                                          .filter(DisallowableConfigChangeAction.class::isInstance)\n+                                                                          .map(DisallowableConfigChangeAction.class::cast)\n+                                                                          .filter(action -> ! action.allowed());\n+\n+        overrides.invalid(disallowedActions.collect(groupingBy(DisallowableConfigChangeAction::validationId,\n+                                                               mapping(ConfigChangeAction::getMessage, toList()))),\n                           now);\n         return actions;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ1Njc2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15399#discussion_r527456761", "bodyText": "\ud83d\udc4d", "author": "bratseth", "createdAt": "2020-11-20T06:19:11Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/VespaRefeedAction.java", "diffHunk": "@@ -22,37 +23,36 @@\n      * the validation ids belong to the Vespa model while these names are exposed to the config server,\n      * which is model version independent.\n      */\n-    private final String name;\n-\n+    private final ValidationId validationId;\n     private final String documentType;\n     private final boolean allowed;\n \n-    private VespaRefeedAction(ClusterSpec.Id id, String name, String message, List<ServiceInfo> services, String documentType, boolean allowed) {\n+    private VespaRefeedAction(ClusterSpec.Id id, ValidationId validationId, String message, List<ServiceInfo> services, String documentType, boolean allowed) {", "originalCommit": "11e4907006c94bdd761e8f37bc9d006ae5b7bb40", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28ebee04d75871c2e268bfd8375b02759ca52d4e", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/VespaRefeedAction.java b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/VespaRefeedAction.java\nindex d4392d5d14..c7e09845b0 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/VespaRefeedAction.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/VespaRefeedAction.java\n\n@@ -52,7 +53,7 @@ public class VespaRefeedAction extends VespaConfigChangeAction implements Config\n     }\n \n     @Override\n-    public ValidationId validationId() { return validationId; }\n+    public Optional<ValidationId> validationId() { return Optional.of(validationId); }\n \n     @Override\n     public String getDocumentType() { return documentType; }\n"}}, {"oid": "335f9f2d38db46e94185132ad9b6a9aac0475379", "url": "https://github.com/vespa-engine/vespa/commit/335f9f2d38db46e94185132ad9b6a9aac0475379", "message": "Break long stream statement to provide intermediary name", "committedDate": "2020-11-20T07:22:17Z", "type": "commit"}, {"oid": "b7835ceb503084f32cb09875b1e6243bed81e463", "url": "https://github.com/vespa-engine/vespa/commit/b7835ceb503084f32cb09875b1e6243bed81e463", "message": "Update abi spec once more", "committedDate": "2020-11-20T07:23:20Z", "type": "commit"}, {"oid": "28ebee04d75871c2e268bfd8375b02759ca52d4e", "url": "https://github.com/vespa-engine/vespa/commit/28ebee04d75871c2e268bfd8375b02759ca52d4e", "message": "Add Optional<ValidationId> to ConfigActionChange and use to validate actions", "committedDate": "2020-11-20T11:42:47Z", "type": "commit"}, {"oid": "e6f880fec472614dc77b07a25799346bdec5e6ff", "url": "https://github.com/vespa-engine/vespa/commit/e6f880fec472614dc77b07a25799346bdec5e6ff", "message": "Remove \"allowed\" from config change actions (+ wiring) \u2014\u00a0allowed if not thrown", "committedDate": "2020-11-20T13:10:29Z", "type": "commit"}]}