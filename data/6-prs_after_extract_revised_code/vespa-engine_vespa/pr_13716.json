{"pr_number": 13716, "pr_title": "Avoid going out of memory when deleting files", "pr_createdAt": "2020-06-26T06:26:46Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13716", "timeline": [{"oid": "3107db1ddeba678b1fa9d8523d96b36b8f32003a", "url": "https://github.com/vespa-engine/vespa/commit/3107db1ddeba678b1fa9d8523d96b36b8f32003a", "message": "Avoid going out of memory when deleting files", "committedDate": "2020-06-26T06:25:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5Mzk5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/13716#discussion_r445993999", "bodyText": "Why not use a for loop on line 118 instead to avoid this hack?", "author": "bratseth", "createdAt": "2020-06-26T06:35:02Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java", "diffHunk": "@@ -110,17 +110,19 @@ public FileFinder maxDepth(int maxDepth) {\n      * @return true iff anything was matched and deleted\n      */\n     public boolean deleteRecursively(TaskContext context) {\n+        final int limit = 20;\n+        int[] numDeleted = { 0 };", "originalCommit": "3107db1ddeba678b1fa9d8523d96b36b8f32003a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NjYzNg==", "url": "https://github.com/vespa-engine/vespa/pull/13716#discussion_r445996636", "bodyText": "At its core, this class only has a way a method to run a lambda on a matching file via java.nio.file.Files::walkFileTree, I don't see any simple way to create an Iterable out of that?", "author": "freva", "createdAt": "2020-06-26T06:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5Mzk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjAwNQ==", "url": "https://github.com/vespa-engine/vespa/pull/13716#discussion_r446002005", "bodyText": "Ah, right. Didn't look at the context. Then I suggest adding a comment, or using MutableInteger.", "author": "bratseth", "createdAt": "2020-06-26T06:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5Mzk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "dd5396dbf99b414b480eb32f7f26014f7f064bf4", "chunk": "diff --git a/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java b/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\nindex d3ff1b41a3..65606f85d8 100644\n--- a/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\n+++ b/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\n\n@@ -110,18 +110,18 @@ public class FileFinder {\n      * @return true iff anything was matched and deleted\n      */\n     public boolean deleteRecursively(TaskContext context) {\n-        final int limit = 20;\n+        final int maxNumberOfDeletedPathsToLog = 20;\n         int[] numDeleted = { 0 };\n         List<Path> deletedPaths = new ArrayList<>();\n \n         try {\n             forEach(attributes -> {\n                 if (attributes.unixPath().deleteRecursively()) {\n-                    if (numDeleted[0]++ <= limit) deletedPaths.add(attributes.path());\n+                    if (numDeleted[0]++ <= maxNumberOfDeletedPathsToLog) deletedPaths.add(attributes.path());\n                 }\n             });\n         } finally {\n-            if (numDeleted[0] > limit) {\n+            if (numDeleted[0] > maxNumberOfDeletedPathsToLog) {\n                 context.log(logger, \"Deleted \" + numDeleted[0] + \" paths under \" + basePath);\n             } else if (deletedPaths.size() > 0) {\n                 List<Path> paths = deletedPaths.stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDIxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/13716#discussion_r445994211", "bodyText": "Maybe worth a comment saying why there is a limit?", "author": "bratseth", "createdAt": "2020-06-26T06:35:40Z", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java", "diffHunk": "@@ -110,17 +110,19 @@ public FileFinder maxDepth(int maxDepth) {\n      * @return true iff anything was matched and deleted\n      */\n     public boolean deleteRecursively(TaskContext context) {\n+        final int limit = 20;", "originalCommit": "3107db1ddeba678b1fa9d8523d96b36b8f32003a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NzY1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13716#discussion_r445997653", "bodyText": "Renamed the variable to maxNumberOfDeletedPathsToLog", "author": "freva", "createdAt": "2020-06-26T06:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "dd5396dbf99b414b480eb32f7f26014f7f064bf4", "chunk": "diff --git a/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java b/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\nindex d3ff1b41a3..65606f85d8 100644\n--- a/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\n+++ b/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/task/util/file/FileFinder.java\n\n@@ -110,18 +110,18 @@ public class FileFinder {\n      * @return true iff anything was matched and deleted\n      */\n     public boolean deleteRecursively(TaskContext context) {\n-        final int limit = 20;\n+        final int maxNumberOfDeletedPathsToLog = 20;\n         int[] numDeleted = { 0 };\n         List<Path> deletedPaths = new ArrayList<>();\n \n         try {\n             forEach(attributes -> {\n                 if (attributes.unixPath().deleteRecursively()) {\n-                    if (numDeleted[0]++ <= limit) deletedPaths.add(attributes.path());\n+                    if (numDeleted[0]++ <= maxNumberOfDeletedPathsToLog) deletedPaths.add(attributes.path());\n                 }\n             });\n         } finally {\n-            if (numDeleted[0] > limit) {\n+            if (numDeleted[0] > maxNumberOfDeletedPathsToLog) {\n                 context.log(logger, \"Deleted \" + numDeleted[0] + \" paths under \" + basePath);\n             } else if (deletedPaths.size() > 0) {\n                 List<Path> paths = deletedPaths.stream()\n"}}, {"oid": "dd5396dbf99b414b480eb32f7f26014f7f064bf4", "url": "https://github.com/vespa-engine/vespa/commit/dd5396dbf99b414b480eb32f7f26014f7f064bf4", "message": "Rename variable to make purpose clearer", "committedDate": "2020-06-26T06:44:46Z", "type": "commit"}, {"oid": "22141cff2b94755a2f973ef221c3ccb3e34c6b74", "url": "https://github.com/vespa-engine/vespa/commit/22141cff2b94755a2f973ef221c3ccb3e34c6b74", "message": "Use mutable integer instead", "committedDate": "2020-06-26T07:00:15Z", "type": "commit"}]}