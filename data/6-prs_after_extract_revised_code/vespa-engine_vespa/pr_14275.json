{"pr_number": 14275, "pr_title": "Bjorncs/feed threadpool feature flag", "pr_createdAt": "2020-09-03T14:23:58Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14275", "timeline": [{"oid": "20a2be2b64e591680305d322a14f56e3d2d06d91", "url": "https://github.com/vespa-engine/vespa/commit/20a2be2b64e591680305d322a14f56e3d2d06d91", "message": "Change feature flag to control both core and max pool size\n\nChange default multiplier from 1 to 4.\nHardcode core pool size to be half of max size.", "committedDate": "2020-09-03T13:57:27Z", "type": "commit"}, {"oid": "81ed9be49a35995f58e4172d92621c586abf9fdf", "url": "https://github.com/vespa-engine/vespa/commit/81ed9be49a35995f58e4172d92621c586abf9fdf", "message": "Workaround for bad JDK detection in IntelliJ", "committedDate": "2020-09-03T13:57:27Z", "type": "commit"}, {"oid": "d9e20a94c5680cc90d31f4eeee5b3e7fee410495", "url": "https://github.com/vespa-engine/vespa/commit/d9e20a94c5680cc90d31f4eeee5b3e7fee410495", "message": "Inject container threadpool directly to FeedHandler and RestApi", "committedDate": "2020-09-03T14:23:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4OTQwOA==", "url": "https://github.com/vespa-engine/vespa/pull/14275#discussion_r483489408", "bodyText": "Factory -> Factor ?", "author": "baldersheim", "createdAt": "2020-09-04T09:05:12Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/clients/ContainerDocumentApi.java", "diffHunk": "@@ -93,29 +92,36 @@ private static ThreadPoolExecutorComponent newExecutorComponent(String name, Con\n         return handler;\n     }\n \n-    private static int maxPoolSize(ContainerCluster<?> cluster) {\n+    private static int maxPoolSize(ContainerCluster<?> cluster, Options options) {\n+        double vcpu = vcpu(cluster);\n+        if (vcpu == 0) return FALLBACK_MAX_POOL_SIZE;\n+        return Math.max(2, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactory));\n+    }\n+\n+    private static int corePoolSize(ContainerCluster<?> cluster, Options options) {\n+        double vcpu = vcpu(cluster);\n+        if (vcpu == 0) return FALLBACK_CORE_POOL_SIZE;\n+        return Math.max(1, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactory * 0.5));\n+    }\n+\n+    private static double vcpu(ContainerCluster<?> cluster) {\n         List<Double> vcpus = cluster.getContainers().stream()\n                 .filter(c -> c.getHostResource() != null && c.getHostResource().realResources() != null)\n                 .map(c -> c.getHostResource().realResources().vcpu())\n                 .distinct()\n                 .collect(Collectors.toList());\n         // We can only use host resource for calculation if all container nodes in the cluster are homogeneous (in terms of vcpu)\n-        if (vcpus.size() != 1 || vcpus.get(0) == 0) return FALLBACK_MAX_POOL_SIZE;\n-        return Math.max(2, (int)Math.ceil(vcpus.get(0)));\n-    }\n-\n-    private static int corePoolSize(int maxPoolSize, Options options) {\n-        if (maxPoolSize == FALLBACK_MAX_POOL_SIZE) return FALLBACK_CORE_POOL_SIZE;\n-        return Math.max(1, (int)Math.ceil(options.feedCoreThreadPoolSizeFactor * maxPoolSize));\n+        if (vcpus.size() != 1 || vcpus.get(0) == 0) return 0;\n+        return vcpus.get(0);\n     }\n \n     public static final class Options {\n         private final Collection<String> bindings;\n-        private final double feedCoreThreadPoolSizeFactor;\n+        private final double feedThreadPoolSizeFactory;", "originalCommit": "d9e20a94c5680cc90d31f4eeee5b3e7fee410495", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1fc451831dd51330d29819a094baee403bcdb35", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/clients/ContainerDocumentApi.java b/config-model/src/main/java/com/yahoo/vespa/model/clients/ContainerDocumentApi.java\nindex f5eebc5be1..9012cc2aba 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/clients/ContainerDocumentApi.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/clients/ContainerDocumentApi.java\n\n@@ -95,13 +95,13 @@ public class ContainerDocumentApi {\n     private static int maxPoolSize(ContainerCluster<?> cluster, Options options) {\n         double vcpu = vcpu(cluster);\n         if (vcpu == 0) return FALLBACK_MAX_POOL_SIZE;\n-        return Math.max(2, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactory));\n+        return Math.max(2, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactor));\n     }\n \n     private static int corePoolSize(ContainerCluster<?> cluster, Options options) {\n         double vcpu = vcpu(cluster);\n         if (vcpu == 0) return FALLBACK_CORE_POOL_SIZE;\n-        return Math.max(1, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactory * 0.5));\n+        return Math.max(1, (int)Math.ceil(vcpu * options.feedThreadPoolSizeFactor * 0.5));\n     }\n \n     private static double vcpu(ContainerCluster<?> cluster) {\n"}}, {"oid": "b1fc451831dd51330d29819a094baee403bcdb35", "url": "https://github.com/vespa-engine/vespa/commit/b1fc451831dd51330d29819a094baee403bcdb35", "message": "Fix typo in variable names", "committedDate": "2020-09-04T09:14:53Z", "type": "commit"}]}