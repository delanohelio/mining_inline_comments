{"pr_number": 15629, "pr_title": "Bratseth/reject cell typed tensor queries", "pr_createdAt": "2020-12-03T09:25:20Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15629", "timeline": [{"oid": "868a770f58ff5616489886091d944a04e698dda5", "url": "https://github.com/vespa-engine/vespa/commit/868a770f58ff5616489886091d944a04e698dda5", "message": "Simplify", "committedDate": "2020-12-03T09:16:37Z", "type": "commit"}, {"oid": "f0ef833df79cd84148d21679f3b5660bbe15cc60", "url": "https://github.com/vespa-engine/vespa/commit/f0ef833df79cd84148d21679f3b5660bbe15cc60", "message": "Handle tensor types with cell type parameter", "committedDate": "2020-12-03T09:22:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTA2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535009061", "bodyText": "Consider simplifying query to only contain mytensor1.", "author": "geirst", "createdAt": "2020-12-03T09:34:56Z", "path": "container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java", "diffHunk": "@@ -33,12 +30,21 @@ public void testValidation() {\n         new QueryValidator().search(new Query(\"?query=mystring:foo\"), execution);\n \n         try {\n-            new QueryValidator().search(new Query(\"?query=mytensor:foo\"), execution);\n-            fail(\"Excpected validation error\");\n+            new QueryValidator().search(new Query(\"?query=sddocname%3Aproduct%20lfmModel25KeysV0%3A9%2A%20mytensor1%3A%3E0\"), execution);", "originalCommit": "f0ef833df79cd84148d21679f3b5660bbe15cc60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxMTk4Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535011983", "bodyText": "done, thanks", "author": "bratseth", "createdAt": "2020-12-03T09:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1ea343049eb42da9fe7face0193cb0626c14f811", "chunk": "diff --git a/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java b/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\nindex e93921af98..543c880e52 100644\n--- a/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\n+++ b/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\n\n@@ -30,7 +30,7 @@ public class QueryValidatorTestCase {\n         new QueryValidator().search(new Query(\"?query=mystring:foo\"), execution);\n \n         try {\n-            new QueryValidator().search(new Query(\"?query=sddocname%3Aproduct%20lfmModel25KeysV0%3A9%2A%20mytensor1%3A%3E0\"), execution);\n+            new QueryValidator().search(new Query(\"?query=mytensor1:foo\"), execution);\n             fail(\"Expected validation error\");\n         }\n         catch (IllegalArgumentException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTQxMg==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535009412", "bodyText": "Consider simplifying query to only contain mytensor2.", "author": "geirst", "createdAt": "2020-12-03T09:35:11Z", "path": "container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java", "diffHunk": "@@ -33,12 +30,21 @@ public void testValidation() {\n         new QueryValidator().search(new Query(\"?query=mystring:foo\"), execution);\n \n         try {\n-            new QueryValidator().search(new Query(\"?query=mytensor:foo\"), execution);\n-            fail(\"Excpected validation error\");\n+            new QueryValidator().search(new Query(\"?query=sddocname%3Aproduct%20lfmModel25KeysV0%3A9%2A%20mytensor1%3A%3E0\"), execution);\n+            fail(\"Expected validation error\");\n         }\n         catch (IllegalArgumentException e) {\n             // success\n-            assertEquals(\"Cannot search 'mytensor': It is a tensor field\", e.getMessage());\n+            assertEquals(\"Cannot search 'mytensor1': It is a tensor field\", e.getMessage());\n+        }\n+\n+        try {\n+            new QueryValidator().search(new Query(\"?query=sddocname%3Aproduct%20lfmModel25KeysV0%3A9%2A%20mytensor2%3A%3E0\"), execution);", "originalCommit": "f0ef833df79cd84148d21679f3b5660bbe15cc60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxMTkwOA==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535011908", "bodyText": "\ud83d\udc4d", "author": "jonmv", "createdAt": "2020-12-03T09:37:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTQxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxMjA5Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535012093", "bodyText": "done, thanks", "author": "bratseth", "createdAt": "2020-12-03T09:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTQxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxMjYxMg==", "url": "https://github.com/vespa-engine/vespa/pull/15629#discussion_r535012612", "bodyText": "Reason for complicated query perhaps to verify nothing's lost?", "author": "jonmv", "createdAt": "2020-12-03T09:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwOTQxMg=="}], "type": "inlineReview", "revised_code": {"commit": "1ea343049eb42da9fe7face0193cb0626c14f811", "chunk": "diff --git a/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java b/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\nindex e93921af98..543c880e52 100644\n--- a/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\n+++ b/container-search/src/test/java/com/yahoo/search/searchers/test/QueryValidatorTestCase.java\n\n@@ -30,7 +30,7 @@ public class QueryValidatorTestCase {\n         new QueryValidator().search(new Query(\"?query=mystring:foo\"), execution);\n \n         try {\n-            new QueryValidator().search(new Query(\"?query=sddocname%3Aproduct%20lfmModel25KeysV0%3A9%2A%20mytensor1%3A%3E0\"), execution);\n+            new QueryValidator().search(new Query(\"?query=mytensor1:foo\"), execution);\n             fail(\"Expected validation error\");\n         }\n         catch (IllegalArgumentException e) {\n"}}, {"oid": "1ea343049eb42da9fe7face0193cb0626c14f811", "url": "https://github.com/vespa-engine/vespa/commit/1ea343049eb42da9fe7face0193cb0626c14f811", "message": "Simplified query strings", "committedDate": "2020-12-03T09:37:02Z", "type": "commit"}]}