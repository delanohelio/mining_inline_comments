{"pr_number": 12314, "pr_title": "Define completeness of SuperModel and DuperModel", "pr_createdAt": "2020-02-23T17:14:48Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12314", "timeline": [{"oid": "988131792a9bf0cd22072622ec3ffd2d62efa62d", "url": "https://github.com/vespa-engine/vespa/commit/988131792a9bf0cd22072622ec3ffd2d62efa62d", "message": "Define completeness of SuperModel and DuperModel\n\nIn order for Orchestrator to remove application data from ZooKeeper, it must\nknow which applications do NOT exist. Since the duper model starts with 0\napplications, always, the only way of knowing what applications do not exist is\nfor the bootstrap code to notify the super model/duper model when bootstrap is\ncomplete. There are 2 sources of applications that must signal completeness:\n\n - The super model, once all applications have been redeployed in\n   ConfigServerBootstrap.\n - The infrastructure application, in the InfrastructureProvisioner the first\n   time it runs.", "committedDate": "2020-02-23T17:11:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNDU0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383024547", "bodyText": "What if activate() throws?", "author": "freva", "createdAt": "2020-02-23T17:51:16Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java", "diffHunk": "@@ -51,9 +51,19 @@ public InfraDeployerImpl(NodeRepository nodeRepository, Provisioner provisioner,\n     }\n \n     @Override\n-    public Map<ApplicationId, Deployment> getSupportedInfraDeployments() {\n-        return duperModel.getSupportedInfraApplications().stream()\n-                .collect(Collectors.toMap(InfraApplicationApi::getApplicationId, InfraDeployment::new));\n+    public void activateAllSupportedInfraApplications() {\n+        duperModel.getSupportedInfraApplications().forEach(api -> {\n+            var application = api.getApplicationId();\n+            var deployment = new InfraDeployment(api);\n+            try {\n+                deployment.activate();\n+            } catch (RuntimeException e) {\n+                logger.log(LogLevel.INFO, \"Failed to activate \" + application, e);\n+                // loop around to activate the next application\n+            }\n+        });\n+\n+        duperModel.infraApplicationsIsNowComplete();", "originalCommit": "988131792a9bf0cd22072622ec3ffd2d62efa62d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyODk3Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383028977", "bodyText": "I'm not sure. On one hand we do not want to mark the duper model as complete. But on the other hand, it would be wrong to start the config server without the required infra apps. But failing construction might also be a bit dangerous if the failure is triggered by zk data it is hard to inspect as the zk server is brought down if the config server goes down.\nSo we should trigger deploy in InfrastructureProvisioner constructor and let RuntimeException propagate there (but not in maintain()) after a delay of say 1m, to fail config server startup?", "author": "hakonhall", "createdAt": "2020-02-23T18:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNDU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "515c4ff32934e98fef121c7388f2f3703f09d897", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java\nindex be42d3aed8..1086a3a7cd 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java\n\n@@ -51,7 +50,7 @@ public class InfraDeployerImpl implements InfraDeployer {\n     }\n \n     @Override\n-    public void activateAllSupportedInfraApplications() {\n+    public void activateAllSupportedInfraApplications(boolean propagateException) {\n         duperModel.getSupportedInfraApplications().forEach(api -> {\n             var application = api.getApplicationId();\n             var deployment = new InfraDeployment(api);\n"}}, {"oid": "515c4ff32934e98fef121c7388f2f3703f09d897", "url": "https://github.com/vespa-engine/vespa/commit/515c4ff32934e98fef121c7388f2f3703f09d897", "message": "Fail cfg bootstrap if activation of infra apps fails", "committedDate": "2020-02-23T19:12:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzY3NA==", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383153674", "bodyText": "Consider moving this to NodeRepositoryMaintenance or remove \n  \n    \n      vespa/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeRepositoryMaintenance.java\n    \n    \n         Line 90\n      in\n      6c122d4\n    \n    \n    \n    \n\n        \n          \n           infrastructureProvisioner.maintain();", "author": "freva", "createdAt": "2020-02-24T09:28:38Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java", "diffHunk": "@@ -23,17 +23,22 @@\n     InfrastructureProvisioner(NodeRepository nodeRepository, InfraDeployer infraDeployer, Duration interval) {\n         super(nodeRepository, interval);\n         this.infraDeployer = infraDeployer;\n+\n+        // If this fails, we fail the component graph construction and bootstrap of config server,\n+        // which is what we want.\n+        try {\n+            infraDeployer.activateAllSupportedInfraApplications(true);", "originalCommit": "515c4ff32934e98fef121c7388f2f3703f09d897", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1NzI0Ng==", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383157246", "bodyText": "Nice catch. I renamed and kept the call from NodeRepositoryMaintenance().", "author": "hakonhall", "createdAt": "2020-02-24T09:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "058e220c9f3e45820df5e06463edf3ad7ae24021", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java\nindex cc352cc567..4d04409aaf 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java\n\n@@ -23,9 +23,9 @@ public class InfrastructureProvisioner extends Maintainer {\n     InfrastructureProvisioner(NodeRepository nodeRepository, InfraDeployer infraDeployer, Duration interval) {\n         super(nodeRepository, interval);\n         this.infraDeployer = infraDeployer;\n+    }\n \n-        // If this fails, we fail the component graph construction and bootstrap of config server,\n-        // which is what we want.\n+    public void maintainButThrowOnException() {\n         try {\n             infraDeployer.activateAllSupportedInfraApplications(true);\n         } catch (RuntimeException e) {\n"}}, {"oid": "058e220c9f3e45820df5e06463edf3ad7ae24021", "url": "https://github.com/vespa-engine/vespa/commit/058e220c9f3e45820df5e06463edf3ad7ae24021", "message": "There is already a call to maintain - unify", "committedDate": "2020-02-24T09:37:22Z", "type": "commit"}]}