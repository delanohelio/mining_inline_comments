{"pr_number": 15780, "pr_title": "Bratseth/demand fewer metric readings", "pr_createdAt": "2020-12-10T14:48:21Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15780", "timeline": [{"oid": "fdf963af01ce963de8f02938252fa45b30f16c37", "url": "https://github.com/vespa-engine/vespa/commit/fdf963af01ce963de8f02938252fa45b30f16c37", "message": "Do more checks", "committedDate": "2020-12-10T14:12:31Z", "type": "commit"}, {"oid": "c26f102ef7e0a06bab9d3daf6f99b6ef7dbbdd05", "url": "https://github.com/vespa-engine/vespa/commit/c26f102ef7e0a06bab9d3daf6f99b6ef7dbbdd05", "message": "Require minimum measurements depending on scaling window", "committedDate": "2020-12-10T14:46:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MzYyMg==", "url": "https://github.com/vespa-engine/vespa/pull/15780#discussion_r540493622", "bodyText": "Consider simplifying to Math.max(1, minimumMeasurements).", "author": "mpolden", "createdAt": "2020-12-10T21:01:34Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/autoscale/Autoscaler.java", "diffHunk": "@@ -159,10 +160,15 @@ static Duration maxScalingWindow() {\n         return Duration.ofHours(48);\n     }\n \n-    /** Measurements are currently taken once a minute. See also scalingWindow */\n-    static int minimumMeasurementsPerNode(ClusterSpec cluster) {\n-        if (cluster.isStateful()) return 60;\n-        return 4;\n+    /** Returns the minimum measurements per node (average) we require to give autoscaling advice.*/\n+    private int minimumMeasurementsPerNode(Duration scalingWindow) {\n+        // Measurements are ideally taken every minute, but no guarantees\n+        // (network, nodes may be down, collecting is single threaded and may take longer than 1 minute to complete.\n+        // Since the metric window is 5 minutes, we won't really improve from measuring more often:\n+        long minimumMeasurements = scalingWindow.toMinutes() / 5;\n+        minimumMeasurements = Math.round(0.8 * minimumMeasurements); // Allow 20% metrics collection blackout\n+        if (minimumMeasurements < 1) minimumMeasurements = 1;\n+        return (int)minimumMeasurements;", "originalCommit": "c26f102ef7e0a06bab9d3daf6f99b6ef7dbbdd05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMTE0OA==", "url": "https://github.com/vespa-engine/vespa/pull/15780#discussion_r540501148", "bodyText": "I always have to think for 1 second when I see max implementing min, so some times I try to do without.", "author": "bratseth", "createdAt": "2020-12-10T21:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MzYyMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDYxNw==", "url": "https://github.com/vespa-engine/vespa/pull/15780#discussion_r540494617", "bodyText": "Unmatched (. \ud83d\ude04", "author": "mpolden", "createdAt": "2020-12-10T21:03:13Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/autoscale/Autoscaler.java", "diffHunk": "@@ -159,10 +160,15 @@ static Duration maxScalingWindow() {\n         return Duration.ofHours(48);\n     }\n \n-    /** Measurements are currently taken once a minute. See also scalingWindow */\n-    static int minimumMeasurementsPerNode(ClusterSpec cluster) {\n-        if (cluster.isStateful()) return 60;\n-        return 4;\n+    /** Returns the minimum measurements per node (average) we require to give autoscaling advice.*/\n+    private int minimumMeasurementsPerNode(Duration scalingWindow) {\n+        // Measurements are ideally taken every minute, but no guarantees\n+        // (network, nodes may be down, collecting is single threaded and may take longer than 1 minute to complete.", "originalCommit": "c26f102ef7e0a06bab9d3daf6f99b6ef7dbbdd05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMDExOA==", "url": "https://github.com/vespa-engine/vespa/pull/15780#discussion_r540500118", "bodyText": "Thanks. i'll fix it later", "author": "bratseth", "createdAt": "2020-12-10T21:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDYxNw=="}], "type": "inlineReview", "revised_code": null}]}