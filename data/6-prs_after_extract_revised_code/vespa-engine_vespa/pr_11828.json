{"pr_number": 11828, "pr_title": "Temporary quota checking", "pr_createdAt": "2020-01-17T09:58:19Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11828", "timeline": [{"oid": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1", "url": "https://github.com/vespa-engine/vespa/commit/dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1", "message": "Temporary quota checking", "committedDate": "2020-01-17T09:56:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1Njg4Mg==", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367856882", "bodyText": "Use a hash to anonymize?", "author": "kkraune", "createdAt": "2020-01-17T10:05:17Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -61,6 +64,13 @@ public NodeResources decideNodeResources(Capacity capacity, ClusterSpec cluster)\n         return resources;\n     }\n \n+    private boolean hasQuota(ApplicationId application, int requestedNodes) {\n+        if ( ! this.zone.system().isPublic()) return true; // no quota management\n+\n+        if (\"yj\".equals(application.tenant().value())) return requestedNodes <= 60;", "originalCommit": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3MDAwMQ==", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367870001", "bodyText": "ok", "author": "bratseth", "createdAt": "2020-01-17T10:36:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1Njg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c4341ca86ce65e7702d5358f41fbe0e678c9379d", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\nindex 99248848d1..7c5ff35878 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\n\n@@ -64,13 +63,6 @@ public class CapacityPolicies {\n         return resources;\n     }\n \n-    private boolean hasQuota(ApplicationId application, int requestedNodes) {\n-        if ( ! this.zone.system().isPublic()) return true; // no quota management\n-\n-        if (\"yj\".equals(application.tenant().value())) return requestedNodes <= 60;\n-        return requestedNodes <= 5;\n-    }\n-\n     private void ensureSufficientResources(NodeResources resources, ClusterSpec cluster) {\n         double minMemoryGb = minMemoryGb(cluster.type());\n         if (resources.memoryGb() >= minMemoryGb) return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1ODY1Mg==", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367858652", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");\n          \n          \n            \n                        throw new IllegalArgumentException(requestedNodes + \" exceeds your quota, resolve using https://cloud.vespa.ai/quota\");", "author": "kkraune", "createdAt": "2020-01-17T10:09:09Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -26,10 +27,12 @@ public CapacityPolicies(Zone zone) {\n         this.isUsingAdvertisedResources = zone.cloud().value().equals(\"aws\");\n     }\n \n-    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType) {\n-        int requestedNodes = ensureRedundancy(capacity.nodeCount(), clusterType, capacity.canFail());\n+    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType, ApplicationId application) {\n+        int requestedNodes = capacity.nodeCount();\n \n-        if (this.zone.system().isPublic() && requestedNodes > 5)\n+        ensureRedundancy(requestedNodes, clusterType, capacity.canFail());\n+\n+        if ( ! hasQuota(application, requestedNodes))\n             throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");", "originalCommit": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3MTM4Mw==", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367871383", "bodyText": "Good, thanks", "author": "bratseth", "createdAt": "2020-01-17T10:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1ODY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c4341ca86ce65e7702d5358f41fbe0e678c9379d", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\nindex 99248848d1..7c5ff35878 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java\n\n@@ -30,10 +30,9 @@ public class CapacityPolicies {\n     public int decideSize(Capacity capacity, ClusterSpec.Type clusterType, ApplicationId application) {\n         int requestedNodes = capacity.nodeCount();\n \n-        ensureRedundancy(requestedNodes, clusterType, capacity.canFail());\n+        if (application.instance().isTester()) return 1;\n \n-        if ( ! hasQuota(application, requestedNodes))\n-            throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");\n+        ensureRedundancy(requestedNodes, clusterType, capacity.canFail());\n \n         if (capacity.isRequired()) return requestedNodes;\n \n"}}, {"oid": "c4341ca86ce65e7702d5358f41fbe0e678c9379d", "url": "https://github.com/vespa-engine/vespa/commit/c4341ca86ce65e7702d5358f41fbe0e678c9379d", "message": "Refactor and hash", "committedDate": "2020-01-17T10:23:16Z", "type": "commit"}, {"oid": "ec0ef24f1e5cb79ba86bc47f0d42f990e86e1f9b", "url": "https://github.com/vespa-engine/vespa/commit/ec0ef24f1e5cb79ba86bc47f0d42f990e86e1f9b", "message": "Update abi spec", "committedDate": "2020-01-17T10:32:56Z", "type": "commit"}, {"oid": "0a755e5a4c0205eaa743842606e700eaf3c780d1", "url": "https://github.com/vespa-engine/vespa/commit/0a755e5a4c0205eaa743842606e700eaf3c780d1", "message": "Improve error message", "committedDate": "2020-01-17T10:38:40Z", "type": "commit"}]}