{"pr_number": 13220, "pr_title": "Add first 200 bytes of message to xml exception ", "pr_createdAt": "2020-05-11T21:41:53Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13220", "timeline": [{"oid": "b04f090f8c55eb2906e890ca8260d77e27e6ccb3", "url": "https://github.com/vespa-engine/vespa/commit/b04f090f8c55eb2906e890ca8260d77e27e6ccb3", "message": "Add first 200 bytes of message to xml exception", "committedDate": "2020-05-11T21:40:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk1MzkxMA==", "url": "https://github.com/vespa-engine/vespa/pull/13220#discussion_r424953910", "bodyText": "Will the bytes contain the actual first bytes? I would assume that the VespaXMLFeedReader consumes some bytes before throwing the exception.", "author": "bjorncs", "createdAt": "2020-05-14T08:19:18Z", "path": "vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedReaderFactory.java", "diffHunk": "@@ -31,7 +33,14 @@ public FeedReader createReader(\n                 try {\n                     return new VespaXMLFeedReader(inputStream, docTypeManager);\n                 } catch (Exception e) {\n-                    throw new RuntimeException(\"Could not create VespaXMLFeedReader\", e);\n+                    byte [] peek;\n+                    try {\n+                        peek = new byte[Math.min(200, inputStream.available())];\n+                        inputStream.read(peek);\n+                    } catch (IOException  io) {\n+                        peek = new byte [0];\n+                    }\n+                    throw new RuntimeException(\"Could not create VespaXMLFeedReader. First characters are: \" + Utf8.toString(peek), e);", "originalCommit": "b04f090f8c55eb2906e890ca8260d77e27e6ccb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3MDQwNg==", "url": "https://github.com/vespa-engine/vespa/pull/13220#discussion_r442170406", "bodyText": "You are right. I added mark/reset support and made it default to peek the first 200 bytes.\nWill consider if this should become a feature flag.", "author": "baldersheim", "createdAt": "2020-06-18T11:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk1MzkxMA=="}], "type": "inlineReview", "revised_code": {"commit": "c6afcd087b79dabb47db611881c4d0f96a980d15", "chunk": "diff --git a/vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedReaderFactory.java b/vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedReaderFactory.java\nindex 419e61fa1c..749f569d71 100644\n--- a/vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedReaderFactory.java\n+++ b/vespaclient-container-plugin/src/main/java/com/yahoo/vespa/http/server/FeedReaderFactory.java\n\n@@ -30,17 +31,17 @@ public class FeedReaderFactory {\n             FeedParams.DataFormat dataFormat)  {\n         switch (dataFormat) {\n             case XML_UTF8:\n+                byte [] peek = new byte[MARK_READLIMIT];\n+                int bytesPeeked = 0;\n                 try {\n+                    if (inputStream.markSupported()) {\n+                        inputStream.mark(MARK_READLIMIT);\n+                        bytesPeeked = inputStream.read(peek);\n+                        inputStream.reset();\n+                    }\n                     return new VespaXMLFeedReader(inputStream, docTypeManager);\n                 } catch (Exception e) {\n-                    byte [] peek;\n-                    try {\n-                        peek = new byte[Math.min(200, inputStream.available())];\n-                        inputStream.read(peek);\n-                    } catch (IOException  io) {\n-                        peek = new byte [0];\n-                    }\n-                    throw new RuntimeException(\"Could not create VespaXMLFeedReader. First characters are: \" + Utf8.toString(peek), e);\n+                    throw new RuntimeException(\"Could not create VespaXMLFeedReader. First characters are: '\" + Utf8.toString(peek, 0, bytesPeeked) + \"'\", e);\n                 }\n             case JSON_UTF8:\n                 return new JsonFeedReader(inputStream, docTypeManager);\n"}}, {"oid": "c6afcd087b79dabb47db611881c4d0f96a980d15", "url": "https://github.com/vespa-engine/vespa/commit/c6afcd087b79dabb47db611881c4d0f96a980d15", "message": "Add suppport for mark/reset.", "committedDate": "2020-06-18T11:22:25Z", "type": "commit"}, {"oid": "f7ecc8fe21b15a2c9da17eb96a7bd6375b2b6043", "url": "https://github.com/vespa-engine/vespa/commit/f7ecc8fe21b15a2c9da17eb96a7bd6375b2b6043", "message": "Add missing file", "committedDate": "2020-06-18T11:30:26Z", "type": "commit"}, {"oid": "94becba734cdd2d3725bf33eb259e2e0bc0564b5", "url": "https://github.com/vespa-engine/vespa/commit/94becba734cdd2d3725bf33eb259e2e0bc0564b5", "message": "Add a todo about diabling debug mode.", "committedDate": "2020-06-18T11:52:38Z", "type": "commit"}]}