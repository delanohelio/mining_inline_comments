{"pr_number": 14617, "pr_title": "Take application lock once per run MERGEOK", "pr_createdAt": "2020-09-29T10:58:44Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14617", "timeline": [{"oid": "533bb310e824073dd23bf1ea3466565edf2b53f0", "url": "https://github.com/vespa-engine/vespa/commit/533bb310e824073dd23bf1ea3466565edf2b53f0", "message": "Verify node owner after acquiring lock", "committedDate": "2020-09-29T11:05:14Z", "type": "forcePushed"}, {"oid": "2f971983a256ca2229590827f619d45b86d01f11", "url": "https://github.com/vespa-engine/vespa/commit/2f971983a256ca2229590827f619d45b86d01f11", "message": "Only lock application if node status changed", "committedDate": "2020-09-29T11:53:32Z", "type": "commit"}, {"oid": "436e340e6d23e5d5f85ba54a5baca3fbce37a903", "url": "https://github.com/vespa-engine/vespa/commit/436e340e6d23e5d5f85ba54a5baca3fbce37a903", "message": "Reduce lock timeout", "committedDate": "2020-09-29T11:54:30Z", "type": "commit"}, {"oid": "436e340e6d23e5d5f85ba54a5baca3fbce37a903", "url": "https://github.com/vespa-engine/vespa/commit/436e340e6d23e5d5f85ba54a5baca3fbce37a903", "message": "Reduce lock timeout", "committedDate": "2020-09-29T11:54:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2NjM5Ng==", "url": "https://github.com/vespa-engine/vespa/pull/14617#discussion_r496666396", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Already recorded as down, nothing to do\n          \n          \n            \n                        // Already correct record, nothing to do", "author": "hakonhall", "createdAt": "2020-09-29T12:13:32Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailer.java", "diffHunk": "@@ -187,27 +188,29 @@ private void updateNodeLivenessEventsForReadyNodes(Mutex lock) {\n      * Otherwise we remove any \"down\" history record.\n      */\n     private void updateNodeDownState() {\n-        Map<String, Node> activeNodesByHostname = nodeRepository().getNodes(Node.State.active).stream()\n-                .collect(Collectors.toMap(Node::hostname, node -> node));\n-\n-        serviceMonitor.getServiceModelSnapshot().getServiceInstancesByHostName()\n-                .forEach((hostName, serviceInstances) -> {\n-                    Node node = activeNodesByHostname.get(hostName.s());\n-                    if (node == null) return;\n-                    try (var lock = nodeRepository().lock(node.allocation().get().owner())) {\n-                        Optional<Node> currentNode = nodeRepository().getNode(node.hostname(), Node.State.active); // re-get inside lock\n-                        if (currentNode.isEmpty()) return; // Node disappeared since acquiring lock\n-                        node = currentNode.get();\n-                        if (badNode(serviceInstances)) {\n-                            recordAsDown(node, lock);\n-                        } else {\n-                            clearDownRecord(node, lock);\n-                        }\n-                    }\n-                    catch (UncheckedTimeoutException e) {\n-                        // Ignore - node may be locked on this round due to deployment\n-                    }\n-                });\n+        NodeList activeNodes = NodeList.copyOf(nodeRepository().getNodes(Node.State.active));\n+        serviceMonitor.getServiceModelSnapshot().getServiceInstancesByHostName().forEach((hostname, serviceInstances) -> {\n+            Optional<Node> node = activeNodes.matching(n -> n.hostname().equals(hostname.toString())).first();\n+            if (node.isEmpty()) return;\n+\n+            // Already recorded as down, nothing to do", "originalCommit": "436e340e6d23e5d5f85ba54a5baca3fbce37a903", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5f7391d32057b5283eb28bfbd7536df94c21a3e", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailer.java\nindex d1e01a596d..2ce3fa6c0f 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailer.java\n\n@@ -193,7 +193,7 @@ public class NodeFailer extends NodeRepositoryMaintainer {\n             Optional<Node> node = activeNodes.matching(n -> n.hostname().equals(hostname.toString())).first();\n             if (node.isEmpty()) return;\n \n-            // Already recorded as down, nothing to do\n+            // Already correct record, nothing to do\n             boolean badNode = badNode(serviceInstances);\n             if (badNode == node.get().history().event(History.Event.Type.down).isPresent()) return;\n \n"}}, {"oid": "b5f7391d32057b5283eb28bfbd7536df94c21a3e", "url": "https://github.com/vespa-engine/vespa/commit/b5f7391d32057b5283eb28bfbd7536df94c21a3e", "message": "Fix comment\n\nCo-authored-by: H\u00e5kon Hallingstad <hakon@verizonmedia.com>", "committedDate": "2020-09-29T12:15:39Z", "type": "commit"}]}