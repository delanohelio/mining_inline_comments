{"pr_number": 14183, "pr_title": "Bjorncs/improve access control", "pr_createdAt": "2020-08-27T15:06:35Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14183", "timeline": [{"oid": "0f27c93bd06b0ab31b337f16d589368bef5780f5", "url": "https://github.com/vespa-engine/vespa/commit/0f27c93bd06b0ab31b337f16d589368bef5780f5", "message": "Add method to check if pattern will match independently of port", "committedDate": "2020-08-27T15:06:01Z", "type": "commit"}, {"oid": "963b19783ae9518c0eeed9d4063065d0ced65a6d", "url": "https://github.com/vespa-engine/vespa/commit/963b19783ae9518c0eeed9d4063065d0ced65a6d", "message": "Ensure access control chains does not duplicate bindings from user filter chains", "committedDate": "2020-08-27T15:06:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUwMzU5NA==", "url": "https://github.com/vespa-engine/vespa/pull/14183#discussion_r478503594", "bodyText": "\ud83e\udd47", "author": "jonmv", "createdAt": "2020-08-27T15:24:53Z", "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/AccessControlTest.java", "diffHunk": "@@ -191,6 +191,42 @@ public void access_control_is_implicitly_added_for_hosted_apps_with_existing_htt\n         assertThat(http.getFilterChains().hasChain(ComponentId.fromString(\"myChain\")), is(true));\n     }\n \n+    @Test\n+    public void access_control_chains_does_not_contain_duplicate_bindings_to_user_filter_chain() {\n+        Http http = createModelAndGetHttp(\n+                \"  <http>\",\n+                \"    <handler id='custom.Handler'>\",\n+                \"      <binding>http://*/custom-handler/*</binding>\",\n+                \"      <binding>http://*/</binding>\",\n+                \"    </handler>\",\n+                \"    <filtering>\",\n+                \"      <access-control/>\",\n+                \"      <request-chain id='my-custom-request-chain'>\",\n+                \"        <filter id='my-custom-request-filter' />\",\n+                \"        <binding>http://*/custom-handler/*</binding>\",\n+                \"        <binding>http://*/</binding>\",\n+                \"      </request-chain>\",\n+                \"    </filtering>\",\n+                \"  </http>\");\n+\n+        Set<String> actualExcludeBindings = getFilterBindings(http, AccessControl.ACCESS_CONTROL_EXCLUDED_CHAIN_ID);\n+        assertThat(actualExcludeBindings, containsInAnyOrder(\n+                \"http://*:4443/ApplicationStatus\",\n+                \"http://*:4443/status.html\",\n+                \"http://*:4443/state/v1\",\n+                \"http://*:4443/state/v1/*\",\n+                \"http://*:4443/prometheus/v1\",\n+                \"http://*:4443/prometheus/v1/*\",\n+                \"http://*:4443/metrics/v2\",\n+                \"http://*:4443/metrics/v2/*\"));\n+\n+        Set<String> actualAccessControlBindings = getFilterBindings(http, AccessControl.ACCESS_CONTROL_CHAIN_ID);\n+        assertThat(actualAccessControlBindings, containsInAnyOrder(\"http://*:4443/*\"));\n+\n+        Set<String> actualCustomChainBindings = getFilterBindings(http, ComponentId.fromString(\"my-custom-request-chain\"));\n+        assertThat(actualCustomChainBindings, containsInAnyOrder(\"http://*/custom-handler/*\", \"http://*/\"));\n+    }\n+", "originalCommit": "963b19783ae9518c0eeed9d4063065d0ced65a6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}