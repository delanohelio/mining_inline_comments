{"pr_number": 15369, "pr_title": "Introduce node IP address pool", "pr_createdAt": "2020-11-17T14:05:59Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15369", "timeline": [{"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "url": "https://github.com/vespa-engine/vespa/commit/766e13e4b820f53acd4886d763e7fbb9cbc11601", "message": "Introduce node IP address pool\n\nA host that is supposed to run containers has a non-empty IP pool: A set of\nIPv4 and/or IPv6 addresses that can be assigned to containers.\n\nThis PR adds a list of hostnames to this pool.  The intent is that the\nhostnames and IPs match through resolving, but resolution may not yet be\navailable (until DNS changes propagate).\n\nFor now, only a list of hostnames are specified.  We may want to specify\n(hostname, IP address) pairs or (hostname, IPv4, IPv6) triplets later, and the\nserialization format allows for that by storing the hsotnames in an array of\nobjects, the object having a \"hostname\" field.\n\nHowever the REST API is kept simpler for now: it exposes and allows patching of\nan array of strings of a \"additionalHostnames\" field.", "committedDate": "2020-11-17T13:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525192950", "bodyText": "Consider\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    Inspector addressesField = object.field(containersKey);\n          \n          \n            \n                    if (addressesField.children() == 0)\n          \n          \n            \n                        return List.of();\n          \n          \n            \n                    List<Address> addresses = new ArrayList<>(addressesField.children());\n          \n          \n            \n                    addressesField.traverse((ArrayTraverser) (i, elem) ->\n          \n          \n            \n                            addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n          \n          \n            \n                    return addresses;\n          \n          \n            \n                }\n          \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    return SlimeUtils.entriesStream(object.field(containersKey))\n          \n          \n            \n                            .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\n          \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                }", "author": "freva", "createdAt": "2020-11-17T14:24:06Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "diffHunk": "@@ -358,6 +371,16 @@ private ClusterMembership clusterMembershipFromSlime(Inspector object) {\n         return ipAddresses.build();\n     }\n \n+    private List<Address> addressesFromSlime(Inspector object) {\n+        Inspector addressesField = object.field(containersKey);\n+        if (addressesField.children() == 0)\n+            return List.of();\n+        List<Address> addresses = new ArrayList<>(addressesField.children());\n+        addressesField.traverse((ArrayTraverser) (i, elem) ->\n+                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n+        return addresses;\n+    }", "originalCommit": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxMzE2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525213161", "bodyText": "Sure", "author": "hakonhall", "createdAt": "2020-11-17T14:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA=="}], "type": "inlineReview", "revised_code": {"commit": "dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\nindex cd79453147..1e943a66b6 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\n\n@@ -372,13 +372,9 @@ public class NodeSerializer {\n     }\n \n     private List<Address> addressesFromSlime(Inspector object) {\n-        Inspector addressesField = object.field(containersKey);\n-        if (addressesField.children() == 0)\n-            return List.of();\n-        List<Address> addresses = new ArrayList<>(addressesField.children());\n-        addressesField.traverse((ArrayTraverser) (i, elem) ->\n-                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n-        return addresses;\n+        return SlimeUtils.entriesStream(object.field(containersKey))\n+                .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\n+                .collect(Collectors.toList());\n     }\n \n     private Optional<String> modelNameFromSlime(Inspector object) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525195876", "bodyText": "Disable wildcard imports for javax.swing.*", "author": "freva", "createdAt": "2020-11-17T14:27:47Z", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "diffHunk": "@@ -11,8 +11,9 @@\n import com.yahoo.vespa.hosted.provision.NodeList;\n import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n+import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.JFrame;\n+import javax.swing.*;", "originalCommit": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNjM5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525206399", "bodyText": "huh, that was a weird exception in IntelliJ - removed and fixed.", "author": "hakonhall", "createdAt": "2020-11-17T14:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "34384b2927e88a6affa6e1d754fb7b8b5284dc06", "chunk": "diff --git a/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java b/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java\nindex b59ef458d2..24b3139a91 100644\n--- a/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java\n+++ b/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java\n\n@@ -13,7 +13,7 @@ import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.*;\n+import javax.swing.JFrame;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n"}}, {"oid": "34384b2927e88a6affa6e1d754fb7b8b5284dc06", "url": "https://github.com/vespa-engine/vespa/commit/34384b2927e88a6affa6e1d754fb7b8b5284dc06", "message": "Replace on-demand import", "committedDate": "2020-11-17T14:41:12Z", "type": "commit"}, {"oid": "dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "url": "https://github.com/vespa-engine/vespa/commit/dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "message": "Update node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\n\nCo-authored-by: Valerij Fredriksen <freva@users.noreply.github.com>", "committedDate": "2020-11-17T14:50:12Z", "type": "commit"}, {"oid": "892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "url": "https://github.com/vespa-engine/vespa/commit/892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "message": "Add import", "committedDate": "2020-11-17T16:56:04Z", "type": "commit"}]}