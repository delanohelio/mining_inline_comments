{"pr_number": 12588, "pr_title": "Bratseth/autoscale 2", "pr_createdAt": "2020-03-16T21:34:28Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12588", "timeline": [{"oid": "b65685b73b5b26df3b915474efeee497ca40a24c", "url": "https://github.com/vespa-engine/vespa/commit/b65685b73b5b26df3b915474efeee497ca40a24c", "message": "Log cluster resources, scale once per cluster", "committedDate": "2020-03-16T16:19:10Z", "type": "commit"}, {"oid": "2ee38ab4e8be0ea9a7c8405111d93212679501a4", "url": "https://github.com/vespa-engine/vespa/commit/2ee38ab4e8be0ea9a7c8405111d93212679501a4", "message": "More elaborate toString", "committedDate": "2020-03-16T16:48:23Z", "type": "commit"}, {"oid": "6ff563f3f8b8777d5f879819d59642fc859abc71", "url": "https://github.com/vespa-engine/vespa/commit/6ff563f3f8b8777d5f879819d59642fc859abc71", "message": "Only log once per hour per cluster", "committedDate": "2020-03-16T16:59:07Z", "type": "commit"}, {"oid": "ffd8a943d73da17bd726e26d7892dde36276b0f2", "url": "https://github.com/vespa-engine/vespa/commit/ffd8a943d73da17bd726e26d7892dde36276b0f2", "message": "Update abi spec", "committedDate": "2020-03-16T21:33:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyOTQzMQ==", "url": "https://github.com/vespa-engine/vespa/pull/12588#discussion_r393329431", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                target.ifPresent(t -> log.info(\"Autoscale: \" + application + clusterType + \" \" + clusterId +\n          \n          \n            \n                                target.ifPresent(t -> log.info(\"Autoscale: \" + application + \" \" + clusterType + \" \" + clusterId +", "author": "freva", "createdAt": "2020-03-16T21:50:22Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java", "diffHunk": "@@ -48,17 +53,31 @@ protected void maintain() {\n     private void autoscale(ApplicationId application, List<Node> applicationNodes) {\n         try (MaintenanceDeployment deployment = new MaintenanceDeployment(application, deployer, nodeRepository())) {\n             if ( ! deployment.isValid()) return; // Another config server will consider this application\n-            nodesByCluster(applicationNodes).forEach((clusterSpec, clusterNodes) -> {\n-                Optional<AllocatableClusterResources> target = autoscaler.autoscale(application, clusterSpec, clusterNodes);\n-                target.ifPresent(t -> log.info(\"Autoscale: Application \" + application + \" cluster \" + clusterSpec +\n-                                               \" from \" + applicationNodes.size() + \" * \" + applicationNodes.get(0).flavor().resources() +\n-                                               \" to \" + t.nodes() + \" * \" + t.advertisedResources()));\n+            nodesByCluster(applicationNodes).forEach((clusterId, clusterNodes) -> {\n+                Optional<AllocatableClusterResources> target = autoscaler.autoscale(clusterNodes);\n+\n+                Instant lastLogTime = lastLogged.get(new Pair<>(application, clusterId));\n+                if (lastLogTime == null || lastLogTime.isBefore(nodeRepository().clock().instant().minus(Duration.ofHours(1)))) {\n+                    int currentGroups = (int) clusterNodes.stream().map(node -> node.allocation().get().membership().cluster().group()).distinct().count();\n+                    ClusterSpec.Type clusterType = clusterNodes.get(0).allocation().get().membership().cluster().type();\n+                    target.ifPresent(t -> log.info(\"Autoscale: \" + application + clusterType + \" \" + clusterId +", "originalCommit": "ffd8a943d73da17bd726e26d7892dde36276b0f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de56e1e1b2e0008fb9d0f5e950bb0f7ececdbccf", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\nindex db1ef6e4ca..c664a9a1ad 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\n\n@@ -60,7 +60,7 @@ public class AutoscalingMaintainer extends Maintainer {\n                 if (lastLogTime == null || lastLogTime.isBefore(nodeRepository().clock().instant().minus(Duration.ofHours(1)))) {\n                     int currentGroups = (int) clusterNodes.stream().map(node -> node.allocation().get().membership().cluster().group()).distinct().count();\n                     ClusterSpec.Type clusterType = clusterNodes.get(0).allocation().get().membership().cluster().type();\n-                    target.ifPresent(t -> log.info(\"Autoscale: \" + application + clusterType + \" \" + clusterId +\n+                    target.ifPresent(t -> log.info(\"Autoscale: \" + application + \" \" + clusterType + \" \" + clusterId +\n                                                    \" from \" + toString(clusterNodes.size(), currentGroups, clusterNodes.get(0).flavor().resources()) +\n                                                    \" to \" + toString(t.nodes(), t.groups(), t.advertisedResources())));\n                     lastLogged.put(new Pair<>(application, clusterId), nodeRepository().clock().instant());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyOTczNA==", "url": "https://github.com/vespa-engine/vespa/pull/12588#discussion_r393329734", "bodyText": "Probably want to skip all of this if target is empty?", "author": "freva", "createdAt": "2020-03-16T21:51:00Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java", "diffHunk": "@@ -48,17 +53,31 @@ protected void maintain() {\n     private void autoscale(ApplicationId application, List<Node> applicationNodes) {\n         try (MaintenanceDeployment deployment = new MaintenanceDeployment(application, deployer, nodeRepository())) {\n             if ( ! deployment.isValid()) return; // Another config server will consider this application\n-            nodesByCluster(applicationNodes).forEach((clusterSpec, clusterNodes) -> {\n-                Optional<AllocatableClusterResources> target = autoscaler.autoscale(application, clusterSpec, clusterNodes);\n-                target.ifPresent(t -> log.info(\"Autoscale: Application \" + application + \" cluster \" + clusterSpec +\n-                                               \" from \" + applicationNodes.size() + \" * \" + applicationNodes.get(0).flavor().resources() +\n-                                               \" to \" + t.nodes() + \" * \" + t.advertisedResources()));\n+            nodesByCluster(applicationNodes).forEach((clusterId, clusterNodes) -> {\n+                Optional<AllocatableClusterResources> target = autoscaler.autoscale(clusterNodes);\n+\n+                Instant lastLogTime = lastLogged.get(new Pair<>(application, clusterId));\n+                if (lastLogTime == null || lastLogTime.isBefore(nodeRepository().clock().instant().minus(Duration.ofHours(1)))) {", "originalCommit": "ffd8a943d73da17bd726e26d7892dde36276b0f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNTI2Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12588#discussion_r393335262", "bodyText": "It's slightly more messy, but ok", "author": "bratseth", "createdAt": "2020-03-16T22:04:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyOTczNA=="}], "type": "inlineReview", "revised_code": {"commit": "de56e1e1b2e0008fb9d0f5e950bb0f7ececdbccf", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\nindex db1ef6e4ca..c664a9a1ad 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\n\n@@ -60,7 +60,7 @@ public class AutoscalingMaintainer extends Maintainer {\n                 if (lastLogTime == null || lastLogTime.isBefore(nodeRepository().clock().instant().minus(Duration.ofHours(1)))) {\n                     int currentGroups = (int) clusterNodes.stream().map(node -> node.allocation().get().membership().cluster().group()).distinct().count();\n                     ClusterSpec.Type clusterType = clusterNodes.get(0).allocation().get().membership().cluster().type();\n-                    target.ifPresent(t -> log.info(\"Autoscale: \" + application + clusterType + \" \" + clusterId +\n+                    target.ifPresent(t -> log.info(\"Autoscale: \" + application + \" \" + clusterType + \" \" + clusterId +\n                                                    \" from \" + toString(clusterNodes.size(), currentGroups, clusterNodes.get(0).flavor().resources()) +\n                                                    \" to \" + toString(t.nodes(), t.groups(), t.advertisedResources())));\n                     lastLogged.put(new Pair<>(application, clusterId), nodeRepository().clock().instant());\n"}}, {"oid": "de56e1e1b2e0008fb9d0f5e950bb0f7ececdbccf", "url": "https://github.com/vespa-engine/vespa/commit/de56e1e1b2e0008fb9d0f5e950bb0f7ececdbccf", "message": "Update node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/AutoscalingMaintainer.java\n\nCo-Authored-By: Valerij Fredriksen <freva@users.noreply.github.com>", "committedDate": "2020-03-16T22:00:10Z", "type": "commit"}, {"oid": "812b9f60ed8f9ee6720186e05cd0adc2c4ff770e", "url": "https://github.com/vespa-engine/vespa/commit/812b9f60ed8f9ee6720186e05cd0adc2c4ff770e", "message": "Nicer", "committedDate": "2020-03-16T22:14:38Z", "type": "commit"}, {"oid": "f05741a47c46c9816aa27ca6947465e76b52e59f", "url": "https://github.com/vespa-engine/vespa/commit/f05741a47c46c9816aa27ca6947465e76b52e59f", "message": "Merge", "committedDate": "2020-03-16T22:15:41Z", "type": "commit"}]}