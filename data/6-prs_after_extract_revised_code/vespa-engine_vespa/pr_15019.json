{"pr_number": 15019, "pr_title": "Create maintainer tracking host repair status", "pr_createdAt": "2020-10-23T10:41:06Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15019", "timeline": [{"oid": "3642b85d61e219809f79689f392f3dc78d18be0d", "url": "https://github.com/vespa-engine/vespa/commit/3642b85d61e219809f79689f392f3dc78d18be0d", "message": "Create maintainer tracking host repair status\nExtended ZmsClient to add/delete policy rules\nExtended controller's node repo client with patchNode function", "committedDate": "2020-10-23T10:36:08Z", "type": "commit"}, {"oid": "877e68322991c5133c5253410a4bb9c22c55e93b", "url": "https://github.com/vespa-engine/vespa/commit/877e68322991c5133c5253410a4bb9c22c55e93b", "message": "Fix String formatting", "committedDate": "2020-10-23T11:33:07Z", "type": "commit"}, {"oid": "5ceb3deefdafd77ce2dba976a5124faa8b7f75f1", "url": "https://github.com/vespa-engine/vespa/commit/5ceb3deefdafd77ce2dba976a5124faa8b7f75f1", "message": "Id, not assertionId", "committedDate": "2020-10-23T12:09:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgzODE1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15019#discussion_r510838157", "bodyText": "Current naming convention on this seems is camel case.", "author": "freva", "createdAt": "2020-10-23T12:09:15Z", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.controller.api.integration.repair;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import static com.yahoo.yolean.Exceptions.uncheck;\n+\n+/**\n+ * @author olaa\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class RepairTicketReport {\n+\n+    private static final String REPORT_ID = \"repair-ticket\";", "originalCommit": "877e68322991c5133c5253410a4bb9c22c55e93b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85609870b4efb0029c202ef2730547f8c3faa32f", "chunk": "diff --git a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\nindex c44e00706e..c2425fe0f7 100644\n--- a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\n+++ b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\n\n@@ -15,19 +15,22 @@ import static com.yahoo.yolean.Exceptions.uncheck;\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class RepairTicketReport {\n \n-    private static final String REPORT_ID = \"repair-ticket\";\n-    private static final ObjectMapper objectMapper = new ObjectMapper();@JsonIgnore\n+    private static final String REPORT_ID = \"repairTicket\";\n+    private static final ObjectMapper objectMapper = new ObjectMapper();\n \n     public String status;\n     public String ticketNumber;\n     public long createdMillis;\n+    public long updatedMillis;\n \n     public RepairTicketReport(@JsonProperty(\"status\") String status,\n                               @JsonProperty(\"ticketNumber\") String ticketNumber,\n-                              @JsonProperty(\"createdMillis\") long createdMillis) {\n+                              @JsonProperty(\"createdMillis\") long createdMillis,\n+                              @JsonProperty(\"updatedMillis\") long updatedMillis) {\n         this.status = status;\n         this.ticketNumber = ticketNumber;\n         this.createdMillis = createdMillis;\n+        this.updatedMillis = updatedMillis;\n     }\n \n     public String getStatus() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2Mjg1NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15019#discussion_r510862855", "bodyText": "Doesn't the annotation apply to the next declaration? I.e. status in this case.", "author": "freva", "createdAt": "2020-10-23T12:54:07Z", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.controller.api.integration.repair;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import static com.yahoo.yolean.Exceptions.uncheck;\n+\n+/**\n+ * @author olaa\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class RepairTicketReport {\n+\n+    private static final String REPORT_ID = \"repair-ticket\";\n+    private static final ObjectMapper objectMapper = new ObjectMapper();@JsonIgnore", "originalCommit": "5ceb3deefdafd77ce2dba976a5124faa8b7f75f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85609870b4efb0029c202ef2730547f8c3faa32f", "chunk": "diff --git a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\nindex c44e00706e..c2425fe0f7 100644\n--- a/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\n+++ b/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/repair/RepairTicketReport.java\n\n@@ -15,19 +15,22 @@ import static com.yahoo.yolean.Exceptions.uncheck;\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class RepairTicketReport {\n \n-    private static final String REPORT_ID = \"repair-ticket\";\n-    private static final ObjectMapper objectMapper = new ObjectMapper();@JsonIgnore\n+    private static final String REPORT_ID = \"repairTicket\";\n+    private static final ObjectMapper objectMapper = new ObjectMapper();\n \n     public String status;\n     public String ticketNumber;\n     public long createdMillis;\n+    public long updatedMillis;\n \n     public RepairTicketReport(@JsonProperty(\"status\") String status,\n                               @JsonProperty(\"ticketNumber\") String ticketNumber,\n-                              @JsonProperty(\"createdMillis\") long createdMillis) {\n+                              @JsonProperty(\"createdMillis\") long createdMillis,\n+                              @JsonProperty(\"updatedMillis\") long updatedMillis) {\n         this.status = status;\n         this.ticketNumber = ticketNumber;\n         this.createdMillis = createdMillis;\n+        this.updatedMillis = updatedMillis;\n     }\n \n     public String getStatus() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2NTAwNw==", "url": "https://github.com/vespa-engine/vespa/pull/15019#discussion_r510865007", "bodyText": "Consider reversing this to avoid NPE", "author": "freva", "createdAt": "2020-10-23T12:57:39Z", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostRepairMaintainer.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.controller.maintenance;\n+\n+import com.yahoo.config.provision.CloudName;\n+import com.yahoo.config.provision.SystemName;\n+import com.yahoo.config.provision.zone.ZoneApi;\n+import com.yahoo.vespa.hosted.controller.Controller;\n+import com.yahoo.vespa.hosted.controller.api.integration.configserver.Node;\n+import com.yahoo.vespa.hosted.controller.api.integration.configserver.NodeRepository;\n+import com.yahoo.vespa.hosted.controller.api.integration.repair.RepairTicketReport;\n+import com.yahoo.vespa.hosted.controller.api.integration.repair.HostRepairClient;\n+import com.yahoo.yolean.Exceptions;\n+\n+import java.time.Duration;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Predicate;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+import static com.yahoo.yolean.Exceptions.uncheck;\n+\n+/**\n+ *\n+ * Responsible for keeping track of hosts under repair.\n+ *\n+ * @author olaa\n+ */\n+public class HostRepairMaintainer extends ControllerMaintainer {\n+\n+    private final NodeRepository nodeRepository;\n+    private final HostRepairClient repairClient;\n+\n+    private static final Logger log = Logger.getLogger(HostRepairMaintainer.class.getName());\n+\n+\n+    public HostRepairMaintainer(Controller controller, Duration interval) {\n+        super(controller, interval, null, SystemName.allOf(Predicate.not(SystemName::isPublic)));\n+        this.nodeRepository = controller.serviceRegistry().configServer().nodeRepository();\n+        this.repairClient = controller.serviceRegistry().hostRepairClient();\n+    }\n+\n+\n+    @Override\n+    protected boolean maintain() {\n+        AtomicInteger exceptions = new AtomicInteger(0);\n+\n+        controller().zoneRegistry().zones()\n+                .reachable().zones().stream()\n+                .forEach(zoneApi -> {\n+                            var nodeTicketMap = nodeRepository.list((zoneApi).getId())\n+                                    .stream()\n+                                    .filter(this::hasOpenTicket)\n+                                    .collect(Collectors.toMap(\n+                                            node -> node,\n+                                            this::getTicketReport)\n+                                    );\n+                            try {\n+                                repairClient.updateRepairStatus(zoneApi, nodeTicketMap);\n+                            } catch (Exception e) {\n+                                log.warning(\"Failed to update repair status; \" + Exceptions.toMessageString(e));\n+                                exceptions.incrementAndGet();\n+                            }\n+                        }\n+                );\n+\n+        return exceptions.get() == 0;\n+    }\n+\n+\n+    private boolean hasOpenTicket(Node node) {\n+        var reports = node.reports();\n+        if (!reports.containsKey(RepairTicketReport.getReportId())) {\n+            return false;\n+        }\n+        return getTicketReport(node).getStatus().equals(\"OPEN\");", "originalCommit": "5ceb3deefdafd77ce2dba976a5124faa8b7f75f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85609870b4efb0029c202ef2730547f8c3faa32f", "chunk": "diff --git a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostRepairMaintainer.java b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostRepairMaintainer.java\nindex c3c5f902df..e3c6862384 100644\n--- a/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostRepairMaintainer.java\n+++ b/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostRepairMaintainer.java\n\n@@ -72,7 +72,7 @@ public class HostRepairMaintainer extends ControllerMaintainer {\n         if (!reports.containsKey(RepairTicketReport.getReportId())) {\n             return false;\n         }\n-        return getTicketReport(node).getStatus().equals(\"OPEN\");\n+        return \"OPEN\".equals(getTicketReport(node).getStatus());\n     }\n \n     private RepairTicketReport getTicketReport(Node node) {\n"}}, {"oid": "85609870b4efb0029c202ef2730547f8c3faa32f", "url": "https://github.com/vespa-engine/vespa/commit/85609870b4efb0029c202ef2730547f8c3faa32f", "message": "Add lastUpdated field to report. Report ID uses camel case. Remove unnecessary JsonIgnore. Reverse String comparison", "committedDate": "2020-10-23T13:56:23Z", "type": "commit"}]}