{"pr_number": 11854, "pr_title": "Bratseth/is blocked in pong", "pr_createdAt": "2020-01-20T09:56:37Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11854", "timeline": [{"oid": "19c9987d9e5e38996b51ca5d11f152a9392ddc83", "url": "https://github.com/vespa-engine/vespa/commit/19c9987d9e5e38996b51ca5d11f152a9392ddc83", "message": "Add isBlockingWrites to pong\n\n- Add isBlockingWrites to pong\n- Cleanup and deprecate unused complexity: There is just one node and one error", "committedDate": "2020-01-20T09:37:07Z", "type": "commit"}, {"oid": "0074597688138ffc2d667481022d3a53998eb58d", "url": "https://github.com/vespa-engine/vespa/commit/0074597688138ffc2d667481022d3a53998eb58d", "message": "Add and propagate isBlockingWrite field", "committedDate": "2020-01-20T09:55:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2Nzc0OQ==", "url": "https://github.com/vespa-engine/vespa/pull/11854#discussion_r368467749", "bodyText": "t -> to", "author": "geirst", "createdAt": "2020-01-20T10:17:35Z", "path": "container-search/src/main/java/com/yahoo/prelude/Pong.java", "diffHunk": "@@ -4,82 +4,102 @@\n import com.yahoo.search.result.ErrorMessage;\n import com.yahoo.search.statistics.ElapsedTime;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n \n /**\n  * An answer from Ping.\n  *\n- * @author Steinar Knutsen\n+ * @author bratseth\n  */\n public class Pong {\n \n-    private String pingInfo=\"\";\n-    private final List<ErrorMessage> errors = new ArrayList<>(1);\n-    private ElapsedTime elapsed = new ElapsedTime();\n+    private final ElapsedTime elapsed = new ElapsedTime();\n     private final Optional<Long> activeDocuments;\n+    private final boolean isBlockingWrites;\n+    private final Optional<ErrorMessage> error;\n \n     public Pong() {\n-        this.activeDocuments = Optional.empty();\n+        this(Optional.empty(), false, Optional.empty());\n     }\n \n     public Pong(ErrorMessage error) {\n-        errors.add(error);\n-        this.activeDocuments = Optional.empty();\n+        this(Optional.empty(), false, Optional.of(error));\n     }\n \n     public Pong(long activeDocuments) {\n-        this.activeDocuments = Optional.of(activeDocuments);\n+        this(Optional.of(activeDocuments), false, Optional.empty());\n     }\n \n-    public void addError(ErrorMessage error) {\n-        errors.add(error);\n+    public Pong(long activeDocuments, boolean isBlockingWrites) {\n+        this(Optional.of(activeDocuments), isBlockingWrites, Optional.empty());\n     }\n \n-    public ErrorMessage getError(int i) {\n-        return errors.get(i);\n+    private Pong(Optional<Long> activeDocuments, boolean isBlockingWrites, Optional<ErrorMessage> error) {\n+        this.activeDocuments = activeDocuments;\n+        this.isBlockingWrites = isBlockingWrites;\n+        this.error = error;\n     }\n \n-    /** Returns the number of active documents in the backend responding in this Pong, if available */\n-    public Optional<Long> activeDocuments() {\n-        return activeDocuments;\n+    /**\n+     * @deprecated do not use. Additional errors are ignored.\n+     */\n+    @Deprecated\n+    public void addError(ErrorMessage error) { }\n+\n+    /**\n+     * @deprecated use error() instead\n+     */\n+    @Deprecated\n+    public ErrorMessage getError(int i) {\n+        if (i > 1) throw new IllegalArgumentException(\"No error at position \" + i);\n+        if (i == 0 && error.isEmpty()) throw new IllegalArgumentException(\"No error at position \" + i);\n+        return error.get();\n     }\n \n-    /** Returns the number of nodes which responded to this Pong, if available */\n+    public Optional<ErrorMessage> error() { return error; }\n+\n+    /** Returns the number of active documents in the backend responding in this Pong, if available */\n+    public Optional<Long> activeDocuments() { return activeDocuments; }\n+\n+    /** Returns true if the pinged node is currently blocking write operations due t being full */", "originalCommit": "19c9987d9e5e38996b51ca5d11f152a9392ddc83", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35a0eafc540baa6b4792545a4d15002c85b0db0b", "chunk": "diff --git a/container-search/src/main/java/com/yahoo/prelude/Pong.java b/container-search/src/main/java/com/yahoo/prelude/Pong.java\nindex ff08d5fb33..1e5513f127 100644\n--- a/container-search/src/main/java/com/yahoo/prelude/Pong.java\n+++ b/container-search/src/main/java/com/yahoo/prelude/Pong.java\n\n@@ -63,7 +63,7 @@ public class Pong {\n     /** Returns the number of active documents in the backend responding in this Pong, if available */\n     public Optional<Long> activeDocuments() { return activeDocuments; }\n \n-    /** Returns true if the pinged node is currently blocking write operations due t being full */\n+    /** Returns true if the pinged node is currently blocking write operations due to being full */\n     public boolean isBlockingWrites() { return isBlockingWrites; }\n \n     /**\n"}}, {"oid": "35a0eafc540baa6b4792545a4d15002c85b0db0b", "url": "https://github.com/vespa-engine/vespa/commit/35a0eafc540baa6b4792545a4d15002c85b0db0b", "message": "Fix comment typo", "committedDate": "2020-01-20T12:08:27Z", "type": "commit"}]}