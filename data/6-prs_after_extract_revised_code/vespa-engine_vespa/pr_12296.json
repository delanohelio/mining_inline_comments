{"pr_number": 12296, "pr_title": "Consider reserved nodes when finding the highest cluster index", "pr_createdAt": "2020-02-20T15:02:19Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12296", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NzM4NQ==", "url": "https://github.com/vespa-engine/vespa/pull/12296#discussion_r382057385", "bodyText": "This should just include all states for which Node.State#isAllocated is true.", "author": "mpolden", "createdAt": "2020-02-20T15:05:36Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/Preparer.java", "diffHunk": "@@ -122,7 +122,8 @@ private void moveToActiveGroup(List<Node> surplusNodes, int wantedGroups, Option\n     private int findHighestIndex(ApplicationId application, ClusterSpec cluster) {\n         int highestIndex = -1;\n         for (Node node : nodeRepository.getNodes(application,\n-                                                 Node.State.active, Node.State.inactive, Node.State.parked, Node.State.failed)) {\n+                                                 Node.State.reserved, Node.State.active, Node.State.inactive,", "originalCommit": "8f5e38b9eab8feadada20a01dc3e1fa73991c5ec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7877ac4b9a8533554f737ecde1d049ff816da949", "chunk": "diff --git a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/Preparer.java b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/Preparer.java\nindex 911c04153f..91c15cdb61 100644\n--- a/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/Preparer.java\n+++ b/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/Preparer.java\n\n@@ -121,9 +121,7 @@ class Preparer {\n      */\n     private int findHighestIndex(ApplicationId application, ClusterSpec cluster) {\n         int highestIndex = -1;\n-        for (Node node : nodeRepository.getNodes(application,\n-                                                 Node.State.reserved, Node.State.active, Node.State.inactive,\n-                                                 Node.State.parked, Node.State.failed)) {\n+        for (Node node : nodeRepository.getNodes(application, Node.State.allocatedStates().toArray(new Node.State[0]))) {\n             ClusterSpec nodeCluster = node.allocation().get().membership().cluster();\n             if ( ! nodeCluster.id().equals(cluster.id())) continue;\n             if ( ! nodeCluster.type().equals(cluster.type())) continue;\n"}}, {"oid": "1b885080e0cc21ef819635c914ed798d9468de40", "url": "https://github.com/vespa-engine/vespa/commit/1b885080e0cc21ef819635c914ed798d9468de40", "message": "Consider reserved nodes when finding the highest cluster index", "committedDate": "2020-02-25T13:12:49Z", "type": "commit"}, {"oid": "7877ac4b9a8533554f737ecde1d049ff816da949", "url": "https://github.com/vespa-engine/vespa/commit/7877ac4b9a8533554f737ecde1d049ff816da949", "message": "Simpflify by pre-defining the set of allocated states.", "committedDate": "2020-02-25T13:12:49Z", "type": "commit"}, {"oid": "21850698bddb16381d35788b84a62a3451c2f0f7", "url": "https://github.com/vespa-engine/vespa/commit/21850698bddb16381d35788b84a62a3451c2f0f7", "message": "Add test (from @freva) to verify that node indices are unique.", "committedDate": "2020-02-25T14:13:42Z", "type": "commit"}, {"oid": "21850698bddb16381d35788b84a62a3451c2f0f7", "url": "https://github.com/vespa-engine/vespa/commit/21850698bddb16381d35788b84a62a3451c2f0f7", "message": "Add test (from @freva) to verify that node indices are unique.", "committedDate": "2020-02-25T14:13:42Z", "type": "forcePushed"}]}