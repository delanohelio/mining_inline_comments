{"pr_number": 15335, "pr_title": "Use a thread safe class for holding header values", "pr_createdAt": "2020-11-13T11:44:53Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15335", "timeline": [{"oid": "4b0de4ce4bd65ac3be1867e5671b9ab9ac524669", "url": "https://github.com/vespa-engine/vespa/commit/4b0de4ce4bd65ac3be1867e5671b9ab9ac524669", "message": "Use a thread safe class for holding header values", "committedDate": "2020-11-13T11:44:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzMyNw==", "url": "https://github.com/vespa-engine/vespa/pull/15335#discussion_r522903327", "bodyText": "Won't this kill performance for high qps applications ?", "author": "baldersheim", "createdAt": "2020-11-13T11:52:45Z", "path": "jdisc_core/src/main/java/com/yahoo/jdisc/HeaderFields.java", "diffHunk": "@@ -14,13 +19,7 @@\n  */\n public class HeaderFields implements Map<String, List<String>> {\n \n-    private final TreeMap<String, List<String>> content = new TreeMap<>(new Comparator<String>() {\n-\n-        @Override\n-        public int compare(String lhs, String rhs) {\n-            return lhs.compareToIgnoreCase(rhs);\n-        }\n-    });\n+    private final ConcurrentSkipListMap<String, List<String>> content = new ConcurrentSkipListMap<>(String::compareToIgnoreCase);", "originalCommit": "4b0de4ce4bd65ac3be1867e5671b9ab9ac524669", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzYxMw==", "url": "https://github.com/vespa-engine/vespa/pull/15335#discussion_r522903613", "bodyText": "How many headers are there?", "author": "jonmv", "createdAt": "2020-11-13T11:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzg1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15335#discussion_r522903853", "bodyText": "We could synchronize the methods instead, I guess.", "author": "jonmv", "createdAt": "2020-11-13T11:53:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwNTUzMA==", "url": "https://github.com/vespa-engine/vespa/pull/15335#discussion_r522905530", "bodyText": "Can't use a syncrhonizedMap, as this class implements Map itself, and exposes all views of the underlying map.", "author": "jonmv", "createdAt": "2020-11-13T11:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwODI0Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15335#discussion_r522908246", "bodyText": "Ah, there are unsynchronized ArrayList objects in the map, so need to do something about them as well.", "author": "jonmv", "createdAt": "2020-11-13T12:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwMzMyNw=="}], "type": "inlineReview", "revised_code": null}]}