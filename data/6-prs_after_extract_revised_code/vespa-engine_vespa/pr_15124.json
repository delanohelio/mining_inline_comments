{"pr_number": 15124, "pr_title": "Bjorncs/detect reindexing config change", "pr_createdAt": "2020-10-30T16:25:55Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15124", "timeline": [{"oid": "9682d9f7c5de1b38943c3c996ac152e896a1f37b", "url": "https://github.com/vespa-engine/vespa/commit/9682d9f7c5de1b38943c3c996ac152e896a1f37b", "message": "Add types for a config change requiring reindexing", "committedDate": "2020-10-30T16:25:23Z", "type": "commit"}, {"oid": "e5edc6a864721e8462df29262b62f801b78b670e", "url": "https://github.com/vespa-engine/vespa/commit/e5edc6a864721e8462df29262b62f801b78b670e", "message": "Changes index mode or indexing script only requires reindexing\n\nA full refeed is not necessary for these types model changes", "committedDate": "2020-10-30T16:25:23Z", "type": "commit"}, {"oid": "cd697c00530831e3dd711d789ca3e2c9873cd362", "url": "https://github.com/vespa-engine/vespa/commit/cd697c00530831e3dd711d789ca3e2c9873cd362", "message": "Workaround for faulty language level detection in IntelliJ", "committedDate": "2020-10-30T16:25:23Z", "type": "commit"}, {"oid": "cc23e7060d7b10ca352cf962b01a3b28c35e90e3", "url": "https://github.com/vespa-engine/vespa/commit/cc23e7060d7b10ca352cf962b01a3b28c35e90e3", "message": "Make method mockable from Mockito", "committedDate": "2020-10-30T16:25:23Z", "type": "commit"}, {"oid": "b3749fb6b3208062783213a33d6083df3f12181d", "url": "https://github.com/vespa-engine/vespa/commit/b3749fb6b3208062783213a33d6083df3f12181d", "message": "Support reindex actions in configserver\n\nThe new classes are essentially carbon copies of the equivalent classes for refeed actions.", "committedDate": "2020-10-30T16:25:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NjAxMg==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515296012", "bodyText": "REINDEX would be consistent with the other names here.", "author": "jonmv", "createdAt": "2020-10-30T18:20:12Z", "path": "config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeAction.java", "diffHunk": "@@ -15,7 +14,7 @@\n public interface ConfigChangeAction {\n \n     enum Type {\n-        RESTART(\"restart\"), REFEED(\"refeed\");\n+        RESTART(\"restart\"), REFEED(\"refeed\"), REINDEXING(\"reindexing\");", "originalCommit": "9682d9f7c5de1b38943c3c996ac152e896a1f37b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4d10a0528531098f8987dc090e9939c50869c31", "chunk": "diff --git a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeAction.java b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeAction.java\nindex 2dfc2c37a4..1248560c93 100644\n--- a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeAction.java\n+++ b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeAction.java\n\n@@ -14,7 +14,7 @@ import java.util.List;\n public interface ConfigChangeAction {\n \n     enum Type {\n-        RESTART(\"restart\"), REFEED(\"refeed\"), REINDEXING(\"reindexing\");\n+        RESTART(\"restart\"), REFEED(\"refeed\"), REINDEX(\"reindex\");\n \n         private final String type;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NjkwNg==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515296906", "bodyText": "Hmm, suggestions don't work today?\nJust wanted to point out typo bed --> be", "author": "jonmv", "createdAt": "2020-10-30T18:21:56Z", "path": "config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java", "diffHunk": "@@ -0,0 +1,20 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.config.model.api;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Represents an action to re-index a document type in order to handle a config change.\n+ *\n+ * @author bjorncs\n+ */\n+public interface ConfigChangeReindexAction extends ConfigChangeAction {\n+\n+    @Override default Type getType() { return Type.REINDEXING; }\n+\n+    /** @return name identifying this kind of change, used to identify names which should be allowed */\n+    String name();\n+\n+    /** @return name of the document type that must bed re-indexed, or empty if all document types */", "originalCommit": "9682d9f7c5de1b38943c3c996ac152e896a1f37b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5ODgzMA==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515298830", "bodyText": "Ah, no suggestions in per-commit-view, of course.", "author": "jonmv", "createdAt": "2020-10-30T18:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NjkwNg=="}], "type": "inlineReview", "revised_code": {"commit": "f4d10a0528531098f8987dc090e9939c50869c31", "chunk": "diff --git a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\nindex 2ae60ba64b..008b7f30fc 100644\n--- a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\n+++ b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\n\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  */\n public interface ConfigChangeReindexAction extends ConfigChangeAction {\n \n-    @Override default Type getType() { return Type.REINDEXING; }\n+    @Override default Type getType() { return Type.REINDEX; }\n \n     /** @return name identifying this kind of change, used to identify names which should be allowed */\n     String name();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NzIyNQ==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515297225", "bodyText": "Hmm, is \"all document types\" an option here?", "author": "jonmv", "createdAt": "2020-10-30T18:22:38Z", "path": "config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java", "diffHunk": "@@ -0,0 +1,20 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.config.model.api;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Represents an action to re-index a document type in order to handle a config change.\n+ *\n+ * @author bjorncs\n+ */\n+public interface ConfigChangeReindexAction extends ConfigChangeAction {\n+\n+    @Override default Type getType() { return Type.REINDEXING; }\n+\n+    /** @return name identifying this kind of change, used to identify names which should be allowed */\n+    String name();\n+\n+    /** @return name of the document type that must bed re-indexed, or empty if all document types */\n+    Optional<String> getDocumentType();", "originalCommit": "9682d9f7c5de1b38943c3c996ac152e896a1f37b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3MTc1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515871757", "bodyText": "I'm not sure, most likely not. The programmatic API allows it to be null. It is first null and then later updated with document type (uncertain whether this always happen).", "author": "bjorncs", "createdAt": "2020-11-02T10:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NzIyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f4d10a0528531098f8987dc090e9939c50869c31", "chunk": "diff --git a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\nindex 2ae60ba64b..008b7f30fc 100644\n--- a/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\n+++ b/config-model-api/src/main/java/com/yahoo/config/model/api/ConfigChangeReindexAction.java\n\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  */\n public interface ConfigChangeReindexAction extends ConfigChangeAction {\n \n-    @Override default Type getType() { return Type.REINDEXING; }\n+    @Override default Type getType() { return Type.REINDEX; }\n \n     /** @return name identifying this kind of change, used to identify names which should be allowed */\n     String name();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5OTkzNQ==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r515299935", "bodyText": "s/indexing/index/g", "author": "jonmv", "createdAt": "2020-10-30T18:28:04Z", "path": "config-model/src/test/java/com/yahoo/vespa/model/application/validation/change/ConfigChangeTestUtils.java", "diffHunk": "@@ -37,6 +37,15 @@ public static VespaConfigChangeAction newRefeedAction(ClusterSpec.Id id, String\n         return VespaRefeedAction.of(id, name, overrides, message, services, documentType, now);\n     }\n \n+    public static VespaConfigChangeAction newReindexingAction(ClusterSpec.Id id, String name, ValidationOverrides overrides, String message, Instant now) {", "originalCommit": "e5edc6a864721e8462df29262b62f801b78b670e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78c288b94c158d58ded884aa5592cf9d1f8f1b32", "chunk": "diff --git a/config-model/src/test/java/com/yahoo/vespa/model/application/validation/change/ConfigChangeTestUtils.java b/config-model/src/test/java/com/yahoo/vespa/model/application/validation/change/ConfigChangeTestUtils.java\nindex c957700939..f3f9022f6f 100644\n--- a/config-model/src/test/java/com/yahoo/vespa/model/application/validation/change/ConfigChangeTestUtils.java\n+++ b/config-model/src/test/java/com/yahoo/vespa/model/application/validation/change/ConfigChangeTestUtils.java\n\n@@ -37,12 +37,12 @@ public class ConfigChangeTestUtils {\n         return VespaRefeedAction.of(id, name, overrides, message, services, documentType, now);\n     }\n \n-    public static VespaConfigChangeAction newReindexingAction(ClusterSpec.Id id, String name, ValidationOverrides overrides, String message, Instant now) {\n+    public static VespaConfigChangeAction newReindexAction(ClusterSpec.Id id, String name, ValidationOverrides overrides, String message, Instant now) {\n         return VespaReindexAction.of(id, name, overrides, message, now);\n     }\n \n-    public static VespaConfigChangeAction newReindexingAction(ClusterSpec.Id id, String name, ValidationOverrides overrides, String message,\n-                                                          List<ServiceInfo> services, String documentType, Instant now) {\n+    public static VespaConfigChangeAction newReindexAction(ClusterSpec.Id id, String name, ValidationOverrides overrides, String message,\n+                                                           List<ServiceInfo> services, String documentType, Instant now) {\n         return VespaReindexAction.of(id, name, overrides, message, services, documentType, now);\n     }\n \n"}}, {"oid": "f4d10a0528531098f8987dc090e9939c50869c31", "url": "https://github.com/vespa-engine/vespa/commit/f4d10a0528531098f8987dc090e9939c50869c31", "message": "Rename 'REINDEXING' => 'REINDEX'", "committedDate": "2020-11-02T08:54:11Z", "type": "commit"}, {"oid": "89c43763d88b080840dcbb07b42d35c16a38d5fe", "url": "https://github.com/vespa-engine/vespa/commit/89c43763d88b080840dcbb07b42d35c16a38d5fe", "message": "Fix typo in Javadoc comment", "committedDate": "2020-11-02T08:54:55Z", "type": "commit"}, {"oid": "78c288b94c158d58ded884aa5592cf9d1f8f1b32", "url": "https://github.com/vespa-engine/vespa/commit/78c288b94c158d58ded884aa5592cf9d1f8f1b32", "message": "Rename 'newReindexingAction' => 'newReindexAction'", "committedDate": "2020-11-02T10:22:35Z", "type": "commit"}, {"oid": "d86b5a0fe4388c105144db08ba01e79f5410f1df", "url": "https://github.com/vespa-engine/vespa/commit/d86b5a0fe4388c105144db08ba01e79f5410f1df", "message": "Assume document type is always present after validation is complete", "committedDate": "2020-11-02T11:40:13Z", "type": "commit"}, {"oid": "e3cdbc1d2f84860fe1027045daddb8681cc009ca", "url": "https://github.com/vespa-engine/vespa/commit/e3cdbc1d2f84860fe1027045daddb8681cc009ca", "message": "Expose which document types have indexing mode 'indexed' and 'streaming'", "committedDate": "2020-11-03T13:32:30Z", "type": "commit"}, {"oid": "5863d0e39cb17a358fce3caf46f357d9bd6308cb", "url": "https://github.com/vespa-engine/vespa/commit/5863d0e39cb17a358fce3caf46f357d9bd6308cb", "message": "Detect which document types that have changed indexing mode", "committedDate": "2020-11-03T13:38:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4MTczMg==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516681732", "bodyText": "Not sure this first part is needed?", "author": "jonmv", "createdAt": "2020-11-03T13:54:17Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/ContentSearchCluster.java", "diffHunk": "@@ -336,6 +336,28 @@ public void handleRedundancy(Redundancy redundancy) {\n                 .collect(Collectors.toList());\n     }\n \n+    public List<NewDocumentType> getDocumentTypesWithStreamingCluster() {\n+        List<NewDocumentType> streamingDocTypes = new ArrayList<>();\n+        for (NewDocumentType type : documentDefinitions.values()) {\n+            if (findStreamingCluster(type.getFullName().getName()).isPresent()) {\n+                streamingDocTypes.add(type);\n+            }\n+        }\n+        return streamingDocTypes;\n+    }\n+\n+    public List<NewDocumentType> getDocumentTypesWithIndexedCluster() {\n+        List<NewDocumentType> indexedDocTypes = new ArrayList<>();\n+        for (NewDocumentType type : documentDefinitions.values()) {\n+            if (findStreamingCluster(type.getFullName().getName()).isEmpty()", "originalCommit": "e3cdbc1d2f84860fe1027045daddb8681cc009ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4Nzc2NA==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516687764", "bodyText": "It mimics the semantics of getConfig", "author": "bjorncs", "createdAt": "2020-11-03T14:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4MTczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTE0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516689147", "bodyText": "Yeah, if we need to separate streaming and store-only, we need it.", "author": "jonmv", "createdAt": "2020-11-03T14:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4MTczMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4Mzk0MA==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516683940", "bodyText": "I don't think we need this, as we should be happy checking whether a document changes between \"index\" and not \"index\".", "author": "jonmv", "createdAt": "2020-11-03T13:57:33Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/ContentSearchCluster.java", "diffHunk": "@@ -336,6 +336,28 @@ public void handleRedundancy(Redundancy redundancy) {\n                 .collect(Collectors.toList());\n     }\n \n+    public List<NewDocumentType> getDocumentTypesWithStreamingCluster() {", "originalCommit": "e3cdbc1d2f84860fe1027045daddb8681cc009ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODM1NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516688355", "bodyText": "It's the transitions between indexing modes we want to react on. We have to check if the document type is new or removed otherwise.", "author": "bjorncs", "createdAt": "2020-11-03T14:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4Mzk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5MDEzOQ==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516690139", "bodyText": "But a document type must be either indexed or not \u2014\u00a0it would suffice to check whether it went from indexed to not indexed, or the other way, I believe.", "author": "jonmv", "createdAt": "2020-11-03T14:06:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4Mzk0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4NDIyMw==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516684223", "bodyText": "We'll miss changes from \"index\" to \"store-only\", or vv.", "author": "jonmv", "createdAt": "2020-11-03T13:57:55Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/application/validation/change/IndexingModeChangeValidator.java", "diffHunk": "@@ -27,31 +35,56 @@\n         for (Map.Entry<String, ContentCluster> currentEntry : currentModel.getContentClusters().entrySet()) {\n             ContentCluster nextCluster = nextModel.getContentClusters().get(currentEntry.getKey());\n             if (nextCluster == null) continue;\n-\n-            Optional<ConfigChangeAction> change = validateContentCluster(currentEntry.getValue(), nextCluster, overrides, now);\n-            if (change.isPresent())\n-                actions.add(change.get());\n+            actions.addAll(validateContentCluster(currentEntry.getValue(), nextCluster, overrides, now));\n         }\n         return actions;\n     }\n \n-    private Optional<ConfigChangeAction> validateContentCluster(ContentCluster currentCluster, ContentCluster nextCluster,\n-                                                                ValidationOverrides overrides, Instant now) {\n-        boolean currentClusterIsIndexed = currentCluster.getSearch().hasIndexedCluster();\n-        boolean nextClusterIsIndexed = nextCluster.getSearch().hasIndexedCluster();\n-\n-        if (currentClusterIsIndexed == nextClusterIsIndexed) return Optional.empty();\n+    private List<ConfigChangeAction> validateContentCluster(\n+            ContentCluster currentCluster, ContentCluster nextCluster, ValidationOverrides overrides, Instant now) {\n+        List<ConfigChangeAction> changes = new ArrayList<>();\n+        ContentSearchCluster currentSearchCluster = currentCluster.getSearch();\n+        ContentSearchCluster nextSearchCluster = nextCluster.getSearch();\n+        {\n+            Set<String> currentStreamingTypes = toDocumentTypeNames(currentSearchCluster.getDocumentTypesWithStreamingCluster());\n+            Set<String> nextIndexedTypes = toDocumentTypeNames(nextSearchCluster.getDocumentTypesWithIndexedCluster());\n+            for (String type : nextIndexedTypes) {\n+                if (currentStreamingTypes.contains(type)) {\n+                    changes.add(createReindexAction(overrides, now, nextCluster, type, \"streaming\", \"indexed\"));\n+                }\n+            }\n+        }\n+        {\n+            Set<String> currentIndexedTypes = toDocumentTypeNames(currentSearchCluster.getDocumentTypesWithIndexedCluster());\n+            Set<String> nextStreamingTypes = toDocumentTypeNames(nextSearchCluster.getDocumentTypesWithStreamingCluster());\n+            for (String type : nextStreamingTypes) {\n+                if (currentIndexedTypes.contains(type)) {\n+                    changes.add(createReindexAction(overrides, now, nextCluster, type, \"indexed\", \"streaming\"));\n+                }\n+            }\n+        }\n+        return changes;", "originalCommit": "5863d0e39cb17a358fce3caf46f357d9bd6308cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODUwNA==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516688504", "bodyText": "Ok, I can add that as well", "author": "bjorncs", "createdAt": "2020-11-03T14:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4NDIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5MTA1MA==", "url": "https://github.com/vespa-engine/vespa/pull/15124#discussion_r516691050", "bodyText": "Ok, later.", "author": "jonmv", "createdAt": "2020-11-03T14:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4NDIyMw=="}], "type": "inlineReview", "revised_code": null}]}