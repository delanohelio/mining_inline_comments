{"pr_number": 13779, "pr_title": "Bratseth/healt check improvements", "pr_createdAt": "2020-07-02T10:52:01Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13779", "timeline": [{"oid": "eb37f7dcbd89143715fbe9b838a91b296db0a3c9", "url": "https://github.com/vespa-engine/vespa/commit/eb37f7dcbd89143715fbe9b838a91b296db0a3c9", "message": "Improvements to handling of cluster removal\n\n- Don't change health status to \"initializing\" when creating a new VipStatus,\n  as 'initializing' now requires all clusters to be up to transition to 'up',\n  which means that if we're already up but are missing a cluster we'll go from\n  'up' to 'initializing' and stay there.\n- Forget up/down status for removed clusters.\n- Nicer logging on ignorable reconfiguration errors.", "committedDate": "2020-07-02T09:54:43Z", "type": "commit"}, {"oid": "96a3e9f538ee5c542566cc5cb7f5d4c35453dcde", "url": "https://github.com/vespa-engine/vespa/commit/96a3e9f538ee5c542566cc5cb7f5d4c35453dcde", "message": "Add test", "committedDate": "2020-07-02T10:50:47Z", "type": "commit"}, {"oid": "44ee41136395122c2d13a738b2dc9b0b66f69917", "url": "https://github.com/vespa-engine/vespa/commit/44ee41136395122c2d13a738b2dc9b0b66f69917", "message": "Update ABI spec", "committedDate": "2020-07-02T10:55:53Z", "type": "commit"}, {"oid": "e940918acdd342277b8beabbeae89a6e72cfb83b", "url": "https://github.com/vespa-engine/vespa/commit/e940918acdd342277b8beabbeae89a6e72cfb83b", "message": "Update expected message", "committedDate": "2020-07-02T11:11:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNDkwMQ==", "url": "https://github.com/vespa-engine/vespa/pull/13779#discussion_r448934901", "bodyText": "Use isEmpty ?", "author": "baldersheim", "createdAt": "2020-07-02T11:29:35Z", "path": "container-core/src/main/java/com/yahoo/container/handler/ClustersStatus.java", "diffHunk": "@@ -37,11 +39,15 @@ public ClustersStatus() { }\n     /** The status of clusters, when known. Note that clusters may exist for which there is no knowledge yet. */\n     private final Map<String, Boolean> clusterStatus = new HashMap<>();\n \n-    public void setContainerHasClusters(boolean containerHasClusters) {\n+    /** Sets the current clusters of this container */\n+    public void setClusters(Set<String> clusters) {\n         synchronized (mutex) {\n-            this.containerHasClusters = containerHasClusters;\n-            if ( ! containerHasClusters)\n-                clusterStatus.clear(); // forget container clusters which was configured away\n+            this.containerHasClusters = clusters.size() > 0;", "originalCommit": "e940918acdd342277b8beabbeae89a6e72cfb83b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTE2Ng==", "url": "https://github.com/vespa-engine/vespa/pull/13779#discussion_r448955166", "bodyText": "I actually think this is slightly clearer by avoiding negation.", "author": "bratseth", "createdAt": "2020-07-02T12:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNDkwMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNjExOQ==", "url": "https://github.com/vespa-engine/vespa/pull/13779#discussion_r448936119", "bodyText": "You probably need a separate catch for nextConfig() that is SEVERE to ensure you you only blame the subscriber when it is truly to blame.", "author": "baldersheim", "createdAt": "2020-07-02T11:32:09Z", "path": "config/src/main/java/com/yahoo/config/subscription/ConfigSubscriber.java", "diffHunk": "@@ -423,21 +423,26 @@ public boolean isClosed() {\n      * @return The handle of the config\n      * @see #startConfigThread(Runnable)\n      */\n-    public <T extends ConfigInstance> ConfigHandle<T> subscribe(final SingleSubscriber<T> singleSubscriber, Class<T> configClass, String configId) {\n-        if (!subscriptionHandles.isEmpty())\n-            throw new IllegalStateException(\"Can not start single-subscription because subscriptions were previously opened on this.\");\n-        final ConfigHandle<T> handle = subscribe(configClass, configId);\n-        if (!nextConfig())\n-            throw new ConfigurationRuntimeException(\"Initial config of \" + configClass.getName() + \" failed.\");\n+    public <T extends ConfigInstance> ConfigHandle<T> subscribe(SingleSubscriber<T> singleSubscriber, Class<T> configClass, String configId) {\n+        if ( ! subscriptionHandles.isEmpty())\n+            throw new IllegalStateException(\"Can not start single-subscription because subscriptions were previously opened on this\");\n+\n+        ConfigHandle<T> handle = subscribe(configClass, configId);\n+\n+        if ( ! nextConfig())\n+            throw new ConfigurationRuntimeException(\"Initial config of \" + configClass.getName() + \" failed\");\n+\n         singleSubscriber.configure(handle.getConfig());\n         startConfigThread(() -> {\n                 while (!isClosed()) {\n                     try {\n-                        if (nextConfig()) {\n-                            if (handle.isChanged()) singleSubscriber.configure(handle.getConfig());\n-                        }\n-                    } catch (Exception e) {\n-                        log.log(SEVERE, \"Exception from config system, continuing config thread: \" + Exceptions.toMessageString(e));\n+                        if (nextConfig() && handle.isChanged())\n+                            singleSubscriber.configure(handle.getConfig());", "originalCommit": "e940918acdd342277b8beabbeae89a6e72cfb83b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1ODQ0OQ==", "url": "https://github.com/vespa-engine/vespa/pull/13779#discussion_r448958449", "bodyText": "Good point, done.", "author": "bratseth", "createdAt": "2020-07-02T12:16:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNjExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b099ae866e7a99b27b364f6c26157e786cc090c", "chunk": "diff --git a/config/src/main/java/com/yahoo/config/subscription/ConfigSubscriber.java b/config/src/main/java/com/yahoo/config/subscription/ConfigSubscriber.java\nindex dbe27e2933..5fcbd4f8c2 100644\n--- a/config/src/main/java/com/yahoo/config/subscription/ConfigSubscriber.java\n+++ b/config/src/main/java/com/yahoo/config/subscription/ConfigSubscriber.java\n\n@@ -435,14 +435,23 @@ public class ConfigSubscriber implements AutoCloseable {\n         singleSubscriber.configure(handle.getConfig());\n         startConfigThread(() -> {\n                 while (!isClosed()) {\n+                    boolean hasNewConfig = false;\n+\n+                    try {\n+                        hasNewConfig = nextConfig();\n+                    }\n+                    catch (Exception e) {\n+                        log.log(SEVERE, \"Exception on receiving config. Ignoring this change.\", e);\n+                    }\n+\n                     try {\n-                        if (nextConfig() && handle.isChanged())\n+                        if (hasNewConfig)\n                             singleSubscriber.configure(handle.getConfig());\n                     }\n                     catch (Exception e) {\n-                        log.log(WARNING, \"Exception on applying config \" + configClass.getName() +\n-                                         \" for config id \" + configId + \": Ignoring this change: \" +\n-                                         Exceptions.toMessageString(e));\n+                        log.warning(\"Exception on applying config \" + configClass.getName() +\n+                                    \" for config id \" + configId + \": Ignoring this change: \" +\n+                                    Exceptions.toMessageString(e));\n                     }\n                 }\n             }\n"}}, {"oid": "2b099ae866e7a99b27b364f6c26157e786cc090c", "url": "https://github.com/vespa-engine/vespa/commit/2b099ae866e7a99b27b364f6c26157e786cc090c", "message": "Separate logging for errors on get and apply config", "committedDate": "2020-07-02T12:16:00Z", "type": "commit"}]}