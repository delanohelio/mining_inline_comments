{"pr_number": 13402, "pr_title": "Bratseth/lowest real resources allocating", "pr_createdAt": "2020-05-27T13:43:09Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13402", "timeline": [{"oid": "c2f6a3263989d0d4943e7b42af515d152b125a3c", "url": "https://github.com/vespa-engine/vespa/commit/c2f6a3263989d0d4943e7b42af515d152b125a3c", "message": "Consider the lowest real resources we'll get when allocating", "committedDate": "2020-05-26T09:26:38Z", "type": "commit"}, {"oid": "539e048479d1bf89400ff090f853c067818b5401", "url": "https://github.com/vespa-engine/vespa/commit/539e048479d1bf89400ff090f853c067818b5401", "message": "Prepare to take overhead into account when allocating shared", "committedDate": "2020-05-26T19:38:28Z", "type": "commit"}, {"oid": "c8ae53bbc4499fe8fe0e8b480440fbbbb2737779", "url": "https://github.com/vespa-engine/vespa/commit/c8ae53bbc4499fe8fe0e8b480440fbbbb2737779", "message": "Make room for overhead when allocating on shared nodes", "committedDate": "2020-05-26T20:16:47Z", "type": "commit"}, {"oid": "683855764e234ee1f12fabc10987d190bc3bbac1", "url": "https://github.com/vespa-engine/vespa/commit/683855764e234ee1f12fabc10987d190bc3bbac1", "message": "Map both ways", "committedDate": "2020-05-27T12:09:19Z", "type": "commit"}, {"oid": "c24b673cccf97a0fa01dbd70cb815442548513d5", "url": "https://github.com/vespa-engine/vespa/commit/c24b673cccf97a0fa01dbd70cb815442548513d5", "message": "Approx floating point equals", "committedDate": "2020-05-27T13:29:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzMDY3Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13402#discussion_r431230677", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This calculator subtracts the memory tac when forecasting overhead, but not when actually\n          \n          \n            \n                 * This calculator subtracts the memory tax when forecasting overhead, but not when actually", "author": "freva", "createdAt": "2020-05-27T15:26:53Z", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java", "diffHunk": "@@ -325,4 +366,40 @@ public void testAutoscalingAws() {\n                                tester.autoscale(application1, cluster1.id(), min, max));\n     }\n \n+    /**\n+     * This calculator subtracts the memory tac when forecasting overhead, but not when actually", "originalCommit": "c24b673cccf97a0fa01dbd70cb815442548513d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69354e4b11df24bd7341c0edcbf9f44e5e15a781", "chunk": "diff --git a/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java b/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java\nindex 69ef64d2e3..3a87b5967f 100644\n--- a/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java\n+++ b/node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java\n\n@@ -367,7 +367,7 @@ public class AutoscalingTest {\n     }\n \n     /**\n-     * This calculator subtracts the memory tac when forecasting overhead, but not when actually\n+     * This calculator subtracts the memory tax when forecasting overhead, but not when actually\n      * returning information about nodes. This is allowed because the forecast is a *worst case*.\n      * It is useful here because it ensures that we end up with the same real (and therefore target)\n      * resources regardless of tax which makes it easier to compare behavior with different tax levels.\n"}}, {"oid": "69354e4b11df24bd7341c0edcbf9f44e5e15a781", "url": "https://github.com/vespa-engine/vespa/commit/69354e4b11df24bd7341c0edcbf9f44e5e15a781", "message": "Update node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java\n\nCo-authored-by: Valerij Fredriksen <freva@users.noreply.github.com>", "committedDate": "2020-05-27T17:23:08Z", "type": "commit"}]}