{"pr_number": 11672, "pr_title": "Validate hostnames on setup", "pr_createdAt": "2020-01-07T11:39:02Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11672", "timeline": [{"oid": "cf98aea5e47f823fe3efc87073010e39d1048956", "url": "https://github.com/vespa-engine/vespa/commit/cf98aea5e47f823fe3efc87073010e39d1048956", "message": "Validate hostnames on setup", "committedDate": "2020-01-07T11:36:14Z", "type": "commit"}, {"oid": "b0d801daed411fa114223a5e6f0663b595334de5", "url": "https://github.com/vespa-engine/vespa/commit/b0d801daed411fa114223a5e6f0663b595334de5", "message": "Use 'localhost' as hostname", "committedDate": "2020-01-07T12:15:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczMzQwNQ==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363733405", "bodyText": "Consider extending test name with what the expected behavior is, e.g. unknownHostThrowsExceptionAtConstructionTime", "author": "vekterli", "createdAt": "2020-01-07T12:52:45Z", "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {", "originalCommit": "b0d801daed411fa114223a5e6f0663b595334de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NDgzNw==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363744837", "bodyText": "Done", "author": "bratseth", "createdAt": "2020-01-07T13:23:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczMzQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "chunk": "diff --git a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\nindex 54293495d5..0c636ba804 100644\n--- a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n+++ b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n\n@@ -414,15 +415,27 @@ public class OperationProcessorTest {\n     }\n \n     @Test\n-    public void testUnknownHost() {\n+    public void unknownHostThrowsExceptionAtConstructionTime() {\n         try {\n-            new SessionParams.Builder()\n+            SessionParams sessionParams = new SessionParams.Builder()\n                     .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n-                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown.invalid\")).build())\n                     .build();\n+            ScheduledThreadPoolExecutor executor = mock(ScheduledThreadPoolExecutor.class);\n+\n+            CountDownLatch countDownLatch = new CountDownLatch(3);\n+\n+            OperationProcessor operationProcessor = new OperationProcessor(\n+                    new IncompleteResultsThrottler(19, 19, null, null),\n+                    (docId, documentResult) -> {\n+                        countDownLatch.countDown();\n+                    },\n+                    sessionParams, executor);\n+\n+            fail(\"Expected exception\");\n         }\n         catch (IllegalArgumentException e) {\n-            assertEquals(\"\", e.getMessage());\n+            assertEquals(\"Unknown host: unknown.invalid:4080 ssl=false\", e.getMessage());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNTMwOQ==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363735309", "bodyText": "Consider using a reserved TLD to minimize the chance that someone has a valid host mapping for \"unknown\", e.g. something like \"unknown.invalid\" (RFC6761)", "author": "vekterli", "createdAt": "2020-01-07T12:57:57Z", "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())", "originalCommit": "b0d801daed411fa114223a5e6f0663b595334de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NDk1NQ==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363744955", "bodyText": "Good one, done", "author": "bratseth", "createdAt": "2020-01-07T13:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNTMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "chunk": "diff --git a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\nindex 54293495d5..0c636ba804 100644\n--- a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n+++ b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n\n@@ -414,15 +415,27 @@ public class OperationProcessorTest {\n     }\n \n     @Test\n-    public void testUnknownHost() {\n+    public void unknownHostThrowsExceptionAtConstructionTime() {\n         try {\n-            new SessionParams.Builder()\n+            SessionParams sessionParams = new SessionParams.Builder()\n                     .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n-                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown.invalid\")).build())\n                     .build();\n+            ScheduledThreadPoolExecutor executor = mock(ScheduledThreadPoolExecutor.class);\n+\n+            CountDownLatch countDownLatch = new CountDownLatch(3);\n+\n+            OperationProcessor operationProcessor = new OperationProcessor(\n+                    new IncompleteResultsThrottler(19, 19, null, null),\n+                    (docId, documentResult) -> {\n+                        countDownLatch.countDown();\n+                    },\n+                    sessionParams, executor);\n+\n+            fail(\"Expected exception\");\n         }\n         catch (IllegalArgumentException e) {\n-            assertEquals(\"\", e.getMessage());\n+            assertEquals(\"Unknown host: unknown.invalid:4080 ssl=false\", e.getMessage());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjUzOA==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363736538", "bodyText": "Based on the code, shouldn't this be \"Unknown host: unknown\"?", "author": "vekterli", "createdAt": "2020-01-07T13:01:18Z", "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .build();\n+        }\n+        catch (IllegalArgumentException e) {\n+            assertEquals(\"\", e.getMessage());", "originalCommit": "b0d801daed411fa114223a5e6f0663b595334de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NTAxNw==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363745017", "bodyText": "Yes, fixed.", "author": "bratseth", "createdAt": "2020-01-07T13:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "chunk": "diff --git a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\nindex 54293495d5..0c636ba804 100644\n--- a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n+++ b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n\n@@ -414,15 +415,27 @@ public class OperationProcessorTest {\n     }\n \n     @Test\n-    public void testUnknownHost() {\n+    public void unknownHostThrowsExceptionAtConstructionTime() {\n         try {\n-            new SessionParams.Builder()\n+            SessionParams sessionParams = new SessionParams.Builder()\n                     .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n-                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown.invalid\")).build())\n                     .build();\n+            ScheduledThreadPoolExecutor executor = mock(ScheduledThreadPoolExecutor.class);\n+\n+            CountDownLatch countDownLatch = new CountDownLatch(3);\n+\n+            OperationProcessor operationProcessor = new OperationProcessor(\n+                    new IncompleteResultsThrottler(19, 19, null, null),\n+                    (docId, documentResult) -> {\n+                        countDownLatch.countDown();\n+                    },\n+                    sessionParams, executor);\n+\n+            fail(\"Expected exception\");\n         }\n         catch (IllegalArgumentException e) {\n-            assertEquals(\"\", e.getMessage());\n+            assertEquals(\"Unknown host: unknown.invalid:4080 ssl=false\", e.getMessage());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjkxNg==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363736916", "bodyText": "Consider using an exception expectation as part of the test declaration instead of an explicit catch. This test will currently succeed if the code doesn't throw as well.", "author": "vekterli", "createdAt": "2020-01-07T13:02:22Z", "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .build();\n+        }\n+        catch (IllegalArgumentException e) {", "originalCommit": "b0d801daed411fa114223a5e6f0663b595334de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NTM4Nw==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363745387", "bodyText": "But I want to assert on the error message.", "author": "bratseth", "createdAt": "2020-01-07T13:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjkxNg=="}], "type": "inlineReview", "revised_code": {"commit": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "chunk": "diff --git a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\nindex 54293495d5..0c636ba804 100644\n--- a/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n+++ b/vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java\n\n@@ -414,15 +415,27 @@ public class OperationProcessorTest {\n     }\n \n     @Test\n-    public void testUnknownHost() {\n+    public void unknownHostThrowsExceptionAtConstructionTime() {\n         try {\n-            new SessionParams.Builder()\n+            SessionParams sessionParams = new SessionParams.Builder()\n                     .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n-                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown.invalid\")).build())\n                     .build();\n+            ScheduledThreadPoolExecutor executor = mock(ScheduledThreadPoolExecutor.class);\n+\n+            CountDownLatch countDownLatch = new CountDownLatch(3);\n+\n+            OperationProcessor operationProcessor = new OperationProcessor(\n+                    new IncompleteResultsThrottler(19, 19, null, null),\n+                    (docId, documentResult) -> {\n+                        countDownLatch.countDown();\n+                    },\n+                    sessionParams, executor);\n+\n+            fail(\"Expected exception\");\n         }\n         catch (IllegalArgumentException e) {\n-            assertEquals(\"\", e.getMessage());\n+            assertEquals(\"Unknown host: unknown.invalid:4080 ssl=false\", e.getMessage());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczODQ1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363738453", "bodyText": "Consider making static", "author": "vekterli", "createdAt": "2020-01-07T13:06:47Z", "path": "vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java", "diffHunk": "@@ -90,8 +92,17 @@\n             endOfFeed = END_OF_FEED_XML;\n         }\n         this.clientId = clientId;\n-        if (this.clientId == null) {\n-            throw new RuntimeException(\"Got no client Id.\");\n+        if (this.clientId == null)\n+            throw new IllegalArgumentException(\"Got no client Id.\");\n+    }\n+\n+    private Endpoint validate(Endpoint endpoint) {", "originalCommit": "b0d801daed411fa114223a5e6f0663b595334de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0NTgwMA==", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363745800", "bodyText": "Done", "author": "bratseth", "createdAt": "2020-01-07T13:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczODQ1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a11412b2f0184c2cc0c102c38d9701aff1bb27ae", "chunk": "diff --git a/vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java b/vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java\nindex 2faa6d8642..0e7488c892 100644\n--- a/vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java\n+++ b/vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java\n\n@@ -96,7 +96,7 @@ class ApacheGatewayConnection implements GatewayConnection {\n             throw new IllegalArgumentException(\"Got no client Id.\");\n     }\n \n-    private Endpoint validate(Endpoint endpoint) {\n+    private static Endpoint validate(Endpoint endpoint) {\n         try {\n             InetAddress.getByName(endpoint.getHostname());\n             return endpoint;\n"}}, {"oid": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "url": "https://github.com/vespa-engine/vespa/commit/b92b5c31216fb331d9bc6b63c13c99424e7991d9", "message": "Test properly", "committedDate": "2020-01-07T13:23:19Z", "type": "commit"}, {"oid": "a11412b2f0184c2cc0c102c38d9701aff1bb27ae", "url": "https://github.com/vespa-engine/vespa/commit/a11412b2f0184c2cc0c102c38d9701aff1bb27ae", "message": "Make static", "committedDate": "2020-01-07T13:31:04Z", "type": "commit"}]}