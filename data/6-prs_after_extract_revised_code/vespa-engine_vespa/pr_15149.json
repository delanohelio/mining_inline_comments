{"pr_number": 15149, "pr_title": "Adding feature flasg for", "pr_createdAt": "2020-11-02T21:48:41Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15149", "timeline": [{"oid": "19aeab828f827891646ca38619be7d80fd646bb6", "url": "https://github.com/vespa-engine/vespa/commit/19aeab828f827891646ca38619be7d80fd646bb6", "message": "Adding feature flasg for\n- stor-filestor.use_async_message_handling_on_schedule\n- stor-filestor.bucket_merge_chunk_size\n- stor-server.content_node_bucket_db_stripe_bits", "committedDate": "2020-11-02T21:35:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyNzU1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516527551", "bodyText": "Consider renaming Messagehandling -> MessageHandling", "author": "vekterli", "createdAt": "2020-11-03T09:30:47Z", "path": "config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java", "diffHunk": "@@ -49,6 +49,9 @@\n     private Quota quota = Quota.unlimited();\n     private boolean useAccessControlTlsHandshakeClientAuth;\n     private double jettyThreadpoolSizeFactor = 0.0;\n+    private boolean useAsyncMessagehandlingOnSchedule = false;", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3Mjc3Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516572776", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-03T10:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyNzU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java b/config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java\nindex 9c8bc9eb17..77705d505a 100644\n--- a/config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java\n+++ b/config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java\n\n@@ -49,7 +49,7 @@ public class TestProperties implements ModelContext.Properties {\n     private Quota quota = Quota.unlimited();\n     private boolean useAccessControlTlsHandshakeClientAuth;\n     private double jettyThreadpoolSizeFactor = 0.0;\n-    private boolean useAsyncMessagehandlingOnSchedule = false;\n+    private boolean useAsyncMessageHandlingOnSchedule = false;\n     private int contentNodeBucketDBStripeBits = 0;\n     private int mergeChunkSize = 0x400000 - 0x1000; // 4M -4k\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516531786", "bodyText": "Consider creating a separate method (e.g. alignUp2MiB) and possibly add a comment indicating why this is done", "author": "vekterli", "createdAt": "2020-11-03T09:37:49Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NTc4MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516555781", "bodyText": "Also, do we need the -4KiB adjustment with today's allocation strategies? The config comment mentions this as being done to avoid hitting the next malloc size class, but I'm not sure if this is relevant now.", "author": "vekterli", "createdAt": "2020-11-03T10:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4NjIzNA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516586234", "bodyText": "Separated out the 2MB alignment and removed the 4k reservation. Also updated the description.", "author": "baldersheim", "createdAt": "2020-11-03T11:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java b/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\nindex a5afb998a7..fd4de13be3 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\n\n@@ -57,16 +56,17 @@ public class FileStorProducer implements StorFilestorConfig.Producer {\n             return StorFilestorConfig.Response_sequencer_type.Enum.ADAPTIVE;\n         }\n     }\n-    public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+    private static int alignUp2MiB(int value) {\n         final int twoMB = 0x200000;\n-        final int fourK = 0x1000;\n+        return ((value + twoMB - 1)/twoMB) * twoMB;\n+    }\n+    public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n         useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n-        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;\n-\n+        mergeChunkSize = alignUp2MiB(properties.mergeChunkSize()); // Align up to default huge page size.\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NDM1MA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516554350", "bodyText": "Should this return the default 4MiB value instead?", "author": "vekterli", "createdAt": "2020-11-03T10:12:45Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -313,6 +322,13 @@ public boolean useFastValueTensorImplementation() {\n         @Override public boolean useAccessControlTlsHandshakeClientAuth() { return useAccessControlTlsHandshakeClientAuth; }\n \n         @Override public double jettyThreadpoolSizeFactor() { return jettyThreadpoolSizeFactor; }\n+\n+        @Override public boolean useAsyncMessageHandlingOnSchedule() { return false; }\n+\n+        @Override public int contentNodeBucketDBStripeBits() { return 0; }\n+\n+        @Override\n+        public int mergeChunkSize() { return 0; }", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MzU4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516573586", "bodyText": "Argh, using intellij generate metod adds a default that is easily forgotten.\nFixed and added test.", "author": "baldersheim", "createdAt": "2020-11-03T10:44:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NDM1MA=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java b/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\nindex 2ac4295b3c..2bd39bff1e 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\n\n@@ -309,26 +309,17 @@ public class ModelContextImpl implements ModelContext {\n         @Override public String jvmGCOptions() { return jvmGCOPtions; }\n         @Override public String feedSequencerType() { return feedSequencer; }\n         @Override public String responseSequencerType() { return responseSequencer; }\n-        @Override public int defaultNumResponseThreads() {\n-            return numResponseThreads;\n-        }\n+        @Override public int defaultNumResponseThreads() { return numResponseThreads; }\n         @Override public boolean skipCommunicationManagerThread() { return skipCommunicationManagerThread; }\n         @Override public boolean skipMbusRequestThread() { return skipMbusRequestThread; }\n         @Override public boolean skipMbusReplyThread() { return skipMbusReplyThread; }\n         @Override public Quota quota() { return quota; }\n-\n         @Override public boolean useNewRestapiHandler() { return useNewRestapiHandler; }\n-\n         @Override public boolean useAccessControlTlsHandshakeClientAuth() { return useAccessControlTlsHandshakeClientAuth; }\n-\n         @Override public double jettyThreadpoolSizeFactor() { return jettyThreadpoolSizeFactor; }\n-\n-        @Override public boolean useAsyncMessageHandlingOnSchedule() { return false; }\n-\n-        @Override public int contentNodeBucketDBStripeBits() { return 0; }\n-\n-        @Override\n-        public int mergeChunkSize() { return 0; }\n+        @Override public boolean useAsyncMessageHandlingOnSchedule() { return useAsyncMessageHandlingOnSchedule; }\n+        @Override public int contentNodeBucketDBStripeBits() { return contentNodeBucketDBStripeBits; }\n+        @Override public int mergeChunkSize() { return mergeChunkSize; }\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDIxOQ==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560219", "bodyText": "Typo: CONETNT -> CONTENT", "author": "geirst", "createdAt": "2020-11-03T10:22:23Z", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -229,6 +232,12 @@ public Properties(ApplicationId applicationId,\n             this.jettyThreadpoolSizeFactor = Flags.JETTY_THREADPOOL_SCALE_FACTOR.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm())\n                     .value();\n+            useAsyncMessageHandlingOnSchedule = Flags.USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE.bindTo(flagSource)\n+                    .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n+            contentNodeBucketDBStripeBits = Flags.CONETNT_NODE_BUCKET_DB_STRIPE_BITS.bindTo(flagSource)", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NDY4MA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516574680", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-03T10:45:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDIxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java b/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\nindex 2ac4295b3c..2bd39bff1e 100644\n--- a/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\n+++ b/configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java\n\n@@ -234,7 +234,7 @@ public class ModelContextImpl implements ModelContext {\n                     .value();\n             useAsyncMessageHandlingOnSchedule = Flags.USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n-            contentNodeBucketDBStripeBits = Flags.CONETNT_NODE_BUCKET_DB_STRIPE_BITS.bindTo(flagSource)\n+            contentNodeBucketDBStripeBits = Flags.CONTENT_NODE_BUCKET_DB_STRIPE_BITS.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n             mergeChunkSize = Flags.MERGE_CHUNK_SIZE.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDQzOA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560438", "bodyText": "Typo: CONETNT -> CONTENT", "author": "geirst", "createdAt": "2020-11-03T10:22:41Z", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3Mzg4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516573886", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-03T10:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\nindex c50dfd518d..6e8ba50d2d 100644\n--- a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n+++ b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n\n@@ -335,9 +335,9 @@ public class Flags {\n             \"Optionally deliver async messages in own thread\",\n             \"Takes effect at redeployment\",\n             ZONE_ID, APPLICATION_ID);\n-    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n+    public static final UnboundIntFlag CONTENT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n             \"content-node-bucket-db-stripe-bits\", 0,\n-            \"Number of bits used for sharing the bucket DB in service layer\",\n+            \"Number of bits used for striping the bucket DB in service layer\",\n             \"Takes effect at redeployment\",\n             ZONE_ID, APPLICATION_ID);\n     public static final UnboundIntFlag MERGE_CHUNK_SIZE = defineIntFlag(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDk3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560975", "bodyText": "sharing -> sharding (or use striping instead?)", "author": "geirst", "createdAt": "2020-11-03T10:23:31Z", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n+            \"content-node-bucket-db-stripe-bits\", 0,\n+            \"Number of bits used for sharing the bucket DB in service layer\",", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NDUzOA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516574538", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-03T10:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDk3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\nindex c50dfd518d..6e8ba50d2d 100644\n--- a/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n+++ b/flags/src/main/java/com/yahoo/vespa/flags/Flags.java\n\n@@ -335,9 +335,9 @@ public class Flags {\n             \"Optionally deliver async messages in own thread\",\n             \"Takes effect at redeployment\",\n             ZONE_ID, APPLICATION_ID);\n-    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n+    public static final UnboundIntFlag CONTENT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n             \"content-node-bucket-db-stripe-bits\", 0,\n-            \"Number of bits used for sharing the bucket DB in service layer\",\n+            \"Number of bits used for striping the bucket DB in service layer\",\n             \"Takes effect at redeployment\",\n             ZONE_ID, APPLICATION_ID);\n     public static final UnboundIntFlag MERGE_CHUNK_SIZE = defineIntFlag(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MTk0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516561947", "bodyText": "Perhaps add a comment here on why we do the extra calculation.", "author": "geirst", "createdAt": "2020-11-03T10:25:07Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "originalCommit": "19aeab828f827891646ca38619be7d80fd646bb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4NjM3MA==", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516586370", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-03T11:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MTk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "chunk": "diff --git a/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java b/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\nindex a5afb998a7..fd4de13be3 100644\n--- a/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\n+++ b/config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java\n\n@@ -57,16 +56,17 @@ public class FileStorProducer implements StorFilestorConfig.Producer {\n             return StorFilestorConfig.Response_sequencer_type.Enum.ADAPTIVE;\n         }\n     }\n-    public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+    private static int alignUp2MiB(int value) {\n         final int twoMB = 0x200000;\n-        final int fourK = 0x1000;\n+        return ((value + twoMB - 1)/twoMB) * twoMB;\n+    }\n+    public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n         useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n-        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;\n-\n+        mergeChunkSize = alignUp2MiB(properties.mergeChunkSize()); // Align up to default huge page size.\n     }\n \n     @Override\n"}}, {"oid": "45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "url": "https://github.com/vespa-engine/vespa/commit/45e27d1829ac49c41e4baa8d23da9fc8eacb1079", "message": "- Drop the 4k reserved area.\n- Use consistent naming.", "committedDate": "2020-11-03T11:04:44Z", "type": "commit"}, {"oid": "ade39b1b648cdbf683c5124593a71912256df4c3", "url": "https://github.com/vespa-engine/vespa/commit/ade39b1b648cdbf683c5124593a71912256df4c3", "message": "Merge branch 'master' into balder/add-some-feature-flags", "committedDate": "2020-11-03T11:07:42Z", "type": "commit"}]}