{"pr_number": 1433, "pr_title": "DBZ-1953 MySQL 5.5 and 5.6 added to test matrix", "pr_createdAt": "2020-04-17T20:10:24Z", "pr_url": "https://github.com/debezium/debezium/pull/1433", "timeline": [{"oid": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "url": "https://github.com/debezium/debezium/commit/7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "message": "DBZ-1953 MySQL 5.5 and 5.6 added to test matrix", "committedDate": "2020-04-17T20:25:53Z", "type": "commit"}, {"oid": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "url": "https://github.com/debezium/debezium/commit/7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "message": "DBZ-1953 MySQL 5.5 and 5.6 added to test matrix", "committedDate": "2020-04-17T20:25:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5OTkxMw==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r411899913", "bodyText": "Would it it be better to move this method into src/test/java/io/debezium/connector/mysql/MySQLConnection.java ?", "author": "jpechane", "createdAt": "2020-04-21T06:17:32Z", "path": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderBufferIT.java", "diffHunk": "@@ -349,4 +356,15 @@ public void shouldProcessRolledBackSavepoint() throws SQLException, InterruptedE\n             Testing.print(\"*** Done with savepoint TX\");\n         }\n     }\n+\n+    private static boolean isMySql5(String databaseName) {", "originalCommit": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMwMDkzNg==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r413300936", "bodyText": "Probably, I'll move it.", "author": "Naros", "createdAt": "2020-04-22T20:19:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5OTkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "2007f34966b097bd8be55725d40af8a7b2d0081f", "chunk": "diff --git a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderBufferIT.java b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderBufferIT.java\nindex a1295d87b..3dd67982f 100644\n--- a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderBufferIT.java\n+++ b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderBufferIT.java\n\n@@ -356,15 +351,4 @@ public void shouldProcessRolledBackSavepoint() throws SQLException, InterruptedE\n             Testing.print(\"*** Done with savepoint TX\");\n         }\n     }\n-\n-    private static boolean isMySql5(String databaseName) {\n-        switch (MySQLConnection.forTestDatabase(databaseName).getMySqlVersion()) {\n-            case MYSQL_5_5:\n-            case MYSQL_5_6:\n-            case MYSQL_5_7:\n-                return true;\n-            default:\n-                return false;\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMDU2NA==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r411900564", "bodyText": "This could use the moved isMySql5 method", "author": "jpechane", "createdAt": "2020-04-21T06:18:57Z", "path": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlGeometryIT.java", "diffHunk": "@@ -217,7 +224,7 @@ else if (i == 2) {\n     }\n \n     private DatabaseGeoDifferences databaseGeoDifferences(MySqlVersion mySqlVersion) {\n-        if (mySqlVersion == MySqlVersion.MYSQL_5) {\n+        if (mySqlVersion == MySqlVersion.MYSQL_5_5 || mySqlVersion == MySqlVersion.MYSQL_5_6 || mySqlVersion == MySqlVersion.MYSQL_5_7) {", "originalCommit": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2007f34966b097bd8be55725d40af8a7b2d0081f", "chunk": "diff --git a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlGeometryIT.java b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlGeometryIT.java\nindex 7f085421f..e098ea65c 100644\n--- a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlGeometryIT.java\n+++ b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlGeometryIT.java\n\n@@ -223,8 +218,8 @@ else if (i == 2) {\n         }\n     }\n \n-    private DatabaseGeoDifferences databaseGeoDifferences(MySqlVersion mySqlVersion) {\n-        if (mySqlVersion == MySqlVersion.MYSQL_5_5 || mySqlVersion == MySqlVersion.MYSQL_5_6 || mySqlVersion == MySqlVersion.MYSQL_5_7) {\n+    private DatabaseGeoDifferences databaseGeoDifferences(boolean mySql5) {\n+        if (mySql5) {\n             return new DatabaseGeoDifferences() {\n \n                 @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMTY5OQ==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r411901699", "bodyText": "We have similar rule in postgres. Would it it make sense to provide it in core test and have only the annotations defined per-connector?", "author": "jpechane", "createdAt": "2020-04-21T06:21:15Z", "path": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/junit/SkipTestDependingOnDatabaseVersionRule.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.connector.mysql.junit;\n+\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import io.debezium.connector.mysql.MySQLConnection;\n+import io.debezium.connector.mysql.MySQLConnection.MySqlVersion;\n+import io.debezium.junit.AnnotationBasedTestRule;\n+\n+/**\n+ * JUnit rule that skips a test based on the {@link SkipWhenDatabaseVersion} annotation either on a test method or\n+ * on a test class.\n+ *\n+ * @author Chris Cranford\n+ */\n+public class SkipTestDependingOnDatabaseVersionRule extends AnnotationBasedTestRule {", "originalCommit": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMwNTU3Mw==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r413305573", "bodyText": "Do I understand you correctly that the annotations would be connector-specific but would also live in the core test suite; otherwise I'm unclear how that would ultimately work.\nOne idea I had however was to introduce an interface that the rule would load any impl of that was on the classpath and this interface would be responsible for returning the source major, minor, and patch version values.  We'd then have generalized annotations like:\n@SkipWhenDatabaseVersionLessThan(...)\n@SkipWhenDatabaseVersionLessThanOrEqualTo(...)\n@SkipWhenDatabaseVersionEqualTo(...)\n@SkipWhenDatabaseVersionGreaterThanOrEqualTo(...)\n@SkipWhenDatabaseVersionGreaterThan(...)\nAll these would allow for specifying a major, minor, and patch value along with reason to describe why the test is to be skipped.  This way the test infrastructure is generic enough to support any connector, all the connector's test suite has to implement is how to get the database version.\nAnother variant could be to follow that of the kafka annotation recently introduced where we would consolidate all the 5 variants into a single annotation and the annotation would also include the predicate condition of <, <=, ==, >=, > using an enum.\nWhats your preference?", "author": "Naros", "createdAt": "2020-04-22T20:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ5MjM4MQ==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r413492381", "bodyText": "Yeah, that's roughly my reasoning. And I must admit I like  the second proposal even more!", "author": "jpechane", "createdAt": "2020-04-23T04:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMTY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2007f34966b097bd8be55725d40af8a7b2d0081f", "chunk": "diff --git a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/junit/SkipTestDependingOnDatabaseVersionRule.java b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/junit/SkipTestDependingOnDatabaseVersionRule.java\ndeleted file mode 100644\nindex 368ba6051..000000000\n--- a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/junit/SkipTestDependingOnDatabaseVersionRule.java\n+++ /dev/null\n\n@@ -1,52 +0,0 @@\n-/*\n- * Copyright Debezium Authors.\n- *\n- * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package io.debezium.connector.mysql.junit;\n-\n-import org.junit.runner.Description;\n-import org.junit.runners.model.Statement;\n-\n-import io.debezium.connector.mysql.MySQLConnection;\n-import io.debezium.connector.mysql.MySQLConnection.MySqlVersion;\n-import io.debezium.junit.AnnotationBasedTestRule;\n-\n-/**\n- * JUnit rule that skips a test based on the {@link SkipWhenDatabaseVersion} annotation either on a test method or\n- * on a test class.\n- *\n- * @author Chris Cranford\n- */\n-public class SkipTestDependingOnDatabaseVersionRule extends AnnotationBasedTestRule {\n-\n-    @Override\n-    public Statement apply(Statement base, Description description) {\n-\n-        // First check if multiple version skips are defined\n-        final SkipWhenDatabaseVersions skips = hasAnnotation(description, SkipWhenDatabaseVersions.class);\n-        if (skips != null) {\n-            final MySqlVersion dbVersion = MySQLConnection.forTestDatabase(\"mysql\").getMySqlVersion();\n-            for (SkipWhenDatabaseVersion skip : skips.value()) {\n-                if (skip.version().equals(dbVersion)) {\n-                    String reasonForSkipping = \"Database version is \" + skip.version().name() + \": \" + skip.reason();\n-                    return emptyStatement(reasonForSkipping, description);\n-                }\n-            }\n-\n-            return base;\n-        }\n-\n-        // Second check if a single version skip is defined\n-        final SkipWhenDatabaseVersion skip = hasAnnotation(description, SkipWhenDatabaseVersion.class);\n-        if (skip != null) {\n-            final MySqlVersion dbVersion = MySQLConnection.forTestDatabase(\"mysql\").getMySqlVersion();\n-            if (skip.version().equals(dbVersion)) {\n-                String reasonForSkipping = \"Database version is \" + skip.version().name() + \": \" + skip.reason();\n-                return emptyStatement(reasonForSkipping, description);\n-            }\n-        }\n-\n-        return base;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMzA2Mg==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r411903062", "bodyText": "Why this format when we are using repeatabel annotation?", "author": "jpechane", "createdAt": "2020-04-21T06:24:03Z", "path": "debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderIT.java", "diffHunk": "@@ -484,6 +493,10 @@ public void shouldFailOnUnknownTlsProtocol() {\n \n     @Test\n     @FixFor(\"DBZ-1208\")\n+    @SkipWhenDatabaseVersions({", "originalCommit": "7b0543f3c1cd2dac8e1142498cf8899a438e67a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5Njc2OQ==", "url": "https://github.com/debezium/debezium/pull/1433#discussion_r412996769", "bodyText": "Just habit, I can repeat them instead if you'd rather.", "author": "Naros", "createdAt": "2020-04-22T13:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkwMzA2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2007f34966b097bd8be55725d40af8a7b2d0081f", "chunk": "diff --git a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderIT.java b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderIT.java\nindex 29657e94c..344aca2bc 100644\n--- a/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderIT.java\n+++ b/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/BinlogReaderIT.java\n\n@@ -493,10 +493,7 @@ public void shouldFailOnUnknownTlsProtocol() {\n \n     @Test\n     @FixFor(\"DBZ-1208\")\n-    @SkipWhenDatabaseVersions({\n-            @SkipWhenDatabaseVersion(version = MySqlVersion.MYSQL_5_5, reason = \"Uses fractal notation for DATE, TIME, DATETIME, and TIMESTAMP which isn't supported by MySQL 5.5, along with no SSL support\"),\n-            @SkipWhenDatabaseVersion(version = MySqlVersion.MYSQL_5_6, reason = \"MySQL 5.6 does not support SSL\")\n-    })\n+    @SkipWhenDatabaseVersion(check = LESS_THAN_OR_EQUAL, major = 5, minor = 6, reason = \"MySQL 5.6 does not support SSL\")\n     public void shouldAcceptTls12() {\n         final UniqueDatabase REGRESSION_DATABASE = new UniqueDatabase(\"logical_server_name\", \"regression_test\")\n                 .withDbHistoryPath(DB_HISTORY_PATH);\n"}}, {"oid": "b8ef16f7a17abe5765af838d999fd65a70f5ae1e", "url": "https://github.com/debezium/debezium/commit/b8ef16f7a17abe5765af838d999fd65a70f5ae1e", "message": "DBZ-1953 Move Travis CI jobs to Jenkins matrix", "committedDate": "2020-04-23T14:17:54Z", "type": "commit"}, {"oid": "2007f34966b097bd8be55725d40af8a7b2d0081f", "url": "https://github.com/debezium/debezium/commit/2007f34966b097bd8be55725d40af8a7b2d0081f", "message": "DBZ-1953 Generalized SkipWhenDatabaseVersion functionality", "committedDate": "2020-04-27T17:50:45Z", "type": "commit"}, {"oid": "0ac1bce47e11add66c2a375895afc7053658fc5a", "url": "https://github.com/debezium/debezium/commit/0ac1bce47e11add66c2a375895afc7053658fc5a", "message": "DBZ-1953 Rework configuration files", "committedDate": "2020-04-27T17:50:51Z", "type": "commit"}, {"oid": "0ac1bce47e11add66c2a375895afc7053658fc5a", "url": "https://github.com/debezium/debezium/commit/0ac1bce47e11add66c2a375895afc7053658fc5a", "message": "DBZ-1953 Rework configuration files", "committedDate": "2020-04-27T17:50:51Z", "type": "forcePushed"}]}