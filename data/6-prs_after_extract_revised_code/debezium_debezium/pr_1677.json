{"pr_number": 1677, "pr_title": "DBZ-2231 Fix test failure - SqlServerChangeTableSetIT#readHistoryAfterRestart", "pr_createdAt": "2020-07-08T13:03:40Z", "pr_url": "https://github.com/debezium/debezium/pull/1677", "timeline": [{"oid": "99d00288c217101eb49ffbd0dd5667ccb2c03be6", "url": "https://github.com/debezium/debezium/commit/99d00288c217101eb49ffbd0dd5667ccb2c03be6", "message": "DBZ-2231 Fix test failure - SqlServerChangeTableSetIT#readHistoryAfterRestart", "committedDate": "2020-07-08T13:02:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMTM3OQ==", "url": "https://github.com/debezium/debezium/pull/1677#discussion_r451631379", "bodyText": "Did you consider to use Awaitility? Would be more in line with what we do elsewhere in similar cases.", "author": "gunnarmorling", "createdAt": "2020-07-08T15:25:53Z", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/util/TestHelper.java", "diffHunk": "@@ -329,6 +329,33 @@ public static void waitForSnapshotToBeCompleted() throws InterruptedException {\n         }\n     }\n \n+    public static void waitForStreamingRunning() throws InterruptedException {\n+        int waitForSeconds = 60;\n+        final MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n+        final Metronome metronome = Metronome.sleeper(Duration.ofSeconds(1), Clock.system());\n+\n+        while (true) {", "originalCommit": "99d00288c217101eb49ffbd0dd5667ccb2c03be6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY1OTIyOQ==", "url": "https://github.com/debezium/debezium/pull/1677#discussion_r451659229", "bodyText": "I did not, but I can certainly modify the PR to use it instead.  I'll push an update shortly.", "author": "Naros", "createdAt": "2020-07-08T16:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMTM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e755da4717370259c8ff3db451ddf3bd831069a3", "chunk": "diff --git a/debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/util/TestHelper.java b/debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/util/TestHelper.java\nindex 1ee69d6d2..1d7cb9d55 100644\n--- a/debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/util/TestHelper.java\n+++ b/debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/util/TestHelper.java\n\n@@ -303,57 +302,44 @@ public static void disableTableCdc(SqlServerConnection connection, String name)\n         connection.execute(disableCdcForTableStmt);\n     }\n \n-    public static void waitForSnapshotToBeCompleted() throws InterruptedException {\n-        int waitForSeconds = 60;\n+    public static void waitForSnapshotToBeCompleted() {\n         final MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n-        final Metronome metronome = Metronome.sleeper(Duration.ofSeconds(1), Clock.system());\n-\n-        while (true) {\n-            if (waitForSeconds-- <= 0) {\n-                Assert.fail(\"Snapshot was not completed on time\");\n-            }\n-            try {\n-                final boolean completed = (boolean) mbeanServer.getAttribute(new ObjectName(\"debezium.sql_server:type=connector-metrics,context=snapshot,server=server1\"),\n-                        \"SnapshotCompleted\");\n-                if (completed) {\n-                    break;\n+        try {\n+            Awaitility.await(\"Snapshot not completed\").atMost(Duration.ofSeconds(60)).until(() -> {\n+                try {\n+                    return (boolean) mbeanServer.getAttribute(getObjectName(\"snapshot\", \"server1\"), \"SnapshotCompleted\");\n+                }\n+                catch (InstanceNotFoundException e) {\n+                    // Metrics has not started yet\n+                    return false;\n                 }\n-            }\n-            catch (InstanceNotFoundException e) {\n-                // Metrics has not started yet\n-            }\n-            catch (Exception e) {\n-                throw new IllegalStateException(e);\n-            }\n-            metronome.pause();\n+            });\n+        }\n+        catch (ConditionTimeoutException e) {\n+            throw new IllegalArgumentException(\"Snapshot did not complete\", e);\n         }\n     }\n \n-    public static void waitForStreamingRunning() throws InterruptedException {\n-        int waitForSeconds = 60;\n+    public static void waitForStreamingStarted() {\n         final MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n-        final Metronome metronome = Metronome.sleeper(Duration.ofSeconds(1), Clock.system());\n-\n-        while (true) {\n-            if (waitForSeconds-- <= 0) {\n-                Assert.fail(\"Streaming has not started on time\");\n-            }\n-            try {\n-                final boolean connected = (boolean) mbeanServer.getAttribute(\n-                        new ObjectName(\"debezium.sql_server:type=connector-metrics,context=streaming,server=server1\"),\n-                        \"Connected\");\n-                if (connected) {\n-                    break;\n+        try {\n+            Awaitility.await(\"Streaming never started\").atMost(Duration.ofSeconds(60)).until(() -> {\n+                try {\n+                    return (boolean) mbeanServer.getAttribute(getObjectName(\"streaming\", \"server1\"), \"Connected\");\n+                }\n+                catch (InstanceNotFoundException e) {\n+                    // Metrics has not started yet\n+                    return false;\n                 }\n-            }\n-            catch (InstanceNotFoundException e) {\n-                // Metrics has not started yet\n-            }\n-            catch (Exception e) {\n-                throw new IllegalArgumentException(e);\n-            }\n-            metronome.pause();\n+            });\n         }\n+        catch (ConditionTimeoutException e) {\n+            throw new IllegalArgumentException(\"Streaming did not start\", e);\n+        }\n+    }\n+\n+    private static ObjectName getObjectName(String context, String serverName) throws MalformedObjectNameException {\n+        return new ObjectName(\"debezium.sql_server:type=connector-metrics,context=\" + context + \",server=\" + serverName);\n     }\n \n     public static int waitTimeForRecords() {\n"}}, {"oid": "e755da4717370259c8ff3db451ddf3bd831069a3", "url": "https://github.com/debezium/debezium/commit/e755da4717370259c8ff3db451ddf3bd831069a3", "message": "DBZ-2231 Use Awaitility in waitForXXX helper methods", "committedDate": "2020-07-08T16:21:52Z", "type": "commit"}]}