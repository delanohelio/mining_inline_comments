{"pr_number": 1480, "pr_title": "Update handling of a task with CANCEL_REQUESTED flag", "pr_createdAt": "2020-11-10T05:12:04Z", "pr_url": "https://github.com/treasure-data/digdag/pull/1480", "timeline": [{"oid": "fcf1054959b8742d19fd5ed4ccdf9e01cc82612a", "url": "https://github.com/treasure-data/digdag/commit/fcf1054959b8742d19fd5ed4ccdf9e01cc82612a", "message": "Delete unreachable code", "committedDate": "2020-11-10T08:39:52Z", "type": "forcePushed"}, {"oid": "a51cb34494d8f94a3ac6b5adb9f63067dddc8d70", "url": "https://github.com/treasure-data/digdag/commit/a51cb34494d8f94a3ac6b5adb9f63067dddc8d70", "message": "Delete unreachable code", "committedDate": "2020-11-10T08:42:03Z", "type": "forcePushed"}, {"oid": "f8a93069f9208ba8554e6f91f1e0d95e3be2b12d", "url": "https://github.com/treasure-data/digdag/commit/f8a93069f9208ba8554e6f91f1e0d95e3be2b12d", "message": "Add test cases", "committedDate": "2020-11-12T06:11:53Z", "type": "forcePushed"}, {"oid": "01c6c99426fc1b8799d7faaf0abff8e68ab038f0", "url": "https://github.com/treasure-data/digdag/commit/01c6c99426fc1b8799d7faaf0abff8e68ab038f0", "message": "Update handling of a task with CANCEL_REQUESTED flag", "committedDate": "2020-11-12T06:54:38Z", "type": "commit"}, {"oid": "1d58943924c3b858ef1ad199814ae461a95e635f", "url": "https://github.com/treasure-data/digdag/commit/1d58943924c3b858ef1ad199814ae461a95e635f", "message": "Update SPI to allow cleanup to be executed", "committedDate": "2020-11-12T06:54:38Z", "type": "commit"}, {"oid": "09567567e3b4264cf01a8591165b222ed0904698", "url": "https://github.com/treasure-data/digdag/commit/09567567e3b4264cf01a8591165b222ed0904698", "message": "Implement cleanup feature on PyOperatorFactory", "committedDate": "2020-11-12T06:54:38Z", "type": "commit"}, {"oid": "a02d53a6c18a292488e1a8071c4add19468272c2", "url": "https://github.com/treasure-data/digdag/commit/a02d53a6c18a292488e1a8071c4add19468272c2", "message": "Implement cleanup feature on EcsCommandExecutor", "committedDate": "2020-11-12T06:54:38Z", "type": "commit"}, {"oid": "b4ce7eb2f55d4c83e4aa0e8602751754c8c78d76", "url": "https://github.com/treasure-data/digdag/commit/b4ce7eb2f55d4c83e4aa0e8602751754c8c78d76", "message": "Delete unreachable code", "committedDate": "2020-11-12T06:54:38Z", "type": "commit"}, {"oid": "6f4fd874c58e185e5701cf2bfecc35cb35fa8b49", "url": "https://github.com/treasure-data/digdag/commit/6f4fd874c58e185e5701cf2bfecc35cb35fa8b49", "message": "Add test cases", "committedDate": "2020-11-12T06:54:38Z", "type": "forcePushed"}, {"oid": "b15393bb595d776246302bf7a282dd7217e56f89", "url": "https://github.com/treasure-data/digdag/commit/b15393bb595d776246302bf7a282dd7217e56f89", "message": "Add test cases", "committedDate": "2020-11-13T03:48:50Z", "type": "commit"}, {"oid": "b15393bb595d776246302bf7a282dd7217e56f89", "url": "https://github.com/treasure-data/digdag/commit/b15393bb595d776246302bf7a282dd7217e56f89", "message": "Add test cases", "committedDate": "2020-11-13T03:48:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzMDQyMg==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524830422", "bodyText": "is canceled is better?", "author": "komamitsu", "createdAt": "2020-11-17T01:42:57Z", "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -160,8 +160,13 @@ protected void runWithHeartbeat(TaskRequest request)\n                         callback.retryTask(request, agentId, ex.getRetryInterval().get(), ex.getStateParams(cf).get(), ex.getError(cf));\n                     }\n                     else {\n-                        logger.error(\"Task {} failed.\\n{}\", request.getTaskName(), formatExceptionMessage(ex));\n-                        logger.debug(\"\", ex);\n+                        if (request.isCancelRequested()) {\n+                            logger.warn(\"Task {} canceled.\", request.getTaskName());", "originalCommit": "b15393bb595d776246302bf7a282dd7217e56f89", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3958144246be372dfe9f66415598bbde730b405d", "chunk": "diff --git a/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java b/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\nindex 285d9e3ce4..674d2a8a92 100644\n--- a/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\n+++ b/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\n\n@@ -161,7 +161,7 @@ public class OperatorManager\n                     }\n                     else {\n                         if (request.isCancelRequested()) {\n-                            logger.warn(\"Task {} canceled.\", request.getTaskName());\n+                            logger.warn(\"Task {} is canceled.\", request.getTaskName());\n                         }\n                         else {\n                             logger.error(\"Task {} failed.\\n{}\", request.getTaskName(), formatExceptionMessage(ex));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzODE0OQ==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524838149", "bodyText": "This is outside the scope of this PR, but I'm wondering a successfully finished task should be handled as SUCCESS not as CANCELED even if it's received a cancel request...", "author": "komamitsu", "createdAt": "2020-11-17T02:07:21Z", "path": "digdag-core/src/main/java/io/digdag/core/workflow/WorkflowExecutor.java", "diffHunk": "@@ -104,6 +104,8 @@\n  *       : ERROR with error\n  *\n  *   taskSucceeded:\n+ *     (if CANCEL_REQUESTED flag is set) lockedTask.setToCanceled:", "originalCommit": "b15393bb595d776246302bf7a282dd7217e56f89", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MTUyNA==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524841524", "bodyText": "The responsibility of this method is only cleaning up a task and cancel requests are not related to this method, I think. This method can be used by non-cancel operation in the future. So maybe this message shouldn't mention cancel requests.", "author": "komamitsu", "createdAt": "2020-11-17T02:19:26Z", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -289,6 +282,42 @@ public CommandStatus poll(\n         }\n     }\n \n+    @Override\n+    public void cleanup(\n+            final CommandContext commandContext,\n+            final Config state)\n+            throws IOException\n+    {\n+        final TaskRequest request = commandContext.getTaskRequest();\n+        final long attemptId = request.getAttemptId();\n+        final long taskId = request.getTaskId();\n+        final Config taskConfig = request.getConfig();\n+\n+        final ObjectNode commandStatus = state.get(\"commandStatus\", ObjectNode.class);\n+        final String clusterName = commandStatus.get(\"cluster_name\").asText();\n+        final String taskArn = commandStatus.get(\"task_arn\").asText();\n+        final EcsClientConfig clientConfig = createEcsClientConfig(Optional.of(clusterName), systemConfig, taskConfig); // ConfigException\n+\n+        try (final EcsClient client = ecsClientFactory.createClient(clientConfig)) { // ConfigException\n+            final Task task;\n+            try {\n+                task = client.getTask(clusterName, taskArn);\n+            }\n+            catch (TaskSetNotFoundException e) {\n+                final String message = s(\"Cannot get the ECS task status. attemptId=%d, taskId=%d\", attemptId, taskId);\n+                logger.warn(message);\n+                // Throw exception to stop the task\n+                throw new TaskExecutionException(message);\n+            }\n+            final String message = s(\"Command task execution cancel requested: attemptId=%d, taskId=%d\", attemptId, taskId);", "originalCommit": "b15393bb595d776246302bf7a282dd7217e56f89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg4MTYzOQ==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524881639", "bodyText": "Good point, I agree with you, I will change this message to a more general one.", "author": "szyn", "createdAt": "2020-11-17T04:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MTUyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTk5OA==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r527369998", "bodyText": "Updated: be276de", "author": "szyn", "createdAt": "2020-11-20T03:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MTUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "be276de9707ed5181d516f60fd09b1dba76e02c0", "chunk": "diff --git a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\nindex e1c8321a68..c86c40119c 100644\n--- a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n+++ b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n\n@@ -309,7 +309,7 @@ public class EcsCommandExecutor\n                 // Throw exception to stop the task\n                 throw new TaskExecutionException(message);\n             }\n-            final String message = s(\"Command task execution cancel requested: attemptId=%d, taskId=%d\", attemptId, taskId);\n+            final String message = s(\"Command task execution will be stopped: attemptId=%d, taskId=%d\", attemptId, taskId);\n             logger.info(message);\n             logger.debug(s(\"Stop command task %s\", task.getTaskArn()));\n             client.stopTask(clusterName, task.getTaskArn());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjU2MA==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524842560", "bodyText": "When is this line executed?", "author": "komamitsu", "createdAt": "2020-11-17T02:22:40Z", "path": "digdag-standards/src/main/java/io/digdag/standards/operator/PyOperatorFactory.java", "diffHunk": "@@ -124,6 +125,25 @@ public TaskResult runTask()\n                 .build();\n         }\n \n+        @Override\n+        public TaskResult cleanup(TaskRequest request)\n+        {\n+            final Path projectPath = workspace.getProjectPath(); // absolute\n+            final CommandContext commandContext = buildCommandContext(projectPath);\n+            final long attemptId = request.getAttemptId();\n+            final long taskId = request.getTaskId();\n+            Config state = TaskState.of(request).params();\n+            if (state.has(\"commandStatus\")) {\n+                logger.debug(String.format(\"Starting cleanup: attemptId=%d, taskId=%d\",  attemptId, taskId));\n+                try {\n+                    exec.cleanup(commandContext, state);\n+                } catch (IOException ex) {\n+                    throw Throwables.propagate(ex);\n+                }\n+            }\n+            return TaskResult.empty(request);", "originalCommit": "b15393bb595d776246302bf7a282dd7217e56f89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NDkyMQ==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r525644921", "bodyText": "This line is executed when the state does not have \"commandStatus\".  e.g. Not a polling-based task. But now I feel it'd better change to void as return type because cleanup has responsibility for cleaning up and do not have to return TaskResult.", "author": "szyn", "createdAt": "2020-11-18T01:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTY3Ng==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r527369676", "bodyText": "Updated: 36655d2", "author": "szyn", "createdAt": "2020-11-20T03:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0MjU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "36655d268db2c1cd567d31400573f8bd8429421c", "chunk": "diff --git a/digdag-standards/src/main/java/io/digdag/standards/operator/PyOperatorFactory.java b/digdag-standards/src/main/java/io/digdag/standards/operator/PyOperatorFactory.java\nindex 18372e5c9a..992443d0da 100644\n--- a/digdag-standards/src/main/java/io/digdag/standards/operator/PyOperatorFactory.java\n+++ b/digdag-standards/src/main/java/io/digdag/standards/operator/PyOperatorFactory.java\n\n@@ -126,7 +126,7 @@ public class PyOperatorFactory\n         }\n \n         @Override\n-        public TaskResult cleanup(TaskRequest request)\n+        public void cleanup(TaskRequest request)\n         {\n             final Path projectPath = workspace.getProjectPath(); // absolute\n             final CommandContext commandContext = buildCommandContext(projectPath);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0Mzg1Nw==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r524843857", "bodyText": "What if runWithWorkspace throws TaskExecutionException not from operator.cleanup(mergedRequest)? It looks the clean up won't be called.", "author": "komamitsu", "createdAt": "2020-11-17T02:26:46Z", "path": "digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java", "diffHunk": "@@ -160,8 +160,13 @@ protected void runWithHeartbeat(TaskRequest request)\n                         callback.retryTask(request, agentId, ex.getRetryInterval().get(), ex.getStateParams(cf).get(), ex.getError(cf));\n                     }\n                     else {\n-                        logger.error(\"Task {} failed.\\n{}\", request.getTaskName(), formatExceptionMessage(ex));\n-                        logger.debug(\"\", ex);\n+                        if (request.isCancelRequested()) {\n+                            logger.warn(\"Task {} canceled.\", request.getTaskName());\n+                        }\n+                        else {\n+                            logger.error(\"Task {} failed.\\n{}\", request.getTaskName(), formatExceptionMessage(ex));\n+                            logger.debug(\"\", ex);\n+                        }\n                         // TODO use debug to log stacktrace here\n                         callback.taskFailed(request, agentId, ex.getError(cf).get());  // TODO is error set?", "originalCommit": "b15393bb595d776246302bf7a282dd7217e56f89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTExNA==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r527369114", "bodyText": "If runWithWorkspace throws TaskExecutionException, it depends on what type of TaskExecutionException, but it will retry the task if it is called by TaskExecutionException#ofNextPolling which is used by a polling-based task. And then cleanup be executed at that time if mergedResest.isCancelRequested() is true.\nOn the other hand, if cleanup failed to perform, target components will remain, I added a note about that and throw TaskExecutionException after cleanup to stop the task. afb2610", "author": "szyn", "createdAt": "2020-11-20T03:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0Mzg1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3958144246be372dfe9f66415598bbde730b405d", "chunk": "diff --git a/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java b/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\nindex 285d9e3ce4..674d2a8a92 100644\n--- a/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\n+++ b/digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java\n\n@@ -161,7 +161,7 @@ public class OperatorManager\n                     }\n                     else {\n                         if (request.isCancelRequested()) {\n-                            logger.warn(\"Task {} canceled.\", request.getTaskName());\n+                            logger.warn(\"Task {} is canceled.\", request.getTaskName());\n                         }\n                         else {\n                             logger.error(\"Task {} failed.\\n{}\", request.getTaskName(), formatExceptionMessage(ex));\n"}}, {"oid": "3958144246be372dfe9f66415598bbde730b405d", "url": "https://github.com/treasure-data/digdag/commit/3958144246be372dfe9f66415598bbde730b405d", "message": "Update comments on OperatorManager", "committedDate": "2020-11-17T04:35:10Z", "type": "commit"}, {"oid": "be276de9707ed5181d516f60fd09b1dba76e02c0", "url": "https://github.com/treasure-data/digdag/commit/be276de9707ed5181d516f60fd09b1dba76e02c0", "message": "Update comments on EcsCommandExecutor", "committedDate": "2020-11-17T04:35:45Z", "type": "commit"}, {"oid": "0400a75929ec5798447f5014540972d2ea3f9b76", "url": "https://github.com/treasure-data/digdag/commit/0400a75929ec5798447f5014540972d2ea3f9b76", "message": "Update test cases on EcsCommandExecutorTest", "committedDate": "2020-11-17T05:03:23Z", "type": "commit"}, {"oid": "36655d268db2c1cd567d31400573f8bd8429421c", "url": "https://github.com/treasure-data/digdag/commit/36655d268db2c1cd567d31400573f8bd8429421c", "message": "Update return type from TaskResult to void", "committedDate": "2020-11-19T05:11:13Z", "type": "commit"}, {"oid": "28e39f395156d38b65dcc3bd6c86de066b9142fa", "url": "https://github.com/treasure-data/digdag/commit/28e39f395156d38b65dcc3bd6c86de066b9142fa", "message": "Fix formatting", "committedDate": "2020-11-19T05:11:13Z", "type": "commit"}, {"oid": "afb261043d8778f5c77f8d05736e73578b6a47c8", "url": "https://github.com/treasure-data/digdag/commit/afb261043d8778f5c77f8d05736e73578b6a47c8", "message": "Throw TaskExecutionException after cleanup", "committedDate": "2020-11-19T05:29:01Z", "type": "commit"}, {"oid": "b9a83ef61adb260f9fd556604793b865b5446028", "url": "https://github.com/treasure-data/digdag/commit/b9a83ef61adb260f9fd556604793b865b5446028", "message": "Avoid throwing TaskExecutionException on EcsCommandExecutor", "committedDate": "2020-11-19T05:34:57Z", "type": "commit"}, {"oid": "dbadbdcd3d676c3f2f54fe75edba8e3a3ca061aa", "url": "https://github.com/treasure-data/digdag/commit/dbadbdcd3d676c3f2f54fe75edba8e3a3ca061aa", "message": "Catch Throwable instead of IOException", "committedDate": "2020-11-19T05:37:09Z", "type": "commit"}, {"oid": "687e8c02817b6a9119b3a6c16beba2c13bb2f82e", "url": "https://github.com/treasure-data/digdag/commit/687e8c02817b6a9119b3a6c16beba2c13bb2f82e", "message": "Update tests for cleanup", "committedDate": "2020-11-19T08:00:55Z", "type": "commit"}, {"oid": "a407c11893e527460dcb23b7fb0597b1d5abf235", "url": "https://github.com/treasure-data/digdag/commit/a407c11893e527460dcb23b7fb0597b1d5abf235", "message": "Show a debug message when cleanup method is called", "committedDate": "2020-11-19T08:13:51Z", "type": "commit"}, {"oid": "a407c11893e527460dcb23b7fb0597b1d5abf235", "url": "https://github.com/treasure-data/digdag/commit/a407c11893e527460dcb23b7fb0597b1d5abf235", "message": "Show a debug message when cleanup method is called", "committedDate": "2020-11-19T08:13:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MDg4OQ==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r529170889", "bodyText": "Don't need to check if taskFailed is called?", "author": "komamitsu", "createdAt": "2020-11-24T03:04:07Z", "path": "digdag-core/src/test/java/io/digdag/core/agent/OperatorManagerTest.java", "diffHunk": "@@ -88,6 +90,21 @@ public void testRunWithHeartbeatWithSuccessTask()\n         verify(callback, times(0)).retryTask(any(), any(), anyInt(), any(), any());\n     }\n \n+    @Test\n+    public void testRunWithHeartbeatWithCancelRequestedTask()\n+    {\n+        TaskRequest taskRequest = OperatorTestingUtils.newTaskRequest(simpleConfig).withIsCancelRequested(true);\n+\n+        OperatorManager om = spy(operatorManager);\n+        Operator op = mock(Operator.class);\n+        OperatorFactory of = mock(OperatorFactory.class);\n+        doReturn(of).when(registry).get(any(), any());\n+        doReturn(op).when(of).newOperator(any());\n+        om.runWithHeartbeat(taskRequest);\n+        verify(op, times(0)).run();\n+        verify(op, times(1)).cleanup(any(TaskRequest.class));\n+    }", "originalCommit": "a407c11893e527460dcb23b7fb0597b1d5abf235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE5NzMzOA==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r529197338", "bodyText": "I think it would be better to check, I'll add it. Thank you!", "author": "szyn", "createdAt": "2020-11-24T04:37:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MDg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIwMDIyNQ==", "url": "https://github.com/treasure-data/digdag/pull/1480#discussion_r529200225", "bodyText": "I also added other callback cases, just in case.", "author": "szyn", "createdAt": "2020-11-24T04:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MDg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "917bec869f84bf24ea78b6d02b7976f6ed7c658b", "chunk": "diff --git a/digdag-core/src/test/java/io/digdag/core/agent/OperatorManagerTest.java b/digdag-core/src/test/java/io/digdag/core/agent/OperatorManagerTest.java\nindex 9bebb6bc44..880e314fe6 100644\n--- a/digdag-core/src/test/java/io/digdag/core/agent/OperatorManagerTest.java\n+++ b/digdag-core/src/test/java/io/digdag/core/agent/OperatorManagerTest.java\n\n@@ -103,6 +103,9 @@ public class OperatorManagerTest\n         om.runWithHeartbeat(taskRequest);\n         verify(op, times(0)).run();\n         verify(op, times(1)).cleanup(any(TaskRequest.class));\n+        verify(callback, times(0)).taskSucceeded(any(), any(), any());\n+        verify(callback, times(1)).taskFailed(eq(taskRequest), any(), any());\n+        verify(callback, times(0)).retryTask(any(), any(), anyInt(), any(), any());\n     }\n \n     @Test\n"}}, {"oid": "917bec869f84bf24ea78b6d02b7976f6ed7c658b", "url": "https://github.com/treasure-data/digdag/commit/917bec869f84bf24ea78b6d02b7976f6ed7c658b", "message": "Update test cases to verify callback methods", "committedDate": "2020-11-24T04:46:57Z", "type": "commit"}]}