{"pr_number": 1476, "pr_title": "Support task provider strategy", "pr_createdAt": "2020-11-04T07:51:13Z", "pr_url": "https://github.com/treasure-data/digdag/pull/1476", "timeline": [{"oid": "423f0f0642c181388b80a60800735e3e9d62dd05", "url": "https://github.com/treasure-data/digdag/commit/423f0f0642c181388b80a60800735e3e9d62dd05", "message": "Add placementStrategyType", "committedDate": "2020-11-04T06:01:15Z", "type": "commit"}, {"oid": "904ec20c2d3fd9544ed487cdf87ff413a6545ab9", "url": "https://github.com/treasure-data/digdag/commit/904ec20c2d3fd9544ed487cdf87ff413a6545ab9", "message": "Add placementStrategyField", "committedDate": "2020-11-04T06:08:28Z", "type": "commit"}, {"oid": "103a55fe487ab9a698ad9f0af82e14422ebcae74", "url": "https://github.com/treasure-data/digdag/commit/103a55fe487ab9a698ad9f0af82e14422ebcae74", "message": "Support specifying `PlacementStrategy`\non EcsCommandExecutor", "committedDate": "2020-11-04T07:39:24Z", "type": "commit"}, {"oid": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076", "url": "https://github.com/treasure-data/digdag/commit/f2906e9d8104dcd573f3304bc12ed1dc6f31b076", "message": "Add a validation for `PlacementStrategy`", "committedDate": "2020-11-04T07:41:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MDk1OA==", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517790958", "bodyText": "[minor] invalidReason sounds a bit weird since this is a just exception here. If you extracted a pure reason-like object from an exception like with Reason invalidReason = ex.getReason(), it would be good.", "author": "komamitsu", "createdAt": "2020-11-05T04:50:12Z", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -530,9 +532,31 @@ RunTaskRequest buildRunTaskRequest(\n         setEcsTaskStartedBy(clientConfig, runTaskRequest);\n         setEcsNetworkConfiguration(clientConfig, runTaskRequest);\n         setCapacityProviderStrategy(clientConfig, runTaskRequest);\n+        setPlacementStrategy(clientConfig, runTaskRequest);\n         return runTaskRequest;\n     }\n \n+    private void setPlacementStrategy(EcsClientConfig clientConfig, RunTaskRequest runTaskRequest) throws ConfigException\n+    {\n+        if (clientConfig.getPlacementStrategyType().isPresent()) {\n+            final PlacementStrategyType placementStrategyType;\n+            try {\n+                placementStrategyType = PlacementStrategyType.fromValue(clientConfig.getPlacementStrategyType().get());\n+            }\n+            catch (IllegalArgumentException invalidReason) {", "originalCommit": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MzcxMQ==", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517793711", "bodyText": "What I meant was just \"This is an IllegalArgumentException object and the actual reason is stored in this exception object's message\". But surely it is wired a bit. I will rename the exception object and leave a comment to suggest it.", "author": "serihiro", "createdAt": "2020-11-05T05:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MDk1OA=="}], "type": "inlineReview", "revised_code": {"commit": "ffdd603586098d472b371b78fb080e523311bca9", "chunk": "diff --git a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\nindex f41b8b63e6..e3a236c5a0 100644\n--- a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n+++ b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n\n@@ -543,8 +543,9 @@ public class EcsCommandExecutor\n             try {\n                 placementStrategyType = PlacementStrategyType.fromValue(clientConfig.getPlacementStrategyType().get());\n             }\n-            catch (IllegalArgumentException invalidReason) {\n-                throw new ConfigException(\"PlacementStrategyType is invalid\", invalidReason);\n+            // The message of this exception object has the validation error message.\n+            catch (IllegalArgumentException validationError) {\n+                throw new ConfigException(\"PlacementStrategyType is invalid\", validationError);\n             }\n             final PlacementStrategy placementStrategy = new PlacementStrategy();\n             placementStrategy.setType(placementStrategyType);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MTY3Mw==", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517791673", "bodyText": "Don't we need to check the other case like placementStrategyType.isPresent() && !placementStrategyField.isPresent()?", "author": "komamitsu", "createdAt": "2020-11-05T04:53:15Z", "path": "digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java", "diffHunk": "@@ -31,6 +32,12 @@ public EcsClientConfig(EcsClientConfigBuilder builder)\n         this.memory = builder.getMemory();\n         this.startedBy = builder.getStartedBy();\n         this.assignPublicIp = builder.isAssignPublicIp();\n+        this.placementStrategyType = builder.getPlacementStrategyType();\n+        this.placementStrategyField = builder.getPlacementStrategyField();\n+\n+        if (!placementStrategyType.isPresent() && placementStrategyField.isPresent()) {\n+            throw new ConfigException(\"PlacementStrategyField must be set with PlacementStrategyType\");\n+        }", "originalCommit": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NjI5Mg==", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517796292", "bodyText": "It depends on what kind of placementStrategyType users use. E.g. random placement strategy does not require any fields.\nIt's complicated a little, some placementStrategyType requires placementStrategyField but others do not.\nhttps://github.com/aws/aws-sdk-java/blob/1.11.686/aws-java-sdk-ecs/src/main/java/com/amazonaws/services/ecs/model/PlacementStrategy.java#L44-L52\nBut at least placementStrategyField only is a clearly invalid usage. That's the reason why I added the validation here.\nRegarding more detail validations, I decided not to implement it here because it is complicated to cover all patterns as I told above. I assume digdag users who use EcsCommandExecutor have the knowledge about ECS placement strategy option.", "author": "serihiro", "createdAt": "2020-11-05T05:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MTY3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "69865e39e975d19ec570e90c586d0cfc886ebd59", "chunk": "diff --git a/digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java b/digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java\nindex ecf9323139..7c9b959d37 100644\n--- a/digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java\n+++ b/digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java\n\n@@ -35,6 +35,9 @@ public class EcsClientConfig\n         this.placementStrategyType = builder.getPlacementStrategyType();\n         this.placementStrategyField = builder.getPlacementStrategyField();\n \n+        // All PlacementStrategyFields must be used with a PlacementStrategyType.\n+        // But some PlacementStrategyTypes can be used without any PlacementStrategyFields.\n+        // https://github.com/aws/aws-sdk-java/blob/1.11.686/aws-java-sdk-ecs/src/main/java/com/amazonaws/services/ecs/model/PlacementStrategy.java#L44-L52\n         if (!placementStrategyType.isPresent() && placementStrategyField.isPresent()) {\n             throw new ConfigException(\"PlacementStrategyField must be set with PlacementStrategyType\");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5ODEzNw==", "url": "https://github.com/treasure-data/digdag/pull/1476#discussion_r517798137", "bodyText": "throws should be at next line", "author": "komamitsu", "createdAt": "2020-11-05T05:19:08Z", "path": "digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java", "diffHunk": "@@ -530,9 +532,31 @@ RunTaskRequest buildRunTaskRequest(\n         setEcsTaskStartedBy(clientConfig, runTaskRequest);\n         setEcsNetworkConfiguration(clientConfig, runTaskRequest);\n         setCapacityProviderStrategy(clientConfig, runTaskRequest);\n+        setPlacementStrategy(clientConfig, runTaskRequest);\n         return runTaskRequest;\n     }\n \n+    private void setPlacementStrategy(EcsClientConfig clientConfig, RunTaskRequest runTaskRequest) throws ConfigException", "originalCommit": "f2906e9d8104dcd573f3304bc12ed1dc6f31b076", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffdd603586098d472b371b78fb080e523311bca9", "chunk": "diff --git a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\nindex f41b8b63e6..e3a236c5a0 100644\n--- a/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n+++ b/digdag-standards/src/main/java/io/digdag/standards/command/EcsCommandExecutor.java\n\n@@ -543,8 +543,9 @@ public class EcsCommandExecutor\n             try {\n                 placementStrategyType = PlacementStrategyType.fromValue(clientConfig.getPlacementStrategyType().get());\n             }\n-            catch (IllegalArgumentException invalidReason) {\n-                throw new ConfigException(\"PlacementStrategyType is invalid\", invalidReason);\n+            // The message of this exception object has the validation error message.\n+            catch (IllegalArgumentException validationError) {\n+                throw new ConfigException(\"PlacementStrategyType is invalid\", validationError);\n             }\n             final PlacementStrategy placementStrategy = new PlacementStrategy();\n             placementStrategy.setType(placementStrategyType);\n"}}, {"oid": "ffdd603586098d472b371b78fb080e523311bca9", "url": "https://github.com/treasure-data/digdag/commit/ffdd603586098d472b371b78fb080e523311bca9", "message": "Rename the exception object", "committedDate": "2020-11-05T06:25:42Z", "type": "commit"}, {"oid": "a274d6684934b01fbd0396779dcf25083152476a", "url": "https://github.com/treasure-data/digdag/commit/a274d6684934b01fbd0396779dcf25083152476a", "message": "Fix format", "committedDate": "2020-11-05T06:27:09Z", "type": "commit"}, {"oid": "69865e39e975d19ec570e90c586d0cfc886ebd59", "url": "https://github.com/treasure-data/digdag/commit/69865e39e975d19ec570e90c586d0cfc886ebd59", "message": "Leave the description about placement strategy specification", "committedDate": "2020-11-05T06:37:42Z", "type": "commit"}]}