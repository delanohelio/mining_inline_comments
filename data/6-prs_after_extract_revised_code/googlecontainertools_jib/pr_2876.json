{"pr_number": 2876, "pr_title": "Fix broken Jib CLI logging", "pr_createdAt": "2020-10-30T18:40:43Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2876", "timeline": [{"oid": "11ed2b526cee37c216789e270ca68573a9a23ca9", "url": "https://github.com/GoogleContainerTools/jib/commit/11ed2b526cee37c216789e270ca68573a9a23ca9", "message": "Fix Jib CLI logger", "committedDate": "2020-10-30T18:33:05Z", "type": "commit"}, {"oid": "7bf65ee5a4b2d3df70da679208e99e45ab4bfa49", "url": "https://github.com/GoogleContainerTools/jib/commit/7bf65ee5a4b2d3df70da679208e99e45ab4bfa49", "message": "minor cleanups", "committedDate": "2020-10-30T18:33:31Z", "type": "commit"}, {"oid": "8930bc314b3bceb28c676f3f662a8f4c5205dcf9", "url": "https://github.com/GoogleContainerTools/jib/commit/8930bc314b3bceb28c676f3f662a8f4c5205dcf9", "message": "Flip twoCursorUpJumping", "committedDate": "2020-10-30T18:37:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjkzOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2876#discussion_r515306939", "bodyText": "Flipping enableTwoCursorUpJump doesn't effectively change output and is not required to fix the issue. However, since there's no need to employ the two-cursor-up-jump trick (was only necessary for Maven), I'm turning it off.", "author": "chanseokoh", "createdAt": "2020-10-30T18:42:25Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/logging/CliLogger.java", "diffHunk": "@@ -22,36 +22,54 @@\n import com.google.common.annotations.VisibleForTesting;\n import java.io.PrintStream;\n \n-/** A simple cli logger that logs to the command line based on the configured log level. */\n+/** A simple CLI logger that logs to the command line based on the configured log level. */\n public class CliLogger {\n \n   /**\n-   * Create a new logger for the cli.\n+   * Create a new logger for the CLI.\n    *\n    * @param verbosity the configure verbosity\n    * @param consoleOutput the configured consoleOutput format\n    * @return a new ConsoleLogger instance\n    */\n   public static ConsoleLogger newLogger(Verbosity verbosity, ConsoleOutput consoleOutput) {\n-    CliLogger cliLogger = new CliLogger(verbosity, System.out, System.err);\n-    boolean isRichConsole = isRichConsole(consoleOutput);\n-\n-    return newLogger(cliLogger, isRichConsole, new SingleThreadedExecutor());\n+    return newLogger(\n+        verbosity, consoleOutput, System.out, System.err, new SingleThreadedExecutor());\n   }\n \n   @VisibleForTesting\n   static ConsoleLogger newLogger(\n-      CliLogger cliLogger, boolean isRichConsole, SingleThreadedExecutor executor) {\n-    // rich logger will use an explicit progress event handler\n+      Verbosity verbosity,\n+      ConsoleOutput consoleOutput,\n+      PrintStream stdout,\n+      PrintStream stderr,\n+      SingleThreadedExecutor executor) {\n+    boolean enableRichProgress =\n+        isRichConsole(consoleOutput) && verbosity.atLeast(Verbosity.lifecycle);\n     ConsoleLoggerBuilder builder =\n-        isRichConsole\n-            ? ConsoleLoggerBuilder.rich(executor, true)\n-            : ConsoleLoggerBuilder.plain(executor).progress(cliLogger::lifecycle);\n-    builder.error(cliLogger::error);\n-    builder.warn(cliLogger::warn);\n-    builder.lifecycle(cliLogger::lifecycle);\n-    builder.info(cliLogger::info);\n-    builder.debug(cliLogger::debug);\n+        enableRichProgress\n+            ? ConsoleLoggerBuilder.rich(executor, false)", "originalCommit": "8930bc314b3bceb28c676f3f662a8f4c5205dcf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}