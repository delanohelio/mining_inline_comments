{"pr_number": 2571, "pr_title": "Add yaml dependencies and FilePropertiesSpec", "pr_createdAt": "2020-07-08T03:34:26Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2571", "timeline": [{"oid": "715eb8581ed49cd3b3f0d6f4c5f5ae8095f0fb7a", "url": "https://github.com/GoogleContainerTools/jib/commit/715eb8581ed49cd3b3f0d6f4c5f5ae8095f0fb7a", "message": "Add yaml dependencies and FilePropertiesSpec\n\n- add jackson databind, yaml dependencies\n- add first parseable portion of buildfile\n- add `Instants` class which may be removed later", "committedDate": "2020-07-08T03:33:13Z", "type": "commit"}, {"oid": "319d2f3613bafbc25e8b773588aa7f9f973660d4", "url": "https://github.com/GoogleContainerTools/jib/commit/319d2f3613bafbc25e8b773588aa7f9f973660d4", "message": "comments, tests", "committedDate": "2020-07-08T17:08:52Z", "type": "commit"}, {"oid": "19eb9ced8a1a7d340b92f63bed7c6d953f3105be", "url": "https://github.com/GoogleContainerTools/jib/commit/19eb9ced8a1a7d340b92f63bed7c6d953f3105be", "message": "style", "committedDate": "2020-07-08T17:14:12Z", "type": "commit"}, {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "url": "https://github.com/GoogleContainerTools/jib/commit/094e72dbe9f7742550cbe8a9d022397277f0b1c6", "message": "javadoc", "committedDate": "2020-07-08T17:40:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NTU0MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451775540", "bodyText": "I see there are no setters. Can these be final?", "author": "chanseokoh", "createdAt": "2020-07-08T19:26:18Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying file properties (used in conjunction with layers).\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * filePermissions: 644\n+ * directoryPermissions: 755\n+ * user: foo\n+ * group: bar\n+ * timestamp: 100\n+ * }</pre>\n+ */\n+public class FilePropertiesSpec {\n+  @Nullable private FilePermissions filePermissions;\n+  @Nullable private FilePermissions directoryPermissions;\n+  @Nullable private String user;\n+  @Nullable private String group;\n+  @Nullable private Instant timestamp;", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDQ4NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451814485", "bodyText": "Yeah actually I think so, I was using a different jackson mechanism to load the values, but since I'm using @JsonCreator now, final seems possible, let me test it out.", "author": "loosebazooka", "createdAt": "2020-07-08T20:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NTU0MA=="}], "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java\nindex 43400dfc..ecdc6634 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java\n\n@@ -37,11 +37,11 @@ import javax.annotation.Nullable;\n  * }</pre>\n  */\n public class FilePropertiesSpec {\n-  @Nullable private FilePermissions filePermissions;\n-  @Nullable private FilePermissions directoryPermissions;\n-  @Nullable private String user;\n-  @Nullable private String group;\n-  @Nullable private Instant timestamp;\n+  @Nullable private final FilePermissions filePermissions;\n+  @Nullable private final FilePermissions directoryPermissions;\n+  @Nullable private final String user;\n+  @Nullable private final String group;\n+  @Nullable private final Instant timestamp;\n \n   /**\n    * Constructor for use by jackson to populate this object.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NzU4Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451777583", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n          \n          \n            \n               *\n          \n          \n            \n               * @param time in millis or is8601 format\n          \n          \n            \n               * @param fieldName name of field being parse (for error messaging)\n          \n          \n            \n               * Parses a string into Instant. The string must be time in millis since the epoch or iso8601 datetime.\n          \n          \n            \n               *\n          \n          \n            \n               * @param time in millis since the epoch or iso8601 format\n          \n          \n            \n               * @param fieldName name of field being parsed (for error messaging)", "author": "chanseokoh", "createdAt": "2020-07-08T19:30:09Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {\n+  /**\n+   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   *\n+   * @param time in millis or is8601 format\n+   * @param fieldName name of field being parse (for error messaging)", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\nindex d186a07a..29a55263 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n\n@@ -21,16 +21,17 @@ import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.time.format.DateTimeParseException;\n \n-/** Helper class to convert various strings to Instants. */\n-public class Instants {\n+/** Helper class to convert various strings in a buildfile to Instants. */\n+class Instants {\n   /**\n-   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   * Parses a time string into Instant. The string must be time in milliseconds since unix epoch or\n+   * an iso8601 datetime.\n    *\n-   * @param time in millis or is8601 format\n-   * @param fieldName name of field being parse (for error messaging)\n+   * @param time in milliseconds since epoch or iso8601 format\n+   * @param fieldName name of field being parsed (for error messaging)\n    * @return Instant value of parsed time\n    */\n-  public static Instant fromMillisOrIso8601(String time, String fieldName) {\n+  static Instant fromMillisOrIso8601(String time, String fieldName) {\n     try {\n       return Instant.ofEpochMilli(Long.parseLong(time));\n     } catch (NumberFormatException nfe) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDk4NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451790985", "bodyText": "It's a matter of preference, but it's possible to assign the instance in the field declaration (and with final). This makes sense too because the code is long.\nAnd does any test fail if we don't have FAIL_ON_IGNORED_PROPERTIES set?", "author": "chanseokoh", "createdAt": "2020-07-08T19:56:32Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODQyNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451828425", "bodyText": "Actually when I took apart these tests, I meant to use (FAIL_ON_UNKNOWN_PROPERTIES, true), but it looks like the default value for those is true anyway. So this doesn't do anything useful. Moving to field declaration. Good Catch.", "author": "loosebazooka", "createdAt": "2020-07-08T21:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\nindex 575559b5..07ea0177 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n\n@@ -17,33 +17,26 @@\n package com.google.cloud.tools.jib.cli.buildfile;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.JsonMappingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n import org.junit.Assert;\n-import org.junit.BeforeClass;\n import org.junit.Test;\n \n /** Tests for {@link FilePropertiesSpec}. */\n public class FilePropertiesSpecTest {\n \n-  private static ObjectMapper filePropertiesSpecMapper;\n-\n-  @BeforeClass\n-  public static void createObjectMapper() {\n-    filePropertiesSpecMapper =\n-        new ObjectMapper(new YAMLFactory())\n-            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n-  }\n+  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());\n \n   @Test\n   public void testFilePropertiesSpec_full() throws JsonProcessingException {\n     String data =\n-        \"\"\n-            + \"filePermissions: 644\\n\"\n+        \"filePermissions: 644\\n\"\n             + \"directoryPermissions: 755\\n\"\n             + \"user: goose\\n\"\n             + \"group: birds\\n\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTYyOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451791628", "bodyText": "QQ: is this (\"\") only for better alignment?", "author": "chanseokoh", "createdAt": "2020-07-08T19:57:50Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }\n+\n+  @Test\n+  public void testFilePropertiesSpec_full() throws JsonProcessingException {\n+    String data =\n+        \"\"", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODk4Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451828986", "bodyText": "yeah I think so when I wrote this, but I don't think that's a great reason. Removed this.", "author": "loosebazooka", "createdAt": "2020-07-08T21:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTYyOA=="}], "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\nindex 575559b5..07ea0177 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n\n@@ -17,33 +17,26 @@\n package com.google.cloud.tools.jib.cli.buildfile;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.JsonMappingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n import org.junit.Assert;\n-import org.junit.BeforeClass;\n import org.junit.Test;\n \n /** Tests for {@link FilePropertiesSpec}. */\n public class FilePropertiesSpecTest {\n \n-  private static ObjectMapper filePropertiesSpecMapper;\n-\n-  @BeforeClass\n-  public static void createObjectMapper() {\n-    filePropertiesSpecMapper =\n-        new ObjectMapper(new YAMLFactory())\n-            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n-  }\n+  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());\n \n   @Test\n   public void testFilePropertiesSpec_full() throws JsonProcessingException {\n     String data =\n-        \"\"\n-            + \"filePermissions: 644\\n\"\n+        \"filePermissions: 644\\n\"\n             + \"directoryPermissions: 755\\n\"\n             + \"user: goose\\n\"\n             + \"group: birds\\n\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzA4MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451793081", "bodyText": "Can this be package-private?", "author": "chanseokoh", "createdAt": "2020-07-08T20:00:37Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\nindex d186a07a..29a55263 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n\n@@ -21,16 +21,17 @@ import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.time.format.DateTimeParseException;\n \n-/** Helper class to convert various strings to Instants. */\n-public class Instants {\n+/** Helper class to convert various strings in a buildfile to Instants. */\n+class Instants {\n   /**\n-   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   * Parses a time string into Instant. The string must be time in milliseconds since unix epoch or\n+   * an iso8601 datetime.\n    *\n-   * @param time in millis or is8601 format\n-   * @param fieldName name of field being parse (for error messaging)\n+   * @param time in milliseconds since epoch or iso8601 format\n+   * @param fieldName name of field being parsed (for error messaging)\n    * @return Instant value of parsed time\n    */\n-  public static Instant fromMillisOrIso8601(String time, String fieldName) {\n+  static Instant fromMillisOrIso8601(String time, String fieldName) {\n     try {\n       return Instant.ofEpochMilli(Long.parseLong(time));\n     } catch (NumberFormatException nfe) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzIwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451793201", "bodyText": "package-private?", "author": "chanseokoh", "createdAt": "2020-07-08T20:00:50Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {\n+  /**\n+   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   *\n+   * @param time in millis or is8601 format\n+   * @param fieldName name of field being parse (for error messaging)\n+   * @return Instant value of parsed time\n+   */\n+  public static Instant fromMillisOrIso8601(String time, String fieldName) {", "originalCommit": "094e72dbe9f7742550cbe8a9d022397277f0b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "chunk": "diff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\nindex d186a07a..29a55263 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java\n\n@@ -21,16 +21,17 @@ import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.time.format.DateTimeParseException;\n \n-/** Helper class to convert various strings to Instants. */\n-public class Instants {\n+/** Helper class to convert various strings in a buildfile to Instants. */\n+class Instants {\n   /**\n-   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   * Parses a time string into Instant. The string must be time in milliseconds since unix epoch or\n+   * an iso8601 datetime.\n    *\n-   * @param time in millis or is8601 format\n-   * @param fieldName name of field being parse (for error messaging)\n+   * @param time in milliseconds since epoch or iso8601 format\n+   * @param fieldName name of field being parsed (for error messaging)\n    * @return Instant value of parsed time\n    */\n-  public static Instant fromMillisOrIso8601(String time, String fieldName) {\n+  static Instant fromMillisOrIso8601(String time, String fieldName) {\n     try {\n       return Instant.ofEpochMilli(Long.parseLong(time));\n     } catch (NumberFormatException nfe) {\n"}}, {"oid": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "url": "https://github.com/GoogleContainerTools/jib/commit/231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "message": "json unknown props issue, comments", "committedDate": "2020-07-08T21:14:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTUxMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451831510", "bodyText": "nit: final", "author": "chanseokoh", "createdAt": "2020-07-08T21:19:23Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());", "originalCommit": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyNTQ3NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r452225475", "bodyText": "oops, done", "author": "loosebazooka", "createdAt": "2020-07-09T13:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "be57fef8880d9f48b8fcd708951889fa949ccbf8", "chunk": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\nindex 07ea0177..93b8c0f6 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java\n\n@@ -31,7 +31,7 @@ import org.junit.Test;\n /** Tests for {@link FilePropertiesSpec}. */\n public class FilePropertiesSpecTest {\n \n-  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());\n+  private static final ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());\n \n   @Test\n   public void testFilePropertiesSpec_full() throws JsonProcessingException {\n"}}, {"oid": "be57fef8880d9f48b8fcd708951889fa949ccbf8", "url": "https://github.com/GoogleContainerTools/jib/commit/be57fef8880d9f48b8fcd708951889fa949ccbf8", "message": "final member in test", "committedDate": "2020-07-09T13:38:31Z", "type": "commit"}]}