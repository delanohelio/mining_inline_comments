{"pr_number": 2502, "pr_title": "Add project dependencies in a separate layer for WAR projects", "pr_createdAt": "2020-05-30T16:30:00Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2502", "timeline": [{"oid": "e6cef047d8966fbd53fca87673e86135dd95724e", "url": "https://github.com/GoogleContainerTools/jib/commit/e6cef047d8966fbd53fca87673e86135dd95724e", "message": "add project dependencies for WAR project", "committedDate": "2020-05-30T10:19:27Z", "type": "commit"}, {"oid": "c1916074d99f29f9b1e0d7745958f915272e00ab", "url": "https://github.com/GoogleContainerTools/jib/commit/c1916074d99f29f9b1e0d7745958f915272e00ab", "message": " add test for project dependencies of WAR project", "committedDate": "2020-05-30T14:37:54Z", "type": "commit"}, {"oid": "00dcb2356073024b2536d02e6e31713c9d87f676", "url": "https://github.com/GoogleContainerTools/jib/commit/00dcb2356073024b2536d02e6e31713c9d87f676", "message": "format", "committedDate": "2020-05-30T15:23:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MTY3MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r433281671", "bodyText": "I'd prefer calling addProjectDependencies after addSnapshotDependencies. That is, the order should be\n\nadd 3rd-party dependencies\nadd snapshot dependencies\nadd project dependencies\n\nAnd let's chain .filter().\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          .filter(\n          \n          \n            \n                              path ->\n          \n          \n            \n                                  !path.getFileName().toString().contains(\"SNAPSHOT\")\n          \n          \n            \n                                      && !projectArtifacts.contains(path.getFileName().toString()))\n          \n          \n            \n                          .filter(path -> !path.getFileName().toString().contains(\"SNAPSHOT\"))\n          \n          \n            \n                          .filter(path -> !projectArtifacts.contains(path.getFileName().toString()))\n          \n      \n    \n    \n  \n\nAlso, now it's better to give names to these predicates. For example,\n.filter(path -> !isSnapshot(path))\n.filter(path -> !isProjectDependency(path))\n...\n.filter(isSnapshot)\n....\n.filter(isProjectDependency)", "author": "chanseokoh", "createdAt": "2020-06-01T14:52:06Z", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java", "diffHunk": "@@ -123,10 +126,18 @@ public static JibContainerBuilder fromExplodedWar(\n       javaContainerBuilder.addClasses(webInfClasses, isClassFile);\n     }\n     if (Files.exists(webInfLib)) {\n+      javaContainerBuilder.addProjectDependencies(\n+          new DirectoryWalker(webInfLib)\n+              .filterRoot()\n+              .filter(path -> projectArtifacts.contains(path.getFileName().toString()))\n+              .walk());\n       javaContainerBuilder.addDependencies(\n           new DirectoryWalker(webInfLib)\n               .filterRoot()\n-              .filter(path -> !path.getFileName().toString().contains(\"SNAPSHOT\"))\n+              .filter(\n+                  path ->\n+                      !path.getFileName().toString().contains(\"SNAPSHOT\")\n+                          && !projectArtifacts.contains(path.getFileName().toString()))", "originalCommit": "00dcb2356073024b2536d02e6e31713c9d87f676", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62dba12c4e9070129bc5ad572712891515e9a662", "chunk": "diff --git a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\nindex d08745437..edb699d0d 100644\n--- a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\n+++ b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\n\n@@ -126,24 +131,17 @@ public class JavaContainerBuilderHelper {\n       javaContainerBuilder.addClasses(webInfClasses, isClassFile);\n     }\n     if (Files.exists(webInfLib)) {\n-      javaContainerBuilder.addProjectDependencies(\n-          new DirectoryWalker(webInfLib)\n-              .filterRoot()\n-              .filter(path -> projectArtifacts.contains(path.getFileName().toString()))\n-              .walk());\n+\n       javaContainerBuilder.addDependencies(\n           new DirectoryWalker(webInfLib)\n               .filterRoot()\n-              .filter(\n-                  path ->\n-                      !path.getFileName().toString().contains(\"SNAPSHOT\")\n-                          && !projectArtifacts.contains(path.getFileName().toString()))\n+              .filter(isSnapshot.negate())\n+              .filter(isProjectDependency.negate())\n               .walk());\n       javaContainerBuilder.addSnapshotDependencies(\n-          new DirectoryWalker(webInfLib)\n-              .filterRoot()\n-              .filter(path -> path.getFileName().toString().contains(\"SNAPSHOT\"))\n-              .walk());\n+          new DirectoryWalker(webInfLib).filterRoot().filter(isSnapshot).walk());\n+      javaContainerBuilder.addProjectDependencies(\n+          new DirectoryWalker(webInfLib).filterRoot().filter(isProjectDependency).walk());\n     }\n     return javaContainerBuilder.toContainerBuilder();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4NjE2NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r433286164", "bodyText": "projectArtifacts --> projectArtifactFilename\nand update the Javadoc accordingly.", "author": "chanseokoh", "createdAt": "2020-06-01T14:59:26Z", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java", "diffHunk": "@@ -98,11 +99,13 @@ public static FileEntriesLayer extraDirectoryLayerConfiguration(\n    *\n    * @param javaContainerBuilder Java container builder to start with\n    * @param explodedWar the exploded WAR directory\n+   * @param projectArtifacts the project artifacts for project dependencies\n    * @return {@link JibContainerBuilder} containing the layers for the exploded WAR\n    * @throws IOException if adding layer contents fails\n    */\n   public static JibContainerBuilder fromExplodedWar(\n-      JavaContainerBuilder javaContainerBuilder, Path explodedWar) throws IOException {\n+      JavaContainerBuilder javaContainerBuilder, Path explodedWar, Set<String> projectArtifacts)", "originalCommit": "00dcb2356073024b2536d02e6e31713c9d87f676", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62dba12c4e9070129bc5ad572712891515e9a662", "chunk": "diff --git a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\nindex d08745437..edb699d0d 100644\n--- a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\n+++ b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelper.java\n\n@@ -99,12 +99,14 @@ public class JavaContainerBuilderHelper {\n    *\n    * @param javaContainerBuilder Java container builder to start with\n    * @param explodedWar the exploded WAR directory\n-   * @param projectArtifacts the project artifacts for project dependencies\n+   * @param projectArtifactFilename the file names of project artifacts for project dependencies\n    * @return {@link JibContainerBuilder} containing the layers for the exploded WAR\n    * @throws IOException if adding layer contents fails\n    */\n   public static JibContainerBuilder fromExplodedWar(\n-      JavaContainerBuilder javaContainerBuilder, Path explodedWar, Set<String> projectArtifacts)\n+      JavaContainerBuilder javaContainerBuilder,\n+      Path explodedWar,\n+      Set<String> projectArtifactFilename)\n       throws IOException {\n     Path webInfLib = explodedWar.resolve(\"WEB-INF/lib\");\n     Path webInfClasses = explodedWar.resolve(\"WEB-INF/classes\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4NzUxMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r433287510", "bodyText": "Like what you did in Gradle, you can refactoring this out to a variable and reuse it below as well.", "author": "chanseokoh", "createdAt": "2020-06-01T15:01:30Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -256,7 +257,16 @@ public JibContainerBuilder createJibContainerBuilder(\n         Path war = getWarArtifact();\n         Path explodedWarPath = tempDirectoryProvider.newDirectory();\n         ZipUtil.unzip(war, explodedWarPath);\n-        return JavaContainerBuilderHelper.fromExplodedWar(javaContainerBuilder, explodedWarPath);\n+        return JavaContainerBuilderHelper.fromExplodedWar(\n+            javaContainerBuilder,\n+            explodedWarPath,\n+            session\n+                .getProjects()\n+                .stream()\n+                .map(MavenProject::getArtifact)\n+                .map(Artifact::getFile)\n+                .map(File::getName)\n+                .collect(Collectors.toSet()));", "originalCommit": "00dcb2356073024b2536d02e6e31713c9d87f676", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62dba12c4e9070129bc5ad572712891515e9a662", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\nindex 4da32ccfe..c9c5d3ea9 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n\n@@ -253,6 +254,10 @@ public class MavenProjectProperties implements ProjectProperties {\n       JavaContainerBuilder javaContainerBuilder, ContainerizingMode containerizingMode)\n       throws IOException {\n     try {\n+\n+      Stream<Artifact> mavenProjectArtifactStream =\n+          session.getProjects().stream().map(MavenProject::getArtifact);\n+\n       if (isWarProject()) {\n         Path war = getWarArtifact();\n         Path explodedWarPath = tempDirectoryProvider.newDirectory();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4OTIxNA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r433289214", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                File f = new File(temporaryExplodedWar.resolve(\"WEB-INF/lib/dependencyA-1.0.0.jar\").toString());\n          \n          \n            \n                f.createNewFile();\n          \n          \n            \n                Files.createFile(temporaryExplodedWar.resolve(\"WEB-INF/lib/project-dependency-1.0.0.jar\"));", "author": "chanseokoh", "createdAt": "2020-06-01T15:04:42Z", "path": "jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java", "diffHunk": "@@ -188,14 +191,18 @@ public void testFromExplodedWar()\n         Paths.get(Resources.getResource(\"plugins-common/exploded-war\").toURI());\n     FileOperations.copy(ImmutableList.of(resourceExplodedWar), temporaryFolder.getRoot().toPath());\n     Path temporaryExplodedWar = temporaryFolder.getRoot().toPath().resolve(\"exploded-war\");\n-\n     Files.createDirectories(temporaryExplodedWar.resolve(\"WEB-INF/classes/empty_dir\"));\n+    File f = new File(temporaryExplodedWar.resolve(\"WEB-INF/lib/dependencyA-1.0.0.jar\").toString());\n+    f.createNewFile();", "originalCommit": "00dcb2356073024b2536d02e6e31713c9d87f676", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62dba12c4e9070129bc5ad572712891515e9a662", "chunk": "diff --git a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\nindex e2802c026..5d4ce7456 100644\n--- a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\n+++ b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\n\n@@ -192,10 +191,9 @@ public class JavaContainerBuilderHelperTest {\n     FileOperations.copy(ImmutableList.of(resourceExplodedWar), temporaryFolder.getRoot().toPath());\n     Path temporaryExplodedWar = temporaryFolder.getRoot().toPath().resolve(\"exploded-war\");\n     Files.createDirectories(temporaryExplodedWar.resolve(\"WEB-INF/classes/empty_dir\"));\n-    File f = new File(temporaryExplodedWar.resolve(\"WEB-INF/lib/dependencyA-1.0.0.jar\").toString());\n-    f.createNewFile();\n+    Files.createFile(temporaryExplodedWar.resolve(\"WEB-INF/lib/project-dependency-1.0.0.jar\"));\n     Set<String> projectArtifacts = new HashSet<>();\n-    projectArtifacts.add(f.getName());\n+    projectArtifacts.add(\"project-dependency-1.0.0.jar\");\n \n     JavaContainerBuilder javaContainerBuilder =\n         JavaContainerBuilder.from(RegistryImage.named(\"base\"))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4OTU2NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r433289564", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                projectArtifacts.add(f.getName());\n          \n          \n            \n                projectArtifacts.add(\"project-dependency-1.0.0.jar\");", "author": "chanseokoh", "createdAt": "2020-06-01T15:05:19Z", "path": "jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java", "diffHunk": "@@ -188,14 +191,18 @@ public void testFromExplodedWar()\n         Paths.get(Resources.getResource(\"plugins-common/exploded-war\").toURI());\n     FileOperations.copy(ImmutableList.of(resourceExplodedWar), temporaryFolder.getRoot().toPath());\n     Path temporaryExplodedWar = temporaryFolder.getRoot().toPath().resolve(\"exploded-war\");\n-\n     Files.createDirectories(temporaryExplodedWar.resolve(\"WEB-INF/classes/empty_dir\"));\n+    File f = new File(temporaryExplodedWar.resolve(\"WEB-INF/lib/dependencyA-1.0.0.jar\").toString());\n+    f.createNewFile();\n+    Set<String> projectArtifacts = new HashSet<>();\n+    projectArtifacts.add(f.getName());", "originalCommit": "00dcb2356073024b2536d02e6e31713c9d87f676", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62dba12c4e9070129bc5ad572712891515e9a662", "chunk": "diff --git a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\nindex e2802c026..5d4ce7456 100644\n--- a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\n+++ b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/JavaContainerBuilderHelperTest.java\n\n@@ -192,10 +191,9 @@ public class JavaContainerBuilderHelperTest {\n     FileOperations.copy(ImmutableList.of(resourceExplodedWar), temporaryFolder.getRoot().toPath());\n     Path temporaryExplodedWar = temporaryFolder.getRoot().toPath().resolve(\"exploded-war\");\n     Files.createDirectories(temporaryExplodedWar.resolve(\"WEB-INF/classes/empty_dir\"));\n-    File f = new File(temporaryExplodedWar.resolve(\"WEB-INF/lib/dependencyA-1.0.0.jar\").toString());\n-    f.createNewFile();\n+    Files.createFile(temporaryExplodedWar.resolve(\"WEB-INF/lib/project-dependency-1.0.0.jar\"));\n     Set<String> projectArtifacts = new HashSet<>();\n-    projectArtifacts.add(f.getName());\n+    projectArtifacts.add(\"project-dependency-1.0.0.jar\");\n \n     JavaContainerBuilder javaContainerBuilder =\n         JavaContainerBuilder.from(RegistryImage.named(\"base\"))\n"}}, {"oid": "62dba12c4e9070129bc5ad572712891515e9a662", "url": "https://github.com/GoogleContainerTools/jib/commit/62dba12c4e9070129bc5ad572712891515e9a662", "message": "refactor code", "committedDate": "2020-06-03T15:31:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2ODAzNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r437468037", "bodyText": "nit: for consistency with Gradle, let's say\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                  Stream<Artifact> mavenProjectArtifactStream =\n          \n          \n            \n                      session.getProjects().stream().map(MavenProject::getArtifact);\n          \n          \n            \n                  Set<Artifact> artifactsFromAllProjects =\n          \n          \n            \n                      session.getProjects().stream().map(MavenProject::getArtifact).collect(Collectors.toSet());", "author": "chanseokoh", "createdAt": "2020-06-09T14:29:42Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -252,11 +254,21 @@ public JibContainerBuilder createJibContainerBuilder(\n       JavaContainerBuilder javaContainerBuilder, ContainerizingMode containerizingMode)\n       throws IOException {\n     try {\n+\n+      Stream<Artifact> mavenProjectArtifactStream =\n+          session.getProjects().stream().map(MavenProject::getArtifact);", "originalCommit": "62dba12c4e9070129bc5ad572712891515e9a662", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a07044e922b27140958e159fe6444f29098499e1", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\nindex c9c5d3ea9..b8b679e4f 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n\n@@ -254,10 +253,6 @@ public class MavenProjectProperties implements ProjectProperties {\n       JavaContainerBuilder javaContainerBuilder, ContainerizingMode containerizingMode)\n       throws IOException {\n     try {\n-\n-      Stream<Artifact> mavenProjectArtifactStream =\n-          session.getProjects().stream().map(MavenProject::getArtifact);\n-\n       if (isWarProject()) {\n         Path war = getWarArtifact();\n         Path explodedWarPath = tempDirectoryProvider.newDirectory();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2ODM2Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r437468362", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      classifyDependencies(\n          \n          \n            \n                      classifyDependencies(project.getArtifacts(), artifactsFromAllProjects);", "author": "chanseokoh", "createdAt": "2020-06-09T14:30:10Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -282,12 +294,7 @@ public JibContainerBuilder createJibContainerBuilder(\n       // Classify and add dependencies\n       Map<LayerType, List<Path>> classifiedDependencies =\n           classifyDependencies(", "originalCommit": "62dba12c4e9070129bc5ad572712891515e9a662", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a07044e922b27140958e159fe6444f29098499e1", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\nindex c9c5d3ea9..b8b679e4f 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n\n@@ -293,8 +289,7 @@ public class MavenProjectProperties implements ProjectProperties {\n \n       // Classify and add dependencies\n       Map<LayerType, List<Path>> classifiedDependencies =\n-          classifyDependencies(\n-              project.getArtifacts(), mavenProjectArtifactStream.collect(Collectors.toSet()));\n+          classifyDependencies(project.getArtifacts(), getProjectDependencies());\n \n       javaContainerBuilder.addDependencies(\n           Preconditions.checkNotNull(classifiedDependencies.get(LayerType.DEPENDENCIES)));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2ODg4Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2502#discussion_r437468886", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        mavenProjectArtifactStream\n          \n          \n            \n                        artifactsFromAllProjects\n          \n          \n            \n                            .stream()", "author": "chanseokoh", "createdAt": "2020-06-09T14:30:48Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -252,11 +254,21 @@ public JibContainerBuilder createJibContainerBuilder(\n       JavaContainerBuilder javaContainerBuilder, ContainerizingMode containerizingMode)\n       throws IOException {\n     try {\n+\n+      Stream<Artifact> mavenProjectArtifactStream =\n+          session.getProjects().stream().map(MavenProject::getArtifact);\n+\n       if (isWarProject()) {\n         Path war = getWarArtifact();\n         Path explodedWarPath = tempDirectoryProvider.newDirectory();\n         ZipUtil.unzip(war, explodedWarPath);\n-        return JavaContainerBuilderHelper.fromExplodedWar(javaContainerBuilder, explodedWarPath);\n+        return JavaContainerBuilderHelper.fromExplodedWar(\n+            javaContainerBuilder,\n+            explodedWarPath,\n+            mavenProjectArtifactStream", "originalCommit": "62dba12c4e9070129bc5ad572712891515e9a662", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a07044e922b27140958e159fe6444f29098499e1", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\nindex c9c5d3ea9..b8b679e4f 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n\n@@ -254,10 +253,6 @@ public class MavenProjectProperties implements ProjectProperties {\n       JavaContainerBuilder javaContainerBuilder, ContainerizingMode containerizingMode)\n       throws IOException {\n     try {\n-\n-      Stream<Artifact> mavenProjectArtifactStream =\n-          session.getProjects().stream().map(MavenProject::getArtifact);\n-\n       if (isWarProject()) {\n         Path war = getWarArtifact();\n         Path explodedWarPath = tempDirectoryProvider.newDirectory();\n"}}, {"oid": "a07044e922b27140958e159fe6444f29098499e1", "url": "https://github.com/GoogleContainerTools/jib/commit/a07044e922b27140958e159fe6444f29098499e1", "message": "Fix NullPointerException", "committedDate": "2020-06-09T15:38:26Z", "type": "commit"}, {"oid": "73b97214903652a740233c27326903ec79d614df", "url": "https://github.com/GoogleContainerTools/jib/commit/73b97214903652a740233c27326903ec79d614df", "message": "Add CHANGELOG", "committedDate": "2020-06-09T16:16:47Z", "type": "commit"}]}