{"pr_number": 2824, "pr_title": "Handle OCI manifest and index with no mediaType", "pr_createdAt": "2020-10-14T20:31:25Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2824", "timeline": [{"oid": "37cf8959b592ea8b33fd0a9c754e7f8bed6380da", "url": "https://github.com/GoogleContainerTools/jib/commit/37cf8959b592ea8b33fd0a9c754e7f8bed6380da", "message": "Handle OCI manifest and index with no mediaType", "committedDate": "2020-10-14T20:25:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NTU3Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2824#discussion_r504985572", "bodyText": "Could we add a test for this exception?", "author": "mpeddada1", "createdAt": "2020-10-14T21:35:00Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/AbstractManifestPuller.java", "diffHunk": "@@ -145,15 +147,29 @@ private T getManifestTemplateFromJson(String jsonString)\n     }\n     if (schemaVersion == 2) {\n       // 'schemaVersion' of 2 can be either Docker V2.2 or OCI.\n-      String mediaType = node.get(\"mediaType\").asText();\n-      if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n-        return manifestTemplateClass.cast(\n-            JsonTemplateMapper.readJson(jsonString, V22ManifestTemplate.class));\n+      JsonNode mediaTypeNode = node.get(\"mediaType\");\n+      if (mediaTypeNode == null) { // not Docker, hence OCI\n+        if (node.get(\"manifests\") != null) {\n+          return manifestTemplateClass.cast(\n+              JsonTemplateMapper.readJson(jsonString, OciIndexTemplate.class));\n+        }\n+        if (node.get(\"config\") != null) {\n+          return manifestTemplateClass.cast(\n+              JsonTemplateMapper.readJson(jsonString, OciManifestTemplate.class));\n+        }\n+        throw new UnknownManifestFormatException(\n+            \"'schemaVersion' is 2, but neither 'manifests' nor 'config' exists\");", "originalCommit": "37cf8959b592ea8b33fd0a9c754e7f8bed6380da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "2d8d3814a6c1b2ee64d0847e7c0f5dd5377bd2b4", "url": "https://github.com/GoogleContainerTools/jib/commit/2d8d3814a6c1b2ee64d0847e7c0f5dd5377bd2b4", "message": "Add test for invalid OCI manifest", "committedDate": "2020-10-14T21:59:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA0MjU1OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2824#discussion_r505042558", "bodyText": "Do we even accept OciIndexTemplate?", "author": "loosebazooka", "createdAt": "2020-10-14T22:54:40Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/AbstractManifestPuller.java", "diffHunk": "@@ -145,15 +147,29 @@ private T getManifestTemplateFromJson(String jsonString)\n     }\n     if (schemaVersion == 2) {\n       // 'schemaVersion' of 2 can be either Docker V2.2 or OCI.\n-      String mediaType = node.get(\"mediaType\").asText();\n-      if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n-        return manifestTemplateClass.cast(\n-            JsonTemplateMapper.readJson(jsonString, V22ManifestTemplate.class));\n+      JsonNode mediaTypeNode = node.get(\"mediaType\");\n+      if (mediaTypeNode == null) { // not Docker, hence OCI\n+        if (node.get(\"manifests\") != null) {\n+          return manifestTemplateClass.cast(\n+              JsonTemplateMapper.readJson(jsonString, OciIndexTemplate.class));", "originalCommit": "2d8d3814a6c1b2ee64d0847e7c0f5dd5377bd2b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYxMDM5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2824#discussion_r505610399", "bodyText": "Not yet ( getAccept() doesn't list OCI index). But I'm making this part future proof.", "author": "chanseokoh", "createdAt": "2020-10-15T14:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA0MjU1OA=="}], "type": "inlineReview", "revised_code": null}]}