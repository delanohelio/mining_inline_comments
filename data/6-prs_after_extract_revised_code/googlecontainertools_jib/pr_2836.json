{"pr_number": 2836, "pr_title": "Credential configuration support", "pr_createdAt": "2020-10-16T20:41:10Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2836", "timeline": [{"oid": "6925c046e5ee6172801cff8d6b526a76390fec93", "url": "https://github.com/GoogleContainerTools/jib/commit/6925c046e5ee6172801cff8d6b526a76390fec93", "message": "Credential configuration support", "committedDate": "2020-10-16T20:40:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxMTUwOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506711509", "bodyText": "also just a minor update to fix mixing test case", "author": "loosebazooka", "createdAt": "2020-10-16T20:42:22Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -387,6 +387,8 @@ public void testParse_passwordWithoutUsername() {\n             {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n             {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n             {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n+            {{\"--from-credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},", "originalCommit": "6925c046e5ee6172801cff8d6b526a76390fec93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyNTMzNA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506725334", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Get credentials for a target image registry.\n          \n          \n            \n               * Gets credentials for a target image registry.", "author": "chanseokoh", "createdAt": "2020-10-16T21:17:53Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Credentials.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.CredentialRetriever;\n+import com.google.cloud.tools.jib.plugins.common.DefaultCredentialRetrievers;\n+import java.io.FileNotFoundException;\n+import java.util.List;\n+\n+/**\n+ * A helper class to process command line args and generate a list of {@link CredentialRetriever}s.\n+ */\n+public class Credentials {\n+  /**\n+   * Get credentials for a target image registry.", "originalCommit": "6925c046e5ee6172801cff8d6b526a76390fec93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62d60593480b2efa8fcf74afc91891896b774ee5", "chunk": "diff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Credentials.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Credentials.java\nindex 646d363d..b0dcc1c0 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Credentials.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Credentials.java\n\n@@ -26,7 +26,7 @@ import java.util.List;\n  */\n public class Credentials {\n   /**\n-   * Get credentials for a target image registry.\n+   * Gets credentials for a target image registry.\n    *\n    * @param buildOptions The command line build options\n    * @param defaultCredentialRetrievers An initialized {@link DefaultCredentialRetrievers} to use\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyNjc5Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506726797", "bodyText": "All these can be final.", "author": "chanseokoh", "createdAt": "2020-10-16T21:21:46Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java", "diffHunk": "@@ -0,0 +1,265 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.api.Credential;\n+import com.google.cloud.tools.jib.plugins.common.DefaultCredentialRetrievers;\n+import java.io.FileNotFoundException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import picocli.CommandLine;\n+\n+public class CredentialsTest {\n+\n+  private static final String[] DEFAULT_ARGS = {\"--target=ignored\"};\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetToCredentialRetrieversNone {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+      return Arrays.asList(\n+          new Object[][] {\n+            {new String[] {\"--from-credential-helper=ignored\"}},\n+            {new String[] {\"--from-username=ignored\", \"--from-password=ignored\"}},\n+          });\n+    }\n+\n+    @Parameterized.Parameter(0)\n+    public String[] args;\n+\n+    @Test\n+    public void testGetToCredentialRetriever() throws FileNotFoundException {\n+      JibCli buildOptions =\n+          CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(DEFAULT_ARGS, args));\n+      Credentials.getToCredentialRetrievers(buildOptions, defaultCredentialRetrievers);\n+      Mockito.verify(defaultCredentialRetrievers).asList();\n+      Mockito.verifyNoMoreInteractions(defaultCredentialRetrievers);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetFromCredentialRetrieversNone {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+      return Arrays.asList(\n+          new Object[][] {\n+            {new String[] {\"--to-credential-helper=ignored\"}},\n+            {new String[] {\"--to-username=ignored\", \"--to-password=ignored\"}},\n+          });\n+    }\n+\n+    @Parameterized.Parameter(0)\n+    public String[] args;\n+\n+    @Test\n+    public void testGetFromCredentialRetriever() throws FileNotFoundException {\n+      JibCli buildOptions =\n+          CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(DEFAULT_ARGS, args));\n+      Credentials.getFromCredentialRetrievers(buildOptions, defaultCredentialRetrievers);\n+      Mockito.verify(defaultCredentialRetrievers).asList();\n+      Mockito.verifyNoMoreInteractions(defaultCredentialRetrievers);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetToCredentialRetrieversCredentialHelpers {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+      return Arrays.asList(\n+          new Object[][] {\n+            {new String[] {\"--credential-helper=abc\"}},\n+            {new String[] {\"--to-credential-helper=abc\"}},\n+            {new String[] {\"--to-credential-helper=abc\", \"--from-credential-helper=ignored\"}},\n+            {\n+              new String[] {\n+                \"--to-credential-helper=abc\", \"--from-username=ignored\", \"--from-password=ignored\"\n+              }\n+            },\n+          });\n+    }\n+\n+    @Parameterized.Parameter public String[] args;\n+\n+    @Test\n+    public void testGetToCredentialRetriever() throws FileNotFoundException {\n+      JibCli buildOptions =\n+          CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(DEFAULT_ARGS, args));\n+      Credentials.getToCredentialRetrievers(buildOptions, defaultCredentialRetrievers);\n+      Mockito.verify(defaultCredentialRetrievers).setCredentialHelper(\"abc\");\n+      Mockito.verify(defaultCredentialRetrievers).asList();\n+      Mockito.verifyNoMoreInteractions(defaultCredentialRetrievers);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetFromCredentialRetrieverCredentialHelper {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+      return Arrays.asList(\n+          new Object[][] {\n+            {new String[] {\"--credential-helper=abc\"}},\n+            {new String[] {\"--from-credential-helper=abc\"}},\n+            {new String[] {\"--from-credential-helper=abc\", \"--to-credential-helper=ignored\"}},\n+            {\n+              new String[] {\n+                \"--from-credential-helper=abc\", \"--to-username=ignored\", \"--to-password=ignored\"\n+              }\n+            },\n+          });\n+    }\n+\n+    @Parameterized.Parameter public String[] args;\n+\n+    @Test\n+    public void testGetFromCredentialRetriever() throws FileNotFoundException {\n+      JibCli buildOptions =\n+          CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(DEFAULT_ARGS, args));\n+      Credentials.getFromCredentialRetrievers(buildOptions, defaultCredentialRetrievers);\n+      Mockito.verify(defaultCredentialRetrievers).setCredentialHelper(\"abc\");\n+      Mockito.verify(defaultCredentialRetrievers).asList();\n+      Mockito.verifyNoMoreInteractions(defaultCredentialRetrievers);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetToCredentialRetrieverUsernamePassword {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+      return Arrays.asList(\n+          new Object[][] {\n+            {\"--username/--password\", new String[] {\"--username=abc\", \"--password=xyz\"}},\n+            {\n+              \"--to-username/--to-password\", new String[] {\"--to-username=abc\", \"--to-password=xyz\"}\n+            },\n+            {\n+              \"--to-username/--to-password\",\n+              new String[] {\n+                \"--to-username=abc\",\n+                \"--to-password=xyz\",\n+                \"--from-username=ignored\",\n+                \"--from-password=ignored\"\n+              }\n+            },\n+            {\n+              \"--to-username/--to-password\",\n+              new String[] {\n+                \"--to-username=abc\", \"--to-password=xyz\", \"--from-credential-helper=ignored\"\n+              }\n+            },\n+          });\n+    }\n+\n+    @Parameterized.Parameter(0)\n+    public String expectedSource;\n+\n+    @Parameterized.Parameter(1)\n+    public String[] args;\n+\n+    @Test\n+    public void testGetToCredentialRetriever() throws FileNotFoundException {\n+      JibCli buildOptions =\n+          CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(DEFAULT_ARGS, args));\n+      Credentials.getToCredentialRetrievers(buildOptions, defaultCredentialRetrievers);\n+      ArgumentCaptor<Credential> captor = ArgumentCaptor.forClass(Credential.class);\n+      Mockito.verify(defaultCredentialRetrievers)\n+          .setKnownCredential(captor.capture(), ArgumentMatchers.eq(expectedSource));\n+      assertThat(captor.getValue()).isEqualTo(Credential.from(\"abc\", \"xyz\"));\n+      Mockito.verify(defaultCredentialRetrievers).asList();\n+      Mockito.verifyNoMoreInteractions(defaultCredentialRetrievers);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  public static class GetFromCredentialRetrieverUsernamePassword {\n+    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;", "originalCommit": "6925c046e5ee6172801cff8d6b526a76390fec93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjczMjE1Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506732152", "bodyText": "yeah I keep making this mistake, I should be more careful, maybe there's a rule we can add to something", "author": "loosebazooka", "createdAt": "2020-10-16T21:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyNjc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "62d60593480b2efa8fcf74afc91891896b774ee5", "chunk": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\nindex 2dc86e8d..4af3eaaa 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\n\n@@ -42,7 +42,7 @@ public class CredentialsTest {\n \n   @RunWith(Parameterized.class)\n   public static class GetToCredentialRetrieversNone {\n-    @Rule public MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+    @Rule public final MockitoRule mockitoJUnit = MockitoJUnit.rule();\n     @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n \n     @Parameterized.Parameters\n"}}, {"oid": "62d60593480b2efa8fcf74afc91891896b774ee5", "url": "https://github.com/GoogleContainerTools/jib/commit/62d60593480b2efa8fcf74afc91891896b774ee5", "message": "fixes", "committedDate": "2020-10-16T21:39:35Z", "type": "commit"}, {"oid": "605e5e1e760d8acc653a12fac75cbb54d09045b0", "url": "https://github.com/GoogleContainerTools/jib/commit/605e5e1e760d8acc653a12fac75cbb54d09045b0", "message": "all the finals", "committedDate": "2020-10-16T21:47:59Z", "type": "commit"}, {"oid": "2dfa535a5a33b6d10bf4e7d0669248c5e59ac31a", "url": "https://github.com/GoogleContainerTools/jib/commit/2dfa535a5a33b6d10bf4e7d0669248c5e59ac31a", "message": "use JUnitParams", "committedDate": "2020-10-16T22:26:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1MDYyNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506750627", "bodyText": "optional: Not sure how this would look but how about specifying the params directly in the tests instead of calling a method?", "author": "mpeddada1", "createdAt": "2020-10-16T22:40:36Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.Credential;\n+import com.google.cloud.tools.jib.plugins.common.DefaultCredentialRetrievers;\n+import junitparams.JUnitParamsRunner;\n+import junitparams.Parameters;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import picocli.CommandLine;\n+\n+import java.io.FileNotFoundException;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+@RunWith(JUnitParamsRunner.class)\n+public class CredentialsTest {\n+\n+  private static final String[] DEFAULT_ARGS = {\"--target=ignored\"};\n+  @Rule public final MockitoRule mockitoJUnit = MockitoJUnit.rule();\n+  @Mock private DefaultCredentialRetrievers defaultCredentialRetrievers;\n+\n+  private Object paramsToNone() {\n+    return new Object[]{\n+        new String[]{\"--from-credential-helper=ignored\"},\n+        new String[]{\"--from-username=ignored\", \"--from-password=ignored\"},\n+    };\n+  }\n+\n+  @Test\n+  @Parameters(method = \"paramsToNone\")", "originalCommit": "2dfa535a5a33b6d10bf4e7d0669248c5e59ac31a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3Njc4NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r506776785", "bodyText": "It does doesn't appear to work for array types.", "author": "loosebazooka", "createdAt": "2020-10-17T01:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1MDYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MzcyOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2836#discussion_r507783728", "bodyText": "Probably @loosebazooka meant \"doesn't.\"", "author": "chanseokoh", "createdAt": "2020-10-19T14:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1MDYyNw=="}], "type": "inlineReview", "revised_code": {"commit": "f66f02a06a1ecfd694d67e46936ac17da3bf66b2", "chunk": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\nindex 548766e7..e60872cd 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/CredentialsTest.java\n\n@@ -16,8 +16,11 @@\n \n package com.google.cloud.tools.jib.cli.cli2;\n \n+import static com.google.common.truth.Truth.assertThat;\n+\n import com.google.cloud.tools.jib.api.Credential;\n import com.google.cloud.tools.jib.plugins.common.DefaultCredentialRetrievers;\n+import java.io.FileNotFoundException;\n import junitparams.JUnitParamsRunner;\n import junitparams.Parameters;\n import org.apache.commons.lang3.ArrayUtils;\n"}}, {"oid": "f66f02a06a1ecfd694d67e46936ac17da3bf66b2", "url": "https://github.com/GoogleContainerTools/jib/commit/f66f02a06a1ecfd694d67e46936ac17da3bf66b2", "message": "format", "committedDate": "2020-10-17T01:13:53Z", "type": "commit"}]}