{"pr_number": 2568, "pr_title": "Adding the `from.platforms` Jib config parameter to jib-maven-plugin and to the jib-gradle-plugin", "pr_createdAt": "2020-07-06T22:11:08Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2568", "timeline": [{"oid": "528ae5a8380252f4e7320338d67eaa1f8cf06984", "url": "https://github.com/GoogleContainerTools/jib/commit/528ae5a8380252f4e7320338d67eaa1f8cf06984", "message": "Adding the plugins tag for Jib-Maven-Plugin", "committedDate": "2020-07-06T21:50:51Z", "type": "commit"}, {"oid": "6dcfa25e255b9a189db1b24a2fa18206d5c519d9", "url": "https://github.com/GoogleContainerTools/jib/commit/6dcfa25e255b9a189db1b24a2fa18206d5c519d9", "message": "Adding the plugins tag", "committedDate": "2020-07-06T21:54:46Z", "type": "commit"}, {"oid": "0643483c4a23741471a049a842c824c0c0b52781", "url": "https://github.com/GoogleContainerTools/jib/commit/0643483c4a23741471a049a842c824c0c0b52781", "message": "Solved Style Issues", "committedDate": "2020-07-06T23:02:32Z", "type": "commit"}, {"oid": "42c07474090218dcd4559cd1375850ef6e9c7544", "url": "https://github.com/GoogleContainerTools/jib/commit/42c07474090218dcd4559cd1375850ef6e9c7544", "message": "Added the getPlatforms test", "committedDate": "2020-07-07T16:24:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMDQ3OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451030478", "bodyText": "Can the platforms list not be empty?\nIf we were to initialize this to an empty list at line 154, would it break the default beahavior?", "author": "loosebazooka", "createdAt": "2020-07-07T17:32:13Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -135,6 +150,15 @@ public PermissionConfiguration() {}\n     @Nullable @Parameter private String credHelper;\n \n     @Parameter private FromAuthConfiguration auth = new FromAuthConfiguration();\n+\n+    @Parameter private List<PlatformsConfiguration> platforms;\n+\n+    /** Configuration for {@code platforms} parameter. */\n+    public FromConfiguration() {\n+      platforms = new ArrayList<>();", "originalCommit": "42c07474090218dcd4559cd1375850ef6e9c7544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDE4Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451050183", "bodyText": "The idea is to have a default platform amd64/linux in the platforms  list any time a user fails to specify a platform.", "author": "louismurerwa", "createdAt": "2020-07-07T18:06:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMDQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NTk4Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451145983", "bodyText": "Another way to create a default singleton (immutable) list:\nPlatformsConfiguration platform = new PlatformsConfiguration();\nplatform.os = ...\nplatform.version = ...\nplatforms = Collections.singletonList(platform);", "author": "chanseokoh", "createdAt": "2020-07-07T21:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMDQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzNjA0OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451636048", "bodyText": "Done", "author": "louismurerwa", "createdAt": "2020-07-08T15:32:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMDQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "d0f68fce793dc01b9136f3aa72c748fd632b72a7", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex d88c0e35..cf9e4d0e 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -153,7 +153,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n \n     @Parameter private List<PlatformsConfiguration> platforms;\n \n-    /** Configuration for {@code platforms} parameter. */\n+    /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n     public FromConfiguration() {\n       platforms = new ArrayList<>();\n       PlatformsConfiguration platform = new PlatformsConfiguration();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTgxMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451031812", "bodyText": "Add comments about default perhaps?", "author": "loosebazooka", "createdAt": "2020-07-07T17:34:42Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -127,6 +128,20 @@ public PermissionConfiguration() {}\n     }\n   }\n \n+  /** Configuration for {@code platform} parameter. */", "originalCommit": "42c07474090218dcd4559cd1375850ef6e9c7544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MTc5Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451041797", "bodyText": "What would an appropriate comment look like for this constructor?Would this work?\n`/** Initializing a default platform in case a user doesn't pass in one **/", "author": "louismurerwa", "createdAt": "2020-07-07T17:52:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTgxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0NTAwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451045000", "bodyText": "I think for IDE users, just seeing the pop up of:\n/** Configuration for {@code platform} parameter. Defaults to amd64/linux. **/\n\nis helpful, since they wont have to go into the code and see what the defaults are?\nBut commenting sometimes feels pretty subjective. This is just how I would do it.", "author": "loosebazooka", "createdAt": "2020-07-07T17:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTgxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MTE1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451051157", "bodyText": "I agree commenting is subjective sometimes.I think your suggested comment works well in this case.", "author": "louismurerwa", "createdAt": "2020-07-07T18:08:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "c51faefc381811a72e2b2e202622afdb8360bb0f", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex d88c0e35..64dd2dd6 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -128,7 +128,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n     }\n   }\n \n-  /** Configuration for {@code platform} parameter. */\n+  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n   public static class PlatformsConfiguration {\n     @Parameter private String os = \"linux\";\n     @Parameter private String architecture = \"amd64\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjAxNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451032015", "bodyText": "This comment seems out of place?", "author": "loosebazooka", "createdAt": "2020-07-07T17:35:03Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -135,6 +150,15 @@ public PermissionConfiguration() {}\n     @Nullable @Parameter private String credHelper;\n \n     @Parameter private FromAuthConfiguration auth = new FromAuthConfiguration();\n+\n+    @Parameter private List<PlatformsConfiguration> platforms;\n+\n+    /** Configuration for {@code platforms} parameter. */", "originalCommit": "42c07474090218dcd4559cd1375850ef6e9c7544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzOTc1NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451039755", "bodyText": "Yes !! I put it as place holder because the style guide required me to put Javadoc comment at this line.", "author": "louismurerwa", "createdAt": "2020-07-07T17:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MDkwOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451040908", "bodyText": "Right maybe change it to /** Constructor for defaults . **/ or something?", "author": "loosebazooka", "createdAt": "2020-07-07T17:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MTI3Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451051273", "bodyText": "Done", "author": "louismurerwa", "createdAt": "2020-07-07T18:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjAxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d0f68fce793dc01b9136f3aa72c748fd632b72a7", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex d88c0e35..cf9e4d0e 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -153,7 +153,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n \n     @Parameter private List<PlatformsConfiguration> platforms;\n \n-    /** Configuration for {@code platforms} parameter. */\n+    /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n     public FromConfiguration() {\n       platforms = new ArrayList<>();\n       PlatformsConfiguration platform = new PlatformsConfiguration();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDA1MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451050051", "bodyText": "getOs() and getArchitecture() may not need to be public? I see some getters in other nested -Configuration classes don't have public. We can start with as much limited visibility as possible.", "author": "chanseokoh", "createdAt": "2020-07-07T18:06:11Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -127,6 +128,20 @@ public PermissionConfiguration() {}\n     }\n   }\n \n+  /** Configuration for {@code platform} parameter. */\n+  public static class PlatformsConfiguration {\n+    @Parameter private String os = \"linux\";\n+    @Parameter private String architecture = \"amd64\";\n+\n+    public String getOs() {", "originalCommit": "42c07474090218dcd4559cd1375850ef6e9c7544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NDMxOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451054319", "bodyText": "We never use these methods locally so making them private throws  unused  method warnings .", "author": "louismurerwa", "createdAt": "2020-07-07T18:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDA1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2MDEyMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451060123", "bodyText": "Java has so-called \"package-private\" in addition to public, protected, and private. Just remove the public keyword, and the method will also be accessible from any class in the same Java package.", "author": "chanseokoh", "createdAt": "2020-07-07T18:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDA1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2OTEzMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451069132", "bodyText": "Nicee !! This is an interesting concept Java concept.\nDone.", "author": "louismurerwa", "createdAt": "2020-07-07T18:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDA1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c51faefc381811a72e2b2e202622afdb8360bb0f", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex d88c0e35..64dd2dd6 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -128,7 +128,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n     }\n   }\n \n-  /** Configuration for {@code platform} parameter. */\n+  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n   public static class PlatformsConfiguration {\n     @Parameter private String os = \"linux\";\n     @Parameter private String architecture = \"amd64\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDU4Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451050582", "bodyText": "At the current state, I don't think this method can ever return null. In that case, we should remove @Nullable.", "author": "chanseokoh", "createdAt": "2020-07-07T18:07:12Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -330,6 +354,16 @@ protected void checkJibVersion() throws MojoExecutionException {\n     MojoCommon.checkJibVersion(descriptor);\n   }\n \n+  /**\n+   * Gets the specified platforms.\n+   *\n+   * @return the specified platforms\n+   */\n+  @Nullable", "originalCommit": "42c07474090218dcd4559cd1375850ef6e9c7544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NTM5OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451055398", "bodyText": "Thats true .Done.", "author": "louismurerwa", "createdAt": "2020-07-07T18:16:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MDU4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d0f68fce793dc01b9136f3aa72c748fd632b72a7", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex d88c0e35..cf9e4d0e 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -359,7 +359,6 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n    *\n    * @return the specified platforms\n    */\n-  @Nullable\n   List<PlatformsConfiguration> getPlatforms() {\n     return from.platforms;\n   }\n"}}, {"oid": "d0f68fce793dc01b9136f3aa72c748fd632b72a7", "url": "https://github.com/GoogleContainerTools/jib/commit/d0f68fce793dc01b9136f3aa72c748fd632b72a7", "message": "Style Fixes", "committedDate": "2020-07-07T18:18:58Z", "type": "commit"}, {"oid": "c51faefc381811a72e2b2e202622afdb8360bb0f", "url": "https://github.com/GoogleContainerTools/jib/commit/c51faefc381811a72e2b2e202622afdb8360bb0f", "message": "Comment Fixes", "committedDate": "2020-07-07T18:22:17Z", "type": "commit"}, {"oid": "4fb526584a3be7113b73a04d993266d15e5b979b", "url": "https://github.com/GoogleContainerTools/jib/commit/4fb526584a3be7113b73a04d993266d15e5b979b", "message": "Making inner classes private", "committedDate": "2020-07-07T18:47:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NDcxMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451144713", "bodyText": "As discussed in the design doc, if we are going to raise an error when one of these are missing, I think we have to make these @Nullable and not assign default values.\nNeed to add @Nullable in getters too.", "author": "chanseokoh", "createdAt": "2020-07-07T21:09:25Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -127,6 +128,20 @@ public PermissionConfiguration() {}\n     }\n   }\n \n+  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n+  public static class PlatformsConfiguration {\n+    @Parameter private String os = \"linux\";\n+    @Parameter private String architecture = \"amd64\";", "originalCommit": "4fb526584a3be7113b73a04d993266d15e5b979b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU5MzQ2Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451593462", "bodyText": "Done", "author": "louismurerwa", "createdAt": "2020-07-08T14:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NDcxMw=="}], "type": "inlineReview", "revised_code": {"commit": "22fcbbfe026f944e225a10f58742adba490095d0", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex 397540fa..0e631fb6 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -128,15 +127,17 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n     }\n   }\n \n-  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n+  /** Configuration for {@code platform} parameter. * */\n   public static class PlatformsConfiguration {\n-    @Parameter private String os = \"linux\";\n-    @Parameter private String architecture = \"amd64\";\n+    @Nullable @Parameter private String os;\n+    @Nullable @Parameter private String architecture;\n \n+    @Nullable\n     String getOs() {\n       return this.os;\n     }\n \n+    @Nullable\n     String getArchitecture() {\n       return this.architecture;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NDk2Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451144962", "bodyText": "Therefore,\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n          \n          \n            \n              /** Configuration for {@code platform} parameter. */", "author": "chanseokoh", "createdAt": "2020-07-07T21:09:58Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -127,6 +128,20 @@ public PermissionConfiguration() {}\n     }\n   }\n \n+  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */", "originalCommit": "4fb526584a3be7113b73a04d993266d15e5b979b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU5NDMxOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451594319", "bodyText": "Makes sense !! Done", "author": "louismurerwa", "createdAt": "2020-07-08T14:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NDk2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwNTE4Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451605182", "bodyText": "You can mark a GitHub conversion \"resolved\" yourself if you believe the issue is cleanly resolved (but only after you pushed new changes).", "author": "chanseokoh", "createdAt": "2020-07-08T14:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NDk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "22fcbbfe026f944e225a10f58742adba490095d0", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex 397540fa..0e631fb6 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -128,15 +127,17 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n     }\n   }\n \n-  /** Configuration for {@code platform} parameter. Defaults to amd64/linux. * */\n+  /** Configuration for {@code platform} parameter. * */\n   public static class PlatformsConfiguration {\n-    @Parameter private String os = \"linux\";\n-    @Parameter private String architecture = \"amd64\";\n+    @Nullable @Parameter private String os;\n+    @Nullable @Parameter private String architecture;\n \n+    @Nullable\n     String getOs() {\n       return this.os;\n     }\n \n+    @Nullable\n     String getArchitecture() {\n       return this.architecture;\n     }\n"}}, {"oid": "0082ce97ad2facae7c23ad5d1a1a3d6df67f2191", "url": "https://github.com/GoogleContainerTools/jib/commit/0082ce97ad2facae7c23ad5d1a1a3d6df67f2191", "message": "New option to skip pushing images (manifests) if the image (manifest) already exists in the target registry (#2531)\n\n* Adds proposal to control the pushing of tags on existing images in target registry.\r\n\r\n* Updates proposal with more detail.\r\n\r\n* Work for tags-on-existing-images.md\r\n\r\n* Cleanup.\r\n\r\n* * Simplified implementation:\r\n  * Removed newly added class ManifestDescriptor, replaced it with already existing ManifestAndDigest.\r\n  * Removed the CheckImageStep and incorporated the check within the PushImageStep. Implementation now follows similar checks, eg, in PushBlopStep.\r\n* Adds unit and integration tests.\r\n* Fixes resulting from testing.\r\n\r\n* Code formatting changes.\r\n\r\n* Code cleanup, post-review.\r\n\r\n* Code cleanup, post-review.\r\n\r\n* * Adds a new CheckImageStep and integrates it in the StepsRunner.\r\n* Reverts PushImageStep to the state before the PR started, apart from the manifest existence check.\r\n\r\n* Refactor code\r\n\r\n* CHANGELOG\r\n\r\n* Update comments\r\n\r\n* Improve test\r\n\r\nCo-authored-by: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-07-08T15:03:04Z", "type": "commit"}, {"oid": "22fcbbfe026f944e225a10f58742adba490095d0", "url": "https://github.com/GoogleContainerTools/jib/commit/22fcbbfe026f944e225a10f58742adba490095d0", "message": "Making the os/platform nullable", "committedDate": "2020-07-08T15:03:04Z", "type": "commit"}, {"oid": "fcf6d625015a3ff6aa267366df60ffd9a41c53ee", "url": "https://github.com/GoogleContainerTools/jib/commit/fcf6d625015a3ff6aa267366df60ffd9a41c53ee", "message": "Merge remote-tracking branch 'origin/master' into MavenPluginPlatformsTag", "committedDate": "2020-07-08T15:54:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY1Mjc4NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r451652784", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** Constructor for defaults . * */\n          \n          \n            \n                /** Constructor for defaults. */", "author": "chanseokoh", "createdAt": "2020-07-08T15:56:48Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -135,6 +151,16 @@ public PermissionConfiguration() {}\n     @Nullable @Parameter private String credHelper;\n \n     @Parameter private FromAuthConfiguration auth = new FromAuthConfiguration();\n+\n+    @Parameter private List<PlatformsConfiguration> platforms;\n+\n+    /** Constructor for defaults . * */", "originalCommit": "fcf6d625015a3ff6aa267366df60ffd9a41c53ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09533eda36e44459779a7f45d50f9271cdd79af3", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex 0e631fb6..64d91723 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -154,7 +154,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n \n     @Parameter private List<PlatformsConfiguration> platforms;\n \n-    /** Constructor for defaults . * */\n+    /** Constructor for defaults. */\n     public FromConfiguration() {\n       PlatformsConfiguration platform = new PlatformsConfiguration();\n       platform.os = \"linux\";\n"}}, {"oid": "09533eda36e44459779a7f45d50f9271cdd79af3", "url": "https://github.com/GoogleContainerTools/jib/commit/09533eda36e44459779a7f45d50f9271cdd79af3", "message": "Style Fixes", "committedDate": "2020-07-08T16:20:27Z", "type": "commit"}, {"oid": "8d9a3b8516c24ad305652a9cc866d7b30ed13ccb", "url": "https://github.com/GoogleContainerTools/jib/commit/8d9a3b8516c24ad305652a9cc866d7b30ed13ccb", "message": "Adding getPlatforms() to RawConfiguration", "committedDate": "2020-07-08T18:03:12Z", "type": "commit"}, {"oid": "977f9b7874ebacf15f0d38eafff9a1b087af2b39", "url": "https://github.com/GoogleContainerTools/jib/commit/977f9b7874ebacf15f0d38eafff9a1b087af2b39", "message": "Adding the  Jib config parameter to jib-gradle-plugin", "committedDate": "2020-07-09T16:03:21Z", "type": "commit"}, {"oid": "33008c0fb78da5c51c033665f9405fa461e6e546", "url": "https://github.com/GoogleContainerTools/jib/commit/33008c0fb78da5c51c033665f9405fa461e6e546", "message": "Merge branch 'master' into MavenPluginPlatformsTag", "committedDate": "2020-07-09T16:05:04Z", "type": "commit"}, {"oid": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "url": "https://github.com/GoogleContainerTools/jib/commit/532076c692d4a27fb6f9919e5be1dd200b16bcb1", "message": "Style Fixes", "committedDate": "2020-07-09T16:19:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTU2OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452379568", "bodyText": "PlatformsConfiguration --> PlatformConfiguration (singular)", "author": "chanseokoh", "createdAt": "2020-07-09T17:31:47Z", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java", "diffHunk": "@@ -40,6 +40,13 @@\n     Optional<Object> getExtraConfiguration();\n   }\n \n+  static interface PlatformsConfiguration {", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMTMxOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452401319", "bodyText": "Done", "author": "louismurerwa", "createdAt": "2020-07-09T18:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java\nindex 381e4648..6310bd8e 100644\n--- a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java\n+++ b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java\n\n@@ -40,7 +40,7 @@ public interface RawConfiguration {\n     Optional<Object> getExtraConfiguration();\n   }\n \n-  static interface PlatformsConfiguration {\n+  static interface PlatformConfiguration {\n \n     Optional<String> getOs();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTkyMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452379922", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /** Allows to add {@link PlatformsParameters} objects to the list property of the same type. */\n          \n          \n            \n            /** Allows to add {@link PlatformParameters} objects to the list property of the same type. */", "author": "chanseokoh", "createdAt": "2020-07-09T17:32:24Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import javax.inject.Inject;\n+import org.gradle.api.Action;\n+import org.gradle.api.model.ObjectFactory;\n+import org.gradle.api.provider.ListProperty;\n+\n+/** Allows to add {@link PlatformsParameters} objects to the list property of the same type. */", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\nsimilarity index 70%\nrename from jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java\nrename to jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\nindex 212cb9ef..681118a0 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\n\n@@ -21,15 +21,15 @@ import org.gradle.api.Action;\n import org.gradle.api.model.ObjectFactory;\n import org.gradle.api.provider.ListProperty;\n \n-/** Allows to add {@link PlatformsParameters} objects to the list property of the same type. */\n-public class PlatformsParametersSpec {\n+/** Allows to add {@link PlatformParameters} objects to the list property of the same type. */\n+public class PlatformParametersSpec {\n \n   private final ObjectFactory objectFactory;\n-  private final ListProperty<PlatformsParameters> platforms;\n+  private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n-  public PlatformsParametersSpec(\n-      ObjectFactory objectFactory, ListProperty<PlatformsParameters> platforms) {\n+  public PlatformParametersSpec(\n+      ObjectFactory objectFactory, ListProperty<PlatformParameters> platforms) {\n     this.platforms = platforms;\n     this.objectFactory = objectFactory;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4MDA3MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452380071", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PlatformsParametersSpec {\n          \n          \n            \n            public class PlatformParametersSpec {", "author": "chanseokoh", "createdAt": "2020-07-09T17:32:39Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import javax.inject.Inject;\n+import org.gradle.api.Action;\n+import org.gradle.api.model.ObjectFactory;\n+import org.gradle.api.provider.ListProperty;\n+\n+/** Allows to add {@link PlatformsParameters} objects to the list property of the same type. */\n+public class PlatformsParametersSpec {", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\nsimilarity index 70%\nrename from jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java\nrename to jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\nindex 212cb9ef..681118a0 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParametersSpec.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParametersSpec.java\n\n@@ -21,15 +21,15 @@ import org.gradle.api.Action;\n import org.gradle.api.model.ObjectFactory;\n import org.gradle.api.provider.ListProperty;\n \n-/** Allows to add {@link PlatformsParameters} objects to the list property of the same type. */\n-public class PlatformsParametersSpec {\n+/** Allows to add {@link PlatformParameters} objects to the list property of the same type. */\n+public class PlatformParametersSpec {\n \n   private final ObjectFactory objectFactory;\n-  private final ListProperty<PlatformsParameters> platforms;\n+  private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n-  public PlatformsParametersSpec(\n-      ObjectFactory objectFactory, ListProperty<PlatformsParameters> platforms) {\n+  public PlatformParametersSpec(\n+      ObjectFactory objectFactory, ListProperty<PlatformParameters> platforms) {\n     this.platforms = platforms;\n     this.objectFactory = objectFactory;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4OTA4Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452389087", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PlatformsParameters implements PlatformsConfiguration {\n          \n          \n            \n            public class PlatformParameters implements PlatformConfiguration {", "author": "chanseokoh", "createdAt": "2020-07-09T17:49:26Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import javax.annotation.Nullable;\n+\n+/** Configuration of a platform. */\n+public class PlatformsParameters implements PlatformsConfiguration {", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nsimilarity index 73%\nrename from jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\nrename to jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nindex 2592ff1b..9fa1cf6a 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n\n@@ -16,21 +16,22 @@\n \n package com.google.cloud.tools.jib.gradle;\n \n-import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n+import java.util.Optional;\n import javax.annotation.Nullable;\n \n /** Configuration of a platform. */\n-public class PlatformsParameters implements PlatformsConfiguration {\n+public class PlatformParameters implements PlatformConfiguration {\n   @Nullable String os;\n   @Nullable String architecture;\n \n   @Override\n-  public java.util.Optional<String> getOs() {\n-    return java.util.Optional.ofNullable(this.os);\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(this.os);\n   }\n \n   @Override\n-  public java.util.Optional<String> getArchitecture() {\n-    return java.util.Optional.ofNullable(this.architecture);\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(this.architecture);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4OTkwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452389900", "bodyText": "There's no other class with the same name Optional used in this file, so you don't have to fully qualify the class. Changing the code like below will make your IDE automatically add import java.util.Optional at the top.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Override\n          \n          \n            \n              public java.util.Optional<String> getOs() {\n          \n          \n            \n                return java.util.Optional.ofNullable(this.os);\n          \n          \n            \n              }\n          \n          \n            \n              @Override\n          \n          \n            \n              public Optional<String> getOs() {\n          \n          \n            \n                return Optional.ofNullable(this.os);\n          \n          \n            \n              }", "author": "chanseokoh", "createdAt": "2020-07-09T17:50:57Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import javax.annotation.Nullable;\n+\n+/** Configuration of a platform. */\n+public class PlatformsParameters implements PlatformsConfiguration {\n+  @Nullable String os;\n+  @Nullable String architecture;\n+\n+  @Override\n+  public java.util.Optional<String> getOs() {\n+    return java.util.Optional.ofNullable(this.os);\n+  }", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nsimilarity index 73%\nrename from jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\nrename to jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nindex 2592ff1b..9fa1cf6a 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n\n@@ -16,21 +16,22 @@\n \n package com.google.cloud.tools.jib.gradle;\n \n-import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n+import java.util.Optional;\n import javax.annotation.Nullable;\n \n /** Configuration of a platform. */\n-public class PlatformsParameters implements PlatformsConfiguration {\n+public class PlatformParameters implements PlatformConfiguration {\n   @Nullable String os;\n   @Nullable String architecture;\n \n   @Override\n-  public java.util.Optional<String> getOs() {\n-    return java.util.Optional.ofNullable(this.os);\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(this.os);\n   }\n \n   @Override\n-  public java.util.Optional<String> getArchitecture() {\n-    return java.util.Optional.ofNullable(this.architecture);\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(this.architecture);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4OTk4MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452389981", "bodyText": "ditto", "author": "chanseokoh", "createdAt": "2020-07-09T17:51:04Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import javax.annotation.Nullable;\n+\n+/** Configuration of a platform. */\n+public class PlatformsParameters implements PlatformsConfiguration {\n+  @Nullable String os;\n+  @Nullable String architecture;\n+\n+  @Override\n+  public java.util.Optional<String> getOs() {\n+    return java.util.Optional.ofNullable(this.os);\n+  }\n+\n+  @Override\n+  public java.util.Optional<String> getArchitecture() {\n+    return java.util.Optional.ofNullable(this.architecture);", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nsimilarity index 73%\nrename from jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\nrename to jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nindex 2592ff1b..9fa1cf6a 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformsParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n\n@@ -16,21 +16,22 @@\n \n package com.google.cloud.tools.jib.gradle;\n \n-import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformsConfiguration;\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n+import java.util.Optional;\n import javax.annotation.Nullable;\n \n /** Configuration of a platform. */\n-public class PlatformsParameters implements PlatformsConfiguration {\n+public class PlatformParameters implements PlatformConfiguration {\n   @Nullable String os;\n   @Nullable String architecture;\n \n   @Override\n-  public java.util.Optional<String> getOs() {\n-    return java.util.Optional.ofNullable(this.os);\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(this.os);\n   }\n \n   @Override\n-  public java.util.Optional<String> getArchitecture() {\n-    return java.util.Optional.ofNullable(this.architecture);\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(this.architecture);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MDA5MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452390090", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *         os = 'value1'\n          \n          \n            \n             *         architecture = 'value2'\n          \n          \n            \n             *         os = 'linux'\n          \n          \n            \n             *         architecture = 'amd64'", "author": "chanseokoh", "createdAt": "2020-07-09T17:51:19Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java", "diffHunk": "@@ -37,6 +37,12 @@\n  *   from {\n  *     image = 'gcr.io/my-gcp-project/my-base-image'\n  *     credHelper = 'gcr'\n+ *     platforms {\n+ *       platform {\n+ *         os = 'value1'\n+ *         architecture = 'value2'", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java\nindex 5794d6c9..282b7adc 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java\n\n@@ -39,8 +39,8 @@ import org.gradle.api.tasks.Optional;\n  *     credHelper = 'gcr'\n  *     platforms {\n  *       platform {\n- *         os = 'value1'\n- *         architecture = 'value2'\n+ *         os = 'linux'\n+ *         architecture = 'amd64'\n  *       }\n  *     }\n  *   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MTI3OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452391279", "bodyText": "I guess this can be final. (final in Java means the reference platforms must be assigned when the class is instantiated and cannot be changed to something else later.)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private ListProperty<PlatformsParameters> platforms;\n          \n          \n            \n              private final ListProperty<PlatformsParameters> platforms;", "author": "chanseokoh", "createdAt": "2020-07-09T17:53:30Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -29,13 +30,30 @@\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-\n-  @Nullable private String image;\n   @Nullable private String credHelper;\n+  @Nullable private String image;\n+  private final PlatformsParametersSpec platformsParametersSpec;\n+  private ListProperty<PlatformsParameters> platforms;", "originalCommit": "532076c692d4a27fb6f9919e5be1dd200b16bcb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\nindex 4e32b01a..92f9584c 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n\n@@ -32,27 +32,27 @@ public class BaseImageParameters {\n   private final AuthParameters auth;\n   @Nullable private String credHelper;\n   @Nullable private String image;\n-  private final PlatformsParametersSpec platformsParametersSpec;\n-  private ListProperty<PlatformsParameters> platforms;\n+  private final PlatformParametersSpec platformsParametersSpec;\n+  private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n-    platforms = objectFactory.listProperty(PlatformsParameters.class).empty();\n+    platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformsParametersSpec =\n-        objectFactory.newInstance(PlatformsParametersSpec.class, objectFactory, platforms);\n+        objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n \n-    PlatformsParameters platform = new PlatformsParameters();\n+    PlatformParameters platform = new PlatformParameters();\n     platform.os = \"linux\";\n     platform.architecture = \"amd64\";\n     platforms.add(platform);\n   }\n \n-  ListProperty<PlatformsParameters> getPlatforms() {\n+  public ListProperty<PlatformParameters> getPlatforms() {\n     return platforms;\n   }\n \n-  public void platforms(Action<? super PlatformsParametersSpec> action) {\n+  public void platforms(Action<? super PlatformParametersSpec> action) {\n     action.execute(platformsParametersSpec);\n   }\n \n"}}, {"oid": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "url": "https://github.com/GoogleContainerTools/jib/commit/368f971ab8feb9f5dc1d533f47bf1ee89222303d", "message": "Making Platforms Parameter Singular", "committedDate": "2020-07-09T18:23:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyMTI1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452421257", "bodyText": "You need to add some annotations like this. For example, @Optional tells the Gradle system that from.platforms is an optional config that the user doesn't have to specify.", "author": "chanseokoh", "createdAt": "2020-07-09T18:49:10Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -29,13 +30,30 @@\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-\n-  @Nullable private String image;\n   @Nullable private String credHelper;\n+  @Nullable private String image;\n+  private final PlatformParametersSpec platformsParametersSpec;\n+  private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n+    platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n+    platformsParametersSpec =\n+        objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n+\n+    PlatformParameters platform = new PlatformParameters();\n+    platform.os = \"linux\";\n+    platform.architecture = \"amd64\";\n+    platforms.add(platform);\n+  }\n+", "originalCommit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f2bd668a16e62f15664cd5f1e3e6aceb2f8da0cd", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\nindex 92f9584c..de5ba600 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n\n@@ -48,6 +48,7 @@ public class BaseImageParameters {\n     platforms.add(platform);\n   }\n \n+  @Input\n   public ListProperty<PlatformParameters> getPlatforms() {\n     return platforms;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNDYwOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452424609", "bodyText": "Needs to add @Input as in ExtensionsParameters. This tells Gradle that platform.os is an input parameter.\nAnd I think you may need setters. Please check if setting platform.os = ... in build.gradle actually works.", "author": "chanseokoh", "createdAt": "2020-07-09T18:55:13Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/** Configuration of a platform. */\n+public class PlatformParameters implements PlatformConfiguration {\n+  @Nullable String os;\n+  @Nullable String architecture;\n+\n+  @Override", "originalCommit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f2bd668a16e62f15664cd5f1e3e6aceb2f8da0cd", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nindex 9fa1cf6a..9c7c4f2a 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n\n@@ -19,18 +19,23 @@ package com.google.cloud.tools.jib.gradle;\n import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n import java.util.Optional;\n import javax.annotation.Nullable;\n+import org.gradle.api.tasks.Input;\n \n /** Configuration of a platform. */\n public class PlatformParameters implements PlatformConfiguration {\n   @Nullable String os;\n   @Nullable String architecture;\n \n+  @Input\n   @Override\n+  @Nullable\n   public Optional<String> getOs() {\n     return Optional.ofNullable(this.os);\n   }\n \n+  @Input\n   @Override\n+  @Nullable\n   public Optional<String> getArchitecture() {\n     return Optional.ofNullable(this.architecture);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNDY4MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452424681", "bodyText": "ditto", "author": "chanseokoh", "createdAt": "2020-07-09T18:55:19Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle;\n+\n+import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/** Configuration of a platform. */\n+public class PlatformParameters implements PlatformConfiguration {\n+  @Nullable String os;\n+  @Nullable String architecture;\n+\n+  @Override\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(this.os);\n+  }\n+\n+  @Override", "originalCommit": "368f971ab8feb9f5dc1d533f47bf1ee89222303d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f2bd668a16e62f15664cd5f1e3e6aceb2f8da0cd", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\nindex 9fa1cf6a..9c7c4f2a 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/PlatformParameters.java\n\n@@ -19,18 +19,23 @@ package com.google.cloud.tools.jib.gradle;\n import com.google.cloud.tools.jib.plugins.common.RawConfiguration.PlatformConfiguration;\n import java.util.Optional;\n import javax.annotation.Nullable;\n+import org.gradle.api.tasks.Input;\n \n /** Configuration of a platform. */\n public class PlatformParameters implements PlatformConfiguration {\n   @Nullable String os;\n   @Nullable String architecture;\n \n+  @Input\n   @Override\n+  @Nullable\n   public Optional<String> getOs() {\n     return Optional.ofNullable(this.os);\n   }\n \n+  @Input\n   @Override\n+  @Nullable\n   public Optional<String> getArchitecture() {\n     return Optional.ofNullable(this.architecture);\n   }\n"}}, {"oid": "f2bd668a16e62f15664cd5f1e3e6aceb2f8da0cd", "url": "https://github.com/GoogleContainerTools/jib/commit/f2bd668a16e62f15664cd5f1e3e6aceb2f8da0cd", "message": "Style FIxes", "committedDate": "2020-07-09T19:19:18Z", "type": "commit"}, {"oid": "44b6a19518a8533236904259f170719a6b3ee3e6", "url": "https://github.com/GoogleContainerTools/jib/commit/44b6a19518a8533236904259f170719a6b3ee3e6", "message": "SMALL FIX", "committedDate": "2020-07-09T19:56:26Z", "type": "commit"}, {"oid": "e492da64d9b292216c9f17e6be5e5dd96f488481", "url": "https://github.com/GoogleContainerTools/jib/commit/e492da64d9b292216c9f17e6be5e5dd96f488481", "message": "Fix Gradle platforms config", "committedDate": "2020-07-09T21:19:08Z", "type": "commit"}, {"oid": "9287c28b170d8b3a8e2ab5d3d1bd06f6fd9dc5ac", "url": "https://github.com/GoogleContainerTools/jib/commit/9287c28b170d8b3a8e2ab5d3d1bd06f6fd9dc5ac", "message": "Rename PlatformConfiguration interface", "committedDate": "2020-07-09T21:40:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NTIyMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452885220", "bodyText": "platformsParametersSpec --> platformParametersSpec", "author": "chanseokoh", "createdAt": "2020-07-10T14:38:33Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -29,13 +30,32 @@\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-\n-  @Nullable private String image;\n   @Nullable private String credHelper;\n+  @Nullable private String image;\n+  private final PlatformParametersSpec platformsParametersSpec;", "originalCommit": "9287c28b170d8b3a8e2ab5d3d1bd06f6fd9dc5ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e98f9bb5109f3a568885a0abba51e6ed91e1a675", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\nindex c43fb90c..3b182b06 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n\n@@ -30,16 +30,16 @@ import org.gradle.api.tasks.Optional;\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-  @Nullable private String credHelper;\n   @Nullable private String image;\n-  private final PlatformParametersSpec platformsParametersSpec;\n+  @Nullable private String credHelper;\n+  private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n-    platformsParametersSpec =\n+    platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n \n     PlatformParameters platform = new PlatformParameters();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NTY0NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452885644", "bodyText": "nit: I see the order of existing fields has changed. Let's revert this.", "author": "chanseokoh", "createdAt": "2020-07-10T14:39:19Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -29,13 +30,32 @@\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-\n-  @Nullable private String image;\n   @Nullable private String credHelper;\n+  @Nullable private String image;", "originalCommit": "9287c28b170d8b3a8e2ab5d3d1bd06f6fd9dc5ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg5MTg3Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452891872", "bodyText": "Do you mean putting image on top of credHelper?", "author": "louismurerwa", "createdAt": "2020-07-10T14:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NTY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg5MjY2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452892669", "bodyText": "Yes. This is just an unnecessary change. No need to change unrelated code in this PR.", "author": "chanseokoh", "createdAt": "2020-07-10T14:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NTY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg5NTAxMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452895010", "bodyText": "Done !!", "author": "louismurerwa", "createdAt": "2020-07-10T14:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NTY0NA=="}], "type": "inlineReview", "revised_code": {"commit": "e98f9bb5109f3a568885a0abba51e6ed91e1a675", "chunk": "diff --git a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\nindex c43fb90c..3b182b06 100644\n--- a/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n+++ b/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java\n\n@@ -30,16 +30,16 @@ import org.gradle.api.tasks.Optional;\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n-  @Nullable private String credHelper;\n   @Nullable private String image;\n-  private final PlatformParametersSpec platformsParametersSpec;\n+  @Nullable private String credHelper;\n+  private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n-    platformsParametersSpec =\n+    platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n \n     PlatformParameters platform = new PlatformParameters();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4Njk1MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2568#discussion_r452886951", "bodyText": "PlatformsParameters --> PlatformParameters", "author": "chanseokoh", "createdAt": "2020-07-10T14:41:24Z", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java", "diffHunk": "@@ -127,6 +128,22 @@ public PermissionConfiguration() {}\n     }\n   }\n \n+  /** Configuration for {@code platform} parameter. */\n+  public static class PlatformsParameters implements PlatformConfiguration {", "originalCommit": "9287c28b170d8b3a8e2ab5d3d1bd06f6fd9dc5ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e98f9bb5109f3a568885a0abba51e6ed91e1a675", "chunk": "diff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\nindex 1c2d7ac4..53653d78 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/JibPluginConfiguration.java\n\n@@ -129,7 +129,7 @@ public abstract class JibPluginConfiguration extends AbstractMojo {\n   }\n \n   /** Configuration for {@code platform} parameter. */\n-  public static class PlatformsParameters implements PlatformConfiguration {\n+  public static class PlatformParameters implements PlatformConfiguration {\n     @Nullable @Parameter private String os;\n     @Nullable @Parameter private String architecture;\n \n"}}, {"oid": "e98f9bb5109f3a568885a0abba51e6ed91e1a675", "url": "https://github.com/GoogleContainerTools/jib/commit/e98f9bb5109f3a568885a0abba51e6ed91e1a675", "message": "Small style changes", "committedDate": "2020-07-10T14:53:23Z", "type": "commit"}]}