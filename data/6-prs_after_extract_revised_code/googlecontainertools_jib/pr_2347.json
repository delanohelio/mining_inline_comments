{"pr_number": 2347, "pr_title": "Convert LayerObject to interface", "pr_createdAt": "2020-03-19T20:51:16Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2347", "timeline": [{"oid": "c25fedd3aaaf1ce7ac0638e07f3cef09cc57eb68", "url": "https://github.com/GoogleContainerTools/jib/commit/c25fedd3aaaf1ce7ac0638e07f3cef09cc57eb68", "message": "Relocation getName() to super class", "committedDate": "2020-03-19T20:50:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxNjg1OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2347#discussion_r395316859", "bodyText": "I thought this would be an interface? Is that not true?", "author": "loosebazooka", "createdAt": "2020-03-19T21:00:29Z", "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/LayerObject.java", "diffHunk": "@@ -27,12 +27,18 @@\n   }", "originalCommit": "c25fedd3aaaf1ce7ac0638e07f3cef09cc57eb68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyNjgxNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2347#discussion_r395326817", "bodyText": "I guess it's harder for deserialization huh? I still feel like it should be an interface", "author": "loosebazooka", "createdAt": "2020-03-19T21:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxNjg1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyNzU0OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2347#discussion_r395327548", "bodyText": "Good point. I thought this needed to be a class for JSON polymorphic type handling. But I found an example using an interface, so I think interface works.", "author": "chanseokoh", "createdAt": "2020-03-19T21:23:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxNjg1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyODQyMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2347#discussion_r395328423", "bodyText": "I guess it's harder for deserialization huh?\n\nDoesn't seem so. A lot of examples use class.", "author": "chanseokoh", "createdAt": "2020-03-19T21:24:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxNjg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6a4c68de27a87bf3e6a97696651b312b78ff37a8", "chunk": "diff --git a/jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/LayerObject.java b/jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/LayerObject.java\nindex 0836d13b..8f34294a 100644\n--- a/jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/LayerObject.java\n+++ b/jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/LayerObject.java\n\n@@ -16,29 +16,14 @@\n \n package com.google.cloud.tools.jib.api.buildplan;\n \n-import javax.annotation.concurrent.Immutable;\n-\n /** Serves as a base class for the \"layers\" property in the build plan specification. */\n-@Immutable\n-public class LayerObject {\n+public interface LayerObject {\n \n   public static enum Type {\n     FILE_ENTRIES,\n   }\n \n-  private final Type type;\n-  private final String name;\n-\n-  public LayerObject(Type type, String name) {\n-    this.type = type;\n-    this.name = name;\n-  }\n-\n-  public Type getType() {\n-    return type;\n-  }\n+  public Type getType();\n \n-  public String getName() {\n-    return name;\n-  }\n+  public String getName();\n }\n"}}, {"oid": "6a4c68de27a87bf3e6a97696651b312b78ff37a8", "url": "https://github.com/GoogleContainerTools/jib/commit/6a4c68de27a87bf3e6a97696651b312b78ff37a8", "message": "LayerObject as interface", "committedDate": "2020-03-19T21:20:41Z", "type": "commit"}]}