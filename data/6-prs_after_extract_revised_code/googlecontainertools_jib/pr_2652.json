{"pr_number": 2652, "pr_title": "build multiple base Images concurrently", "pr_createdAt": "2020-07-31T19:54:48Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2652", "timeline": [{"oid": "5cbb12371dd8cebc637be9aacb2c34433bae7345", "url": "https://github.com/GoogleContainerTools/jib/commit/5cbb12371dd8cebc637be9aacb2c34433bae7345", "message": "Adding Multi image building", "committedDate": "2020-07-31T19:58:34Z", "type": "commit"}, {"oid": "5cbb12371dd8cebc637be9aacb2c34433bae7345", "url": "https://github.com/GoogleContainerTools/jib/commit/5cbb12371dd8cebc637be9aacb2c34433bae7345", "message": "Adding Multi image building", "committedDate": "2020-07-31T19:58:34Z", "type": "forcePushed"}, {"oid": "abffbf0a5bc7d4f1c4da6f7a18338820586f871b", "url": "https://github.com/GoogleContainerTools/jib/commit/abffbf0a5bc7d4f1c4da6f7a18338820586f871b", "message": "Style Fixes", "committedDate": "2020-07-31T20:05:40Z", "type": "commit"}, {"oid": "35d6663a81b840e3019f40a8c279dcce611a124f", "url": "https://github.com/GoogleContainerTools/jib/commit/35d6663a81b840e3019f40a8c279dcce611a124f", "message": "Fixing Styles", "committedDate": "2020-07-31T20:10:00Z", "type": "commit"}, {"oid": "be2b0377ddc386215fdecf9f075a22ec153e52ac", "url": "https://github.com/GoogleContainerTools/jib/commit/be2b0377ddc386215fdecf9f075a22ec153e52ac", "message": "Fixing structure names", "committedDate": "2020-07-31T20:11:57Z", "type": "commit"}, {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "url": "https://github.com/GoogleContainerTools/jib/commit/3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "message": "Style Fixes", "committedDate": "2020-07-31T20:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463873141", "bodyText": "Just realized this. I actually think this code (and the code in obtainBaseImageLayers that we updated) will break once we have multiple Images due to childProgressDispatcherFactory (the progress reporting thing), which I haven't explained. Will need to fix it when the time comes. Will be easy to fix, so not a concern at all.", "author": "chanseokoh", "createdAt": "2020-07-31T22:31:55Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1NjkwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r464456901", "bodyText": "Sounds Good .I will be on the look out for the breaks caused by childProgressDispatcherFactory", "author": "louismurerwa", "createdAt": "2020-08-03T14:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "726c1b760a899f81bca1dbd71669565e3c668832", "chunk": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\nindex 9243a0d0..491748d8 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n\n@@ -355,24 +355,23 @@ public class StepsRunner {\n                 buildContext, childProgressDispatcherFactory));\n   }\n \n-  private void buildImage() {\n+  private void buildImages() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n     results.builtImages =\n         executorService.submit(\n             () -> {\n               List<Future<Image>> builtImages = new ArrayList<>();\n-              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+              for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n+                  results.baseImagesAndLayers.get().entrySet()) {\n                 Future<Image> builtImage =\n                     executorService.submit(\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n                                     childProgressDispatcherFactory,\n-                                    image,\n-                                    realizeFutures(\n-                                        Verify.verifyNotNull(\n-                                            results.baseImagesAndLayers.get().get(image))),\n+                                    entry.getKey(),\n+                                    realizeFutures(Verify.verifyNotNull(entry.getValue())),\n                                     realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n                                 .call());\n                 builtImages.add(builtImage);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzI3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877274", "bodyText": "You can use .entrySet() to iterator over a Map. An entry is a (key, value) pair, so no need to call Map.get(key) to get the value.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          for (Image image : results.baseImagesAndLayers.get().keySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                image,\n          \n          \n            \n                                                realizeFutures(\n          \n          \n            \n                                                    Verify.verifyNotNull(\n          \n          \n            \n                                                        results.baseImagesAndLayers.get().get(image))),\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }\n          \n          \n            \n                          for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n          \n          \n            \n                              results.baseImagesAndLayers.get().entrySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                entry.getKey(), // base image\n          \n          \n            \n                                                realizeFutures(entry.getValue()), // base image layers\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }", "author": "chanseokoh", "createdAt": "2020-07-31T22:49:15Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    image,\n+                                    realizeFutures(\n+                                        Verify.verifyNotNull(\n+                                            results.baseImagesAndLayers.get().get(image))),\n+                                    realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n+                                .call());\n+                builtImages.add(builtImage);\n+              }", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "726c1b760a899f81bca1dbd71669565e3c668832", "chunk": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\nindex 9243a0d0..491748d8 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n\n@@ -355,24 +355,23 @@ public class StepsRunner {\n                 buildContext, childProgressDispatcherFactory));\n   }\n \n-  private void buildImage() {\n+  private void buildImages() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n     results.builtImages =\n         executorService.submit(\n             () -> {\n               List<Future<Image>> builtImages = new ArrayList<>();\n-              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+              for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n+                  results.baseImagesAndLayers.get().entrySet()) {\n                 Future<Image> builtImage =\n                     executorService.submit(\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n                                     childProgressDispatcherFactory,\n-                                    image,\n-                                    realizeFutures(\n-                                        Verify.verifyNotNull(\n-                                            results.baseImagesAndLayers.get().get(image))),\n+                                    entry.getKey(),\n+                                    realizeFutures(Verify.verifyNotNull(entry.getValue())),\n                                     realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n                                 .call());\n                 builtImages.add(builtImage);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzYzMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877631", "bodyText": "Rename it to buildImages()? Also, rename other methods too (pullBaseImage() --> pullBaseImages())?", "author": "chanseokoh", "createdAt": "2020-07-31T22:50:43Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "726c1b760a899f81bca1dbd71669565e3c668832", "chunk": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\nindex 9243a0d0..491748d8 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java\n\n@@ -355,24 +355,23 @@ public class StepsRunner {\n                 buildContext, childProgressDispatcherFactory));\n   }\n \n-  private void buildImage() {\n+  private void buildImages() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n     results.builtImages =\n         executorService.submit(\n             () -> {\n               List<Future<Image>> builtImages = new ArrayList<>();\n-              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+              for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n+                  results.baseImagesAndLayers.get().entrySet()) {\n                 Future<Image> builtImage =\n                     executorService.submit(\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n                                     childProgressDispatcherFactory,\n-                                    image,\n-                                    realizeFutures(\n-                                        Verify.verifyNotNull(\n-                                            results.baseImagesAndLayers.get().get(image))),\n+                                    entry.getKey(),\n+                                    realizeFutures(Verify.verifyNotNull(entry.getValue())),\n                                     realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n                                 .call());\n                 builtImages.add(builtImage);\n"}}, {"oid": "726c1b760a899f81bca1dbd71669565e3c668832", "url": "https://github.com/GoogleContainerTools/jib/commit/726c1b760a899f81bca1dbd71669565e3c668832", "message": "Fix", "committedDate": "2020-08-03T14:53:38Z", "type": "commit"}, {"oid": "9b8ccb84009215c973d713b0ade77c3ec33006fb", "url": "https://github.com/GoogleContainerTools/jib/commit/9b8ccb84009215c973d713b0ade77c3ec33006fb", "message": "empty commit to trigger builds", "committedDate": "2020-08-03T17:33:22Z", "type": "commit"}]}