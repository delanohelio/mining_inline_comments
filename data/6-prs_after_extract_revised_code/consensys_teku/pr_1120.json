{"pr_number": 1120, "pr_title": "Group deposits together by block", "pr_createdAt": "2020-01-29T00:21:34Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1120", "timeline": [{"oid": "8edb1b13e52ac9749ed4ad803d85dcb90f738763", "url": "https://github.com/ConsenSys/teku/commit/8edb1b13e52ac9749ed4ad803d85dcb90f738763", "message": "Retrieve block timestamp in PoW service rather than in StateProcessor.", "committedDate": "2020-01-27T22:55:24Z", "type": "commit"}, {"oid": "4fb813d6691e452424084d3f752c4e15c6e2fdce", "url": "https://github.com/ConsenSys/teku/commit/4fb813d6691e452424084d3f752c4e15c6e2fdce", "message": "Cache the block data.", "committedDate": "2020-01-27T23:34:07Z", "type": "commit"}, {"oid": "380ce0f7acb04fc8d5972421a34a0d3307564f90", "url": "https://github.com/ConsenSys/teku/commit/380ce0f7acb04fc8d5972421a34a0d3307564f90", "message": "Remove debug statement", "committedDate": "2020-01-27T23:50:17Z", "type": "commit"}, {"oid": "9688c09de31d6983229bd47314e6591ad14e709e", "url": "https://github.com/ConsenSys/teku/commit/9688c09de31d6983229bd47314e6591ad14e709e", "message": "Better method name.", "committedDate": "2020-01-28T00:53:32Z", "type": "commit"}, {"oid": "af8d38591c6e656667253a3b01018a425d95c658", "url": "https://github.com/ConsenSys/teku/commit/af8d38591c6e656667253a3b01018a425d95c658", "message": "Use a field for web3j object.", "committedDate": "2020-01-28T00:54:06Z", "type": "commit"}, {"oid": "7505be3bbe5b40651d3dd7b4ed84b589a3ec97bf", "url": "https://github.com/ConsenSys/teku/commit/7505be3bbe5b40651d3dd7b4ed84b589a3ec97bf", "message": "Use web3j field.", "committedDate": "2020-01-28T02:28:54Z", "type": "commit"}, {"oid": "e72be0de37981257423ee7e76575cf50464bad80", "url": "https://github.com/ConsenSys/teku/commit/e72be0de37981257423ee7e76575cf50464bad80", "message": "Batch deposits by block.", "committedDate": "2020-01-28T03:58:28Z", "type": "commit"}, {"oid": "3b06d5e12cbdabf035b6aca59416ec3277d49027", "url": "https://github.com/ConsenSys/teku/commit/3b06d5e12cbdabf035b6aca59416ec3277d49027", "message": "Force publish a block if no events are received for 5 seconds.", "committedDate": "2020-01-28T04:48:58Z", "type": "commit"}, {"oid": "68d1c53007a07f1fcce3dc9cf0afc9e8a8e7bcca", "url": "https://github.com/ConsenSys/teku/commit/68d1c53007a07f1fcce3dc9cf0afc9e8a8e7bcca", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into batch-deposits-by-block\n\n# Conflicts:\n#\tethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/operations/DepositWithIndex.java\n#\tethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/util/DepositUtil.java\n#\tethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/StateProcessor.java\n#\tpow/src/main/java/tech/pegasys/artemis/pow/DepositContractListener.java\n#\tpow/src/main/java/tech/pegasys/artemis/pow/event/Deposit.java", "committedDate": "2020-01-28T21:59:09Z", "type": "commit"}, {"oid": "059c86d6559bf80f352182b0db0072f3e41b2208", "url": "https://github.com/ConsenSys/teku/commit/059c86d6559bf80f352182b0db0072f3e41b2208", "message": "Extract separate class.", "committedDate": "2020-01-28T22:20:18Z", "type": "commit"}, {"oid": "2d9da04ce8471b55356acbc59f63b98db14d25e1", "url": "https://github.com/ConsenSys/teku/commit/2d9da04ce8471b55356acbc59f63b98db14d25e1", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into batch-deposits-by-block", "committedDate": "2020-01-28T22:39:12Z", "type": "commit"}, {"oid": "e772933253c8cbc049f3822cef2cdb67d065c834", "url": "https://github.com/ConsenSys/teku/commit/e772933253c8cbc049f3822cef2cdb67d065c834", "message": "Use a single TimeProvider instance across the system.", "committedDate": "2020-01-28T22:57:39Z", "type": "commit"}, {"oid": "fc934c8788fbfad19758f235c8c349b957b6f5a5", "url": "https://github.com/ConsenSys/teku/commit/fc934c8788fbfad19758f235c8c349b957b6f5a5", "message": "Simplify SystemTimeProvider.", "committedDate": "2020-01-28T23:01:40Z", "type": "commit"}, {"oid": "32e8aa101b716d83588b2ace0f8047c9c506b145", "url": "https://github.com/ConsenSys/teku/commit/32e8aa101b716d83588b2ace0f8047c9c506b145", "message": "Merge branch 'time-provider' into batch-deposits-by-block", "committedDate": "2020-01-28T23:09:31Z", "type": "commit"}, {"oid": "72960d1da9a495a2ce12535c7743eda2b184c50e", "url": "https://github.com/ConsenSys/teku/commit/72960d1da9a495a2ce12535c7743eda2b184c50e", "message": "Fix stub time provider.", "committedDate": "2020-01-28T23:15:48Z", "type": "commit"}, {"oid": "14718ebf89730c1d20f08afca314e6cf8db26786", "url": "https://github.com/ConsenSys/teku/commit/14718ebf89730c1d20f08afca314e6cf8db26786", "message": "Merge branch 'time-provider' into batch-deposits-by-block", "committedDate": "2020-01-28T23:29:25Z", "type": "commit"}, {"oid": "a2fcab5327261529678a5029834f57d2e39a83f3", "url": "https://github.com/ConsenSys/teku/commit/a2fcab5327261529678a5029834f57d2e39a83f3", "message": "Add tests for publishing blocks after inactivity.", "committedDate": "2020-01-28T23:51:03Z", "type": "commit"}, {"oid": "03eca91e81ebfe782189454d2c5f2b4e8ef63736", "url": "https://github.com/ConsenSys/teku/commit/03eca91e81ebfe782189454d2c5f2b4e8ef63736", "message": "Only reset currentBlock when needed.", "committedDate": "2020-01-29T00:20:06Z", "type": "commit"}, {"oid": "f815a9519ac2a9d71f41538a6e17162cf2c2d73d", "url": "https://github.com/ConsenSys/teku/commit/f815a9519ac2a9d71f41538a6e17162cf2c2d73d", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into batch-deposits-by-block\n\n# Conflicts:\n#\tservices/powchain/src/main/java/tech/pegasys/artemis/services/powchain/PowchainService.java\n#\tutil/src/test-support/java/tech/pegasys/artemis/util/time/StubTimeProvider.java", "committedDate": "2020-01-29T04:16:16Z", "type": "commit"}, {"oid": "6a0d40dc372683c4bc87b44dbd78acd477ae5da7", "url": "https://github.com/ConsenSys/teku/commit/6a0d40dc372683c4bc87b44dbd78acd477ae5da7", "message": "Test push", "committedDate": "2020-01-29T04:22:10Z", "type": "commit"}, {"oid": "426967ebecd8f43d324a1f0015ecf721a02de5ee", "url": "https://github.com/ConsenSys/teku/commit/426967ebecd8f43d324a1f0015ecf721a02de5ee", "message": "Another test push.", "committedDate": "2020-01-29T04:22:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3NzU3Mw==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372577573", "bodyText": "I think this name is a bit confusing when paired with the very similar publishPendingBlock.  Not sure what would be better though.  Maybe:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void publishCompletedBlocks(final EthBlock.Block newBlock) {\n          \n          \n            \n              private void handleNewBlock(final EthBlock.Block newBlock) {", "author": "mbaxter", "createdAt": "2020-01-29T19:12:54Z", "path": "pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.pow;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.web3j.protocol.core.methods.response.EthBlock;\n+import org.web3j.protocol.core.methods.response.EthBlock.Block;\n+import tech.pegasys.artemis.pow.event.Deposit;\n+import tech.pegasys.artemis.pow.event.DepositsFromBlockEvent;\n+\n+class BatchByBlockDepositHandler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  private final Consumer<DepositsFromBlockEvent> eventConsumer;\n+  private Optional<Block> currentBlock = Optional.empty();\n+  private List<Deposit> deposits = new ArrayList<>();\n+\n+  BatchByBlockDepositHandler(final Consumer<DepositsFromBlockEvent> eventConsumer) {\n+    this.eventConsumer = eventConsumer;\n+  }\n+\n+  public synchronized void onDepositEvent(final EthBlock.Block block, final Deposit event) {\n+    LOG.trace(\n+        \"Received deposit from block {} with index {}\",\n+        block.getNumber(),\n+        event.getMerkle_tree_index());\n+    publishCompletedBlocks(block);\n+    deposits.add(event);\n+  }\n+\n+  public synchronized void publishPendingBlock() {\n+    currentBlock.ifPresent(\n+        block -> {\n+          publishPendingBlock(block);\n+          currentBlock = Optional.empty();\n+        });\n+  }\n+\n+  private void publishCompletedBlocks(final EthBlock.Block newBlock) {", "originalCommit": "426967ebecd8f43d324a1f0015ecf721a02de5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYxMTA4OQ==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372611089", "bodyText": "Good point, I've renamed it to checkForCompletedBlocks since most of what it does is actually checking and tracking the current block.", "author": "ajsutton", "createdAt": "2020-01-29T20:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3NzU3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "027bae6a7e74984129788a9c5f203dd8255b2e69", "chunk": "diff --git a/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java b/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\nindex 8b1083ae14..aa08de8081 100644\n--- a/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\n+++ b/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\n\n@@ -41,29 +41,25 @@ class BatchByBlockDepositHandler {\n         \"Received deposit from block {} with index {}\",\n         block.getNumber(),\n         event.getMerkle_tree_index());\n-    publishCompletedBlocks(block);\n+    checkForCompletedBlocks(block);\n     deposits.add(event);\n   }\n \n   public synchronized void publishPendingBlock() {\n-    currentBlock.ifPresent(\n-        block -> {\n-          publishPendingBlock(block);\n-          currentBlock = Optional.empty();\n-        });\n+    currentBlock.ifPresent(this::publishPendingBlock);\n   }\n \n-  private void publishCompletedBlocks(final EthBlock.Block newBlock) {\n+  private void checkForCompletedBlocks(final EthBlock.Block blockOfNextDeposit) {\n     if (currentBlock.isEmpty()) {\n-      currentBlock = Optional.of(newBlock);\n+      currentBlock = Optional.of(blockOfNextDeposit);\n       return;\n     }\n     final Block block = currentBlock.get();\n-    if (block.getHash().equals(newBlock.getHash())) {\n+    if (block.getHash().equals(blockOfNextDeposit.getHash())) {\n       return;\n     }\n     publishPendingBlock(block);\n-    currentBlock = Optional.of(newBlock);\n+    currentBlock = Optional.of(blockOfNextDeposit);\n   }\n \n   private void publishPendingBlock(final Block block) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3OTE4Mg==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372579182", "bodyText": "(optional) Might be safer to move this line into publishPendingBlock", "author": "mbaxter", "createdAt": "2020-01-29T19:16:15Z", "path": "pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.pow;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.web3j.protocol.core.methods.response.EthBlock;\n+import org.web3j.protocol.core.methods.response.EthBlock.Block;\n+import tech.pegasys.artemis.pow.event.Deposit;\n+import tech.pegasys.artemis.pow.event.DepositsFromBlockEvent;\n+\n+class BatchByBlockDepositHandler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  private final Consumer<DepositsFromBlockEvent> eventConsumer;\n+  private Optional<Block> currentBlock = Optional.empty();\n+  private List<Deposit> deposits = new ArrayList<>();\n+\n+  BatchByBlockDepositHandler(final Consumer<DepositsFromBlockEvent> eventConsumer) {\n+    this.eventConsumer = eventConsumer;\n+  }\n+\n+  public synchronized void onDepositEvent(final EthBlock.Block block, final Deposit event) {\n+    LOG.trace(\n+        \"Received deposit from block {} with index {}\",\n+        block.getNumber(),\n+        event.getMerkle_tree_index());\n+    publishCompletedBlocks(block);\n+    deposits.add(event);\n+  }\n+\n+  public synchronized void publishPendingBlock() {\n+    currentBlock.ifPresent(\n+        block -> {\n+          publishPendingBlock(block);\n+          currentBlock = Optional.empty();", "originalCommit": "426967ebecd8f43d324a1f0015ecf721a02de5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYxMTEyMQ==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372611121", "bodyText": "Done.", "author": "ajsutton", "createdAt": "2020-01-29T20:23:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3OTE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "027bae6a7e74984129788a9c5f203dd8255b2e69", "chunk": "diff --git a/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java b/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\nindex 8b1083ae14..aa08de8081 100644\n--- a/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\n+++ b/pow/src/main/java/tech/pegasys/artemis/pow/BatchByBlockDepositHandler.java\n\n@@ -41,29 +41,25 @@ class BatchByBlockDepositHandler {\n         \"Received deposit from block {} with index {}\",\n         block.getNumber(),\n         event.getMerkle_tree_index());\n-    publishCompletedBlocks(block);\n+    checkForCompletedBlocks(block);\n     deposits.add(event);\n   }\n \n   public synchronized void publishPendingBlock() {\n-    currentBlock.ifPresent(\n-        block -> {\n-          publishPendingBlock(block);\n-          currentBlock = Optional.empty();\n-        });\n+    currentBlock.ifPresent(this::publishPendingBlock);\n   }\n \n-  private void publishCompletedBlocks(final EthBlock.Block newBlock) {\n+  private void checkForCompletedBlocks(final EthBlock.Block blockOfNextDeposit) {\n     if (currentBlock.isEmpty()) {\n-      currentBlock = Optional.of(newBlock);\n+      currentBlock = Optional.of(blockOfNextDeposit);\n       return;\n     }\n     final Block block = currentBlock.get();\n-    if (block.getHash().equals(newBlock.getHash())) {\n+    if (block.getHash().equals(blockOfNextDeposit.getHash())) {\n       return;\n     }\n     publishPendingBlock(block);\n-    currentBlock = Optional.of(newBlock);\n+    currentBlock = Optional.of(blockOfNextDeposit);\n   }\n \n   private void publishPendingBlock(final Block block) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU4NjQ1OA==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372586458", "bodyText": "Doesn't look like we're handling reorgs where events might be removed, but I guess that's covered in the follow-up ticket we have to respect the follow distance?", "author": "mbaxter", "createdAt": "2020-01-29T19:30:45Z", "path": "pow/src/main/java/tech/pegasys/artemis/pow/DepositContractListener.java", "diffHunk": "@@ -61,13 +65,11 @@ public DepositContractListener(Web3j web3j, EventBus eventBus, DepositContract c\n     subscriptionNewDeposit =\n         contract\n             .depositEventEventFlowable(depositEventFilter)\n-            .flatMap(this::convertToDeposit)\n-            .subscribe(eventBus::post);\n-  }\n-\n-  private Flowable<Deposit> convertToDeposit(final DepositEventEventResponse event) {\n-    return getBlockByHash(event.log.getBlockHash())\n-        .map(block -> new Deposit(event, UnsignedLong.valueOf(block.getTimestamp())));\n+            .flatMap(\n+                event ->\n+                    getBlockByHash(event.log.getBlockHash())\n+                        .map(block -> Pair.of(block, new Deposit(event))))", "originalCommit": "426967ebecd8f43d324a1f0015ecf721a02de5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5MTUxMA==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372591510", "bodyText": "If we're ultimately going to have to buffer eth1 event sets based on the follow distance, is PublishOnInactivityDepositHandler going to eventually go away?", "author": "mbaxter", "createdAt": "2020-01-29T19:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU4NjQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYxMDczNg==", "url": "https://github.com/ConsenSys/teku/pull/1120#discussion_r372610736", "bodyText": "Yeah, deliberately ignoring forks for now - I'm not sure how it will all play out yet but dealing with forks and the follow distance feel like they need to be sorted out together.\nWe will still need PublishOnInactivityDepositHandler though because it's possible, and maybe even likely, that we'd go at least 1024 blocks without a new deposit.", "author": "ajsutton", "createdAt": "2020-01-29T20:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU4NjQ1OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "027bae6a7e74984129788a9c5f203dd8255b2e69", "url": "https://github.com/ConsenSys/teku/commit/027bae6a7e74984129788a9c5f203dd8255b2e69", "message": "Review feedback.", "committedDate": "2020-01-29T20:18:52Z", "type": "commit"}, {"oid": "027bae6a7e74984129788a9c5f203dd8255b2e69", "url": "https://github.com/ConsenSys/teku/commit/027bae6a7e74984129788a9c5f203dd8255b2e69", "message": "Review feedback.", "committedDate": "2020-01-29T20:18:52Z", "type": "forcePushed"}]}