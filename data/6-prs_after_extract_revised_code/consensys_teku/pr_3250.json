{"pr_number": 3250, "pr_title": "TLS configuration for external signer", "pr_createdAt": "2020-11-18T03:22:56Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3250", "timeline": [{"oid": "4be29c569f4db1fc22aa641db7575a9184648858", "url": "https://github.com/ConsenSys/teku/commit/4be29c569f4db1fc22aa641db7575a9184648858", "message": "TLS configuration for external signer\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-18T03:20:12Z", "type": "commit"}, {"oid": "7af3e0d70367506a85dd0656d7a3bb464eebc09d", "url": "https://github.com/ConsenSys/teku/commit/7af3e0d70367506a85dd0656d7a3bb464eebc09d", "message": "Use SecureRandomProvider\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-18T03:29:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxODc3MQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526518771", "bodyText": "to me, this looks to say that they must both be null, or it's invalid configuration?", "author": "rolfyone", "createdAt": "2020-11-19T00:47:40Z", "path": "validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java", "diffHunk": "@@ -243,5 +300,38 @@ private void validateKeyStoreFilesAndPasswordFilesConfig() {\n         throw new InvalidConfigurationException(errorMessage);\n       }\n     }\n+\n+    private void validateExternalSignerUrlAndPublicKeys() {\n+      if (validatorExternalSignerPublicKeys == null\n+          || validatorExternalSignerPublicKeys.isEmpty()) {\n+        return;\n+      }\n+\n+      if (validatorExternalSignerUrl == null) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-url' and '--validators-external-signer-public-keys' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n+      }\n+    }\n+\n+    private void validateExternalSignerKeystoreAndPasswordFileConfig() {\n+      if (validatorExternalSignerKeystore == null\n+          && validatorExternalSignerKeystorePasswordFile == null) {\n+        return;\n+      }\n+      final String errorMessage =\n+          \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n+      throw new InvalidConfigurationException(errorMessage);\n+    }\n+\n+    private void validateExternalSignerTruststoreAndPasswordFileConfig() {\n+      if (validatorExternalSignerTruststore == null\n+          && validatorExternalSignerTruststorePasswordFile == null) {\n+        return;\n+      }\n+      final String errorMessage =\n+          \"Invalid configuration. '--validators-external-signer-truststore' and '--validators-external-signer-truststore-password-file' must be specified together\";\n+      throw new InvalidConfigurationException(errorMessage);", "originalCommit": "7af3e0d70367506a85dd0656d7a3bb464eebc09d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45c27e4a4fbde7cf48f5fbf22108d85e348b2e5c", "chunk": "diff --git a/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java b/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\nindex 150d75901e..33c4042729 100644\n--- a/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\n+++ b/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\n\n@@ -315,23 +315,25 @@ public class ValidatorConfig {\n     }\n \n     private void validateExternalSignerKeystoreAndPasswordFileConfig() {\n-      if (validatorExternalSignerKeystore == null\n-          && validatorExternalSignerKeystorePasswordFile == null) {\n-        return;\n+      if ((validatorExternalSignerKeystore != null\n+              && validatorExternalSignerKeystorePasswordFile == null)\n+          || (validatorExternalSignerKeystore == null\n+              && validatorExternalSignerKeystorePasswordFile != null)) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n       }\n-      final String errorMessage =\n-          \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n-      throw new InvalidConfigurationException(errorMessage);\n     }\n \n     private void validateExternalSignerTruststoreAndPasswordFileConfig() {\n-      if (validatorExternalSignerTruststore == null\n-          && validatorExternalSignerTruststorePasswordFile == null) {\n-        return;\n+      if ((validatorExternalSignerTruststore != null\n+              && validatorExternalSignerTruststorePasswordFile == null)\n+          || (validatorExternalSignerTruststore == null\n+              && validatorExternalSignerTruststorePasswordFile != null)) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-truststore' and '--validators-external-signer-truststore-password-file' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n       }\n-      final String errorMessage =\n-          \"Invalid configuration. '--validators-external-signer-truststore' and '--validators-external-signer-truststore-password-file' must be specified together\";\n-      throw new InvalidConfigurationException(errorMessage);\n     }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxOTA1OQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526519059", "bodyText": "not sure this check is correct either, like validatorExternalSignerTruststoreAndPasswordFileConfig seems to require they're both null...", "author": "rolfyone", "createdAt": "2020-11-19T00:48:41Z", "path": "validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java", "diffHunk": "@@ -243,5 +300,38 @@ private void validateKeyStoreFilesAndPasswordFilesConfig() {\n         throw new InvalidConfigurationException(errorMessage);\n       }\n     }\n+\n+    private void validateExternalSignerUrlAndPublicKeys() {\n+      if (validatorExternalSignerPublicKeys == null\n+          || validatorExternalSignerPublicKeys.isEmpty()) {\n+        return;\n+      }\n+\n+      if (validatorExternalSignerUrl == null) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-url' and '--validators-external-signer-public-keys' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n+      }\n+    }\n+\n+    private void validateExternalSignerKeystoreAndPasswordFileConfig() {\n+      if (validatorExternalSignerKeystore == null\n+          && validatorExternalSignerKeystorePasswordFile == null) {\n+        return;\n+      }\n+      final String errorMessage =\n+          \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n+      throw new InvalidConfigurationException(errorMessage);\n+    }", "originalCommit": "7af3e0d70367506a85dd0656d7a3bb464eebc09d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyNDc1NQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526524755", "bodyText": "let me re-write the condition.", "author": "usmansaleem", "createdAt": "2020-11-19T01:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxOTA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMTk0Ng==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526531946", "bodyText": "@rolfyone 've re-wrote the condition and added unit test case for coverage as well.", "author": "usmansaleem", "createdAt": "2020-11-19T01:27:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxOTA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "45c27e4a4fbde7cf48f5fbf22108d85e348b2e5c", "chunk": "diff --git a/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java b/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\nindex 150d75901e..33c4042729 100644\n--- a/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\n+++ b/validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\n\n@@ -315,23 +315,25 @@ public class ValidatorConfig {\n     }\n \n     private void validateExternalSignerKeystoreAndPasswordFileConfig() {\n-      if (validatorExternalSignerKeystore == null\n-          && validatorExternalSignerKeystorePasswordFile == null) {\n-        return;\n+      if ((validatorExternalSignerKeystore != null\n+              && validatorExternalSignerKeystorePasswordFile == null)\n+          || (validatorExternalSignerKeystore == null\n+              && validatorExternalSignerKeystorePasswordFile != null)) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n       }\n-      final String errorMessage =\n-          \"Invalid configuration. '--validators-external-signer-keystore' and '--validators-external-signer-keystore-password-file' must be specified together\";\n-      throw new InvalidConfigurationException(errorMessage);\n     }\n \n     private void validateExternalSignerTruststoreAndPasswordFileConfig() {\n-      if (validatorExternalSignerTruststore == null\n-          && validatorExternalSignerTruststorePasswordFile == null) {\n-        return;\n+      if ((validatorExternalSignerTruststore != null\n+              && validatorExternalSignerTruststorePasswordFile == null)\n+          || (validatorExternalSignerTruststore == null\n+              && validatorExternalSignerTruststorePasswordFile != null)) {\n+        final String errorMessage =\n+            \"Invalid configuration. '--validators-external-signer-truststore' and '--validators-external-signer-truststore-password-file' must be specified together\";\n+        throw new InvalidConfigurationException(errorMessage);\n       }\n-      final String errorMessage =\n-          \"Invalid configuration. '--validators-external-signer-truststore' and '--validators-external-signer-truststore-password-file' must be specified together\";\n-      throw new InvalidConfigurationException(errorMessage);\n     }\n   }\n }\n"}}, {"oid": "45c27e4a4fbde7cf48f5fbf22108d85e348b2e5c", "url": "https://github.com/ConsenSys/teku/commit/45c27e4a4fbde7cf48f5fbf22108d85e348b2e5c", "message": "modified validation condition and added unit test cases\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-19T01:25:55Z", "type": "commit"}, {"oid": "db8817bcf2d57a202989ff540da2e0abb41f4a06", "url": "https://github.com/ConsenSys/teku/commit/db8817bcf2d57a202989ff540da2e0abb41f4a06", "message": "more unit tests\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-19T01:38:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3ODM2Mw==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526578363", "bodyText": "i think having the supplier be final is probably a better pattern, than allowing it to be set just for testing.\nMaybe what we want is a second 'create' function that allows the supplier to be provided during create time to allow for this testing? it could be package private, just used in testing...", "author": "rolfyone", "createdAt": "2020-11-19T03:55:35Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "diffHunk": "@@ -45,25 +45,22 @@\n \n   private final SlashingProtector slashingProtector;\n   private final AsyncRunner asyncRunner;\n-  private final Supplier<HttpClient> remoteValidatorHttpClientFactory;\n+  private Supplier<HttpClient> externalValidatorHttpClientFactory;\n \n-  @VisibleForTesting\n-  ValidatorLoader(\n-      final SlashingProtector slashingProtector,\n-      final AsyncRunner asyncRunner,\n-      final Supplier<HttpClient> remoteValidatorHttpClientFactory) {\n+  private ValidatorLoader(\n+      final SlashingProtector slashingProtector, final AsyncRunner asyncRunner) {\n     this.slashingProtector = slashingProtector;\n     this.asyncRunner = asyncRunner;\n-    this.remoteValidatorHttpClientFactory = remoteValidatorHttpClientFactory;\n   }\n \n   public static ValidatorLoader create(\n       final SlashingProtector slashingProtector, final AsyncRunner asyncRunner) {\n-    return new ValidatorLoader(\n-        slashingProtector,\n-        asyncRunner,\n-        Suppliers.memoize(\n-            () -> HttpClient.newBuilder().version(HttpClient.Version.HTTP_1_1).build()));\n+    return new ValidatorLoader(slashingProtector, asyncRunner);\n+  }\n+\n+  @VisibleForTesting\n+  void setExternalValidatorHttpClientFactory(final Supplier<HttpClient> httpClientSupplier) {\n+    this.externalValidatorHttpClientFactory = httpClientSupplier;\n   }", "originalCommit": "db8817bcf2d57a202989ff540da2e0abb41f4a06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU4MjkzOQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526582939", "bodyText": "I've refactored httpclient factory to be loaded in initializeValidator method (instead of being a class member) ... and created an overloaded initializeValidator that can utilitze mocked httpclient in unit tests. The factory is only required (and will be initialized) if external public keys are defined.", "author": "usmansaleem", "createdAt": "2020-11-19T04:13:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3ODM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU4MzUxMA==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r526583510", "bodyText": "we can't really set httpClient up in constructor anymore because the keystore/truststore values are derived from \"ValidatorConfig\" object, which is injected with initializeValidator.", "author": "usmansaleem", "createdAt": "2020-11-19T04:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3ODM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE2NzczOQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r527167739", "bodyText": "ok fair enough...", "author": "rolfyone", "createdAt": "2020-11-19T20:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3ODM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "dcc96d80e75d779003f6ca33391b2d8be8ee780b", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\nindex 9b7858c4bc..91704b25e1 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n\n@@ -45,7 +45,6 @@ public class ValidatorLoader {\n \n   private final SlashingProtector slashingProtector;\n   private final AsyncRunner asyncRunner;\n-  private Supplier<HttpClient> externalValidatorHttpClientFactory;\n \n   private ValidatorLoader(\n       final SlashingProtector slashingProtector, final AsyncRunner asyncRunner) {\n"}}, {"oid": "dcc96d80e75d779003f6ca33391b2d8be8ee780b", "url": "https://github.com/ConsenSys/teku/commit/dcc96d80e75d779003f6ca33391b2d8be8ee780b", "message": "refactor external signer httpclient factory to initialize validators\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-19T04:12:07Z", "type": "commit"}, {"oid": "e8ee76ce89c3b8b96cf32c00d357b2ce00cc74b0", "url": "https://github.com/ConsenSys/teku/commit/e8ee76ce89c3b8b96cf32c00d357b2ce00cc74b0", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-19T23:33:10Z", "type": "commit"}, {"oid": "50b442ab29bb1642799f24fe829c49aa950161e2", "url": "https://github.com/ConsenSys/teku/commit/50b442ab29bb1642799f24fe829c49aa950161e2", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-23T05:11:28Z", "type": "commit"}, {"oid": "fcfa97c8e90f8c19c1b3abe92c60f6c0626dde24", "url": "https://github.com/ConsenSys/teku/commit/fcfa97c8e90f8c19c1b3abe92c60f6c0626dde24", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-24T23:24:40Z", "type": "commit"}, {"oid": "ed5cc7e5dcff9d9995e9e529546ff868c54d9145", "url": "https://github.com/ConsenSys/teku/commit/ed5cc7e5dcff9d9995e9e529546ff868c54d9145", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-25T10:49:42Z", "type": "commit"}, {"oid": "e2a30ae131b80e812acc29078da8751e49216f69", "url": "https://github.com/ConsenSys/teku/commit/e2a30ae131b80e812acc29078da8751e49216f69", "message": "Add external signer upcheck at start up\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-25T12:20:55Z", "type": "commit"}, {"oid": "3a887ad8c7d10031f1a185c1f909a533b1204e63", "url": "https://github.com/ConsenSys/teku/commit/3a887ad8c7d10031f1a185c1f909a533b1204e63", "message": "fixing validator unit test case\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-25T12:59:29Z", "type": "commit"}, {"oid": "9cb79d029f5d38e4143c3ae58d70d5b3c18c680d", "url": "https://github.com/ConsenSys/teku/commit/9cb79d029f5d38e4143c3ae58d70d5b3c18c680d", "message": "simplifying comparison\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-25T20:49:54Z", "type": "commit"}, {"oid": "326b72dcb311346fc18da0edf4a732297ea0fcea", "url": "https://github.com/ConsenSys/teku/commit/326b72dcb311346fc18da0edf4a732297ea0fcea", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-11-30T00:18:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTk3Mg==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532295972", "bodyText": "these look like they're added in just to satisfy the test? maybe just put them in a @BeforeEach if they're not important for the test?\nIf they're expected, we might want to verify they occur...", "author": "rolfyone", "createdAt": "2020-11-30T00:43:51Z", "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java", "diffHunk": "@@ -151,6 +160,9 @@ void initializeValidatorsWithBothLocalAndExternalSigners(@TempDir Path tempDir)\n                         + File.pathSeparator\n                         + tempDir.toAbsolutePath().toString()))\n             .build();\n+    when(httpClient.send(any(), ArgumentMatchers.<HttpResponse.BodyHandler<Void>>any()))\n+        .thenReturn(upcheckResponse);\n+", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzIzOA==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537923238", "bodyText": "fixed by upcheck PR", "author": "usmansaleem", "createdAt": "2020-12-07T23:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTk3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "bba3e452770c660ebaefef6630e1a999232ba5f6", "chunk": "diff --git a/validator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java b/validator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java\nindex 00b383269b..d3f5abe50e 100644\n--- a/validator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java\n+++ b/validator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java\n\n@@ -160,8 +155,6 @@ class ValidatorLoaderTest {\n                         + File.pathSeparator\n                         + tempDir.toAbsolutePath().toString()))\n             .build();\n-    when(httpClient.send(any(), ArgumentMatchers.<HttpResponse.BodyHandler<Void>>any()))\n-        .thenReturn(upcheckResponse);\n \n     final Map<BLSPublicKey, Validator> validators =\n         validatorLoader.initializeValidators(config, globalConfig, () -> httpClient);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NjY3Mg==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532296672", "bodyText": "I just wonder if this log message should also be displayed if the signer disappears?\nI'm not sure I see anywhere specifically in this latest set of changes, but maybe if the signer stops responding, raising this message would be a useful warning...", "author": "rolfyone", "createdAt": "2020-11-30T00:47:10Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "diffHunk": "@@ -99,8 +101,20 @@ public static ValidatorLoader create(\n \n   private Map<BLSPublicKey, Validator> createExternalSignerValidator(\n       final ValidatorConfig config, final Supplier<HttpClient> externalSignerHttpClientFactory) {\n+    if (config.getValidatorExternalSignerPublicKeys().isEmpty()) {\n+      return Collections.emptyMap();\n+    }\n+\n     final Duration timeout = Duration.ofMillis(config.getValidatorExternalSignerTimeout());\n \n+    final boolean isReachable =\n+        new ExternalSignerUpcheck(\n+                externalSignerHttpClientFactory.get(),\n+                config.getValidatorExternalSignerUrl(),\n+                timeout)\n+            .upcheck();\n+    STATUS_LOG.externalSignerStatus(config.getValidatorExternalSignerUrl(), isReachable);", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzMxNw==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537923317", "bodyText": "fixed by upcheck PR", "author": "usmansaleem", "createdAt": "2020-12-07T23:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NjY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "bba3e452770c660ebaefef6630e1a999232ba5f6", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\nindex 6b46c44456..e1bc929390 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n\n@@ -107,14 +107,6 @@ public class ValidatorLoader {\n \n     final Duration timeout = Duration.ofMillis(config.getValidatorExternalSignerTimeout());\n \n-    final boolean isReachable =\n-        new ExternalSignerUpcheck(\n-                externalSignerHttpClientFactory.get(),\n-                config.getValidatorExternalSignerUrl(),\n-                timeout)\n-            .upcheck();\n-    STATUS_LOG.externalSignerStatus(config.getValidatorExternalSignerUrl(), isReachable);\n-\n     return config.getValidatorExternalSignerPublicKeys().stream()\n         .map(\n             publicKey -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTM2MQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532295361", "bodyText": "nit: I'd make this an error and it's probably worth making it red with ColorConsolePrinter.print.", "author": "ajsutton", "createdAt": "2020-11-30T00:39:55Z", "path": "infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java", "diffHunk": "@@ -228,4 +229,12 @@ public void eth1DepositChainIdMismatch(int expectedChainId, int eth1ChainId) {\n         expectedChainId,\n         eth1ChainId);\n   }\n+\n+  public void externalSignerStatus(final URL externalSignerUrl, boolean isReachable) {\n+    if (isReachable) {\n+      log.info(\"External signer is reachable at {}\", externalSignerUrl);\n+    } else {\n+      log.warn(\"External signer is currently not reachable at {}\", externalSignerUrl);", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzQ2MA==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537923460", "bodyText": "fixed by upcheck PR", "author": "usmansaleem", "createdAt": "2020-12-07T23:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTM2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3be45779314a75bbf94278ba40bd17e25e3fc5e", "chunk": "diff --git a/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java b/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\nindex a47abaf3d3..4ce2fd69cf 100644\n--- a/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\n+++ b/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\n\n@@ -237,4 +244,28 @@ public class StatusLogger {\n       log.warn(\"External signer is currently not reachable at {}\", externalSignerUrl);\n     }\n   }\n+\n+  public void unableToRetrieveValidatorStatusesFromBeaconNode() {\n+    log.error(\"Unable to retrieve validator statuses from BeaconNode.\");\n+  }\n+\n+  public void validatorStatus(String validatorStatus, String publicKey) {\n+    log.info(\"Validator {} status is {}.\", validatorStatus, publicKey);\n+  }\n+\n+  public void unableToRetrieveValidatorStatus(String publicKey) {\n+    log.warn(\"Unable to retrieve status for validator {}.\", publicKey);\n+  }\n+\n+  public void unableToRetrieveValidatorStatusSummary(int n) {\n+    log.warn(\"Unable to retrieve status for {} validators.\", n);\n+  }\n+\n+  public void validatorStatusSummary(int n, String validatorStatus) {\n+    log.info(\"{} validators are in {} state.\", n, validatorStatus);\n+  }\n+\n+  public void validatorStatusChange(String oldStatus, String newStatus, String publicKey) {\n+    log.warn(\"Validator {} has changed status from {} to {}.\", publicKey, oldStatus, newStatus);\n+  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTU3NQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532295575", "bodyText": "We should make this description specific to this type of keystore rather than having the same description as validators-external-signer-truststore-password-file", "author": "ajsutton", "createdAt": "2020-11-30T00:41:09Z", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "diffHunk": "@@ -80,6 +81,35 @@\n       arity = \"1\")\n   private int validatorExternalSignerTimeout = 1000;\n \n+  @CommandLine.Option(\n+      names = {\"--validators-external-signer-keystore\"},\n+      paramLabel = \"<FILE>\",\n+      description =\n+          \"Keystore (PKCS12/JKS) to use for TLS mutual authentication with external signer\",\n+      arity = \"1\")\n+  private String validatorExternalSignerKeystore = null;\n+\n+  @CommandLine.Option(\n+      names = {\"--validators-external-signer-keystore-password-file\"},\n+      paramLabel = \"<FILE>\",\n+      description = \"Password file for keystore\",", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzMDA5Mg==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537930092", "bodyText": "Updated the description to be more descriptive.", "author": "usmansaleem", "createdAt": "2020-12-08T00:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "40ddecebb2815b632c9b8273bcae8cce90607f83", "chunk": "diff --git a/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java b/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\nindex d5752182fa..5276428071 100644\n--- a/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\n+++ b/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\n\n@@ -92,7 +92,8 @@ public class ValidatorKeysOptions {\n   @CommandLine.Option(\n       names = {\"--validators-external-signer-keystore-password-file\"},\n       paramLabel = \"<FILE>\",\n-      description = \"Password file for keystore\",\n+      description =\n+          \"Password file to decrypt keystore (PKCS12/JKS) that will be used for TLS mutual authentication with external signer\",\n       arity = \"1\")\n   private String validatorExternalSignerKeystorePasswordFile = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTkwNQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532295905", "bodyText": "Should we refuse to start if ssl keystores are specified but the URL is http only? Validation would probably happen in ValidatorConfig I guess.", "author": "ajsutton", "createdAt": "2020-11-30T00:43:31Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.validator.client.loader;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.net.http.HttpClient;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.GeneralSecurityException;\n+import java.security.KeyManagementException;\n+import java.security.KeyStore;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.function.Supplier;\n+import javax.net.ssl.KeyManager;\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+import org.apache.commons.lang3.tuple.Pair;\n+import tech.pegasys.teku.infrastructure.crypto.SecureRandomProvider;\n+import tech.pegasys.teku.util.config.InvalidConfigurationException;\n+import tech.pegasys.teku.validator.api.ValidatorConfig;\n+\n+public class HttpClientExternalSignerFactory implements Supplier<HttpClient> {\n+  private final ValidatorConfig validatorConfig;\n+\n+  public HttpClientExternalSignerFactory(final ValidatorConfig validatorConfig) {\n+    this.validatorConfig = validatorConfig;\n+  }\n+\n+  @Override\n+  public HttpClient get() {\n+    final HttpClient.Builder builder = HttpClient.newBuilder().version(HttpClient.Version.HTTP_1_1);\n+    if (isTLSEnabled()) {", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNTg0OQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537925849", "bodyText": "hmm ...  if URL is http (and web3signer is running in TLS), the connection would fail even if we specify keystores/truststores. I agree, we should error out if keystores/truststores are specified and URL is http only.", "author": "usmansaleem", "createdAt": "2020-12-07T23:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTkwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MzU5Mg==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537953592", "bodyText": "validation added.", "author": "usmansaleem", "createdAt": "2020-12-08T01:06:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NTkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "59ba8b308ff2db0de6ecd78d4646ba59671a0b09", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\nindex d5c2fef126..939997bc02 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\n\n@@ -55,7 +55,7 @@ public class HttpClientExternalSignerFactory implements Supplier<HttpClient> {\n \n   private boolean isTLSEnabled() {\n     final String protocol = validatorConfig.getValidatorExternalSignerUrl().getProtocol();\n-    return protocol != null && protocol.toLowerCase().equals(\"https\");\n+    return protocol != null && protocol.equalsIgnoreCase(\"https\");\n   }\n \n   private SSLContext getSSLContext(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NjIwMQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532296201", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return protocol != null && protocol.toLowerCase().equals(\"https\");\n          \n          \n            \n                return protocol != null && protocol.equalsIgnoringCase(\"https\");\n          \n      \n    \n    \n  \n\ntoLowerCase can do surprising things in some locales and with some characters.", "author": "ajsutton", "createdAt": "2020-11-30T00:45:11Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.validator.client.loader;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.net.http.HttpClient;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.GeneralSecurityException;\n+import java.security.KeyManagementException;\n+import java.security.KeyStore;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.function.Supplier;\n+import javax.net.ssl.KeyManager;\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+import org.apache.commons.lang3.tuple.Pair;\n+import tech.pegasys.teku.infrastructure.crypto.SecureRandomProvider;\n+import tech.pegasys.teku.util.config.InvalidConfigurationException;\n+import tech.pegasys.teku.validator.api.ValidatorConfig;\n+\n+public class HttpClientExternalSignerFactory implements Supplier<HttpClient> {\n+  private final ValidatorConfig validatorConfig;\n+\n+  public HttpClientExternalSignerFactory(final ValidatorConfig validatorConfig) {\n+    this.validatorConfig = validatorConfig;\n+  }\n+\n+  @Override\n+  public HttpClient get() {\n+    final HttpClient.Builder builder = HttpClient.newBuilder().version(HttpClient.Version.HTTP_1_1);\n+    if (isTLSEnabled()) {\n+      builder.sslContext(\n+          getSSLContext(\n+              validatorConfig.getValidatorExternalSignerKeystorePasswordFilePair(),\n+              validatorConfig.getValidatorExternalSignerTruststorePasswordFilePair()));\n+    }\n+    return builder.build();\n+  }\n+\n+  private boolean isTLSEnabled() {\n+    final String protocol = validatorConfig.getValidatorExternalSignerUrl().getProtocol();\n+    return protocol != null && protocol.toLowerCase().equals(\"https\");", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzU1MQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537927551", "bodyText": "done.", "author": "usmansaleem", "createdAt": "2020-12-08T00:00:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NjIwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "59ba8b308ff2db0de6ecd78d4646ba59671a0b09", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\nindex d5c2fef126..939997bc02 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/HttpClientExternalSignerFactory.java\n\n@@ -55,7 +55,7 @@ public class HttpClientExternalSignerFactory implements Supplier<HttpClient> {\n \n   private boolean isTLSEnabled() {\n     final String protocol = validatorConfig.getValidatorExternalSignerUrl().getProtocol();\n-    return protocol != null && protocol.toLowerCase().equals(\"https\");\n+    return protocol != null && protocol.equalsIgnoreCase(\"https\");\n   }\n \n   private SSLContext getSSLContext(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NzM5Ng==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r532297396", "bodyText": "It would probably be good to get this new upcheck in its own PR.  It would also be good to keep retrying - particularly if its failing - otherwise a single error message in the logs can easily be missed and as Paul mentioned, the signer may be up initially but then later go down.  Checking liveness every few minutes probably makes sense.  Would also be good that this is then an async check instead of delaying startup to perform it.", "author": "ajsutton", "createdAt": "2020-11-30T00:51:33Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "diffHunk": "@@ -96,14 +99,28 @@ public static ValidatorLoader create(\n         .collect(toMap(Validator::getPublicKey, Function.identity()));\n   }\n \n-  private Map<BLSPublicKey, Validator> createExternalSignerValidator(final ValidatorConfig config) {\n+  private Map<BLSPublicKey, Validator> createExternalSignerValidator(\n+      final ValidatorConfig config, final Supplier<HttpClient> externalSignerHttpClientFactory) {\n+    if (config.getValidatorExternalSignerPublicKeys().isEmpty()) {\n+      return Collections.emptyMap();\n+    }\n+\n     final Duration timeout = Duration.ofMillis(config.getValidatorExternalSignerTimeout());\n+\n+    final boolean isReachable =\n+        new ExternalSignerUpcheck(\n+                externalSignerHttpClientFactory.get(),\n+                config.getValidatorExternalSignerUrl(),\n+                timeout)\n+            .upcheck();\n+    STATUS_LOG.externalSignerStatus(config.getValidatorExternalSignerUrl(), isReachable);", "originalCommit": "326b72dcb311346fc18da0edf4a732297ea0fcea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNjA3MA==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r537926070", "bodyText": "moved to separate PR.", "author": "usmansaleem", "createdAt": "2020-12-07T23:57:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5NzM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bba3e452770c660ebaefef6630e1a999232ba5f6", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\nindex 6b46c44456..e1bc929390 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n\n@@ -107,14 +107,6 @@ public class ValidatorLoader {\n \n     final Duration timeout = Duration.ofMillis(config.getValidatorExternalSignerTimeout());\n \n-    final boolean isReachable =\n-        new ExternalSignerUpcheck(\n-                externalSignerHttpClientFactory.get(),\n-                config.getValidatorExternalSignerUrl(),\n-                timeout)\n-            .upcheck();\n-    STATUS_LOG.externalSignerStatus(config.getValidatorExternalSignerUrl(), isReachable);\n-\n     return config.getValidatorExternalSignerPublicKeys().stream()\n         .map(\n             publicKey -> {\n"}}, {"oid": "f3be45779314a75bbf94278ba40bd17e25e3fc5e", "url": "https://github.com/ConsenSys/teku/commit/f3be45779314a75bbf94278ba40bd17e25e3fc5e", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-06T23:39:16Z", "type": "commit"}, {"oid": "bba3e452770c660ebaefef6630e1a999232ba5f6", "url": "https://github.com/ConsenSys/teku/commit/bba3e452770c660ebaefef6630e1a999232ba5f6", "message": "remove external upcheck as it is coming from different PR\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-07T23:40:39Z", "type": "commit"}, {"oid": "6ddc254be7584d340b96fd6c4eb72fcef9e3eff1", "url": "https://github.com/ConsenSys/teku/commit/6ddc254be7584d340b96fd6c4eb72fcef9e3eff1", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>\n\n# Conflicts:\n#\tvalidator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "committedDate": "2020-12-07T23:48:11Z", "type": "commit"}, {"oid": "88ef9fbef15d3816b10f4c9259b2ea03a900628c", "url": "https://github.com/ConsenSys/teku/commit/88ef9fbef15d3816b10f4c9259b2ea03a900628c", "message": "spotless fix post merge\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-07T23:49:43Z", "type": "commit"}, {"oid": "59ba8b308ff2db0de6ecd78d4646ba59671a0b09", "url": "https://github.com/ConsenSys/teku/commit/59ba8b308ff2db0de6ecd78d4646ba59671a0b09", "message": "review suggestion - use equalsIgnoreCase instead of toLowerCase\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-07T23:58:42Z", "type": "commit"}, {"oid": "30546e05649648147fd1c9c11b4b7cd01fbf2a43", "url": "https://github.com/ConsenSys/teku/commit/30546e05649648147fd1c9c11b4b7cd01fbf2a43", "message": "post merge conflict fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T00:00:12Z", "type": "commit"}, {"oid": "40ddecebb2815b632c9b8273bcae8cce90607f83", "url": "https://github.com/ConsenSys/teku/commit/40ddecebb2815b632c9b8273bcae8cce90607f83", "message": "review suggestion - more descriptive cli description for password files\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T00:06:33Z", "type": "commit"}, {"oid": "778ea44b371926e1a7556be36924360d9dbeda7e", "url": "https://github.com/ConsenSys/teku/commit/778ea44b371926e1a7556be36924360d9dbeda7e", "message": "validation fails if external signer url does not start with https\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T00:26:09Z", "type": "commit"}, {"oid": "a7f9b014304ca129d352ae2dc8281e451d0a43b2", "url": "https://github.com/ConsenSys/teku/commit/a7f9b014304ca129d352ae2dc8281e451d0a43b2", "message": "typo\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T01:04:38Z", "type": "commit"}, {"oid": "d678170d49ad7adfb2a5206ef6bec4ced7bc4d6f", "url": "https://github.com/ConsenSys/teku/commit/d678170d49ad7adfb2a5206ef6bec4ced7bc4d6f", "message": "Updating integration test case, changing timeout type to Duration\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T01:27:56Z", "type": "commit"}, {"oid": "53444659b84552a071ddce5fee4bd8dac807a8f1", "url": "https://github.com/ConsenSys/teku/commit/53444659b84552a071ddce5fee4bd8dac807a8f1", "message": "Integration test for External Signer Upcheck with TLS\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T02:52:19Z", "type": "commit"}, {"oid": "23f7c5fad7275d25a08d2b414a52806f2f95d930", "url": "https://github.com/ConsenSys/teku/commit/23f7c5fad7275d25a08d2b414a52806f2f95d930", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T02:52:43Z", "type": "commit"}, {"oid": "8aae7c46626b84b68d344a93e8779bd0bf38f99d", "url": "https://github.com/ConsenSys/teku/commit/8aae7c46626b84b68d344a93e8779bd0bf38f99d", "message": "errorprone suggestion\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T02:55:43Z", "type": "commit"}, {"oid": "d67ef50e0422935f6066b17d50c6782ae7e447e6", "url": "https://github.com/ConsenSys/teku/commit/d67ef50e0422935f6066b17d50c6782ae7e447e6", "message": "fixing unit test\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T03:05:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAwOTUwNA==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r538009504", "bodyText": "as discussed, 1 second is very short.", "author": "rolfyone", "createdAt": "2020-12-08T03:38:38Z", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "diffHunk": "@@ -79,7 +80,7 @@\n       paramLabel = \"<INTEGER>\",\n       description = \"Timeout (in milliseconds) for the external signing service\",\n       arity = \"1\")\n-  private int validatorExternalSignerTimeout = 1000;\n+  private long validatorExternalSignerTimeout = 1000;", "originalCommit": "d67ef50e0422935f6066b17d50c6782ae7e447e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNzEzMQ==", "url": "https://github.com/ConsenSys/teku/pull/3250#discussion_r538037131", "bodyText": "updated to 5 seconds.", "author": "usmansaleem", "createdAt": "2020-12-08T05:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAwOTUwNA=="}], "type": "inlineReview", "revised_code": {"commit": "d21df24bcebff05609779aea2f24068f2a796fd4", "chunk": "diff --git a/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java b/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\nindex 683a7bae36..c052214c90 100644\n--- a/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\n+++ b/teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\n\n@@ -80,7 +80,7 @@ public class ValidatorKeysOptions {\n       paramLabel = \"<INTEGER>\",\n       description = \"Timeout (in milliseconds) for the external signing service\",\n       arity = \"1\")\n-  private long validatorExternalSignerTimeout = 1000;\n+  private long validatorExternalSignerTimeout = 5000;\n \n   @CommandLine.Option(\n       names = {\"--validators-external-signer-keystore\"},\n"}}, {"oid": "d21df24bcebff05609779aea2f24068f2a796fd4", "url": "https://github.com/ConsenSys/teku/commit/d21df24bcebff05609779aea2f24068f2a796fd4", "message": "default external signer timeout to 5 seconds\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T04:59:39Z", "type": "commit"}, {"oid": "65ff5d11da4077786e9081edaf39321e179ba62d", "url": "https://github.com/ConsenSys/teku/commit/65ff5d11da4077786e9081edaf39321e179ba62d", "message": "Merge remote-tracking branch 'upstream/master' into external_signer_tls\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T04:59:53Z", "type": "commit"}, {"oid": "311a1d751a6445ef170544cb6b33ea6443b8b5db", "url": "https://github.com/ConsenSys/teku/commit/311a1d751a6445ef170544cb6b33ea6443b8b5db", "message": "fixing unit test\n\nSigned-off-by: Usman Saleem <usman@usmans.info>", "committedDate": "2020-12-08T06:47:43Z", "type": "commit"}]}