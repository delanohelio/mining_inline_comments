{"pr_number": 3152, "pr_title": "Implement api v1 beacon block endpoints", "pr_createdAt": "2020-11-04T18:43:14Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3152", "timeline": [{"oid": "87a9755507f69a95557fdf2ecec9a453f13c727d", "url": "https://github.com/ConsenSys/teku/commit/87a9755507f69a95557fdf2ecec9a453f13c727d", "message": "Implement beacon block v1 endpoints", "committedDate": "2020-11-03T19:32:02Z", "type": "commit"}, {"oid": "b1bc5354d5b949f92cfb462a8daeadd72699feb4", "url": "https://github.com/ConsenSys/teku/commit/b1bc5354d5b949f92cfb462a8daeadd72699feb4", "message": "Implement endpoints", "committedDate": "2020-11-03T19:41:34Z", "type": "commit"}, {"oid": "39193e0a97fce9f696f5c79c5d49f83ef476e5f9", "url": "https://github.com/ConsenSys/teku/commit/39193e0a97fce9f696f5c79c5d49f83ef476e5f9", "message": "Don't use internal object", "committedDate": "2020-11-03T20:51:12Z", "type": "commit"}, {"oid": "1b43ae82852abc363d85435adc45b69aaba07f01", "url": "https://github.com/ConsenSys/teku/commit/1b43ae82852abc363d85435adc45b69aaba07f01", "message": "Merge remote-tracking branch 'remotes/origin/master' into implementApiV1BeaconBlockEndpoints\n\n# Conflicts:\n#\tdata/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "committedDate": "2020-11-04T18:50:14Z", "type": "commit"}, {"oid": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "url": "https://github.com/ConsenSys/teku/commit/d15da3e983dfcadd93929ff51aad15b8366b62d7", "message": "Run spotless", "committedDate": "2020-11-04T18:50:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NDYzMg==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517594632", "bodyText": "this shouldn't be needed? if it's thrown during parse of the block id, that should be caught in the selector, and a BadRequestException should get thrown and it'll get handled by the generic exception handler.\nif it is needed, the BlockSelectorFactory should be updated to try/catch in the same places the StateSelectorFactory has been made to catch for bytes32 parsing and numeric parsing.", "author": "rolfyone", "createdAt": "2020-11-04T19:54:42Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlock.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.response.v1.beacon.GetBlockResponse;\n+import tech.pegasys.teku.api.schema.SignedBeaconBlock;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetBlock extends AbstractHandler implements Handler {\n+  public static final String ROUTE = \"/eth/v1/beacon/blocks/:block_id\";\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetBlock(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider);\n+  }\n+\n+  public GetBlock(final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get block\",\n+      tags = {TAG_V1_BEACON},\n+      description = \"Retrieves block details for given block id.\",\n+      pathParams = {@OpenApiParam(name = PARAM_BLOCK_ID, description = PARAM_BLOCK_ID_DESCRIPTION)},\n+      responses = {\n+        @OpenApiResponse(status = RES_OK, content = @OpenApiContent(from = GetBlockResponse.class)),\n+        @OpenApiResponse(status = RES_BAD_REQUEST),\n+        @OpenApiResponse(status = RES_NOT_FOUND),\n+        @OpenApiResponse(status = RES_INTERNAL_ERROR)\n+      })\n+  @Override\n+  public void handle(@NotNull final Context ctx) throws Exception {\n+    final Map<String, String> pathParams = ctx.pathParamMap();\n+    try {\n+      final SafeFuture<Optional<SignedBeaconBlock>> future =\n+          chainDataProvider.getBlock(pathParams.get(PARAM_BLOCK_ID));\n+      handleOptionalResult(ctx, future, this::handleResult, SC_NOT_FOUND);\n+    } catch (IllegalArgumentException ex) {\n+      ctx.status(SC_BAD_REQUEST);\n+      ctx.result(BadRequest.badRequest(jsonProvider, ex.getMessage()));\n+    }", "originalCommit": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY3MzM2NQ==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517673365", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-11-04T22:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NDYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "cca82cbded8502f398f617c033821587a564cb5d", "chunk": "diff --git a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlock.java b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlock.java\nindex 2eedaff09d..7de4b7737a 100644\n--- a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlock.java\n+++ b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlock.java\n\n@@ -13,16 +13,6 @@\n \n package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n \n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n-\n import com.fasterxml.jackson.core.JsonProcessingException;\n import io.javalin.http.Context;\n import io.javalin.http.Handler;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NTEyMg==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517595122", "bodyText": "shouldn't be needed", "author": "rolfyone", "createdAt": "2020-11-04T19:55:37Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockAttestations.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.response.v1.beacon.GetBlockAttestationsResponse;\n+import tech.pegasys.teku.api.schema.Attestation;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetBlockAttestations extends AbstractHandler implements Handler {\n+  public static final String ROUTE = \"/eth/v1/beacon/blocks/:block_id/attestations\";\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetBlockAttestations(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider);\n+  }\n+\n+  public GetBlockAttestations(\n+      final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get block attestations\",\n+      tags = {TAG_V1_BEACON},\n+      description = \"Retrieves attestations included in requested block.\",\n+      pathParams = {@OpenApiParam(name = PARAM_BLOCK_ID, description = PARAM_BLOCK_ID_DESCRIPTION)},\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            content = @OpenApiContent(from = GetBlockAttestationsResponse.class)),\n+        @OpenApiResponse(status = RES_BAD_REQUEST),\n+        @OpenApiResponse(status = RES_NOT_FOUND),\n+        @OpenApiResponse(status = RES_INTERNAL_ERROR)\n+      })\n+  @Override\n+  public void handle(@NotNull final Context ctx) throws Exception {\n+\n+    final Map<String, String> pathParams = ctx.pathParamMap();\n+    try {\n+      final SafeFuture<Optional<List<Attestation>>> future =\n+          chainDataProvider.getBlockAttestations(pathParams.get(PARAM_BLOCK_ID));\n+      handleOptionalResult(ctx, future, this::handleResult, SC_NOT_FOUND);\n+    } catch (IllegalArgumentException ex) {\n+      ctx.status(SC_BAD_REQUEST);\n+      ctx.result(BadRequest.badRequest(jsonProvider, ex.getMessage()));\n+    }", "originalCommit": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY3MzM4OA==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517673388", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-11-04T22:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NTEyMg=="}], "type": "inlineReview", "revised_code": {"commit": "cca82cbded8502f398f617c033821587a564cb5d", "chunk": "diff --git a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockAttestations.java b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockAttestations.java\nindex 78ec11e246..ae948857bc 100644\n--- a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockAttestations.java\n+++ b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockAttestations.java\n\n@@ -13,16 +13,6 @@\n \n package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n \n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n-\n import com.fasterxml.jackson.core.JsonProcessingException;\n import io.javalin.http.Context;\n import io.javalin.http.Handler;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NTUxMQ==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517595511", "bodyText": "shouldn't be needed", "author": "rolfyone", "createdAt": "2020-11-04T19:56:18Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.response.v1.beacon.GetBlockRootResponse;\n+import tech.pegasys.teku.api.schema.Root;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetBlockRoot extends AbstractHandler implements Handler {\n+  public static final String ROUTE = \"/eth/v1/beacon/blocks/:block_id/root\";\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetBlockRoot(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider);\n+  }\n+\n+  public GetBlockRoot(final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get block root\",\n+      tags = {TAG_V1_BEACON},\n+      description = \"Retrieves hashTreeRoot of BeaconBlock/BeaconBlockHeader\",\n+      pathParams = {@OpenApiParam(name = PARAM_BLOCK_ID, description = PARAM_BLOCK_ID_DESCRIPTION)},\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            content = @OpenApiContent(from = GetBlockRootResponse.class)),\n+        @OpenApiResponse(status = RES_BAD_REQUEST),\n+        @OpenApiResponse(status = RES_NOT_FOUND),\n+        @OpenApiResponse(status = RES_INTERNAL_ERROR)\n+      })\n+  @Override\n+  public void handle(@NotNull final Context ctx) throws Exception {\n+    final Map<String, String> pathParams = ctx.pathParamMap();\n+    try {\n+      final SafeFuture<Optional<Root>> future =\n+          chainDataProvider.getBlockRoot(pathParams.get(PARAM_BLOCK_ID));\n+      handleOptionalResult(ctx, future, this::handleResult, SC_NOT_FOUND);\n+    } catch (IllegalArgumentException ex) {\n+      ctx.status(SC_BAD_REQUEST);\n+      ctx.result(BadRequest.badRequest(jsonProvider, ex.getMessage()));\n+    }", "originalCommit": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY3MzQyMA==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517673420", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-11-04T22:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NTUxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "cca82cbded8502f398f617c033821587a564cb5d", "chunk": "diff --git a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\nindex 7ffcdfa30a..b621eb1727 100644\n--- a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\n+++ b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\n\n@@ -13,16 +13,6 @@\n \n package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n \n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n-\n import com.fasterxml.jackson.core.JsonProcessingException;\n import io.javalin.http.Context;\n import io.javalin.http.Handler;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5ODcyNw==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517598727", "bodyText": "unit tests needed, fetch anything really, most of the provider tests have a mock ChainDataProvider, just checking responses are correct (eg. get the right block root)\nI'm only expecting to see 1 test case, not extensive, as the defaultBlockSelectorFactory has tests already to show it's working. that'd pretty much cover the 'getBlock', but the others are pulling sections of data and returning.", "author": "rolfyone", "createdAt": "2020-11-04T20:02:22Z", "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "diffHunk": "@@ -215,6 +216,33 @@ public GetForkResponse getForkInfo() {\n         .thenApply(maybeBlock -> maybeBlock.map(block -> new BlockHeader(block, true)));\n   }\n \n+  public SafeFuture<Optional<SignedBeaconBlock>> getBlock(final String slotParameter) {\n+    return defaultBlockSelectorFactory\n+        .defaultBlockSelector(slotParameter)\n+        .getSingleBlock()\n+        .thenApply(maybeBlock -> maybeBlock.map(SignedBeaconBlock::new));\n+  }\n+\n+  public SafeFuture<Optional<Root>> getBlockRoot(final String slotParameter) {\n+    return defaultBlockSelectorFactory\n+        .defaultBlockSelector(slotParameter)\n+        .getSingleBlock()\n+        .thenApply(maybeBlock -> maybeBlock.map(block -> new Root(block.getRoot())));\n+  }\n+\n+  public SafeFuture<Optional<List<Attestation>>> getBlockAttestations(final String slotParameter) {\n+    return defaultBlockSelectorFactory\n+        .defaultBlockSelector(slotParameter)\n+        .getSingleBlock()\n+        .thenApply(\n+            maybeBlock ->\n+                maybeBlock.map(\n+                    block ->\n+                        block.getMessage().getBody().getAttestations().stream()\n+                            .map(Attestation::new)\n+                            .collect(toList())));\n+  }", "originalCommit": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0MTgzOQ==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517641839", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T21:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5ODcyNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMjkwNA==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517602904", "bodyText": "it'd be nice to show the endpoints actually create data that can deserialize. the easiest way is an integration test, and checking for an 'OK' response that the data block can be read.\nalso should check that block root not found gives a 404 in an integration test", "author": "rolfyone", "createdAt": "2020-11-04T20:10:18Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.response.v1.beacon.GetBlockRootResponse;\n+import tech.pegasys.teku.api.schema.Root;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetBlockRoot extends AbstractHandler implements Handler {\n+  public static final String ROUTE = \"/eth/v1/beacon/blocks/:block_id/root\";\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetBlockRoot(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider);\n+  }\n+\n+  public GetBlockRoot(final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get block root\",\n+      tags = {TAG_V1_BEACON},\n+      description = \"Retrieves hashTreeRoot of BeaconBlock/BeaconBlockHeader\",\n+      pathParams = {@OpenApiParam(name = PARAM_BLOCK_ID, description = PARAM_BLOCK_ID_DESCRIPTION)},\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            content = @OpenApiContent(from = GetBlockRootResponse.class)),\n+        @OpenApiResponse(status = RES_BAD_REQUEST),\n+        @OpenApiResponse(status = RES_NOT_FOUND),\n+        @OpenApiResponse(status = RES_INTERNAL_ERROR)\n+      })\n+  @Override\n+  public void handle(@NotNull final Context ctx) throws Exception {", "originalCommit": "d15da3e983dfcadd93929ff51aad15b8366b62d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY3NDg2NQ==", "url": "https://github.com/ConsenSys/teku/pull/3152#discussion_r517674865", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T22:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMjkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "cca82cbded8502f398f617c033821587a564cb5d", "chunk": "diff --git a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\nindex 7ffcdfa30a..b621eb1727 100644\n--- a/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\n+++ b/data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetBlockRoot.java\n\n@@ -13,16 +13,6 @@\n \n package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n \n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.PARAM_BLOCK_ID_DESCRIPTION;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_NOT_FOUND;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n-import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_BEACON;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_BAD_REQUEST;\n-import static tech.pegasys.teku.infrastructure.http.HttpStatusCodes.SC_NOT_FOUND;\n-\n import com.fasterxml.jackson.core.JsonProcessingException;\n import io.javalin.http.Context;\n import io.javalin.http.Handler;\n"}}, {"oid": "cca82cbded8502f398f617c033821587a564cb5d", "url": "https://github.com/ConsenSys/teku/commit/cca82cbded8502f398f617c033821587a564cb5d", "message": "Add unit tests for ChainDataProvider", "committedDate": "2020-11-04T21:29:26Z", "type": "commit"}, {"oid": "0a03f4fa139da1c3c3330ae3d5029932a9a48fda", "url": "https://github.com/ConsenSys/teku/commit/0a03f4fa139da1c3c3330ae3d5029932a9a48fda", "message": "Implement integration tests", "committedDate": "2020-11-04T22:08:00Z", "type": "commit"}, {"oid": "bdcf15f8f832853339e42148d337857627b7bae4", "url": "https://github.com/ConsenSys/teku/commit/bdcf15f8f832853339e42148d337857627b7bae4", "message": "Run spotless", "committedDate": "2020-11-04T22:08:41Z", "type": "commit"}, {"oid": "9041dea5c62e5976174e384f6545e36c92a61dcf", "url": "https://github.com/ConsenSys/teku/commit/9041dea5c62e5976174e384f6545e36c92a61dcf", "message": "Merge remote-tracking branch 'remotes/origin/master' into implementApiV1BeaconBlockEndpoints\n\n# Conflicts:\n#\tdata/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/BeaconRestApi.java\n#\tdata/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/BeaconRestApiV1Test.java\n#\tdata/provider/src/test/java/tech/pegasys/teku/api/ChainDataProviderTest.java", "committedDate": "2020-11-04T22:33:59Z", "type": "commit"}, {"oid": "5cede80aadd9e564de4b4658ce90f52d2d9cf3be", "url": "https://github.com/ConsenSys/teku/commit/5cede80aadd9e564de4b4658ce90f52d2d9cf3be", "message": "Run spotless", "committedDate": "2020-11-04T22:34:13Z", "type": "commit"}, {"oid": "37e7feb9e62ca9553151ab88660e0b286cf3fd8a", "url": "https://github.com/ConsenSys/teku/commit/37e7feb9e62ca9553151ab88660e0b286cf3fd8a", "message": "Check block root not found gives a 404 in integration test", "committedDate": "2020-11-04T22:43:37Z", "type": "commit"}, {"oid": "f9ef10a9927339dafe0239d681d188776d173ae7", "url": "https://github.com/ConsenSys/teku/commit/f9ef10a9927339dafe0239d681d188776d173ae7", "message": "Run spotless", "committedDate": "2020-11-04T22:43:45Z", "type": "commit"}, {"oid": "ff1abaf35df3a20e85a3ea785fe890a27656a63a", "url": "https://github.com/ConsenSys/teku/commit/ff1abaf35df3a20e85a3ea785fe890a27656a63a", "message": "Merge branch 'master' into implementApiV1BeaconBlockEndpoints", "committedDate": "2020-11-05T03:10:03Z", "type": "commit"}, {"oid": "4198c8a56915af10f4d352f856a9aebb5c76248a", "url": "https://github.com/ConsenSys/teku/commit/4198c8a56915af10f4d352f856a9aebb5c76248a", "message": "Merge branch 'master' into implementApiV1BeaconBlockEndpoints", "committedDate": "2020-11-05T13:14:38Z", "type": "commit"}, {"oid": "16f31b6a35e3ca3168f0eb51a106091aa0011428", "url": "https://github.com/ConsenSys/teku/commit/16f31b6a35e3ca3168f0eb51a106091aa0011428", "message": "Merge branch 'master' into implementApiV1BeaconBlockEndpoints", "committedDate": "2020-11-05T13:27:40Z", "type": "commit"}]}