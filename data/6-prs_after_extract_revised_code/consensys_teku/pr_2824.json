{"pr_number": 2824, "pr_title": "[Issue 2273] Use the wsCheckpoint during finalized checkpoint validation", "pr_createdAt": "2020-09-18T20:16:00Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2824", "timeline": [{"oid": "4f45bcb2bc06cb95cf1d30afd10e863b44f83a31", "url": "https://github.com/ConsenSys/teku/commit/4f45bcb2bc06cb95cf1d30afd10e863b44f83a31", "message": "Add extra check if latest finalized checkpoint is at wsCheckpoint epoch", "committedDate": "2020-09-18T20:22:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxNDY2OQ==", "url": "https://github.com/ConsenSys/teku/pull/2824#discussion_r492214669", "bodyText": "nit: stale comment \"different root\"", "author": "cemozerr", "createdAt": "2020-09-21T17:05:09Z", "path": "ethereum/weaksubjectivity/src/test/java/tech/pegasys/teku/weaksubjectivity/WeakSubjectivityValidatorTest.java", "diffHunk": "@@ -69,22 +127,73 @@ public void validateLatestFinalizedCheckpoint_validationShouldFail() {\n   }\n \n   @Test\n-  public void validateLatestFinalizedCheckpoint_validationShouldPass() {\n+  public void\n+      validateLatestFinalizedCheckpoint_withWSCheckpoint_shouldRunChecksWhenFinalizeAfterCheckpoint_shouldPass() {\n+    final Checkpoint wsCheckpoint =\n+        new Checkpoint(UInt64.valueOf(100), Bytes32.fromHexStringLenient(\"0x01\"));\n+    final WeakSubjectivityValidator validator =\n+        new WeakSubjectivityValidator(calculator, policies, Optional.of(wsCheckpoint));\n+    when(checkpointState.getEpoch()).thenReturn(wsCheckpoint.getEpoch().plus(1));\n     when(calculator.isWithinWeakSubjectivityPeriod(checkpointState, currentSlot)).thenReturn(true);\n \n     validator.validateLatestFinalizedCheckpoint(checkpointState, currentSlot);\n \n-    for (WeakSubjectivityViolationPolicy policy : policies) {\n-      orderedPolicyMocks\n-          .verify(policy, never())\n-          .onFinalizedCheckpointOutsideOfWeakSubjectivityPeriod(any(), anyInt(), any());\n-    }\n+    verify(calculator).isWithinWeakSubjectivityPeriod(checkpointState, currentSlot);\n+    orderedPolicyMocks.verifyNoMoreInteractions();\n+  }\n+\n+  @Test\n+  public void\n+      validateLatestFinalizedCheckpoint_withWSCheckpoint_shouldRunChecksWhenFinalizeAtCheckpoint_shouldFail() {\n+    final Checkpoint wsCheckpoint =\n+        new Checkpoint(UInt64.valueOf(100), Bytes32.fromHexStringLenient(\"0x01\"));\n+    final WeakSubjectivityValidator validator =\n+        new WeakSubjectivityValidator(calculator, policies, Optional.of(wsCheckpoint));\n \n+    final int validatorCount = 101;\n+    // Checkpoint is at the ws epoch, but has a different root\n+    when(checkpointState.getEpoch()).thenReturn(wsCheckpoint.getEpoch());\n+    when(checkpointState.getRoot()).thenReturn(Bytes32.fromHexStringLenient(\"0x02\"));\n+    when(calculator.isWithinWeakSubjectivityPeriod(checkpointState, currentSlot)).thenReturn(true);\n+    when(calculator.getActiveValidators(checkpointState.getState())).thenReturn(validatorCount);\n+\n+    validator.validateLatestFinalizedCheckpoint(checkpointState, currentSlot);\n+\n+    orderedPolicyMocks\n+        .verify(policies.get(0))\n+        .onFinalizedCheckpointOutsideOfWeakSubjectivityPeriod(\n+            checkpointState, validatorCount, currentSlot);\n+    orderedPolicyMocks\n+        .verify(policies.get(1))\n+        .onFinalizedCheckpointOutsideOfWeakSubjectivityPeriod(\n+            checkpointState, validatorCount, currentSlot);\n+\n+    orderedPolicyMocks.verifyNoMoreInteractions();\n+  }\n+\n+  @Test\n+  public void\n+      validateLatestFinalizedCheckpoint_withWSCheckpoint_shouldRunChecksWhenFinalizeAtCheckpoint_shouldPass() {\n+    final Checkpoint wsCheckpoint =\n+        new Checkpoint(UInt64.valueOf(100), Bytes32.fromHexStringLenient(\"0x01\"));\n+    final WeakSubjectivityValidator validator =\n+        new WeakSubjectivityValidator(calculator, policies, Optional.of(wsCheckpoint));\n+    // Checkpoint is at the ws epoch, with the same root different root", "originalCommit": "4f45bcb2bc06cb95cf1d30afd10e863b44f83a31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f397e02a176f8a98842bc68039f29ea9a4dda107", "chunk": "diff --git a/ethereum/weaksubjectivity/src/test/java/tech/pegasys/teku/weaksubjectivity/WeakSubjectivityValidatorTest.java b/ethereum/weaksubjectivity/src/test/java/tech/pegasys/teku/weaksubjectivity/WeakSubjectivityValidatorTest.java\nindex 2f76cdb41f..37e4211ad6 100644\n--- a/ethereum/weaksubjectivity/src/test/java/tech/pegasys/teku/weaksubjectivity/WeakSubjectivityValidatorTest.java\n+++ b/ethereum/weaksubjectivity/src/test/java/tech/pegasys/teku/weaksubjectivity/WeakSubjectivityValidatorTest.java\n\n@@ -128,7 +128,7 @@ public class WeakSubjectivityValidatorTest {\n \n   @Test\n   public void\n-      validateLatestFinalizedCheckpoint_withWSCheckpoint_shouldRunChecksWhenFinalizeAfterCheckpoint_shouldPass() {\n+      validateLatestFinalizedCheckpoint_withWSCheckpoint_shouldSkipChecksWhenFinalizePriorToCheckpoint_shouldPass() {\n     final Checkpoint wsCheckpoint =\n         new Checkpoint(UInt64.valueOf(100), Bytes32.fromHexStringLenient(\"0x01\"));\n     final WeakSubjectivityValidator validator =\n"}}, {"oid": "f397e02a176f8a98842bc68039f29ea9a4dda107", "url": "https://github.com/ConsenSys/teku/commit/f397e02a176f8a98842bc68039f29ea9a4dda107", "message": "Skip validation if checkpoint is older than weakSubjectivity checkpoint", "committedDate": "2020-09-21T19:00:12Z", "type": "commit"}, {"oid": "eecabc12b9f6c36e9186b4800dcce09ce6ef45b8", "url": "https://github.com/ConsenSys/teku/commit/eecabc12b9f6c36e9186b4800dcce09ce6ef45b8", "message": "Add extra check if latest finalized checkpoint is at wsCheckpoint epoch", "committedDate": "2020-09-21T19:00:12Z", "type": "commit"}, {"oid": "eecabc12b9f6c36e9186b4800dcce09ce6ef45b8", "url": "https://github.com/ConsenSys/teku/commit/eecabc12b9f6c36e9186b4800dcce09ce6ef45b8", "message": "Add extra check if latest finalized checkpoint is at wsCheckpoint epoch", "committedDate": "2020-09-21T19:00:12Z", "type": "forcePushed"}, {"oid": "2b6fb525de1b2860942047939cff08cd70c297d7", "url": "https://github.com/ConsenSys/teku/commit/2b6fb525de1b2860942047939cff08cd70c297d7", "message": "Fix comment", "committedDate": "2020-09-21T19:04:10Z", "type": "commit"}]}