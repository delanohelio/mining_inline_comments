{"pr_number": 2715, "pr_title": "Persist discv5 local seqno and generated p2p private key", "pr_createdAt": "2020-09-02T13:14:49Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2715", "timeline": [{"oid": "1ee1d427a6b4148a04f452ce79dbc3b60a0cfa5c", "url": "https://github.com/ConsenSys/teku/commit/1ee1d427a6b4148a04f452ce79dbc3b60a0cfa5c", "message": "Store generated p2p private key in a database dir and reuse it if non user key is supplied", "committedDate": "2020-08-31T17:59:45Z", "type": "commit"}, {"oid": "6ca5eb0763abb1a19096897e8ee5627e035e152e", "url": "https://github.com/ConsenSys/teku/commit/6ca5eb0763abb1a19096897e8ee5627e035e152e", "message": "Log that p2p generated key is used to console", "committedDate": "2020-09-01T12:02:04Z", "type": "commit"}, {"oid": "1067c55f56cae2c899f6f1c26ee1c9cd3acef45d", "url": "https://github.com/ConsenSys/teku/commit/1067c55f56cae2c899f6f1c26ee1c9cd3acef45d", "message": "Add unit test gor generated p2p key", "committedDate": "2020-09-01T12:54:04Z", "type": "commit"}, {"oid": "0cf7ea8a64e32a26576ef192f83f41193ccb29f3", "url": "https://github.com/ConsenSys/teku/commit/0cf7ea8a64e32a26576ef192f83f41193ccb29f3", "message": "Temp commit", "committedDate": "2020-09-01T17:52:13Z", "type": "commit"}, {"oid": "5ca359858a087aff5d1ce2d2c14534d230220a15", "url": "https://github.com/ConsenSys/teku/commit/5ca359858a087aff5d1ce2d2c14534d230220a15", "message": "Move SyncDataAccessor to 'util' module", "committedDate": "2020-09-01T18:15:06Z", "type": "commit"}, {"oid": "81a7f92449b82b98b5687f69ebd2d6dc7df118e1", "url": "https://github.com/ConsenSys/teku/commit/81a7f92449b82b98b5687f69ebd2d6dc7df118e1", "message": "Fix output wording\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-09-02T05:36:05Z", "type": "commit"}, {"oid": "0172bee2582e7b893022aba35b6a873bdc676ebe", "url": "https://github.com/ConsenSys/teku/commit/0172bee2582e7b893022aba35b6a873bdc676ebe", "message": "Apply spotless", "committedDate": "2020-09-02T09:28:46Z", "type": "commit"}, {"oid": "d6172ed9b2419506d2581a3e224c71358e1db01e", "url": "https://github.com/ConsenSys/teku/commit/d6172ed9b2419506d2581a3e224c71358e1db01e", "message": "Add KeyValueStore as a generic store where misc data from various components can be persisted", "committedDate": "2020-09-02T11:04:33Z", "type": "commit"}, {"oid": "733839fe5d2333c81fb9525b11732657f7b6bf6d", "url": "https://github.com/ConsenSys/teku/commit/733839fe5d2333c81fb9525b11732657f7b6bf6d", "message": "Need to increment the latest seqNo on startup", "committedDate": "2020-09-02T11:40:14Z", "type": "commit"}, {"oid": "3bbb1dfbd058284650fcff86799c23718084bdb4", "url": "https://github.com/ConsenSys/teku/commit/3bbb1dfbd058284650fcff86799c23718084bdb4", "message": "Add javadoc, minor changes", "committedDate": "2020-09-02T12:51:46Z", "type": "commit"}, {"oid": "3a5dbd42d9c3e32e6239639640b89727cd06e1f5", "url": "https://github.com/ConsenSys/teku/commit/3a5dbd42d9c3e32e6239639640b89727cd06e1f5", "message": "Update discovery version", "committedDate": "2020-09-02T13:42:49Z", "type": "commit"}, {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "url": "https://github.com/ConsenSys/teku/commit/c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "message": "Fix the discovery version", "committedDate": "2020-09-02T13:49:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2ODE3Nw==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482268177", "bodyText": "Can we add some tests for this class?", "author": "mbaxter", "createdAt": "2020-09-02T18:10:48Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.util.file.SyncDataAccessor;\n+\n+/**\n+ * The key-value store implementation with String keys and Bytes values which stores each entry in a\n+ * separate file named {@code <key>.dat} in the specified directory\n+ */\n+public class FileKeyValueStore implements KeyValueStore<String, Bytes> {", "originalCommit": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "484c40ed18cf32785b13f88c7ce94997be122cbc", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java b/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\nindex 0d11017d51..da6f8c939d 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\n\n@@ -33,19 +33,21 @@ public class FileKeyValueStore implements KeyValueStore<String, Bytes> {\n   }\n \n   @Override\n-  public void put(@NotNull String key, Bytes value) {\n+  public void put(@NotNull String key, @NotNull Bytes value) {\n     Path file = dataDir.resolve(key + \".dat\");\n     try {\n-      if (value == null) {\n-        file.toFile().delete();\n-      } else {\n-        new SyncDataAccessor().syncedWrite(file, value);\n-      }\n+      new SyncDataAccessor().syncedWrite(file, value);\n     } catch (IOException e) {\n       throw new RuntimeException(\"Error writing file: \" + file, e);\n     }\n   }\n \n+  @Override\n+  public void remove(@NotNull String key) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    file.toFile().delete();\n+  }\n+\n   @Override\n   public Optional<Bytes> get(@NotNull String key) {\n     Path file = dataDir.resolve(key + \".dat\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTExMg==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482271112", "bodyText": "(nit) Might be more explicit to have a del() method instead of accepting null values.", "author": "mbaxter", "createdAt": "2020-09-02T18:16:09Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Generic simple key-value store interface Both key and value are not allowed to be null\n+ *\n+ * @param <TKey> key type\n+ * @param <TValue> value type\n+ */\n+public interface KeyValueStore<TKey, TValue> {\n+\n+  /** Puts a new value. If the value is {@code null} then the entry is removed if exist */", "originalCommit": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NDY0OA==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483444648", "bodyText": "Yeah, though about it, but it makes batch update code a bit larger. But anyway the reason is rather my laziness than some rationality. Updated!", "author": "Nashatyrev", "createdAt": "2020-09-04T07:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTExMg=="}], "type": "inlineReview", "revised_code": {"commit": "484c40ed18cf32785b13f88c7ce94997be122cbc", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java b/storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java\nindex d9cd57c328..d9be03532a 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java\n\n@@ -25,7 +25,10 @@ import org.jetbrains.annotations.NotNull;\n public interface KeyValueStore<TKey, TValue> {\n \n   /** Puts a new value. If the value is {@code null} then the entry is removed if exist */\n-  void put(@NotNull TKey key, TValue value);\n+  void put(@NotNull TKey key, @NotNull TValue value);\n+\n+  /** Removes entry with the specified key */\n+  void remove(@NotNull TKey key);\n \n   /**\n    * Returns a value corresponding to the key or {{@link Optional#empty()}} if entry doesn't exist\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3NDI3Mw==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482274273", "bodyText": "It's probably worth isolating these files in a subdirectory: data/kvstore?", "author": "mbaxter", "createdAt": "2020-09-02T18:19:55Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -414,6 +417,8 @@ public void initP2PNetwork() {\n \n       p2pConfig.validateListenPortAvailable();\n       final Eth2Config eth2Config = new Eth2Config(config.isP2pSnappyEnabled());\n+      final KeyValueStore<String, Bytes> keyValueStore =\n+          new FileKeyValueStore(Path.of(config.getDataPath()));", "originalCommit": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c33c52ebd0992306288caf7728cff8571876e5a", "chunk": "diff --git a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java\nindex 856fd748bd..6210fc439c 100644\n--- a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java\n+++ b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java\n\n@@ -418,7 +420,7 @@ public class BeaconChainController extends Service implements TimeTickChannel {\n       p2pConfig.validateListenPortAvailable();\n       final Eth2Config eth2Config = new Eth2Config(config.isP2pSnappyEnabled());\n       final KeyValueStore<String, Bytes> keyValueStore =\n-          new FileKeyValueStore(Path.of(config.getDataPath()));\n+          new FileKeyValueStore(Path.of(config.getDataPath(), KEY_VALUE_STORE_SUBDIRECTORY));\n \n       this.p2pNetwork =\n           Eth2NetworkBuilder.create()\n"}}, {"oid": "b6fe5775038a17c3b7916a8ea4b82efcaf81501e", "url": "https://github.com/ConsenSys/teku/commit/b6fe5775038a17c3b7916a8ea4b82efcaf81501e", "message": "Update discovery artifact version", "committedDate": "2020-09-04T07:23:34Z", "type": "commit"}, {"oid": "484c40ed18cf32785b13f88c7ce94997be122cbc", "url": "https://github.com/ConsenSys/teku/commit/484c40ed18cf32785b13f88c7ce94997be122cbc", "message": "Add KeyValueStorage.remove() method instead of put(key, null)", "committedDate": "2020-09-04T07:39:55Z", "type": "commit"}, {"oid": "6c33c52ebd0992306288caf7728cff8571876e5a", "url": "https://github.com/ConsenSys/teku/commit/6c33c52ebd0992306288caf7728cff8571876e5a", "message": "Put files for FileKeyValueStore to a datadir subdirectory", "committedDate": "2020-09-04T07:52:05Z", "type": "commit"}, {"oid": "271b72b3fddd231d6d24f5618037e9756e1e61c8", "url": "https://github.com/ConsenSys/teku/commit/271b72b3fddd231d6d24f5618037e9756e1e61c8", "message": "Make FileKeyValueStore thread-safe", "committedDate": "2020-09-04T09:06:47Z", "type": "commit"}, {"oid": "f9ce44aee5177d425637352d50e381777b29c774", "url": "https://github.com/ConsenSys/teku/commit/f9ce44aee5177d425637352d50e381777b29c774", "message": "Add FileKeyValueStoreTest", "committedDate": "2020-09-04T09:08:21Z", "type": "commit"}, {"oid": "ad463ca5d7521d7ee35550e957f361f8f9ad7353", "url": "https://github.com/ConsenSys/teku/commit/ad463ca5d7521d7ee35550e957f361f8f9ad7353", "message": "Resolve merge conflicts", "committedDate": "2020-09-04T09:23:39Z", "type": "commit"}, {"oid": "aef30e0a3e5ae87de413620c711f7fc09fcd32f7", "url": "https://github.com/ConsenSys/teku/commit/aef30e0a3e5ae87de413620c711f7fc09fcd32f7", "message": "Resolve merge conflicts - 2", "committedDate": "2020-09-04T09:31:48Z", "type": "commit"}, {"oid": "5c828c03a233eca34a9cba7a2a2b06dd81977b18", "url": "https://github.com/ConsenSys/teku/commit/5c828c03a233eca34a9cba7a2a2b06dd81977b18", "message": "Fix warns", "committedDate": "2020-09-04T09:43:39Z", "type": "commit"}, {"oid": "028494f44778cfd707885a01887d78072094fc0d", "url": "https://github.com/ConsenSys/teku/commit/028494f44778cfd707885a01887d78072094fc0d", "message": "Merge branch 'feature-store-generated-p2p-priv-key' into feature-persist-discv5-local-seqno", "committedDate": "2020-09-04T09:53:27Z", "type": "commit"}, {"oid": "01056ef604f603758079aa1e5174861eecf5714e", "url": "https://github.com/ConsenSys/teku/commit/01056ef604f603758079aa1e5174861eecf5714e", "message": "Make BeaconChainController.getP2pPrivateKeyBytes() using KeyValueStore", "committedDate": "2020-09-04T10:09:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4MzEyMQ==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483583121", "bodyText": "nit: keyKey? Maybe just key?", "author": "ajsutton", "createdAt": "2020-09-04T12:26:14Z", "path": "logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java", "diffHunk": "@@ -161,4 +161,12 @@ public void eth1ServiceDown(final long interval) {\n   public void eth1AtHead() {\n     log.info(\"Eth1 tracker successfully caught up to chain head\");\n   }\n+\n+  public void usingGeneratedP2pPrivateKey(final String keyKey, final boolean justGenerated) {", "originalCommit": "01056ef604f603758079aa1e5174861eecf5714e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY1MTQ1OQ==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483651459", "bodyText": "It's a key for a private key \ud83d\ude04\nBut ok, will change", "author": "Nashatyrev", "createdAt": "2020-09-04T14:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4MzEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "486c19bc1401ab331d7869a3621c0c17d869bf0d", "chunk": "diff --git a/logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java b/logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java\nindex d4496557e8..c7af36df9a 100644\n--- a/logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java\n+++ b/logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java\n\n@@ -162,11 +162,11 @@ public class StatusLogger {\n     log.info(\"Eth1 tracker successfully caught up to chain head\");\n   }\n \n-  public void usingGeneratedP2pPrivateKey(final String keyKey, final boolean justGenerated) {\n+  public void usingGeneratedP2pPrivateKey(final String key, final boolean justGenerated) {\n     if (justGenerated) {\n-      log.info(\"Generated new p2p private key and storing in: \" + keyKey);\n+      log.info(\"Generated new p2p private key and storing in: \" + key);\n     } else {\n-      log.info(\"Loading generated p2p private key from: \" + keyKey);\n+      log.info(\"Loading generated p2p private key from: \" + key);\n     }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NDQ5Ng==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483584496", "bodyText": "nit: Would be good to reuse a single instance of SyncDataAccessor - just store it in a final field.", "author": "ajsutton", "createdAt": "2020-09-04T12:29:15Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.infrastructure.io.SyncDataAccessor;\n+\n+/**\n+ * The key-value store implementation with String keys and Bytes values which stores each entry in a\n+ * separate file named {@code <key>.dat} in the specified directory\n+ *\n+ * <p>This implementation is thread-safe\n+ */\n+public class FileKeyValueStore implements KeyValueStore<String, Bytes> {\n+\n+  private final Path dataDir;\n+  private final ConcurrentMap<String, Object> keyMutexes = new ConcurrentHashMap<>();\n+\n+  public FileKeyValueStore(Path dataDir) {\n+    this.dataDir = dataDir;\n+  }\n+\n+  private Object keyMutex(String key) {\n+    // there supposed to be a very limited number of keys so\n+    // we don't clean up the map for the sake of simplicity\n+    return keyMutexes.computeIfAbsent(key, __ -> new Object());\n+  }\n+\n+  @Override\n+  public void put(@NotNull String key, @NotNull Bytes value) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    try {\n+      synchronized (keyMutex(key)) {\n+        new SyncDataAccessor().syncedWrite(file, value);\n+      }\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Error writing file: \" + file, e);\n+    }\n+  }\n+\n+  @Override\n+  public void remove(@NotNull String key) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    synchronized (keyMutex(key)) {\n+      file.toFile().delete();\n+    }\n+  }\n+\n+  @Override\n+  public Optional<Bytes> get(@NotNull String key) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    try {\n+      synchronized (keyMutex(key)) {\n+        return new SyncDataAccessor().read(file);", "originalCommit": "01056ef604f603758079aa1e5174861eecf5714e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY1MTkwNg==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483651906", "bodyText": "Ok, but does it make sense to make SyncDataAccessor methods static?", "author": "Nashatyrev", "createdAt": "2020-09-04T14:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NDQ5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg4ODA3MQ==", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483888071", "bodyText": "They're not static so that we can replace it with a mock when testing things that use it.  So usually rather than create an instance in the class I'd pass it into the constructor (plain java dependency injection basically).", "author": "ajsutton", "createdAt": "2020-09-05T00:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NDQ5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "486c19bc1401ab331d7869a3621c0c17d869bf0d", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java b/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\nindex 514ef3ed5f..7a29597854 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java\n\n@@ -30,6 +30,7 @@ import tech.pegasys.teku.infrastructure.io.SyncDataAccessor;\n  */\n public class FileKeyValueStore implements KeyValueStore<String, Bytes> {\n \n+  private final SyncDataAccessor syncDataAccessor = new SyncDataAccessor();\n   private final Path dataDir;\n   private final ConcurrentMap<String, Object> keyMutexes = new ConcurrentHashMap<>();\n \n"}}, {"oid": "486c19bc1401ab331d7869a3621c0c17d869bf0d", "url": "https://github.com/ConsenSys/teku/commit/486c19bc1401ab331d7869a3621c0c17d869bf0d", "message": "Minor fixes", "committedDate": "2020-09-04T14:32:46Z", "type": "commit"}]}