{"pr_number": 3369, "pr_title": "Set the default log file pattern to use the path from the data-path.", "pr_createdAt": "2020-12-07T04:33:09Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3369", "timeline": [{"oid": "62ad8730dac55f6fec21e5b82e264a6d54e492d6", "url": "https://github.com/ConsenSys/teku/commit/62ad8730dac55f6fec21e5b82e264a6d54e492d6", "message": "Set the default log file pattern to use the path from the data-path.\n\nfixes #3360\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-12-07T04:32:20Z", "type": "commit"}, {"oid": "c6b3a1b25c71d904d8feef179bf8fba1109f25cc", "url": "https://github.com/ConsenSys/teku/commit/c6b3a1b25c71d904d8feef179bf8fba1109f25cc", "message": "Merge remote-tracking branch 'upstream/master' into 3360", "committedDate": "2020-12-07T05:05:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzNzkyMg==", "url": "https://github.com/ConsenSys/teku/pull/3369#discussion_r537237922", "bodyText": "So, turns out this should have taken into account whether it was the validator or not too.  Result should be the same as the default log file but with _%d{yyyy-MM-dd} inserted before the .log extension.", "author": "ajsutton", "createdAt": "2020-12-07T05:19:45Z", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java", "diffHunk": "@@ -160,4 +161,15 @@ public static String getDefaultLogFileGivenDataDir(String dataPath, boolean isVa\n       return dataPath + SEP + \"logs\" + SEP + \"teku.log\";\n     }\n   }\n+\n+  public static String getLogPatternGivenDataDir(\n+      final String dataPath, final String logFileNamePattern) {\n+    if (logFileNamePattern.equals(DEFAULT_LOG_PATH_PATTERN)) {\n+      return StringUtils.joinWith(SEP, dataPath, \"logs\", DEFAULT_LOG_FILE_NAME_PATTERN);\n+    }\n+    if (!logFileNamePattern.contains(SEP)) {\n+      return StringUtils.joinWith(SEP, dataPath, \"logs\", logFileNamePattern);\n+    }\n+    return logFileNamePattern;\n+  }", "originalCommit": "c6b3a1b25c71d904d8feef179bf8fba1109f25cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eaf716210afe2c20ed9e50dddd01f9e51a70f4ec", "chunk": "diff --git a/teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java b/teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java\nindex f80e17b2f..8bc0dcaa3 100644\n--- a/teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java\n+++ b/teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java\n\n@@ -163,9 +164,10 @@ public class LoggingOptions {\n   }\n \n   public static String getLogPatternGivenDataDir(\n-      final String dataPath, final String logFileNamePattern) {\n+      final String dataPath, final String logFileNamePattern, final boolean isValidator) {\n     if (logFileNamePattern.equals(DEFAULT_LOG_PATH_PATTERN)) {\n-      return StringUtils.joinWith(SEP, dataPath, \"logs\", DEFAULT_LOG_FILE_NAME_PATTERN);\n+      return StringUtils.joinWith(SEP, dataPath, \"logs\",\n+          (isValidator ? DEFAULT_VALIDATOR_LOG_FILE_NAME_PATTERN : DEFAULT_LOG_FILE_NAME_PATTERN));\n     }\n     if (!logFileNamePattern.contains(SEP)) {\n       return StringUtils.joinWith(SEP, dataPath, \"logs\", logFileNamePattern);\n"}}, {"oid": "eaf716210afe2c20ed9e50dddd01f9e51a70f4ec", "url": "https://github.com/ConsenSys/teku/commit/eaf716210afe2c20ed9e50dddd01f9e51a70f4ec", "message": "initial review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-12-07T05:42:05Z", "type": "commit"}, {"oid": "f762ad8a4ef279003d1feed225654a1c652e122f", "url": "https://github.com/ConsenSys/teku/commit/f762ad8a4ef279003d1feed225654a1c652e122f", "message": "refactor logging pattern into a builder to get better consistency.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-12-07T10:16:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzODk4MQ==", "url": "https://github.com/ConsenSys/teku/pull/3369#discussion_r537838981", "bodyText": "Nice. That's going to fix a very common problem for people who just specify the filename instead of the whole path.", "author": "ajsutton", "createdAt": "2020-12-07T21:16:59Z", "path": "teku/src/main/java/tech/pegasys/teku/cli/util/LoggingPathBuilder.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.cli.util;\n+\n+import java.util.Optional;\n+import org.apache.commons.lang3.StringUtils;\n+import tech.pegasys.teku.util.cli.VersionProvider;\n+\n+public class LoggingPathBuilder {\n+  public static final String SEP = System.getProperty(\"file.separator\");\n+  private String defaultPath = VersionProvider.defaultStoragePath();\n+  private Optional<String> dataPath = Optional.empty();\n+  private String fromCommandLine;\n+  private String defaultBasename;\n+\n+  public LoggingPathBuilder defaultBasename(final String defaultBasename) {\n+    this.defaultBasename = defaultBasename;\n+    return this;\n+  }\n+\n+  public LoggingPathBuilder dataPath(final String dataPath) {\n+    this.dataPath = Optional.of(dataPath);\n+    return this;\n+  }\n+\n+  public LoggingPathBuilder fromCommandLine(final String path) {\n+    this.fromCommandLine = path;\n+    return this;\n+  }\n+\n+  public String build() {\n+    if (StringUtils.isNotEmpty(fromCommandLine)) {\n+      if (fromCommandLine.contains(SEP)) {\n+        return fromCommandLine;\n+      } else {\n+        return StringUtils.joinWith(SEP, dataPath.orElse(defaultPath), \"logs\", fromCommandLine);\n+      }", "originalCommit": "f762ad8a4ef279003d1feed225654a1c652e122f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}