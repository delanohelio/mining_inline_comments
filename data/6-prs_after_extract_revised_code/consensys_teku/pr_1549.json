{"pr_number": 1549, "pr_title": "Correct module namings", "pr_createdAt": "2020-04-07T19:20:39Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1549", "timeline": [{"oid": "6374b0f29c63367d04e25cfe4eab40309a1acd01", "url": "https://github.com/ConsenSys/teku/commit/6374b0f29c63367d04e25cfe4eab40309a1acd01", "message": "Correct ssz module name", "committedDate": "2020-04-07T19:20:11Z", "type": "commit"}, {"oid": "daebf3a5f346464abcb05d235e1f242dcc6130ae", "url": "https://github.com/ConsenSys/teku/commit/daebf3a5f346464abcb05d235e1f242dcc6130ae", "message": "Correct ssz test module name", "committedDate": "2020-04-07T19:21:29Z", "type": "commit"}, {"oid": "6ced1dee54cb854ae1cb3710be3c7a5851488d1b", "url": "https://github.com/ConsenSys/teku/commit/6ced1dee54cb854ae1cb3710be3c7a5851488d1b", "message": "Correct ssz benchmark module name", "committedDate": "2020-04-07T19:22:15Z", "type": "commit"}, {"oid": "d93dd831286e78d6bad3d505aed8bb245d113f1d", "url": "https://github.com/ConsenSys/teku/commit/d93dd831286e78d6bad3d505aed8bb245d113f1d", "message": "Correct bls main module name", "committedDate": "2020-04-07T19:23:12Z", "type": "commit"}, {"oid": "006e8a5509e09d70b2773361ed28505dda7e3c36", "url": "https://github.com/ConsenSys/teku/commit/006e8a5509e09d70b2773361ed28505dda7e3c36", "message": "Correct bls test module name", "committedDate": "2020-04-07T19:23:49Z", "type": "commit"}, {"oid": "52d50d3011e6d5a314317e02a4289bc4130a3bec", "url": "https://github.com/ConsenSys/teku/commit/52d50d3011e6d5a314317e02a4289bc4130a3bec", "message": "Correct bls testFixtures module name", "committedDate": "2020-04-07T19:25:08Z", "type": "commit"}, {"oid": "f615578f52e8b75c96f9215b0380faf4e3d92f29", "url": "https://github.com/ConsenSys/teku/commit/f615578f52e8b75c96f9215b0380faf4e3d92f29", "message": "Correct bls benchmark module name", "committedDate": "2020-04-07T19:25:42Z", "type": "commit"}, {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "url": "https://github.com/ConsenSys/teku/commit/1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "message": "Fix refactoring bugs & run spotless", "committedDate": "2020-04-07T19:36:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NjY3MQ==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405056671", "bodyText": "Probably worth going back to importing BitView directly here instead of needing the prefix everywhere (suspect IntelliJ did this to you).", "author": "ajsutton", "createdAt": "2020-04-07T19:24:48Z", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java", "diffHunk": "@@ -11,31 +11,27 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.type;\n+package tech.pegasys.artemis.ssz.backing.type;\n \n import static com.google.common.base.Preconditions.checkArgument;\n \n import java.nio.ByteOrder;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n import org.apache.tuweni.bytes.MutableBytes32;\n-import tech.pegasys.artemis.util.SSZTypes.Bytes4;\n-import tech.pegasys.artemis.util.backing.ViewRead;\n-import tech.pegasys.artemis.util.backing.tree.TreeNode;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes32View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes4View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.UInt64View;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bytes4;\n+import tech.pegasys.artemis.ssz.backing.ViewRead;\n+import tech.pegasys.artemis.ssz.backing.tree.TreeNode;\n \n /** The collection of commonly used basic types */\n public class BasicViewTypes {\n \n-  public static final BasicViewType<BitView> BIT_TYPE =\n+  public static final BasicViewType<BasicViews.BitView> BIT_TYPE =\n       new BasicViewType<>(1) {\n         @Override\n-        public BitView createFromBackingNode(TreeNode node, int idx) {\n-          return new BitView((node.hashTreeRoot().get(idx / 8) & (1 << (idx % 8))) != 0);\n+        public BasicViews.BitView createFromBackingNode(TreeNode node, int idx) {", "originalCommit": "d93dd831286e78d6bad3d505aed8bb245d113f1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTQxOA==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405111418", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-07T21:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NjY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java\nindex 2aec2fdcb4..2a7315b1b7 100644\n--- a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java\n+++ b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java\n\n@@ -19,10 +19,10 @@ import java.nio.ByteOrder;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n import org.apache.tuweni.bytes.MutableBytes32;\n-import tech.pegasys.artemis.ssz.backing.view.BasicViews;\n import tech.pegasys.artemis.ssz.SSZTypes.Bytes4;\n import tech.pegasys.artemis.ssz.backing.ViewRead;\n import tech.pegasys.artemis.ssz.backing.tree.TreeNode;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews;\n \n /** The collection of commonly used basic types */\n public class BasicViewTypes {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NTUwOA==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405065508", "bodyText": "Would be good to restore the static import for hashToG2.", "author": "ajsutton", "createdAt": "2020-04-07T19:41:11Z", "path": "bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java", "diffHunk": "@@ -56,7 +55,7 @@\n    * @return The Signature, not null\n    */\n   public static Signature sign(SecretKey secretKey, Bytes message) {\n-    G2Point hashInGroup2 = new G2Point(hashToG2(message));\n+    G2Point hashInGroup2 = new G2Point(HashToCurve.hashToG2(message));", "originalCommit": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTQ4Ng==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405111486", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-07T21:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NTUwOA=="}], "type": "inlineReview", "revised_code": {"commit": "701194c7f990a353bb384d17f2ca8268d1c74ecb", "chunk": "diff --git a/bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java b/bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java\nindex b779e4fdfe..d8b8e7c78d 100644\n--- a/bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java\n+++ b/bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java\n\n@@ -55,7 +56,7 @@ public final class BLS12381 {\n    * @return The Signature, not null\n    */\n   public static Signature sign(SecretKey secretKey, Bytes message) {\n-    G2Point hashInGroup2 = new G2Point(HashToCurve.hashToG2(message));\n+    G2Point hashInGroup2 = new G2Point(hashToG2(message));\n     return new Signature(secretKey.sign(hashInGroup2));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2Njk3OQ==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405066979", "bodyText": "nit: May as well keep the import for LeafNodeImpl.", "author": "ajsutton", "createdAt": "2020-04-07T19:44:00Z", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java", "diffHunk": "@@ -32,7 +31,7 @@\n public interface TreeNode {\n \n   static TreeNode createLeafNode(Bytes32 val) {\n-    return new LeafNodeImpl(val);\n+    return new TreeNodeImpl.LeafNodeImpl(val);", "originalCommit": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMjc4MA==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405112780", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-07T21:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2Njk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "701194c7f990a353bb384d17f2ca8268d1c74ecb", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java\nindex 609f8fb031..55a3a496dd 100644\n--- a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java\n+++ b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java\n\n@@ -31,7 +32,7 @@ import org.jetbrains.annotations.NotNull;\n public interface TreeNode {\n \n   static TreeNode createLeafNode(Bytes32 val) {\n-    return new TreeNodeImpl.LeafNodeImpl(val);\n+    return new LeafNodeImpl(val);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzM0Mw==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405067343", "bodyText": "nit: Import ListContainerRead and UInt64View directly.", "author": "ajsutton", "createdAt": "2020-04-07T19:44:42Z", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java", "diffHunk": "@@ -36,17 +34,18 @@\n       extends ContainerViewWriteImpl {\n     private final VectorViewType<ElementReadType> vectorType;\n \n-    public ListContainerWrite(ListContainerRead<ElementReadType> backingImmutableView) {\n+    public ListContainerWrite(\n+        ListViewReadImpl.ListContainerRead<ElementReadType> backingImmutableView) {", "originalCommit": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExNDY4Ng==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405114686", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-07T21:09:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzM0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "701194c7f990a353bb384d17f2ca8268d1c74ecb", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java\nindex 54cd0cd5ba..4f51b1bd25 100644\n--- a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java\n+++ b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java\n\n@@ -34,18 +37,17 @@ public class ListViewWriteImpl<\n       extends ContainerViewWriteImpl {\n     private final VectorViewType<ElementReadType> vectorType;\n \n-    public ListContainerWrite(\n-        ListViewReadImpl.ListContainerRead<ElementReadType> backingImmutableView) {\n+    public ListContainerWrite(ListContainerRead<ElementReadType> backingImmutableView) {\n       super(backingImmutableView);\n       vectorType = backingImmutableView.getVectorType();\n     }\n \n     public int getSize() {\n-      return (int) ((BasicViews.UInt64View) get(1)).longValue();\n+      return (int) ((UInt64View) get(1)).longValue();\n     }\n \n     public void setSize(int size) {\n-      set(1, BasicViews.UInt64View.fromLong(size));\n+      set(1, UInt64View.fromLong(size));\n     }\n \n     public VectorViewWriteRef<ElementReadType, ElementWriteType> getData() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzU1Nw==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405067557", "bodyText": "nit: Direct import for ByteView and BitView.", "author": "ajsutton", "createdAt": "2020-04-07T19:45:06Z", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java", "diffHunk": "@@ -11,38 +11,37 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.view;\n+package tech.pegasys.artemis.ssz.backing.view;\n \n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.MutableBytes;\n-import tech.pegasys.artemis.util.SSZTypes.Bitlist;\n-import tech.pegasys.artemis.util.SSZTypes.Bitvector;\n-import tech.pegasys.artemis.util.backing.ListViewRead;\n-import tech.pegasys.artemis.util.backing.ListViewWrite;\n-import tech.pegasys.artemis.util.backing.VectorViewRead;\n-import tech.pegasys.artemis.util.backing.VectorViewWrite;\n-import tech.pegasys.artemis.util.backing.type.BasicViewTypes;\n-import tech.pegasys.artemis.util.backing.type.ListViewType;\n-import tech.pegasys.artemis.util.backing.type.VectorViewType;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitlist;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitvector;\n+import tech.pegasys.artemis.ssz.backing.ListViewRead;\n+import tech.pegasys.artemis.ssz.backing.ListViewWrite;\n+import tech.pegasys.artemis.ssz.backing.VectorViewRead;\n+import tech.pegasys.artemis.ssz.backing.VectorViewWrite;\n+import tech.pegasys.artemis.ssz.backing.type.BasicViewTypes;\n+import tech.pegasys.artemis.ssz.backing.type.ListViewType;\n+import tech.pegasys.artemis.ssz.backing.type.VectorViewType;\n \n /** Handy view tool methods */\n public class ViewUtils {\n \n   /** Creates immutable vector of bytes with size `bytes.size()` from {@link Bytes} value */\n-  public static VectorViewRead<ByteView> createVectorFromBytes(Bytes bytes) {\n-    VectorViewType<ByteView> type = new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n+  public static VectorViewRead<BasicViews.ByteView> createVectorFromBytes(Bytes bytes) {\n+    VectorViewType<BasicViews.ByteView> type =\n+        new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n     // TODO optimize\n-    VectorViewWrite<ByteView> ret = type.getDefault().createWritableCopy();\n+    VectorViewWrite<BasicViews.ByteView> ret = type.getDefault().createWritableCopy();", "originalCommit": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExNzI4NA==", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405117284", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-07T21:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzU1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "701194c7f990a353bb384d17f2ca8268d1c74ecb", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java\nindex a98c6da483..8e409ef66a 100644\n--- a/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java\n+++ b/ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java\n\n@@ -24,24 +24,25 @@ import tech.pegasys.artemis.ssz.backing.VectorViewWrite;\n import tech.pegasys.artemis.ssz.backing.type.BasicViewTypes;\n import tech.pegasys.artemis.ssz.backing.type.ListViewType;\n import tech.pegasys.artemis.ssz.backing.type.VectorViewType;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews.BitView;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews.ByteView;\n \n /** Handy view tool methods */\n public class ViewUtils {\n \n   /** Creates immutable vector of bytes with size `bytes.size()` from {@link Bytes} value */\n-  public static VectorViewRead<BasicViews.ByteView> createVectorFromBytes(Bytes bytes) {\n-    VectorViewType<BasicViews.ByteView> type =\n-        new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n+  public static VectorViewRead<ByteView> createVectorFromBytes(Bytes bytes) {\n+    VectorViewType<ByteView> type = new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n     // TODO optimize\n-    VectorViewWrite<BasicViews.ByteView> ret = type.getDefault().createWritableCopy();\n+    VectorViewWrite<ByteView> ret = type.getDefault().createWritableCopy();\n     for (int i = 0; i < bytes.size(); i++) {\n-      ret.set(i, new BasicViews.ByteView(bytes.get(i)));\n+      ret.set(i, new ByteView(bytes.get(i)));\n     }\n     return ret.commitChanges();\n   }\n \n   /** Retrieve bytes from vector of bytes to a {@link Bytes} instance */\n-  public static Bytes getAllBytes(VectorViewRead<BasicViews.ByteView> vector) {\n+  public static Bytes getAllBytes(VectorViewRead<ByteView> vector) {\n     // TODO optimize\n     MutableBytes bytes = MutableBytes.create((int) vector.getType().getMaxLength());\n     for (int i = 0; i < bytes.size(); i++) {\n"}}, {"oid": "6255a2de09dcb517b6f259beb0528204e2570738", "url": "https://github.com/ConsenSys/teku/commit/6255a2de09dcb517b6f259beb0528204e2570738", "message": "Merge remote-tracking branch 'remotes/origin/master' into correctModuleNamings\n\n# Conflicts:\n#\tvalidator/client/src/main/java/tech/pegasys/artemis/validator/client/DutyScheduler.java\n#\tvalidator/client/src/test/java/tech/pegasys/artemis/validator/client/DutySchedulerTest.java\n#\tvalidator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/CommitteeAssignmentManager.java", "committedDate": "2020-04-07T19:48:58Z", "type": "commit"}, {"oid": "12769ccf4add79cc6432c24d22412ed6638fd0d9", "url": "https://github.com/ConsenSys/teku/commit/12769ccf4add79cc6432c24d22412ed6638fd0d9", "message": "Fix merge conflicts", "committedDate": "2020-04-07T20:47:06Z", "type": "commit"}, {"oid": "9e53e912e7f9eb24fa29dbe86689790b49205b81", "url": "https://github.com/ConsenSys/teku/commit/9e53e912e7f9eb24fa29dbe86689790b49205b81", "message": "Perform aggregation duties in validator client service (#1547)", "committedDate": "2020-04-07T19:34:04Z", "type": "forcePushed"}, {"oid": "701194c7f990a353bb384d17f2ca8268d1c74ecb", "url": "https://github.com/ConsenSys/teku/commit/701194c7f990a353bb384d17f2ca8268d1c74ecb", "message": "Resolve issues in comments", "committedDate": "2020-04-07T21:16:47Z", "type": "commit"}]}