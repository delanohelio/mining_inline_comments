{"pr_number": 3383, "pr_title": "Add weighted participation metrics", "pr_createdAt": "2020-12-09T19:23:33Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3383", "timeline": [{"oid": "327a2fe34ac924069e6a589d5fb8ce9967576afc", "url": "https://github.com/ConsenSys/teku/commit/327a2fe34ac924069e6a589d5fb8ce9967576afc", "message": "Use a static totalBalance to update beacon chain metrics", "committedDate": "2020-12-09T19:17:48Z", "type": "commit"}, {"oid": "965b0a69cb2649a171d4081c04525741032a05c0", "url": "https://github.com/ConsenSys/teku/commit/965b0a69cb2649a171d4081c04525741032a05c0", "message": "Update total balances static variable when processing epoch", "committedDate": "2020-12-09T19:20:07Z", "type": "commit"}, {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422", "url": "https://github.com/ConsenSys/teku/commit/d0911ef0d020c0cc353cd641c264ff2d20618422", "message": "Run spotless", "committedDate": "2020-12-09T19:20:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539601023", "bodyText": "do we need to make sure the StateAndBlockSummary are current epoch?  If we change epoch and there's an empty slot it might not match?", "author": "rolfyone", "createdAt": "2020-12-09T19:52:47Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +175,57 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();", "originalCommit": "d0911ef0d020c0cc353cd641c264ff2d20618422", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4ODEyMA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540688120", "bodyText": "Hmm, good question.  It won't have updated if there's an empty slot but it will then update when the next block is received so it's probably not a big deal.  The alternative would be to use retrieveStateAtSlot but that risks triggering the processing of a bunch of empty slots and epoch transitions just to update metrics which I don't think we want to do.\nSo I'd probably leave it as is I think...", "author": "ajsutton", "createdAt": "2020-12-11T04:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw=="}], "type": "inlineReview", "revised_code": {"commit": "fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "chunk": "diff --git a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\nindex 964c6c491b..f9a7744267 100644\n--- a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n+++ b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n\n@@ -210,22 +209,27 @@ public class BeaconChainMetrics implements SlotEventsChannel {\n \n   private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n-    TotalBalances.latestTotalBalances.ifPresent(\n-        totalBalances -> {\n-          // Update participation weights only once per epoch, a slot after epoch transition to make\n-          // sure\n-          // total balances are properly updated.\n-          if (!slot.mod(SLOTS_PER_EPOCH).equals(UInt64.ONE)) {\n-            return;\n-          }\n-\n-          currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n-          previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n-\n-          currentEpochParticipationWeight.set(totalBalances.getCurrentEpochAttesters().longValue());\n-          previousEpochParticipationWeight.set(\n-              totalBalances.getPreviousEpochAttesters().longValue());\n-        });\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              // Update participation weights only once per epoch, a slot after epoch transition to\n+              // make\n+              // sure\n+              // total balances are properly updated.\n+              if (!slot.mod(SLOTS_PER_EPOCH).equals(UInt64.ONE)) {\n+                return;\n+              }\n+\n+              currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n+              previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n+\n+              currentEpochParticipationWeight.set(\n+                  totalBalances.getCurrentEpochAttesters().longValue());\n+              previousEpochParticipationWeight.set(\n+                  totalBalances.getPreviousEpochAttesters().longValue());\n+            });\n \n     final UInt64 currentEpoch = compute_epoch_at_slot(head.getSlot());\n     final UInt64 previousEpoch = currentEpoch.minusMinZero(1);\n"}}, {"oid": "fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "url": "https://github.com/ConsenSys/teku/commit/fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "message": "Store total balances in transition caches", "committedDate": "2020-12-09T22:10:29Z", "type": "commit"}, {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5", "url": "https://github.com/ConsenSys/teku/commit/78b4851ae0efbdaf647cd796addb644dee6329b5", "message": "Revert redundant change", "committedDate": "2020-12-09T22:13:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODQwOQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539688409", "bodyText": "nit: I don't think you meant to rename this method - IntelliJ was being \"helpful\".", "author": "ajsutton", "createdAt": "2020-12-09T22:15:26Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java", "diffHunk": "@@ -27,7 +27,7 @@\n    */\n   public static BeaconState processEpoch(final BeaconState preState)\n       throws EpochProcessingException {\n-    final ValidatorStatuses validatorStatuses = ValidatorStatuses.create(preState);\n+    final ValidatorStatuses validatorStatuses = ValidatorStatuses.createTotalBalances(preState);", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTUxNQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539699515", "bodyText": "oh shoot yeah. reverted.", "author": "cemozerr", "createdAt": "2020-12-09T22:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java\nindex e6cc174ccd..2d1330a726 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java\n\n@@ -27,7 +27,7 @@ public class EpochProcessor {\n    */\n   public static BeaconState processEpoch(final BeaconState preState)\n       throws EpochProcessingException {\n-    final ValidatorStatuses validatorStatuses = ValidatorStatuses.createTotalBalances(preState);\n+    final ValidatorStatuses validatorStatuses = ValidatorStatuses.create(preState);\n     return preState.updated(\n         state -> {\n           EpochProcessorUtil.process_justification_and_finalization(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4OTAwNg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539689006", "bodyText": "nit: This probably should just be private - you'd just create ValidatorStatuses and then use getTotalBalances to get it.", "author": "ajsutton", "createdAt": "2020-12-09T22:16:30Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  public static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTYwNA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539699604", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4OTAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\nindex bd81c1e5f0..b70e5b31e2 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\n\n@@ -138,7 +138,7 @@ public class ValidatorStatuses {\n     }\n   }\n \n-  public static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n+  static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n     UInt64 currentEpoch = UInt64.ZERO;\n     UInt64 previousEpoch = UInt64.ZERO;\n     UInt64 currentEpochAttesters = UInt64.ZERO;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MDU0Mg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539690542", "bodyText": "Given these are now cheap to compute, we can probably update them each slot so that they update when we switch forks.", "author": "ajsutton", "createdAt": "2020-12-09T22:19:16Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +174,62 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              // Update participation weights only once per epoch, a slot after epoch transition to\n+              // make\n+              // sure\n+              // total balances are properly updated.", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODYxMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539698613", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MDU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "chunk": "diff --git a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\nindex f9a7744267..15ca1d6718 100644\n--- a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n+++ b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n\n@@ -204,24 +203,16 @@ public class BeaconChainMetrics implements SlotEventsChannel {\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n+    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n   }\n \n-  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n+  private void updateMetrics(final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n     state\n         .getTransitionCaches()\n         .getLatestTotalBalances()\n         .ifPresent(\n             totalBalances -> {\n-              // Update participation weights only once per epoch, a slot after epoch transition to\n-              // make\n-              // sure\n-              // total balances are properly updated.\n-              if (!slot.mod(SLOTS_PER_EPOCH).equals(UInt64.ONE)) {\n-                return;\n-              }\n-\n               currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n               previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTE0Mw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539691143", "bodyText": "This will need to be volatile.", "author": "ajsutton", "createdAt": "2020-12-09T22:20:13Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java", "diffHunk": "@@ -65,6 +67,8 @@ public static TransitionCaches getNoOp() {\n   private final ValidatorIndexCache validatorIndexCache;\n   private final Cache<Bytes32, List<Integer>> committeeShuffle;\n \n+  private Optional<TotalBalances> latestTotalBalances = Optional.empty();", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODY1Nw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539698657", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTE0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "chunk": "diff --git a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java\nindex aaf2ea3e67..f32c97d48d 100644\n--- a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java\n+++ b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java\n\n@@ -67,7 +67,7 @@ public class TransitionCaches {\n   private final ValidatorIndexCache validatorIndexCache;\n   private final Cache<Bytes32, List<Integer>> committeeShuffle;\n \n-  private Optional<TotalBalances> latestTotalBalances = Optional.empty();\n+  private volatile Optional<TotalBalances> latestTotalBalances = Optional.empty();\n \n   private TransitionCaches() {\n     activeValidators = new LRUCache<>(MAX_ACTIVE_VALIDATORS_CACHE);\n"}}, {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "url": "https://github.com/ConsenSys/teku/commit/82236af1ae71de008e1f7a4b0ca3767a10bfc802", "message": "Incorporate feedback", "committedDate": "2020-12-09T22:42:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2MzgwMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539763803", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n          \n          \n            \n              @VisibleForTesting\n          \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "author": "ajsutton", "createdAt": "2020-12-10T01:01:02Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1Njc2Mg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540356762", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-10T17:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2MzgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "3117b208a19d003a4c43b7ae9845dac360e71805", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\nindex b70e5b31e2..04d65b6561 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java\n\n@@ -138,6 +141,7 @@ public class ValidatorStatuses {\n     }\n   }\n \n+  @VisibleForTesting\n   static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n     UInt64 currentEpoch = UInt64.ZERO;\n     UInt64 previousEpoch = UInt64.ZERO;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539764295", "bodyText": "Probably shouldn't add this here.  BeaconStateCache.getTransitionCaches is used to get the cache everywhere else.\nI'm not against changing this but if we do we should change it everywhere and I seem to recall @Nashatyrev had a preference for this approach and some reasoning behind it.", "author": "ajsutton", "createdAt": "2020-12-10T01:02:19Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java", "diffHunk": "@@ -193,6 +193,8 @@ static BeaconState create(\n             });\n   }\n \n+  TransitionCaches getTransitionCaches();", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2MTQ4NA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539961484", "bodyText": "I'm pretty fine with adding BeaconState.getTransitionCaches(), though you would either remove BeaconStateCache then or do  BeaconState extends  BeaconStateCache and yes then you would need to refactor all the usages", "author": "Nashatyrev", "createdAt": "2020-12-10T08:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NjQ2NA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540356464", "bodyText": "Turns out BeaconStateCache.getTransitionCaches() works perfectly for my use case. I've removed this line.", "author": "cemozerr", "createdAt": "2020-12-10T17:25:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3117b208a19d003a4c43b7ae9845dac360e71805", "chunk": "diff --git a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java\nindex 968fd61ee6..ac384cb92c 100644\n--- a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java\n+++ b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java\n\n@@ -193,8 +194,6 @@ public interface BeaconState\n             });\n   }\n \n-  TransitionCaches getTransitionCaches();\n-\n   // Versioning\n   default UInt64 getGenesis_time() {\n     return ((UInt64View) get(GENESIS_TIME_FIELD.getIndex())).get();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539769597", "bodyText": "Now that I think about it, these numbers don't quite work out like this (sorry).  The TotalBalances are created at the end of the epoch so the \"current\" balance is actually \"previous\" by the time we're actually updating the metrics.  I suspect we should just drop the \"current\" version of these metrics as they're not particularly useful anyway.\nThen we wind up setting:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          currentEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getPreviousEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n      \n    \n    \n  \n\nand add a comment explaining why it's right even though it looks weird. :) Also need to consider if we have to worry about overflowing the signed long value with these metrics.  Prometheus actually uses a double for everything so we could potentially convert it to ETH if there's a risk of overflow.", "author": "ajsutton", "createdAt": "2020-12-10T01:17:03Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -171,6 +208,19 @@ public void onSlot(final UInt64 slot) {\n \n   private void updateMetrics(final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n+              previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n+\n+              currentEpochParticipationWeight.set(\n+                  totalBalances.getCurrentEpochAttesters().longValue());\n+              previousEpochParticipationWeight.set(\n+                  totalBalances.getPreviousEpochAttesters().longValue());", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NzE4MQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540377181", "bodyText": "I read that the double MAX value is: 1.7*10^308. So I don't think that will be an issue. Am I missing something?", "author": "cemozerr", "createdAt": "2020-12-10T17:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NzYzMA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540377630", "bodyText": "Put the comment and made the change for previous/current epoch confusion.", "author": "cemozerr", "createdAt": "2020-12-10T17:54:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3117b208a19d003a4c43b7ae9845dac360e71805", "chunk": "diff --git a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\nindex 15ca1d6718..340d056510 100644\n--- a/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n+++ b/services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java\n\n@@ -208,18 +210,15 @@ public class BeaconChainMetrics implements SlotEventsChannel {\n \n   private void updateMetrics(final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n-    state\n-        .getTransitionCaches()\n+    BeaconStateCache.getTransitionCaches(state)\n         .getLatestTotalBalances()\n         .ifPresent(\n             totalBalances -> {\n-              currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n-              previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n-\n-              currentEpochParticipationWeight.set(\n-                  totalBalances.getCurrentEpochAttesters().longValue());\n+              // The TotalBalances are created at the end of the epoch so the \"current\" balance\n+              // is actually \"previous\" by the time we're actually updating the metrics\n+              previousEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n               previousEpochParticipationWeight.set(\n-                  totalBalances.getPreviousEpochAttesters().longValue());\n+                      totalBalances.getCurrentEpochAttesters().longValue());\n             });\n \n     final UInt64 currentEpoch = compute_epoch_at_slot(head.getSlot());\n"}}, {"oid": "3117b208a19d003a4c43b7ae9845dac360e71805", "url": "https://github.com/ConsenSys/teku/commit/3117b208a19d003a4c43b7ae9845dac360e71805", "message": "Get transition caches with util class and only set previous epoch weights", "committedDate": "2020-12-10T17:56:22Z", "type": "commit"}, {"oid": "cff7050717344d7795f2f5d568d65be697c99a88", "url": "https://github.com/ConsenSys/teku/commit/cff7050717344d7795f2f5d568d65be697c99a88", "message": "Run spotless", "committedDate": "2020-12-10T18:13:02Z", "type": "commit"}, {"oid": "43ab52b167f91f0238b1aaf855a608564681021c", "url": "https://github.com/ConsenSys/teku/commit/43ab52b167f91f0238b1aaf855a608564681021c", "message": "Run spotless", "committedDate": "2020-12-10T18:13:49Z", "type": "commit"}, {"oid": "1e0cd459f40a6153ac2d949d2514fe64251d5362", "url": "https://github.com/ConsenSys/teku/commit/1e0cd459f40a6153ac2d949d2514fe64251d5362", "message": "Remove redundant varibles", "committedDate": "2020-12-10T18:14:07Z", "type": "commit"}, {"oid": "fcb85a02317fdcd5f5a61d134546887664b6a777", "url": "https://github.com/ConsenSys/teku/commit/fcb85a02317fdcd5f5a61d134546887664b6a777", "message": "Add independent module to reference test executor", "committedDate": "2020-12-10T18:22:16Z", "type": "commit"}, {"oid": "40e9c7683f40caca67322f45f243787b27c378b4", "url": "https://github.com/ConsenSys/teku/commit/40e9c7683f40caca67322f45f243787b27c378b4", "message": "Merge branch 'master' into addWeightedParticipationMetrics2", "committedDate": "2020-12-10T18:49:08Z", "type": "commit"}, {"oid": "1a6f726058a12b94cac683e9c10480fbc5739f77", "url": "https://github.com/ConsenSys/teku/commit/1a6f726058a12b94cac683e9c10480fbc5739f77", "message": "Merge branch 'master' into addWeightedParticipationMetrics2", "committedDate": "2020-12-11T14:19:58Z", "type": "commit"}]}