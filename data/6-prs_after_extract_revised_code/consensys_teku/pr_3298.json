{"pr_number": 3298, "pr_title": "[Issue-3297] Gossip slashings added to the OperationPool's", "pr_createdAt": "2020-11-24T16:26:09Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3298", "timeline": [{"oid": "566fd63ec5b067f09e05ed0c8bc848cea4470d12", "url": "https://github.com/ConsenSys/teku/commit/566fd63ec5b067f09e05ed0c8bc848cea4470d12", "message": "Gossip slashings added to the OperationPool's", "committedDate": "2020-11-24T16:22:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczMTQ1MQ==", "url": "https://github.com/ConsenSys/teku/pull/3298#discussion_r529731451", "bodyText": "These tests mostly test if a gossiped slashing get included in the operation processor of a gossiped node. Should we not be testing if an operation added to the operation pool gets gossiped instead?", "author": "cemozerr", "createdAt": "2020-11-24T16:57:09Z", "path": "networking/eth2/src/integration-test/java/tech/pegasys/teku/networking/eth2/AttesterSlashingGossipIntegrationTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.teku.infrastructure.async.Waiter.waitFor;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyGenerator;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n+import tech.pegasys.teku.datastructures.operations.AttesterSlashing;\n+import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.async.Waiter;\n+import tech.pegasys.teku.networking.eth2.Eth2NetworkFactory.Eth2P2PNetworkBuilder;\n+import tech.pegasys.teku.networking.eth2.gossip.GossipPublisher;\n+import tech.pegasys.teku.networking.eth2.gossip.encoding.GossipEncoding;\n+import tech.pegasys.teku.networking.eth2.gossip.topics.OperationProcessor;\n+import tech.pegasys.teku.statetransition.validation.InternalValidationResult;\n+\n+public class AttesterSlashingGossipIntegrationTest {\n+\n+  private final List<BLSKeyPair> validatorKeys = BLSKeyGenerator.generateKeyPairs(3);\n+  private final Eth2NetworkFactory networkFactory = new Eth2NetworkFactory();\n+  private final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n+\n+  @AfterEach\n+  public void tearDown() throws Exception {\n+    networkFactory.stopAll();\n+  }\n+\n+  @Test\n+  public void shouldGossipToPeers() throws Exception {", "originalCommit": "566fd63ec5b067f09e05ed0c8bc848cea4470d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1MDEyOA==", "url": "https://github.com/ConsenSys/teku/pull/3298#discussion_r529750128", "bodyText": "Well, these are integration tests at the networking level.  So it's testing that given the right dependencies everything gets wired up correctly and the slashings actually flow through and get gossiped out externally.\nIt doesn't test that the publisher object is invoked correctly / wired up correctly at a higher level.  I could look into adding some tests around that, but its a little complicated because the wiring logic is buried in the BeaconChainController.", "author": "mbaxter", "createdAt": "2020-11-24T17:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczMTQ1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5NTU0Mg==", "url": "https://github.com/ConsenSys/teku/pull/3298#discussion_r529795542", "bodyText": "Added a test to check that OperationPool subscriptions work.  So the only thing untested is the wiring logic between the operation pool and network which is pretty trivial.", "author": "mbaxter", "createdAt": "2020-11-24T18:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczMTQ1MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8f0512a30f77027e7ddf2ee1a42800c02e82a934", "url": "https://github.com/ConsenSys/teku/commit/8f0512a30f77027e7ddf2ee1a42800c02e82a934", "message": "Add test for OperationPool subscriptions", "committedDate": "2020-11-24T18:34:39Z", "type": "commit"}]}