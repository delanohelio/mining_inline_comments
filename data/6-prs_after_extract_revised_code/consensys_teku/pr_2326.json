{"pr_number": 2326, "pr_title": "Prioritise based on attestation subnets when connecting and disconnecting peers", "pr_createdAt": "2020-07-08T04:55:07Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2326", "timeline": [{"oid": "939065c8118bbfa5346bed7e32709029a551ee60", "url": "https://github.com/ConsenSys/teku/commit/939065c8118bbfa5346bed7e32709029a551ee60", "message": "Introduce peer scoring based on subnet subscriptions and choose which peers to disconnect when peer limit is exceeded based on that.", "committedDate": "2020-07-08T02:05:18Z", "type": "commit"}, {"oid": "1335c818ded3257ac76bbc3f212d51e96e64fab2", "url": "https://github.com/ConsenSys/teku/commit/1335c818ded3257ac76bbc3f212d51e96e64fab2", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into subnet-scores", "committedDate": "2020-07-08T03:15:31Z", "type": "commit"}, {"oid": "3417702c507f54af5abac7f11220e0c08bcad3e5", "url": "https://github.com/ConsenSys/teku/commit/3417702c507f54af5abac7f11220e0c08bcad3e5", "message": "Connect to highest scoring peers first.", "committedDate": "2020-07-08T04:39:35Z", "type": "commit"}, {"oid": "9d7da5d5ebad38b051bf8c89619c3d114bce5984", "url": "https://github.com/ConsenSys/teku/commit/9d7da5d5ebad38b051bf8c89619c3d114bce5984", "message": "Fix import.", "committedDate": "2020-07-08T04:58:30Z", "type": "commit"}, {"oid": "43047bc0fed28b6642afe4780b99493096777482", "url": "https://github.com/ConsenSys/teku/commit/43047bc0fed28b6642afe4780b99493096777482", "message": "Another import.", "committedDate": "2020-07-08T05:02:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2MjE0NA==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451462144", "bodyText": "May be it makes sense to add some randomness here to make connection manager more reliable? I.e. take 50% of peers by score and 50% of random peers.\nIt occurred several times from my former experience that strictly selecting peers by their score may lead to connectivity problems due to different reasons", "author": "Nashatyrev", "createdAt": "2020-07-08T11:09:02Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -103,9 +109,16 @@ public ConnectionManager(\n   private void connectToKnownPeers() {\n     final int maxAttempts = targetPeerCountRange.getPeersToAdd(network.getPeerCount());\n     LOG.trace(\"Connecting to up to {} known peers\", maxAttempts);\n+    if (maxAttempts == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     discoveryService\n         .streamKnownPeers()\n         .filter(this::isPeerValid)\n+        .sorted(\n+            Comparator.comparing((Function<DiscoveryPeer, Integer>) peerScorer::scoreCandidatePeer)\n+                .reversed())", "originalCommit": "43047bc0fed28b6642afe4780b99493096777482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4Mjk1OQ==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451882959", "bodyText": "Seems like a good idea, logged #2332 to follow up and do that.", "author": "ajsutton", "createdAt": "2020-07-08T23:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2MjE0NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTQ0OQ==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465449", "bodyText": "The same note on randomness here", "author": "Nashatyrev", "createdAt": "2020-07-08T11:15:53Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -148,9 +161,14 @@ private void attemptConnection(final PeerAddress discoveryPeer) {\n \n   private void onPeerConnected(final Peer peer) {\n     final int peersToDrop = targetPeerCountRange.getPeersToDrop(network.getPeerCount());\n+    if (peersToDrop == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     network\n         .streamPeers()\n         .filter(candidate -> !staticPeers.contains(candidate.getAddress()))\n+        .sorted(Comparator.comparing(peerScorer::scoreExistingPeer))", "originalCommit": "43047bc0fed28b6642afe4780b99493096777482", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTg1Nw==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465857", "bodyText": "May be consider including this feature to public Pubsub API?", "author": "Nashatyrev", "createdAt": "2020-07-08T11:16:46Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()", "originalCommit": "43047bc0fed28b6642afe4780b99493096777482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4MzUyOA==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451883528", "bodyText": "Yeah seems like a good idea.  Will merge it here now, raise a PR to jvm-libp2p and will then use the libp2p version once we pull in its next release.", "author": "ajsutton", "createdAt": "2020-07-08T23:40:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTg1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyNTI5Mg==", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451525292", "bodyText": "\ud83d\udc4d", "author": "Nashatyrev", "createdAt": "2020-07-08T13:00:20Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()\n+        .submitOnEventThread(", "originalCommit": "43047bc0fed28b6642afe4780b99493096777482", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "1ab308261387a25e11accc6f52ee737899bf0dd7", "url": "https://github.com/ConsenSys/teku/commit/1ab308261387a25e11accc6f52ee737899bf0dd7", "message": "Merge branch 'master' into subnet-scores", "committedDate": "2020-07-08T23:40:53Z", "type": "commit"}]}