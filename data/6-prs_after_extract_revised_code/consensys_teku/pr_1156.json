{"pr_number": 1156, "pr_title": "Publish deposit events incrementally", "pr_createdAt": "2020-02-13T22:25:15Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1156", "timeline": [{"oid": "47ee0d67d2b0ef5c22a87f1fd29b674cfe3dee91", "url": "https://github.com/ConsenSys/teku/commit/47ee0d67d2b0ef5c22a87f1fd29b674cfe3dee91", "message": "Publish deposit events incrementally instead of waiting for all block information to be available.", "committedDate": "2020-02-13T22:17:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMDU5OQ==", "url": "https://github.com/ConsenSys/teku/pull/1156#discussion_r379630599", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private SafeFuture<Void> publishNextDepsoitEvent(\n          \n          \n            \n              private SafeFuture<Void> publishNextDepositEvent(", "author": "mbaxter", "createdAt": "2020-02-14T20:29:28Z", "path": "pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java", "diffHunk": "@@ -167,60 +170,119 @@ private synchronized void onDepositRequestFailed(\n     return eventsFuture\n         .thenApply(this::groupDepositEventResponsesByBlockHash)\n         .thenCompose(\n-            groupedDepositEventResponsesByBlockHash -> {\n-              Map<String, SafeFuture<EthBlock.Block>> neededBlocksByHash =\n-                  getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet());\n-              return SafeFuture.allOf(neededBlocksByHash.values().toArray(SafeFuture[]::new))\n-                  .thenApply(\n-                      done ->\n-                          constructDepositsFromBlockEvents(\n-                              neededBlocksByHash, groupedDepositEventResponsesByBlockHash));\n-            })\n-        .thenAccept(\n-            (depositsFromBlockEventList) ->\n-                depositsFromBlockEventList.stream()\n-                    .sorted(Comparator.comparing(DepositsFromBlockEvent::getBlockNumber))\n-                    .forEachOrdered(this::publishDeposits));\n-  }\n-\n-  private List<DepositsFromBlockEvent> constructDepositsFromBlockEvents(\n-      Map<String, SafeFuture<EthBlock.Block>> blockFutureByBlockHash,\n-      Map<String, List<DepositContract.DepositEventEventResponse>> groupedDepositEventResponses) {\n-    return groupedDepositEventResponses.entrySet().stream()\n-        .map(\n-            (entry) -> {\n-              String blockHash = entry.getKey();\n-              List<DepositContract.DepositEventEventResponse> groupedDepositEventResponse =\n-                  entry.getValue();\n-              EthBlock.Block block =\n-                  checkNotNull(blockFutureByBlockHash.get(blockHash).getNow(null));\n-\n-              return new DepositsFromBlockEvent(\n-                  UnsignedLong.valueOf(block.getNumber()),\n-                  Bytes32.fromHexString(block.getHash()),\n-                  UnsignedLong.valueOf(block.getTimestamp()),\n-                  groupedDepositEventResponse.stream()\n-                      .map(Deposit::new)\n-                      .sorted(Comparator.comparing(Deposit::getMerkle_tree_index))\n-                      .collect(toList()));\n-            })\n-        .collect(toList());\n+            groupedDepositEventResponsesByBlockHash ->\n+                publishNextDepsoitEvent(\n+                    getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet()),\n+                    groupedDepositEventResponsesByBlockHash));\n+  }\n+\n+  private SafeFuture<Void> publishNextDepsoitEvent(", "originalCommit": "47ee0d67d2b0ef5c22a87f1fd29b674cfe3dee91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "312afcdfcae5479205090d7b2f7bdca45a4a7605", "chunk": "diff --git a/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java b/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\nindex 47a88e7502..08b23b6123 100644\n--- a/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\n+++ b/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\n\n@@ -171,12 +171,12 @@ public class DepositRequestManager {\n         .thenApply(this::groupDepositEventResponsesByBlockHash)\n         .thenCompose(\n             groupedDepositEventResponsesByBlockHash ->\n-                publishNextDepsoitEvent(\n+                publishNextDepositEvent(\n                     getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet()),\n                     groupedDepositEventResponsesByBlockHash));\n   }\n \n-  private SafeFuture<Void> publishNextDepsoitEvent(\n+  private SafeFuture<Void> publishNextDepositEvent(\n       List<SafeFuture<Block>> blockRequests,\n       Map<BlockNumberAndHash, List<DepositEventEventResponse>> depositEventsByBlock) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMjY1Mg==", "url": "https://github.com/ConsenSys/teku/pull/1156#discussion_r379632652", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void publicEventForBlock(\n          \n          \n            \n              private void publishEventForBlock(", "author": "mbaxter", "createdAt": "2020-02-14T20:34:57Z", "path": "pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java", "diffHunk": "@@ -167,60 +170,119 @@ private synchronized void onDepositRequestFailed(\n     return eventsFuture\n         .thenApply(this::groupDepositEventResponsesByBlockHash)\n         .thenCompose(\n-            groupedDepositEventResponsesByBlockHash -> {\n-              Map<String, SafeFuture<EthBlock.Block>> neededBlocksByHash =\n-                  getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet());\n-              return SafeFuture.allOf(neededBlocksByHash.values().toArray(SafeFuture[]::new))\n-                  .thenApply(\n-                      done ->\n-                          constructDepositsFromBlockEvents(\n-                              neededBlocksByHash, groupedDepositEventResponsesByBlockHash));\n-            })\n-        .thenAccept(\n-            (depositsFromBlockEventList) ->\n-                depositsFromBlockEventList.stream()\n-                    .sorted(Comparator.comparing(DepositsFromBlockEvent::getBlockNumber))\n-                    .forEachOrdered(this::publishDeposits));\n-  }\n-\n-  private List<DepositsFromBlockEvent> constructDepositsFromBlockEvents(\n-      Map<String, SafeFuture<EthBlock.Block>> blockFutureByBlockHash,\n-      Map<String, List<DepositContract.DepositEventEventResponse>> groupedDepositEventResponses) {\n-    return groupedDepositEventResponses.entrySet().stream()\n-        .map(\n-            (entry) -> {\n-              String blockHash = entry.getKey();\n-              List<DepositContract.DepositEventEventResponse> groupedDepositEventResponse =\n-                  entry.getValue();\n-              EthBlock.Block block =\n-                  checkNotNull(blockFutureByBlockHash.get(blockHash).getNow(null));\n-\n-              return new DepositsFromBlockEvent(\n-                  UnsignedLong.valueOf(block.getNumber()),\n-                  Bytes32.fromHexString(block.getHash()),\n-                  UnsignedLong.valueOf(block.getTimestamp()),\n-                  groupedDepositEventResponse.stream()\n-                      .map(Deposit::new)\n-                      .sorted(Comparator.comparing(Deposit::getMerkle_tree_index))\n-                      .collect(toList()));\n-            })\n-        .collect(toList());\n+            groupedDepositEventResponsesByBlockHash ->\n+                publishNextDepsoitEvent(\n+                    getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet()),\n+                    groupedDepositEventResponsesByBlockHash));\n+  }\n+\n+  private SafeFuture<Void> publishNextDepsoitEvent(\n+      List<SafeFuture<Block>> blockRequests,\n+      Map<BlockNumberAndHash, List<DepositEventEventResponse>> depositEventsByBlock) {\n+\n+    // First process completed requests using iteration.\n+    // Avoid StackOverflowException when there is a long string of requests already completed.\n+    while (!blockRequests.isEmpty() && blockRequests.get(0).isDone()) {\n+      final Block block = blockRequests.remove(0).join();\n+      publicEventForBlock(block, depositEventsByBlock);\n+    }\n+\n+    // All requests have completed and been processed.\n+    if (blockRequests.isEmpty()) {\n+      return SafeFuture.completedFuture(null);\n+    }\n+\n+    // Reached a block request that isn't complete so wait for it and recurse back into this method.\n+    return blockRequests\n+        .get(0)\n+        .thenCompose(block -> publishNextDepsoitEvent(blockRequests, depositEventsByBlock));\n   }\n \n-  private Map<String, SafeFuture<EthBlock.Block>> getMapOfEthBlockFutures(\n-      Set<String> neededBlockHashes) {\n+  private void publicEventForBlock(", "originalCommit": "47ee0d67d2b0ef5c22a87f1fd29b674cfe3dee91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "312afcdfcae5479205090d7b2f7bdca45a4a7605", "chunk": "diff --git a/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java b/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\nindex 47a88e7502..08b23b6123 100644\n--- a/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\n+++ b/pow/src/main/java/tech/pegasys/artemis/pow/DepositRequestManager.java\n\n@@ -171,12 +171,12 @@ public class DepositRequestManager {\n         .thenApply(this::groupDepositEventResponsesByBlockHash)\n         .thenCompose(\n             groupedDepositEventResponsesByBlockHash ->\n-                publishNextDepsoitEvent(\n+                publishNextDepositEvent(\n                     getMapOfEthBlockFutures(groupedDepositEventResponsesByBlockHash.keySet()),\n                     groupedDepositEventResponsesByBlockHash));\n   }\n \n-  private SafeFuture<Void> publishNextDepsoitEvent(\n+  private SafeFuture<Void> publishNextDepositEvent(\n       List<SafeFuture<Block>> blockRequests,\n       Map<BlockNumberAndHash, List<DepositEventEventResponse>> depositEventsByBlock) {\n \n"}}, {"oid": "73d0035cc8840f528a62fc8199cfc0a8e5bd101c", "url": "https://github.com/ConsenSys/teku/commit/73d0035cc8840f528a62fc8199cfc0a8e5bd101c", "message": "Merge branch 'master' into incremental-deposits", "committedDate": "2020-02-14T22:11:26Z", "type": "commit"}, {"oid": "312afcdfcae5479205090d7b2f7bdca45a4a7605", "url": "https://github.com/ConsenSys/teku/commit/312afcdfcae5479205090d7b2f7bdca45a4a7605", "message": "Fix typos.", "committedDate": "2020-02-14T22:13:16Z", "type": "commit"}]}