{"pr_number": 1760, "pr_title": "improve event logging", "pr_createdAt": "2020-05-11T10:50:32Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1760", "timeline": [{"oid": "be5c13ba389983affc62ec4c228a3bd7e74910c6", "url": "https://github.com/ConsenSys/teku/commit/be5c13ba389983affc62ec4c228a3bd7e74910c6", "message": "logging/event: degrade AggregateAndProof log to debug level", "committedDate": "2020-05-11T10:39:29Z", "type": "commit"}, {"oid": "6cd4ce03bbe888e75812c3477a33029ed39faccd", "url": "https://github.com/ConsenSys/teku/commit/6cd4ce03bbe888e75812c3477a33029ed39faccd", "message": "logging/event: change epoch wording to checkpoint where apropriate", "committedDate": "2020-05-11T10:45:13Z", "type": "commit"}, {"oid": "0906582f7cd2bea12a57feae2ca252716075cc57", "url": "https://github.com/ConsenSys/teku/commit/0906582f7cd2bea12a57feae2ca252716075cc57", "message": "logging/event: provide a debug() helper function", "committedDate": "2020-05-11T10:50:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3Nzc5MQ==", "url": "https://github.com/ConsenSys/teku/pull/1760#discussion_r422977791", "bodyText": "This is a good change for now - I think ultimately we'll change them to only print when the local node produced the block/attestation/aggregate rather than the slightly odd mix we seem to have at the moment.", "author": "ajsutton", "createdAt": "2020-05-11T11:37:33Z", "path": "logging/src/main/java/tech/pegasys/teku/logging/EventLogger.java", "diffHunk": "@@ -42,65 +42,69 @@ public void genesisEvent(final Bytes32 hashTreeRoot, final Bytes32 genesisBlockR\n \n   public void epochEvent(\n       final UnsignedLong currentEpoch,\n-      final UnsignedLong justifiedEpoch,\n-      final UnsignedLong finalizedEpoch,\n+      final UnsignedLong justifiedCheckpoint,\n+      final UnsignedLong finalizedCheckpoint,\n       final Bytes32 finalizedRoot) {\n     final String epochEventLog =\n         String.format(\n-            \"Epoch Event *** Current epoch: %s, Justified epoch: %s, Finalized epoch: %s, Finalized root: %s\",\n+            \"Epoch Event *** Epoch: %s, Justified checkpoint: %s, Finalized checkpoint: %s, Finalized root: %s\",\n             currentEpoch.toString(),\n-            justifiedEpoch.toString(),\n-            finalizedEpoch.toString(),\n+            justifiedCheckpoint.toString(),\n+            finalizedCheckpoint.toString(),\n             shortenHash(finalizedRoot.toHexString()));\n     info(epochEventLog, Color.YELLOW);\n   }\n \n   public void syncEvent(\n-      final UnsignedLong nodeSlot, final UnsignedLong bestSlot, final int numPeers) {\n+      final UnsignedLong nodeSlot, final UnsignedLong headSlot, final int numPeers) {\n     final String syncEventLog =\n         String.format(\n-            \"Sync Event *** Current slot: %s, Head block: %s, Connected peers: %d\",\n-            nodeSlot, bestSlot.toString(), numPeers);\n+            \"Sync Event *** Current slot: %s, Head slot: %s, Connected peers: %d\",\n+            nodeSlot, headSlot.toString(), numPeers);\n     info(syncEventLog, Color.WHITE);\n   }\n \n   public void slotEvent(\n       final UnsignedLong nodeSlot,\n-      final UnsignedLong bestBlock,\n+      final UnsignedLong headSlot,\n       final Bytes32 bestBlockRoot,\n       final UnsignedLong nodeEpoch,\n-      final UnsignedLong finalizedEpoch,\n+      final UnsignedLong finalizedCheckpoint,\n       final Bytes32 finalizedRoot,\n       final int numPeers) {\n-    String blockRoot = \" x ... empty\";\n-    if (nodeSlot.equals(bestBlock)) {\n+    String blockRoot = \"   ... empty\";\n+    if (nodeSlot.equals(headSlot)) {\n       blockRoot = shortenHash(bestBlockRoot.toHexString());\n     }\n     final String slotEventLog =\n         String.format(\n-            \"Slot Event *** Slot: %s, Block: %s, Epoch: %s, Finalized Epoch: %s, Finalized Root: %s, Peers: %d\",\n+            \"Slot Event *** Slot: %s, Block: %s, Epoch: %s, Finalized checkpoint: %s, Finalized root: %s, Peers: %d\",\n             nodeSlot.toString(),\n             blockRoot,\n             nodeEpoch.toString(),\n-            finalizedEpoch.toString(),\n+            finalizedCheckpoint.toString(),\n             shortenHash(finalizedRoot.toHexString()),\n             numPeers);\n     info(slotEventLog, Color.WHITE);\n   }\n \n   public void unprocessedAttestation(final Bytes32 beaconBlockRoot) {\n-    info(\"New Attestation with block root:  \" + beaconBlockRoot + \" detected.\", Color.GREEN);\n+    debug(\"New Attestation with block root:  \" + beaconBlockRoot + \" detected.\", Color.GREEN);", "originalCommit": "0906582f7cd2bea12a57feae2ca252716075cc57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}