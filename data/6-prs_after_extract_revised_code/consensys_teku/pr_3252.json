{"pr_number": 3252, "pr_title": "Check for valid signature on attestations once", "pr_createdAt": "2020-11-18T18:40:56Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3252", "timeline": [{"oid": "4d7eaf32a429c1a8a224712276b18fc88d714760", "url": "https://github.com/ConsenSys/teku/commit/4d7eaf32a429c1a8a224712276b18fc88d714760", "message": "Check for valid signature on attestations once", "committedDate": "2020-11-18T18:36:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MjAwOQ==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526362009", "bodyText": "I thought we needed to set this when we check the signatures in AttestationValidator and AggregateAttestationValidator from AttestationManager", "author": "mbaxter", "createdAt": "2020-11-18T19:27:46Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -434,6 +440,7 @@ private static AttestationProcessingResult indexAndValidateAttestation(\n     return is_valid_indexed_attestation(targetState, indexedAttestation)\n         .ifSuccessful(\n             () -> {\n+              attestation.setValidIndexedAttestation();", "originalCommit": "4d7eaf32a429c1a8a224712276b18fc88d714760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NTUwNg==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526365506", "bodyText": "You're right I completely missed that.", "author": "cemozerr", "createdAt": "2020-11-18T19:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MjAwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "996a68046c95310f3d7577d01d78c299545ad3e6", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\nindex 8e4a83ad5..6056a4899 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n\n@@ -440,7 +440,6 @@ public class ForkChoiceUtil {\n     return is_valid_indexed_attestation(targetState, indexedAttestation)\n         .ifSuccessful(\n             () -> {\n-              attestation.setValidIndexedAttestation();\n               attestation.setIndexedAttestation(indexedAttestation);\n               attestation.saveCommitteeShufflingSeed(targetState);\n \n"}}, {"oid": "996a68046c95310f3d7577d01d78c299545ad3e6", "url": "https://github.com/ConsenSys/teku/commit/996a68046c95310f3d7577d01d78c299545ad3e6", "message": "Set valid indexed attestation at first check", "committedDate": "2020-11-18T19:35:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MDg3NQ==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526380875", "bodyText": "Would is make sense to pass the ValidatableAttestation to a new version of is_valid_indexed_attestation?  This new method could return early if the isValidIndexedAttestation is already set, and otherwise delegate to the existing method that accepts the plain attestation, then set isValidIndexedAttestation.", "author": "mbaxter", "createdAt": "2020-11-18T19:58:46Z", "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java", "diffHunk": "@@ -186,6 +186,8 @@ private InternalValidationResult singleAttestationChecks(final Attestation attes\n               if (!is_valid_indexed_attestation(state, indexedAttestation).isSuccessful()) {", "originalCommit": "996a68046c95310f3d7577d01d78c299545ad3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4OTg0OQ==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526389849", "bodyText": "Makes sense.", "author": "cemozerr", "createdAt": "2020-11-18T20:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MDg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a292950f78fdaa4026244615f931fd715601a070", "chunk": "diff --git a/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java b/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java\nindex 12e19aed6..54fdfb577 100644\n--- a/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java\n+++ b/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java\n\n@@ -180,14 +178,9 @@ public class AttestationValidator {\n                 return REJECT;\n               }\n \n-              // The signature of attestation is valid.\n-              final IndexedAttestation indexedAttestation =\n-                  get_indexed_attestation(state, attestation);\n-              if (!is_valid_indexed_attestation(state, indexedAttestation).isSuccessful()) {\n+              if (!is_valid_indexed_attestation(state, validateableAttestation).isSuccessful()) {\n                 return REJECT;\n               }\n-              validateableAttestation.setValidIndexedAttestation();\n-              validateableAttestation.setIndexedAttestation(indexedAttestation);\n \n               // The attestation's target block is an ancestor of the block named in the LMD vote\n               if (!forkChoiceUtilWrapper\n"}}, {"oid": "a292950f78fdaa4026244615f931fd715601a070", "url": "https://github.com/ConsenSys/teku/commit/a292950f78fdaa4026244615f931fd715601a070", "message": "Incorporate feedback", "committedDate": "2020-11-18T20:14:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMTk0Ng==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526401946", "bodyText": "Instead of short-circuiting here, I think you can just use the new is_valid_indexed_attestation method in indexAndValidateAttestation", "author": "mbaxter", "createdAt": "2020-11-18T20:32:36Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,13 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (validateableAttestation.isValidIndexedAttestation()) {", "originalCommit": "a292950f78fdaa4026244615f931fd715601a070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjg2MQ==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526406861", "bodyText": "Done, but I again had to check for target state being empty to return unknown block. So I again had to short circuit.", "author": "cemozerr", "createdAt": "2020-11-18T20:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMTk0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "582bda4f5f7b528aa27e96454b00de0bd140460c", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\nindex 6056a4899..e0e61a7f5 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n\n@@ -387,10 +387,12 @@ public class ForkChoiceUtil {\n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n         .ifSuccessful(\n             () -> {\n-              if (validateableAttestation.isValidIndexedAttestation()) {\n-                return SUCCESSFUL;\n+              if (maybeTargetState.isEmpty()) {\n+                return AttestationProcessingResult.UNKNOWN_BLOCK;\n+              } else {\n+                return is_valid_indexed_attestation(\n+                    maybeTargetState.get(), validateableAttestation);\n               }\n-              return indexAndValidateAttestation(validateableAttestation, maybeTargetState);\n             })\n         .ifSuccessful(() -> checkIfAttestationShouldBeSavedForFuture(store, attestation))\n         .ifSuccessful(\n"}}, {"oid": "582bda4f5f7b528aa27e96454b00de0bd140460c", "url": "https://github.com/ConsenSys/teku/commit/582bda4f5f7b528aa27e96454b00de0bd140460c", "message": "Use the new method", "committedDate": "2020-11-18T20:41:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDM1Nw==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526410357", "bodyText": "Looks like you can cut indexAndValidateAttestation altogether now.  Just wondering if we need the call to attestation.saveCommitteeShufflingSeed(targetState); that's in that method?", "author": "mbaxter", "createdAt": "2020-11-18T20:48:08Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,15 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))", "originalCommit": "582bda4f5f7b528aa27e96454b00de0bd140460c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMjUyMA==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526422520", "bodyText": "Good catch. Added that method call to an ifSuccesful block right after this one.", "author": "cemozerr", "createdAt": "2020-11-18T21:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDM1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b2a5d2f9b3a85010e7d9d4dffda071694f358752", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\nindex e0e61a7f5..7a2b3873a 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n\n@@ -394,6 +394,11 @@ public class ForkChoiceUtil {\n                     maybeTargetState.get(), validateableAttestation);\n               }\n             })\n+        .ifSuccessful(\n+            () -> {\n+              validateableAttestation.saveCommitteeShufflingSeed(maybeTargetState.get());\n+              return SUCCESSFUL;\n+            })\n         .ifSuccessful(() -> checkIfAttestationShouldBeSavedForFuture(store, attestation))\n         .ifSuccessful(\n             () -> {\n"}}, {"oid": "b2a5d2f9b3a85010e7d9d4dffda071694f358752", "url": "https://github.com/ConsenSys/teku/commit/b2a5d2f9b3a85010e7d9d4dffda071694f358752", "message": "Save shuffling seed", "committedDate": "2020-11-18T21:14:26Z", "type": "commit"}, {"oid": "d497a0d546193b62fea703823fe020bc2195d6cf", "url": "https://github.com/ConsenSys/teku/commit/d497a0d546193b62fea703823fe020bc2195d6cf", "message": "Remove unused method", "committedDate": "2020-11-18T21:24:15Z", "type": "commit"}, {"oid": "2d9e4dfdf6fd660a8c1160e1ba4752ac3a089c62", "url": "https://github.com/ConsenSys/teku/commit/2d9e4dfdf6fd660a8c1160e1ba4752ac3a089c62", "message": "Remove unused logger", "committedDate": "2020-11-18T21:27:42Z", "type": "commit"}, {"oid": "ae17b6f8bd38e3fc800134debc8254b5fe2ae37a", "url": "https://github.com/ConsenSys/teku/commit/ae17b6f8bd38e3fc800134debc8254b5fe2ae37a", "message": "Run spotless", "committedDate": "2020-11-18T21:27:57Z", "type": "commit"}, {"oid": "a07e6b762a93760136d6c53860591ade156c7ae9", "url": "https://github.com/ConsenSys/teku/commit/a07e6b762a93760136d6c53860591ade156c7ae9", "message": "Reinstate try catch block", "committedDate": "2020-11-18T22:46:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3NTg4Mg==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526475882", "bodyText": "(nit) Might be a little cleaner to move this try / catch into is_valid_indexed_attestation", "author": "mbaxter", "createdAt": "2020-11-18T22:49:59Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +383,20 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (maybeTargetState.isEmpty()) {\n+                return AttestationProcessingResult.UNKNOWN_BLOCK;\n+              } else {\n+                try {\n+                  return is_valid_indexed_attestation(\n+                      maybeTargetState.get(), validateableAttestation);\n+                } catch (IllegalArgumentException e) {", "originalCommit": "a07e6b762a93760136d6c53860591ade156c7ae9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5OTk2OA==", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526499968", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-18T23:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3NTg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "860e72cd8d52a7cf26822d374fac90204caacd9c", "chunk": "diff --git a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\nindex 508359151..a37af906f 100644\n--- a/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n+++ b/ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java\n\n@@ -388,13 +388,8 @@ public class ForkChoiceUtil {\n               if (maybeTargetState.isEmpty()) {\n                 return AttestationProcessingResult.UNKNOWN_BLOCK;\n               } else {\n-                try {\n-                  return is_valid_indexed_attestation(\n-                      maybeTargetState.get(), validateableAttestation);\n-                } catch (IllegalArgumentException e) {\n-                  LOG.debug(\"on_attestation: Attestation is not valid: \", e);\n-                  return AttestationProcessingResult.invalid(e.getMessage());\n-                }\n+                return is_valid_indexed_attestation(\n+                    maybeTargetState.get(), validateableAttestation);\n               }\n             })\n         .ifSuccessful(() -> checkIfAttestationShouldBeSavedForFuture(store, attestation))\n"}}, {"oid": "860e72cd8d52a7cf26822d374fac90204caacd9c", "url": "https://github.com/ConsenSys/teku/commit/860e72cd8d52a7cf26822d374fac90204caacd9c", "message": "Have smaller scoped try/catch block", "committedDate": "2020-11-19T00:01:54Z", "type": "commit"}, {"oid": "5e3910168b5fabb8331bbef7c0aa8a303e145240", "url": "https://github.com/ConsenSys/teku/commit/5e3910168b5fabb8331bbef7c0aa8a303e145240", "message": "Merge branch 'master' into deduplicateSignatureChecking", "committedDate": "2020-11-19T00:02:24Z", "type": "commit"}, {"oid": "34d040e338619590bea992676a04a9fc9190e565", "url": "https://github.com/ConsenSys/teku/commit/34d040e338619590bea992676a04a9fc9190e565", "message": "Remove unused variable.", "committedDate": "2020-11-19T00:05:10Z", "type": "commit"}]}