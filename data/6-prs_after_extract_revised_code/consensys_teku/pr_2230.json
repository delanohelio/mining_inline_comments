{"pr_number": 2230, "pr_title": "Record database metadata", "pr_createdAt": "2020-06-26T03:58:24Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2230", "timeline": [{"oid": "23df146118fce44a9bab83c033b59071c92e9d25", "url": "https://github.com/ConsenSys/teku/commit/23df146118fce44a9bab83c033b59071c92e9d25", "message": "Record database metadata when database is created.", "committedDate": "2020-06-26T03:52:58Z", "type": "commit"}, {"oid": "5397f4af57ec3109eaef4277bd60cb7d3d2d4d13", "url": "https://github.com/ConsenSys/teku/commit/5397f4af57ec3109eaef4277bd60cb7d3d2d4d13", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into db-metadata", "committedDate": "2020-06-26T03:53:16Z", "type": "commit"}, {"oid": "a1ed42e65faf3f338e21f79ace2c969bf081279b", "url": "https://github.com/ConsenSys/teku/commit/a1ed42e65faf3f338e21f79ace2c969bf081279b", "message": "Tidy up.", "committedDate": "2020-06-26T03:58:07Z", "type": "commit"}, {"oid": "2cb00b9ad04769c29c7c6e6c3154846b4ba44a25", "url": "https://github.com/ConsenSys/teku/commit/2cb00b9ad04769c29c7c6e6c3154846b4ba44a25", "message": "Fix DatabaseVersionTest.", "committedDate": "2020-06-26T04:12:27Z", "type": "commit"}, {"oid": "1f956cefda214844fdf0466b59b62d0db26c879f", "url": "https://github.com/ConsenSys/teku/commit/1f956cefda214844fdf0466b59b62d0db26c879f", "message": "Fix another test.", "committedDate": "2020-06-26T04:21:44Z", "type": "commit"}, {"oid": "e216cb5d8b310d4e34c6fd505f50b022a024a27f", "url": "https://github.com/ConsenSys/teku/commit/e216cb5d8b310d4e34c6fd505f50b022a024a27f", "message": "Use ZLib compression instead of ZSTD for better compatibility. Use for all layers since most compressions are simple moves.", "committedDate": "2020-06-26T07:24:26Z", "type": "commit"}, {"oid": "c5c0275e823c0b2e99dca82665f5108f36025fb7", "url": "https://github.com/ConsenSys/teku/commit/c5c0275e823c0b2e99dca82665f5108f36025fb7", "message": "Actually let's merge the metadata first then experiment with compression.", "committedDate": "2020-06-26T07:25:05Z", "type": "commit"}, {"oid": "a723445c6f635450d2b2a7acca71632b8cd5a9c1", "url": "https://github.com/ConsenSys/teku/commit/a723445c6f635450d2b2a7acca71632b8cd5a9c1", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into db-metadata\n\n# Conflicts:\n#\tstorage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/RocksDbConfiguration.java", "committedDate": "2020-06-27T08:43:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4OTgzMw==", "url": "https://github.com/ConsenSys/teku/pull/2230#discussion_r446589833", "bodyText": "not the hugest fan of bottomMost... lowest / minimum?", "author": "rolfyone", "createdAt": "2020-06-28T02:12:48Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/RocksDbConfiguration.java", "diffHunk": "@@ -13,46 +13,86 @@\n \n package tech.pegasys.teku.storage.server.rocksdb;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static com.google.common.base.Preconditions.checkState;\n-\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonProperty.Access;\n+import com.google.common.base.MoreObjects;\n import java.nio.file.Path;\n+import org.rocksdb.CompressionType;\n \n+/**\n+ * Defines the configuration for a RocksDB database. The configuration used when a database is\n+ * created is written to a metadata.yaml file and reloaded to ensure we continue using compatible\n+ * values for the lifetime of that database.\n+ *\n+ * <p>To preserve backwards compatibility always ensure that the value assigned in field\n+ * declarations is compatible with existing databases. These values will be used if the field didn't\n+ * exist at the time the database was created, so typically should match the RocksDB default.\n+ *\n+ * <p>If the value to use for new databases, differs from the original, set it in a factory function\n+ * e.g. {@link #v5ArchiveDefaults()}.\n+ *\n+ * <p>Values that are safe to change for existing databases are marked with {@link\n+ * Access#WRITE_ONLY}. They will not be written to the metadata file but if present, the value will\n+ * be loaded providing a simple way to experiment with different values without it being fixed at\n+ * database creation.\n+ */\n+@SuppressWarnings(\"FieldMayBeFinal\")\n+@JsonIgnoreProperties(ignoreUnknown = true)\n public class RocksDbConfiguration {\n   public static final int DEFAULT_MAX_OPEN_FILES = 1024;\n   public static final int DEFAULT_MAX_BACKGROUND_COMPACTIONS = 4;\n   public static final int DEFAULT_BACKGROUND_THREAD_COUNT = 4;\n   public static final long DEFAULT_CACHE_CAPACITY = 8 << 20;\n   public static final long DEFAULT_WRITE_BUFFER_CAPACITY = 128 << 20;\n \n-  private final Path databaseDir;\n-  private final int maxOpenFiles;\n-  private final int maxBackgroundCompactions;\n-  private final int backgroundThreadCount;\n-  private final long cacheCapacity;\n-  private final long writeBufferCapacity;\n-\n-  public RocksDbConfiguration(\n-      Path databaseDir,\n-      int maxOpenFiles,\n-      int maxBackgroundCompactions,\n-      int backgroundThreadCount,\n-      long cacheCapacity,\n-      long writeBufferCapacity) {\n-    this.databaseDir = databaseDir;\n-    this.maxOpenFiles = maxOpenFiles;\n-    this.maxBackgroundCompactions = maxBackgroundCompactions;\n-    this.backgroundThreadCount = backgroundThreadCount;\n-    this.cacheCapacity = cacheCapacity;\n-    this.writeBufferCapacity = writeBufferCapacity;\n+  /* --------------- Safe to Change Properties ------------ */\n+\n+  @JsonProperty(value = \"maxOpenFiles\", access = Access.WRITE_ONLY)\n+  private int maxOpenFiles = DEFAULT_MAX_OPEN_FILES;\n+\n+  @JsonProperty(value = \"maxBackgroundCompactions\", access = Access.WRITE_ONLY)\n+  private int maxBackgroundCompactions = DEFAULT_MAX_BACKGROUND_COMPACTIONS;\n+\n+  @JsonProperty(value = \"backgroundThreadCount\", access = Access.WRITE_ONLY)\n+  private int backgroundThreadCount = DEFAULT_BACKGROUND_THREAD_COUNT;\n+\n+  @JsonProperty(value = \"cacheCapacity\", access = Access.WRITE_ONLY)\n+  private long cacheCapacity = DEFAULT_CACHE_CAPACITY;\n+\n+  @JsonProperty(value = \"writeBufferCapacity\", access = Access.WRITE_ONLY)\n+  private long writeBufferCapacity = DEFAULT_WRITE_BUFFER_CAPACITY;\n+\n+  /* ---------------     Fixed Properties     ------------ */\n+\n+  @JsonProperty(\"compressionType\")\n+  private CompressionType compressionType = CompressionType.NO_COMPRESSION;\n+\n+  @JsonProperty(\"bottomMostCompressionType\")\n+  private CompressionType bottomMostCompressionType = CompressionType.NO_COMPRESSION;", "originalCommit": "a723445c6f635450d2b2a7acca71632b8cd5a9c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY5OTM5Ng==", "url": "https://github.com/ConsenSys/teku/pull/2230#discussion_r446699396", "bodyText": "It's a RocksDB term - the DB is conceptually made up of a series of layers stacked on top of each other with data gradually being pushed down to the bottom layer as it's been unchanged for longer periods.  Hence, bottom-most.", "author": "ajsutton", "createdAt": "2020-06-28T21:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4OTgzMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "70910462a81733de0975bbaffa7fb34154d27ef1", "url": "https://github.com/ConsenSys/teku/commit/70910462a81733de0975bbaffa7fb34154d27ef1", "message": "Merge branch 'master' into db-metadata", "committedDate": "2020-06-28T21:10:34Z", "type": "commit"}]}