{"pr_number": 2386, "pr_title": "change addHotStateRoot to accept a map", "pr_createdAt": "2020-07-20T00:51:09Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2386", "timeline": [{"oid": "c40b10188552ea7bcd94c17ac5098d6bf63fc08c", "url": "https://github.com/ConsenSys/teku/commit/c40b10188552ea7bcd94c17ac5098d6bf63fc08c", "message": "change addHotStateRoot to accept a map\n\n - add forkChoice to data backed integration tests\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-20T00:47:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3OTAxMQ==", "url": "https://github.com/ConsenSys/teku/pull/2386#discussion_r456979011", "bodyText": "Isn't this covered by the assignment in the field declaration?", "author": "ajsutton", "createdAt": "2020-07-20T00:52:40Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java", "diffHunk": "@@ -131,6 +138,7 @@ private void setupAndStartRestAPI() {\n   protected void startPreForkChoiceRestAPI() {\n     // Initialize genesis\n     setupStorage(StateStorageMode.ARCHIVE);\n+    forkChoice = mock(ForkChoice.class);", "originalCommit": "c40b10188552ea7bcd94c17ac5098d6bf63fc08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bcbd9514216c8efbd51f13c566b85538d970b19", "chunk": "diff --git a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java\nindex 0a1ee08a2d..54b8208b6a 100644\n--- a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java\n+++ b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java\n\n@@ -138,7 +134,6 @@ public abstract class AbstractDataBackedRestAPIIntegrationTest {\n   protected void startPreForkChoiceRestAPI() {\n     // Initialize genesis\n     setupStorage(StateStorageMode.ARCHIVE);\n-    forkChoice = mock(ForkChoice.class);\n     chainUpdater.initializeGenesis();\n     // Restart storage system without running fork choice\n     storageSystem = storageSystem.restarted(StateStorageMode.ARCHIVE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3OTIxOQ==", "url": "https://github.com/ConsenSys/teku/pull/2386#discussion_r456979219", "bodyText": "Can just use a forEach directly on the map:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  stateRootToSlotAndBlockRootMap\n          \n          \n            \n                      .keySet()\n          \n          \n            \n                      .forEach(\n          \n          \n            \n                          stateRoot ->\n          \n          \n            \n                              transaction.put(\n          \n          \n            \n                                  V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT,\n          \n          \n            \n                                  stateRoot,\n          \n          \n            \n                                  stateRootToSlotAndBlockRootMap.get(stateRoot)));\n          \n          \n            \n                  stateRootToSlotAndBlockRootMap\n          \n          \n            \n                      .forEach(\n          \n          \n            \n                          (stateRoot, blockRoot) ->\n          \n          \n            \n                              transaction.put(\n          \n          \n            \n                                  V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT,\n          \n          \n            \n                                  stateRoot,\n          \n          \n            \n                                  blockRoot));", "author": "ajsutton", "createdAt": "2020-07-20T00:54:02Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V3RocksDbDao.java", "diffHunk": "@@ -246,8 +246,16 @@ public void addHotBlocks(final Map<Bytes32, SignedBeaconBlock> blocks) {\n     }\n \n     @Override\n-    public void addHotStateRoot(final Bytes32 stateRoot, final SlotAndBlockRoot slotAndBlockRoot) {\n-      transaction.put(V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT, stateRoot, slotAndBlockRoot);\n+    public void addHotStateRoots(\n+        final Map<Bytes32, SlotAndBlockRoot> stateRootToSlotAndBlockRootMap) {\n+      stateRootToSlotAndBlockRootMap\n+          .keySet()\n+          .forEach(\n+              stateRoot ->\n+                  transaction.put(\n+                      V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT,\n+                      stateRoot,\n+                      stateRootToSlotAndBlockRootMap.get(stateRoot)));", "originalCommit": "c40b10188552ea7bcd94c17ac5098d6bf63fc08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bcbd9514216c8efbd51f13c566b85538d970b19", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V3RocksDbDao.java b/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V3RocksDbDao.java\nindex 6c0e8b8b8c..dfe529f58f 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V3RocksDbDao.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V3RocksDbDao.java\n\n@@ -248,14 +248,10 @@ public class V3RocksDbDao\n     @Override\n     public void addHotStateRoots(\n         final Map<Bytes32, SlotAndBlockRoot> stateRootToSlotAndBlockRootMap) {\n-      stateRootToSlotAndBlockRootMap\n-          .keySet()\n-          .forEach(\n-              stateRoot ->\n-                  transaction.put(\n-                      V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT,\n-                      stateRoot,\n-                      stateRootToSlotAndBlockRootMap.get(stateRoot)));\n+      stateRootToSlotAndBlockRootMap.forEach(\n+          (stateRoot, slotAndBlockRoot) ->\n+              transaction.put(\n+                  V3Schema.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT, stateRoot, slotAndBlockRoot));\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3OTI5MA==", "url": "https://github.com/ConsenSys/teku/pull/2386#discussion_r456979290", "bodyText": "Same trick, just use Map.forEach", "author": "ajsutton", "createdAt": "2020-07-20T00:54:32Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4HotRocksDbDao.java", "diffHunk": "@@ -188,8 +188,16 @@ public void addHotBlocks(final Map<Bytes32, SignedBeaconBlock> blocks) {\n     }\n \n     @Override\n-    public void addHotStateRoot(final Bytes32 stateRoot, final SlotAndBlockRoot slotAndBlockRoot) {\n-      transaction.put(V4SchemaHot.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT, stateRoot, slotAndBlockRoot);\n+    public void addHotStateRoots(\n+        final Map<Bytes32, SlotAndBlockRoot> stateRootToSlotAndBlockRootMap) {\n+      stateRootToSlotAndBlockRootMap\n+          .keySet()\n+          .forEach(", "originalCommit": "c40b10188552ea7bcd94c17ac5098d6bf63fc08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bcbd9514216c8efbd51f13c566b85538d970b19", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4HotRocksDbDao.java b/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4HotRocksDbDao.java\nindex e130a326d5..6bb094f7b8 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4HotRocksDbDao.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4HotRocksDbDao.java\n\n@@ -190,14 +190,10 @@ public class V4HotRocksDbDao implements RocksDbHotDao, RocksDbEth1Dao, RocksDbPr\n     @Override\n     public void addHotStateRoots(\n         final Map<Bytes32, SlotAndBlockRoot> stateRootToSlotAndBlockRootMap) {\n-      stateRootToSlotAndBlockRootMap\n-          .keySet()\n-          .forEach(\n-              stateRoot ->\n-                  transaction.put(\n-                      V4SchemaHot.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT,\n-                      stateRoot,\n-                      stateRootToSlotAndBlockRootMap.get(stateRoot)));\n+      stateRootToSlotAndBlockRootMap.forEach(\n+          (stateRoot, slotAndBlockRoot) ->\n+              transaction.put(\n+                  V4SchemaHot.STATE_ROOT_TO_SLOT_AND_BLOCK_ROOT, stateRoot, slotAndBlockRoot));\n     }\n \n     @Override\n"}}, {"oid": "4bcbd9514216c8efbd51f13c566b85538d970b19", "url": "https://github.com/ConsenSys/teku/commit/4bcbd9514216c8efbd51f13c566b85538d970b19", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-20T01:48:00Z", "type": "commit"}, {"oid": "19896a50215c73ab2eed780b6aa29631bbda4502", "url": "https://github.com/ConsenSys/teku/commit/19896a50215c73ab2eed780b6aa29631bbda4502", "message": "fix Integration Tests.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-20T02:21:52Z", "type": "commit"}, {"oid": "0d90808e9367c2652a6bf04325cefbe163010a33", "url": "https://github.com/ConsenSys/teku/commit/0d90808e9367c2652a6bf04325cefbe163010a33", "message": "spotless\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-20T02:56:13Z", "type": "commit"}, {"oid": "564a04095535a2b7bd4654a3fb86f7b87bf9b822", "url": "https://github.com/ConsenSys/teku/commit/564a04095535a2b7bd4654a3fb86f7b87bf9b822", "message": "Merge remote-tracking branch 'upstream/master' into addHotStateRoots", "committedDate": "2020-07-20T02:59:36Z", "type": "commit"}, {"oid": "3f2d6e9819db98f7bd955662c7bcb5109a3ba9c6", "url": "https://github.com/ConsenSys/teku/commit/3f2d6e9819db98f7bd955662c7bcb5109a3ba9c6", "message": "Merge remote-tracking branch 'upstream/master' into addHotStateRoots", "committedDate": "2020-07-20T03:12:37Z", "type": "commit"}]}