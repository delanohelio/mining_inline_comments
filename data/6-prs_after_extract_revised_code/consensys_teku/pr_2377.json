{"pr_number": 2377, "pr_title": "Fix and reenable some deposit processing tests", "pr_createdAt": "2020-07-17T16:24:20Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2377", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMTgwNg==", "url": "https://github.com/ConsenSys/teku/pull/2377#discussion_r456611806", "bodyText": "(optional) Might be worth trying to dedupe some of this logic with a helper method that sets up and processes the state & deposits and returns the resulting state.", "author": "mbaxter", "createdAt": "2020-07-17T18:38:51Z", "path": "ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java", "diffHunk": "@@ -42,18 +46,31 @@\n   private final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n \n   @Test\n-  @Disabled\n   void processDepositAddsNewValidatorWhenPubkeyIsNotFoundInRegistry()\n       throws BlockProcessingException {\n-    // Data Setup\n-    SSZList<DepositWithIndex> deposits = dataStructureUtil.newDeposits(1);\n-    Deposit deposit = deposits.get(0);\n-    DepositData depositInput = deposit.getData();\n+    // Create a deposit\n+    DepositData depositInput = dataStructureUtil.randomDepositData();\n     BLSPublicKey pubkey = depositInput.getPubkey();\n     Bytes32 withdrawalCredentials = depositInput.getWithdrawal_credentials();\n-    UnsignedLong amount = deposit.getData().getAmount();\n-\n-    BeaconState beaconState = createBeaconState();\n+    UnsignedLong amount = depositInput.getAmount();\n+\n+    // Add the deposit to a Merkle tree so that we can get the root to put into the state\n+    MerkleTree depositMerkleTree = new OptimizedMerkleTree(Constants.DEPOSIT_CONTRACT_TREE_DEPTH);\n+    depositMerkleTree.add(depositInput.hash_tree_root());\n+\n+    // Create the state and insert the Merkle root of the deposit data\n+    BeaconState beaconState =\n+        createBeaconState()\n+            .updated(\n+                state ->\n+                    state.setEth1_data(\n+                        new Eth1Data(\n+                            depositMerkleTree.getRoot(), UnsignedLong.valueOf(1), Bytes32.ZERO)));\n+\n+    SSZMutableList<DepositWithIndex> deposits =\n+        SSZList.createMutable(DepositWithIndex.class, Constants.MAX_DEPOSITS);\n+    deposits.add(\n+        new DepositWithIndex(depositMerkleTree.getProof(0), depositInput, UnsignedLong.valueOf(0)));", "originalCommit": "02198a5bfd334d5edf3c9f74ebfc4001ddd664e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc2MTM4Mw==", "url": "https://github.com/ConsenSys/teku/pull/2377#discussion_r456761383", "bodyText": "Heh, busted. Yes, I was too lazy to do this. Now done.", "author": "benjaminion", "createdAt": "2020-07-18T07:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMTgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "712bebcc2404c0b594169019c810dc25eb4ce612", "chunk": "diff --git a/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java b/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\nindex 4ebd6c2997..3aa3bddd10 100644\n--- a/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\n+++ b/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\n\n@@ -49,7 +49,7 @@ class BlockProcessorUtilTest {\n   void processDepositAddsNewValidatorWhenPubkeyIsNotFoundInRegistry()\n       throws BlockProcessingException {\n     // Create a deposit\n-    DepositData depositInput = dataStructureUtil.randomDepositData();\n+    DepositData depositInput = dataStructureUtil.newDepositList(1).get(0);\n     BLSPublicKey pubkey = depositInput.getPubkey();\n     Bytes32 withdrawalCredentials = depositInput.getWithdrawal_credentials();\n     UnsignedLong amount = depositInput.getAmount();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMjExMQ==", "url": "https://github.com/ConsenSys/teku/pull/2377#discussion_r456612111", "bodyText": "(optional) Maybe we should verify that all of the balances are unchanged.", "author": "mbaxter", "createdAt": "2020-07-17T18:39:33Z", "path": "ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java", "diffHunk": "@@ -127,6 +156,56 @@ void processDepositTopsUpValidatorBalanceWhenPubkeyIsFoundInRegistry()\n         beaconState.getBalances().get(originalValidatorBalancesSize - 1));\n   }\n \n+  @Test\n+  void processDepositHandlesDepositWithInvalidPublicKey() throws BlockProcessingException {\n+    // The following deposit uses a \"rogue\" public key that is not in the G1 group\n+    BLSPublicKey pubkey =\n+        BLSPublicKey.fromBytesCompressed(\n+            Bytes.fromHexString(\n+                \"0x9378a6e3984e96d2cd50450c76ca14732f1300efa04aecdb805b22e6d6926a85ef409e8f3acf494a1481090bf32ce3bd\"));\n+    Bytes32 withdrawalCredentials =\n+        Bytes32.fromHexString(\"0x79e43d39ee55749c55994a7ab2a3cb91460cec544fdbf27eb5717c43f970c1b6\");\n+    UnsignedLong amount = UnsignedLong.valueOf(1000000000L);\n+    BLSSignature signature =\n+        BLSSignature.fromBytes(\n+            Bytes.fromHexString(\n+                \"0xddc1ca509e29c6452441069f26da6e073589b3bd1cace50e3427426af5bfdd566d077d4bdf618e249061b9770471e3d515779aa758b8ccb4b06226a8d5ebc99e19d4c3278e5006b837985bec4e0ce39df92c1f88d1afd0f98dbae360024a390d\"));\n+    DepositData depositInput =\n+        new DepositData(new DepositMessage(pubkey, withdrawalCredentials, amount), signature);\n+\n+    // Add the deposit to a Merkle tree so that we can get the root to put into the state\n+    MerkleTree depositMerkleTree = new OptimizedMerkleTree(Constants.DEPOSIT_CONTRACT_TREE_DEPTH);\n+    depositMerkleTree.add(depositInput.hash_tree_root());\n+\n+    // Create the state and insert the Merkle root of the deposit data\n+    BeaconState beaconState =\n+        createBeaconState()\n+            .updated(\n+                state ->\n+                    state.setEth1_data(\n+                        new Eth1Data(\n+                            depositMerkleTree.getRoot(), UnsignedLong.valueOf(1), Bytes32.ZERO)));\n+\n+    SSZMutableList<DepositWithIndex> deposits =\n+        SSZList.createMutable(DepositWithIndex.class, Constants.MAX_DEPOSITS);\n+    deposits.add(\n+        new DepositWithIndex(depositMerkleTree.getProof(0), depositInput, UnsignedLong.valueOf(0)));\n+\n+    int originalValidatorRegistrySize = beaconState.getValidators().size();\n+    int originalValidatorBalancesSize = beaconState.getBalances().size();\n+\n+    // Attempt to process deposit with above data. We expect to fail, but not throw an exception.\n+    beaconState =\n+        beaconState.updated(state -> BlockProcessorUtil.process_deposits(state, deposits));\n+\n+    assertTrue(\n+        beaconState.getValidators().size() == originalValidatorRegistrySize,\n+        \"The validator was added to the validator registry.\");\n+    assertTrue(\n+        beaconState.getBalances().size() == originalValidatorBalancesSize,\n+        \"The balance was added to the validator balances.\");", "originalCommit": "02198a5bfd334d5edf3c9f74ebfc4001ddd664e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc2MTMyOA==", "url": "https://github.com/ConsenSys/teku/pull/2377#discussion_r456761328", "bodyText": "Good idea. Done.", "author": "benjaminion", "createdAt": "2020-07-18T07:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMjExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "712bebcc2404c0b594169019c810dc25eb4ce612", "chunk": "diff --git a/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java b/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\nindex 4ebd6c2997..3aa3bddd10 100644\n--- a/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\n+++ b/ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/BlockProcessorUtilTest.java\n\n@@ -194,7 +194,8 @@ class BlockProcessorUtilTest {\n     int originalValidatorRegistrySize = beaconState.getValidators().size();\n     int originalValidatorBalancesSize = beaconState.getBalances().size();\n \n-    // Attempt to process deposit with above data. We expect to fail, but not throw an exception.\n+    // Attempt to process deposit with above data. We expect this to fail, but not to throw and\n+    // exception.\n     beaconState =\n         beaconState.updated(state -> BlockProcessorUtil.process_deposits(state, deposits));\n \n"}}, {"oid": "712bebcc2404c0b594169019c810dc25eb4ce612", "url": "https://github.com/ConsenSys/teku/commit/712bebcc2404c0b594169019c810dc25eb4ce612", "message": "Fix and reenable some deposit processing tests", "committedDate": "2020-07-18T06:35:32Z", "type": "commit"}, {"oid": "87a5537584ce5c08ff56bdb7242628651e55a896", "url": "https://github.com/ConsenSys/teku/commit/87a5537584ce5c08ff56bdb7242628651e55a896", "message": "Simplify", "committedDate": "2020-07-18T06:35:32Z", "type": "commit"}, {"oid": "d8b8e311c7c2172b090407875eab003d8dd40ab6", "url": "https://github.com/ConsenSys/teku/commit/d8b8e311c7c2172b090407875eab003d8dd40ab6", "message": "Typo", "committedDate": "2020-07-18T06:35:32Z", "type": "commit"}, {"oid": "b6aab145c48be6071d78401b381f18fc7574bed5", "url": "https://github.com/ConsenSys/teku/commit/b6aab145c48be6071d78401b381f18fc7574bed5", "message": "Factor out common code", "committedDate": "2020-07-18T07:29:36Z", "type": "commit"}, {"oid": "b6aab145c48be6071d78401b381f18fc7574bed5", "url": "https://github.com/ConsenSys/teku/commit/b6aab145c48be6071d78401b381f18fc7574bed5", "message": "Factor out common code", "committedDate": "2020-07-18T07:29:36Z", "type": "forcePushed"}]}