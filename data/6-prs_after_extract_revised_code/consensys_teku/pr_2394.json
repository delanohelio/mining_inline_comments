{"pr_number": 2394, "pr_title": "updated GetStateRoot and GetState api to reprocess missing slots", "pr_createdAt": "2020-07-21T03:11:14Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2394", "timeline": [{"oid": "10b7426a0e90831638ca9896d9dcc574cc8836bf", "url": "https://github.com/ConsenSys/teku/commit/10b7426a0e90831638ca9896d9dcc574cc8836bf", "message": "updated GetStateRoot and GetState api to reprocess missing slots\n\n - added regression tests to show the state getting wound forward to cater for missing slots\n\n - added regression tests to show the state not being wound forward past head.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-21T03:02:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgxMzgyNg==", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457813826", "bodyText": "I suspect rather than this being a public method, we should just expose a method like getExactStateAtSlot(slot) which gets the block from the previous block and automatically processes empty slots as needed.  Saves having to reimplement that logic in multiple places.", "author": "ajsutton", "createdAt": "2020-07-21T03:25:41Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -183,6 +197,21 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {", "originalCommit": "10b7426a0e90831638ca9896d9dcc574cc8836bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgyNDEyMw==", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457824123", "bodyText": "yep fair call, it'll clean up the provider a bit.", "author": "rolfyone", "createdAt": "2020-07-21T04:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgxMzgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java b/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\nindex 75e8f3e0ed..afde650786 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\n\n@@ -197,18 +205,18 @@ public class CombinedChainDataClient {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n-  public BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {\n+  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {\n     if (preState.getSlot().equals(slot)) {\n       return preState;\n     } else if (slot.compareTo(getBestSlot()) > 0) {\n       LOG.debug(\"Attempted to wind forward to a future state: {}\", slot.toString());\n-      throw new IllegalStateException();\n+      return null;\n     }\n     try {\n       return stateTransition.process_slots(preState, slot);\n     } catch (SlotProcessingException | EpochProcessingException | IllegalArgumentException e) {\n-      LOG.warn(\"State Transition error\", e);\n-      throw new IllegalStateException();\n+      LOG.debug(\"State Transition error\", e);\n+      return null;\n     }\n   }\n \n"}}, {"oid": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "url": "https://github.com/ConsenSys/teku/commit/cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-21T05:02:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NDk5OA==", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457844998", "bodyText": "Same as above probably just:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).get().get();\n          \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).join().orElseThrow();", "author": "ajsutton", "createdAt": "2020-07-21T05:28:10Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java", "diffHunk": "@@ -68,16 +68,7 @@ private BeaconState getBeaconStateFromResponse(Response response) throws Excepti\n   private tech.pegasys.teku.datastructures.state.BeaconState getInternalState(\n       final UnsignedLong slot) {\n     try {\n-      return combinedChainDataClient\n-          .getBlockAndStateInEffectAtSlot(slot)\n-          .thenApply(\n-              maybeBlockAndState ->\n-                  maybeBlockAndState.map(\n-                      blockAndState ->\n-                          combinedChainDataClient.regenerateBeaconState(\n-                              blockAndState.getState(), slot)))\n-          .get()\n-          .get();\n+      return combinedChainDataClient.getStateAtSlotExact(slot).get().get();", "originalCommit": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "909ddd7e517c062b26a4e025ed1c6fee59d4be9a", "chunk": "diff --git a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java\nindex 8473e24983..ee0b6128a3 100644\n--- a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java\n+++ b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java\n\n@@ -67,11 +67,7 @@ public class GetStateWithDataIntegrationTest extends AbstractDataBackedRestAPIIn\n \n   private tech.pegasys.teku.datastructures.state.BeaconState getInternalState(\n       final UnsignedLong slot) {\n-    try {\n-      return combinedChainDataClient.getStateAtSlotExact(slot).get().get();\n-    } catch (Exception e) {\n-      return null;\n-    }\n+    return combinedChainDataClient.getStateAtSlotExact(slot).join().orElseThrow();\n   }\n \n   private Response getBySlot(final UnsignedLong slot) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NTQ4MA==", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457845480", "bodyText": "nit: Probably just\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).get().get().hash_tree_root();\n          \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).join().orElseThrow().hash_tree_root();\n          \n      \n    \n    \n  \n\nand probably then lose the try/catch.", "author": "ajsutton", "createdAt": "2020-07-21T05:29:48Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java", "diffHunk": "@@ -39,6 +45,47 @@ public void shouldReturnNoContentIfPreForkChoice_queryBySlot() throws Exception\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnStateRootIfBlockPresent() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX);\n+    final Response response = getBySlot(6);\n+    assertThat(response.code()).isEqualTo(SC_OK);\n+    final Bytes32 expectedRoot = getStateRootAtSlot(SIX);\n+    assertThat(getBytes32FromResponseBody(response)).isEqualTo(expectedRoot);\n+  }\n+\n+  @Test\n+  public void shouldNotReturnStateRootForFutureSlot() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX);\n+    final Response response = getBySlot(7);\n+    assertThat(response.code()).isEqualTo(SC_NOT_FOUND);\n+  }\n+\n+  @Test\n+  public void shouldReturnStateRootIfBlockMissed() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX, EIGHT);\n+    final Response response = getBySlot(7);\n+    assertThat(response.code()).isEqualTo(SC_OK);\n+    final Bytes32 expectedRoot = getStateRootAtSlot(SEVEN);\n+    assertThat(getBytes32FromResponseBody(response)).isEqualTo(expectedRoot);\n+  }\n+\n+  private Bytes32 getBytes32FromResponseBody(final Response response) throws IOException {\n+    final String bytes32String = jsonProvider.jsonToObject(response.body().string(), String.class);\n+    return Bytes32.fromHexString(bytes32String);\n+  }\n+\n+  private Bytes32 getStateRootAtSlot(final UnsignedLong slot) {\n+    try {\n+      return combinedChainDataClient.getStateAtSlotExact(slot).get().get().hash_tree_root();", "originalCommit": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "909ddd7e517c062b26a4e025ed1c6fee59d4be9a", "chunk": "diff --git a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java\nindex 8c485a826e..b92f5b3333 100644\n--- a/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java\n+++ b/data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java\n\n@@ -80,7 +80,11 @@ public class GetStateRootIntegrationTest extends AbstractDataBackedRestAPIIntegr\n \n   private Bytes32 getStateRootAtSlot(final UnsignedLong slot) {\n     try {\n-      return combinedChainDataClient.getStateAtSlotExact(slot).get().get().hash_tree_root();\n+      return combinedChainDataClient\n+          .getStateAtSlotExact(slot)\n+          .join()\n+          .orElseThrow()\n+          .hash_tree_root();\n     } catch (Exception e) {\n       return null;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NjM0Mg==", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457846342", "bodyText": "Probably return Optional<BeacaonState> here and Optional.empty() instead of the nulls and then use flatMapinstead ofmap` above.", "author": "ajsutton", "createdAt": "2020-07-21T05:32:30Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -183,6 +205,21 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {", "originalCommit": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "909ddd7e517c062b26a4e025ed1c6fee59d4be9a", "chunk": "diff --git a/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java b/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\nindex afde650786..f1e0c9f0fd 100644\n--- a/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\n+++ b/storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java\n\n@@ -205,18 +205,19 @@ public class CombinedChainDataClient {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n-  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {\n+  private Optional<BeaconState> regenerateBeaconState(\n+      final BeaconState preState, final UnsignedLong slot) {\n     if (preState.getSlot().equals(slot)) {\n-      return preState;\n+      return Optional.of(preState);\n     } else if (slot.compareTo(getBestSlot()) > 0) {\n       LOG.debug(\"Attempted to wind forward to a future state: {}\", slot.toString());\n-      return null;\n+      return Optional.empty();\n     }\n     try {\n-      return stateTransition.process_slots(preState, slot);\n+      return Optional.of(stateTransition.process_slots(preState, slot));\n     } catch (SlotProcessingException | EpochProcessingException | IllegalArgumentException e) {\n       LOG.debug(\"State Transition error\", e);\n-      return null;\n+      return Optional.empty();\n     }\n   }\n \n"}}, {"oid": "909ddd7e517c062b26a4e025ed1c6fee59d4be9a", "url": "https://github.com/ConsenSys/teku/commit/909ddd7e517c062b26a4e025ed1c6fee59d4be9a", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-21T07:24:01Z", "type": "commit"}]}