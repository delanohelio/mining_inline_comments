{"pr_number": 3379, "pr_title": "Batch validator status requests", "pr_createdAt": "2020-12-08T23:16:22Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3379", "timeline": [{"oid": "72e6a6d5ab9cf72f5391179c164233fe21d63d34", "url": "https://github.com/ConsenSys/teku/commit/72e6a6d5ab9cf72f5391179c164233fe21d63d34", "message": "Start", "committedDate": "2020-12-08T22:57:13Z", "type": "commit"}, {"oid": "bc37730d8159cb6f57c5f7f88c32d560ab589bb1", "url": "https://github.com/ConsenSys/teku/commit/bc37730d8159cb6f57c5f7f88c32d560ab589bb1", "message": "Merge branch 'master' into batchValidatorStatusRequests", "committedDate": "2020-12-08T22:57:50Z", "type": "commit"}, {"oid": "2656b1899cc18024863d7f7206da41d0f973ef38", "url": "https://github.com/ConsenSys/teku/commit/2656b1899cc18024863d7f7206da41d0f973ef38", "message": "Batch validator status requests", "committedDate": "2020-12-08T23:15:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4Mzc1MQ==", "url": "https://github.com/ConsenSys/teku/pull/3379#discussion_r538883751", "bodyText": "nit: validatorResponseTFunction isn't a great name.  Maybe valueExtractor?", "author": "ajsutton", "createdAt": "2020-12-08T23:20:46Z", "path": "validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java", "diffHunk": "@@ -99,54 +100,42 @@ public RemoteValidatorApiHandler(\n     if (publicKeys.isEmpty()) {\n       return SafeFuture.completedFuture(emptyMap());\n     }\n-    return sendRequest(\n-        () -> {\n-          final Map<BLSPublicKey, Integer> indices = new HashMap<>();\n-          for (int i = 0; i < publicKeys.size(); i += MAX_PUBLIC_KEY_BATCH_SIZE) {\n-            final List<BLSPublicKey> batch =\n-                publicKeys.subList(i, Math.min(publicKeys.size(), i + MAX_PUBLIC_KEY_BATCH_SIZE));\n-            requestValidatorIndices(batch).ifPresent(indices::putAll);\n-          }\n-          return indices;\n-        });\n+    return sendRequest(() -> makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getIndex));\n   }\n \n   @Override\n   public SafeFuture<Optional<Map<BLSPublicKey, ValidatorStatus>>> getValidatorStatuses(\n-      Set<BLSPublicKey> validatorPublicKeys) {\n+      List<BLSPublicKey> publicKeys) {\n     return sendRequest(\n-        () ->\n-            apiClient\n-                .getValidators(\n-                    validatorPublicKeys.stream()\n-                        .map(BLSPublicKey::toString)\n-                        .collect(Collectors.toList()))\n-                .map(\n-                    list ->\n-                        list.stream()\n-                            .collect(\n-                                toMap(\n-                                    ValidatorResponse::getPublicKey,\n-                                    ValidatorResponse::getStatus))));\n+        () -> Optional.of(makeBatchedValidatorRequest(publicKeys, ValidatorResponse::getStatus)));\n+  }\n+\n+  private <T> Map<BLSPublicKey, T> makeBatchedValidatorRequest(\n+      List<BLSPublicKey> publicKeys, Function<ValidatorResponse, T> validatorResponseTFunction) {\n+    final Map<BLSPublicKey, T> returnedObjects = new HashMap<>();\n+    for (int i = 0; i < publicKeys.size(); i += MAX_PUBLIC_KEY_BATCH_SIZE) {\n+      final List<BLSPublicKey> batch =\n+          publicKeys.subList(i, Math.min(publicKeys.size(), i + MAX_PUBLIC_KEY_BATCH_SIZE));\n+      requestValidatorObject(batch, validatorResponseTFunction).ifPresent(returnedObjects::putAll);\n+    }\n+    return returnedObjects;\n   }\n \n-  private Optional<Map<BLSPublicKey, Integer>> requestValidatorIndices(\n-      final List<BLSPublicKey> batch) {\n+  private <T> Optional<Map<BLSPublicKey, T>> requestValidatorObject(\n+      final List<BLSPublicKey> batch, Function<ValidatorResponse, T> validatorResponseTFunction) {", "originalCommit": "2656b1899cc18024863d7f7206da41d0f973ef38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4NDAyMQ==", "url": "https://github.com/ConsenSys/teku/pull/3379#discussion_r538884021", "bodyText": "blame intellij!", "author": "cemozerr", "createdAt": "2020-12-08T23:21:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4Mzc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4NDQwOA==", "url": "https://github.com/ConsenSys/teku/pull/3379#discussion_r538884408", "bodyText": "done.", "author": "cemozerr", "createdAt": "2020-12-08T23:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4Mzc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e92db2fc1b891c585071d3f9edf17b63b44aac82", "chunk": "diff --git a/validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java b/validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java\nindex 58f816d8d2..fe387e2e60 100644\n--- a/validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java\n+++ b/validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java\n\n@@ -111,31 +111,31 @@ public class RemoteValidatorApiHandler implements ValidatorApiChannel {\n   }\n \n   private <T> Map<BLSPublicKey, T> makeBatchedValidatorRequest(\n-      List<BLSPublicKey> publicKeys, Function<ValidatorResponse, T> validatorResponseTFunction) {\n+      List<BLSPublicKey> publicKeys, Function<ValidatorResponse, T> valueExtractor) {\n     final Map<BLSPublicKey, T> returnedObjects = new HashMap<>();\n     for (int i = 0; i < publicKeys.size(); i += MAX_PUBLIC_KEY_BATCH_SIZE) {\n       final List<BLSPublicKey> batch =\n           publicKeys.subList(i, Math.min(publicKeys.size(), i + MAX_PUBLIC_KEY_BATCH_SIZE));\n-      requestValidatorObject(batch, validatorResponseTFunction).ifPresent(returnedObjects::putAll);\n+      requestValidatorObject(batch, valueExtractor).ifPresent(returnedObjects::putAll);\n     }\n     return returnedObjects;\n   }\n \n   private <T> Optional<Map<BLSPublicKey, T>> requestValidatorObject(\n-      final List<BLSPublicKey> batch, Function<ValidatorResponse, T> validatorResponseTFunction) {\n+      final List<BLSPublicKey> batch, Function<ValidatorResponse, T> valueExtractor) {\n     return apiClient\n         .getValidators(\n             batch.stream()\n                 .map(key -> key.toBytesCompressed().toHexString())\n                 .collect(Collectors.toList()))\n-        .map(responses -> convertToValidatorMap(responses, validatorResponseTFunction));\n+        .map(responses -> convertToValidatorMap(responses, valueExtractor));\n   }\n \n   private <T> Map<BLSPublicKey, T> convertToValidatorMap(\n       final List<ValidatorResponse> validatorResponses,\n-      Function<ValidatorResponse, T> validatorResponseTFunction) {\n+      Function<ValidatorResponse, T> valueExtractor) {\n     return validatorResponses.stream()\n-        .collect(toMap(ValidatorResponse::getPublicKey, validatorResponseTFunction));\n+        .collect(toMap(ValidatorResponse::getPublicKey, valueExtractor));\n   }\n \n   @Override\n"}}, {"oid": "e92db2fc1b891c585071d3f9edf17b63b44aac82", "url": "https://github.com/ConsenSys/teku/commit/e92db2fc1b891c585071d3f9edf17b63b44aac82", "message": "Change parameter name", "committedDate": "2020-12-08T23:22:32Z", "type": "commit"}]}