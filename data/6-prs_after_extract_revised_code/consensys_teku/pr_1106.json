{"pr_number": 1106, "pr_title": "Optimize: parallel attestations validation on block import ", "pr_createdAt": "2020-01-22T13:30:54Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1106", "timeline": [{"oid": "4873f0bbcce245ad871f7cd0cdc9bba711743e20", "url": "https://github.com/ConsenSys/teku/commit/4873f0bbcce245ad871f7cd0cdc9bba711743e20", "message": "Parallelize block attestations validation", "committedDate": "2020-01-22T12:12:07Z", "type": "commit"}, {"oid": "d84868dc6a4338cb1431b506eea66fd9d203bacb", "url": "https://github.com/ConsenSys/teku/commit/d84868dc6a4338cb1431b506eea66fd9d203bacb", "message": "Move test helper attestation aggregation methods from the jmh-benchmark module to test-support", "committedDate": "2020-01-22T12:31:52Z", "type": "commit"}, {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159", "url": "https://github.com/ConsenSys/teku/commit/32172ed5f9efafa88f29b48da2e62830917ac159", "message": "For block import test: increase the number of validators to have non-empty committee, speed up chain setup by disabling deposits verify, add tests importing blocks with attestations", "committedDate": "2020-01-22T13:27:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ==", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r369842569", "bodyText": "Not critical, but would we be better off using allMatch(is_valid_indexed_attestation(...)) here? I suspect the stream bails out if one thread throws an exception anyway but allMatch makes it a bit more explicit and then we can just check the result instead of catching the exception.\nCould even use .filter(!is_valid_indexed_attestation).findAny() and include actual information about which attestation we found was invalid...", "author": "ajsutton", "createdAt": "2020-01-22T22:34:29Z", "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "originalCommit": "32172ed5f9efafa88f29b48da2e62830917ac159", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1NTQxOA==", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r369955418", "bodyText": "@ajsutton yep, your variant looks better.\nWhat's the better way to address this change: reopen this PR, create a separate new one, or just put this change together with one of next PRs?", "author": "Nashatyrev", "createdAt": "2020-01-23T06:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNjI2Ng==", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r370316266", "bodyText": "Probably just a new PR unless you happen to be making more changes right in this area.", "author": "ajsutton", "createdAt": "2020-01-23T19:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNzEzOA==", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r370337138", "bodyText": "#1115", "author": "Nashatyrev", "createdAt": "2020-01-23T20:26:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}], "type": "inlineReview", "revised_code": null}]}