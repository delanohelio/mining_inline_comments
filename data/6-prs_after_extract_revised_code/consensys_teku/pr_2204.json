{"pr_number": 2204, "pr_title": "Print expected and actual validator index if attestation invalid", "pr_createdAt": "2020-06-23T17:55:12Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2204", "timeline": [{"oid": "dfcb8c8a604f431a176ced13d074f821daa5b1b1", "url": "https://github.com/ConsenSys/teku/commit/dfcb8c8a604f431a176ced13d074f821daa5b1b1", "message": "Print expected and actual validator index if invalid attestation", "committedDate": "2020-06-23T17:53:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MzM1Mg==", "url": "https://github.com/ConsenSys/teku/pull/2204#discussion_r444453352", "bodyText": "Could make this more compact with something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                actualValidatorIndex.ifPresentOrElse(\n          \n          \n            \n                    actualIndex ->\n          \n          \n            \n                        log.error(\n          \n          \n            \n                            print(\n          \n          \n            \n                                PREFIX\n          \n          \n            \n                                    + \"Produced invalid attestation for slot \"\n          \n          \n            \n                                    + slot\n          \n          \n            \n                                    + \" with expected validator index: \"\n          \n          \n            \n                                    + expectedValidatorIndex\n          \n          \n            \n                                    + \" and actual validator index: \"\n          \n          \n            \n                                    + actualIndex\n          \n          \n            \n                                    + \" invalid reason: \"\n          \n          \n            \n                                    + reason,\n          \n          \n            \n                                Color.RED)),\n          \n          \n            \n                final String actualDescription = actualValidatorIndex.map(idx -> \" and actual validator index: \" + actualIndex).orElse(\"\");\n          \n          \n            \n                log.error(\n          \n          \n            \n                            print(\n          \n          \n            \n                                PREFIX\n          \n          \n            \n                                    + \"Produced invalid attestation for slot \"\n          \n          \n            \n                                    + slot\n          \n          \n            \n                                    + \" with expected validator index: \"\n          \n          \n            \n                                    + expectedValidatorIndex\n          \n          \n            \n                                    + actualDescription\n          \n          \n            \n                                    + \" . Invalid reason: \"\n          \n          \n            \n                                    + reason,\n          \n          \n            \n                                Color.RED)),", "author": "mbaxter", "createdAt": "2020-06-23T19:21:35Z", "path": "logging/src/main/java/tech/pegasys/teku/logging/ValidatorLogger.java", "diffHunk": "@@ -88,9 +89,36 @@ public void aggregationSkipped(final UnsignedLong slot) {\n             Color.YELLOW));\n   }\n \n-  public void producedInvalidAttestation(final UnsignedLong slot, final String reason) {\n-    log.error(\n-        print(PREFIX + \"Produced invalid attestation for slot \" + slot + \": \" + reason, Color.RED));\n+  public void producedInvalidAttestation(\n+      final UnsignedLong slot,\n+      final int expectedValidatorIndex,\n+      final Optional<Integer> actualValidatorIndex,\n+      final String reason) {\n+    actualValidatorIndex.ifPresentOrElse(\n+        actualIndex ->\n+            log.error(\n+                print(\n+                    PREFIX\n+                        + \"Produced invalid attestation for slot \"\n+                        + slot\n+                        + \" with expected validator index: \"\n+                        + expectedValidatorIndex\n+                        + \" and actual validator index: \"\n+                        + actualIndex\n+                        + \" invalid reason: \"\n+                        + reason,\n+                    Color.RED)),", "originalCommit": "dfcb8c8a604f431a176ced13d074f821daa5b1b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NzkwNQ==", "url": "https://github.com/ConsenSys/teku/pull/2204#discussion_r444457905", "bodyText": "This makes sense to me.", "author": "cemozerr", "createdAt": "2020-06-23T19:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MzM1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "cd90bf9ef2f6f00b80a8eb31694783fe3629c4df", "chunk": "diff --git a/logging/src/main/java/tech/pegasys/teku/logging/ValidatorLogger.java b/logging/src/main/java/tech/pegasys/teku/logging/ValidatorLogger.java\nindex 1da1febc05..f052550a58 100644\n--- a/logging/src/main/java/tech/pegasys/teku/logging/ValidatorLogger.java\n+++ b/logging/src/main/java/tech/pegasys/teku/logging/ValidatorLogger.java\n\n@@ -94,31 +94,19 @@ public class ValidatorLogger {\n       final int expectedValidatorIndex,\n       final Optional<Integer> actualValidatorIndex,\n       final String reason) {\n-    actualValidatorIndex.ifPresentOrElse(\n-        actualIndex ->\n-            log.error(\n-                print(\n-                    PREFIX\n-                        + \"Produced invalid attestation for slot \"\n-                        + slot\n-                        + \" with expected validator index: \"\n-                        + expectedValidatorIndex\n-                        + \" and actual validator index: \"\n-                        + actualIndex\n-                        + \" invalid reason: \"\n-                        + reason,\n-                    Color.RED)),\n-        () ->\n-            log.error(\n-                print(\n-                    PREFIX\n-                        + \"Produced invalid attestation for slot \"\n-                        + slot\n-                        + \" with expected validator index: \"\n-                        + expectedValidatorIndex\n-                        + \" invalid reason: \"\n-                        + reason,\n-                    Color.RED)));\n+    final String actualDescription =\n+        actualValidatorIndex.map(idx -> \" and actual validator index: \" + idx).orElse(\"\");\n+    log.error(\n+        print(\n+            PREFIX\n+                + \"Produced invalid attestation for slot \"\n+                + slot\n+                + \" with expected validator index: \"\n+                + expectedValidatorIndex\n+                + actualDescription\n+                + \" . Invalid reason: \"\n+                + reason,\n+            Color.RED));\n   }\n \n   public void producedInvalidAggregate(final UnsignedLong slot, final String reason) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NTM2Mw==", "url": "https://github.com/ConsenSys/teku/pull/2204#discussion_r444455363", "bodyText": "Do we need this method?  Could we just require the validatorIndex as a second param and drop the Optional?", "author": "mbaxter", "createdAt": "2020-06-23T19:25:28Z", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -222,13 +223,29 @@ public void subscribeToPersistentSubnets(Set<SubnetSubscription> subnetSubscript\n   }\n \n   @Override\n-  public void sendSignedAttestation(final Attestation attestation) {\n+  public void sendSignedAttestation(\n+      final Attestation attestation, final Optional<Integer> expectedValidatorIndex) {\n     attestationManager\n         .onAttestation(ValidateableAttestation.fromAttestation(attestation))\n         .ifInvalid(\n-            reason ->\n-                VALIDATOR_LOGGER.producedInvalidAttestation(\n-                    attestation.getData().getSlot(), reason));\n+            reason -> {\n+              int actualValidatorIndex =\n+                  get_attesting_indices(\n+                          combinedChainDataClient.getHeadStateFromStore().orElseThrow(),\n+                          attestation.getData(),\n+                          attestation.getAggregation_bits())\n+                      .get(0);\n+              VALIDATOR_LOGGER.producedInvalidAttestation(\n+                  attestation.getData().getSlot(),\n+                  actualValidatorIndex,\n+                  expectedValidatorIndex,\n+                  reason);\n+            });\n+  }\n+\n+  @Override\n+  public void sendSignedAttestation(final Attestation attestation) {\n+    sendSignedAttestation(attestation, Optional.empty());", "originalCommit": "dfcb8c8a604f431a176ced13d074f821daa5b1b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NzY1OQ==", "url": "https://github.com/ConsenSys/teku/pull/2204#discussion_r444457659", "bodyText": "I kept it because otherwise, I would need to change a lot of tests, and since we don't normally require this change and only doing it for debugging purposes, I decided to keep this and pass the validator index as optional. I don't have a strong preference though.", "author": "cemozerr", "createdAt": "2020-06-23T19:29:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NTM2Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cd90bf9ef2f6f00b80a8eb31694783fe3629c4df", "url": "https://github.com/ConsenSys/teku/commit/cd90bf9ef2f6f00b80a8eb31694783fe3629c4df", "message": "Refactor printing logic", "committedDate": "2020-06-23T19:56:27Z", "type": "commit"}]}