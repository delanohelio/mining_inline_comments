{"pr_number": 1513, "pr_title": "Remove FinalizedCheckpointEvent", "pr_createdAt": "2020-03-31T22:30:36Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1513", "timeline": [{"oid": "64e3842bd0bce8ac7b28a16028f906c01250c7ca", "url": "https://github.com/ConsenSys/teku/commit/64e3842bd0bce8ac7b28a16028f906c01250c7ca", "message": "Remove FinalizedCheckpointEvent", "committedDate": "2020-03-31T22:28:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDYxMw==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401254613", "bodyText": "I had to pull out the creation of pendingAttestations to here so that I can do the subscription to event channel on this level rather than passing event channels to modules below. Not sure whether I should move the initialization of all the objects in AttestationManager, i.e. AttestationProcessor and FutureAttestations to this level, so that they all can follow the dependency injection model.", "author": "cemozerr", "createdAt": "2020-03-31T22:33:53Z", "path": "services/beaconchain/src/main/java/tech/pegasys/artemis/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -271,8 +275,12 @@ private void initPreGenesisDepositHandler() {\n   }\n \n   private void initAttestationPropagationManager() {\n-    attestationManager = AttestationManager.create(eventBus, recentChainData);\n-    eventChannels.subscribe(SlotEventsChannel.class, attestationManager);\n+    final PendingPool<DelayableAttestation> pendingAttestations =", "originalCommit": "64e3842bd0bce8ac7b28a16028f906c01250c7ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDg0NQ==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401254845", "bodyText": "The same thinking applies to the members of BlockPropagationManager below.", "author": "cemozerr", "createdAt": "2020-03-31T22:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4MTY2Ng==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401281666", "bodyText": "I'm a fan of pulling the creation of stuff upward more and doing more dependency injection.  At some point we'll need to refactor BeaconChainController so we don't literally have one class creating the entire world but the idea of having a few dedicated builder classes at the top that build things and then inject them where needed makes a lot of sense.", "author": "ajsutton", "createdAt": "2020-03-31T23:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4MzUzMw==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401283533", "bodyText": "Makes sense. Will move objects of AttestationPropagationManager and BlockPropagationManager in that direction.", "author": "cemozerr", "createdAt": "2020-04-01T00:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "40e2a7df5c59efb2ec292c4950692b7e7cc503e2", "chunk": "diff --git a/services/beaconchain/src/main/java/tech/pegasys/artemis/services/beaconchain/BeaconChainController.java b/services/beaconchain/src/main/java/tech/pegasys/artemis/services/beaconchain/BeaconChainController.java\nindex 52187b3de..867202eba 100644\n--- a/services/beaconchain/src/main/java/tech/pegasys/artemis/services/beaconchain/BeaconChainController.java\n+++ b/services/beaconchain/src/main/java/tech/pegasys/artemis/services/beaconchain/BeaconChainController.java\n\n@@ -277,7 +280,13 @@ public class BeaconChainController extends Service implements TimeTickChannel {\n   private void initAttestationPropagationManager() {\n     final PendingPool<DelayableAttestation> pendingAttestations =\n         PendingPool.createForAttestations(eventBus);\n-    attestationManager = AttestationManager.create(eventBus, pendingAttestations, recentChainData);\n+    final FutureItems<DelayableAttestation> futureAttestations =\n+        new FutureItems<>(DelayableAttestation::getEarliestSlotForProcessing);\n+    final ForkChoiceAttestationProcessor forkChoiceAttestationProcessor =\n+        new ForkChoiceAttestationProcessor(recentChainData, new StateTransition());\n+    attestationManager =\n+        AttestationManager.create(\n+            eventBus, pendingAttestations, futureAttestations, forkChoiceAttestationProcessor);\n     eventChannels\n         .subscribe(SlotEventsChannel.class, attestationManager)\n         .subscribe(FinalizedCheckpointChannel.class, pendingAttestations);\n"}}, {"oid": "5992d2ba850b7f3656218fd532dffa01b1a2e4a1", "url": "https://github.com/ConsenSys/teku/commit/5992d2ba850b7f3656218fd532dffa01b1a2e4a1", "message": "Merge branch 'master' into removeFinalizedCheckpointEvent", "committedDate": "2020-03-31T22:35:59Z", "type": "commit"}, {"oid": "7af136dc19c2c680965425eb352aa082ff140038", "url": "https://github.com/ConsenSys/teku/commit/7af136dc19c2c680965425eb352aa082ff140038", "message": "Merge branch 'master' into removeFinalizedCheckpointEvent", "committedDate": "2020-03-31T22:47:44Z", "type": "commit"}, {"oid": "d23ed7f49cbec51635872ec22e80a60f8be04e18", "url": "https://github.com/ConsenSys/teku/commit/d23ed7f49cbec51635872ec22e80a60f8be04e18", "message": "Merge branch 'master' into removeFinalizedCheckpointEvent", "committedDate": "2020-03-31T23:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3NDg4OA==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401274888", "bodyText": "Seems weird to have two public methods that do the exact same thing.  And this new one seems to be unused... :)", "author": "ajsutton", "createdAt": "2020-03-31T23:35:20Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/state/Checkpoint.java", "diffHunk": "@@ -124,6 +124,10 @@ public UnsignedLong getEpochStartSlot() {\n     return compute_start_slot_at_epoch(getEpoch());\n   }\n \n+  public UnsignedLong getFinalizedSlot() {\n+    return getEpochStartSlot();\n+  }", "originalCommit": "d23ed7f49cbec51635872ec22e80a60f8be04e18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4ODgzNA==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401288834", "bodyText": "It's used! The now removed FinalizedCheckpointEvent had a method like this: getFinalizedSlot() which would return checkpoint.getEpochStartSlot(), for legibility purposes as I understand, so I wanted to keep the same thing, but it does look weird that a random Checkpoint can have a getFinalizedSlot() method. I'm going to remove it.", "author": "cemozerr", "createdAt": "2020-04-01T00:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3NDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MDQxMA==", "url": "https://github.com/ConsenSys/teku/pull/1513#discussion_r401290410", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-04-01T00:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3NDg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "40e2a7df5c59efb2ec292c4950692b7e7cc503e2", "chunk": "diff --git a/ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/state/Checkpoint.java b/ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/state/Checkpoint.java\nindex 52611ac5d..98b24ddc6 100644\n--- a/ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/state/Checkpoint.java\n+++ b/ethereum/datastructures/src/main/java/tech/pegasys/artemis/datastructures/state/Checkpoint.java\n\n@@ -124,10 +124,6 @@ public class Checkpoint extends AbstractImmutableContainer<Checkpoint>\n     return compute_start_slot_at_epoch(getEpoch());\n   }\n \n-  public UnsignedLong getFinalizedSlot() {\n-    return getEpochStartSlot();\n-  }\n-\n   @Override\n   public Bytes32 hash_tree_root() {\n     return hashTreeRoot();\n"}}, {"oid": "40e2a7df5c59efb2ec292c4950692b7e7cc503e2", "url": "https://github.com/ConsenSys/teku/commit/40e2a7df5c59efb2ec292c4950692b7e7cc503e2", "message": "Dependency inject member variables", "committedDate": "2020-04-01T00:28:35Z", "type": "commit"}]}