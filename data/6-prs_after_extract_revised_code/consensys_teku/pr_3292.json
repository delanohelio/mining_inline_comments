{"pr_number": 3292, "pr_title": "Ensure the epoch is known prior to attempting to perform duties.", "pr_createdAt": "2020-11-24T02:07:02Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3292", "timeline": [{"oid": "34bc930fd2ac01b97d8e6f841a01b1cd5d430ee2", "url": "https://github.com/ConsenSys/teku/commit/34bc930fd2ac01b97d8e6f841a01b1cd5d430ee2", "message": "verify the unsigned data returned for signing is for the expected slot\n\npartially addresses #3154\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-23T04:38:41Z", "type": "commit"}, {"oid": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "url": "https://github.com/ConsenSys/teku/commit/e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-23T04:39:44Z", "type": "commit"}, {"oid": "4f3727b2a7057a9d5da70a423f315e49eafbf079", "url": "https://github.com/ConsenSys/teku/commit/4f3727b2a7057a9d5da70a423f315e49eafbf079", "message": "review comments\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-23T05:16:31Z", "type": "commit"}, {"oid": "c257c6f219de7018583f4150f3d63e8997a73dd4", "url": "https://github.com/ConsenSys/teku/commit/c257c6f219de7018583f4150f3d63e8997a73dd4", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-23T05:20:13Z", "type": "commit"}, {"oid": "224e113caae2752cd925b3d906ee30a43077dd65", "url": "https://github.com/ConsenSys/teku/commit/224e113caae2752cd925b3d906ee30a43077dd65", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-23T21:20:35Z", "type": "commit"}, {"oid": "fb1a14d06129f1e680ceb858d464efd6a27be272", "url": "https://github.com/ConsenSys/teku/commit/fb1a14d06129f1e680ceb858d464efd6a27be272", "message": "Ensure the epoch is known prior to attempting to perform duties.\n\nIf the current epoch is not known, then it is possible to sign something that is invalid, for example too far in the future.\n\nfixes #3154\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-24T02:05:19Z", "type": "commit"}, {"oid": "34e9d512fca8750655c5df04d96259a3c5cf69f7", "url": "https://github.com/ConsenSys/teku/commit/34e9d512fca8750655c5df04d96259a3c5cf69f7", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-24T02:30:03Z", "type": "commit"}, {"oid": "f0d89d9ae522423bd60161aa0c37ae353b358f4d", "url": "https://github.com/ConsenSys/teku/commit/f0d89d9ae522423bd60161aa0c37ae353b358f4d", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-24T03:07:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3NDUyOQ==", "url": "https://github.com/ConsenSys/teku/pull/3292#discussion_r529174529", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.info(\n          \n          \n            \n                      \"current epoch {} could not be verified against the current slot {}, not processing attestation duty\",\n          \n          \n            \n                      getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n          \n          \n            \n                      slot);\n          \n          \n            \n                  LOG.info(\n          \n          \n            \n                      \"Not performing attestation duties for slot {} because it is too far ahead of the current slot {}\",\n          \n          \n            \n                      slot,\n          \n          \n            \n                      getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"));", "author": "ajsutton", "createdAt": "2020-11-24T03:15:46Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java", "diffHunk": "@@ -35,14 +39,35 @@ public AttestationDutyScheduler(\n   public void onAttestationCreationDue(final UInt64 slot) {\n     // Check slot being null for the edge case of genesis slot (i.e. slot 0)\n     if (lastAttestationCreationSlot != null && slot.compareTo(lastAttestationCreationSlot) <= 0) {\n+      LOG.debug(\n+          \"lastAttestationCreationSlot {} is ahead of current slot {}, not processing attestation duty.\",\n+          lastAttestationCreationSlot,\n+          slot);\n       return;\n     }\n+\n+    if (!isAbleToVerifyEpoch(slot)) {\n+      LOG.info(\n+          \"current epoch {} could not be verified against the current slot {}, not processing attestation duty\",\n+          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n+          slot);", "originalCommit": "f0d89d9ae522423bd60161aa0c37ae353b358f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0a8316593b058ed9b26620da56bc02def759400", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\nindex 44395e4ab..b733015e4 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\n\n@@ -40,17 +40,17 @@ public class AttestationDutyScheduler extends AbstractDutyScheduler {\n     // Check slot being null for the edge case of genesis slot (i.e. slot 0)\n     if (lastAttestationCreationSlot != null && slot.compareTo(lastAttestationCreationSlot) <= 0) {\n       LOG.debug(\n-          \"lastAttestationCreationSlot {} is ahead of current slot {}, not processing attestation duty.\",\n-          lastAttestationCreationSlot,\n-          slot);\n+          \"Not performing attestation duties for slot {} because lastAttestationCreationSlot {} is beyond that.\",\n+          slot,\n+          lastAttestationCreationSlot);\n       return;\n     }\n \n     if (!isAbleToVerifyEpoch(slot)) {\n       LOG.info(\n-          \"current epoch {} could not be verified against the current slot {}, not processing attestation duty\",\n-          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n-          slot);\n+          \"Not performing attestation duties for slot {} because it is too far ahead of the current slot {}\",\n+          slot,\n+          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"));\n       return;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3NDYwNQ==", "url": "https://github.com/ConsenSys/teku/pull/3292#discussion_r529174605", "bodyText": "As above. :)", "author": "ajsutton", "createdAt": "2020-11-24T03:16:05Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java", "diffHunk": "@@ -35,14 +39,35 @@ public AttestationDutyScheduler(\n   public void onAttestationCreationDue(final UInt64 slot) {\n     // Check slot being null for the edge case of genesis slot (i.e. slot 0)\n     if (lastAttestationCreationSlot != null && slot.compareTo(lastAttestationCreationSlot) <= 0) {\n+      LOG.debug(\n+          \"lastAttestationCreationSlot {} is ahead of current slot {}, not processing attestation duty.\",\n+          lastAttestationCreationSlot,\n+          slot);\n       return;\n     }\n+\n+    if (!isAbleToVerifyEpoch(slot)) {\n+      LOG.info(\n+          \"current epoch {} could not be verified against the current slot {}, not processing attestation duty\",\n+          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n+          slot);\n+      return;\n+    }\n+\n     lastAttestationCreationSlot = slot;\n     notifyDutyQueue(DutyQueue::onAttestationCreationDue, slot);\n   }\n \n   @Override\n   public void onAttestationAggregationDue(final UInt64 slot) {\n+    if (!isAbleToVerifyEpoch(slot)) {\n+      LOG.info(\n+          \"current epoch {} could not be verified against the current slot {}, not processing aggregation duty\",", "originalCommit": "f0d89d9ae522423bd60161aa0c37ae353b358f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0a8316593b058ed9b26620da56bc02def759400", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\nindex 44395e4ab..b733015e4 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/AttestationDutyScheduler.java\n\n@@ -40,17 +40,17 @@ public class AttestationDutyScheduler extends AbstractDutyScheduler {\n     // Check slot being null for the edge case of genesis slot (i.e. slot 0)\n     if (lastAttestationCreationSlot != null && slot.compareTo(lastAttestationCreationSlot) <= 0) {\n       LOG.debug(\n-          \"lastAttestationCreationSlot {} is ahead of current slot {}, not processing attestation duty.\",\n-          lastAttestationCreationSlot,\n-          slot);\n+          \"Not performing attestation duties for slot {} because lastAttestationCreationSlot {} is beyond that.\",\n+          slot,\n+          lastAttestationCreationSlot);\n       return;\n     }\n \n     if (!isAbleToVerifyEpoch(slot)) {\n       LOG.info(\n-          \"current epoch {} could not be verified against the current slot {}, not processing attestation duty\",\n-          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n-          slot);\n+          \"Not performing attestation duties for slot {} because it is too far ahead of the current slot {}\",\n+          slot,\n+          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"));\n       return;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3NDY3OQ==", "url": "https://github.com/ConsenSys/teku/pull/3292#discussion_r529174679", "bodyText": "Wording tweak again. :)", "author": "ajsutton", "createdAt": "2020-11-24T03:16:17Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/BlockDutyScheduler.java", "diffHunk": "@@ -32,6 +36,14 @@ public BlockDutyScheduler(\n \n   @Override\n   public void onBlockProductionDue(final UInt64 slot) {\n+    if (!isAbleToVerifyEpoch(slot)) {\n+      LOG.info(\n+          \"current epoch {} could not be verified against the current slot {}, not processing block duty\",", "originalCommit": "f0d89d9ae522423bd60161aa0c37ae353b358f4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0a8316593b058ed9b26620da56bc02def759400", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/BlockDutyScheduler.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/BlockDutyScheduler.java\nindex 7e12dcc07..6ee645a88 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/BlockDutyScheduler.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/BlockDutyScheduler.java\n\n@@ -38,9 +38,9 @@ public class BlockDutyScheduler extends AbstractDutyScheduler {\n   public void onBlockProductionDue(final UInt64 slot) {\n     if (!isAbleToVerifyEpoch(slot)) {\n       LOG.info(\n-          \"current epoch {} could not be verified against the current slot {}, not processing block duty\",\n-          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"),\n-          slot);\n+          \"Not performing block duties for slot {} because it is too far ahead of the current slot {}\",\n+          slot,\n+          getCurrentEpoch().map(UInt64::toString).orElse(\"UNDEFINED\"));\n       return;\n     }\n \n"}}, {"oid": "a0a8316593b058ed9b26620da56bc02def759400", "url": "https://github.com/ConsenSys/teku/commit/a0a8316593b058ed9b26620da56bc02def759400", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-24T03:31:09Z", "type": "commit"}]}