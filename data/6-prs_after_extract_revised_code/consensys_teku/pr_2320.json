{"pr_number": 2320, "pr_title": "Add persistent subnets list to discovery peer", "pr_createdAt": "2020-07-06T17:55:11Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2320", "timeline": [{"oid": "87d9eae4043c3db9cdbe3f01975e2ec0fc0406e5", "url": "https://github.com/ConsenSys/teku/commit/87d9eae4043c3db9cdbe3f01975e2ec0fc0406e5", "message": "Add persistent subnets list to DiscoveryPeer", "committedDate": "2020-07-06T17:49:08Z", "type": "commit"}, {"oid": "d69b28cb791c5708555207faf49933ab7139ec6f", "url": "https://github.com/ConsenSys/teku/commit/d69b28cb791c5708555207faf49933ab7139ec6f", "message": "Run spotless", "committedDate": "2020-07-06T17:52:38Z", "type": "commit"}, {"oid": "565d1e4ac50af748affb3c3e782d35f2b8288691", "url": "https://github.com/ConsenSys/teku/commit/565d1e4ac50af748affb3c3e782d35f2b8288691", "message": "Merge branch 'master' into addPersistentSubnetsListToDiscoveryPeer", "committedDate": "2020-07-06T19:25:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMDY4OQ==", "url": "https://github.com/ConsenSys/teku/pull/2320#discussion_r450500689", "bodyText": "I think it's probably better to just use an empty list if the attribute is not present rather than having an Optional<List>.  Not advertising any persistent subnets is effectively the same as not having any.\nAlso it would probably be better to stick with the Bitvector rather than converting to List<Integer> the most common thing we'll do is check for a specific value which in a List means iterating through every item but is as single lookup in a Bitvector.", "author": "ajsutton", "createdAt": "2020-07-06T21:56:58Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/DiscoveryPeer.java", "diffHunk": "@@ -14,21 +14,28 @@\n package tech.pegasys.teku.networking.p2p.discovery;\n \n import com.google.common.base.MoreObjects;\n+import com.google.common.base.Objects;\n import java.net.InetSocketAddress;\n-import java.util.Objects;\n+import java.util.List;\n import java.util.Optional;\n import org.apache.tuweni.bytes.Bytes;\n+import tech.pegasys.teku.datastructures.networking.libp2p.rpc.EnrForkId;\n \n public class DiscoveryPeer {\n   private final Bytes publicKey;\n   private final InetSocketAddress nodeAddress;\n-  private final Optional<Bytes> enrForkId;\n+  private final Optional<EnrForkId> enrForkId;\n+  private final Optional<List<Integer>> persistentSubnets;\n \n   public DiscoveryPeer(\n-      final Bytes publicKey, final InetSocketAddress nodeAddress, final Optional<Bytes> enrForkId) {\n+      final Bytes publicKey,\n+      final InetSocketAddress nodeAddress,\n+      final Optional<EnrForkId> enrForkId,\n+      final Optional<List<Integer>> persistentSubnets) {", "originalCommit": "565d1e4ac50af748affb3c3e782d35f2b8288691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyMjI3Mg==", "url": "https://github.com/ConsenSys/teku/pull/2320#discussion_r450922272", "bodyText": "Makes sense to me.", "author": "cemozerr", "createdAt": "2020-07-07T14:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMDY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca9a5b6ed03acbb33c81a945525e1f2141b7acc6", "chunk": "diff --git a/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/DiscoveryPeer.java b/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/DiscoveryPeer.java\nindex 84d7502b6c..b34dfe671b 100644\n--- a/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/DiscoveryPeer.java\n+++ b/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/DiscoveryPeer.java\n\n@@ -16,22 +16,22 @@ package tech.pegasys.teku.networking.p2p.discovery;\n import com.google.common.base.MoreObjects;\n import com.google.common.base.Objects;\n import java.net.InetSocketAddress;\n-import java.util.List;\n import java.util.Optional;\n import org.apache.tuweni.bytes.Bytes;\n import tech.pegasys.teku.datastructures.networking.libp2p.rpc.EnrForkId;\n+import tech.pegasys.teku.ssz.SSZTypes.Bitvector;\n \n public class DiscoveryPeer {\n   private final Bytes publicKey;\n   private final InetSocketAddress nodeAddress;\n   private final Optional<EnrForkId> enrForkId;\n-  private final Optional<List<Integer>> persistentSubnets;\n+  private final Bitvector persistentSubnets;\n \n   public DiscoveryPeer(\n       final Bytes publicKey,\n       final InetSocketAddress nodeAddress,\n       final Optional<EnrForkId> enrForkId,\n-      final Optional<List<Integer>> persistentSubnets) {\n+      final Bitvector persistentSubnets) {\n     this.publicKey = publicKey;\n     this.nodeAddress = nodeAddress;\n     this.enrForkId = enrForkId;\n"}}, {"oid": "ca9a5b6ed03acbb33c81a945525e1f2141b7acc6", "url": "https://github.com/ConsenSys/teku/commit/ca9a5b6ed03acbb33c81a945525e1f2141b7acc6", "message": "Use Bitvectors for persistent subnets", "committedDate": "2020-07-07T15:02:17Z", "type": "commit"}, {"oid": "03fa7915b47535ca7917cd626c01b62404a8a331", "url": "https://github.com/ConsenSys/teku/commit/03fa7915b47535ca7917cd626c01b62404a8a331", "message": "Merge remote-tracking branch 'remotes/origin/master' into addPersistentSubnetsListToDiscoveryPeer\n\n# Conflicts:\n#\tnetworking/p2p/src/test/java/tech/pegasys/teku/networking/p2p/discovery/ConnectionManagerTest.java", "committedDate": "2020-07-07T16:58:30Z", "type": "commit"}, {"oid": "2da97ae603e83e3d4e5ba01b05b8f43680a9a336", "url": "https://github.com/ConsenSys/teku/commit/2da97ae603e83e3d4e5ba01b05b8f43680a9a336", "message": "Run spotless", "committedDate": "2020-07-07T16:59:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MTA5Mg==", "url": "https://github.com/ConsenSys/teku/pull/2320#discussion_r451171092", "bodyText": "This may throw an IllegalArgumentException if the bytes are not the right length.", "author": "ajsutton", "createdAt": "2020-07-07T22:06:37Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java", "diffHunk": "@@ -29,9 +36,19 @@\n \n   private static DiscoveryPeer socketAddressToDiscoveryPeer(\n       final NodeRecord nodeRecord, final InetSocketAddress address) {\n+\n+    Optional<EnrForkId> enrForkId =\n+        Optional.ofNullable((Bytes) nodeRecord.get(ETH2_ENR_FIELD))\n+            .map(enrField -> SimpleOffsetSerializer.deserialize(enrField, EnrForkId.class));\n+\n+    Bitvector persistentSubnets =\n+        Optional.ofNullable((Bytes) nodeRecord.get(ATTESTATION_SUBNET_ENR_FIELD))\n+            .map(\n+                attestionSubnetsField ->\n+                    Bitvector.fromBytes(attestionSubnetsField, ATTESTATION_SUBNET_COUNT))", "originalCommit": "2da97ae603e83e3d4e5ba01b05b8f43680a9a336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NzQyMw==", "url": "https://github.com/ConsenSys/teku/pull/2320#discussion_r451257423", "bodyText": "I needed to build on this so have added error handling for both ENR fields and merged. :)", "author": "ajsutton", "createdAt": "2020-07-08T03:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MTA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e426e910b2fb7ad804dbb837b0d82f6f57347faf", "chunk": "diff --git a/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java b/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java\nindex f1083d37ef..d7bd0cf536 100644\n--- a/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java\n+++ b/networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/discovery/discv5/NodeRecordConverter.java\n\n@@ -37,13 +42,16 @@ public class NodeRecordConverter {\n   private static DiscoveryPeer socketAddressToDiscoveryPeer(\n       final NodeRecord nodeRecord, final InetSocketAddress address) {\n \n-    Optional<EnrForkId> enrForkId =\n-        Optional.ofNullable((Bytes) nodeRecord.get(ETH2_ENR_FIELD))\n-            .map(enrField -> SimpleOffsetSerializer.deserialize(enrField, EnrForkId.class));\n+    final Optional<EnrForkId> enrForkId =\n+        parseField(\n+            nodeRecord,\n+            ETH2_ENR_FIELD,\n+            enrField -> SimpleOffsetSerializer.deserialize(enrField, EnrForkId.class));\n \n-    Bitvector persistentSubnets =\n-        Optional.ofNullable((Bytes) nodeRecord.get(ATTESTATION_SUBNET_ENR_FIELD))\n-            .map(\n+    final Bitvector persistentSubnets =\n+        parseField(\n+                nodeRecord,\n+                ATTESTATION_SUBNET_ENR_FIELD,\n                 attestionSubnetsField ->\n                     Bitvector.fromBytes(attestionSubnetsField, ATTESTATION_SUBNET_COUNT))\n             .orElse(new Bitvector(ATTESTATION_SUBNET_COUNT));\n"}}, {"oid": "e426e910b2fb7ad804dbb837b0d82f6f57347faf", "url": "https://github.com/ConsenSys/teku/commit/e426e910b2fb7ad804dbb837b0d82f6f57347faf", "message": "Handle parse errors for ENR fields.", "committedDate": "2020-07-08T02:57:27Z", "type": "commit"}, {"oid": "11f349c98e82255152b8e3ba35d687a8b30f541a", "url": "https://github.com/ConsenSys/teku/commit/11f349c98e82255152b8e3ba35d687a8b30f541a", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into addPersistentSubnetsListToDiscoveryPeer", "committedDate": "2020-07-08T02:59:00Z", "type": "commit"}]}