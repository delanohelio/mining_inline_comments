{"pr_number": 3281, "pr_title": "verify the unsigned data returned for signing is for the expected slot", "pr_createdAt": "2020-11-23T04:39:28Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3281", "timeline": [{"oid": "34bc930fd2ac01b97d8e6f841a01b1cd5d430ee2", "url": "https://github.com/ConsenSys/teku/commit/34bc930fd2ac01b97d8e6f841a01b1cd5d430ee2", "message": "verify the unsigned data returned for signing is for the expected slot\n\npartially addresses #3154\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-23T04:38:41Z", "type": "commit"}, {"oid": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "url": "https://github.com/ConsenSys/teku/commit/e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-23T04:39:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ2OTE5NA==", "url": "https://github.com/ConsenSys/teku/pull/3281#discussion_r528469194", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                checkArgument(\n          \n          \n            \n                    attestationData.getSlot().equals(slot),\n          \n          \n            \n                    \"Unsigned attestation slot ( \"\n          \n          \n            \n                        + attestationData.getSlot()\n          \n          \n            \n                        + \") does not match expected slot \"\n          \n          \n            \n                        + slot);\n          \n          \n            \n                checkArgument(\n          \n          \n            \n                    attestationData.getSlot().equals(slot),\n          \n          \n            \n                    \"Unsigned attestation slot (%s) does not match expected slot %s\",\n          \n          \n            \n                     attestationData.getSlot(),\n          \n          \n            \n                     slot);", "author": "ajsutton", "createdAt": "2020-11-23T04:41:41Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java", "diffHunk": "@@ -140,6 +141,12 @@ public String getProducedType() {\n       final ForkInfo forkInfo,\n       final AttestationData attestationData,\n       final ValidatorWithCommitteePositionAndIndex validator) {\n+    checkArgument(\n+        attestationData.getSlot().equals(slot),\n+        \"Unsigned attestation slot ( \"\n+            + attestationData.getSlot()\n+            + \") does not match expected slot \"\n+            + slot);", "originalCommit": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f3727b2a7057a9d5da70a423f315e49eafbf079", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java\nindex 137a8bbd52..e8df823de2 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java\n\n@@ -143,10 +143,9 @@ public class AttestationProductionDuty implements Duty {\n       final ValidatorWithCommitteePositionAndIndex validator) {\n     checkArgument(\n         attestationData.getSlot().equals(slot),\n-        \"Unsigned attestation slot ( \"\n-            + attestationData.getSlot()\n-            + \") does not match expected slot \"\n-            + slot);\n+        \"Unsigned attestation slot (%s) does not match expected slot %s\",\n+        attestationData.getSlot(),\n+        slot);\n     return validator\n         .getSigner()\n         .signAttestationData(attestationData, forkInfo)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ2OTQ3NA==", "url": "https://github.com/ConsenSys/teku/pull/3281#discussion_r528469474", "bodyText": "Can use same %s format trick as above to avoid creating the string until its actually needed.\nI'd probably extract the unsignedBlock.orElseThrow below to a variable and then you can just use it directly here as well rather than needing an ifPresent block.", "author": "ajsutton", "createdAt": "2020-11-23T04:43:07Z", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java", "diffHunk": "@@ -96,6 +97,14 @@ public String getProducedType() {\n \n   public SafeFuture<SignedBeaconBlock> signBlock(\n       final ForkInfo forkInfo, final Optional<BeaconBlock> unsignedBlock) {\n+    unsignedBlock.ifPresent(\n+        beaconBlock ->\n+            checkArgument(\n+                beaconBlock.getSlot().equals(slot),\n+                \"Unsigned block slot ( \"\n+                    + beaconBlock.getSlot()\n+                    + \") does not match expected slot \"\n+                    + slot));", "originalCommit": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f3727b2a7057a9d5da70a423f315e49eafbf079", "chunk": "diff --git a/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java b/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java\nindex e72f3e3f87..1f8bc3a0f9 100644\n--- a/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java\n+++ b/validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java\n\n@@ -96,22 +96,19 @@ public class BlockProductionDuty implements Duty {\n   }\n \n   public SafeFuture<SignedBeaconBlock> signBlock(\n-      final ForkInfo forkInfo, final Optional<BeaconBlock> unsignedBlock) {\n-    unsignedBlock.ifPresent(\n-        beaconBlock ->\n-            checkArgument(\n-                beaconBlock.getSlot().equals(slot),\n-                \"Unsigned block slot ( \"\n-                    + beaconBlock.getSlot()\n-                    + \") does not match expected slot \"\n-                    + slot));\n+      final ForkInfo forkInfo, final Optional<BeaconBlock> maybeBlock) {\n+    final BeaconBlock unsignedBlock =\n+        maybeBlock.orElseThrow(\n+            () -> new IllegalStateException(\"Node was not syncing but could not create block\"));\n+    checkArgument(\n+        unsignedBlock.getSlot().equals(slot),\n+        \"Unsigned block slot (%s) does not match expected slot %s\",\n+        unsignedBlock.getSlot(),\n+        slot);\n     return validator\n         .getSigner()\n-        .signBlock(\n-            unsignedBlock.orElseThrow(\n-                () -> new IllegalStateException(\"Node was not syncing but could not create block\")),\n-            forkInfo)\n-        .thenApply(signature -> new SignedBeaconBlock(unsignedBlock.orElseThrow(), signature));\n+        .signBlock(unsignedBlock, forkInfo)\n+        .thenApply(signature -> new SignedBeaconBlock(unsignedBlock, signature));\n   }\n \n   @Override\n"}}, {"oid": "4f3727b2a7057a9d5da70a423f315e49eafbf079", "url": "https://github.com/ConsenSys/teku/commit/4f3727b2a7057a9d5da70a423f315e49eafbf079", "message": "review comments\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-11-23T05:16:31Z", "type": "commit"}, {"oid": "c257c6f219de7018583f4150f3d63e8997a73dd4", "url": "https://github.com/ConsenSys/teku/commit/c257c6f219de7018583f4150f3d63e8997a73dd4", "message": "Merge remote-tracking branch 'upstream/master' into 3154", "committedDate": "2020-11-23T05:20:13Z", "type": "commit"}]}