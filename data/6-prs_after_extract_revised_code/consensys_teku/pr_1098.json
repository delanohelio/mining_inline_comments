{"pr_number": 1098, "pr_title": "[BC-221] Disconnect peers advertising an invalid finalized epoch", "pr_createdAt": "2020-01-20T20:33:14Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1098", "timeline": [{"oid": "b9270947856c1462d6275ddf70d74d541901f83e", "url": "https://github.com/ConsenSys/teku/commit/b9270947856c1462d6275ddf70d74d541901f83e", "message": "Disconnect peers advertising an invalid finalized epoch", "committedDate": "2020-01-20T20:30:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368731525", "bodyText": "I think this will give us the slot of the best bock, not the current slot.  So if we haven't completed sync this would be a slot from the distant past and we'd disconnect most peers.  I think we want to use get_current_slot(store) which will give us the slot based on the time, not what blocks have been imported.", "author": "ajsutton", "createdAt": "2020-01-20T21:28:59Z", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -112,11 +114,22 @@ public static PeerChainValidator create(\n       return SafeFuture.completedFuture(true);\n     }\n \n-    // Check whether finalized checkpoints are compatible\n     final Checkpoint finalizedCheckpoint = storageClient.getStore().getFinalizedCheckpoint();\n     final UnsignedLong finalizedEpoch = finalizedCheckpoint.getEpoch();\n     final UnsignedLong remoteFinalizedEpoch = status.getFinalizedEpoch();\n+    final UnsignedLong currentEpoch = compute_epoch_at_slot(storageClient.getBestSlot());", "originalCommit": "b9270947856c1462d6275ddf70d74d541901f83e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3NzM0NA==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r369077344", "bodyText": "whoops - good catch :D", "author": "mbaxter", "createdAt": "2020-01-21T15:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "49230180431e7c6c9c7b80062c5f31571b23f9d4", "chunk": "diff --git a/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java b/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\nindex a272a5dd86..746e0c9bf1 100644\n--- a/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\n+++ b/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\n\n@@ -117,7 +118,7 @@ public class PeerChainValidator {\n     final Checkpoint finalizedCheckpoint = storageClient.getStore().getFinalizedCheckpoint();\n     final UnsignedLong finalizedEpoch = finalizedCheckpoint.getEpoch();\n     final UnsignedLong remoteFinalizedEpoch = status.getFinalizedEpoch();\n-    final UnsignedLong currentEpoch = compute_epoch_at_slot(storageClient.getBestSlot());\n+    final UnsignedLong currentEpoch = getCurrentEpoch();\n \n     // Make sure remote finalized epoch is reasonable\n     if (remoteEpochIsInvalid(currentEpoch, remoteFinalizedEpoch)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0NzI0Ng==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368747246", "bodyText": "nit: It's probably simpler to say:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);\n          \n          \n            \n                        && !remoteFinalizedEpoch.equals(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)));\n          \n      \n    \n    \n  \n\nPossibly slightly more accurate too if GENESIS_BLOCK isn't actually 0.", "author": "ajsutton", "createdAt": "2020-01-20T22:37:45Z", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -128,6 +141,15 @@ public static PeerChainValidator create(\n     }\n   }\n \n+  private boolean remoteEpochIsInvalid(\n+      final UnsignedLong currentEpoch, final UnsignedLong remoteFinalizedEpoch) {\n+    // Remote finalized epoch is invalid if it is from the future\n+    return remoteFinalizedEpoch.compareTo(currentEpoch) > 0\n+        // Remote finalized epoch is invalid if is from the current epoch (unless we're at genesis)\n+        || (remoteFinalizedEpoch.compareTo(currentEpoch) == 0\n+            && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);", "originalCommit": "b9270947856c1462d6275ddf70d74d541901f83e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5d36fb13f45cd3491aa6ba324e69f95395f9259", "chunk": "diff --git a/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java b/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\nindex a272a5dd86..6d73b482cf 100644\n--- a/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\n+++ b/networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java\n\n@@ -147,7 +147,7 @@ public class PeerChainValidator {\n     return remoteFinalizedEpoch.compareTo(currentEpoch) > 0\n         // Remote finalized epoch is invalid if is from the current epoch (unless we're at genesis)\n         || (remoteFinalizedEpoch.compareTo(currentEpoch) == 0\n-            && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);\n+            && !remoteFinalizedEpoch.equals(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)));\n   }\n \n   private SafeFuture<Boolean> verifyFinalizedCheckpointsAreTheSame(Checkpoint finalizedCheckpoint) {\n"}}, {"oid": "a5d36fb13f45cd3491aa6ba324e69f95395f9259", "url": "https://github.com/ConsenSys/teku/commit/a5d36fb13f45cd3491aa6ba324e69f95395f9259", "message": "Simplify genesis epoch check\n\nCo-Authored-By: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-01-21T15:43:16Z", "type": "commit"}, {"oid": "49230180431e7c6c9c7b80062c5f31571b23f9d4", "url": "https://github.com/ConsenSys/teku/commit/49230180431e7c6c9c7b80062c5f31571b23f9d4", "message": "Fix current epoch calculation", "committedDate": "2020-01-21T16:06:37Z", "type": "commit"}, {"oid": "04cc66cd87e16bde5b8272c9f83aa2603384adbb", "url": "https://github.com/ConsenSys/teku/commit/04cc66cd87e16bde5b8272c9f83aa2603384adbb", "message": "Merge branch 'master' into bc-221/reject-peers-w-invalid-finalized-epoch", "committedDate": "2020-01-21T16:14:11Z", "type": "commit"}]}