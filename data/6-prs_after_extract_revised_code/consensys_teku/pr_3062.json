{"pr_number": 3062, "pr_title": "Optimize BeaconState SSZ serialization performance", "pr_createdAt": "2020-10-23T15:29:46Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3062", "timeline": [{"oid": "aaa11e6321cffaf79292bf743dc005e92c28817f", "url": "https://github.com/ConsenSys/teku/commit/aaa11e6321cffaf79292bf743dc005e92c28817f", "message": "Add ViewType.isFixedSize()", "committedDate": "2020-10-21T18:28:28Z", "type": "commit"}, {"oid": "5ef27174394f6d58b9ed6a48c560d4039cda2af2", "url": "https://github.com/ConsenSys/teku/commit/5ef27174394f6d58b9ed6a48c560d4039cda2af2", "message": "Add ViewType.getFixedPartSize()", "committedDate": "2020-10-22T14:04:20Z", "type": "commit"}, {"oid": "7bd5b4ce992bf1c7999daf9c900f84c9f9e0a304", "url": "https://github.com/ConsenSys/teku/commit/7bd5b4ce992bf1c7999daf9c900f84c9f9e0a304", "message": "Draft ViewRead.getSSZ() method", "committedDate": "2020-10-22T14:04:58Z", "type": "commit"}, {"oid": "d5de604598a01a7b50a40380c0a5fcc17cbbe324", "url": "https://github.com/ConsenSys/teku/commit/d5de604598a01a7b50a40380c0a5fcc17cbbe324", "message": "Merge remote-tracking branch 'pegasys/master' into feature/new-ssz", "committedDate": "2020-10-22T17:44:26Z", "type": "commit"}, {"oid": "4453f5dd12a8bdd43f11a1e00b19270bb5f7e213", "url": "https://github.com/ConsenSys/teku/commit/4453f5dd12a8bdd43f11a1e00b19270bb5f7e213", "message": "Initial SSZ serialization version based on backing tree", "committedDate": "2020-10-23T11:06:55Z", "type": "commit"}, {"oid": "d772ff644c74cb1183373237e3d2ab6b1d678751", "url": "https://github.com/ConsenSys/teku/commit/d772ff644c74cb1183373237e3d2ab6b1d678751", "message": "Add iterateLeaves() util", "committedDate": "2020-10-23T13:06:45Z", "type": "commit"}, {"oid": "8b95d53da15485a32444d6d389ffdd628c6deb95", "url": "https://github.com/ConsenSys/teku/commit/8b95d53da15485a32444d6d389ffdd628c6deb95", "message": "Create compressed leaf node for nodes with more that 1 element (at index 0)", "committedDate": "2020-10-23T14:46:18Z", "type": "commit"}, {"oid": "9ad32fd194fff75711919fef4bbe3c1a36e9483b", "url": "https://github.com/ConsenSys/teku/commit/9ad32fd194fff75711919fef4bbe3c1a36e9483b", "message": "Optimize ssz serialization for collections of fixed type elements (for them the flattened backing tree with compressed leaf nodes is equal to ssz serialization)", "committedDate": "2020-10-23T14:49:48Z", "type": "commit"}, {"oid": "16a7fc779bd3e3c580f16a2e68ee4afd72b0d192", "url": "https://github.com/ConsenSys/teku/commit/16a7fc779bd3e3c580f16a2e68ee4afd72b0d192", "message": "Refactor LeafNode and make the 'compressed' LeafNode a single one", "committedDate": "2020-10-23T15:06:46Z", "type": "commit"}, {"oid": "a43c1c772868167f3019106dfb2100d87d5f1d85", "url": "https://github.com/ConsenSys/teku/commit/a43c1c772868167f3019106dfb2100d87d5f1d85", "message": "SimpleOffsetSerializer.serialize() uses new backing tree based serialization when available", "committedDate": "2020-10-23T15:08:09Z", "type": "commit"}, {"oid": "45231ef6cb1f7a2b208d60bfaaab1789915a0638", "url": "https://github.com/ConsenSys/teku/commit/45231ef6cb1f7a2b208d60bfaaab1789915a0638", "message": "Apply spotless", "committedDate": "2020-10-23T15:14:04Z", "type": "commit"}, {"oid": "f7bc12c0453cd54fb452749725cded861e33d19a", "url": "https://github.com/ConsenSys/teku/commit/f7bc12c0453cd54fb452749725cded861e33d19a", "message": "Fix warnings", "committedDate": "2020-10-23T15:22:18Z", "type": "commit"}, {"oid": "a1f279494f015d0b944e91db4fee18081f1cd822", "url": "https://github.com/ConsenSys/teku/commit/a1f279494f015d0b944e91db4fee18081f1cd822", "message": "Remove experiments code", "committedDate": "2020-10-23T15:40:54Z", "type": "commit"}, {"oid": "8d1cceddc481890ce35279f2292f773d5b072340", "url": "https://github.com/ConsenSys/teku/commit/8d1cceddc481890ce35279f2292f773d5b072340", "message": "Merge remote-tracking branch 'pegasys/master' into feature/new-ssz", "committedDate": "2020-10-23T16:01:16Z", "type": "commit"}, {"oid": "fecca78075675ccb34d2d5290aa2126866e725d7", "url": "https://github.com/ConsenSys/teku/commit/fecca78075675ccb34d2d5290aa2126866e725d7", "message": "Fix accidentally removed methods", "committedDate": "2020-10-23T16:39:13Z", "type": "commit"}, {"oid": "813d6a255146474c779a050ec4909e92a580df53", "url": "https://github.com/ConsenSys/teku/commit/813d6a255146474c779a050ec4909e92a580df53", "message": "Add some javadocs", "committedDate": "2020-10-23T16:57:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3MTQxNQ==", "url": "https://github.com/ConsenSys/teku/pull/3062#discussion_r511671415", "bodyText": "nit: I'd just omit the else here since the if block returns anyway. Saves indenting the rest of the method.", "author": "ajsutton", "createdAt": "2020-10-26T00:30:55Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "diffHunk": "@@ -136,40 +137,44 @@ public static void setConstants() {\n   }\n \n   public static Bytes serialize(SimpleOffsetSerializable value) {\n-    List<UInt64> variable_offsets = new ArrayList<>();\n-    List<Bytes> interleaved_values = new ArrayList<>();\n-    UInt64 fixedLengthSum = UInt64.ZERO;\n-    UInt64 varLengthSum = UInt64.ZERO;\n-\n-    for (Bytes fixedPart : value.get_fixed_parts()) {\n-      UInt64 fixedPartSize = UInt64.valueOf(fixedPart.size());\n-      if (fixedPartSize.equals(UInt64.ZERO)) {\n-        fixedPartSize = UInt64.valueOf(4L);\n+    if (value instanceof ViewRead) {\n+      return ((ViewRead) value).sszSerialize();\n+    } else {", "originalCommit": "813d6a255146474c779a050ec4909e92a580df53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e901d4ef6d0ac09401892c6572fa3ffae2fb1ea", "chunk": "diff --git a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java\nindex 8b375a07fa..1aacd4074d 100644\n--- a/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java\n+++ b/ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java\n\n@@ -139,42 +139,42 @@ public class SimpleOffsetSerializer {\n   public static Bytes serialize(SimpleOffsetSerializable value) {\n     if (value instanceof ViewRead) {\n       return ((ViewRead) value).sszSerialize();\n-    } else {\n-      List<UInt64> variable_offsets = new ArrayList<>();\n-      List<Bytes> interleaved_values = new ArrayList<>();\n-      UInt64 fixedLengthSum = UInt64.ZERO;\n-      UInt64 varLengthSum = UInt64.ZERO;\n-\n-      for (Bytes fixedPart : value.get_fixed_parts()) {\n-        UInt64 fixedPartSize = UInt64.valueOf(fixedPart.size());\n-        if (fixedPartSize.equals(UInt64.ZERO)) {\n-          fixedPartSize = UInt64.valueOf(4L);\n-        }\n-        fixedLengthSum = fixedLengthSum.plus(fixedPartSize);\n-      }\n+    }\n \n-      variable_offsets.add(fixedLengthSum);\n-      for (Bytes varPart : value.get_variable_parts()) {\n-        UInt64 varPartSize = UInt64.valueOf(varPart.size());\n-        varLengthSum = varLengthSum.plus(varPartSize);\n-        variable_offsets.add(fixedLengthSum.plus(varLengthSum));\n-      }\n+    List<UInt64> variable_offsets = new ArrayList<>();\n+    List<Bytes> interleaved_values = new ArrayList<>();\n+    UInt64 fixedLengthSum = UInt64.ZERO;\n+    UInt64 varLengthSum = UInt64.ZERO;\n \n-      int interleavingIndex = 0;\n-      for (Bytes element : value.get_fixed_parts()) {\n-        if (!element.equals(Bytes.EMPTY)) {\n-          interleaved_values.add(element);\n-        } else {\n-          interleaved_values.add(\n-              SSZ.encodeUInt32(variable_offsets.get(interleavingIndex).longValue()));\n-        }\n-        ++interleavingIndex;\n+    for (Bytes fixedPart : value.get_fixed_parts()) {\n+      UInt64 fixedPartSize = UInt64.valueOf(fixedPart.size());\n+      if (fixedPartSize.equals(UInt64.ZERO)) {\n+        fixedPartSize = UInt64.valueOf(4L);\n       }\n+      fixedLengthSum = fixedLengthSum.plus(fixedPartSize);\n+    }\n+\n+    variable_offsets.add(fixedLengthSum);\n+    for (Bytes varPart : value.get_variable_parts()) {\n+      UInt64 varPartSize = UInt64.valueOf(varPart.size());\n+      varLengthSum = varLengthSum.plus(varPartSize);\n+      variable_offsets.add(fixedLengthSum.plus(varLengthSum));\n+    }\n \n-      return Bytes.wrap(\n-          Bytes.concatenate(interleaved_values.toArray(new Bytes[0])),\n-          Bytes.concatenate(value.get_variable_parts().toArray(new Bytes[0])));\n+    int interleavingIndex = 0;\n+    for (Bytes element : value.get_fixed_parts()) {\n+      if (!element.equals(Bytes.EMPTY)) {\n+        interleaved_values.add(element);\n+      } else {\n+        interleaved_values.add(\n+            SSZ.encodeUInt32(variable_offsets.get(interleavingIndex).longValue()));\n+      }\n+      ++interleavingIndex;\n     }\n+\n+    return Bytes.wrap(\n+        Bytes.concatenate(interleaved_values.toArray(new Bytes[0])),\n+        Bytes.concatenate(value.get_variable_parts().toArray(new Bytes[0])));\n   }\n \n   public static Bytes serializeFixedCompositeList(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3MjEzNg==", "url": "https://github.com/ConsenSys/teku/pull/3062#discussion_r511672136", "bodyText": "Might be worth leaving a comment to explain why we do nothing in the !fromLeft && toLeft case.", "author": "ajsutton", "createdAt": "2020-10-26T00:36:34Z", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java", "diffHunk": "@@ -119,6 +119,42 @@ public static int estimateNonDefaultNodes(TreeNode node) {\n     }\n   }\n \n+  public static void iterateLeaves(\n+      TreeNode node, long fromGeneralIndex, long toGeneralIndex, Consumer<LeafNode> visitor) {\n+    long leftmostFromIndex = fromGeneralIndex << (63 - treeDepth(fromGeneralIndex));\n+    int shiftN = 63 - treeDepth(toGeneralIndex);\n+    long rightmostToIndex = (toGeneralIndex << shiftN) | ((1L << shiftN) - 1);\n+    iterateLeavesPriv(node, leftmostFromIndex, rightmostToIndex, visitor);\n+  }\n+\n+  private static void iterateLeavesPriv(\n+      TreeNode node, long fromGeneralIndex, long toGeneralIndex, Consumer<LeafNode> visitor) {\n+    if (node instanceof LeafNode) {\n+      visitor.accept((LeafNode) node);\n+    } else {\n+\n+      BranchNode bNode = (BranchNode) node;\n+      long anchorF = Long.highestOneBit(fromGeneralIndex);\n+      long pivotF = anchorF >>> 1;\n+      boolean fromLeft = fromGeneralIndex < (fromGeneralIndex | pivotF);\n+      long fromChildIdx = (fromGeneralIndex ^ anchorF) | pivotF;\n+\n+      long anchorT = Long.highestOneBit(toGeneralIndex);\n+      long pivotT = anchorT >>> 1;\n+      boolean toLeft = toGeneralIndex < (toGeneralIndex | pivotT);\n+      long toChildIdx = (toGeneralIndex ^ anchorT) | pivotT;\n+\n+      if (fromLeft && !toLeft) {\n+        iterateLeavesPriv(bNode.left(), fromChildIdx, -1, visitor);\n+        iterateLeavesPriv(bNode.right(), 1L << 63, toChildIdx, visitor);\n+      } else if (fromLeft && toLeft) {\n+        iterateLeavesPriv(bNode.left(), fromChildIdx, toChildIdx, visitor);\n+      } else if (!fromLeft && !toLeft) {\n+        iterateLeavesPriv(bNode.right(), fromChildIdx, toChildIdx, visitor);\n+      }", "originalCommit": "813d6a255146474c779a050ec4909e92a580df53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwODAzNg==", "url": "https://github.com/ConsenSys/teku/pull/3062#discussion_r512108036", "bodyText": "Yep, should throw in this case \ud83d\udc4d", "author": "Nashatyrev", "createdAt": "2020-10-26T16:45:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3MjEzNg=="}], "type": "inlineReview", "revised_code": {"commit": "0e901d4ef6d0ac09401892c6572fa3ffae2fb1ea", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java b/ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java\nindex fd229eba47..5d049ecc3a 100644\n--- a/ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java\n+++ b/ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java\n\n@@ -151,6 +185,9 @@ public class TreeUtil {\n         iterateLeavesPriv(bNode.left(), fromChildIdx, toChildIdx, visitor);\n       } else if (!fromLeft && !toLeft) {\n         iterateLeavesPriv(bNode.right(), fromChildIdx, toChildIdx, visitor);\n+      } else {\n+        throw new IllegalArgumentException(\n+            \"fromGeneralIndex < toGeneralIndex: \" + fromGeneralIndex + \" < \" + toGeneralIndex);\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3MjMwNQ==", "url": "https://github.com/ConsenSys/teku/pull/3062#discussion_r511672305", "bodyText": "Should we just omit the sszDeserialize method for now until we actually implement it?", "author": "ajsutton", "createdAt": "2020-10-26T00:38:06Z", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewType.java", "diffHunk": "@@ -59,4 +61,35 @@ public TreeNode createBackingNode(C newValue) {\n   @Override\n   public abstract TreeNode updateBackingNode(\n       TreeNode srcNode, int internalIndex, ViewRead newValue);\n+\n+  private int getSSZBytesSize() {\n+    return (getBitsSize() + 7) / 8;\n+  }\n+\n+  @Override\n+  public boolean isFixedSize() {\n+    return true;\n+  }\n+\n+  @Override\n+  public int getFixedPartSize() {\n+    return getSSZBytesSize();\n+  }\n+\n+  @Override\n+  public int getVariablePartSize(TreeNode node) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int sszSerialize(TreeNode node, Consumer<Bytes> writer) {\n+    Bytes ret = node.hashTreeRoot().slice(0, getSSZBytesSize());\n+    writer.accept(ret);\n+    return ret.size();\n+  }\n+\n+  @Override\n+  public TreeNode sszDeserialize(Bytes ssz) {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }", "originalCommit": "813d6a255146474c779a050ec4909e92a580df53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26626f8ceb08d77650f9724f33eeffadb391368d", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewType.java b/ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewType.java\nindex ff70f7bf1c..89a45e5e36 100644\n--- a/ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewType.java\n+++ b/ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewType.java\n\n@@ -55,7 +50,7 @@ public abstract class BasicViewType<C extends ViewRead> implements ViewType {\n   public abstract C createFromBackingNode(TreeNode node, int internalIndex);\n \n   public TreeNode createBackingNode(C newValue) {\n-    return updateBackingNode(TreeUtil.ZERO_LEAF, 0, newValue);\n+    return updateBackingNode(TreeUtil.EMPTY_LEAF, 0, newValue);\n   }\n \n   @Override\n"}}, {"oid": "26626f8ceb08d77650f9724f33eeffadb391368d", "url": "https://github.com/ConsenSys/teku/commit/26626f8ceb08d77650f9724f33eeffadb391368d", "message": "Fix generating default backing tree for packed vectors", "committedDate": "2020-10-26T16:37:45Z", "type": "commit"}, {"oid": "59f1eafdd6dfe772a94e6f3e075c048f67b20ca0", "url": "https://github.com/ConsenSys/teku/commit/59f1eafdd6dfe772a94e6f3e075c048f67b20ca0", "message": "Apply spotless", "committedDate": "2020-10-26T16:42:02Z", "type": "commit"}, {"oid": "0e901d4ef6d0ac09401892c6572fa3ffae2fb1ea", "url": "https://github.com/ConsenSys/teku/commit/0e901d4ef6d0ac09401892c6572fa3ffae2fb1ea", "message": "Remove unused method for now. A couple of minor updates", "committedDate": "2020-10-26T16:50:16Z", "type": "commit"}, {"oid": "6cc7fc7156a39f252b837afd6e64757fd4c604ae", "url": "https://github.com/ConsenSys/teku/commit/6cc7fc7156a39f252b837afd6e64757fd4c604ae", "message": "Add a couple of asserts for easier ssz problem localization", "committedDate": "2020-10-26T18:03:04Z", "type": "commit"}, {"oid": "e181584c4c22a6a406669371193d27301762ea88", "url": "https://github.com/ConsenSys/teku/commit/e181584c4c22a6a406669371193d27301762ea88", "message": "Fix packed basic collection update", "committedDate": "2020-10-26T18:06:30Z", "type": "commit"}, {"oid": "fe8335edbde43888e9bcdde9a361d3b1e17a63d2", "url": "https://github.com/ConsenSys/teku/commit/fe8335edbde43888e9bcdde9a361d3b1e17a63d2", "message": "Fix packed bit collection update", "committedDate": "2020-10-26T18:46:28Z", "type": "commit"}, {"oid": "a2d44ed9aafa2c0f2e69a0542cf91068e7a93ffb", "url": "https://github.com/ConsenSys/teku/commit/a2d44ed9aafa2c0f2e69a0542cf91068e7a93ffb", "message": "Fix the test add null constructor check", "committedDate": "2020-10-26T19:22:53Z", "type": "commit"}, {"oid": "4fe0f88ea192bebb740927abc01b41977199a81d", "url": "https://github.com/ConsenSys/teku/commit/4fe0f88ea192bebb740927abc01b41977199a81d", "message": "Merge branch 'master' into feature/new-ssz", "committedDate": "2020-10-26T19:40:43Z", "type": "commit"}, {"oid": "228a3b2bd9d95025090930ac77a8a1979224a2ba", "url": "https://github.com/ConsenSys/teku/commit/228a3b2bd9d95025090930ac77a8a1979224a2ba", "message": "Add some docs", "committedDate": "2020-10-26T20:09:15Z", "type": "commit"}, {"oid": "c3e71d2cb262d286b3c96546b158a57d3e1a53f4", "url": "https://github.com/ConsenSys/teku/commit/c3e71d2cb262d286b3c96546b158a57d3e1a53f4", "message": "No need for special serialization of bitvector", "committedDate": "2020-10-26T20:11:57Z", "type": "commit"}, {"oid": "7dc7274b852ad6f3dd66033dc964b7392bcf2818", "url": "https://github.com/ConsenSys/teku/commit/7dc7274b852ad6f3dd66033dc964b7392bcf2818", "message": "A bit more javadoc", "committedDate": "2020-10-26T20:17:41Z", "type": "commit"}, {"oid": "77feaec82f20bbd315a6149d6a839901b532066d", "url": "https://github.com/ConsenSys/teku/commit/77feaec82f20bbd315a6149d6a839901b532066d", "message": "Fix serialization of empty Bitlist", "committedDate": "2020-10-27T10:09:32Z", "type": "commit"}, {"oid": "b9432c637b706143789aeb43cd54ca3052fe9ba6", "url": "https://github.com/ConsenSys/teku/commit/b9432c637b706143789aeb43cd54ca3052fe9ba6", "message": "Merge branch 'master' into feature/new-ssz", "committedDate": "2020-10-27T10:24:29Z", "type": "commit"}, {"oid": "162c015b588273796cf0f56e5c3896cef94d0ac0", "url": "https://github.com/ConsenSys/teku/commit/162c015b588273796cf0f56e5c3896cef94d0ac0", "message": "Merge branch 'master' into feature/new-ssz", "committedDate": "2020-10-28T11:02:02Z", "type": "commit"}]}