{"pr_number": 1531, "pr_title": "Use BitSet as backing for Bitlist rather than byte[]", "pr_createdAt": "2020-04-06T00:42:51Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1531", "timeline": [{"oid": "a4dc630e85839a98f878acd8f3a5188638800273", "url": "https://github.com/ConsenSys/teku/commit/a4dc630e85839a98f878acd8f3a5188638800273", "message": "Switch Bitlist to use BitSet as a backing.", "committedDate": "2020-04-05T23:32:33Z", "type": "commit"}, {"oid": "a84e9e36079634f3e9aacb1180fe7f8811e379e6", "url": "https://github.com/ConsenSys/teku/commit/a84e9e36079634f3e9aacb1180fe7f8811e379e6", "message": "Add more tests for bitlist and a benchmark.", "committedDate": "2020-04-06T00:27:21Z", "type": "commit"}, {"oid": "5f6e569090c7dd4cbd87a948e4ea7f0c4aec96e6", "url": "https://github.com/ConsenSys/teku/commit/5f6e569090c7dd4cbd87a948e4ea7f0c4aec96e6", "message": "Undo changes to Attestation and AttestationData.", "committedDate": "2020-04-06T00:36:13Z", "type": "commit"}, {"oid": "c7a6ab573fe3614b2a53a8e9841d3d5e7f4d8624", "url": "https://github.com/ConsenSys/teku/commit/c7a6ab573fe3614b2a53a8e9841d3d5e7f4d8624", "message": "Undo new method in AttestationUtil.", "committedDate": "2020-04-06T00:38:29Z", "type": "commit"}, {"oid": "4fc96c4df2a6d84c1cd6af0bdff5fe65b3fa3f2a", "url": "https://github.com/ConsenSys/teku/commit/4fc96c4df2a6d84c1cd6af0bdff5fe65b3fa3f2a", "message": "More fixes.", "committedDate": "2020-04-06T00:42:14Z", "type": "commit"}, {"oid": "d6645498064bee459abbbbe0d354e29212f78219", "url": "https://github.com/ConsenSys/teku/commit/d6645498064bee459abbbbe0d354e29212f78219", "message": "Merge branch 'master' into bitlist", "committedDate": "2020-04-06T09:51:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3NTAxNA==", "url": "https://github.com/ConsenSys/teku/pull/1531#discussion_r404375014", "bodyText": "Are you accounting for the 0 index being set here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (int i = data.nextSetBit(0); i > 0; i = data.nextSetBit(i + 1)) {\n          \n          \n            \n                for (int i = data.nextSetBit(0); i >= 0; i = data.nextSetBit(i + 1)) {", "author": "cemozerr", "createdAt": "2020-04-06T20:41:41Z", "path": "ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java", "diffHunk": "@@ -13,41 +13,63 @@\n \n package tech.pegasys.artemis.util.SSZTypes;\n \n-import static java.util.Objects.isNull;\n+import static com.google.common.base.Preconditions.checkElementIndex;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n+import java.util.BitSet;\n+import java.util.List;\n+import java.util.Objects;\n import java.util.stream.IntStream;\n import org.apache.tuweni.bytes.Bytes;\n \n public class Bitlist {\n \n-  private byte[] byteArray;\n-  private long maxSize;\n+  private final BitSet data;\n+  private final int size;\n+  private final long maxSize;\n \n   public Bitlist(int arraySize, long maxSize) {\n-    this.byteArray = new byte[arraySize];\n+    this.size = arraySize;\n+    this.data = new BitSet(arraySize);\n     this.maxSize = maxSize;\n   }\n \n   public Bitlist(Bitlist bitlist) {\n-    this.byteArray = new byte[bitlist.getByteArray().length];\n-    for (int i = 0; i < bitlist.getByteArray().length; i++) {\n-      this.byteArray[i] = bitlist.getByteArray()[i];\n-    }\n+    this.size = bitlist.size;\n+    this.data = (BitSet) bitlist.data.clone();\n     this.maxSize = bitlist.getMaxSize();\n   }\n \n-  public Bitlist(byte[] bitlist, long maxSize) {\n-    this.byteArray = bitlist;\n+  private Bitlist(int size, BitSet data, long maxSize) {\n+    this.size = size;\n+    this.data = data;\n     this.maxSize = maxSize;\n   }\n \n   public void setBit(int i) {\n-    this.byteArray[i] = 1;\n+    checkElementIndex(i, size);\n+    data.set(i);\n+  }\n+\n+  public boolean getBit(int i) {\n+    checkElementIndex(i, size);\n+    return data.get(i);\n+  }\n+\n+  public boolean intersects(Bitlist other) {\n+    return data.intersects(other.data);\n   }\n \n-  public int getBit(int i) {\n-    return byteArray[i];\n+  public List<Integer> getAllSetBits() {\n+    final List<Integer> setBits = new ArrayList<>();\n+    for (int i = data.nextSetBit(0); i > 0; i = data.nextSetBit(i + 1)) {", "originalCommit": "d6645498064bee459abbbbe0d354e29212f78219", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ca1faf2af874fa0c8aae9052ce2030dea3b2943", "chunk": "diff --git a/ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java b/ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java\nindex 710fcc80c..66d6b2fd3 100644\n--- a/ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java\n+++ b/ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java\n\n@@ -62,7 +62,7 @@ public class Bitlist {\n \n   public List<Integer> getAllSetBits() {\n     final List<Integer> setBits = new ArrayList<>();\n-    for (int i = data.nextSetBit(0); i > 0; i = data.nextSetBit(i + 1)) {\n+    for (int i = data.nextSetBit(0); i >= 0; i = data.nextSetBit(i + 1)) {\n       setBits.add(i);\n     }\n     return setBits;\n"}}, {"oid": "2ca1faf2af874fa0c8aae9052ce2030dea3b2943", "url": "https://github.com/ConsenSys/teku/commit/2ca1faf2af874fa0c8aae9052ce2030dea3b2943", "message": "Handle 0 being set.", "committedDate": "2020-04-06T20:44:33Z", "type": "commit"}, {"oid": "4f5f9a0c0162080453de23e8c2cc79b5559bbaf2", "url": "https://github.com/ConsenSys/teku/commit/4f5f9a0c0162080453de23e8c2cc79b5559bbaf2", "message": "Merge branch 'bitlist' of github.com:ajsutton/teku into bitlist", "committedDate": "2020-04-06T20:44:51Z", "type": "commit"}]}