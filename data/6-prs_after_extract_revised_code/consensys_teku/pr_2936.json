{"pr_number": 2936, "pr_title": "[Issue-2273] Enable weak subjectivity validation", "pr_createdAt": "2020-10-09T21:28:15Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2936", "timeline": [{"oid": "1c20a736056f9357288be6c782f442463a19de95", "url": "https://github.com/ConsenSys/teku/commit/1c20a736056f9357288be6c782f442463a19de95", "message": "Throttle various weak subjectivity warnings and send them to console", "committedDate": "2020-10-09T21:22:28Z", "type": "commit"}, {"oid": "3a7208dc381353948a4ddc8b398bb567ef3d10b1", "url": "https://github.com/ConsenSys/teku/commit/3a7208dc381353948a4ddc8b398bb567ef3d10b1", "message": "Fully enable weak-subjectivity validation\n\nMake ws validation strict, make ws options and commands visible", "committedDate": "2020-10-09T21:24:23Z", "type": "commit"}, {"oid": "8d08286a358d56cd799503e72970fc88851eb30e", "url": "https://github.com/ConsenSys/teku/commit/8d08286a358d56cd799503e72970fc88851eb30e", "message": "Add additional unit test", "committedDate": "2020-10-09T21:24:34Z", "type": "commit"}, {"oid": "06e6cf838c52e7d788a12e520fa60ed9c8903595", "url": "https://github.com/ConsenSys/teku/commit/06e6cf838c52e7d788a12e520fa60ed9c8903595", "message": "Log weak subjectivity errors to the console", "committedDate": "2020-10-09T21:24:34Z", "type": "commit"}, {"oid": "f42bdab74e49132557a8a111054af49be8c90958", "url": "https://github.com/ConsenSys/teku/commit/f42bdab74e49132557a8a111054af49be8c90958", "message": "Warn when a peer fails a required checkpoint validation", "committedDate": "2020-10-09T21:24:34Z", "type": "commit"}, {"oid": "b97f8560eb5db1c06b8dbf2da8b14706a48584bf", "url": "https://github.com/ConsenSys/teku/commit/b97f8560eb5db1c06b8dbf2da8b14706a48584bf", "message": "Fix test name", "committedDate": "2020-10-09T21:32:05Z", "type": "commit"}, {"oid": "59fa2535f1c65f88de82befa45085d1550c91ebf", "url": "https://github.com/ConsenSys/teku/commit/59fa2535f1c65f88de82befa45085d1550c91ebf", "message": "Better handling when peer is missing the required checkpoint", "committedDate": "2020-10-09T21:53:53Z", "type": "commit"}, {"oid": "8df6ccaec9bb1f8ff1042148f89a1367abc6bdee", "url": "https://github.com/ConsenSys/teku/commit/8df6ccaec9bb1f8ff1042148f89a1367abc6bdee", "message": "Update BeaconChainControllerTest", "committedDate": "2020-10-09T21:56:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk3MDYxMA==", "url": "https://github.com/ConsenSys/teku/pull/2936#discussion_r502970610", "bodyText": "Unfortunately I don't think this works reliably.  The update function has to be side effect free as it may be applied multiple times when there are race conditions.  I think you could use getAndUpdate though:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final AtomicBoolean updated = new AtomicBoolean(false);\n          \n          \n            \n                lastInvoked.updateAndGet(\n          \n          \n            \n                    last -> {\n          \n          \n            \n                      if (last == null || last.plus(throttlingPeriod).isLessThanOrEqualTo(currentTime)) {\n          \n          \n            \n                        updated.set(true);\n          \n          \n            \n                        return currentTime;\n          \n          \n            \n                      }\n          \n          \n            \n                      return last;\n          \n          \n            \n                    });\n          \n          \n            \n                return updated.get();\n          \n          \n            \n                final UInt64 previousValue = lastInvoked.getAndUpdate(\n          \n          \n            \n                    last -> {\n          \n          \n            \n                      if (last == null || last.plus(throttlingPeriod).isLessThanOrEqualTo(currentTime)) {\n          \n          \n            \n                        return currentTime;\n          \n          \n            \n                      }\n          \n          \n            \n                      return last;\n          \n          \n            \n                    });\n          \n          \n            \n                return previousValue == null || previousValue(throttlingPeriod).isLessThanOrEqualTo(currentTime);\n          \n      \n    \n    \n  \n\nBecause it's returning the value immediately prior to the update, we can re-evaluate to see if an update was required without having to have side-effects in the invoked method.", "author": "ajsutton", "createdAt": "2020-10-11T21:54:08Z", "path": "infrastructure/time/src/main/java/tech/pegasys/teku/infrastructure/time/Throttler.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.infrastructure.time;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Consumer;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+\n+public class Throttler<TResource> {\n+  // The wrapped resouce can be invoked at most once every throttling period\n+  private final TResource resource;\n+  private final UInt64 throttlingPeriod;\n+  private final AtomicReference<UInt64> lastInvoked = new AtomicReference<>(null);\n+\n+  public Throttler(final TResource resource, final UInt64 throttlingPeriod) {\n+    this.resource = resource;\n+    this.throttlingPeriod = throttlingPeriod;\n+  }\n+\n+  public void invoke(final UInt64 currentTime, Consumer<TResource> invocation) {\n+    if (updateLastInvoked(currentTime)) {\n+      invocation.accept(resource);\n+    }\n+  }\n+\n+  private boolean updateLastInvoked(final UInt64 currentTime) {\n+    final AtomicBoolean updated = new AtomicBoolean(false);\n+    lastInvoked.updateAndGet(\n+        last -> {\n+          if (last == null || last.plus(throttlingPeriod).isLessThanOrEqualTo(currentTime)) {\n+            updated.set(true);\n+            return currentTime;\n+          }\n+          return last;\n+        });\n+    return updated.get();", "originalCommit": "8df6ccaec9bb1f8ff1042148f89a1367abc6bdee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MzM2MQ==", "url": "https://github.com/ConsenSys/teku/pull/2936#discussion_r503353361", "bodyText": "good catch!", "author": "mbaxter", "createdAt": "2020-10-12T14:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk3MDYxMA=="}], "type": "inlineReview", "revised_code": {"commit": "f15fd861a1e218e0358dd30dbbff76e11b6b092b", "chunk": "diff --git a/infrastructure/time/src/main/java/tech/pegasys/teku/infrastructure/time/Throttler.java b/infrastructure/time/src/main/java/tech/pegasys/teku/infrastructure/time/Throttler.java\nindex 18157acf02..6c608f2a5a 100644\n--- a/infrastructure/time/src/main/java/tech/pegasys/teku/infrastructure/time/Throttler.java\n+++ b/infrastructure/time/src/main/java/tech/pegasys/teku/infrastructure/time/Throttler.java\n\n@@ -13,13 +13,12 @@\n \n package tech.pegasys.teku.infrastructure.time;\n \n-import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.function.Consumer;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class Throttler<TResource> {\n-  // The wrapped resouce can be invoked at most once every throttling period\n+  // The wrapped resource can be invoked at most once every throttling period\n   private final TResource resource;\n   private final UInt64 throttlingPeriod;\n   private final AtomicReference<UInt64> lastInvoked = new AtomicReference<>(null);\n"}}, {"oid": "f15fd861a1e218e0358dd30dbbff76e11b6b092b", "url": "https://github.com/ConsenSys/teku/commit/f15fd861a1e218e0358dd30dbbff76e11b6b092b", "message": "Remove side-effects from atomic update", "committedDate": "2020-10-12T15:15:54Z", "type": "commit"}, {"oid": "510d4b07601fb273662363a6f4f9bf511c37003a", "url": "https://github.com/ConsenSys/teku/commit/510d4b07601fb273662363a6f4f9bf511c37003a", "message": "Improve logging around weak subjectivity period errors", "committedDate": "2020-10-12T16:06:06Z", "type": "commit"}, {"oid": "330dc4af513b43d1d2518411af4c7689306caca1", "url": "https://github.com/ConsenSys/teku/commit/330dc4af513b43d1d2518411af4c7689306caca1", "message": "Reorganize violationPolicy logic", "committedDate": "2020-10-12T18:01:47Z", "type": "commit"}, {"oid": "c98ee04356f818ab61ce484c6aeb28345b33093d", "url": "https://github.com/ConsenSys/teku/commit/c98ee04356f818ab61ce484c6aeb28345b33093d", "message": "Add a \"moderate\" ws policy and enable it", "committedDate": "2020-10-12T18:23:13Z", "type": "commit"}, {"oid": "bacbcd07299f6a06b001b4760dec305809eb7e02", "url": "https://github.com/ConsenSys/teku/commit/bacbcd07299f6a06b001b4760dec305809eb7e02", "message": "Remove unused methods", "committedDate": "2020-10-12T18:28:22Z", "type": "commit"}, {"oid": "ce108e3f7f0616998d0e8a326e8cc28fef32f823", "url": "https://github.com/ConsenSys/teku/commit/ce108e3f7f0616998d0e8a326e8cc28fef32f823", "message": "Make ws error handling less aggressive during block import", "committedDate": "2020-10-12T19:09:50Z", "type": "commit"}, {"oid": "cce8c712cb01b91e5adb4f8bdd5c72679f6276a2", "url": "https://github.com/ConsenSys/teku/commit/cce8c712cb01b91e5adb4f8bdd5c72679f6276a2", "message": "Merge branch 'master' into issue-2273/fully-enable-ws-validation", "committedDate": "2020-10-12T19:14:42Z", "type": "commit"}, {"oid": "432ae247eec592ab51f3712ca0df85244d207a5c", "url": "https://github.com/ConsenSys/teku/commit/432ae247eec592ab51f3712ca0df85244d207a5c", "message": "Cut equals() method overrides", "committedDate": "2020-10-12T19:23:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2NDAwMg==", "url": "https://github.com/ConsenSys/teku/pull/2936#discussion_r503664002", "bodyText": "I'd suggest using ColorConsolePrinter.print to make this coloured (I think it should be red at error level and yellow at warn but tempted to just always make it red).", "author": "ajsutton", "createdAt": "2020-10-13T04:44:50Z", "path": "infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java", "diffHunk": "@@ -195,4 +197,40 @@ public void performance(final String performance) {\n   public void warnWeakSubjectivityChecksSuppressed(final UInt64 untilEpoch) {\n     log.warn(\"Suppressing weak subjectivity errors until epoch {}\", untilEpoch);\n   }\n+\n+  public void warnWeakSubjectivityFinalizedCheckpointValidationDeferred(\n+      final UInt64 finalizedEpoch, final UInt64 wsCheckpointEpoch) {\n+    log.warn(\n+        \"Deferring weak subjectivity checks for finalized checkpoint at epoch {}.  Checks will resume once weak subjectivity checkpoint at epoch {} is reached.\",\n+        finalizedEpoch,\n+        wsCheckpointEpoch);\n+  }\n+\n+  public void finalizedCheckpointOutsideOfWeakSubjectivityPeriod(\n+      Level level, final UInt64 latestFinalizedCheckpointEpoch) {\n+    log.log(\n+        level,\n+        \"The latest finalized checkpoint at epoch {} is outside of the weak subjectivity period.  Please supply a recent weak subjectivity checkpoint using --ws-checkpoint=<BLOCK_ROOT>:<EPOCH>.\",\n+        latestFinalizedCheckpointEpoch);", "originalCommit": "432ae247eec592ab51f3712ca0df85244d207a5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4OTk3MA==", "url": "https://github.com/ConsenSys/teku/pull/2936#discussion_r503989970", "bodyText": "good idea \ud83d\udc4d", "author": "mbaxter", "createdAt": "2020-10-13T14:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2NDAwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNjI3OQ==", "url": "https://github.com/ConsenSys/teku/pull/2936#discussion_r504136279", "bodyText": "updated to log the main errors (inconsistent ws checkpoint, outside ws period) in red and the warnings (deferring / suppressing ws checks due to CLI flags) in yellow", "author": "mbaxter", "createdAt": "2020-10-13T17:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2NDAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "c8b657c201419dff31e15ce3bf6f3ca7bb9004f6", "chunk": "diff --git a/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java b/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\nindex 10017c0592..eefdcc8437 100644\n--- a/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\n+++ b/infrastructure/logging/src/main/java/tech/pegasys/teku/infrastructure/logging/StatusLogger.java\n\n@@ -208,10 +209,11 @@ public class StatusLogger {\n \n   public void finalizedCheckpointOutsideOfWeakSubjectivityPeriod(\n       Level level, final UInt64 latestFinalizedCheckpointEpoch) {\n-    log.log(\n-        level,\n-        \"The latest finalized checkpoint at epoch {} is outside of the weak subjectivity period.  Please supply a recent weak subjectivity checkpoint using --ws-checkpoint=<BLOCK_ROOT>:<EPOCH>.\",\n-        latestFinalizedCheckpointEpoch);\n+    final String msg =\n+        String.format(\n+            \"The latest finalized checkpoint at epoch %s is outside of the weak subjectivity period.  Please supply a recent weak subjectivity checkpoint using --ws-checkpoint=<BLOCK_ROOT>:<EPOCH>.\",\n+            latestFinalizedCheckpointEpoch);\n+    log.log(level, print(msg, ColorConsolePrinter.Color.RED));\n   }\n \n   public void chainInconsistentWithWeakSubjectivityCheckpoint(\n"}}, {"oid": "c8b657c201419dff31e15ce3bf6f3ca7bb9004f6", "url": "https://github.com/ConsenSys/teku/commit/c8b657c201419dff31e15ce3bf6f3ca7bb9004f6", "message": "Log ws period error in red", "committedDate": "2020-10-13T17:06:01Z", "type": "commit"}, {"oid": "22ba3f2c0de9401ca51e11f5a50e49a9e6123099", "url": "https://github.com/ConsenSys/teku/commit/22ba3f2c0de9401ca51e11f5a50e49a9e6123099", "message": "Only use color if log level is greater than info", "committedDate": "2020-10-13T17:14:30Z", "type": "commit"}, {"oid": "a82f2f14fe34cca51e4e5522e227438c8f603dd4", "url": "https://github.com/ConsenSys/teku/commit/a82f2f14fe34cca51e4e5522e227438c8f603dd4", "message": "Log ws checkpoint error in red", "committedDate": "2020-10-13T17:21:46Z", "type": "commit"}, {"oid": "f36732982a317df5aa18d6ea31789d945e1b7c3f", "url": "https://github.com/ConsenSys/teku/commit/f36732982a317df5aa18d6ea31789d945e1b7c3f", "message": "Log ws warnings in yellow", "committedDate": "2020-10-13T17:30:59Z", "type": "commit"}, {"oid": "40b24dfe565912f81b5b511ba902ca92929bae16", "url": "https://github.com/ConsenSys/teku/commit/40b24dfe565912f81b5b511ba902ca92929bae16", "message": "Merge branch 'master' into issue-2273/fully-enable-ws-validation", "committedDate": "2020-10-13T17:31:25Z", "type": "commit"}]}