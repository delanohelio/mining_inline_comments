{"pr_number": 3355, "pr_title": "Add voluntary exit acceptance test", "pr_createdAt": "2020-12-03T21:12:17Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3355", "timeline": [{"oid": "79975d76abc557c5360314fde975b134807ea341", "url": "https://github.com/ConsenSys/teku/commit/79975d76abc557c5360314fde975b134807ea341", "message": "Add voluntary exit acceptance test", "committedDate": "2020-12-03T20:56:12Z", "type": "commit"}, {"oid": "dae296e427dd33f74094c18b801ef2ae66af137c", "url": "https://github.com/ConsenSys/teku/commit/dae296e427dd33f74094c18b801ef2ae66af137c", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest", "committedDate": "2020-12-03T21:12:57Z", "type": "commit"}, {"oid": "bb8d985d01cd8f0eec70539db80bc0a103591880", "url": "https://github.com/ConsenSys/teku/commit/bb8d985d01cd8f0eec70539db80bc0a103591880", "message": "Activate status logger and test validator exit", "committedDate": "2020-12-03T22:18:56Z", "type": "commit"}, {"oid": "b72a9a83d9ce9a84ffe1255cad0637553ff1c691", "url": "https://github.com/ConsenSys/teku/commit/b72a9a83d9ce9a84ffe1255cad0637553ff1c691", "message": "Clean up PR", "committedDate": "2020-12-03T22:38:53Z", "type": "commit"}, {"oid": "6efcfb9b1a545be5febec111671faf06f14b8cbc", "url": "https://github.com/ConsenSys/teku/commit/6efcfb9b1a545be5febec111671faf06f14b8cbc", "message": "Fix minor", "committedDate": "2020-12-03T22:39:45Z", "type": "commit"}, {"oid": "3e39dfcd0a6bb260536492dd0bd36e690531202f", "url": "https://github.com/ConsenSys/teku/commit/3e39dfcd0a6bb260536492dd0bd36e690531202f", "message": "Try fix gradle import", "committedDate": "2020-12-03T22:44:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNDAxMA==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r535704010", "bodyText": "We should push all this logic into the DSL rather than doing it directly in the test.  The AT itself should be just high level steps like\nkeys = depositSender.sendValidatorDeposits(..)\ncreateValidatorNode(beaconNode, keys)\nsendVoluntaryExit(beaconNode, keys)", "author": "ajsutton", "createdAt": "2020-12-03T22:51:25Z", "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import static tech.pegasys.teku.util.config.Constants.MAX_EFFECTIVE_BALANCE;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n+import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;\n+import org.apache.commons.compress.utils.IOUtils;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuDepositSender;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeyGenerator;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystoreGenerator;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void test() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    int numberOfValidators = 4;\n+    final TekuDepositSender depositSender = createTekuDepositSender();\n+    final List<ValidatorKeyGenerator.ValidatorKeys> validatorKeys =\n+        depositSender.generateValidatorKeys(numberOfValidators);\n+    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n+\n+    final String validatorKeysPassword = \"validatorsKeysPassword\";\n+    final Path validatorInfoDirectoryPath = Path.of(\"./validatorInfo\");\n+    final String keysDirectory = \"keys\";\n+    final String passwordsDirectory = \"passwords\";\n+    final Path keysOutputPath = validatorInfoDirectoryPath.resolve(keysDirectory);\n+    final Path passwordsOutputPath = validatorInfoDirectoryPath.resolve(passwordsDirectory);\n+    final ValidatorKeystoreGenerator keystoreGenerator =\n+        new ValidatorKeystoreGenerator(\n+            validatorKeysPassword, keysOutputPath, passwordsOutputPath, (__) -> {});\n+\n+    // create temporary tar file which will be copied to docker containers\n+    File validatorInfoTar = File.createTempFile(\"validatorInfo\", \".tar\");\n+    validatorInfoTar.deleteOnExit();\n+\n+    // create keystores using the validator keys generated by deposit sender\n+    keystoreGenerator.generateKeystoreAndPasswordFiles(\n+        validatorKeys.stream()\n+            .map(ValidatorKeyGenerator.ValidatorKeys::getValidatorKey)\n+            .collect(Collectors.toList()));\n+\n+    // copy keystores directory to tar file and delete the now redundant directory\n+    copyDirectoryToTarFile(validatorInfoDirectoryPath, validatorInfoTar.toPath());\n+    FileUtils.deleteDirectory(validatorInfoDirectoryPath.toFile());", "originalCommit": "3e39dfcd0a6bb260536492dd0bd36e690531202f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNjQwNQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r535706405", "bodyText": "Yep. Will do.", "author": "cemozerr", "createdAt": "2020-12-03T22:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNDAxMA=="}], "type": "inlineReview", "revised_code": {"commit": "d0f11ffac2605e90f8a56339fc86fc6fcb52ea9a", "chunk": "diff --git a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\nindex 07908012c2..401d96f2ec 100644\n--- a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n+++ b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n\n@@ -13,67 +13,26 @@\n \n package tech.pegasys.teku.test.acceptance;\n \n-import static tech.pegasys.teku.util.config.Constants.MAX_EFFECTIVE_BALANCE;\n-\n-import java.io.BufferedOutputStream;\n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n-import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;\n-import org.apache.commons.compress.utils.IOUtils;\n-import org.apache.commons.io.FileUtils;\n import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n-import tech.pegasys.teku.test.acceptance.dsl.TekuDepositSender;\n import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n-import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeyGenerator;\n-import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystoreGenerator;\n \n public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n \n   @Test\n-  void test() throws Exception {\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n     final BesuNode eth1Node = createBesuNode();\n     eth1Node.start();\n \n-    int numberOfValidators = 4;\n-    final TekuDepositSender depositSender = createTekuDepositSender();\n-    final List<ValidatorKeyGenerator.ValidatorKeys> validatorKeys =\n-        depositSender.generateValidatorKeys(numberOfValidators);\n-    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n-\n-    final String validatorKeysPassword = \"validatorsKeysPassword\";\n-    final Path validatorInfoDirectoryPath = Path.of(\"./validatorInfo\");\n-    final String keysDirectory = \"keys\";\n-    final String passwordsDirectory = \"passwords\";\n-    final Path keysOutputPath = validatorInfoDirectoryPath.resolve(keysDirectory);\n-    final Path passwordsOutputPath = validatorInfoDirectoryPath.resolve(passwordsDirectory);\n-    final ValidatorKeystoreGenerator keystoreGenerator =\n-        new ValidatorKeystoreGenerator(\n-            validatorKeysPassword, keysOutputPath, passwordsOutputPath, (__) -> {});\n-\n-    // create temporary tar file which will be copied to docker containers\n-    File validatorInfoTar = File.createTempFile(\"validatorInfo\", \".tar\");\n-    validatorInfoTar.deleteOnExit();\n-\n-    // create keystores using the validator keys generated by deposit sender\n-    keystoreGenerator.generateKeystoreAndPasswordFiles(\n-        validatorKeys.stream()\n-            .map(ValidatorKeyGenerator.ValidatorKeys::getValidatorKey)\n-            .collect(Collectors.toList()));\n+    final List<BLSKeyPair> validatorKeys = createKeysAndSendDeposits(eth1Node, 4);\n \n-    // copy keystores directory to tar file and delete the now redundant directory\n-    copyDirectoryToTarFile(validatorInfoDirectoryPath, validatorInfoTar.toPath());\n-    FileUtils.deleteDirectory(validatorInfoDirectoryPath.toFile());\n+    final File validatorInfoTar = createValidatorKeystores(validatorKeys, \"keys\", \"passwords\");\n \n     final TekuNode beaconNode =\n         createTekuNode(config -> config.withNetwork(\"less-swift\").withDepositsFrom(eth1Node));\n"}}, {"oid": "cb2180d7533ff8a21ae908dbb00d1e42efddc2c1", "url": "https://github.com/ConsenSys/teku/commit/cb2180d7533ff8a21ae908dbb00d1e42efddc2c1", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest", "committedDate": "2020-12-04T13:10:51Z", "type": "commit"}, {"oid": "6ba4545012710673f22537d7db7f5bb5a74b20bf", "url": "https://github.com/ConsenSys/teku/commit/6ba4545012710673f22537d7db7f5bb5a74b20bf", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest", "committedDate": "2020-12-05T03:24:24Z", "type": "commit"}, {"oid": "d0f11ffac2605e90f8a56339fc86fc6fcb52ea9a", "url": "https://github.com/ConsenSys/teku/commit/d0f11ffac2605e90f8a56339fc86fc6fcb52ea9a", "message": "Push internal logic to DSL and use --confirmation-enabled=false flag", "committedDate": "2020-12-05T03:49:42Z", "type": "commit"}, {"oid": "c8ecdbdded64d7e69b606489ff4f1a9711945d00", "url": "https://github.com/ConsenSys/teku/commit/c8ecdbdded64d7e69b606489ff4f1a9711945d00", "message": "Change less-swift config to allow immediate validator exits", "committedDate": "2020-12-05T04:00:56Z", "type": "commit"}, {"oid": "893961e952d56e548365352f04fa0b8240f74d94", "url": "https://github.com/ConsenSys/teku/commit/893961e952d56e548365352f04fa0b8240f74d94", "message": "Add commons io to acceptance test build.gradle", "committedDate": "2020-12-05T04:05:46Z", "type": "commit"}, {"oid": "33711f65cd7b7079ef7dba2bd6ee54d9a16e6ef2", "url": "https://github.com/ConsenSys/teku/commit/33711f65cd7b7079ef7dba2bd6ee54d9a16e6ef2", "message": "Try fix gradle error", "committedDate": "2020-12-05T04:14:23Z", "type": "commit"}, {"oid": "7781239a34f6f6ba74de9b32304792c6510eeb55", "url": "https://github.com/ConsenSys/teku/commit/7781239a34f6f6ba74de9b32304792c6510eeb55", "message": "Try fix apache-commons-io gradle import error", "committedDate": "2020-12-05T04:28:47Z", "type": "commit"}, {"oid": "a107f405fd6559b562740d175a9d10dff1fe4546", "url": "https://github.com/ConsenSys/teku/commit/a107f405fd6559b562740d175a9d10dff1fe4546", "message": "Try another fix", "committedDate": "2020-12-05T04:38:36Z", "type": "commit"}, {"oid": "53339e77e2d9433fb9804b91733e15c97e322bc1", "url": "https://github.com/ConsenSys/teku/commit/53339e77e2d9433fb9804b91733e15c97e322bc1", "message": "Try another fix", "committedDate": "2020-12-05T14:55:31Z", "type": "commit"}, {"oid": "3943dee29babf5f027a05db57bffe0aeb0ab16e4", "url": "https://github.com/ConsenSys/teku/commit/3943dee29babf5f027a05db57bffe0aeb0ab16e4", "message": "Add bls as dependency to acceptance test test fixtures", "committedDate": "2020-12-05T15:04:18Z", "type": "commit"}, {"oid": "73a964c80128f4e9043670ca394ed661ec79aa3e", "url": "https://github.com/ConsenSys/teku/commit/73a964c80128f4e9043670ca394ed661ec79aa3e", "message": "Try another gradle fix", "committedDate": "2020-12-05T15:09:50Z", "type": "commit"}, {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7", "url": "https://github.com/ConsenSys/teku/commit/fbf7599664ad195e7b215c8617288d78300e00b7", "message": "Set shard committee period to 1 so that constants tests dont fail", "committedDate": "2020-12-05T16:45:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMDY4NQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537200685", "bodyText": "nit: Probably just leave this unset by default. It will be a lot less confusing than having the rest api timeout.", "author": "ajsutton", "createdAt": "2020-12-07T03:08:36Z", "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance.dsl;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class TekuVoluntaryExit extends Node {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private final TekuVoluntaryExit.Config config;\n+  private boolean started = false;\n+  private Set<File> configFiles;\n+\n+  private TekuVoluntaryExit(final Network network, final TekuVoluntaryExit.Config config) {\n+    super(network, TEKU_DOCKER_IMAGE, LOG);\n+    this.config = config;\n+\n+    container\n+        .withWorkingDirectory(WORKING_DIRECTORY)\n+        .withCommand(\n+            \"voluntary-exit\", \"--confirmation-enabled=false\", \"--config-file\", CONFIG_FILE_PATH);\n+  }\n+\n+  public static TekuVoluntaryExit create(\n+      final Network network, Consumer<TekuVoluntaryExit.Config> configOptions) {\n+\n+    final TekuVoluntaryExit.Config config = new TekuVoluntaryExit.Config();\n+    configOptions.accept(config);\n+\n+    final TekuVoluntaryExit node = new TekuVoluntaryExit(network, config);\n+\n+    return node;\n+  }\n+\n+  public void start() throws Exception {\n+    assertThat(started).isFalse();\n+    LOG.debug(\"Start voluntary exit command line process {}\", nodeAlias);\n+    started = true;\n+    final Map<File, String> configFiles = config.write();\n+    this.configFiles = configFiles.keySet();\n+    configFiles.forEach(\n+        (localFile, targetPath) ->\n+            container.withCopyFileToContainer(\n+                MountableFile.forHostPath(localFile.getAbsolutePath()), targetPath));\n+    container.start();\n+  }\n+\n+  @Override\n+  public void stop() {\n+    if (!started) {\n+      return;\n+    }\n+    LOG.debug(\"Shutting down\");\n+    configFiles.forEach(\n+        configFile -> {\n+          if (!configFile.delete() && configFile.exists()) {\n+            throw new RuntimeException(\"Failed to delete config file: \" + configFile);\n+          }\n+        });\n+    container.stop();\n+  }\n+\n+  public static class Config {\n+    private Map<String, Object> configMap = new HashMap<>();\n+\n+    public Config() {\n+      configMap.put(\"log-destination\", \"console\");\n+      configMap.put(\"beacon-node-api-endpoint\", \"http://notvalid.restapi.com\");", "originalCommit": "fbf7599664ad195e7b215c8617288d78300e00b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyMTg0Mw==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537721843", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-12-07T18:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMDY4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "325894a146d5329f74a7b3f39da8037d65471f18", "chunk": "diff --git a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java\nindex f3c67f4b60..348912a924 100644\n--- a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java\n+++ b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java\n\n@@ -13,17 +13,19 @@\n \n package tech.pegasys.teku.test.acceptance.dsl;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.utility.MountableFile;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n \n import java.io.File;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n import java.util.function.Consumer;\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.Logger;\n-import org.testcontainers.containers.Network;\n-import org.testcontainers.utility.MountableFile;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n \n public class TekuVoluntaryExit extends Node {\n   private static final Logger LOG = LogManager.getLogger();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMTAyOQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537201029", "bodyText": "nit: I'd be tempted to make this withBeaconNode and just pass beaconNode then have the internals of the DSL get the right rest API URL.", "author": "ajsutton", "createdAt": "2020-12-07T03:09:49Z", "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final List<BLSKeyPair> validatorKeys = createKeysAndSendDeposits(eth1Node, 4);\n+\n+    final File validatorInfoTar = createValidatorKeystores(validatorKeys, \"keys\", \"passwords\");\n+\n+    final TekuNode beaconNode =\n+        createTekuNode(config -> config.withNetwork(\"less-swift\").withDepositsFrom(eth1Node));\n+\n+    final TekuValidatorNode validatorClient =\n+        createValidatorNode(\n+            config ->\n+                config\n+                    .withNetwork(\"less-swift\")\n+                    .withInteropModeDisabled()\n+                    .withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\")\n+                    .withBeaconNodeEndpoint(beaconNode.getBeaconRestApiUrl()));\n+    validatorClient.copyContentsToWorkingDirectory(validatorInfoTar);\n+\n+    final TekuVoluntaryExit voluntaryExitProcess =\n+        createVoluntaryExit(\n+            config ->\n+                config\n+                    .withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\")\n+                    .withBeaconNodeEndpoint(beaconNode.getBeaconRestApiUrl()));", "originalCommit": "fbf7599664ad195e7b215c8617288d78300e00b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyMzIyOQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537723229", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-12-07T18:16:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMTAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "325894a146d5329f74a7b3f39da8037d65471f18", "chunk": "diff --git a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\nindex 63b8e81d00..edaf22cb9a 100644\n--- a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n+++ b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n\n@@ -13,15 +13,13 @@\n \n package tech.pegasys.teku.test.acceptance;\n \n-import java.io.File;\n-import java.util.List;\n import org.junit.jupiter.api.Test;\n-import tech.pegasys.teku.bls.BLSKeyPair;\n import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n-import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuBeaconNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n \n public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwNjQ3MQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537206471", "bodyText": "I think this should be encapsulated by the DSL better.  I'd say createKeysAndSendDeposits should be pushed into TekuDepositSender rather than the test base class, and it then returns a custom ValidatorKeys object.  So this becomes something like:\nfinal ValidatorKeys validatorKeys = createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n\nand then instead of withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\"),  both the validator node and the validator exit node would just have withValidatorKeys(validatorKeys) and ValidatorKeys then has a method to get the keys as a tarball (which it can cache to avoid creating the keystores twice) and the copying into docker just becomes a part of that then.", "author": "ajsutton", "createdAt": "2020-12-07T03:28:40Z", "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final List<BLSKeyPair> validatorKeys = createKeysAndSendDeposits(eth1Node, 4);\n+\n+    final File validatorInfoTar = createValidatorKeystores(validatorKeys, \"keys\", \"passwords\");", "originalCommit": "fbf7599664ad195e7b215c8617288d78300e00b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NDUxNw==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537784517", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-12-07T19:47:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwNjQ3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "325894a146d5329f74a7b3f39da8037d65471f18", "chunk": "diff --git a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\nindex 63b8e81d00..edaf22cb9a 100644\n--- a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n+++ b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n\n@@ -13,15 +13,13 @@\n \n package tech.pegasys.teku.test.acceptance;\n \n-import java.io.File;\n-import java.util.List;\n import org.junit.jupiter.api.Test;\n-import tech.pegasys.teku.bls.BLSKeyPair;\n import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n-import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuBeaconNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n \n public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n \n"}}, {"oid": "325894a146d5329f74a7b3f39da8037d65471f18", "url": "https://github.com/ConsenSys/teku/commit/325894a146d5329f74a7b3f39da8037d65471f18", "message": "Encapsulate keystore generation in DSL", "committedDate": "2020-12-07T19:46:24Z", "type": "commit"}, {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "url": "https://github.com/ConsenSys/teku/commit/d028d28838dc0c1f82899b7f1ee51e7896b8e683", "message": "Run spotless", "committedDate": "2020-12-07T19:48:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MjM5Nw==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537862397", "bodyText": "Not sure we needed this change.  It could be a combined beacon and validator client so TekuNode seems like a reasonable name.", "author": "ajsutton", "createdAt": "2020-12-07T21:55:59Z", "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java", "diffHunk": "@@ -33,11 +33,11 @@ public void shouldCreateTheSameGenesisState() throws Exception {\n \n     createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n \n-    final TekuNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n+    final TekuBeaconNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));", "originalCommit": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0OTIzNA==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r538749234", "bodyText": "Artifact left from an attempt I had to make all the nodes using pegasys:develop image into one TekuNode. Proved too hard. Reverting this change.", "author": "cemozerr", "createdAt": "2020-12-08T19:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MjM5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "chunk": "diff --git a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java\nindex 9735f5434e..f7fe602907 100644\n--- a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java\n+++ b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java\n\n@@ -33,11 +34,11 @@ public class GenesisStateAcceptanceTest extends AcceptanceTestBase {\n \n     createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n \n-    final TekuBeaconNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n+    final TekuNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n     firstTeku.start();\n     firstTeku.waitForGenesis();\n \n-    final TekuBeaconNode lateJoinTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n+    final TekuNode lateJoinTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n     lateJoinTeku.start();\n     lateJoinTeku.waitForGenesis();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MzI0MQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537863241", "bodyText": "nit: Would be nice if this could just be a chained call.", "author": "ajsutton", "createdAt": "2020-12-07T21:57:21Z", "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuBeaconNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final ValidatorKeystores validatorKeystores =\n+        createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n+\n+    final TekuBeaconNode beaconNode =\n+        createTekuNode(config -> config.withNetwork(\"less-swift\").withDepositsFrom(eth1Node));\n+\n+    final TekuValidatorNode validatorClient =\n+        createValidatorNode(\n+            config ->\n+                config\n+                    .withNetwork(\"less-swift\")\n+                    .withInteropModeDisabled()\n+                    .withBeaconNode(beaconNode));\n+    validatorClient.withValidatorKeystores(validatorKeystores);", "originalCommit": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1MDE3Nw==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r538750177", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-08T19:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MzI0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "chunk": "diff --git a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\nindex a32dbbc993..eb567476b7 100644\n--- a/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n+++ b/acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java\n\n@@ -16,7 +16,7 @@ package tech.pegasys.teku.test.acceptance;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n-import tech.pegasys.teku.test.acceptance.dsl.TekuBeaconNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2Mzk4Nw==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537863987", "bodyText": "Do we still need this now that we have createTekuDepositSender().sendValidatorDeposits?", "author": "ajsutton", "createdAt": "2020-12-07T21:58:43Z", "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java", "diffHunk": "@@ -64,6 +75,15 @@ protected TekuDepositSender createTekuDepositSender() {\n     return addNode(new TekuDepositSender(network));\n   }\n \n+  protected List<BLSKeyPair> createKeysAndSendDeposits(\n+      final BesuNode eth1Node, final int numberOfValidators) throws Exception {\n+    final TekuDepositSender depositSender = createTekuDepositSender();\n+    final List<ValidatorKeys> validatorKeys =\n+        depositSender.generateValidatorKeys(numberOfValidators);\n+    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n+    return validatorKeys.stream().map(ValidatorKeys::getValidatorKey).collect(Collectors.toList());\n+  }", "originalCommit": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1MDQ2MQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r538750461", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-12-08T19:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2Mzk4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "chunk": "diff --git a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java\nindex 2034ad2588..39c7aea5c3 100644\n--- a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java\n+++ b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java\n\n@@ -75,15 +71,6 @@ public class AcceptanceTestBase {\n     return addNode(new TekuDepositSender(network));\n   }\n \n-  protected List<BLSKeyPair> createKeysAndSendDeposits(\n-      final BesuNode eth1Node, final int numberOfValidators) throws Exception {\n-    final TekuDepositSender depositSender = createTekuDepositSender();\n-    final List<ValidatorKeys> validatorKeys =\n-        depositSender.generateValidatorKeys(numberOfValidators);\n-    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n-    return validatorKeys.stream().map(ValidatorKeys::getValidatorKey).collect(Collectors.toList());\n-  }\n-\n   protected BesuNode createBesuNode() {\n     return addNode(new BesuNode(network));\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDI3MQ==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537864271", "bodyText": "Does this need to be public now? Ideally it wouldn't be accessible from the ATs itself.", "author": "ajsutton", "createdAt": "2020-12-07T21:59:13Z", "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/Node.java", "diffHunk": "@@ -111,4 +111,14 @@ protected void copyDirectoryToTar(final String sourcePath, final File localTarge\n       throw new RuntimeException(\"Failed to copy directory from \" + nodeAlias, e);\n     }\n   }\n+\n+  /**\n+   * Copies contents of the given directory into node's working directory.\n+   *\n+   * @param tarFile\n+   * @throws IOException\n+   */\n+  public void copyContentsToWorkingDirectory(File tarFile) throws IOException {", "originalCommit": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1MTEzMA==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r538751130", "bodyText": "It's still used by other ATs so unfortunately yes.", "author": "cemozerr", "createdAt": "2020-12-08T19:36:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDI3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTE2Ng==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537865166", "bodyText": "Do we need this?", "author": "ajsutton", "createdAt": "2020-12-07T22:00:41Z", "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java", "diffHunk": "@@ -101,8 +113,18 @@ public Config() {\n       configMap.put(\"beacon-node-api-endpoint\", \"http://notvalid.restapi.com\");", "originalCommit": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1MTYxNg==", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r538751616", "bodyText": "Not sure. Will try removing it.", "author": "cemozerr", "createdAt": "2020-12-08T19:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTE2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "chunk": "diff --git a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java\nindex 0421fc0dea..b7ffaffdab 100644\n--- a/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java\n+++ b/acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java\n\n@@ -123,7 +125,7 @@ public class TekuValidatorNode extends Node {\n       return this;\n     }\n \n-    public TekuValidatorNode.Config withBeaconNode(final TekuBeaconNode beaconNode) {\n+    public TekuValidatorNode.Config withBeaconNode(final TekuNode beaconNode) {\n       configMap.put(\"beacon-node-api-endpoint\", beaconNode.getBeaconRestApiUrl());\n       return this;\n     }\n"}}, {"oid": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "url": "https://github.com/ConsenSys/teku/commit/4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "message": "Incorporate feedback", "committedDate": "2020-12-08T19:48:02Z", "type": "commit"}, {"oid": "defc797a44e97901f0e97b12e8141d2065453d0e", "url": "https://github.com/ConsenSys/teku/commit/defc797a44e97901f0e97b12e8141d2065453d0e", "message": "Run spotless", "committedDate": "2020-12-08T19:48:55Z", "type": "commit"}, {"oid": "89316a9d73786d341fceacce8dee4e427d571ce0", "url": "https://github.com/ConsenSys/teku/commit/89316a9d73786d341fceacce8dee4e427d571ce0", "message": "Merge remote-tracking branch 'remotes/origin/master' into addVoluntaryExitAcceptanceTest\n\n# Conflicts:\n#\tacceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuDepositSender.java", "committedDate": "2020-12-08T19:50:54Z", "type": "commit"}]}