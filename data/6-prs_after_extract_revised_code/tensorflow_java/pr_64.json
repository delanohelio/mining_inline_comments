{"pr_number": 64, "pr_title": "Suggestions for minor improvements to Shape.java", "pr_createdAt": "2020-05-28T15:20:34Z", "pr_url": "https://github.com/tensorflow/java/pull/64", "timeline": [{"oid": "48db7b8f36426d023b21b65cb8268256dc60d34b", "url": "https://github.com/tensorflow/java/commit/48db7b8f36426d023b21b65cb8268256dc60d34b", "message": "Suggestions for improvements to Shape.java:\n- some utility methods\n- negative indexing for size()\n- more javadoc", "committedDate": "2020-05-28T15:14:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTc1Ng==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432209756", "bodyText": "Funny, I never realized that Shape was missing that much documentation... thanks!\nCan you please reformat it to follow Google Java Style guide? \"Defines the..\" should start on a separate line, preceded by a blank line plus a <p> tag, like here. This should be applied to all other javadoc blocks as well.", "author": "karllessard", "createdAt": "2020-05-29T01:30:57Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -19,16 +19,29 @@\n \n import java.util.Arrays;\n \n+/**\n+ * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}. Defines the size along\n+ * its axis. May contain an unknown size for one of the axis or may be totally unknown, in which\n+ * case not even the number of axis is known.\n+ */", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2MTYzNg==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432361636", "bodyText": "Sure! Sorry for not checking the styleguide first.", "author": "chenkelmann", "createdAt": "2020-05-29T09:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTc1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -20,38 +20,42 @@ package org.tensorflow.tools;\n import java.util.Arrays;\n \n /**\n- * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}. Defines the size along\n- * its axis. May contain an unknown size for one of the axis or may be totally unknown, in which\n- * case not even the number of axis is known.\n+ * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}.\n+ *\n+ * <p>A {@code Shape} defines sizes along its axes. It may contain an unknown size for one of the\n+ * axes or may be totally unknown, in which case not even the number of axes is known. If the size\n+ * of an axis is unknown, {@link Shape#UNKNOWN_SIZE} should be used as its size.\n  */\n public final class Shape {\n \n-  /**\n-   * Size reported for shapes for which the total size cannot be computed, either because their\n-   * number of dimensions is unknown or one or more of their dimensions have an unknown size.\n-   */\n+  /** The size of an unknown axis or the total unknown size for an unknown Shape. */\n   public static long UNKNOWN_SIZE = -1L;\n \n-  /** Create a Shape representing an unknown number of dimensions.\n-   * @return a Shape for which {@link Shape#isUnknown()} is true.\n+  /**\n+   * Creates a Shape representing an unknown number of dimensions.\n+   *\n+   * @return A Shape for which {@link Shape#isUnknown()} is true, never null.\n    */\n   public static Shape unknown() {\n     return new Shape(null);\n   }\n \n-  /** Create a Shape representing a scalar value.\n-   * @return a Shape without dimensions for which {@link Shape#isScalar()} is true.\n+  /**\n+   * Creates a Shape representing a scalar value.\n+   *\n+   * @return A Shape without dimensions for which {@link Shape#isScalar()} is true, never null.\n    */\n   public static Shape scalar() {\n     return new Shape(new long[0]);\n   }\n \n   /**\n-   * Create a Shape representing an N-dimensional value.\n+   * Create a Shape representing a scalar or an N-dimensional value.\n    *\n-   * <p>Creates a Shape representing an N-dimensional value (N being at least 1), with the provided\n-   * size for each dimension. A -1 indicates that the size of the corresponding dimension is\n-   * unknown. For example:\n+   * <p>Creates a Shape representing a scalar or an N-dimensional value (N being at least 1),\n+   * with the provided size for each dimension. A -1 indicates that the size of the corresponding\n+   * dimension is unknown. If no sizes are provided, a Shape representing a scalar is created.\n+   * For example:\n    *\n    * <pre>{@code\n    * // A 2-element vector.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMDczOQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432210739", "bodyText": "Here, the guide suggest to enter a newline after /** (same thing, should be applied to all javadoc blocks added)", "author": "karllessard", "createdAt": "2020-05-29T01:35:05Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -19,16 +19,29 @@\n \n import java.util.Arrays;\n \n+/**\n+ * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}. Defines the size along\n+ * its axis. May contain an unknown size for one of the axis or may be totally unknown, in which\n+ * case not even the number of axis is known.\n+ */\n public final class Shape {\n \n+  /**\n+   * Size reported for shapes for which the total size cannot be computed, either because their\n+   * number of dimensions is unknown or one or more of their dimensions have an unknown size.\n+   */\n   public static long UNKNOWN_SIZE = -1L;\n \n-  /** Create a Shape representing an unknown number of dimensions. */\n+  /** Create a Shape representing an unknown number of dimensions.\n+   * @return a Shape for which {@link Shape#isUnknown()} is true.\n+   */", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2MTgyMQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432361821", "bodyText": "Done!", "author": "chenkelmann", "createdAt": "2020-05-29T09:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMDczOQ=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -20,38 +20,42 @@ package org.tensorflow.tools;\n import java.util.Arrays;\n \n /**\n- * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}. Defines the size along\n- * its axis. May contain an unknown size for one of the axis or may be totally unknown, in which\n- * case not even the number of axis is known.\n+ * The shape of a Tensor or {@link org.tensorflow.tools.ndarray.NdArray}.\n+ *\n+ * <p>A {@code Shape} defines sizes along its axes. It may contain an unknown size for one of the\n+ * axes or may be totally unknown, in which case not even the number of axes is known. If the size\n+ * of an axis is unknown, {@link Shape#UNKNOWN_SIZE} should be used as its size.\n  */\n public final class Shape {\n \n-  /**\n-   * Size reported for shapes for which the total size cannot be computed, either because their\n-   * number of dimensions is unknown or one or more of their dimensions have an unknown size.\n-   */\n+  /** The size of an unknown axis or the total unknown size for an unknown Shape. */\n   public static long UNKNOWN_SIZE = -1L;\n \n-  /** Create a Shape representing an unknown number of dimensions.\n-   * @return a Shape for which {@link Shape#isUnknown()} is true.\n+  /**\n+   * Creates a Shape representing an unknown number of dimensions.\n+   *\n+   * @return A Shape for which {@link Shape#isUnknown()} is true, never null.\n    */\n   public static Shape unknown() {\n     return new Shape(null);\n   }\n \n-  /** Create a Shape representing a scalar value.\n-   * @return a Shape without dimensions for which {@link Shape#isScalar()} is true.\n+  /**\n+   * Creates a Shape representing a scalar value.\n+   *\n+   * @return A Shape without dimensions for which {@link Shape#isScalar()} is true, never null.\n    */\n   public static Shape scalar() {\n     return new Shape(new long[0]);\n   }\n \n   /**\n-   * Create a Shape representing an N-dimensional value.\n+   * Create a Shape representing a scalar or an N-dimensional value.\n    *\n-   * <p>Creates a Shape representing an N-dimensional value (N being at least 1), with the provided\n-   * size for each dimension. A -1 indicates that the size of the corresponding dimension is\n-   * unknown. For example:\n+   * <p>Creates a Shape representing a scalar or an N-dimensional value (N being at least 1),\n+   * with the provided size for each dimension. A -1 indicates that the size of the corresponding\n+   * dimension is unknown. If no sizes are provided, a Shape representing a scalar is created.\n+   * For example:\n    *\n    * <pre>{@code\n    * // A 2-element vector.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMjU2NQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432212565", "bodyText": "again according to the guide, you should omit the @return tag. Same for other block below.", "author": "karllessard", "createdAt": "2020-05-29T01:43:16Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -61,21 +74,57 @@ public static Shape of(long... dimensionSizes) {\n     return new Shape(dimensionSizes);\n   }\n \n+  /**\n+   * Returns the total number of elements a Tensor with this shape would have. If this\n+   * {@link Shape#isUnknown()} is true or {@link Shape#hasUnknownDimension()}  is true,\n+   * {@link Shape#UNKNOWN_SIZE} is returned.\n+   *\n+   * @return the total number of elements a Tensor with this shape would have if it can be\n+   * calculated, else {@link Shape#UNKNOWN_SIZE}.\n+   */\n   public long size() {\n     if (size == null) {\n       size = computeSize(dimensionSizes);\n     }\n     return size;\n   }\n \n+  /**\n+   * The size of the dimension with the given index. If {@link Shape#isUnknown()} is true or\n+   * the size of the dimension with the given index has an unknown size, {@link Shape#UNKNOWN_SIZE}\n+   * is returned.\n+   * @param i the index of the dimension to get the size for. If this Shape has a known number of\n+   *          dimensions, it must be < {@link Shape#numDimensions()}. The index may be negative,\n+   *          in which case the position is counted from the end of the shape. E.g.\n+   *          {@code size(-1) returns the size of the last dimension, size(-2) the size of the\n+   *          second to last dimension etc.}\n+   * @return The size of the dimension with the given index if known, {@link Shape#UNKNOWN_SIZE}\n+   *         otherwise.\n+   */\n   public long size(int i) {\n-    return dimensionSizes != null ? dimensionSizes[i] : UNKNOWN_SIZE;\n+    if (dimensionSizes == null) {\n+      return UNKNOWN_SIZE;\n+    } else if (i >= 0) {\n+      return dimensionSizes[i];\n+    } else {\n+      return dimensionSizes[dimensionSizes.length + i];\n+    }\n   }\n \n+  /**\n+   * Returns the number of dimensions of this shape. -1 if unknown, 0 for a scalar, 1 for a vector,\n+   * 2 for a matrix etc.\n+   * @return the number of dimensions of this shape. -1 if unknown, 0 for a scalar, 1 for a vector,", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2MjIxOA==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432362218", "bodyText": "I prefer that anyway, should have removed all of them now.", "author": "chenkelmann", "createdAt": "2020-05-29T09:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMjU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -75,11 +82,12 @@ public final class Shape {\n   }\n \n   /**\n-   * Returns the total number of elements a Tensor with this shape would have. If this\n-   * {@link Shape#isUnknown()} is true or {@link Shape#hasUnknownDimension()}  is true,\n+   * Returns the total number of elements a Tensor with this Shape would have.\n+   *\n+   * <p>If {@link Shape#isUnknown()} is true or {@link Shape#hasUnknownDimension()} is true,\n    * {@link Shape#UNKNOWN_SIZE} is returned.\n    *\n-   * @return the total number of elements a Tensor with this shape would have if it can be\n+   * @return The total number of elements a Tensor with this shape would have if it can be\n    * calculated, else {@link Shape#UNKNOWN_SIZE}.\n    */\n   public long size() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzQyMQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432213421", "bodyText": "maybe add doc to this one as well? :)\nMight be worth mentioning that changing the values in the returned array will affect the actual shape (or even better, change the code to return a copy of the array, it might be less performant but it is safer).", "author": "karllessard", "createdAt": "2020-05-29T01:46:50Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -88,6 +137,38 @@ public boolean hasUnknownDimension() {\n     return false;\n   }\n \n+  /**\n+   * Returns whether this shape represents a scalar.\n+   * @return whether this shape represents a scalar.\n+   */\n+  public boolean isScalar() {\n+    return dimensionSizes != null && dimensionSizes.length == 0;\n+  }\n+\n+  /**\n+   * Returns whether this shape is the shape of a vector.\n+   * @return whether this shape is the shape of a vector.\n+   */\n+  public boolean isVector() {\n+    return dimensionSizes != null && dimensionSizes.length == 1;\n+  }\n+\n+  /**\n+   * Returns whether this shape is the shape of a matrix\n+   * @return whether this shape is the shape of a matrix\n+   */\n+  public boolean isMatrix() {\n+    return dimensionSizes != null && dimensionSizes.length == 2;\n+  }\n+\n+  /**\n+   * Returns whether the number of dimensions of this shape is unknown.\n+   * @return whether the number of dimensions of this shape is unknown.\n+   */\n+  public boolean isUnknown() {\n+    return dimensionSizes == null;\n+  }\n+\n   public long[] asArray() {", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2MzE0MA==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432363140", "bodyText": "When I had a look at this, I thought about changing it to return a defensive copy, as the way it was seem like an oversight. But it was used in many places, so I did not feel I confident I knew enough about the inner workings to make such a change. This is why I didn't comment it: I wasn't sure about the intention. As per your suggestion, I changed the method to return a defensive copy and added the appropriate comment & test.", "author": "chenkelmann", "createdAt": "2020-05-29T09:23:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -137,40 +142,36 @@ public final class Shape {\n     return false;\n   }\n \n-  /**\n-   * Returns whether this shape represents a scalar.\n-   * @return whether this shape represents a scalar.\n-   */\n+  /** Returns whether this Shape represents a scalar. */\n   public boolean isScalar() {\n     return dimensionSizes != null && dimensionSizes.length == 0;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a vector.\n-   * @return whether this shape is the shape of a vector.\n-   */\n+  /** Returns whether this Shape is the shape of a vector. */\n   public boolean isVector() {\n     return dimensionSizes != null && dimensionSizes.length == 1;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a matrix\n-   * @return whether this shape is the shape of a matrix\n-   */\n+  /** Returns whether this Shape is the shape of a matrix */\n   public boolean isMatrix() {\n     return dimensionSizes != null && dimensionSizes.length == 2;\n   }\n \n-  /**\n-   * Returns whether the number of dimensions of this shape is unknown.\n-   * @return whether the number of dimensions of this shape is unknown.\n-   */\n+  /** Returns whether the number of dimensions of this Shape is unknown. */\n   public boolean isUnknown() {\n     return dimensionSizes == null;\n   }\n \n+  /**\n+   * Returns a defensive copy of the this Shape's axes. Changes to the returned array to not\n+   * change this Shape's state. Returns null if {@link Shape#isUnknown()} is true.\n+   */\n   public long[] asArray() {\n-    return dimensionSizes;\n+    if (this.dimensionSizes == null) {\n+      return null;\n+    } else {\n+      return Arrays.copyOf(dimensionSizes, dimensionSizes.length);\n+    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzU3MQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432213571", "bodyText": "typo in eqaul", "author": "karllessard", "createdAt": "2020-05-29T01:47:26Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -97,6 +178,17 @@ public int hashCode() {\n     return dimensionSizes != null ? Arrays.hashCode(dimensionSizes) : super.hashCode();\n   }\n \n+  /**\n+   * Equals implementation for shapes. Two shapes are considered equal iff:\n+   * <p><ul>\n+   * <li>the number of dimensions is defined and equal for both\n+   * <li>the size of each dimension is defined and eqaul for both", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2NDE0MQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432364141", "bodyText": "Fixed", "author": "chenkelmann", "createdAt": "2020-05-29T09:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -137,40 +142,36 @@ public final class Shape {\n     return false;\n   }\n \n-  /**\n-   * Returns whether this shape represents a scalar.\n-   * @return whether this shape represents a scalar.\n-   */\n+  /** Returns whether this Shape represents a scalar. */\n   public boolean isScalar() {\n     return dimensionSizes != null && dimensionSizes.length == 0;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a vector.\n-   * @return whether this shape is the shape of a vector.\n-   */\n+  /** Returns whether this Shape is the shape of a vector. */\n   public boolean isVector() {\n     return dimensionSizes != null && dimensionSizes.length == 1;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a matrix\n-   * @return whether this shape is the shape of a matrix\n-   */\n+  /** Returns whether this Shape is the shape of a matrix */\n   public boolean isMatrix() {\n     return dimensionSizes != null && dimensionSizes.length == 2;\n   }\n \n-  /**\n-   * Returns whether the number of dimensions of this shape is unknown.\n-   * @return whether the number of dimensions of this shape is unknown.\n-   */\n+  /** Returns whether the number of dimensions of this Shape is unknown. */\n   public boolean isUnknown() {\n     return dimensionSizes == null;\n   }\n \n+  /**\n+   * Returns a defensive copy of the this Shape's axes. Changes to the returned array to not\n+   * change this Shape's state. Returns null if {@link Shape#isUnknown()} is true.\n+   */\n   public long[] asArray() {\n-    return dimensionSizes;\n+    if (this.dimensionSizes == null) {\n+      return null;\n+    } else {\n+      return Arrays.copyOf(dimensionSizes, dimensionSizes.length);\n+    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzgzNQ==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432213835", "bodyText": "event it is... you meant even if it is?", "author": "karllessard", "createdAt": "2020-05-29T01:48:28Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -97,6 +178,17 @@ public int hashCode() {\n     return dimensionSizes != null ? Arrays.hashCode(dimensionSizes) : super.hashCode();\n   }\n \n+  /**\n+   * Equals implementation for shapes. Two shapes are considered equal iff:\n+   * <p><ul>\n+   * <li>the number of dimensions is defined and equal for both\n+   * <li>the size of each dimension is defined and eqaul for both\n+   * </ul><p>\n+   * If either shape has an unknown dimension (even if it is the same in both) or if either\n+   * shape has an unknown number of dimensions (even if both return {@code true} for\n+   * {@link Shape#isUnknown()}), they are not considered equal. However, a shape will always\n+   * equal itself, event it is unknown or contains unknown dimensions.", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2NDQ3Mg==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432364472", "bodyText": "Yup, that's what I meant. Fixed it.", "author": "chenkelmann", "createdAt": "2020-05-29T09:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxMzgzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -137,40 +142,36 @@ public final class Shape {\n     return false;\n   }\n \n-  /**\n-   * Returns whether this shape represents a scalar.\n-   * @return whether this shape represents a scalar.\n-   */\n+  /** Returns whether this Shape represents a scalar. */\n   public boolean isScalar() {\n     return dimensionSizes != null && dimensionSizes.length == 0;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a vector.\n-   * @return whether this shape is the shape of a vector.\n-   */\n+  /** Returns whether this Shape is the shape of a vector. */\n   public boolean isVector() {\n     return dimensionSizes != null && dimensionSizes.length == 1;\n   }\n \n-  /**\n-   * Returns whether this shape is the shape of a matrix\n-   * @return whether this shape is the shape of a matrix\n-   */\n+  /** Returns whether this Shape is the shape of a matrix */\n   public boolean isMatrix() {\n     return dimensionSizes != null && dimensionSizes.length == 2;\n   }\n \n-  /**\n-   * Returns whether the number of dimensions of this shape is unknown.\n-   * @return whether the number of dimensions of this shape is unknown.\n-   */\n+  /** Returns whether the number of dimensions of this Shape is unknown. */\n   public boolean isUnknown() {\n     return dimensionSizes == null;\n   }\n \n+  /**\n+   * Returns a defensive copy of the this Shape's axes. Changes to the returned array to not\n+   * change this Shape's state. Returns null if {@link Shape#isUnknown()} is true.\n+   */\n   public long[] asArray() {\n-    return dimensionSizes;\n+    if (this.dimensionSizes == null) {\n+      return null;\n+    } else {\n+      return Arrays.copyOf(dimensionSizes, dimensionSizes.length);\n+    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNDYxNA==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432214614", "bodyText": "shape's? same thing for append(Shape)", "author": "karllessard", "createdAt": "2020-05-29T01:51:50Z", "path": "tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java", "diffHunk": "@@ -148,6 +278,51 @@ public Shape prepend(long firstDimension) {\n     return Shape.of(newDimensions);\n   }\n \n+  /** Returns a new shape, with a new last dimension added. In order for this call to succeed,\n+   * {@link Shape#isUnknown()} must be {@code false}.\n+   * @param lastDimension the dimension to append\n+   * @return a new shape with this shape's dimensions followed by the given dimension\n+   */\n+  public Shape append(long lastDimension) {\n+    long[] newDimensions = new long[dimensionSizes.length + 1];\n+    newDimensions[newDimensions.length - 1] = lastDimension;\n+    System.arraycopy(dimensionSizes, 0, newDimensions, 0, dimensionSizes.length);\n+\n+    return Shape.of(newDimensions);\n+  }\n+\n+  /** Returns a new shape, with another shapes' dimensions prepended.", "originalCommit": "48db7b8f36426d023b21b65cb8268256dc60d34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2NDc1Mw==", "url": "https://github.com/tensorflow/java/pull/64#discussion_r432364753", "bodyText": "I Really should have proof-read before committing...", "author": "chenkelmann", "createdAt": "2020-05-29T09:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNDYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "afef36e04a4d961d4743a33b3146afabae539bd7", "chunk": "diff --git a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\nindex 90189a24..35b4ee7a 100644\n--- a/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n+++ b/tensorflow-tools/src/main/java/org/tensorflow/tools/Shape.java\n\n@@ -278,10 +287,12 @@ public final class Shape {\n     return Shape.of(newDimensions);\n   }\n \n-  /** Returns a new shape, with a new last dimension added. In order for this call to succeed,\n+  /**\n+   * Returns a new Shape, with a new last dimension added. In order for this call to succeed,\n    * {@link Shape#isUnknown()} must be {@code false}.\n+   *\n    * @param lastDimension the dimension to append\n-   * @return a new shape with this shape's dimensions followed by the given dimension\n+   * @return a new Shape with this Shape's dimensions followed by the given dimension, never null\n    */\n   public Shape append(long lastDimension) {\n     long[] newDimensions = new long[dimensionSizes.length + 1];\n"}}, {"oid": "afef36e04a4d961d4743a33b3146afabae539bd7", "url": "https://github.com/tensorflow/java/commit/afef36e04a4d961d4743a33b3146afabae539bd7", "message": "Fixed javadoc formatting to conform to the Google styleguide, fixed other inconsistencies in the javadoc, changed `toArray` method:\n- Fixed plural of axis (axes not axis)\n- Changed writing of 'Shape' to be consistently upper case\n- Fixed block formatting\n- Removed redundant @return-blocks\n- Changed semantics of toArray: now a defensive copy is returned", "committedDate": "2020-05-29T09:19:41Z", "type": "commit"}, {"oid": "8282569c98cd933985bea807ad43501fed5b6911", "url": "https://github.com/tensorflow/java/commit/8282569c98cd933985bea807ad43501fed5b6911", "message": "Fixed typo in \"equal\".", "committedDate": "2020-05-29T09:23:59Z", "type": "commit"}]}