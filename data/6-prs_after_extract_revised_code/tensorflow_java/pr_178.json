{"pr_number": 178, "pr_title": "Initialization imprvements", "pr_createdAt": "2020-12-29T05:17:31Z", "pr_url": "https://github.com/tensorflow/java/pull/178", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODc4Ng==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r549758786", "bodyText": "Why leave the exception in there if it's not triggered?", "author": "Craigacp", "createdAt": "2020-12-29T16:04:04Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java", "diffHunk": "@@ -89,16 +89,18 @@ public static Init create(Scope scope) {\n    *\n    * <p>Registered initializers are then grouped as a single unit of computation by adding\n    * and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   * session.\n+   * session.  No-ops if the session is eager.\n    *\n    * @param scope\n    * @param initializer\n-   * @throws IllegalArgumentException if the execution environment in scope is not a graph\n    * @see org.tensorflow.op.core.Init#create(Scope) init\n    */\n   @Endpoint(name = \"initAdd\")\n   public static void add(Scope scope, Op initializer) {\n     ExecutionEnvironment exEnv = scope.env();\n+    if(exEnv.isEager()){\n+      return;", "originalCommit": "2d1f54b316291217f7de3da6fb0da3214cb48c19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3OTMxNg==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r549879316", "bodyText": "Because in theory you could have a non-eager execution environment that isn't Graph.  Is there any possibility of that being a thing?", "author": "rnett", "createdAt": "2020-12-29T22:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0MzQwNg==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550243406", "bodyText": "Not to my knowledge. There are a lot of other things that assume either eager or graph execution and that would blow up if there was a third type. At the very least the exception error message should be fixed to note that this op succeeds on graph and eager sessions.", "author": "Craigacp", "createdAt": "2020-12-30T16:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\nindex f449b67f..fd8c6e2d 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n\n@@ -102,7 +102,7 @@ public final class Init extends RawOp {\n       return;\n     }\n     if (!(exEnv instanceof Graph)) {\n-      throw new IllegalArgumentException(\"initAdd is only supported on Graph sessions.\");\n+      throw new IllegalArgumentException(\"initAdd is only supported on Graph or eager sessions.\");\n     }\n     Graph graph = (Graph) exEnv;\n     graph.addInitializer(initializer);\n"}}, {"oid": "e449b7a9016ada4320b59e999c5cc80e44fefe54", "url": "https://github.com/tensorflow/java/commit/e449b7a9016ada4320b59e999c5cc80e44fefe54", "message": "No-op on initAdd in eager mode\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2020-12-30T23:01:07Z", "type": "commit"}, {"oid": "cbfe6ebb1a25b2a1436a3680cd9d624712a0f9f0", "url": "https://github.com/tensorflow/java/commit/cbfe6ebb1a25b2a1436a3680cd9d624712a0f9f0", "message": "runInit() method in session\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2020-12-30T23:01:07Z", "type": "commit"}, {"oid": "72067411a8b570b3e3ec7049a1527d2e076f28b5", "url": "https://github.com/tensorflow/java/commit/72067411a8b570b3e3ec7049a1527d2e076f28b5", "message": "add doInitialization() to Runner\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2020-12-30T23:01:07Z", "type": "commit"}, {"oid": "304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "url": "https://github.com/tensorflow/java/commit/304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "message": "fix javadoc\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2020-12-30T23:01:53Z", "type": "commit"}, {"oid": "304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "url": "https://github.com/tensorflow/java/commit/304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "message": "fix javadoc\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2020-12-30T23:01:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3OTMwOQ==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550779309", "bodyText": "I think pretty much all over the code, while we \"might\" have to support later a third execution environment type, we kind of assume that there is only to. So I would only simplify this method with:\nif (exEnv.isGraph()) {\n   Graph graph = (Graph) exEnv;\n   graph.addInitializer(initializer);\n}", "author": "karllessard", "createdAt": "2021-01-01T15:38:06Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java", "diffHunk": "@@ -89,18 +89,20 @@ public static Init create(Scope scope) {\n    *\n    * <p>Registered initializers are then grouped as a single unit of computation by adding\n    * and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   * session.\n+   * session.  No-ops if the session is eager.\n    *\n    * @param scope\n    * @param initializer\n-   * @throws IllegalArgumentException if the execution environment in scope is not a graph\n    * @see org.tensorflow.op.core.Init#create(Scope) init\n    */\n   @Endpoint(name = \"initAdd\")\n   public static void add(Scope scope, Op initializer) {\n     ExecutionEnvironment exEnv = scope.env();\n+    if(exEnv.isEager()){\n+      return;\n+    }\n     if (!(exEnv instanceof Graph)) {\n-      throw new IllegalArgumentException(\"initAdd is only supported on Graph sessions.\");\n+      throw new IllegalArgumentException(\"initAdd is only supported on Graph or eager sessions.\");", "originalCommit": "304dc00c8b3d2eebdb266aab7ae67fd029582a5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8dfc44942a8cb0908b835a685af281a1db97c4c0", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\nindex fd8c6e2d..df87d548 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n\n@@ -98,14 +98,10 @@ public final class Init extends RawOp {\n   @Endpoint(name = \"initAdd\")\n   public static void add(Scope scope, Op initializer) {\n     ExecutionEnvironment exEnv = scope.env();\n-    if(exEnv.isEager()){\n-      return;\n-    }\n-    if (!(exEnv instanceof Graph)) {\n-      throw new IllegalArgumentException(\"initAdd is only supported on Graph or eager sessions.\");\n+\n+    if(exEnv.isGraph()) {\n+      ((Graph) exEnv).addInitializer(initializer);\n     }\n-    Graph graph = (Graph) exEnv;\n-    graph.addInitializer(initializer);\n   }\n \n   private Init(Operation operation) {\n"}}, {"oid": "8dfc44942a8cb0908b835a685af281a1db97c4c0", "url": "https://github.com/tensorflow/java/commit/8dfc44942a8cb0908b835a685af281a1db97c4c0", "message": "assume only graph or eager environments\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2021-01-01T23:37:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NzA2Nw==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550947067", "bodyText": "This should be called addInitialization, and I'm not sure it's a great idea to do this in a runner with other things, so it might want to be a package-private method only visible through the runInit method, then fix the docs for runInit so it doesn't reference a private method.", "author": "Craigacp", "createdAt": "2021-01-03T02:43:49Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java", "diffHunk": "@@ -293,6 +293,16 @@ public Runner addTarget(Op op) {\n       return addTarget(op.op());\n     }\n \n+    /**\n+     * Make {@link #run} execute the graph's initializers.\n+     *\n+     * @return this session runner\n+     */\n+    public Runner doInitialization(){", "originalCommit": "8dfc44942a8cb0908b835a685af281a1db97c4c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk1NTMyNg==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550955326", "bodyText": "I'll just remove it if we don't want it public, I wasn't using it in runInit", "author": "rnett", "createdAt": "2021-01-03T04:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NzA2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\nindex 25f93304..1b82d3ad 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\n\n@@ -293,16 +293,6 @@ public final class Session implements AutoCloseable {\n       return addTarget(op.op());\n     }\n \n-    /**\n-     * Make {@link #run} execute the graph's initializers.\n-     *\n-     * @return this session runner\n-     */\n-    public Runner doInitialization(){\n-      graph.initializers().forEach(this::addTarget);\n-      return this;\n-    }\n-\n     /**\n      * Set options (typically for debugging) for this run.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NzIyNw==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550947227", "bodyText": "\"This is a no-op if executed in an eager session\"", "author": "Craigacp", "createdAt": "2021-01-03T02:45:56Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java", "diffHunk": "@@ -89,21 +89,19 @@ public static Init create(Scope scope) {\n    *\n    * <p>Registered initializers are then grouped as a single unit of computation by adding\n    * and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   * session.\n+   * session.  No-ops if the session is eager.", "originalCommit": "8dfc44942a8cb0908b835a685af281a1db97c4c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\nindex df87d548..9e393600 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n\n@@ -89,7 +89,7 @@ public final class Init extends RawOp {\n    *\n    * <p>Registered initializers are then grouped as a single unit of computation by adding\n    * and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   * session.  No-ops if the session is eager.\n+   * session.  This is a no-op if executed in an eager session.\n    *\n    * @param scope\n    * @param initializer\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NzI5OA==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r550947298", "bodyText": "\"This is a no-op if executed in an eager session\"", "author": "Craigacp", "createdAt": "2021-01-03T02:46:36Z", "path": "tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java", "diffHunk": "@@ -2755,11 +2755,10 @@ public Init init() {\n    *\n    *  <p>Registered initializers are then grouped as a single unit of computation by adding\n    *  and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   *  session.\n+   *  session.  No-ops if the session is eager.", "originalCommit": "8dfc44942a8cb0908b835a685af281a1db97c4c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java b/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\nindex 4b01c1bb..cf7c5b47 100644\n--- a/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\n+++ b/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\n\n@@ -2755,7 +2755,7 @@ public final class Ops {\n    *\n    *  <p>Registered initializers are then grouped as a single unit of computation by adding\n    *  and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   *  session.  No-ops if the session is eager.\n+   *  session.  This is a no-op if executed in an eager session.\n    *\n    * @param scope\n    * @param initializer\n"}}, {"oid": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "url": "https://github.com/tensorflow/java/commit/b83b1bbbbdad54b11e56099880ebae27ae67b458", "message": "Remove doInit(), update javadocs\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2021-01-03T04:40:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA3OTcwNw==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r553079707", "bodyText": "In fact, it is more a replacement for session.run(Ops.create(session.graph).init())", "author": "karllessard", "createdAt": "2021-01-07T02:49:03Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java", "diffHunk": "@@ -490,6 +490,19 @@ public void run(Op op) {\n     runner().addTarget(op.op()).run();\n   }\n \n+\n+  /**\n+   * Execute the graph's initializers.\n+   *\n+   * <p>This method is equivalent to {@code session.runner().addTarget(Ops.create(session.graph()).init()).run()}.", "originalCommit": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3fa53b27724a4a7c65082fd9723e1c389de6579", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\nindex 1b82d3ad..e156491d 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/Session.java\n\n@@ -494,7 +494,7 @@ public final class Session implements AutoCloseable {\n   /**\n    * Execute the graph's initializers.\n    *\n-   * <p>This method is equivalent to {@code session.runner().addTarget(Ops.create(session.graph()).init()).run()}.\n+   * <p>This method is equivalent to {@code session.run(Ops.create(session.graph).init())}.\n    *\n    */\n   public void runInit(){\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA3OTg1NA==", "url": "https://github.com/tensorflow/java/pull/178#discussion_r553079854", "bodyText": "Nit: there is a missing space after if", "author": "karllessard", "createdAt": "2021-01-07T02:49:45Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java", "diffHunk": "@@ -89,21 +89,19 @@ public static Init create(Scope scope) {\n    *\n    * <p>Registered initializers are then grouped as a single unit of computation by adding\n    * and executing an {@link org.tensorflow.op.core.Init#create(Scope) init} operation from a graph\n-   * session.\n+   * session.  This is a no-op if executed in an eager session.\n    *\n    * @param scope\n    * @param initializer\n-   * @throws IllegalArgumentException if the execution environment in scope is not a graph\n    * @see org.tensorflow.op.core.Init#create(Scope) init\n    */\n   @Endpoint(name = \"initAdd\")\n   public static void add(Scope scope, Op initializer) {\n     ExecutionEnvironment exEnv = scope.env();\n-    if (!(exEnv instanceof Graph)) {\n-      throw new IllegalArgumentException(\"initAdd is only supported on Graph sessions.\");\n+\n+    if(exEnv.isGraph()) {", "originalCommit": "b83b1bbbbdad54b11e56099880ebae27ae67b458", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3fa53b27724a4a7c65082fd9723e1c389de6579", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\nindex 9e393600..b05eb07c 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/core/Init.java\n\n@@ -99,7 +99,7 @@ public final class Init extends RawOp {\n   public static void add(Scope scope, Op initializer) {\n     ExecutionEnvironment exEnv = scope.env();\n \n-    if(exEnv.isGraph()) {\n+    if (exEnv.isGraph()) {\n       ((Graph) exEnv).addInitializer(initializer);\n     }\n   }\n"}}, {"oid": "a3fa53b27724a4a7c65082fd9723e1c389de6579", "url": "https://github.com/tensorflow/java/commit/a3fa53b27724a4a7c65082fd9723e1c389de6579", "message": "small fixes\n\nSigned-off-by: Ryan Nett <rnett@calpoly.edu>", "committedDate": "2021-01-07T03:31:23Z", "type": "commit"}]}