{"pr_number": 159, "pr_title": "Add option to run TensorFlow job on the preferred device (via Scope)", "pr_createdAt": "2020-11-27T13:30:18Z", "pr_url": "https://github.com/tensorflow/java/pull/159", "timeline": [{"oid": "0eb5ce7286c5ad8cd05e91a22d1aa56700100ea4", "url": "https://github.com/tensorflow/java/commit/0eb5ce7286c5ad8cd05e91a22d1aa56700100ea4", "message": "Draft for DeviceSpec integration", "committedDate": "2020-11-27T13:27:46Z", "type": "commit"}, {"oid": "63160579872ddcc8e02950d340a11d1ae2020e48", "url": "https://github.com/tensorflow/java/commit/63160579872ddcc8e02950d340a11d1ae2020e48", "message": "Added generation for Ops", "committedDate": "2020-11-27T17:20:03Z", "type": "commit"}, {"oid": "7523713b5f9823b52c70175c96b479ad51d56968", "url": "https://github.com/tensorflow/java/commit/7523713b5f9823b52c70175c96b479ad51d56968", "message": "Removed something from generated Ops", "committedDate": "2020-11-27T17:29:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMTMxNQ==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532111315", "bodyText": "Let's avoid wildcard imports, as per Google Java style guide suggestion.", "author": "karllessard", "createdAt": "2020-11-28T22:01:18Z", "path": "tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java", "diffHunk": "@@ -19,11 +19,8 @@\n \n import java.nio.charset.Charset;\n import java.util.List;\n-import org.tensorflow.DataType;\n-import org.tensorflow.EagerSession;\n-import org.tensorflow.ExecutionEnvironment;\n-import org.tensorflow.Operand;\n-import org.tensorflow.Tensor;\n+\n+import org.tensorflow.*;", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java b/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\nindex 0bce7a9e..ec2edbf2 100644\n--- a/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\n+++ b/tensorflow-core/tensorflow-core-api/src/gen/annotations/org/tensorflow/op/Ops.java\n\n@@ -19,8 +19,12 @@ package org.tensorflow.op;\n \n import java.nio.charset.Charset;\n import java.util.List;\n-\n-import org.tensorflow.*;\n+import org.tensorflow.DataType;\n+import org.tensorflow.DeviceSpec;\n+import org.tensorflow.EagerSession;\n+import org.tensorflow.ExecutionEnvironment;\n+import org.tensorflow.Operand;\n+import org.tensorflow.Tensor;\n import org.tensorflow.ndarray.BooleanNdArray;\n import org.tensorflow.ndarray.ByteNdArray;\n import org.tensorflow.ndarray.DoubleNdArray;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMTQ5MA==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532111490", "bodyText": "All generated ops should have been update by your change in the op generator above, they should be all updated by this PR as well, not only this one (there must be 1000+ files to be added).", "author": "karllessard", "createdAt": "2020-11-28T22:03:41Z", "path": "tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/math/Abs.java", "diffHunk": "@@ -50,6 +50,7 @@\n   @Endpoint(describeByClass = true)\n   public static <T extends TNumber> Abs<T> create(Scope scope, Operand<T> x) {\n     OperationBuilder opBuilder = scope.env().opBuilder(\"Abs\", scope.makeOpName(\"Abs\"));\n+    opBuilder.setDevice(scope.makeDeviceString());", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/math/Abs.java b/tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/math/Abs.java\nindex 5b61c72c..cac480b3 100644\n--- a/tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/math/Abs.java\n+++ b/tensorflow-core/tensorflow-core-api/src/gen/java/org/tensorflow/op/math/Abs.java\n\n@@ -50,8 +50,8 @@ public final class Abs<T extends TNumber> extends RawOp implements Operand<T> {\n   @Endpoint(describeByClass = true)\n   public static <T extends TNumber> Abs<T> create(Scope scope, Operand<T> x) {\n     OperationBuilder opBuilder = scope.env().opBuilder(\"Abs\", scope.makeOpName(\"Abs\"));\n-    opBuilder.setDevice(scope.makeDeviceString());\n     opBuilder.addInput(x.asOutput());\n+    opBuilder.setDevice(scope.makeDeviceString());\n     opBuilder = scope.applyControlDependencies(opBuilder);\n     return new Abs<T>(opBuilder.build());\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMTgxOA==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532111818", "bodyText": "TODO: add docs :)", "author": "karllessard", "createdAt": "2020-11-28T22:06:52Z", "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/Scope.java", "diffHunk": "@@ -121,7 +123,12 @@ public Scope withSubScope(String childScopeName) {\n    * @throws IllegalArgumentException if the name is invalid\n    */\n   public Scope withName(String opName) {\n-    return new Scope(env, nameScope.withName(opName), controlDependencies);\n+    return new Scope(env, nameScope.withName(opName), controlDependencies, deviceSpec);\n+  }\n+\n+  // TODO: add docs", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/Scope.java b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/Scope.java\nindex a1e01499..05674dd3 100644\n--- a/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/Scope.java\n+++ b/tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/op/Scope.java\n\n@@ -126,7 +126,14 @@ public final class Scope {\n     return new Scope(env, nameScope.withName(opName), controlDependencies, deviceSpec);\n   }\n \n-  // TODO: add docs\n+  /**\n+   * Return a new scope that uses the provided device specification for an op.\n+   *\n+   * <p>Operations created within this scope will place the created operations on the device(s) matching the provided spec.\n+   *\n+   * @param deviceSpec device specification for an operator in the returned scope\n+   * @return a new Scope that uses opName for operations.\n+   */\n   public Scope withDevice(DeviceSpec deviceSpec) {\n     return new Scope(env, nameScope, controlDependencies, deviceSpec);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMTg4NQ==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532111885", "bodyText": "No wildcard imports", "author": "karllessard", "createdAt": "2020-11-28T22:07:33Z", "path": "tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java", "diffHunk": "@@ -23,11 +23,11 @@\n import java.nio.FloatBuffer;\n import java.nio.IntBuffer;\n import java.nio.LongBuffer;\n+import java.util.Collection;\n+\n import org.junit.jupiter.api.Test;\n-import org.tensorflow.AutoCloseableList;\n-import org.tensorflow.Graph;\n-import org.tensorflow.Session;\n-import org.tensorflow.Tensor;\n+import org.tensorflow.*;", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java b/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\nindex 3883c5be..7cdc01f2 100644\n--- a/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\n+++ b/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\n\n@@ -18,16 +18,12 @@ package org.tensorflow.op.core;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n import java.io.IOException;\n-import java.nio.ByteBuffer;\n-import java.nio.DoubleBuffer;\n-import java.nio.FloatBuffer;\n-import java.nio.IntBuffer;\n-import java.nio.LongBuffer;\n-import java.util.Collection;\n \n import org.junit.jupiter.api.Test;\n-import org.tensorflow.*;\n-import org.tensorflow.op.Ops;\n+import org.tensorflow.AutoCloseableList;\n+import org.tensorflow.Graph;\n+import org.tensorflow.Session;\n+import org.tensorflow.Tensor;\n import org.tensorflow.op.Scope;\n import org.tensorflow.ndarray.Shape;\n import org.tensorflow.ndarray.buffer.DataBuffer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMTkyNg==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532111926", "bodyText": "This comment is probably a leftover", "author": "karllessard", "createdAt": "2020-11-28T22:08:32Z", "path": "tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java", "diffHunk": "@@ -70,6 +71,46 @@ public void createInts() {\n     }\n   }\n \n+  @Test\n+  public void absDeviceSpec() {\n+    ConfigProto config = ConfigProto.newBuilder(ConfigProto.getDefaultInstance())\n+            .setLogDevicePlacement(true)\n+            .build();\n+\n+    try (Graph g = new Graph();\n+         Session sess = new Session(g, config)) {\n+\n+      Ops tf = Ops.create(g).withSubScope(\"anotherJob\");\n+\n+      Tensor<TInt32> a = TInt32.scalarOf(-1);\n+\n+      Output<TInt32> aOps = g\n+              .opBuilder(\"Const\", \"aOps\")\n+              .setAttr(\"dtype\", a.dataType())\n+              .setAttr(\"value\", a)\n+              .setDevice(\"/job:localhost/replica:0/task:0/device:CPU:0\")\n+              .build()\n+              .output(0);\n+      DeviceSpec deviceSpec = DeviceSpec.newBuilder()\n+              .job(\"localhost\")\n+              .replica(0)\n+              .task(1)\n+              .deviceType(DeviceSpec.DeviceType.CPU)\n+              .build();\n+\n+      //DeviceSpec deviceSpec = DeviceSpec.newBuilder().build();", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java b/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\nindex 3883c5be..7cdc01f2 100644\n--- a/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\n+++ b/tensorflow-core/tensorflow-core-api/src/test/java/org/tensorflow/op/core/ConstantTest.java\n\n@@ -71,46 +66,6 @@ public class ConstantTest {\n     }\n   }\n \n-  @Test\n-  public void absDeviceSpec() {\n-    ConfigProto config = ConfigProto.newBuilder(ConfigProto.getDefaultInstance())\n-            .setLogDevicePlacement(true)\n-            .build();\n-\n-    try (Graph g = new Graph();\n-         Session sess = new Session(g, config)) {\n-\n-      Ops tf = Ops.create(g).withSubScope(\"anotherJob\");\n-\n-      Tensor<TInt32> a = TInt32.scalarOf(-1);\n-\n-      Output<TInt32> aOps = g\n-              .opBuilder(\"Const\", \"aOps\")\n-              .setAttr(\"dtype\", a.dataType())\n-              .setAttr(\"value\", a)\n-              .setDevice(\"/job:localhost/replica:0/task:0/device:CPU:0\")\n-              .build()\n-              .output(0);\n-      DeviceSpec deviceSpec = DeviceSpec.newBuilder()\n-              .job(\"localhost\")\n-              .replica(0)\n-              .task(1)\n-              .deviceType(DeviceSpec.DeviceType.CPU)\n-              .build();\n-\n-      //DeviceSpec deviceSpec = DeviceSpec.newBuilder().build();\n-      Output<TInt32> absOps = tf.withName(\"ABS_OPS\")\n-              .withDevice(deviceSpec)\n-              .math.sub(aOps, aOps).asOutput();\n-\n-\n-      try (AutoCloseableList<Tensor<?>> t =\n-                   new AutoCloseableList<>(sess.runner().fetch(absOps).run())) {\n-        assertEquals(1, t.get(0).rawData().asInts().getObject(0));\n-      }\n-    }\n-  }\n-\n   @Test\n   public void createFloats() {\n     FloatDataBuffer buffer = DataBuffers.of(1.0f, 2.0f, 3.0f, 4.0f);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMjM0NQ==", "url": "https://github.com/tensorflow/java/pull/159#discussion_r532112345", "bodyText": "The Ops class should now have this new method in it but it does not appear in the version you've committed.\nAlso, I would rephrase its documentation for something like this:\n\"Returns an API that places the created operations on the device(s) matching the provided spec. @see...\"", "author": "karllessard", "createdAt": "2020-11-28T22:12:34Z", "path": "tensorflow-core/tensorflow-core-generator/src/main/java/org/tensorflow/processor/operator/OperatorProcessor.java", "diffHunk": "@@ -537,6 +538,18 @@ private static TypeSpec buildTopClass(OpsSpec spec) {\n                 T_SCOPE)\n             .build());\n \n+    opsBuilder.addMethod(\n+            MethodSpec.methodBuilder(\"withDevice\")\n+                    .addModifiers(Modifier.PUBLIC)\n+                    .addParameter(T_DEVICE_SPEC, \"deviceSpec\")\n+                    .returns(T_OPS)\n+                    .addStatement(\"return new Ops(scope.withDevice(deviceSpec))\")\n+                    .addJavadoc(\n+                            \"Returns an API that uses the provided DeviceSpec for an op.\\n\\n\"\n+                                    + \"@see {@link $T#withDevice(DeviceSpec)}\\n\",\n+                            T_SCOPE)\n+                    .build());\n+", "originalCommit": "7523713b5f9823b52c70175c96b479ad51d56968", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "chunk": "diff --git a/tensorflow-core/tensorflow-core-generator/src/main/java/org/tensorflow/processor/operator/OperatorProcessor.java b/tensorflow-core/tensorflow-core-generator/src/main/java/org/tensorflow/processor/operator/OperatorProcessor.java\nindex 95d823fc..fa60f4e5 100644\n--- a/tensorflow-core/tensorflow-core-generator/src/main/java/org/tensorflow/processor/operator/OperatorProcessor.java\n+++ b/tensorflow-core/tensorflow-core-generator/src/main/java/org/tensorflow/processor/operator/OperatorProcessor.java\n\n@@ -545,7 +545,7 @@ public final class OperatorProcessor extends AbstractProcessor {\n                     .returns(T_OPS)\n                     .addStatement(\"return new Ops(scope.withDevice(deviceSpec))\")\n                     .addJavadoc(\n-                            \"Returns an API that uses the provided DeviceSpec for an op.\\n\\n\"\n+                            \"Returns an API that places the created operations on the device(s) matching the provided spec.\\n\\n\"\n                                     + \"@see {@link $T#withDevice(DeviceSpec)}\\n\",\n                             T_SCOPE)\n                     .build());\n"}}, {"oid": "2da526dad99c07fbcd41b5657a889a7a3fd16d76", "url": "https://github.com/tensorflow/java/commit/2da526dad99c07fbcd41b5657a889a7a3fd16d76", "message": "Finalized the PR", "committedDate": "2020-11-30T11:38:50Z", "type": "commit"}, {"oid": "2bbb93b1ac5463c969cda615caff6c9fcb897faa", "url": "https://github.com/tensorflow/java/commit/2bbb93b1ac5463c969cda615caff6c9fcb897faa", "message": "Refactored Scope.apply method", "committedDate": "2020-12-03T14:44:41Z", "type": "commit"}, {"oid": "27fde851d9701a9805108e51a43ea1b09cdf3ba5", "url": "https://github.com/tensorflow/java/commit/27fde851d9701a9805108e51a43ea1b09cdf3ba5", "message": "Handle case of separate usage of control dependencies in Init method", "committedDate": "2020-12-03T14:54:12Z", "type": "commit"}]}