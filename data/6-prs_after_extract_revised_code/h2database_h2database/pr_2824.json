{"pr_number": 2824, "pr_title": "fix issue #2822", "pr_createdAt": "2020-08-18T03:39:59Z", "pr_url": "https://github.com/h2database/h2database/pull/2824", "timeline": [{"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e", "url": "https://github.com/h2database/h2database/commit/a532968ded8e3e2c84c66e66db625d750bf7761e", "message": "fix issue #2822", "committedDate": "2020-08-18T02:08:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTUwOQ==", "url": "https://github.com/h2database/h2database/pull/2824#discussion_r471945509", "bodyText": "I'd remove this piece - if you can't be bothered to obey the documented DbEventListener API, I don't see why we should leave the DB in some weird state.\nRather dump an exception and continue", "author": "grandinj", "createdAt": "2020-08-18T06:35:19Z", "path": "h2/src/main/org/h2/engine/Database.java", "diffHunk": "@@ -1339,38 +1339,38 @@ void close(boolean fromShutdownHook) {\n     }\n \n     private void closeImpl(boolean fromShutdownHook) {\n-        try {\n-            synchronized (this) {\n-                if (closing) {\n+        synchronized (this) {\n+            if (closing) {\n+                return;\n+            }\n+            closing = true;\n+            stopServer();\n+            if (!userSessions.isEmpty()) {\n+                if (!fromShutdownHook) {\n                     return;\n                 }\n-                closing = true;\n-                stopServer();\n+                trace.info(\"closing {0} from shutdown hook\", databaseName);\n+                closeAllSessionsExcept(null);\n+            }\n+            trace.info(\"closing {0}\", databaseName);\n+            if (eventListener != null) {\n+                // allow the event listener to connect to the database\n+                closing = false;\n+                DatabaseEventListener e = eventListener;\n+                // set it to null, to make sure it's called only once\n+                eventListener = null;\n+                e.closingDatabase();\n                 if (!userSessions.isEmpty()) {\n-                    if (!fromShutdownHook) {\n-                        return;\n-                    }\n-                    trace.info(\"closing {0} from shutdown hook\", databaseName);\n-                    closeAllSessionsExcept(null);\n-                }\n-                trace.info(\"closing {0}\", databaseName);\n-                if (eventListener != null) {\n-                    // allow the event listener to connect to the database\n-                    closing = false;\n-                    DatabaseEventListener e = eventListener;\n-                    // set it to null, to make sure it's called only once\n-                    eventListener = null;\n-                    e.closingDatabase();\n-                    if (!userSessions.isEmpty()) {\n-                        // if a connection was opened, we can't close the database\n-                        return;\n-                    }\n-                    closing = true;\n-                }\n-                if (!this.isReadOnly()) {\n-                    removeOrphanedLobs();\n+                    // if a connection was opened, we can't close the database\n+                    return;", "originalCommit": "a532968ded8e3e2c84c66e66db625d750bf7761e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwMjEzNA==", "url": "https://github.com/h2database/h2database/pull/2824#discussion_r472302134", "bodyText": "done", "author": "andreitokar", "createdAt": "2020-08-18T15:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "80bf5d3d2208ed9fda89cb4741fbec4f7948529b", "chunk": "diff --git a/h2/src/main/org/h2/engine/Database.java b/h2/src/main/org/h2/engine/Database.java\nindex 1b9c638a9..84986aacb 100644\n--- a/h2/src/main/org/h2/engine/Database.java\n+++ b/h2/src/main/org/h2/engine/Database.java\n\n@@ -1340,15 +1340,13 @@ void close(boolean fromShutdownHook) {\n \n     private void closeImpl(boolean fromShutdownHook) {\n         synchronized (this) {\n-            if (closing) {\n+            if (closing || !fromShutdownHook && !userSessions.isEmpty()) {\n                 return;\n             }\n             closing = true;\n             stopServer();\n             if (!userSessions.isEmpty()) {\n-                if (!fromShutdownHook) {\n-                    return;\n-                }\n+                assert fromShutdownHook;\n                 trace.info(\"closing {0} from shutdown hook\", databaseName);\n                 closeAllSessionsExcept(null);\n             }\n"}}, {"oid": "80bf5d3d2208ed9fda89cb4741fbec4f7948529b", "url": "https://github.com/h2database/h2database/commit/80bf5d3d2208ed9fda89cb4741fbec4f7948529b", "message": "fix synchronization for Database.userSessions, handle back-to-back close-open last session scenario, tolerate misbehaving eventListener", "committedDate": "2020-08-18T15:07:59Z", "type": "commit"}]}