{"pr_number": 573, "pr_title": "feat: Add RecordingRule and RecordingRulesUpdate", "pr_createdAt": "2020-09-02T22:54:20Z", "pr_url": "https://github.com/twilio/twilio-java/pull/573", "timeline": [{"oid": "9e644ceea547aaf1537b656709f3f0ae674b402e", "url": "https://github.com/twilio/twilio-java/commit/9e644ceea547aaf1537b656709f3f0ae674b402e", "message": " Add RecordingRule and RecordingRulesUpdate", "committedDate": "2020-09-02T22:51:43Z", "type": "commit"}, {"oid": "deb97202f5870068c47b898b5053f4e3c51f85cd", "url": "https://github.com/twilio/twilio-java/commit/deb97202f5870068c47b898b5053f4e3c51f85cd", "message": "Merge branch 'main' into recordingRules", "committedDate": "2020-09-09T20:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0MzE0Mg==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r485943142", "bodyText": "Please add a short description for this class, similar to this example.", "author": "thinkingserious", "createdAt": "2020-09-09T21:53:14Z", "path": "src/main/java/com/twilio/type/RecordingRule.java", "diffHunk": "@@ -0,0 +1,249 @@\n+package com.twilio.type;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import com.google.common.base.MoreObjects;\n+import com.twilio.converter.Promoter;\n+\n+import java.util.Objects;\n+", "originalCommit": "deb97202f5870068c47b898b5053f4e3c51f85cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "221e515f5e245fab63be7f932cfaf23035fd09a5", "chunk": "diff --git a/src/main/java/com/twilio/type/RecordingRule.java b/src/main/java/com/twilio/type/RecordingRule.java\nindex 39dffa52e..2ded4a669 100644\n--- a/src/main/java/com/twilio/type/RecordingRule.java\n+++ b/src/main/java/com/twilio/type/RecordingRule.java\n\n@@ -1,70 +1,16 @@\n package com.twilio.type;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonValue;\n import com.google.common.base.MoreObjects;\n-import com.twilio.converter.Promoter;\n \n import java.util.Objects;\n \n+/**\n+ * Recording Rule\n+ */\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class RecordingRule {\n-\n-    public enum Type {\n-        INCLUDE(\"include\"),\n-        EXCLUDE(\"exclude\");\n-\n-        private final String value;\n-\n-        Type(final String value) {\n-            this.value = value;\n-        }\n-\n-        @JsonCreator\n-        public static Type forValue(final String value) {\n-            return Promoter.enumFromString(value, Type.values());\n-        }\n-\n-        @JsonValue\n-        public String value() {\n-            return this.value;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return value;\n-        }\n-    }\n-\n-    public enum Kind {\n-        AUDIO(\"audio\"),\n-        DATA(\"data\"),\n-        VIDEO(\"video\");\n-\n-        private final String value;\n-\n-        Kind(final String value) {\n-            this.value = value;\n-        }\n-\n-        @JsonCreator\n-        public static Kind forValue(final String value) {\n-            return Promoter.enumFromString(value, Kind.values());\n-        }\n-\n-        @JsonValue\n-        public String value() {\n-            return this.value;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return value;\n-        }\n-    }\n-\n+public class RecordingRule implements Rule {\n \n     private static final RecordingRule recordAll = builder().withType(Type.INCLUDE).withAll().build();\n     private static final RecordingRule recordNone = builder().withType(Type.EXCLUDE).withAll().build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NTk2NA==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r485945964", "bodyText": "This is duplicated in the SubscribeRule class. Perhaps it's time for a base class.", "author": "thinkingserious", "createdAt": "2020-09-09T21:59:55Z", "path": "src/main/java/com/twilio/type/RecordingRule.java", "diffHunk": "@@ -0,0 +1,249 @@\n+package com.twilio.type;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import com.google.common.base.MoreObjects;\n+import com.twilio.converter.Promoter;\n+\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class RecordingRule {\n+\n+    public enum Type {", "originalCommit": "deb97202f5870068c47b898b5053f4e3c51f85cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NzI4Mw==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r485947283", "bodyText": "There are other duplications with the SubscribeRule class that might make sense to refactor too.", "author": "thinkingserious", "createdAt": "2020-09-09T22:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NTk2NA=="}], "type": "inlineReview", "revised_code": {"commit": "221e515f5e245fab63be7f932cfaf23035fd09a5", "chunk": "diff --git a/src/main/java/com/twilio/type/RecordingRule.java b/src/main/java/com/twilio/type/RecordingRule.java\nindex 39dffa52e..2ded4a669 100644\n--- a/src/main/java/com/twilio/type/RecordingRule.java\n+++ b/src/main/java/com/twilio/type/RecordingRule.java\n\n@@ -1,70 +1,16 @@\n package com.twilio.type;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonValue;\n import com.google.common.base.MoreObjects;\n-import com.twilio.converter.Promoter;\n \n import java.util.Objects;\n \n+/**\n+ * Recording Rule\n+ */\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class RecordingRule {\n-\n-    public enum Type {\n-        INCLUDE(\"include\"),\n-        EXCLUDE(\"exclude\");\n-\n-        private final String value;\n-\n-        Type(final String value) {\n-            this.value = value;\n-        }\n-\n-        @JsonCreator\n-        public static Type forValue(final String value) {\n-            return Promoter.enumFromString(value, Type.values());\n-        }\n-\n-        @JsonValue\n-        public String value() {\n-            return this.value;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return value;\n-        }\n-    }\n-\n-    public enum Kind {\n-        AUDIO(\"audio\"),\n-        DATA(\"data\"),\n-        VIDEO(\"video\");\n-\n-        private final String value;\n-\n-        Kind(final String value) {\n-            this.value = value;\n-        }\n-\n-        @JsonCreator\n-        public static Kind forValue(final String value) {\n-            return Promoter.enumFromString(value, Kind.values());\n-        }\n-\n-        @JsonValue\n-        public String value() {\n-            return this.value;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return value;\n-        }\n-    }\n-\n+public class RecordingRule implements Rule {\n \n     private static final RecordingRule recordAll = builder().withType(Type.INCLUDE).withAll().build();\n     private static final RecordingRule recordNone = builder().withType(Type.EXCLUDE).withAll().build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0ODA2OA==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r485948068", "bodyText": "Please add a short description here as noted in the RecordingRule class.", "author": "thinkingserious", "createdAt": "2020-09-09T22:05:24Z", "path": "src/main/java/com/twilio/type/RecordingRulesUpdate.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.twilio.type;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.MoreObjects;\n+\n+import java.util.List;\n+import java.util.Objects;\n+", "originalCommit": "deb97202f5870068c47b898b5053f4e3c51f85cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "221e515f5e245fab63be7f932cfaf23035fd09a5", "chunk": "diff --git a/src/main/java/com/twilio/type/RecordingRulesUpdate.java b/src/main/java/com/twilio/type/RecordingRulesUpdate.java\nindex 3891ae559..cc5452ab4 100644\n--- a/src/main/java/com/twilio/type/RecordingRulesUpdate.java\n+++ b/src/main/java/com/twilio/type/RecordingRulesUpdate.java\n\n@@ -7,6 +7,11 @@ import com.google.common.base.MoreObjects;\n import java.util.List;\n import java.util.Objects;\n \n+/**\n+ * Recording Rule Update - Used to update the list of Recording Rules\n+ *\n+ */\n+\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class RecordingRulesUpdate {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0ODk2OA==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r485948968", "bodyText": "There are many similarities to the SubscribeRulesUpdate.java class. Similar to the SubscribeRule and RecordingRule classes, we can simplify with a base class.", "author": "thinkingserious", "createdAt": "2020-09-09T22:07:36Z", "path": "src/main/java/com/twilio/type/RecordingRulesUpdate.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.twilio.type;", "originalCommit": "deb97202f5870068c47b898b5053f4e3c51f85cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4ODQ3NQ==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r504088475", "bodyText": "Done", "author": "FMV1491", "createdAt": "2020-10-13T16:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0ODk2OA=="}], "type": "inlineReview", "revised_code": {"commit": "221e515f5e245fab63be7f932cfaf23035fd09a5", "chunk": "diff --git a/src/main/java/com/twilio/type/RecordingRulesUpdate.java b/src/main/java/com/twilio/type/RecordingRulesUpdate.java\nindex 3891ae559..cc5452ab4 100644\n--- a/src/main/java/com/twilio/type/RecordingRulesUpdate.java\n+++ b/src/main/java/com/twilio/type/RecordingRulesUpdate.java\n\n@@ -7,6 +7,11 @@ import com.google.common.base.MoreObjects;\n import java.util.List;\n import java.util.Objects;\n \n+/**\n+ * Recording Rule Update - Used to update the list of Recording Rules\n+ *\n+ */\n+\n @JsonIgnoreProperties(ignoreUnknown = true)\n public class RecordingRulesUpdate {\n \n"}}, {"oid": "221e515f5e245fab63be7f932cfaf23035fd09a5", "url": "https://github.com/twilio/twilio-java/commit/221e515f5e245fab63be7f932cfaf23035fd09a5", "message": "Recording rules", "committedDate": "2020-10-13T03:07:05Z", "type": "forcePushed"}, {"oid": "3d5b4e661eff875fc125c7e133ff136798fe0031", "url": "https://github.com/twilio/twilio-java/commit/3d5b4e661eff875fc125c7e133ff136798fe0031", "message": "Recording rules", "committedDate": "2020-10-13T03:21:43Z", "type": "forcePushed"}, {"oid": "06f401e0a081fbc5d7042a42be62900ef251d998", "url": "https://github.com/twilio/twilio-java/commit/06f401e0a081fbc5d7042a42be62900ef251d998", "message": "Description", "committedDate": "2020-10-13T04:02:29Z", "type": "commit"}, {"oid": "06f401e0a081fbc5d7042a42be62900ef251d998", "url": "https://github.com/twilio/twilio-java/commit/06f401e0a081fbc5d7042a42be62900ef251d998", "message": "Description", "committedDate": "2020-10-13T04:02:29Z", "type": "forcePushed"}, {"oid": "88e27aa08a96cd43b3c01dccd5a40ab42791caaf", "url": "https://github.com/twilio/twilio-java/commit/88e27aa08a96cd43b3c01dccd5a40ab42791caaf", "message": "Description", "committedDate": "2020-10-13T04:05:15Z", "type": "forcePushed"}, {"oid": "06f401e0a081fbc5d7042a42be62900ef251d998", "url": "https://github.com/twilio/twilio-java/commit/06f401e0a081fbc5d7042a42be62900ef251d998", "message": "Description", "committedDate": "2020-10-13T04:02:29Z", "type": "forcePushed"}, {"oid": "73b9dfffa41fb090318207335b0164b1ddb3a76d", "url": "https://github.com/twilio/twilio-java/commit/73b9dfffa41fb090318207335b0164b1ddb3a76d", "message": "Merge branch 'main' into recordingRules", "committedDate": "2020-10-13T04:13:41Z", "type": "commit"}, {"oid": "4ebf6ff11daf20e394bdfca07e199fe70f7655e1", "url": "https://github.com/twilio/twilio-java/commit/4ebf6ff11daf20e394bdfca07e199fe70f7655e1", "message": "Merge branch 'main' into recordingRules", "committedDate": "2020-10-13T17:05:47Z", "type": "commit"}, {"oid": "1c1111ff16ff7c0c06b69036a22d75326e5dbb42", "url": "https://github.com/twilio/twilio-java/commit/1c1111ff16ff7c0c06b69036a22d75326e5dbb42", "message": "Solving test failure", "committedDate": "2020-10-13T17:54:05Z", "type": "forcePushed"}, {"oid": "558725b9d2f3cef584c725b43e977f9a00268ccc", "url": "https://github.com/twilio/twilio-java/commit/558725b9d2f3cef584c725b43e977f9a00268ccc", "message": "Solving test failure", "committedDate": "2020-10-13T18:05:50Z", "type": "forcePushed"}, {"oid": "3d548d98fb7703f8bf360028ec93797c4eeb963d", "url": "https://github.com/twilio/twilio-java/commit/3d548d98fb7703f8bf360028ec93797c4eeb963d", "message": "Solving test failure", "committedDate": "2020-10-13T18:21:43Z", "type": "forcePushed"}, {"oid": "1aa7026d488a39a4723ca875fe4d69e4d357cb6e", "url": "https://github.com/twilio/twilio-java/commit/1aa7026d488a39a4723ca875fe4d69e4d357cb6e", "message": "Solving test failure", "committedDate": "2020-10-13T18:25:16Z", "type": "forcePushed"}, {"oid": "c29e2a2564cb5231a0368586a59991ebf756c14b", "url": "https://github.com/twilio/twilio-java/commit/c29e2a2564cb5231a0368586a59991ebf756c14b", "message": "Solving test failure", "committedDate": "2020-10-13T18:52:23Z", "type": "commit"}, {"oid": "c29e2a2564cb5231a0368586a59991ebf756c14b", "url": "https://github.com/twilio/twilio-java/commit/c29e2a2564cb5231a0368586a59991ebf756c14b", "message": "Solving test failure", "committedDate": "2020-10-13T18:52:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5NTE5Ng==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r504195196", "bodyText": "I don't understand the need for these additional interfaces. And one is returning the type of the other.", "author": "childish-sambino", "createdAt": "2020-10-13T19:13:22Z", "path": "src/main/java/com/twilio/type/RecordingRule.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package com.twilio.type;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.ToString;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Recording Rule\n+ *\n+ * <p>\n+ * For more information see:\n+ * <a href=https://www.twilio.com/docs/video/api/recording-start/stop#specifying-sr>Specifying Recording Rules</a>\n+ * </p>\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@ToString\n+public class RecordingRule implements Rule {\n+\n+    private static final RecordingRule recordAll = builder().withType(Type.INCLUDE).withAll().build();\n+    private static final RecordingRule recordNone = builder().withType(Type.EXCLUDE).withAll().build();\n+\n+    @JsonProperty(\"type\")\n+    private final Type type;\n+\n+    @JsonProperty(\"all\")\n+    private final Boolean all;\n+\n+    @JsonProperty(\"publisher\")\n+    private final String publisher;\n+\n+    @JsonProperty(\"track\")\n+    private final String track;\n+\n+    @JsonProperty(\"kind\")\n+    private final Kind kind;\n+\n+    public RecordingRule(@JsonProperty(\"type\") final Type type,\n+            @JsonProperty(\"all\") final Boolean all,\n+            @JsonProperty(\"publisher\") final String publisher,\n+            @JsonProperty(\"track\") final String track,\n+            @JsonProperty(\"kind\") final Kind kind) {\n+        this.type = type;\n+        this.all = all;\n+        this.publisher = publisher;\n+        this.track = track;\n+        this.kind = kind;\n+    }\n+\n+    public RecordingRule() {\n+        this.type = null;\n+        this.all = null;\n+        this.publisher = null;\n+        this.track = null;\n+        this.kind = null;\n+    }\n+\n+    public static BuilderStart builder() {\n+        return new Builder();\n+    }\n+\n+    public interface BuilderStart {\n+        BuilderMiddle withType(final Type type);\n+    }\n+\n+    public interface BuilderMiddle {\n+        BuilderMiddleBuild withPublisher(final String publisher);\n+        BuilderMiddleBuild withKind(final Kind kind);\n+        BuilderMiddleBuild withTrack(final String track);\n+        BuilderBuild withAll();\n+    }\n+\n+    public interface BuilderMiddleBuild {\n+        BuilderMiddleBuild withPublisher(final String publisher);\n+        BuilderMiddleBuild withKind(final Kind kind);\n+        BuilderMiddleBuild withTrack(final String track);\n+        RecordingRule build();\n+    }", "originalCommit": "c29e2a2564cb5231a0368586a59991ebf756c14b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwOTczMA==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r504209730", "bodyText": "They help build rules that make sense - for example, if you have a rule that has \"all\" or \"none\" it doesn't make sense to have a kind/publisher/track in the same rule.", "author": "innerverse", "createdAt": "2020-10-13T19:40:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5NTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxMzIxOA==", "url": "https://github.com/twilio/twilio-java/pull/573#discussion_r504213218", "bodyText": "Ah, I see the progression now.", "author": "childish-sambino", "createdAt": "2020-10-13T19:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5NTE5Ng=="}], "type": "inlineReview", "revised_code": null}]}