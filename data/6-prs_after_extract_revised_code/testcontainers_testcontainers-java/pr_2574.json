{"pr_number": 2574, "pr_title": "Regard specified VNC recording directory for BrowserWebDriverContainer again", "pr_createdAt": "2020-04-14T10:39:01Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2574", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408038803", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(vncRecordingDirectory == null){\n          \n          \n            \n                        if (vncRecordingDirectory == null) {", "author": "bsideup", "createdAt": "2020-04-14T10:40:06Z", "path": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "diffHunk": "@@ -143,12 +143,15 @@ protected void configure() {\n         }\n \n         if (recordingMode != VncRecordingMode.SKIP) {\n-            try {\n-                vncRecordingDirectory = Files.createTempDirectory(TC_TEMP_DIR_PREFIX).toFile();\n-            } catch (IOException e) {\n-                // should never happen as per javadoc, since we use valid prefix\n-                logger().error(\"Exception while trying to create temp directory \" + vncRecordingDirectory.getAbsolutePath(), e);\n-                throw new ContainerLaunchException(\"Exception while trying to create temp directory\", e);\n+\n+            if(vncRecordingDirectory == null){", "originalCommit": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mjk4OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408042989", "bodyText": "Oh yes, damm...\nDo you have a formater for the project to import via IntelliJ?", "author": "srempfer", "createdAt": "2020-04-14T10:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MzQwMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408043403", "bodyText": "We use IDEA's standard format with some manual asks that are not easily configurable :)", "author": "bsideup", "createdAt": "2020-04-14T10:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "chunk": "diff --git a/modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java b/modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java\nindex 9b154f06..49218dfb 100644\n--- a/modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java\n+++ b/modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java\n\n@@ -144,7 +144,7 @@ public class BrowserWebDriverContainer<SELF extends BrowserWebDriverContainer<SE\n \n         if (recordingMode != VncRecordingMode.SKIP) {\n \n-            if(vncRecordingDirectory == null){\n+            if (vncRecordingDirectory == null) {\n                 try {\n                     vncRecordingDirectory = Files.createTempDirectory(TC_TEMP_DIR_PREFIX).toFile();\n                 } catch (IOException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MDQ0Mw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408040443", "bodyText": "Excellent addition to the test, thanks.", "author": "kiview", "createdAt": "2020-04-14T10:43:06Z", "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "diffHunk": "@@ -11,23 +13,43 @@\n \n import java.io.File;\n import java.util.Optional;\n-\n+import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n \n @RunWith(Enclosed.class)\n public class ChromeRecordingWebDriverContainerTest extends BaseWebDriverContainerTest {\n \n     public static class ChromeThatRecordsAllTests {\n \n+        public File vncRecordingDirectory = new File(\"./build/\");\n+\n         @Rule\n         public BrowserWebDriverContainer chrome = new BrowserWebDriverContainer()\n                 .withCapabilities(new ChromeOptions())\n-                .withRecordingMode(RECORD_ALL, new File(\"./build/\"))\n+                .withRecordingMode(RECORD_ALL, vncRecordingDirectory)\n                 .withRecordingFileFactory(new DefaultRecordingFileFactory());\n \n         @Test\n         public void recordingTestThatShouldBeRecordedAndRetained() {\n+\n+            final String testName = \"ChromeThatRecordsAllTests-recordingTestThatShouldBeRecordedAndRetained-\"\n+                + System.currentTimeMillis();\n+\n             doSimpleExplore(chrome);\n+            chrome.afterTest(new TestDescription() {\n+                @Override\n+                public String getTestId() {\n+                    return getFilesystemFriendlyName();\n+                }\n+\n+                @Override\n+                public String getFilesystemFriendlyName() {\n+                    return testName;\n+                }\n+            }, Optional.empty());\n+\n+            String[] files = vncRecordingDirectory.list(new PatternFilenameFilter(\"PASSED-\" + testName + \"-.*\\\\.flv\"));\n+            assertTrue(\"Recorded file not found\", files.length == 1);", "originalCommit": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "chunk": "diff --git a/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java b/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\nindex 2b3c14a3..3872e3d8 100644\n--- a/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\n+++ b/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\n\n@@ -5,13 +5,13 @@ import com.google.common.io.PatternFilenameFilter;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.experimental.runners.Enclosed;\n+import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.openqa.selenium.chrome.ChromeOptions;\n import org.testcontainers.containers.BrowserWebDriverContainer;\n import org.testcontainers.containers.DefaultRecordingFileFactory;\n import org.testcontainers.lifecycle.TestDescription;\n \n-import java.io.File;\n import java.util.Optional;\n import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MTU2Mg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408041562", "bodyText": "Thanks for adding a test!\nCould you please create a temp directory here instead of reusing ./build/?\nIt will also help simplifying the assertion (no need to randomize the test name)", "author": "bsideup", "createdAt": "2020-04-14T10:45:05Z", "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "diffHunk": "@@ -11,23 +13,43 @@\n \n import java.io.File;\n import java.util.Optional;\n-\n+import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n \n @RunWith(Enclosed.class)\n public class ChromeRecordingWebDriverContainerTest extends BaseWebDriverContainerTest {\n \n     public static class ChromeThatRecordsAllTests {\n \n+        public File vncRecordingDirectory = new File(\"./build/\");", "originalCommit": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2NTU1OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408065558", "bodyText": "Done...", "author": "srempfer", "createdAt": "2020-04-14T11:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MTU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "chunk": "diff --git a/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java b/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\nindex 2b3c14a3..3872e3d8 100644\n--- a/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\n+++ b/modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java\n\n@@ -5,13 +5,13 @@ import com.google.common.io.PatternFilenameFilter;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.experimental.runners.Enclosed;\n+import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.openqa.selenium.chrome.ChromeOptions;\n import org.testcontainers.containers.BrowserWebDriverContainer;\n import org.testcontainers.containers.DefaultRecordingFileFactory;\n import org.testcontainers.lifecycle.TestDescription;\n \n-import java.io.File;\n import java.util.Optional;\n import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n"}}, {"oid": "0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "url": "https://github.com/testcontainers/testcontainers-java/commit/0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "message": "Regard specified VNC recording directory for BrowserWebDriverContainer again", "committedDate": "2020-04-14T11:23:21Z", "type": "commit"}, {"oid": "0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "url": "https://github.com/testcontainers/testcontainers-java/commit/0810dab80e52b8e42f5e46ff73c7a7afd1d1b111", "message": "Regard specified VNC recording directory for BrowserWebDriverContainer again", "committedDate": "2020-04-14T11:23:21Z", "type": "forcePushed"}]}