{"pr_number": 2287, "pr_title": "Add small delay in while loop to avoid spamming logs (ResourceReaper)", "pr_createdAt": "2020-01-24T15:12:52Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2287", "timeline": [{"oid": "c93190ff0d0e4af24230c5211c5904c7a8252d15", "url": "https://github.com/testcontainers/testcontainers-java/commit/c93190ff0d0e4af24230c5211c5904c7a8252d15", "message": "Add small delay in while loop to avoid spamming logs (ResourceReaper)", "committedDate": "2020-01-24T15:11:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NTAzNQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2287#discussion_r370685035", "bodyText": "we have RateLimiter available on classpath, could you please consider using it instead?\nAlso, 500ms is rather long initial delay.", "author": "bsideup", "createdAt": "2020-01-24T15:13:51Z", "path": "core/src/main/java/org/testcontainers/utility/ResourceReaper.java", "diffHunk": "@@ -137,6 +136,14 @@ public static String start(String hostIpAddress, DockerClient client) {\n                             }\n                         } catch (IOException e) {\n                             log.warn(\"Can not connect to Ryuk at {}:{}\", hostIpAddress, ryukPort, e);\n+\n+                            try {\n+                                // sleep for a moment to avoid excessive log spam\n+                                Thread.sleep(500);", "originalCommit": "c93190ff0d0e4af24230c5211c5904c7a8252d15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5Mzc2OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2287#discussion_r370893768", "bodyText": "yes, of course.", "author": "worldtiki", "createdAt": "2020-01-25T00:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4NTAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5c3ac325bc7e597301b608ff3e8cea5a24ddba4f", "chunk": "diff --git a/core/src/main/java/org/testcontainers/utility/ResourceReaper.java b/core/src/main/java/org/testcontainers/utility/ResourceReaper.java\nindex 4dd14851..f74905e6 100644\n--- a/core/src/main/java/org/testcontainers/utility/ResourceReaper.java\n+++ b/core/src/main/java/org/testcontainers/utility/ResourceReaper.java\n\n@@ -109,42 +116,36 @@ public final class ResourceReaper {\n                 DockerClientFactory.TESTCONTAINERS_THREAD_GROUP,\n                 () -> {\n                     while (true) {\n-                        int index = 0;\n-                        try(Socket clientSocket = new Socket(hostIpAddress, ryukPort)) {\n-                            FilterRegistry registry = new FilterRegistry(clientSocket.getInputStream(), clientSocket.getOutputStream());\n-\n-                            synchronized (DEATH_NOTE) {\n-                                while (true) {\n-                                    if (DEATH_NOTE.size() <= index) {\n-                                        try {\n-                                            DEATH_NOTE.wait(1_000);\n-                                            continue;\n-                                        } catch (InterruptedException e) {\n-                                            throw new RuntimeException(e);\n+                        RYUK_ACK_RATE_LIMITER.doWhenReady(() -> {\n+                            int index = 0;\n+                            try(Socket clientSocket = new Socket(hostIpAddress, ryukPort)) {\n+                                FilterRegistry registry = new FilterRegistry(clientSocket.getInputStream(), clientSocket.getOutputStream());\n+\n+                                synchronized (DEATH_NOTE) {\n+                                    while (true) {\n+                                        if (DEATH_NOTE.size() <= index) {\n+                                            try {\n+                                                DEATH_NOTE.wait(1_000);\n+                                                continue;\n+                                            } catch (InterruptedException e) {\n+                                                throw new RuntimeException(e);\n+                                            }\n+                                        }\n+                                        List<Map.Entry<String, String>> filters = DEATH_NOTE.get(index);\n+                                        boolean isAcknowledged = registry.register(filters);\n+                                        if (isAcknowledged) {\n+                                            log.debug(\"Received 'ACK' from Ryuk\");\n+                                            ryukScheduledLatch.countDown();\n+                                            index++;\n+                                        } else {\n+                                            log.debug(\"Didn't receive 'ACK' from Ryuk. Will retry to send filters.\");\n                                         }\n-                                    }\n-                                    List<Map.Entry<String, String>> filters = DEATH_NOTE.get(index);\n-                                    boolean isAcknowledged = registry.register(filters);\n-                                    if (isAcknowledged) {\n-                                        log.debug(\"Received 'ACK' from Ryuk\");\n-                                        ryukScheduledLatch.countDown();\n-                                        index++;\n-                                    } else {\n-                                        log.debug(\"Didn't receive 'ACK' from Ryuk. Will retry to send filters.\");\n                                     }\n                                 }\n+                            } catch (IOException e) {\n+                                log.warn(\"Can not connect to Ryuk at {}:{}\", hostIpAddress, ryukPort, e);\n                             }\n-                        } catch (IOException e) {\n-                            log.warn(\"Can not connect to Ryuk at {}:{}\", hostIpAddress, ryukPort, e);\n-\n-                            try {\n-                                // sleep for a moment to avoid excessive log spam\n-                                Thread.sleep(500);\n-                            } catch (InterruptedException interrupted) {\n-                                Thread.currentThread().interrupt();\n-                                throw new RuntimeException(interrupted);\n-                            }\n-                        }\n+                        });\n                     }\n                 },\n                 \"testcontainers-ryuk\"\n"}}, {"oid": "5c3ac325bc7e597301b608ff3e8cea5a24ddba4f", "url": "https://github.com/testcontainers/testcontainers-java/commit/5c3ac325bc7e597301b608ff3e8cea5a24ddba4f", "message": "Add small delay in while loop to avoid spamming logs (ResourceReaper) - Replaced Thread.sleep with RateLimiter", "committedDate": "2020-01-25T12:45:03Z", "type": "commit"}, {"oid": "d2c128fc110c4be89f0de6396d691a3ebdd07291", "url": "https://github.com/testcontainers/testcontainers-java/commit/d2c128fc110c4be89f0de6396d691a3ebdd07291", "message": "Merge branch 'master' into sleep_between_ryuk_checks", "committedDate": "2020-01-25T13:26:29Z", "type": "commit"}]}