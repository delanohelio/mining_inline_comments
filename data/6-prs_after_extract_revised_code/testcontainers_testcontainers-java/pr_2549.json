{"pr_number": 2549, "pr_title": "Support HTTP headers on HttpWaitStrategy", "pr_createdAt": "2020-04-10T15:31:18Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2549", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzY1MA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406817650", "bodyText": "I am not that happy about adding this method.", "author": "kiview", "createdAt": "2020-04-10T15:48:19Z", "path": "core/src/test/java/org/testcontainers/junit/wait/strategy/AbstractWaitStrategyTest.java", "diffHunk": "@@ -118,4 +118,9 @@ protected void waitUntilReadyAndSucceed(GenericContainer container) {\n         assertTrue(String.format(\"Expected container to be ready after timeout of %sms\",\n             WAIT_TIMEOUT_MILLIS), ready.get());\n     }\n+\n+    protected String waitUntilReadyAndSucceedWithLogs(GenericContainer container) {", "originalCommit": "72af46d9c101421bfd5822644bf6bc023246df50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMTMyNA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406821324", "bodyText": "If we proceed with checking logs, should I return the container itself?", "author": "renatomefi", "createdAt": "2020-04-10T15:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0NjI4Ng==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406946286", "bodyText": "Method in general not necessary.", "author": "kiview", "createdAt": "2020-04-10T21:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzY1MA=="}], "type": "inlineReview", "revised_code": {"commit": "f7f5af23674b732b080d02a6cc1cd729dccc9ca5", "chunk": "diff --git a/core/src/test/java/org/testcontainers/junit/wait/strategy/AbstractWaitStrategyTest.java b/core/src/test/java/org/testcontainers/junit/wait/strategy/AbstractWaitStrategyTest.java\nindex 19894b05..3d3c2f06 100644\n--- a/core/src/test/java/org/testcontainers/junit/wait/strategy/AbstractWaitStrategyTest.java\n+++ b/core/src/test/java/org/testcontainers/junit/wait/strategy/AbstractWaitStrategyTest.java\n\n@@ -118,9 +118,4 @@ public abstract class AbstractWaitStrategyTest<W extends WaitStrategy> {\n         assertTrue(String.format(\"Expected container to be ready after timeout of %sms\",\n             WAIT_TIMEOUT_MILLIS), ready.get());\n     }\n-\n-    protected String waitUntilReadyAndSucceedWithLogs(GenericContainer container) {\n-        waitUntilReadyAndSucceed(container);\n-        return container.getLogs();\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxOTM4NQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406819385", "bodyText": "I would much prefer a black box test with a server requiring the headers.\nOn the other hand, if you want logs, you can just access the container, which is returned by startContainerWithCommand.", "author": "kiview", "createdAt": "2020-04-10T15:52:26Z", "path": "core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java", "diffHunk": "@@ -30,6 +34,26 @@ public void testWaitUntilReadyWithSuccess() {\n         waitUntilReadyAndSucceed(createShellCommand(\"200 OK\", GOOD_RESPONSE_BODY));\n     }\n \n+    /**\n+     * Ensures that HTTP requests made with the HttpWaitStrategy can be enriched with user defined headers,\n+     * although the test web server does not depend on the header to response with a 200, by checking the\n+     * logs we can ensure the HTTP request was correctly sent.\n+     */\n+    @Test\n+    public void testWaitUntilReadyWithSuccessWithCustomHeaders() {\n+        HashMap<String, String> headers = new HashMap<>();\n+        headers.put(\"baz\", \"boo\");\n+        String logs = waitUntilReadyAndSucceedWithLogs(\n+            startContainerWithCommand(createShellCommand(\"200 OK\", GOOD_RESPONSE_BODY),\n+                createHttpWaitStrategy(ready)\n+                    .withHeader(\"foo\", \"bar\")\n+                    .withHeaders(headers)\n+            ));\n+\n+        assertThat(logs, containsString(\"foo: bar\"));", "originalCommit": "72af46d9c101421bfd5822644bf6bc023246df50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMTUyNA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406821524", "bodyText": "I got a bit blocked by how the tests works, the netcat utility is quite limited, I was afraid that I was going to have to touch too many things in order to achieve the result needed!\nIf you think that I should follow this path, what kind of service should I spin off? A mock service, custom bash script? what'd be appropriate in your opinion?", "author": "renatomefi", "createdAt": "2020-04-10T15:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxOTM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0ODkwOQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r406948909", "bodyText": "After thinking a bit more about it, I think your approach is actually valid and does not involve too much overhead.\nI rewrote the method like this:\n    @Test\n    public void testWaitUntilReadyWithSuccessWithCustomHeaders() {\n        HashMap<String, String> headers = new HashMap<>();\n        headers.put(\"baz\", \"boo\");\n        GenericContainer container = startContainerWithCommand(createShellCommand(\"200 OK\", GOOD_RESPONSE_BODY),\n            createHttpWaitStrategy(ready)\n                .withHeader(\"foo\", \"bar\")\n                .withHeaders(headers)\n        );\n        waitUntilReadyAndSucceed(container);\n\n        String logs = container.getLogs();\n\n        assertThat(logs, containsString(\"foo: bar\"));\n        assertThat(logs, containsString(\"baz: boo\"));\n    }", "author": "kiview", "createdAt": "2020-04-10T21:19:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxOTM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE4MjMzMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2549#discussion_r407182333", "bodyText": "Thanks, I've updated it with your suggestion!", "author": "renatomefi", "createdAt": "2020-04-12T11:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxOTM4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f7f5af23674b732b080d02a6cc1cd729dccc9ca5", "chunk": "diff --git a/core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java b/core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java\nindex 4d41446f..c5a39a45 100644\n--- a/core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java\n+++ b/core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java\n\n@@ -43,12 +44,14 @@ public class HttpWaitStrategyTest extends AbstractWaitStrategyTest<HttpWaitStrat\n     public void testWaitUntilReadyWithSuccessWithCustomHeaders() {\n         HashMap<String, String> headers = new HashMap<>();\n         headers.put(\"baz\", \"boo\");\n-        String logs = waitUntilReadyAndSucceedWithLogs(\n-            startContainerWithCommand(createShellCommand(\"200 OK\", GOOD_RESPONSE_BODY),\n-                createHttpWaitStrategy(ready)\n-                    .withHeader(\"foo\", \"bar\")\n-                    .withHeaders(headers)\n-            ));\n+        GenericContainer container = startContainerWithCommand(createShellCommand(\"200 OK\", GOOD_RESPONSE_BODY),\n+            createHttpWaitStrategy(ready)\n+                .withHeader(\"foo\", \"bar\")\n+                .withHeaders(headers)\n+        );\n+        waitUntilReadyAndSucceed(container);\n+\n+        String logs = container.getLogs();\n \n         assertThat(logs, containsString(\"foo: bar\"));\n         assertThat(logs, containsString(\"baz: boo\"));\n"}}, {"oid": "f7f5af23674b732b080d02a6cc1cd729dccc9ca5", "url": "https://github.com/testcontainers/testcontainers-java/commit/f7f5af23674b732b080d02a6cc1cd729dccc9ca5", "message": "Support HTTP headers on HttpWaitStrategy\n\nThis enables webservers that depend on headers for healthchecks to be\nable to correctly be queried by the HttpWaitStrategy.", "committedDate": "2020-04-12T10:53:42Z", "type": "forcePushed"}, {"oid": "445c3dda51629f570a206852d2a60a4fbf292de7", "url": "https://github.com/testcontainers/testcontainers-java/commit/445c3dda51629f570a206852d2a60a4fbf292de7", "message": "Support HTTP headers on HttpWaitStrategy\n\nThis enables webservers that depend on headers for healthchecks to be\nable to correctly be queried by the HttpWaitStrategy.", "committedDate": "2020-06-01T09:00:35Z", "type": "commit"}, {"oid": "445c3dda51629f570a206852d2a60a4fbf292de7", "url": "https://github.com/testcontainers/testcontainers-java/commit/445c3dda51629f570a206852d2a60a4fbf292de7", "message": "Support HTTP headers on HttpWaitStrategy\n\nThis enables webservers that depend on headers for healthchecks to be\nable to correctly be queried by the HttpWaitStrategy.", "committedDate": "2020-06-01T09:00:35Z", "type": "forcePushed"}, {"oid": "c6e5b0d3fead5303e08c27d4cfab9173a0cd8e40", "url": "https://github.com/testcontainers/testcontainers-java/commit/c6e5b0d3fead5303e08c27d4cfab9173a0cd8e40", "message": "Merge branch 'master' into feature/http-wait-strategy-headers-support", "committedDate": "2021-02-06T15:46:04Z", "type": "commit"}]}