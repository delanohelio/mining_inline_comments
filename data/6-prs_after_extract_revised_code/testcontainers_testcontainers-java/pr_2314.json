{"pr_number": 2314, "pr_title": "Docker Compose: Add functionality to retrieve container by its name", "pr_createdAt": "2020-01-31T09:17:44Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2314", "timeline": [{"oid": "0dda941285501c906680154c6336f29c49912d69", "url": "https://github.com/testcontainers/testcontainers-java/commit/0dda941285501c906680154c6336f29c49912d69", "message": "Add functionality to retrieve container by its name", "committedDate": "2020-01-31T08:42:48Z", "type": "commit"}, {"oid": "543218b16dbc8238dc155c93e630d90057d841dd", "url": "https://github.com/testcontainers/testcontainers-java/commit/543218b16dbc8238dc155c93e630d90057d841dd", "message": "Fix test message", "committedDate": "2020-01-31T09:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxNzg4MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373417881", "bodyText": "please create a separate test for the negative scenario", "author": "bsideup", "createdAt": "2020-01-31T10:43:38Z", "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "diffHunk": "@@ -33,4 +35,15 @@ public void testGetServicePort() {\n         assertNotNull(\"Port is set for service with instance number\", serviceWithoutInstancePort);\n         assertEquals(\"Service ports are the same\", serviceWithInstancePort, serviceWithoutInstancePort);\n     }\n+\n+    @Test\n+    public void testGetContainerByServiceName() {\n+        String existingServiceName = \"db_1\";\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),\n+            environment.getServiceContainerByName(existingServiceName).isPresent());\n+\n+        String notExistingServiceName = \"db_256\";", "originalCommit": "543218b16dbc8238dc155c93e630d90057d841dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c341e1f6610ddfc40203f1d079cd23ab9c71b25", "chunk": "diff --git a/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java b/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\nindex 6bec912c..dc7b5501 100644\n--- a/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\n+++ b/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\n\n@@ -37,13 +40,17 @@ public class DockerComposeContainerTest extends BaseDockerComposeTest {\n     }\n \n     @Test\n-    public void testGetContainerByServiceName() {\n+    public void shouldRetrieveContainerByServiceName() {\n         String existingServiceName = \"db_1\";\n-        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),\n-            environment.getServiceContainerByName(existingServiceName).isPresent());\n+        Optional<ContainerState> result = environment.getServiceContainerByName(existingServiceName);\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName), result.isPresent());\n+        assertEquals(\"Mapped port for result container was wrong\", result.get().getExposedPorts(), singletonList(3306));\n+    }\n \n+    @Test\n+    public void shouldReturnEmptyResultOnNoneExistingService() {\n         String notExistingServiceName = \"db_256\";\n-        assertFalse(format(\"No container should be found under service name %s\", notExistingServiceName),\n-            environment.getServiceContainerByName(notExistingServiceName).isPresent());\n+        Optional<ContainerState> result = environment.getServiceContainerByName(notExistingServiceName);\n+        assertFalse(format(\"No container should be found under service name %s\", notExistingServiceName), result.isPresent());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODg3MA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373418870", "bodyText": "could you please also assert some properties of the returned ContainerState (e.g. getExposedPorts()) to ensure that the returned instance is the correct one (and not Redis for example)", "author": "bsideup", "createdAt": "2020-01-31T10:46:00Z", "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "diffHunk": "@@ -33,4 +35,15 @@ public void testGetServicePort() {\n         assertNotNull(\"Port is set for service with instance number\", serviceWithoutInstancePort);\n         assertEquals(\"Service ports are the same\", serviceWithInstancePort, serviceWithoutInstancePort);\n     }\n+\n+    @Test\n+    public void testGetContainerByServiceName() {\n+        String existingServiceName = \"db_1\";\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),", "originalCommit": "543218b16dbc8238dc155c93e630d90057d841dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MTY1Nw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373481657", "bodyText": "Added additional check to compare if exported ports belong to correct container we are checking against", "author": "artjomka", "createdAt": "2020-01-31T13:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7c341e1f6610ddfc40203f1d079cd23ab9c71b25", "chunk": "diff --git a/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java b/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\nindex 6bec912c..dc7b5501 100644\n--- a/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\n+++ b/core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java\n\n@@ -37,13 +40,17 @@ public class DockerComposeContainerTest extends BaseDockerComposeTest {\n     }\n \n     @Test\n-    public void testGetContainerByServiceName() {\n+    public void shouldRetrieveContainerByServiceName() {\n         String existingServiceName = \"db_1\";\n-        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),\n-            environment.getServiceContainerByName(existingServiceName).isPresent());\n+        Optional<ContainerState> result = environment.getServiceContainerByName(existingServiceName);\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName), result.isPresent());\n+        assertEquals(\"Mapped port for result container was wrong\", result.get().getExposedPorts(), singletonList(3306));\n+    }\n \n+    @Test\n+    public void shouldReturnEmptyResultOnNoneExistingService() {\n         String notExistingServiceName = \"db_256\";\n-        assertFalse(format(\"No container should be found under service name %s\", notExistingServiceName),\n-            environment.getServiceContainerByName(notExistingServiceName).isPresent());\n+        Optional<ContainerState> result = environment.getServiceContainerByName(notExistingServiceName);\n+        assertFalse(format(\"No container should be found under service name %s\", notExistingServiceName), result.isPresent());\n     }\n }\n"}}, {"oid": "7c341e1f6610ddfc40203f1d079cd23ab9c71b25", "url": "https://github.com/testcontainers/testcontainers-java/commit/7c341e1f6610ddfc40203f1d079cd23ab9c71b25", "message": "Split up negative and positive tests, additional check added", "committedDate": "2020-01-31T13:19:18Z", "type": "commit"}, {"oid": "e097aae25432c161f5e2db8d79fe5722a4abc867", "url": "https://github.com/testcontainers/testcontainers-java/commit/e097aae25432c161f5e2db8d79fe5722a4abc867", "message": "Small adjustments", "committedDate": "2020-01-31T13:22:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373482177", "bodyText": "I wonder if we should change the name to something like getContainerByServiceName...\n@rnorth @kiview WDYT?", "author": "bsideup", "createdAt": "2020-01-31T13:38:06Z", "path": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "diffHunk": "@@ -479,6 +494,10 @@ public SELF withRemoveImages(RemoveImages removeImages) {\n         return self();\n     }\n \n+    public Optional<ContainerState> getServiceContainerByName(String serviceName) {", "originalCommit": "e097aae25432c161f5e2db8d79fe5722a4abc867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2MDA3Ng==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373860076", "bodyText": "I think that makes sense, yeah.", "author": "rnorth", "createdAt": "2020-02-02T16:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2NzI0Nw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373867247", "bodyText": "@artjomka could you please adjust the name of the method? :)", "author": "bsideup", "createdAt": "2020-02-02T18:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "aa065dc97abd99ac39fa6bd821abbb96dd82946d", "chunk": "diff --git a/core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java b/core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java\nindex 257af645..839db7c8 100644\n--- a/core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java\n+++ b/core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java\n\n@@ -494,7 +494,7 @@ public class DockerComposeContainer<SELF extends DockerComposeContainer<SELF>> e\n         return self();\n     }\n \n-    public Optional<ContainerState> getServiceContainerByName(String serviceName) {\n+    public Optional<ContainerState> getContainerByServiceName(String serviceName) {\n         return Optional.ofNullable(serviceInstanceMap.get(serviceName));\n     }\n \n"}}, {"oid": "aa065dc97abd99ac39fa6bd821abbb96dd82946d", "url": "https://github.com/testcontainers/testcontainers-java/commit/aa065dc97abd99ac39fa6bd821abbb96dd82946d", "message": "Renaming to better method name", "committedDate": "2020-02-03T06:27:52Z", "type": "commit"}]}