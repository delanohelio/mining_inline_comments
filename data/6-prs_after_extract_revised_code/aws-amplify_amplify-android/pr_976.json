{"pr_number": 976, "pr_title": "feat(aws-datastore): add mutation failed hub event", "pr_createdAt": "2020-11-21T00:40:33Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/976", "timeline": [{"oid": "f810ef3054b2c2fd84b93723b358c8b623d31e23", "url": "https://github.com/aws-amplify/amplify-android/commit/f810ef3054b2c2fd84b93723b358c8b623d31e23", "message": "add mutation failed hub event", "committedDate": "2020-11-21T00:33:57Z", "type": "commit"}, {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf", "url": "https://github.com/aws-amplify/amplify-android/commit/f4ba372298191535a2bfb720ba4a22fe62bdacbf", "message": "checkstyle", "committedDate": "2020-11-23T13:16:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3MzM0Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r528973347", "bodyText": "Hmm.  I think this error is going to bubble up all the way to MutationProcessor::startDrainingMutationOutbox, and stop all subsequent mutations from being processed.  This is an existing problem, but it would be ideal if we can address it in this PR.\nI would suggest these changes:\n\nInstead of emitting a DataStoreException, emit a DataStoreException.GraphQLResponseException.  That will allow us to identify it as an error that should be swallowed higher up in the stack.\nIn MutationProcessor::processOutboxItem, if publishToNetwork gets an error, swallow it, and complete.  You can do that with something like this:\n\n.onErrorComplete(error -> error instanceof DataStoreException.GraphQLResponseException)\n\n\nAfter making the first two changes, you could move the logic for the removing the item from the queue and calling announceMutationFailed into processOutboxItem.  Since DataStoreException.GraphQLResponseException is able to hold a list of GraphQLResponse.Error objects, they will be available to build a OutboxMutationFailedEvent.   It would be a little cleaner than doing it down in handleResponseErrors, since it would be right next to the call to announceMutationProcessed.  You'd add something like this:\n\n.doOnError(error -> {\n    mutationOutbox.remove(mutationOutboxItem.getMutationId())\n        .doOnComplete(() -> announceMutationFailed(mutationOutboxItem, error))\n}\n\nNote that even with all these suggested changes, I think there is still a problem with the way non-AppSync errors are handled (e.g. network errors) (#823).  We can address that separately though.", "author": "richardmcclellan", "createdAt": "2020-11-23T20:22:09Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java", "diffHunk": "@@ -287,15 +296,24 @@ void stopDrainingMutationOutbox() {\n         Class<T> modelClazz = (Class<T>) pendingMutation.getModelSchema().getModelClass();\n         AppSyncConflictUnhandledError<T> unhandledConflict =\n             AppSyncConflictUnhandledError.findFirst(modelClazz, errors);\n-        if (unhandledConflict == null) {\n-            return Single.error(new DataStoreException(\n-                \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n-                    \"AppSync response contained errors = \" + errors,\n-                \"Verify that your AppSync endpoint is able to store \" + modelClazz + \" models.\"\n-            ));\n+        if (unhandledConflict != null) {\n+            return conflictResolver.resolve(pendingMutation, unhandledConflict);\n         }\n \n-        return conflictResolver.resolve(pendingMutation, unhandledConflict);\n+        // If error was not due to ConflictUnhandled, then just publish\n+        // error to Hub and remove pending mutation from outbox.\n+        // This helps unclog the mutation outbox by removing a failing\n+        // mutation from the queue.\n+        return Completable.fromAction(() -> announceMutationFailed(pendingMutation, errors))\n+            .doOnError(error -> LOG.warn(\"Failed to create an outboxMutationFailedEvent. \", error))\n+            .andThen(mutationOutbox.remove(pendingMutation.getMutationId()))\n+            .andThen(Single.error(new DataStoreException(\n+                    \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n+                            \"AppSync response contained errors = \" + errors,\n+                    \"Verify that your AppSync endpoint is able to store \" +\n+                            pendingMutation.getMutatedItem() + \".\"\n+            )));", "originalCommit": "f4ba372298191535a2bfb720ba4a22fe62bdacbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyMzI1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r532823251", "bodyText": "Thanks for the detailed feedback!\nI will address the network errors in a separate PR.", "author": "raphkim", "createdAt": "2020-11-30T18:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3MzM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxOTk4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r532919983", "bodyText": "While doing some unrelated testing, I noticed that we have this existing problem around line 120, too. If we fail to publish an item from the outbox (for example, if the app is offline), the exception tears down the observer, and crashes the app. \ud83d\ude22", "author": "jamesonwilliams", "createdAt": "2020-11-30T21:38:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3MzM0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "056dc55aef007b9e7072cf1d3a6f25fb03bae9bd", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java\nindex c94b7e78..c2e61ab8 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java\n\n@@ -304,16 +313,10 @@ final class MutationProcessor {\n         // error to Hub and remove pending mutation from outbox.\n         // This helps unclog the mutation outbox by removing a failing\n         // mutation from the queue.\n-        return Completable.fromAction(() -> announceMutationFailed(pendingMutation, errors))\n-            .doOnError(error -> LOG.warn(\"Failed to create an outboxMutationFailedEvent. \", error))\n-            .andThen(mutationOutbox.remove(pendingMutation.getMutationId()))\n-            .andThen(Single.error(new DataStoreException(\n-                    \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n-                            \"AppSync response contained errors = \" + errors,\n-                    \"Verify that your AppSync endpoint is able to store \" +\n-                            pendingMutation.getMutatedItem() + \".\"\n-            )));\n-\n+        return Single.error(new DataStoreException.GraphQLResponseException(\n+            \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n+                \"AppSync response contained errors = \" + errors, errors\n+        ));\n     }\n \n     private static String getModelName(@NonNull Model model) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNzg4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r532827883", "bodyText": "Let's either make all of the payloads do this, or none. Can we save this for a follow up PR where we switch over all payload structures at once?", "author": "jamesonwilliams", "createdAt": "2020-11-30T18:59:35Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java", "diffHunk": "@@ -31,7 +32,7 @@\n  * and {@link DataStoreChannelEventName#OUTBOX_MUTATION_PROCESSED} event.\n  * @param <M> The class type of the model in the mutation outbox.\n  */\n-public final class OutboxMutationEvent<M extends Model> {\n+public final class OutboxMutationEvent<M extends Model> implements HubEvent.Data<OutboxMutationEvent<M>> {", "originalCommit": "f4ba372298191535a2bfb720ba4a22fe62bdacbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNDk2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r532924965", "bodyText": "this event is from an older PR and I probably shouldn't have made this change in this PR since it is unrelated. But yea, that was what I was going for (to make every payload implement HubEvent.Data).", "author": "raphkim", "createdAt": "2020-11-30T21:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNzg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f996e2a97bc010db858022b67f24e61804d7e8f1", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java\nindex f82bb655..cb05c91e 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java\n\n@@ -33,33 +35,29 @@ import java.util.Objects;\n  * @param <M> The class type of the model in the mutation outbox.\n  */\n public final class OutboxMutationEvent<M extends Model> implements HubEvent.Data<OutboxMutationEvent<M>> {\n-    private final Class<M> model;\n-    private final ModelWithMetadata<M> element;\n+    private final String modelName;\n+    private final OutboxMutationEventElement<M> element;\n \n-    private OutboxMutationEvent(Class<M> model, ModelWithMetadata<M> element) {\n-        this.model = model;\n+    private OutboxMutationEvent(String modelName, OutboxMutationEventElement<M> element) {\n+        this.modelName = modelName;\n         this.element = element;\n     }\n \n     /**\n-     * Constructs an outbox mutation event with just the model. The resulting\n-     * event payload will not contain model sync metadata.\n+     * Constructs an outbox mutation event from a pending mutation.\n      * This format will be used for representing a pending mutation that has\n      * been successfully enqueued into the outbox.\n-     * @param model Enqueued model.\n+     * @param pendingMutation Enqueued model.\n      * @param <M> Class type of the model.\n-     * @return Outbox mutation event without sync metadata.\n+     * @return An OutboxMutationEvent\n      */\n     @NonNull\n-    public static <M extends Model> OutboxMutationEvent<M> fromModel(@NonNull M model) {\n-        Objects.requireNonNull(model);\n-        final ModelMetadata dummyMetadata = new ModelMetadata(\n-                model.getId(),\n-                null,\n-                null,\n-                null\n-        );\n-        return fromModelWithMetadata(new ModelWithMetadata<>(model, dummyMetadata));\n+    public static <M extends Model> OutboxMutationEvent<M> fromPendingMutation(\n+            @NonNull PendingMutation<M> pendingMutation) {\n+        Objects.requireNonNull(pendingMutation);\n+        OutboxMutationEventElement<M> element =\n+            new OutboxMutationEventElement<>(pendingMutation.getMutatedItem(), null, null, null);\n+        return new OutboxMutationEvent<>(pendingMutation.getModelSchema().getName(), element);\n     }\n \n     /**\n"}}, {"oid": "056dc55aef007b9e7072cf1d3a6f25fb03bae9bd", "url": "https://github.com/aws-amplify/amplify-android/commit/056dc55aef007b9e7072cf1d3a6f25fb03bae9bd", "message": "apply pr suggestion", "committedDate": "2020-11-30T22:47:56Z", "type": "commit"}, {"oid": "8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "url": "https://github.com/aws-amplify/amplify-android/commit/8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "message": "make model removal part of the completable flow", "committedDate": "2020-12-01T01:22:38Z", "type": "commit"}, {"oid": "8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "url": "https://github.com/aws-amplify/amplify-android/commit/8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "message": "make model removal part of the completable flow", "committedDate": "2020-12-01T01:22:38Z", "type": "forcePushed"}, {"oid": "548bf05f695f4ae1ec9af0e0c82eaa572fde0e50", "url": "https://github.com/aws-amplify/amplify-android/commit/548bf05f695f4ae1ec9af0e0c82eaa572fde0e50", "message": "checkstyle", "committedDate": "2020-12-01T01:46:40Z", "type": "commit"}, {"oid": "f996e2a97bc010db858022b67f24e61804d7e8f1", "url": "https://github.com/aws-amplify/amplify-android/commit/f996e2a97bc010db858022b67f24e61804d7e8f1", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into mutation-error-hub", "committedDate": "2020-12-01T18:05:50Z", "type": "commit"}, {"oid": "65bc99904cf76777b647ca97702f46482db53bea", "url": "https://github.com/aws-amplify/amplify-android/commit/65bc99904cf76777b647ca97702f46482db53bea", "message": "minor changes", "committedDate": "2020-12-01T19:46:22Z", "type": "commit"}, {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "url": "https://github.com/aws-amplify/amplify-android/commit/8fd366a0805c324a3d6ffcca5d61a3636630b79c", "message": "change payload shape to agreed format", "committedDate": "2020-12-02T18:30:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2NzI5NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534467294", "bodyText": "We recently got bit by this. getExtension() is nullable, but AppSyncExtensions requires non null. See #1000.", "author": "jamesonwilliams", "createdAt": "2020-12-02T20:41:27Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();\n+    }\n+\n     @Override\n     public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n         return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", model=\" + model +\n+                \", modelName=\" + getModelName() +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType fromErrorType(@Nullable String value) {\n+            try {\n+                return MutationErrorType.valueOf(value);\n+            } catch (IllegalArgumentException exception) {\n+                return UNKNOWN;\n+            }\n+        }\n+\n+        // Look at the first error to extract error type.\n+        private static MutationErrorType fromGraphQLErrors(List<GraphQLResponse.Error> errors) {\n+            Iterator<GraphQLResponse.Error> iterator = errors.iterator();\n+            if (iterator.hasNext()) {\n+                GraphQLResponse.Error firstError = iterator.next();\n+                AppSyncExtensions extensions = new AppSyncExtensions(firstError.getExtensions());", "originalCommit": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0ODg1Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534548852", "bodyText": "caught the whole thing in try-catch for convenience.", "author": "raphkim", "createdAt": "2020-12-02T23:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2NzI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 9b787fc8..640896ef 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -102,7 +106,7 @@ public final class OutboxMutationFailedEvent<M extends Model>\n      */\n     @NonNull\n     public String getModelName() {\n-        return model.getClass().getSimpleName();\n+        return modelName;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2ODEyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534468123", "bodyText": "Hm, does valueOf check the name() (an uppercase String)? How would it know to inspect the value property, which is Pascal-cased?\nOne reference states:\n\nThe java.lang.Enum.valueOf() method returns the enum constant of the specified enum type with the specified name. The name must match exactly an identifier used to declare an enum constant in this type.", "author": "jamesonwilliams", "createdAt": "2020-12-02T20:42:53Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();\n+    }\n+\n     @Override\n     public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n         return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", model=\" + model +\n+                \", modelName=\" + getModelName() +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType fromErrorType(@Nullable String value) {\n+            try {\n+                return MutationErrorType.valueOf(value);", "originalCommit": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxNjIwNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534516204", "bodyText": "nice catch! will fix.", "author": "raphkim", "createdAt": "2020-12-02T22:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2ODEyMw=="}], "type": "inlineReview", "revised_code": {"commit": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 9b787fc8..640896ef 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -102,7 +106,7 @@ public final class OutboxMutationFailedEvent<M extends Model>\n      */\n     @NonNull\n     public String getModelName() {\n-        return model.getClass().getSimpleName();\n+        return modelName;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2OTkyNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534469926", "bodyText": "This won't work when we are using ModelSchema on flutter. The new approach is to always ask modelSchema.getName(). I had to update this logic in #1012. You can most likely use a similar technique to access the model name externally, and then pass it in when you are constructing the OutboxMutationFailedEvent.\nTLDR, getClass().getSimpleName() isn't a thing for us anymore, we have to make them all say modelSchema.getName().", "author": "jamesonwilliams", "createdAt": "2020-12-02T20:45:57Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();", "originalCommit": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 9b787fc8..640896ef 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -102,7 +106,7 @@ public final class OutboxMutationFailedEvent<M extends Model>\n      */\n     @NonNull\n     public String getModelName() {\n-        return model.getClass().getSimpleName();\n+        return modelName;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MDcxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534470710", "bodyText": "Hm, I'm confused by this logic. You're converting an error type (UNAUTHORIZED) to a MutationType (UPDATE, etc.)?", "author": "jamesonwilliams", "createdAt": "2020-12-02T20:47:30Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -55,46 +55,31 @@ private OutboxMutationFailedEvent(\n      * @param errors the list of graphQL errors that caused the failure\n      * @param <M> Class type of the model.\n      * @return Outbox mutation error event.\n-     * @throws DataStoreException if unexpected mutation type\n      */\n     @NonNull\n     public static <M extends Model> OutboxMutationFailedEvent<M> create(\n             @NonNull PendingMutation<M> pendingMutation,\n             @NonNull List<GraphQLResponse.Error> errors\n-    ) throws DataStoreException {\n+    ) {\n         Objects.requireNonNull(pendingMutation);\n         Objects.requireNonNull(errors);\n-        final MutationType opType;\n-        switch (pendingMutation.getMutationType()) {\n-            case CREATE:\n-                opType = MutationType.CREATE;\n-                break;\n-            case UPDATE:\n-                opType = MutationType.UPDATE;\n-                break;\n-            case DELETE:\n-                opType = MutationType.DELETE;\n-                break;\n-            default:\n-                throw new DataStoreException(\n-                    \"Invalid operation type.\",\n-                    AmplifyException.REPORT_BUG_TO_AWS_SUGGESTION\n-                );\n-        }\n-        return new OutboxMutationFailedEvent<>(errors, opType, pendingMutation.getMutatedItem());\n+        MutationErrorType errorType = MutationErrorType.fromGraphQLErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);", "originalCommit": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUzMDQxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534530419", "bodyText": "It is merely converting it from PendingMutation.Type internal enum to a customer-exposed MutationType enum. However, I realized that this enum comes from aws-api-appsync module, which is a problem on its own since we want to abstract away GraphQL-related details from here. I will create another enum type within datastore module.", "author": "raphkim", "createdAt": "2020-12-02T22:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MDcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MDkxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534550918", "bodyText": "Addressed in this commit (Needs review). Dropped after further consideration.", "author": "raphkim", "createdAt": "2020-12-02T23:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MDcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 9b787fc8..640896ef 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -63,10 +65,12 @@ public final class OutboxMutationFailedEvent<M extends Model>\n     ) {\n         Objects.requireNonNull(pendingMutation);\n         Objects.requireNonNull(errors);\n-        MutationErrorType errorType = MutationErrorType.fromGraphQLErrors(errors);\n+        MutationErrorType errorType = MutationErrorType.fromGraphQlErrors(errors);\n         String operation = pendingMutation.getMutationType().name();\n         MutationType opType = MutationType.valueOf(operation);\n-        return new OutboxMutationFailedEvent<>(errorType, opType, pendingMutation.getMutatedItem());\n+        String name = pendingMutation.getModelSchema().getName();\n+        M model = pendingMutation.getMutatedItem();\n+        return new OutboxMutationFailedEvent<>(errorType, opType, name, model);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MTE3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534471175", "bodyText": "As below, you're probably going to want to make modelName an explicit property of the shape, as opposed to trying to pull it from the model in the accessor.", "author": "jamesonwilliams", "createdAt": "2020-12-02T20:48:29Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -35,16 +35,16 @@\n  */\n public final class OutboxMutationFailedEvent<M extends Model>\n         implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n-    private final List<GraphQLResponse.Error> errors;\n+    private final MutationErrorType errorType;\n     private final MutationType operation;\n     private final M model;\n ", "originalCommit": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 9b787fc8..640896ef 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -37,15 +36,18 @@ public final class OutboxMutationFailedEvent<M extends Model>\n         implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n     private final MutationErrorType errorType;\n     private final MutationType operation;\n+    private final String modelName;\n     private final M model;\n \n     private OutboxMutationFailedEvent(\n             MutationErrorType errorType,\n             MutationType operation,\n+            String modelName,\n             M model\n     ) {\n         this.errorType = errorType;\n         this.operation = operation;\n+        this.modelName = modelName;\n         this.model = model;\n     }\n \n"}}, {"oid": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "url": "https://github.com/aws-amplify/amplify-android/commit/877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "message": "pr suggestions", "committedDate": "2020-12-02T23:33:37Z", "type": "commit"}, {"oid": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "url": "https://github.com/aws-amplify/amplify-android/commit/877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "message": "pr suggestions", "committedDate": "2020-12-02T23:33:37Z", "type": "forcePushed"}, {"oid": "d573938a5594a93130fa3bdcfeaa8b0526f5fcbd", "url": "https://github.com/aws-amplify/amplify-android/commit/d573938a5594a93130fa3bdcfeaa8b0526f5fcbd", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into mutation-error-hub", "committedDate": "2020-12-02T23:47:53Z", "type": "commit"}, {"oid": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591", "url": "https://github.com/aws-amplify/amplify-android/commit/50a1b2a9b5b2f1c854a54f616d1b52e054a57591", "message": "checkstyle", "committedDate": "2020-12-02T23:52:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NDIyNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r537764227", "bodyText": "It's generally best practice to catch the lowest level of exception that you need, not all RuntimeExceptions.   Otherwise, it's unclear to future developers as to what could go wrong.    Can you just do a null check (Empty.check(firstError.getExtensions())), and return UNKNOWN for that case?", "author": "richardmcclellan", "createdAt": "2020-12-07T19:19:02Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.api.graphql.GraphQLResponse;\n+import com.amplifyframework.api.graphql.MutationType;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.datastore.appsync.AppSyncExtensions;\n+import com.amplifyframework.hub.HubEvent;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Event payload for the {@link DataStoreChannelEventName#OUTBOX_MUTATION_FAILED} event.\n+ * @param <M> The class type of the model in the mutation outbox.\n+ */\n+public final class OutboxMutationFailedEvent<M extends Model>\n+        implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n+    private final MutationErrorType errorType;\n+    private final MutationType operation;\n+    private final String modelName;\n+    private final M model;\n+\n+    private OutboxMutationFailedEvent(\n+            MutationErrorType errorType,\n+            MutationType operation,\n+            String modelName,\n+            M model\n+    ) {\n+        this.errorType = errorType;\n+        this.operation = operation;\n+        this.modelName = modelName;\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Constructs an outbox mutation error event.\n+     * @param pendingMutation pending mutation that failed to publish\n+     * @param errors the list of graphQL errors that caused the failure\n+     * @param <M> Class type of the model.\n+     * @return Outbox mutation error event.\n+     */\n+    @NonNull\n+    public static <M extends Model> OutboxMutationFailedEvent<M> create(\n+            @NonNull PendingMutation<M> pendingMutation,\n+            @NonNull List<GraphQLResponse.Error> errors\n+    ) {\n+        Objects.requireNonNull(pendingMutation);\n+        Objects.requireNonNull(errors);\n+        MutationErrorType errorType = MutationErrorType.fromGraphQlErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);\n+        String name = pendingMutation.getModelSchema().getName();\n+        M model = pendingMutation.getMutatedItem();\n+        return new OutboxMutationFailedEvent<>(errorType, opType, name, model);\n+    }\n+\n+    /**\n+     * Returns the type of error that caused mutation publication to fail.\n+     * @return the type of error from the cloud.\n+     */\n+    @NonNull\n+    public MutationErrorType getErrorType() {\n+        return errorType;\n+    }\n+\n+    /**\n+     * Gets the mutation type.\n+     * @return the mutation type\n+     */\n+    @NonNull\n+    public MutationType getOperation() {\n+        return operation;\n+    }\n+\n+    /**\n+     * Gets the local model that failed to be mutated.\n+     * @return the local model\n+     */\n+    @NonNull\n+    public M getModel() {\n+        return model;\n+    }\n+\n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return modelName;\n+    }\n+\n+    @Override\n+    public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n+        return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", modelName=\" + modelName +\n+                \", model=\" + model +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType enumerate(@Nullable String value) {\n+            for (MutationErrorType type : MutationErrorType.values()) {\n+                if (type.getValue().equals(value)) {\n+                    return type;\n+                }\n+            }\n+            return UNKNOWN;\n+        }\n+\n+        // Look at the first error to extract error type.\n+        private static MutationErrorType fromGraphQlErrors(List<GraphQLResponse.Error> errors) {\n+            try {\n+                GraphQLResponse.Error firstError = errors.get(0);\n+                AppSyncExtensions extensions = new AppSyncExtensions(firstError.getExtensions());\n+                return enumerate(extensions.getErrorType().getValue());\n+            } catch (RuntimeException parsingError) {", "originalCommit": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2NDYzMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r537964630", "bodyText": "So this code snippet can throw error in following scenarios:\n\nerrors is null\nerrors is empty\nfirst item in errors is null\nerror type inside first error object is null\n\nRather than excessively performing a null check, I decided to do a catch-all. However, I did fix the RuntimeException to something more specific (NullPointerException | IndexOutOfBoundsException) for clarification.", "author": "raphkim", "createdAt": "2020-12-08T01:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NDIyNw=="}], "type": "inlineReview", "revised_code": {"commit": "f157a5846b12655ab8f78dc1b16ed3dd31084d42", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex 640896ef..b45dd1b1 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -175,7 +175,7 @@ public final class OutboxMutationFailedEvent<M extends Model>\n                 GraphQLResponse.Error firstError = errors.get(0);\n                 AppSyncExtensions extensions = new AppSyncExtensions(firstError.getExtensions());\n                 return enumerate(extensions.getErrorType().getValue());\n-            } catch (RuntimeException parsingError) {\n+            } catch (NullPointerException | IndexOutOfBoundsException error) {\n                 return UNKNOWN;\n             }\n         }\n"}}, {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42", "url": "https://github.com/aws-amplify/amplify-android/commit/f157a5846b12655ab8f78dc1b16ed3dd31084d42", "message": "address pr comment", "committedDate": "2020-12-08T01:32:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAwODAwOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538008008", "bodyText": "equals & hashCode please!", "author": "jamesonwilliams", "createdAt": "2020-12-08T03:33:51Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.api.graphql.GraphQLResponse;\n+import com.amplifyframework.api.graphql.MutationType;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.datastore.appsync.AppSyncExtensions;\n+import com.amplifyframework.hub.HubEvent;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Event payload for the {@link DataStoreChannelEventName#OUTBOX_MUTATION_FAILED} event.\n+ * @param <M> The class type of the model in the mutation outbox.\n+ */\n+public final class OutboxMutationFailedEvent<M extends Model>\n+        implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n+    private final MutationErrorType errorType;\n+    private final MutationType operation;\n+    private final String modelName;\n+    private final M model;\n+\n+    private OutboxMutationFailedEvent(\n+            MutationErrorType errorType,\n+            MutationType operation,\n+            String modelName,\n+            M model\n+    ) {\n+        this.errorType = errorType;\n+        this.operation = operation;\n+        this.modelName = modelName;\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Constructs an outbox mutation error event.\n+     * @param pendingMutation pending mutation that failed to publish\n+     * @param errors the list of graphQL errors that caused the failure\n+     * @param <M> Class type of the model.\n+     * @return Outbox mutation error event.\n+     */\n+    @NonNull\n+    public static <M extends Model> OutboxMutationFailedEvent<M> create(\n+            @NonNull PendingMutation<M> pendingMutation,\n+            @NonNull List<GraphQLResponse.Error> errors\n+    ) {\n+        Objects.requireNonNull(pendingMutation);\n+        Objects.requireNonNull(errors);\n+        MutationErrorType errorType = MutationErrorType.fromGraphQlErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);\n+        String name = pendingMutation.getModelSchema().getName();\n+        M model = pendingMutation.getMutatedItem();\n+        return new OutboxMutationFailedEvent<>(errorType, opType, name, model);\n+    }\n+\n+    /**\n+     * Returns the type of error that caused mutation publication to fail.\n+     * @return the type of error from the cloud.\n+     */\n+    @NonNull\n+    public MutationErrorType getErrorType() {\n+        return errorType;\n+    }\n+\n+    /**\n+     * Gets the mutation type.\n+     * @return the mutation type\n+     */\n+    @NonNull\n+    public MutationType getOperation() {\n+        return operation;\n+    }\n+\n+    /**\n+     * Gets the local model that failed to be mutated.\n+     * @return the local model\n+     */\n+    @NonNull\n+    public M getModel() {\n+        return model;\n+    }\n+\n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return modelName;\n+    }\n+\n+    @Override\n+    public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n+        return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n+    }\n+\n+    @Override\n+    public String toString() {", "originalCommit": "f157a5846b12655ab8f78dc1b16ed3dd31084d42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5OTMwMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538699300", "bodyText": "oopsie. added!", "author": "raphkim", "createdAt": "2020-12-08T18:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAwODAwOA=="}], "type": "inlineReview", "revised_code": {"commit": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex b45dd1b1..0337e717 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -51,6 +51,31 @@ public final class OutboxMutationFailedEvent<M extends Model>\n         this.model = model;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        OutboxMutationFailedEvent<?> that = (OutboxMutationFailedEvent<?>) obj;\n+        return getErrorType() == that.getErrorType() &&\n+            getOperation() == that.getOperation() &&\n+            getModelName().equals(that.getModelName()) &&\n+            getModel().equals(that.getModel());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(\n+            getErrorType(),\n+            getOperation(),\n+            getModelName(),\n+            getModel()\n+        );\n+    }\n+\n     /**\n      * Constructs an outbox mutation error event.\n      * @param pendingMutation pending mutation that failed to publish\n"}}, {"oid": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "url": "https://github.com/aws-amplify/amplify-android/commit/0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "message": "add obj overrides", "committedDate": "2020-12-08T18:26:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2ODg2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538068866", "bodyText": "Do we have a .events package? I forgot. If we do, we should use it. If we don't, no need to create one.", "author": "jamesonwilliams", "createdAt": "2020-12-08T06:30:33Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;", "originalCommit": "f157a5846b12655ab8f78dc1b16ed3dd31084d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\nindex b45dd1b1..0337e717 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java\n\n@@ -51,6 +51,31 @@ public final class OutboxMutationFailedEvent<M extends Model>\n         this.model = model;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        OutboxMutationFailedEvent<?> that = (OutboxMutationFailedEvent<?>) obj;\n+        return getErrorType() == that.getErrorType() &&\n+            getOperation() == that.getOperation() &&\n+            getModelName().equals(that.getModelName()) &&\n+            getModel().equals(that.getModel());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(\n+            getErrorType(),\n+            getOperation(),\n+            getModelName(),\n+            getModel()\n+        );\n+    }\n+\n     /**\n      * Constructs an outbox mutation error event.\n      * @param pendingMutation pending mutation that failed to publish\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwNDMyNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538804324", "bodyText": "Objects.hash(..) is only supported from API level 19. This should say ObjectsCompat.hash(...).\nI thought maybe it could be desugared in the Android 4.x tools, but that doesn't look to be the case, either.", "author": "jamesonwilliams", "createdAt": "2020-12-08T21:01:02Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -51,6 +51,31 @@ private OutboxMutationFailedEvent(\n         this.model = model;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        OutboxMutationFailedEvent<?> that = (OutboxMutationFailedEvent<?>) obj;\n+        return getErrorType() == that.getErrorType() &&\n+            getOperation() == that.getOperation() &&\n+            getModelName().equals(that.getModelName()) &&\n+            getModel().equals(that.getModel());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(", "originalCommit": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}