{"pr_number": 825, "pr_title": "Added Exceptions to Temporal", "pr_createdAt": "2020-09-14T11:29:17Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/825", "timeline": [{"oid": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "url": "https://github.com/aws-amplify/amplify-android/commit/adcc6ed4e3addbe1d4afe3383032b39af506fd37", "message": "Added Exceptions", "committedDate": "2020-09-14T11:24:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzMTM5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488031395", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new Temporal.Date(\"2001-02-03T01:30:15\").format();\n          \n          \n            \n                    new Temporal.Date(\"2001-02-03T01:30:15\");\n          \n      \n    \n    \n  \n\nDon't call format() here (or any of the other 3 similar tests), because the goal of this test is to verify that the constructor throws the exception.\nAlso, please add a javadoc description for this test, something like \"Tests that {@link Temporal.Date} constructor throws when String input is invalid.\"", "author": "richardmcclellan", "createdAt": "2020-09-14T15:37:52Z", "path": "aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalDateTest.java", "diffHunk": "@@ -48,6 +48,11 @@ public void parsesExpectedFormats() {\n         }\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void parseInvalidFormat(){\n+        new Temporal.Date(\"2001-02-03T01:30:15\").format();", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalDateTest.java b/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalDateTest.java\nindex 008c90ef..cf844cd6 100644\n--- a/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalDateTest.java\n+++ b/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalDateTest.java\n\n@@ -48,9 +48,12 @@ public final class TemporalDateTest {\n         }\n     }\n \n+    /**\n+     * Tests that {@link Temporal.Date} constructor throws when String input is invalid.\n+     */\n     @Test(expected = IllegalArgumentException.class)\n-    public void parseInvalidFormat(){\n-        new Temporal.Date(\"2001-02-03T01:30:15\").format();\n+    public void parseInvalidFormat() {\n+        new Temporal.Date(\"2001-02-03T01:30:15\");\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0NjEwMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488046103", "bodyText": "For Temporal.Date, the offset is actually optional, so we don't always want to throw an exception here.  Essentially the logic should be:\n\nTry to parse as a Date with an offset.\nIf that fails, try to parse as a Date with no offset.\nIf that fails too, throw an exception.\n\nSo the code should look something like:\ntry {\n    OffsetDateTime odt = OffsetDateTime.parse(text, getOffsetDateTimeFormatter());\n    localDate = LocalDate.from(odt);\n    zoneOffset = ZoneOffset.from(odt);\n} catch (DateTimeParseException exception) {\n    try {\n        // Optional timezone offset not present\n        localDate = LocalDate.parse(text, DateTimeFormatter.ISO_LOCAL_DATE);\n        zoneOffset = null;\n    } catch (DateTimeParseException exception) {\n        throw new IllegalArgumentException(\"Failed to create Temporal.Date object from \" + text, exception);\n    }\n}\n\nPlease also add similar logic in the Temporal.Time class as well!", "author": "richardmcclellan", "createdAt": "2020-09-14T15:59:02Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java", "diffHunk": "@@ -91,8 +91,7 @@ public Date(@NonNull String text) {\n                 zoneOffset = ZoneOffset.from(odt);\n             } catch (DateTimeParseException exception) {\n                 // Optional timezone offset not present\n-                localDate = LocalDate.parse(text, DateTimeFormatter.ISO_LOCAL_DATE);\n-                zoneOffset = null;\n+                throw new IllegalArgumentException(\"Failed to create Temporal.Date object from \" + text, exception);", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\nindex c5c619d9..7dec338a 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n\n@@ -90,8 +90,13 @@ public final class Temporal {\n                 localDate = LocalDate.from(odt);\n                 zoneOffset = ZoneOffset.from(odt);\n             } catch (DateTimeParseException exception) {\n-                // Optional timezone offset not present\n-                throw new IllegalArgumentException(\"Failed to create Temporal.Date object from \" + text, exception);\n+                try {\n+                    // Optional timezone offset not present\n+                    localDate = LocalDate.parse(text, DateTimeFormatter.ISO_LOCAL_DATE);\n+                    zoneOffset = null;\n+                } catch (DateTimeParseException dateTimeParseException) {\n+                    throw new IllegalArgumentException(\"Failed to create Temporal.Date object from \" + text, exception);\n+                }\n             }\n             this.localDate = localDate;\n             this.zoneOffset = zoneOffset;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA2MTg5Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488061897", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n          \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-api\");\n          \n      \n    \n    \n  \n\nI think I gave you the wrong namespace for Logging when chatting on Discord, this should be aws-api.", "author": "richardmcclellan", "createdAt": "2020-09-14T16:22:46Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -30,53 +34,73 @@\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex 9ab080b7..fec77c69 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -34,7 +29,6 @@ import java.util.concurrent.TimeUnit;\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n-    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n \n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0OTY3OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488149678", "bodyText": "Suggested change", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:51:19Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -30,53 +34,73 @@\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n+\n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n-     *\n+     * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html> AWS AppSync AWSDate\n      * scalar.</a>\n      */\n     public static final class DateDeserializer implements JsonDeserializer<Temporal.Date> {\n         @Override\n         public Temporal.Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n                 throws JsonParseException {\n-            return new Temporal.Date(json.getAsString());\n+            try {\n+                return new Temporal.Date(json.getAsString());\n+            } catch (IllegalArgumentException exception) {\n+                LOG.warn(\"Failed to deserialize \" + json.getAsString() + \" as a Temporal.Date due to \" + exception);\n+                return null;\n+            }\n+\n+", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex 9ab080b7..fec77c69 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -34,7 +29,6 @@ import java.util.concurrent.TimeUnit;\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n-    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n \n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488150465", "bodyText": "It would be better to throw exceptions early here instead of returning null. This \"erases\" information, going from a detailed failure, to a generic null state.\nSame for other deserializers", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:52:41Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -30,53 +34,73 @@\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n+\n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n-     *\n+     * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html> AWS AppSync AWSDate\n      * scalar.</a>\n      */\n     public static final class DateDeserializer implements JsonDeserializer<Temporal.Date> {\n         @Override\n         public Temporal.Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n                 throws JsonParseException {\n-            return new Temporal.Date(json.getAsString());\n+            try {\n+                return new Temporal.Date(json.getAsString());\n+            } catch (IllegalArgumentException exception) {\n+                LOG.warn(\"Failed to deserialize \" + json.getAsString() + \" as a Temporal.Date due to \" + exception);\n+                return null;", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwMDM4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488400380", "bodyText": "sure sir\nso we need this right? in TemporalDeserializers", "author": "hellosagar", "createdAt": "2020-09-15T05:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwNDI3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488404271", "bodyText": "I would suggest rethrowing as a JsonParseException, since that is something that consumers of this class will be expecting.", "author": "richardmcclellan", "createdAt": "2020-09-15T05:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwNTE1MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488405150", "bodyText": "ok understand as its an exception because of wrong parsing", "author": "hellosagar", "createdAt": "2020-09-15T05:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwOTIwOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488409209", "bodyText": "that's we want to throw JsonParseException?\n\nand in all 3", "author": "hellosagar", "createdAt": "2020-09-15T06:10:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxMDkyMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488410920", "bodyText": "No, you'll want to catch the IllegalArgumentException (not JsonParseException), and then throw a JsonParseException.  And yes, let's do that for all three.", "author": "richardmcclellan", "createdAt": "2020-09-15T06:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxMjAxNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488412016", "bodyText": "ok understand this right\n           try {\n                return new Temporal.Date(json.getAsString());\n            } catch (IllegalArgumentException exception) {\n                throw new JsonParseException(\"Failed to deserialize \" + json.getAsString() + \" as a Temporal.Date due to \" + exception);\n            } ```", "author": "hellosagar", "createdAt": "2020-09-15T06:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex 9ab080b7..fec77c69 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -34,7 +29,6 @@ import java.util.concurrent.TimeUnit;\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n-    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n \n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MDY4OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488150689", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void parseInvalidFormat(){\n          \n          \n            \n                public void parseInvalidFormat() {", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:53:06Z", "path": "aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalTimeTest.java", "diffHunk": "@@ -53,6 +53,11 @@ public void parsesExpectedFormats() {\n         assertEquals(\"01:22:00\", new Temporal.Time(\"01:22\").format());\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void parseInvalidFormat(){", "originalCommit": "adcc6ed4e3addbe1d4afe3383032b39af506fd37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b75fa24906d611b85d61793c07987ddad584ba2e", "chunk": "diff --git a/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalTimeTest.java b/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalTimeTest.java\nindex 58c9f973..6b8e803a 100644\n--- a/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalTimeTest.java\n+++ b/aws-api-appsync/src/test/java/com/amplifyframework/core/model/temporal/TemporalTimeTest.java\n\n@@ -53,9 +53,12 @@ public final class TemporalTimeTest {\n         assertEquals(\"01:22:00\", new Temporal.Time(\"01:22\").format());\n     }\n \n+    /**\n+     * Tests that {@link Temporal.Time} constructor throws when String input is invalid.\n+     */\n     @Test(expected = IllegalArgumentException.class)\n-    public void parseInvalidFormat(){\n-        new Temporal.Time(\"2001-02-03T01:30:15.444+05\").format();\n+    public void parseInvalidFormat() {\n+        new Temporal.Time(\"2001-02-03T01:30:15.444+05\");\n     }\n \n     /**\n"}}, {"oid": "b75fa24906d611b85d61793c07987ddad584ba2e", "url": "https://github.com/aws-amplify/amplify-android/commit/b75fa24906d611b85d61793c07987ddad584ba2e", "message": "All issues resolved", "committedDate": "2020-09-15T06:32:33Z", "type": "commit"}, {"oid": "9cdbf61578238ff818ca45a89ccb746500a3ee4a", "url": "https://github.com/aws-amplify/amplify-android/commit/9cdbf61578238ff818ca45a89ccb746500a3ee4a", "message": "CheckStyles Fixed v1", "committedDate": "2020-09-15T08:04:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1MzExMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488653111", "bodyText": "For Temporal.Time, the offset is optional, so this implementation should be very similar to what you did in Temporal.Date.  Something like:\ntry {\n    localTime = LocalTime.parse(text, DateTimeFormatter.ISO_LOCAL_TIME);\n    zoneOffset = null;\n} catch (DateTimeParseException dateTimeParseException) {\n    throw new IllegalArgumentException(\"Failed to create Temporal.Time object from \" + text, exception);\n}", "author": "richardmcclellan", "createdAt": "2020-09-15T13:09:57Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java", "diffHunk": "@@ -326,8 +335,7 @@ public Time(@NonNull String text) {\n                 zoneOffset = ZoneOffset.from(offsetTime);\n             } catch (DateTimeParseException exception) {\n                 // Optional timezone offset not present\n-                localTime = LocalTime.parse(text, DateTimeFormatter.ISO_LOCAL_TIME);\n-                zoneOffset = null;\n+                throw new IllegalArgumentException(\"Failed to create Temporal.Time object from \" + text, exception);", "originalCommit": "9cdbf61578238ff818ca45a89ccb746500a3ee4a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccf2f266148afd01c61f425d19ad7ef0c51e54c1", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\nindex 9249aed6..039a8424 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n\n@@ -334,8 +334,12 @@ public final class Temporal {\n                 localTime = LocalTime.from(offsetTime);\n                 zoneOffset = ZoneOffset.from(offsetTime);\n             } catch (DateTimeParseException exception) {\n-                // Optional timezone offset not present\n-                throw new IllegalArgumentException(\"Failed to create Temporal.Time object from \" + text, exception);\n+                try {\n+                    localTime = LocalTime.parse(text, DateTimeFormatter.ISO_LOCAL_TIME);\n+                    zoneOffset = null;\n+                } catch (DateTimeParseException dateTimeParseException) {\n+                    throw new IllegalArgumentException(\"Failed to create Temporal.Time object from \" + text, exception);\n+                }\n             }\n             this.localTime = localTime;\n             this.zoneOffset = zoneOffset;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1NjY2Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488656663", "bodyText": "I believe throws JsonParseException needs to stay here, since this method can still throw a JsonParseException?\nSame for the other similar methods.", "author": "richardmcclellan", "createdAt": "2020-09-15T13:14:49Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -30,53 +30,69 @@\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n+\n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n-     *\n+     * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html> AWS AppSync AWSDate\n      * scalar.</a>\n      */\n     public static final class DateDeserializer implements JsonDeserializer<Temporal.Date> {\n         @Override\n-        public Temporal.Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n-                throws JsonParseException {", "originalCommit": "9cdbf61578238ff818ca45a89ccb746500a3ee4a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccf2f266148afd01c61f425d19ad7ef0c51e54c1", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex b5bf171e..8af83cfb 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -54,11 +54,12 @@ public final class TemporalDeserializers {\n      * Deserializer of Temporal.DateTime, an extended ISO-8601 DateTime string.  Time zone offset is required.\n      * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html>AWS AppSync AWSDateTime\n-     * scalar.</a>\n+     * scalar.</a>git fetch upstream\n      */\n     public static final class DateTimeDeserializer implements JsonDeserializer<Temporal.DateTime> {\n         @Override\n-        public Temporal.DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {\n+        public Temporal.DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+                throws JsonParseException {\n             try {\n                 return new Temporal.DateTime(json.getAsString());\n             } catch (IllegalArgumentException exception) {\n"}}, {"oid": "ccf2f266148afd01c61f425d19ad7ef0c51e54c1", "url": "https://github.com/aws-amplify/amplify-android/commit/ccf2f266148afd01c61f425d19ad7ef0c51e54c1", "message": "Issues resolved v2", "committedDate": "2020-09-15T14:24:29Z", "type": "commit"}, {"oid": "1c07304c7b35b8e7ecfdbbff9e568d9d9f5954dc", "url": "https://github.com/aws-amplify/amplify-android/commit/1c07304c7b35b8e7ecfdbbff9e568d9d9f5954dc", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into main", "committedDate": "2020-09-15T14:40:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcyOTA5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488729095", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * scalar.</a>git fetch upstream\n          \n          \n            \n                 * scalar.</a>", "author": "richardmcclellan", "createdAt": "2020-09-15T14:48:28Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -54,11 +54,12 @@\n      * Deserializer of Temporal.DateTime, an extended ISO-8601 DateTime string.  Time zone offset is required.\n      * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html>AWS AppSync AWSDateTime\n-     * scalar.</a>\n+     * scalar.</a>git fetch upstream", "originalCommit": "ccf2f266148afd01c61f425d19ad7ef0c51e54c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d26873103517a20879b9b7d77b496fb59b66a47", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex 8af83cfb..ed0686c9 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -54,7 +54,7 @@ public final class TemporalDeserializers {\n      * Deserializer of Temporal.DateTime, an extended ISO-8601 DateTime string.  Time zone offset is required.\n      * <p>\n      * Based on the <a href=https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html>AWS AppSync AWSDateTime\n-     * scalar.</a>git fetch upstream\n+     * scalar.</a>\n      */\n     public static final class DateTimeDeserializer implements JsonDeserializer<Temporal.DateTime> {\n         @Override\n"}}, {"oid": "6d26873103517a20879b9b7d77b496fb59b66a47", "url": "https://github.com/aws-amplify/amplify-android/commit/6d26873103517a20879b9b7d77b496fb59b66a47", "message": "Update aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "committedDate": "2020-09-15T14:55:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNTExNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488735116", "bodyText": "Suggested change", "author": "richardmcclellan", "createdAt": "2020-09-15T14:56:15Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "diffHunk": "@@ -30,53 +30,71 @@\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n+", "originalCommit": "6d26873103517a20879b9b7d77b496fb59b66a47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ba309ee988137690da92f7ab961c50884ee7e4", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\nindex ed0686c9..78837e7e 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java\n\n@@ -30,7 +30,6 @@ import java.util.concurrent.TimeUnit;\n  * AppSync temporal scalars</a>.\n  */\n public final class TemporalDeserializers {\n-\n     /**\n      * Deserializer of Temporal.Date, an extended ISO-8601 Date string, with an optional timezone offset.\n      * <p>\n"}}, {"oid": "80ba309ee988137690da92f7ab961c50884ee7e4", "url": "https://github.com/aws-amplify/amplify-android/commit/80ba309ee988137690da92f7ab961c50884ee7e4", "message": "Update aws-api-appsync/src/main/java/com/amplifyframework/api/aws/TemporalDeserializers.java", "committedDate": "2020-09-15T14:56:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNzU2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488737568", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * @throws IllegalArgumentException if no zoneOffset is set.\n          \n          \n            \n                     * @throws IllegalArgumentException when text input is not a valid ISO-8601 DateTime string.", "author": "richardmcclellan", "createdAt": "2020-09-15T14:59:16Z", "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java", "diffHunk": "@@ -211,9 +215,14 @@ public DateTime(@NonNull java.util.Date date, int offsetInSeconds) {\n          * Constructs an {@link Temporal.DateTime} from a valid extended ISO-8601 DateTime string.\n          *\n          * @param text a valid extended ISO-8601 DateTime string\n+         * @throws IllegalArgumentException if no zoneOffset is set.", "originalCommit": "80ba309ee988137690da92f7ab961c50884ee7e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczODgzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/825#discussion_r488738834", "bodyText": "Can you add something similar to the Date and Time constructor javadoc?", "author": "richardmcclellan", "createdAt": "2020-09-15T15:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNzU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "6cd342f43be1c8947f9b44890e0cea5fdb945cbd", "chunk": "diff --git a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\nindex 039a8424..61f3bf98 100644\n--- a/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n+++ b/aws-api-appsync/src/main/java/com/amplifyframework/core/model/temporal/Temporal.java\n\n@@ -215,7 +215,7 @@ public final class Temporal {\n          * Constructs an {@link Temporal.DateTime} from a valid extended ISO-8601 DateTime string.\n          *\n          * @param text a valid extended ISO-8601 DateTime string\n-         * @throws IllegalArgumentException if no zoneOffset is set.\n+         * @throws IllegalArgumentException when text input is not a valid ISO-8601 DateTime string.\n          */\n         public DateTime(@NonNull String text) {\n             try {\n"}}, {"oid": "6cd342f43be1c8947f9b44890e0cea5fdb945cbd", "url": "https://github.com/aws-amplify/amplify-android/commit/6cd342f43be1c8947f9b44890e0cea5fdb945cbd", "message": "Issues resolved v3", "committedDate": "2020-09-15T15:02:27Z", "type": "commit"}, {"oid": "53962d04b993929cf68cab97b60e61af383b592c", "url": "https://github.com/aws-amplify/amplify-android/commit/53962d04b993929cf68cab97b60e61af383b592c", "message": "Doc Changes for Time and Date", "committedDate": "2020-09-15T19:53:14Z", "type": "commit"}]}