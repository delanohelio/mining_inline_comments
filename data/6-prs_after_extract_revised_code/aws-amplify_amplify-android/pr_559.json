{"pr_number": 559, "pr_title": "feat(API): Add AuthRule annotation to support @auth directive", "pr_createdAt": "2020-06-04T23:03:08Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/559", "timeline": [{"oid": "44667595db3f324ff2413953ed744b0d0337aee1", "url": "https://github.com/aws-amplify/amplify-android/commit/44667595db3f324ff2413953ed744b0d0337aee1", "message": "Add AuthRule annotation to support owner based auth", "committedDate": "2020-06-04T22:49:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyODc2OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435628769", "bodyText": "To keep this.authRules as non-null, maybe change this to:\nif (authRules != null) {\n     this.authRules.addAll(authRules);\n}\n\nThen on L455 you can mark the declaration as final, as well.", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:32:06Z", "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -458,14 +485,15 @@ public Builder pluralName(@Nullable String pluralName) {\n         }\n \n         /**\n-         * Denotes whether this model has owner based authorization which changes the parameters for subscriptions\n+         * Denotes authorization rules for this model defined by the @auth directive.\n          * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema\n-         * @param hasOwnerAuthorization true if the model has owner based authorization, false otherwise\n+         *\n+         * @param authRules list of {@link AuthRule}s for this {@link Model}\n          * @return the builder object\n          */\n         @NonNull\n-        public Builder hasOwnerAuthorization(boolean hasOwnerAuthorization) {\n-            this.hasOwnerAuthorization = hasOwnerAuthorization;\n+        public Builder authRules(List<AuthRule> authRules) {\n+            this.authRules = authRules;", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyMzI2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436123266", "bodyText": "I've updated to the approach below.  Similar to what you suggested, but matches other similar methods on this Builder a bit better.\n        public Builder authRules(@NonNull List<AuthRule> authRules) {\n            Objects.requireNonNull(authRules);\n            this.authRules.clear();\n            this.authRules.addAll(authRules);\n            return this;\n        }", "author": "richardmcclellan", "createdAt": "2020-06-05T19:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyODc2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\nindex d5e1bf52..d3f5f8ba 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n\n@@ -492,8 +492,10 @@ public final class ModelSchema {\n          * @return the builder object\n          */\n         @NonNull\n-        public Builder authRules(List<AuthRule> authRules) {\n-            this.authRules = authRules;\n+        public Builder authRules(@NonNull List<AuthRule> authRules) {\n+            Objects.requireNonNull(authRules);\n+            this.authRules.clear();\n+            this.authRules.addAll(authRules);\n             return this;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTM0NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435629344", "bodyText": "Rename as getAuthRules(), the other ones use the get<Foo> prefix.", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:34:35Z", "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -396,7 +423,7 @@ public int hashCode() {\n         return ObjectsCompat.hash(\n                 getName(),\n                 getPluralName(),\n-                hasOwnerAuthorization(),\n+                authRules(),", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyMzY2OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436123669", "bodyText": "Done!", "author": "richardmcclellan", "createdAt": "2020-06-05T19:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "9b8c8930c1c4c0a2ff32d1107236c6d4be24ec6b", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\nindex d5e1bf52..1fc33dfb 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n\n@@ -423,7 +423,7 @@ public final class ModelSchema {\n         return ObjectsCompat.hash(\n                 getName(),\n                 getPluralName(),\n-                authRules(),\n+                getAuthRules(),\n                 getFields(),\n                 getAssociations(),\n                 getIndexes()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTczNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435629734", "bodyText": "Is this still necessary? Is it kept because it is public and you don't want to change the contract? Should we mark this @Deprecated, even if we'll keep it and update its implementation? (I'm not sure?)", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:36:07Z", "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -242,12 +254,27 @@ public String getPluralName() {\n     }\n \n     /**\n-     * Returns true if this model has owner based authorization which changes the parameters for subscriptions\n-     * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema\n-     * @return true if owner authorization is present on this model and false if not or if not explicitly annotated.\n+     * Returns list of rules defining which users can access or operate against an object.\n+     * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema.\n+     *\n+     * @return List of {@link AuthRule}s for this Model\n+     */\n+    public List<AuthRule> authRules() {\n+        return authRules;\n+    }\n+\n+    /**\n+     * Returns true if this model has owner based authorization which changes the parameters for subscriptions.\n+     * @return true if owner authorization is present on this model and false if not or if not explicitly annotated\n      */\n+\n     public boolean hasOwnerAuthorization() {", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExNTg1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436115851", "bodyText": "This is actually a helper method now, and is being used as such.  As I dive in deeper to figure out how to annotate each GraphQLRequest with auth stuff (my next task), I might refactor/move this logic elsewhere, but not totally sure on that yet.", "author": "richardmcclellan", "createdAt": "2020-06-05T19:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTczNA=="}], "type": "inlineReview", "revised_code": {"commit": "54bae23d7866c633e43ba320de53434174a2cec1", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\nindex d5e1bf52..852fb98c 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/ModelSchema.java\n\n@@ -270,7 +270,7 @@ public final class ModelSchema {\n \n     public boolean hasOwnerAuthorization() {\n         for (AuthRule rule : authRules()) {\n-            if (AuthStrategy.OWNER.equals(rule.allow())) {\n+            if (AuthStrategy.OWNER.equals(rule.getAllow())) {\n                 return true;\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDAzNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435630036", "bodyText": "Remove the import qualification", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:37:13Z", "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -113,14 +114,20 @@ public static ModelSchema fromModelClass(@NonNull Class<? extends Model> clazz)\n             final TreeMap<String, ModelField> fields = new TreeMap<>();\n             final TreeMap<String, ModelAssociation> associations = new TreeMap<>();\n             final TreeMap<String, ModelIndex> indexes = new TreeMap<>();\n+            final List<AuthRule> authRules = new ArrayList<>();\n \n             // Set the model name and plural name (null if not provided)\n             ModelConfig modelConfig = clazz.getAnnotation(ModelConfig.class);\n             final String modelName = clazz.getSimpleName();\n             final String modelPluralName = modelConfig != null && !modelConfig.pluralName().isEmpty()\n                     ? modelConfig.pluralName()\n                     : null;\n-            final boolean hasOwnerAuthorization = modelConfig != null && modelConfig.hasOwnerAuthorization();\n+\n+            if (modelConfig != null) {\n+                for (com.amplifyframework.core.model.annotations.AuthRule ruleAnnotation : modelConfig.authRules()) {", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExNDkwMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436114903", "bodyText": "Hmm, I actually can't remove it because there are references to the AuthRule class and the @AuthRule annotation within ModelSchema.java, so this differentiates which one I am referring to.   I suppose the qualifications could be eliminated with a larger refactor of some business logic, but I don't see a strong reason to do that at this point.\nOf note, there are also fully qualified class names for the @ModelField annotation within this ModelSchema.java file as well for the same reason (there's a @ModelField annotation, and a @ModelField class)", "author": "richardmcclellan", "createdAt": "2020-06-05T19:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDAzNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDM4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435630380", "bodyText": "Ah man, I have like 3-4 more enums like this in the DataStore category/plugin. In future work, we can probably come back and just use yours everywhere.", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:38:39Z", "path": "core/src/main/java/com/amplifyframework/core/model/ModelOperation.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+/**\n+ * Used as a property of {@link AuthRule} to specify which operations the rule applies to.\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public enum ModelOperation {", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/ModelOperation.java b/core/src/main/java/com/amplifyframework/core/model/ModelOperation.java\nindex e8c5d670..cccd9f62 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/ModelOperation.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/ModelOperation.java\n\n@@ -17,7 +17,7 @@ package com.amplifyframework.core.model;\n \n /**\n  * Used as a property of {@link AuthRule} to specify which operations the rule applies to.\n- * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\">GraphQL Transformer @auth directive\n  * documentation.</a>\n  */\n public enum ModelOperation {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE1Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435631152", "bodyText": "Should we use the get<Foo> on new getters? It makes property accessors work right from Kotlin. On the other hand, we already missed the boat on that, and we're going to have to wrap the API surface, anyway. So, if that's true, maybe we should just write the best possible Java API - which would not use get<Foo>.", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:41:55Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {\n+    private final AuthStrategy allow;\n+    private final String ownerField;\n+    private final String identityClaim;\n+    private final String groupClaim;\n+    private final String[] groups;\n+    private final String groupsField;\n+    private final ModelOperation[] operations;\n+\n+    /**\n+     * Constructor to create an {@link AuthRule} from an {@link com.amplifyframework.core.model.annotations.AuthRule}\n+     * annotation.\n+     * @param authRule an {@link com.amplifyframework.core.model.annotations.AuthRule} annotation.\n+     */\n+    public AuthRule(com.amplifyframework.core.model.annotations.AuthRule authRule) {\n+        this.allow = authRule.allow();\n+        this.ownerField = authRule.ownerField();\n+        this.identityClaim = authRule.identityClaim();\n+        this.groupClaim = authRule.groupClaim();\n+        this.groups = authRule.groups();\n+        this.groupsField = authRule.groupsField();\n+        this.operations = authRule.operations();\n+    }\n+\n+    /**\n+     * Returns the type of strategy for this {@link AuthRule}.\n+     * @return the type of strategy for this {@link AuthRule}\n+     */\n+    public AuthStrategy allow() {", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2Mjk2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435662966", "bodyText": "I'm not sure we should assume the Kotlin extensions we write will wrap every parameter. The ones I've looked at are actually pretty thin. My POV: getFoo is still probably the right place for us to land for Java, and will automagically work in Kotlin.", "author": "jpignata", "createdAt": "2020-06-05T02:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2Njg4NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436066885", "bodyText": "I agree getAllow() is probably the best pattern for this class, and will make the change.  Of note, there is also an @interface AuthRule, for the @AuthRule annotation. I think allow() still makes sense for the annotation, otherwise using the annotation would be weird (getAllow = AuthStrategy.OWNER)", "author": "richardmcclellan", "createdAt": "2020-06-05T17:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjExMDc2Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436110767", "bodyText": "Ahh! Yes!", "author": "jamesonwilliams", "createdAt": "2020-06-05T19:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "192517a39285301d6029660edc4974154252705c", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\nindex 20a3e644..3c370736 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n\n@@ -15,8 +15,9 @@\n \n package com.amplifyframework.core.model;\n \n+import androidx.core.util.ObjectsCompat;\n+\n import java.util.Arrays;\n-import java.util.Objects;\n \n /**\n  * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTU0Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435631542", "bodyText": "Objects requires minSdk of 19, doesn't it? We are using ObjectsCompat for this reason in much of the code base. Nevermind that there are currently issues with APIs 16-19... might as well not put gas on the bonfire. \ud83d\ude04 \ud83d\ude80", "author": "jamesonwilliams", "createdAt": "2020-06-05T00:43:35Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import java.util.Arrays;\n+import java.util.Objects;", "originalCommit": "44667595db3f324ff2413953ed744b0d0337aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2Mzc3Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436063777", "bodyText": "Fixed!   This was for the IDE-generated implementation of equals().  I'll make note to replace with ObjectsCompat next time.", "author": "richardmcclellan", "createdAt": "2020-06-05T17:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "192517a39285301d6029660edc4974154252705c", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\nindex 20a3e644..3c370736 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n\n@@ -15,8 +15,9 @@\n \n package com.amplifyframework.core.model;\n \n+import androidx.core.util.ObjectsCompat;\n+\n import java.util.Arrays;\n-import java.util.Objects;\n \n /**\n  * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n"}}, {"oid": "192517a39285301d6029660edc4974154252705c", "url": "https://github.com/aws-amplify/amplify-android/commit/192517a39285301d6029660edc4974154252705c", "message": "ObjectsCompat, not Objects for API 16 compatibility", "committedDate": "2020-06-05T01:01:00Z", "type": "commit"}, {"oid": "54bae23d7866c633e43ba320de53434174a2cec1", "url": "https://github.com/aws-amplify/amplify-android/commit/54bae23d7866c633e43ba320de53434174a2cec1", "message": "Add get prefix to getters in AuthRule", "committedDate": "2020-06-05T17:48:31Z", "type": "commit"}, {"oid": "9b8c8930c1c4c0a2ff32d1107236c6d4be24ec6b", "url": "https://github.com/aws-amplify/amplify-android/commit/9b8c8930c1c4c0a2ff32d1107236c6d4be24ec6b", "message": "Rename authRules to getAuthRules", "committedDate": "2020-06-05T19:17:27Z", "type": "commit"}, {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "url": "https://github.com/aws-amplify/amplify-android/commit/16d86e1c17e0244dd17caa75ca42ac273c0387f0", "message": "Improve authRules method in Builder", "committedDate": "2020-06-05T19:32:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTI2Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415263", "bodyText": "\")> -- is the ) supposed to be there?", "author": "jamesonwilliams", "createdAt": "2020-06-08T00:12:36Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive", "originalCommit": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MTM2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436861365", "bodyText": "Good catch, removed!", "author": "richardmcclellan", "createdAt": "2020-06-08T17:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTI2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\nindex b90c94aa..422c34d1 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n\n@@ -23,7 +23,7 @@ import java.util.Arrays;\n  * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n  * {@link Model} or a {@link ModelField}.\n  *\n- * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\">GraphQL Transformer @auth directive\n  * documentation.</a>\n  */\n public final class AuthRule {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTM3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415375", "bodyText": "Why not:\npublic AuthStrategy getAuthStrategy() {\n    return this.authStrategy;\n}", "author": "jamesonwilliams", "createdAt": "2020-06-08T00:13:58Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {\n+    private final AuthStrategy allow;\n+    private final String ownerField;\n+    private final String identityClaim;\n+    private final String groupClaim;\n+    private final String[] groups;\n+    private final String groupsField;\n+    private final ModelOperation[] operations;\n+\n+    /**\n+     * Constructor to create an {@link AuthRule} from an {@link com.amplifyframework.core.model.annotations.AuthRule}\n+     * annotation.\n+     * @param authRule an {@link com.amplifyframework.core.model.annotations.AuthRule} annotation.\n+     */\n+    public AuthRule(com.amplifyframework.core.model.annotations.AuthRule authRule) {\n+        this.allow = authRule.allow();\n+        this.ownerField = authRule.ownerField();\n+        this.identityClaim = authRule.identityClaim();\n+        this.groupClaim = authRule.groupClaim();\n+        this.groups = authRule.groups();\n+        this.groupsField = authRule.groupsField();\n+        this.operations = authRule.operations();\n+    }\n+\n+    /**\n+     * Returns the type of strategy for this {@link AuthRule}.\n+     * @return the type of strategy for this {@link AuthRule}\n+     */\n+    public AuthStrategy getAllow() {\n+        return this.allow;", "originalCommit": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDU3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436864579", "bodyText": "For the @AuthRule annotation, allow is used since that is the term used in the schema.graphql.  For this model though, I agree authStrategy makes more sense, and have made this change.", "author": "richardmcclellan", "createdAt": "2020-06-08T17:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\nindex b90c94aa..422c34d1 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n\n@@ -23,7 +23,7 @@ import java.util.Arrays;\n  * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n  * {@link Model} or a {@link ModelField}.\n  *\n- * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\">GraphQL Transformer @auth directive\n  * documentation.</a>\n  */\n public final class AuthRule {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTUxNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415517", "bodyText": "Same here, is the \")> intentional?", "author": "jamesonwilliams", "createdAt": "2020-06-08T00:15:37Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+/**\n+ *  The type of strategy for an @auth directive rule.\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive", "originalCommit": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MTQ4Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436861486", "bodyText": "Removed!", "author": "richardmcclellan", "createdAt": "2020-06-08T17:09:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java b/core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java\nindex 001a52ec..1ce9f7ec 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java\n\n@@ -17,7 +17,7 @@ package com.amplifyframework.core.model;\n \n /**\n  *  The type of strategy for an @auth directive rule.\n- * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\">GraphQL Transformer @auth directive\n  *  * documentation.</a>\n  */\n public enum AuthStrategy {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTY2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415666", "bodyText": "This class seems like it is \"modal.\"  Like, depending on the AuthStrategy, the AuthRule will have different fields become null, by design, right?\nInstead, would it make sense to have an interface AuthRule, and then do GroupBasedAuthRule, which only returned group info, UserBasedAuthRule, which only returned user info, etc.?", "author": "jamesonwilliams", "createdAt": "2020-06-08T00:17:21Z", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {", "originalCommit": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk0NzQyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436947423", "bodyText": "You're right, it is somewhat \"modal\".   I did consider a similar approach to what you are a suggesting, but did not implement because I wasn't quite sure how I would handle an invalid rule definition.\nFor example if a customer defines a rule of: { allow: owner, groupsField: \"groups\" }, (groupsField should only be used when allow: groups), what should happen?\nInterestingly, amplify push does not fail with a schema like this.\nWe could:\n\nAnnotate requests with a mismatch of rule metadata, and perhaps end up with an error in the GraphQLResponse.\nSilently ignore the groupsField at runtime.\nThrow a RuntimeException and suggest to the customer to fix their schema.\n\nAnyway, I think refactoring to a \"modal\" design could make sense, but would like to address that in my next PR which will annotate requests with these details, after I've had a chance to dive deeper on how this really works.", "author": "richardmcclellan", "createdAt": "2020-06-08T19:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MDcxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436990711", "bodyText": "You could even make an InvalidAuthRule subclass!", "author": "jamesonwilliams", "createdAt": "2020-06-08T20:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\nindex b90c94aa..422c34d1 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/AuthRule.java\n\n@@ -23,7 +23,7 @@ import java.util.Arrays;\n  * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n  * {@link Model} or a {@link ModelField}.\n  *\n- * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\">GraphQL Transformer @auth directive\n  * documentation.</a>\n  */\n public final class AuthRule {\n"}}, {"oid": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "url": "https://github.com/aws-amplify/amplify-android/commit/b37a28f300eb42b8c0c66620d091702cc27e79f9", "message": "Remove stray )", "committedDate": "2020-06-08T17:09:03Z", "type": "commit"}, {"oid": "57b46bcf1eb63017587a40f2c9794d5958d13dea", "url": "https://github.com/aws-amplify/amplify-android/commit/57b46bcf1eb63017587a40f2c9794d5958d13dea", "message": "Rename allow to authStrategy", "committedDate": "2020-06-08T17:12:48Z", "type": "commit"}]}