{"pr_number": 447, "pr_title": "[DataStore] fix type conversion for enums and dates", "pr_createdAt": "2020-05-12T02:05:37Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/447", "timeline": [{"oid": "50f501f5fe1d318a77ea9054a282233c279ddd22", "url": "https://github.com/aws-amplify/amplify-android/commit/50f501f5fe1d318a77ea9054a282233c279ddd22", "message": "fix query predicate bindings type conversion\n\n**Notes:**\n\n- reuse the type converter logic on predicate values\n- fix enum conversion\n- fix date types conversion", "committedDate": "2020-05-12T02:02:20Z", "type": "commit"}, {"oid": "0280a88c0095c2a2b01dd502b1d3a3168060a538", "url": "https://github.com/aws-amplify/amplify-android/commit/0280a88c0095c2a2b01dd502b1d3a3168060a538", "message": "Merge remote-tracking branch 'origin/master' into fix/datastore-predicate-bindings", "committedDate": "2020-05-12T02:03:25Z", "type": "commit"}, {"oid": "245b1522508c98ff2110e323988d0518b7139786", "url": "https://github.com/aws-amplify/amplify-android/commit/245b1522508c98ff2110e323988d0518b7139786", "message": "fix checkstyle errors (yet again...)", "committedDate": "2020-05-12T02:20:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MjA2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423442066", "bodyText": "@SuppressWarnings({\"rawtypes\", \"unchecked\"}) can just go directly on the method itself to make it cleaner :)\nActually, rawtypes should be avoidable by doing this:\nfinal Class<?> enumClass = field.getType().asSubclass(Enum.class);\nfinal Enum<?> enumValue = Enum.valueOf(enumClass, valueAsString);", "author": "raphkim", "createdAt": "2020-05-12T03:35:39Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java", "diffHunk": "@@ -106,6 +152,11 @@ public Object convertValueFromSource(\n                 case MODEL:\n                     return convertModelAssociationToTarget(cursor, field);\n                 case ENUM:\n+                    @SuppressWarnings(\"rawtypes\")\n+                    final Class<? extends Enum> enumClass = field.getType().asSubclass(Enum.class);\n+                    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+                    final Enum enumValue = Enum.valueOf(enumClass, valueAsString);\n+                    return enumValue;", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MzM1Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423443353", "bodyText": "Actually, I'm not sure what the best way to represent Class<T extends Enum<T>> would be with a ?, since Class<? extends Enum<?>> doesn't sufficiently enforce the two types to be the same... hmm", "author": "raphkim", "createdAt": "2020-05-12T03:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MjA2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0Nzg1OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423447859", "bodyText": "Okay, my suggested solution doesn't work, and it seems that the only way to avoid rawtypes warnings is to do the following:\nfinal Class<?> clazz = field.getType();\nfinal Enum<?> enumValue = Enum.valueOf(clazz.asSubclass(Enum.class), valueAsString);\n\nUnchecked type warning is unfortunately very difficult to avoid, so you will need the annotation anyways :/", "author": "raphkim", "createdAt": "2020-05-12T03:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MjA2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MTU2OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423681569", "bodyText": "Meh. Yea, I wasn't able to get rid of one final unchecked warning.\n    @Test\n    public void testEnumConversion() {\n        assertEquals(Foo.BAR, valueOf(Foo.class, Foo.BAR.name()));\n    }\n\n    private static <E extends Enum<E>> Object valueOf(Class<?> clazz, String fieldName) {\n        @SuppressWarnings(\"unchecked\")\n        Class<E> enumClazz = (Class<E>) clazz.asSubclass(Enum.class);\n        return Enum.valueOf(enumClazz, fieldName);\n    }\n\n    enum Foo {\n        BAR,\n    }", "author": "jamesonwilliams", "createdAt": "2020-05-12T12:09:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MjA2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "49e229f0e32ee96c1189b7edf99b1b5241e5010a", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\nindex a7940a14..642d8ef1 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\n\n@@ -152,11 +150,7 @@ public final class SQLiteModelFieldTypeConverter implements ModelFieldTypeConver\n                 case MODEL:\n                     return convertModelAssociationToTarget(cursor, field);\n                 case ENUM:\n-                    @SuppressWarnings(\"rawtypes\")\n-                    final Class<? extends Enum> enumClass = field.getType().asSubclass(Enum.class);\n-                    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-                    final Enum enumValue = Enum.valueOf(enumClass, valueAsString);\n-                    return enumValue;\n+                    return convertEnumValueToTarget(valueAsString, field);\n                 case CUSTOM_TYPE:\n                     return convertCustomTypeToTarget(cursor, field, columnIndex);\n                 case INTEGER:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ0MjM2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423442365", "bodyText": "maybe \"date-time\" instead of just \"date\"?", "author": "raphkim", "createdAt": "2020-05-12T03:36:53Z", "path": "core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "diffHunk": "@@ -50,14 +53,19 @@\n     STRING(String.class.getSimpleName()),\n \n     /**\n-     * Represents the java.util.Date data type.\n+     * Represents the Date data type.\n      */\n-    DATE(java.util.Date.class.getSimpleName()),\n+    DATE(AWSDate.class.getSimpleName()),\n \n     /**\n-     * Represents the java.sql.Time data type.\n+     * Represents the Date data type.", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49e229f0e32ee96c1189b7edf99b1b5241e5010a", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java b/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\nindex 9a833bd6..2ccc70ca 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\n\n@@ -58,7 +58,7 @@ public enum JavaFieldType {\n     DATE(AWSDate.class.getSimpleName()),\n \n     /**\n-     * Represents the Date data type.\n+     * Represents the DateTime data type.\n      */\n     DATE_TIME(AWSDateTime.class.getSimpleName()),\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1ODk3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423658976", "bodyText": "Is it possible, now, to convert all of these discrete assertEquals(..., ...,) calls into one simple, higher-level, assertEquals(todo, queriedTodo), and compare via Todo#equals(Object obj), instead of directly on each field's equals(...)?", "author": "jamesonwilliams", "createdAt": "2020-05-12T11:25:40Z", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "diffHunk": "@@ -102,8 +102,8 @@ public void saveModelWithAllTypesThenQuery() throws DataStoreException {\n \n         // Test date scalars\n         // TODO fix tests once new Date/Time handling is done\n-        // assertEquals(todo.getCreatedAt(), queriedTodo.getCreatedAt());\n-        // assertEquals(todo.getDueDate(), queriedTodo.getDueDate());\n+        assertEquals(todo.getCreatedAt(), queriedTodo.getCreatedAt());", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49e229f0e32ee96c1189b7edf99b1b5241e5010a", "chunk": "diff --git a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\nindex 383c1055..42d3d3f1 100644\n--- a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\n+++ b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\n\n@@ -92,31 +92,7 @@ public final class SQLiteStorageAdapterModelConverterTest {\n \n         final Todo queriedTodo = result.get(0);\n         assertNotNull(queriedTodo);\n-\n-        // Test common scalar types\n-        assertEquals(todo.getTitle(), queriedTodo.getTitle());\n-        assertEquals(todo.getContent(), queriedTodo.getContent());\n-        assertEquals(todo.getDuplicate(), queriedTodo.getDuplicate());\n-        assertEquals(todo.getPriority(), queriedTodo.getPriority());\n-        assertEquals(todo.getHoursSpent(), queriedTodo.getHoursSpent());\n-\n-        // Test date scalars\n-        // TODO fix tests once new Date/Time handling is done\n-        assertEquals(todo.getCreatedAt(), queriedTodo.getCreatedAt());\n-        assertEquals(todo.getDueDate(), queriedTodo.getDueDate());\n-        assertEquals(todo.getLastUpdated(), queriedTodo.getLastUpdated());\n-\n-        // Test status enum\n-        assertEquals(todo.getStatus(), queriedTodo.getStatus());\n-\n-        // Test embedded TodoOwner\n-        assertNotNull(queriedTodo.getOwner());\n-        assertEquals(todo.getOwner().getName(), queriedTodo.getOwner().getName());\n-        assertEquals(todo.getOwner().getEmail(), queriedTodo.getOwner().getEmail());\n-\n-        // Test embedded tags (String[])\n-        assertNotNull(queriedTodo.getTags());\n-        assertEquals(todo.getTags().size(), queriedTodo.getTags().size());\n+        assertEquals(todo, queriedTodo);\n     }\n \n     private Todo createTestTodoModel() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDAyMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423660022", "bodyText": "Should this be public AWSTimestamp getLastUpdated(), to exercise the fourth type?", "author": "jamesonwilliams", "createdAt": "2020-05-12T11:27:31Z", "path": "testmodels/src/main/java/com/amplifyframework/testmodels/todo/Todo.java", "diffHunk": "@@ -73,15 +74,15 @@ public TodoStatus getStatus() {\n         return status;\n     }\n \n-    public Date getCreatedAt() {\n+    public AWSDateTime getCreatedAt() {\n         return createdAt;\n     }\n \n     public Long getLastUpdated() {", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3MTYyMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424071622", "bodyText": "I still don't agree with AWSTimestamp existence :D\nI'm willing to change it once I'm convinced we need AWSTimestamp. Why not a Long instead?", "author": "drochetti", "createdAt": "2020-05-12T22:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDAyMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDgwNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423660804", "bodyText": "There is a fourth AWSTimestamp, too", "author": "jamesonwilliams", "createdAt": "2020-05-12T11:29:07Z", "path": "core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "diffHunk": "@@ -17,6 +17,9 @@\n \n import androidx.annotation.NonNull;\n \n+import com.amplifyframework.core.model.AWSDate;\n+import com.amplifyframework.core.model.AWSDateTime;\n+import com.amplifyframework.core.model.AWSTime;", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2ODgxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424068811", "bodyText": "yeah AWSTimestamp is confusing to me, because the implementation handles it like a Long (like it should imo), so I don't fully understand why AWSTimestamp exists...", "author": "drochetti", "createdAt": "2020-05-12T22:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDgwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3MDIzMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424070233", "bodyText": "which \"implementation\" are you referring to?\nThe codegen currently generates a model with a Long, but we've asked them to change this to AWSTimestamp.", "author": "richardmcclellan", "createdAt": "2020-05-12T22:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDgwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3NzIxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424077219", "bodyText": "The SQLite adapter handles as a Long.\nMaybe there's a reason for using AWSTimestamp instead, if that's the preferred way I can change this. But it's worth noting that both iOS and JS handle timestamp as a number. The alternative for a more \"controlled type\" in those platforms is AWSDateTime.", "author": "drochetti", "createdAt": "2020-05-12T22:48:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MDgwNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MzA1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423663051", "bodyText": "On the typing -- use of Object, and erasure or template type --\nAny benefit to capturing the <T> here, for this call? e.g.\n// I guess you don't actually use value, just it's .getClass() ....\npublic static <T> JavaFieldType getJavaFieldTypeFromValue(@NonNull Class<T> valueClass) {\n    if (Model.class.isAssignableFrom(valueClass)) {\n        // Hey, it's a model, that's neat.\n    } else if (Enum.class.isAssignableFrom(valueClass)) {\n        // An enum!\n    }\n    try {\n        return JavaFieldType.<T>from(/* Class<T> continued through ... */ valueClass);\n    } catch (...) {\n        ...\n    }\n}", "author": "jamesonwilliams", "createdAt": "2020-05-12T11:33:41Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/TypeConverter.java", "diffHunk": "@@ -81,6 +83,26 @@ static JavaFieldType getJavaFieldType(@NonNull ModelField field) {\n         }\n     }\n \n+    /**\n+     * Gets the {@link JavaFieldType} from the value class.\n+     * @param value The value to guess the type from.\n+     * @return the {@link JavaFieldType} from the value class.\n+     */\n+    public static JavaFieldType getJavaFieldTypeFromValue(@NonNull Object value) {", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2OTIxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424069219", "bodyText": "I'm not sure how this would be a benefit, since the value we have at the time we call this is of type Object. We're reading it using reflection from a customer provided type, so there's no way to know the actual type beforehand in a way the T would be relevant.\nThoughts?", "author": "drochetti", "createdAt": "2020-05-12T22:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2MzA1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY2NDc1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423664755", "bodyText": "Woo-hoo!", "author": "jamesonwilliams", "createdAt": "2020-05-12T11:37:02Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java", "diffHunk": "@@ -36,10 +40,6 @@\n import com.google.gson.Gson;\n \n import java.io.IOException;\n-import java.sql.Time;", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkzMTMxNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423931316", "bodyText": "Does this need to be public?", "author": "richardmcclellan", "createdAt": "2020-05-12T18:04:42Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java", "diffHunk": "@@ -49,7 +49,7 @@\n  * to <code>Model</code> properties and from <code>Model</code> properties to values that are\n  * valid in a <code>SQLiteStatement</code>.\n  */\n-final class SQLiteModelFieldTypeConverter implements ModelFieldTypeConverter<Cursor, Model> {\n+public final class SQLiteModelFieldTypeConverter implements ModelFieldTypeConverter<Cursor, Model> {", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2OTc2MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424069760", "bodyText": "unless I start to move stuff around, yes... There are two packages right now and some public members because those two packages share code. Cleaning this up would require a deeper refactor.", "author": "drochetti", "createdAt": "2020-05-12T22:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkzMTMxNg=="}], "type": "inlineReview", "revised_code": {"commit": "13431a96755f94fa5c0fd31fd104207e984b7064", "chunk": "diff --git a/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java b/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\nindex a7940a14..33508c18 100644\n--- a/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\n+++ b/aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteModelFieldTypeConverter.java\n\n@@ -50,8 +49,7 @@ import java.util.Objects;\n  * valid in a <code>SQLiteStatement</code>.\n  */\n public final class SQLiteModelFieldTypeConverter implements ModelFieldTypeConverter<Cursor, Model> {\n-\n-    private static final Logger LOGGER = Amplify.Logging.forCategory(CategoryType.DATASTORE);\n+    private static final Logger LOGGER = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n \n     private final Class<? extends Model> modelType;\n     private final ModelSchemaRegistry modelSchemaRegistry;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MjUxNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r423952514", "bodyText": "As written, a customer might get confused thinking Date is java.util.Date.    This should be AWSDate (or whatever the model class is renamed, if we are renaming it).\nIf we do rename AWSDate, I don't like just dropping the AWS prefix, since Date would be confused with java.util.Date.  Maybe AmplifyDate?  Not sure about that either though.", "author": "richardmcclellan", "createdAt": "2020-05-12T18:40:35Z", "path": "core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "diffHunk": "@@ -50,14 +53,19 @@\n     STRING(String.class.getSimpleName()),\n \n     /**\n-     * Represents the java.util.Date data type.\n+     * Represents the Date data type.", "originalCommit": "245b1522508c98ff2110e323988d0518b7139786", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3MDc4NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424070784", "bodyText": "We have a big debate in iOS too since this is consumer-facing API. I'm honestly against this verbosity of adding AWS or Amplify as prefixes (or any other prefix tbh) not only to the verbosity itself, but why is it relevant that is an Amplify Date? From a consumer perspective that makes me wonder why that's a special Date/DateTime.\nI really wanted customer to be able to read it and understand what the intent is: it's a Date, a DateTime and Time - i.e. no implementation details need to be exposed from a data modeling perspective.\nBut I'm starting to accept that I will lose this battle.", "author": "drochetti", "createdAt": "2020-05-12T22:30:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MjUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3MjY3OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/447#discussion_r424072678", "bodyText": "Just throwing this out there, one other option for naming would be:\nAWSDate > com.amplifyframework.core.model.OffsetDate\nAWSDateTime > com.amplifyframework.core.model.OffsetDateTime\nAWSTime > com.amplifyframework.core.model.OffsetTime\nAWSTimestamp > java.util.Date\nThese are basically the same names that are used by java.time, but we've sort of reimplemented them ourselves, since java.time isn't available.\n@jamesonwilliams any thoughts?", "author": "richardmcclellan", "createdAt": "2020-05-12T22:35:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MjUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "49e229f0e32ee96c1189b7edf99b1b5241e5010a", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java b/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\nindex 9a833bd6..2ccc70ca 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java\n\n@@ -58,7 +58,7 @@ public enum JavaFieldType {\n     DATE(AWSDate.class.getSimpleName()),\n \n     /**\n-     * Represents the Date data type.\n+     * Represents the DateTime data type.\n      */\n     DATE_TIME(AWSDateTime.class.getSimpleName()),\n \n"}}, {"oid": "13431a96755f94fa5c0fd31fd104207e984b7064", "url": "https://github.com/aws-amplify/amplify-android/commit/13431a96755f94fa5c0fd31fd104207e984b7064", "message": "Merge remote-tracking branch 'origin/master' into fix/datastore-predicate-bindings", "committedDate": "2020-05-12T22:16:32Z", "type": "commit"}, {"oid": "49e229f0e32ee96c1189b7edf99b1b5241e5010a", "url": "https://github.com/aws-amplify/amplify-android/commit/49e229f0e32ee96c1189b7edf99b1b5241e5010a", "message": "address PR feedback", "committedDate": "2020-05-12T22:36:32Z", "type": "commit"}, {"oid": "2610da425d09e9291c949f4b68f28b3c459976c2", "url": "https://github.com/aws-amplify/amplify-android/commit/2610da425d09e9291c949f4b68f28b3c459976c2", "message": "Merge remote-tracking branch 'origin/master' into fix/datastore-predicate-bindings", "committedDate": "2020-05-12T22:36:56Z", "type": "commit"}]}