{"pr_number": 365, "pr_title": "Improve feature comparison in tests", "pr_createdAt": "2020-04-08T05:00:20Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/365", "timeline": [{"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "url": "https://github.com/aws-amplify/amplify-android/commit/27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "message": "Improve feature comparison in tests", "committedDate": "2020-04-08T04:54:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjM4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405266388", "bodyText": "Maybe this could be named assertFeatureValue(T expectedValue, Feature<T> actualFeature)?", "author": "jamesonwilliams", "createdAt": "2020-04-08T05:29:33Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {", "originalCommit": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MzY4Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405273686", "bodyText": "haha, I feel like there should be a verb to make grammatical sense (i.e. \"matches\"). I was actually considering assertValueMatches or assertFeatureValueMatches, but I thought that was a bit too long. Besides, this method is static, so calling FeatureAssert first would imply that we are asserting to see if features match.", "author": "raphkim", "createdAt": "2020-04-08T05:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "31018d8a4fb366ac9e5d9a191a033cd0f2e4b7cf", "chunk": "diff --git a/aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java b/testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\nsimilarity index 67%\nrename from aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java\nrename to testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\nindex e6d2ecdc..692fb194 100644\n--- a/aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java\n+++ b/testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\n\n@@ -13,21 +13,20 @@\n  * permissions and limitations under the License.\n  */\n \n-package com.amplifyframework.predictions.aws;\n+package com.amplifyframework.testutils;\n \n import com.amplifyframework.predictions.models.Feature;\n \n+import org.junit.Assert;\n+\n import java.util.Collection;\n import java.util.Iterator;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-\n /**\n- * Utility class to assert that two features have matching values\n- * without regarding their IDs or confidence scores.\n+ * Utility class to assert that a feature or features have\n+ * expected values.\n  */\n-final class FeatureAssert {\n+public final class FeatureAssert {\n     private FeatureAssert() {}\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Nzk0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405267949", "bodyText": "Maybe, assertValuesForFeatures(...), or assertFeatureValues(...)?\nHm, I wonder if you can do\nstatic <F extends Feature<T>, T> void assertFeatureValues(T... values, F... features);\n\n? I don't think you can have two varargs like that ...", "author": "jamesonwilliams", "createdAt": "2020-04-08T05:35:22Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {\n+        assertNotNull(expectedValue);\n+        assertNotNull(actual);\n+        assertEquals(expectedValue, actual.getValue());\n+    }\n+\n+    /**\n+     * Assert that a list of features all match the expected values.\n+     * @param expected the list of feature values to expect\n+     * @param actual the list of actual features\n+     * @param <F> the data type of the feature\n+     * @param <T> the data type of the value of the feature\n+     */\n+    static <F extends Feature<T>, T> void assertMatches(Collection<T> expected, Collection<F> actual) {", "originalCommit": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3NDU0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405274548", "bodyText": "Yea the varargs would not work since it is required to be the last parameter only.\nI was modeling this after Assert#assertEquals(Object, Object), which works for pretty much anything (list, or singular struct) even with the same name. I wanted to maintain this simplicity in the assertion name.", "author": "raphkim", "createdAt": "2020-04-08T05:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Nzk0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "31018d8a4fb366ac9e5d9a191a033cd0f2e4b7cf", "chunk": "diff --git a/aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java b/testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\nsimilarity index 67%\nrename from aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java\nrename to testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\nindex e6d2ecdc..692fb194 100644\n--- a/aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java\n+++ b/testutils/src/main/java/com/amplifyframework/testutils/FeatureAssert.java\n\n@@ -13,21 +13,20 @@\n  * permissions and limitations under the License.\n  */\n \n-package com.amplifyframework.predictions.aws;\n+package com.amplifyframework.testutils;\n \n import com.amplifyframework.predictions.models.Feature;\n \n+import org.junit.Assert;\n+\n import java.util.Collection;\n import java.util.Iterator;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-\n /**\n- * Utility class to assert that two features have matching values\n- * without regarding their IDs or confidence scores.\n+ * Utility class to assert that a feature or features have\n+ * expected values.\n  */\n-final class FeatureAssert {\n+public final class FeatureAssert {\n     private FeatureAssert() {}\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2ODUwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405268507", "bodyText": "We'd talked about calling this like TestPortion or TextSelection or TextSection or TextSegment or something ... now that it has the positioning info embedded, worth revisiting? Or no?", "author": "jamesonwilliams", "createdAt": "2020-04-08T05:37:24Z", "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {", "originalCommit": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MzA0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405273048", "bodyText": "Hmm, are you talking about renaming the TextFeature class? It is still a feature, so I would like to keep that word in the name. I believe our old discussion was regarding the name of TargetText class, but that on longer exists.", "author": "raphkim", "createdAt": "2020-04-08T05:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2ODUwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2OTUwNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405269504", "bodyText": "So the targetText starts at startIndex within a (>= size) input text?", "author": "jamesonwilliams", "createdAt": "2020-04-08T05:40:25Z", "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {\n-    private final TargetText target;\n+    private final String targetText;\n+    private final int startIndex;\n+    private final int length;\n \n     TextFeature(Builder<?, ? extends TextFeature<T>, T> builder) {\n         super(builder);\n-        this.target = builder.getTarget();\n+        this.targetText = builder.getTargetText();\n+        this.startIndex = builder.getStartIndex();\n+        this.length = targetText.length();\n     }\n \n     /**\n-     * Gets the target text and associated index.\n-     * @return the target text\n+     * Gets the target text to which this feature applies.\n+     * @return the target portion of the input text\n      */\n     @NonNull\n-    public final TargetText getTarget() {\n-        return target;\n+    public final String getTargetText() {\n+        return targetText;\n+    }\n+\n+    /**\n+     * Gets the starting position of the target text\n+     * with respect to the full input text.", "originalCommit": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MTk4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405271988", "bodyText": "yep!", "author": "raphkim", "createdAt": "2020-04-08T05:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2OTUwNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "31018d8a4fb366ac9e5d9a191a033cd0f2e4b7cf", "url": "https://github.com/aws-amplify/amplify-android/commit/31018d8a4fb366ac9e5d9a191a033cd0f2e4b7cf", "message": "Move FeatureAssert to testutils module", "committedDate": "2020-04-08T06:07:48Z", "type": "commit"}, {"oid": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab", "url": "https://github.com/aws-amplify/amplify-android/commit/facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into feature-assert", "committedDate": "2020-04-08T06:10:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0MTgyNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405441826", "bodyText": "Seems before your time.", "author": "jpignata", "createdAt": "2020-04-08T11:05:23Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "diffHunk": "@@ -168,17 +165,24 @@ public void testNegativeSentimentDetection() throws Exception {\n      */\n     @Test\n     public void testKeyPhraseDetection() throws Exception {\n+        final String sampleText = \"My mama always said life was like a box of chocolates.\";", "originalCommit": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTk2Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405449962", "bodyText": "Idle thought: Does Comprehend provide a guarantee around what it considers a \"key phrase?\" Will we regret coupling our test to whatever Comprehend's models return for a given sentence. For example, in the future, could Comprehend omit articles from key phrases and just return the noun? Perhaps the answer is, \"idk? We'd just update the test.\"", "author": "jpignata", "createdAt": "2020-04-08T11:21:56Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "diffHunk": "@@ -168,17 +165,24 @@ public void testNegativeSentimentDetection() throws Exception {\n      */\n     @Test\n     public void testKeyPhraseDetection() throws Exception {\n+        final String sampleText = \"My mama always said life was like a box of chocolates.\";\n+\n         // Interpret sample text and assert non-null result\n         InterpretResult result = predictions.interpret(\n-                Assets.readAsString(\"sample-text-en.txt\"),\n+                sampleText,\n                 InterpretOptions.defaults()\n         );\n         assertNotNull(result);\n \n-        // Assert detected key phrases are not empty\n-        List<KeyPhrase> keyPhrases = result.getKeyPhrases();\n-        assertNotNull(keyPhrases);\n-        assertFalse(keyPhrases.isEmpty());\n+        // Assert key phrase detection\n+        List<KeyPhrase> actual = result.getKeyPhrases();\n+        List<String> expected = Arrays.asList(\n+                \"My mama\",\n+                \"life\",\n+                \"a box\",", "originalCommit": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2NDgwNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405664805", "bodyText": "That's my approach for now haha. We'll keep this the way is until the tests break -> update the tests. If it becomes a semi-frequent enough issue, we will revisit to see if we can have a \"snapshot\" of the comprehend model", "author": "raphkim", "createdAt": "2020-04-08T16:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTk2Mg=="}], "type": "inlineReview", "revised_code": null}]}