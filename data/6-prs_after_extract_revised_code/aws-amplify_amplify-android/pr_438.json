{"pr_number": 438, "pr_title": "[DataStore] query API changes with pagination support", "pr_createdAt": "2020-05-07T22:00:03Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/438", "timeline": [{"oid": "caae22f77ee2fddc8fe3d0df2b20196dbe539f83", "url": "https://github.com/aws-amplify/amplify-android/commit/caae22f77ee2fddc8fe3d0df2b20196dbe539f83", "message": "query pagination api and pagination groundwork", "committedDate": "2020-05-07T19:17:10Z", "type": "commit"}, {"oid": "6ac9206c1c491fc68ce2aefe13238f191c561d59", "url": "https://github.com/aws-amplify/amplify-android/commit/6ac9206c1c491fc68ce2aefe13238f191c561d59", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination", "committedDate": "2020-05-07T19:23:06Z", "type": "commit"}, {"oid": "161a0411f4bc857ee2345dda237ca4d6a41bdcb9", "url": "https://github.com/aws-amplify/amplify-android/commit/161a0411f4bc857ee2345dda237ca4d6a41bdcb9", "message": "fix null check", "committedDate": "2020-05-07T19:32:15Z", "type": "commit"}, {"oid": "ce4c52d3caf566bdff9cca80537fc9e691d69136", "url": "https://github.com/aws-amplify/amplify-android/commit/ce4c52d3caf566bdff9cca80537fc9e691d69136", "message": "fix checkstyle errors and improve documentation", "committedDate": "2020-05-07T21:57:50Z", "type": "commit"}, {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "url": "https://github.com/aws-amplify/amplify-android/commit/0031a4933619e7b963d2564fe88e4d10ad4e92b2", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination", "committedDate": "2020-05-07T21:58:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1ODYwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421858601", "bodyText": "Maybe, matchAll(), to disambiguate from \"apply all of the options\"?\nElsewhere, we use WhateverOptions.defaults(), too. That's become sort of a convention at this point.", "author": "jamesonwilliams", "createdAt": "2020-05-07T23:52:50Z", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java", "diffHunk": "@@ -177,25 +178,24 @@ public void terminate() throws DataStoreException {\n      * @throws DataStoreException On any failure to query storage adapter\n      */\n     public <T extends Model> List<T> query(@NonNull Class<T> modelClass) throws DataStoreException {\n-        //noinspection ConstantConditions\n-        return query(modelClass, null);\n+        return query(modelClass, QueryOptions.all());", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99e050295c6a69cdb395e7da65363fdb2f6cbab9", "chunk": "diff --git a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java\nindex b92fb6b3..8de0ef9d 100644\n--- a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java\n+++ b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java\n\n@@ -178,7 +179,7 @@ public final class SynchronousStorageAdapter {\n      * @throws DataStoreException On any failure to query storage adapter\n      */\n     public <T extends Model> List<T> query(@NonNull Class<T> modelClass) throws DataStoreException {\n-        return query(modelClass, QueryOptions.all());\n+        return query(modelClass, Where.matchesAll());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTM3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421859376", "bodyText": "This could also be expressed as where(Todo.ID.eq(todo.getId()), right?\nWe could potentially make Where into a class name, to avoid the static import.\nfinal class Where {\n    private Where() {}\n    \n    QueryOptions id(String matchingId) {\n        return QueryOptions.byId(matchingId);\n    }\n}", "author": "jamesonwilliams", "createdAt": "2020-05-07T23:55:28Z", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "diffHunk": "@@ -70,7 +71,7 @@ public void saveModelWithAllTypesThenQuery() throws DataStoreException {\n         final Todo todo = createTestTodoModel();\n         this.adapter.save(todo);\n \n-        final List<Todo> result = this.adapter.query(Todo.class, Todo.ID.eq(todo.getId()));\n+        final List<Todo> result = this.adapter.query(Todo.class, byId(todo.getId()));", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzQ2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421957465", "bodyText": "I like the concept of the Where as a class to avoid the static imports (even though I'm torn about the reasons why the Java community perceives static imports a something generally bad).\nI updated the readme with more details and will push an update to this PR introducing this way to build the DSL.", "author": "drochetti", "createdAt": "2020-05-08T06:07:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTM3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "99e050295c6a69cdb395e7da65363fdb2f6cbab9", "chunk": "diff --git a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\nindex 9196a5cd..29110402 100644\n--- a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\n+++ b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java\n\n@@ -71,7 +71,7 @@ public final class SQLiteStorageAdapterModelConverterTest {\n         final Todo todo = createTestTodoModel();\n         this.adapter.save(todo);\n \n-        final List<Todo> result = this.adapter.query(Todo.class, byId(todo.getId()));\n+        final List<Todo> result = this.adapter.query(Todo.class, Where.id(todo.getId()));\n         assertEquals(result.size(), 1);\n \n         final Todo queriedTodo = result.get(0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTI5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861295", "bodyText": "If it is not intended for these values to ever be null, I think you could use int instead of Integer, everywhere in the class.", "author": "jamesonwilliams", "createdAt": "2020-05-08T00:01:56Z", "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;\n+\n+    private final Integer page;\n+    private final Integer limit;\n+\n+    private QueryPaginationInput(@NonNull Integer page, @NonNull Integer limit) {\n+        this.page = page;\n+        this.limit = limit;", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29b09582a22f8c8a9b540369c3047240f262fb2d", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java b/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\nindex 79f68009..a0b3c2bf 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\n\n@@ -22,7 +22,7 @@ import java.util.Objects;\n /**\n  * A simple data structure that holds pagination information that can be applied queries.\n  */\n-public class QueryPaginationInput {\n+public final class QueryPaginationInput {\n \n     /**\n      * The default page size.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTU4MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861581", "bodyText": "Can we use the term \"page size\", instead of limit? \"limit\" is ambiguous. It would either be a max results, or a number of results per page. I guess here it means limit for each page.", "author": "jamesonwilliams", "createdAt": "2020-05-08T00:02:57Z", "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29b09582a22f8c8a9b540369c3047240f262fb2d", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java b/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\nindex 79f68009..a0b3c2bf 100644\n--- a/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\n+++ b/core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java\n\n@@ -22,7 +22,7 @@ import java.util.Objects;\n /**\n  * A simple data structure that holds pagination information that can be applied queries.\n  */\n-public class QueryPaginationInput {\n+public final class QueryPaginationInput {\n \n     /**\n      * The default page size.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MjQxNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421862414", "bodyText": "Can you uncomment it, and assert the non-null state, now that you have @NonNull? Also thank you for making this API improvement. The null-ness of this param has always bothered me.", "author": "jamesonwilliams", "createdAt": "2020-05-08T00:05:35Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapter.java", "diffHunk": "@@ -367,16 +370,16 @@ public synchronized void initialize(\n     @Override\n     public <T extends Model> void query(\n             @NonNull Class<T> itemClass,\n-            @Nullable QueryPredicate predicate,\n+            @NonNull QueryOptions options,\n             @NonNull Consumer<Iterator<T>> onSuccess,\n             @NonNull Consumer<DataStoreException> onError) {\n         Objects.requireNonNull(itemClass);\n-        // Objects.requireNonNull(predicate); It is not required!", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MzQ0NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421863445", "bodyText": "I like this style, but I'd change the method names for the pagination. To me, this would be more clear:\nWhere.allMatch().paginated(startAtPage(0).withPageSize(pageSize))\n\nOr:\nWhere.allMatch().paginated(intoPagesOfSize(pageSize).startingAtPage(0))\n\nOr:\nWhere.allMatch().paginated(intoPagesSized(pageSize).startingAtPage(0))", "author": "jamesonwilliams", "createdAt": "2020-05-08T00:09:05Z", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java", "diffHunk": "@@ -237,10 +252,57 @@ public void queryWithMaliciousPredicates() throws DataStoreException {\n         adapter.save(jane);\n \n         QueryPredicate predicate = BlogOwner.NAME.eq(\"Jane; DROP TABLE Person; --\");\n-        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, predicate);\n+        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, where(predicate));\n         assertTrue(resultOfMaliciousQuery.isEmpty());\n \n         final List<BlogOwner> resultAfterMaliciousQuery = adapter.query(BlogOwner.class);\n         assertTrue(resultAfterMaliciousQuery.contains(jane));\n     }\n+\n+    @Test\n+    public void queryWithPaginationWithCustomValues() throws DataStoreException {\n+        final int pageSize = 10;\n+        createBlogOwnerRecords(pageSize * 2);\n+\n+        List<BlogOwner> result = adapter.query(\n+            BlogOwner.class,\n+            all().paginated(page(0).withLimit(pageSize))", "originalCommit": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1ODg2Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421958867", "bodyText": "I like your suggestion better than the current implementation. My only concern is that JS went GA with the page/limit pagination API. I'm not strongly opposed to change it into something more expressive, but I'd say we should align iOS and Android in that case.", "author": "drochetti", "createdAt": "2020-05-08T06:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MzQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "99e050295c6a69cdb395e7da65363fdb2f6cbab9", "chunk": "diff --git a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java\nindex 3b0a62f1..e51813db 100644\n--- a/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java\n+++ b/aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java\n\n@@ -252,7 +249,7 @@ public final class SQLiteStorageAdapterQueryTest {\n         adapter.save(jane);\n \n         QueryPredicate predicate = BlogOwner.NAME.eq(\"Jane; DROP TABLE Person; --\");\n-        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, where(predicate));\n+        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, Where.matches(predicate));\n         assertTrue(resultOfMaliciousQuery.isEmpty());\n \n         final List<BlogOwner> resultAfterMaliciousQuery = adapter.query(BlogOwner.class);\n"}}, {"oid": "29b09582a22f8c8a9b540369c3047240f262fb2d", "url": "https://github.com/aws-amplify/amplify-android/commit/29b09582a22f8c8a9b540369c3047240f262fb2d", "message": "fix pagination bindings and add missing javadoc", "committedDate": "2020-05-08T03:15:39Z", "type": "commit"}, {"oid": "b468824a157c93bafe3a580bc8db77cfb44c1ad3", "url": "https://github.com/aws-amplify/amplify-android/commit/b468824a157c93bafe3a580bc8db77cfb44c1ad3", "message": "query dsl updates", "committedDate": "2020-05-08T07:28:13Z", "type": "commit"}, {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9", "url": "https://github.com/aws-amplify/amplify-android/commit/99e050295c6a69cdb395e7da65363fdb2f6cbab9", "message": "fix tests", "committedDate": "2020-05-08T07:58:51Z", "type": "commit"}, {"oid": "a4304445649495b4eaa4a58372de7e4db46e1491", "url": "https://github.com/aws-amplify/amplify-android/commit/a4304445649495b4eaa4a58372de7e4db46e1491", "message": "add missing equals, hashCode and toString methods", "committedDate": "2020-05-08T20:24:06Z", "type": "commit"}, {"oid": "758cb7a4b8b52ce752ea344f07a776cade54076e", "url": "https://github.com/aws-amplify/amplify-android/commit/758cb7a4b8b52ce752ea344f07a776cade54076e", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination", "committedDate": "2020-05-08T20:31:10Z", "type": "commit"}, {"oid": "1bdf0084a12d11056eeaa30ee8061d40ea64c49b", "url": "https://github.com/aws-amplify/amplify-android/commit/1bdf0084a12d11056eeaa30ee8061d40ea64c49b", "message": "fix checkstyle static import rule", "committedDate": "2020-05-08T21:04:42Z", "type": "commit"}]}