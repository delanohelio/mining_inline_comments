{"pr_number": 798, "pr_title": "feat(Auth): Add user attribute operations (Fetch/Update/Verify/Confirm user attributes)", "pr_createdAt": "2020-09-04T07:14:16Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/798", "timeline": [{"oid": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "url": "https://github.com/aws-amplify/amplify-android/commit/a6398d909ce35ea7f9a9e5394143034e068a3c0c", "message": "Add user attribute operations", "committedDate": "2020-09-04T07:04:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4OTg0MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483689840", "bodyText": "*Attributes", "author": "TrekSoft", "createdAt": "2020-09-04T15:28:09Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -260,6 +262,66 @@ void confirmResetPassword(\n             @NonNull Action onSuccess,\n             @NonNull Consumer<AuthException> onError);\n \n+    /**\n+     * Fetch user attributes.\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    );\n+\n+    /**\n+     * Update a single user attribute.\n+     * @param attribute Attribute to be updated\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Update multiple user attributes.\n+     * @param attributes Attribute to be updated", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java b/core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java\nindex ce5c4f1c..5dc07c7b 100644\n--- a/core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java\n+++ b/core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java\n\n@@ -285,7 +285,7 @@ public interface AuthCategoryBehavior {\n \n     /**\n      * Update multiple user attributes.\n-     * @param attributes Attribute to be updated\n+     * @param attributes Attributes to be updated\n      * @param onSuccess Success callback\n      * @param onError Error callback\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MzgxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483693818", "bodyText": "*of an update user attribute operation", "author": "TrekSoft", "createdAt": "2020-09-04T15:32:35Z", "path": "core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.result;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.result.step.AuthNextUpdateAttributeStep;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Wraps the result of a user attribute operation.\n+ */\n+public class AuthUpdateAttributeResult {\n+    private final boolean isUpdated;\n+    private final AuthNextUpdateAttributeStep nextStep;\n+\n+    /**\n+     * Wraps the result of a user attribute operation.", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\nindex 88df3c41..ee006542 100644\n--- a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n+++ b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n\n@@ -23,17 +23,17 @@ import com.amplifyframework.auth.result.step.AuthNextUpdateAttributeStep;\n import java.util.Objects;\n \n /**\n- * Wraps the result of a user attribute operation.\n+ * Wraps the result of an update user attribute operation.\n  */\n public class AuthUpdateAttributeResult {\n     private final boolean isUpdated;\n     private final AuthNextUpdateAttributeStep nextStep;\n \n     /**\n-     * Wraps the result of a user attribute operation.\n+     * Wraps the result of an update user attribute operation.\n      * @param isUpdated True if the user attribute has now been updated, False otherwise.\n      *                  Check {@link #getNextStep()} for details on additional steps that may be required.\n-     * @param nextStep Details about the next step in the sign up process (or whether the flow is now done).\n+     * @param nextStep Details about the next step in the update attribute process (or whether the flow is now done).\n      */\n     public AuthUpdateAttributeResult(boolean isUpdated, @NonNull AuthNextUpdateAttributeStep nextStep) {\n         this.isUpdated = isUpdated;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NDEyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483694123", "bodyText": "*in the update attribute process", "author": "TrekSoft", "createdAt": "2020-09-04T15:32:56Z", "path": "core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.result;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.result.step.AuthNextUpdateAttributeStep;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Wraps the result of a user attribute operation.\n+ */\n+public class AuthUpdateAttributeResult {\n+    private final boolean isUpdated;\n+    private final AuthNextUpdateAttributeStep nextStep;\n+\n+    /**\n+     * Wraps the result of a user attribute operation.\n+     * @param isUpdated True if the user attribute has now been updated, False otherwise.\n+     *                  Check {@link #getNextStep()} for details on additional steps that may be required.\n+     * @param nextStep Details about the next step in the sign up process (or whether the flow is now done).", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\nindex 88df3c41..ee006542 100644\n--- a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n+++ b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n\n@@ -23,17 +23,17 @@ import com.amplifyframework.auth.result.step.AuthNextUpdateAttributeStep;\n import java.util.Objects;\n \n /**\n- * Wraps the result of a user attribute operation.\n+ * Wraps the result of an update user attribute operation.\n  */\n public class AuthUpdateAttributeResult {\n     private final boolean isUpdated;\n     private final AuthNextUpdateAttributeStep nextStep;\n \n     /**\n-     * Wraps the result of a user attribute operation.\n+     * Wraps the result of an update user attribute operation.\n      * @param isUpdated True if the user attribute has now been updated, False otherwise.\n      *                  Check {@link #getNextStep()} for details on additional steps that may be required.\n-     * @param nextStep Details about the next step in the sign up process (or whether the flow is now done).\n+     * @param nextStep Details about the next step in the update attribute process (or whether the flow is now done).\n      */\n     public AuthUpdateAttributeResult(boolean isUpdated, @NonNull AuthNextUpdateAttributeStep nextStep) {\n         this.isUpdated = isUpdated;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NjM5Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483696396", "bodyText": "*in the update attribute flow", "author": "TrekSoft", "createdAt": "2020-09-04T15:35:23Z", "path": "core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.result.step;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.AuthCodeDeliveryDetails;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * This object represents all details around the next step in the user attribute update process. It holds\n+ * an instance of the {@link AuthUpdateAttributeStep} enum to denote the step itself and supplements it with\n+ * additional details which can optionally accompany it. If there is no next step, {@link #getUpdateAttributeStep()}\n+ * will have a value of DONE.\n+ */\n+public final class AuthNextUpdateAttributeStep {\n+    private final AuthUpdateAttributeStep updateAttributeStep;\n+    private final Map<String, String> additionalInfo;\n+    private final AuthCodeDeliveryDetails codeDeliveryDetails;\n+\n+    /**\n+     * Gives details on the next step, if there is one, in the sign in flow.", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java b/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\nindex b0702931..800c87ad 100644\n--- a/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\n+++ b/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\n\n@@ -37,7 +37,7 @@ public final class AuthNextUpdateAttributeStep {\n     private final AuthCodeDeliveryDetails codeDeliveryDetails;\n \n     /**\n-     * Gives details on the next step, if there is one, in the sign in flow.\n+     * Gives details on the next step, if there is one, in the update attribute flow.\n      * @param updateAttributeStep the next step in the user attribute update flow (could be optional or required)\n      * @param additionalInfo possible extra info to go with the next step (refer to plugin documentation)\n      * @param codeDeliveryDetails Details about how a code was sent, if relevant to the current step\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NzE5MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483697190", "bodyText": "*include updateAttributeStep", "author": "TrekSoft", "createdAt": "2020-09-04T15:36:19Z", "path": "core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.result.step;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.AuthCodeDeliveryDetails;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * This object represents all details around the next step in the user attribute update process. It holds\n+ * an instance of the {@link AuthUpdateAttributeStep} enum to denote the step itself and supplements it with\n+ * additional details which can optionally accompany it. If there is no next step, {@link #getUpdateAttributeStep()}\n+ * will have a value of DONE.\n+ */\n+public final class AuthNextUpdateAttributeStep {\n+    private final AuthUpdateAttributeStep updateAttributeStep;\n+    private final Map<String, String> additionalInfo;\n+    private final AuthCodeDeliveryDetails codeDeliveryDetails;\n+\n+    /**\n+     * Gives details on the next step, if there is one, in the sign in flow.\n+     * @param updateAttributeStep the next step in the user attribute update flow (could be optional or required)\n+     * @param additionalInfo possible extra info to go with the next step (refer to plugin documentation)\n+     * @param codeDeliveryDetails Details about how a code was sent, if relevant to the current step\n+     */\n+    public AuthNextUpdateAttributeStep(\n+            @NonNull AuthUpdateAttributeStep updateAttributeStep,\n+            @NonNull Map<String, String> additionalInfo,\n+            @Nullable AuthCodeDeliveryDetails codeDeliveryDetails) {\n+        this.updateAttributeStep = Objects.requireNonNull(updateAttributeStep);\n+        this.additionalInfo = new HashMap<>();\n+        this.additionalInfo.putAll(Objects.requireNonNull(additionalInfo));\n+        this.codeDeliveryDetails = codeDeliveryDetails;\n+    }\n+\n+    /**\n+     * Returns the next step in the user attribute update flow (could be optional or required).\n+     * @return the next step in the user attribute update flow (could be optional or required)\n+     */\n+    @NonNull\n+    public AuthUpdateAttributeStep getUpdateAttributeStep() {\n+        return updateAttributeStep;\n+    }\n+\n+    /**\n+     * Returns possible extra info to go with the next step (refer to plugin documentation).\n+     * @return possible extra info to go with the next step (refer to plugin documentation)\n+     */\n+    @Nullable\n+    public Map<String, String> getAdditionalInfo() {\n+        return additionalInfo;\n+    }\n+\n+    /**\n+     * Details about how a code was sent, if relevant to the current step.\n+     * @return Details about how a code was sent, if relevant to the current step - null otherwise\n+     */\n+    @Nullable\n+    public AuthCodeDeliveryDetails getCodeDeliveryDetails() {\n+        return codeDeliveryDetails;\n+    }\n+\n+    /**\n+     * When overriding, be sure to include signInStep, additionalInfo, and codeDeliveryDetails in the hash.", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java b/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\nindex b0702931..800c87ad 100644\n--- a/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\n+++ b/core/src/main/java/com/amplifyframework/auth/result/step/AuthNextUpdateAttributeStep.java\n\n@@ -37,7 +37,7 @@ public final class AuthNextUpdateAttributeStep {\n     private final AuthCodeDeliveryDetails codeDeliveryDetails;\n \n     /**\n-     * Gives details on the next step, if there is one, in the sign in flow.\n+     * Gives details on the next step, if there is one, in the update attribute flow.\n      * @param updateAttributeStep the next step in the user attribute update flow (could be optional or required)\n      * @param additionalInfo possible extra info to go with the next step (refer to plugin documentation)\n      * @param codeDeliveryDetails Details about how a code was sent, if relevant to the current step\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwMjExMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483702112", "bodyText": "There's a problem here - if this condition isn't satisfied, neither success nor error will be called. Will a UserCodeDeliveryDetails be returned by AWSMobileClient for every kind of attribute, including those that don't need to be confirmed?\nIf not, we should figure out how to return a success result anyway. If it does and somehow it's returning a different attribute name than the one we submitted perhaps we need to return an error...", "author": "TrekSoft", "createdAt": "2020-09-04T15:41:37Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyOTc2OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483729769", "bodyText": "This is correct if there's a UserCodeDeliveryDetails object returned only for attributes that are being confirmed. If it is returned in an empty state or something like that for attributes that don't need confirmation this is wrong. Most attributes will simply be done after you call update attribute without needing a confirm state.", "author": "TrekSoft", "createdAt": "2020-09-04T16:28:51Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMDQ5Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483730497", "bodyText": "Again, this assumes all attributes are going to have codes sent which they don't - off the top of my head I only know of email and phone being verified with a code.", "author": "TrekSoft", "createdAt": "2020-09-04T16:29:41Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            }\n+                        }\n+                    } else {\n+                        onError.accept(new AuthException(\n+                                \"Code delivery failed\",", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMTMwMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483731300", "bodyText": "Same comments as above apply to this method", "author": "TrekSoft", "createdAt": "2020-09-04T16:30:38Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            }\n+                        }\n+                    } else {\n+                        onError.accept(new AuthException(\n+                                \"Code delivery failed\",\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+\n+                @Override\n+                public void onError(Exception error) {\n+                    onError.accept(new AuthException(\n+                            \"Failed to update user attribute\",\n+                            error,\n+                            \"See attached exception for more details\"\n+                            )\n+                    );\n+                }\n+            });\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMTg4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483731888", "bodyText": "Again, you need to handle the case where it doesn't equal it - perhaps returning an error if that's proper. But currently it'll just hang and never return a success or error callback if this condition is false.", "author": "TrekSoft", "createdAt": "2020-09-04T16:31:21Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            }\n+                        }\n+                    } else {\n+                        onError.accept(new AuthException(\n+                                \"Code delivery failed\",\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+\n+                @Override\n+                public void onError(Exception error) {\n+                    onError.accept(new AuthException(\n+                            \"Failed to update user attribute\",\n+                            error,\n+                            \"See attached exception for more details\"\n+                            )\n+                    );\n+                }\n+            });\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes,\n+            @NonNull Consumer<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        for (AuthUserAttribute userAttribute : attributes) {\n+            Map<String, String> userAttributeMap = new HashMap<>();\n+            String userAttributeKeyString = userAttribute.getKey().getKeyString();\n+            String userAttributeValue = userAttribute.getValue();\n+            userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n+\n+            awsMobileClient.updateUserAttributes(\n+                    userAttributeMap,\n+                    new Callback<List<UserCodeDeliveryDetails>>() {\n+                        @Override\n+                        public void onResult(List<UserCodeDeliveryDetails> result) {\n+                            if (result != null) {\n+                                for (UserCodeDeliveryDetails details : result) {\n+                                    if (details.getAttributeName().equals(userAttributeKeyString)) {\n+                                        Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                                new HashMap<>();\n+                                        resultMap.put(new AuthUserAttributeKey(userAttributeKeyString),\n+                                                new AuthUpdateAttributeResult(\n+                                                        true,\n+                                                        new AuthNextUpdateAttributeStep(\n+                                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                                Collections.emptyMap(),\n+                                                                convertCodeDeliveryDetails(details))\n+                                                ));\n+\n+                                        onSuccess.accept(resultMap);\n+                                    }\n+                                }\n+                            } else {\n+                                onError.accept(new AuthException(\n+                                        \"Code delivery failed\",\n+                                        \"See attached exception for more details\"\n+                                ));\n+                            }\n+                        }\n+\n+                        @Override\n+                        public void onError(Exception error) {\n+                            onError.accept(new AuthException(\n+                                            \"Failed to update user attribute\",\n+                                            error,\n+                                            \"See attached exception for more details\"\n+                                    )\n+                            );\n+                        }\n+                    }\n+            );\n+        }\n+\n+    }\n+\n+    @Override\n+    public void resendUserAttributeConfirmationCode(\n+            @NonNull AuthUserAttributeKey attributeKey,\n+            @NonNull Consumer<AuthCodeDeliveryDetails> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        String attributeName = attributeKey.getKeyString();\n+        awsMobileClient.verifyUserAttribute(attributeName, new Callback<UserCodeDeliveryDetails>() {\n+            @Override\n+            public void onResult(UserCodeDeliveryDetails result) {\n+                if (result.getAttributeName().equals(attributeName)) {", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMjMxNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r483732315", "bodyText": "Remove the word \"update\"", "author": "TrekSoft", "createdAt": "2020-09-04T16:31:57Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttribute = new HashMap<>();\n+        userAttribute.put(\n+                attribute.getKey().getKeyString(),\n+                attribute.getValue()\n+        );\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttribute,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                @Override\n+                public void onResult(List<UserCodeDeliveryDetails> result) {\n+                    if (result != null) {\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            }\n+                        }\n+                    } else {\n+                        onError.accept(new AuthException(\n+                                \"Code delivery failed\",\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+\n+                @Override\n+                public void onError(Exception error) {\n+                    onError.accept(new AuthException(\n+                            \"Failed to update user attribute\",\n+                            error,\n+                            \"See attached exception for more details\"\n+                            )\n+                    );\n+                }\n+            });\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes,\n+            @NonNull Consumer<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        for (AuthUserAttribute userAttribute : attributes) {\n+            Map<String, String> userAttributeMap = new HashMap<>();\n+            String userAttributeKeyString = userAttribute.getKey().getKeyString();\n+            String userAttributeValue = userAttribute.getValue();\n+            userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n+\n+            awsMobileClient.updateUserAttributes(\n+                    userAttributeMap,\n+                    new Callback<List<UserCodeDeliveryDetails>>() {\n+                        @Override\n+                        public void onResult(List<UserCodeDeliveryDetails> result) {\n+                            if (result != null) {\n+                                for (UserCodeDeliveryDetails details : result) {\n+                                    if (details.getAttributeName().equals(userAttributeKeyString)) {\n+                                        Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                                new HashMap<>();\n+                                        resultMap.put(new AuthUserAttributeKey(userAttributeKeyString),\n+                                                new AuthUpdateAttributeResult(\n+                                                        true,\n+                                                        new AuthNextUpdateAttributeStep(\n+                                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                                Collections.emptyMap(),\n+                                                                convertCodeDeliveryDetails(details))\n+                                                ));\n+\n+                                        onSuccess.accept(resultMap);\n+                                    }\n+                                }\n+                            } else {\n+                                onError.accept(new AuthException(\n+                                        \"Code delivery failed\",\n+                                        \"See attached exception for more details\"\n+                                ));\n+                            }\n+                        }\n+\n+                        @Override\n+                        public void onError(Exception error) {\n+                            onError.accept(new AuthException(\n+                                            \"Failed to update user attribute\",\n+                                            error,\n+                                            \"See attached exception for more details\"\n+                                    )\n+                            );\n+                        }\n+                    }\n+            );\n+        }\n+\n+    }\n+\n+    @Override\n+    public void resendUserAttributeConfirmationCode(\n+            @NonNull AuthUserAttributeKey attributeKey,\n+            @NonNull Consumer<AuthCodeDeliveryDetails> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        String attributeName = attributeKey.getKeyString();\n+        awsMobileClient.verifyUserAttribute(attributeName, new Callback<UserCodeDeliveryDetails>() {\n+            @Override\n+            public void onResult(UserCodeDeliveryDetails result) {\n+                if (result.getAttributeName().equals(attributeName)) {\n+                    onSuccess.accept(convertCodeDeliveryDetails(result));\n+                }\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to resend user attribute confirmation code\",\n+                        error,\n+                        \"See attached exception for more details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void confirmUserAttribute(\n+            @NonNull AuthUserAttributeKey attributeKey,\n+            @NonNull String confirmationCode,\n+            @NonNull Action onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        // Confirm update user attribute\n+        awsMobileClient.confirmUpdateUserAttribute(\n+                attributeKey.getKeyString(),\n+                confirmationCode,\n+                new Callback<Void>() {\n+                    @Override\n+                    public void onResult(Void result) {\n+                        onSuccess.call();\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        onError.accept(new AuthException(\n+                                \"An error occurred confirming update user attribute\",", "originalCommit": "a6398d909ce35ea7f9a9e5394143034e068a3c0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebef1794eef99cc180d2356d47805c75be386d5e", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cdf84e57..391ef8a7 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -727,47 +727,69 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @NonNull Consumer<AuthException> onError\n     ) {\n \n-        Map<String, String> userAttribute = new HashMap<>();\n-        userAttribute.put(\n-                attribute.getKey().getKeyString(),\n-                attribute.getValue()\n-        );\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n \n         awsMobileClient.updateUserAttributes(\n-                userAttribute,\n+                userAttributeMap,\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n-                @Override\n-                public void onResult(List<UserCodeDeliveryDetails> result) {\n-                    if (result != null) {\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                String attributeNameResult = details.getAttributeName();\n+\n+                                if (\"email\".equals(attributeNameResult) ||\n+                                        \"phone_number\".equals(attributeNameResult)) {\n+                                    if (attributeNameResult.equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                    AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                    Collections.emptyMap(),\n+                                                    convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned a wrong attribute name\",\n+                                                \"See attached exception for more details\"));\n+                                    }\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an undefined attribute name\",\n+                                            \"See attached exception for more details\"\n+                                    ));\n+                                }\n                             }\n+                        } else if (result == null && !\"email\".equals(userAttributeKeyString) &&\n+                                !\"phone_number\".equals(userAttributeKeyString)) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Code delivery failed\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n-                    } else {\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n                         onError.accept(new AuthException(\n-                                \"Code delivery failed\",\n+                                \"Failed to update user attributes\",\n+                                error,\n                                 \"See attached exception for more details\"\n                         ));\n                     }\n                 }\n-\n-                @Override\n-                public void onError(Exception error) {\n-                    onError.accept(new AuthException(\n-                            \"Failed to update user attribute\",\n-                            error,\n-                            \"See attached exception for more details\"\n-                            )\n-                    );\n-                }\n-            });\n+        );\n     }\n \n     @Override\n"}}, {"oid": "ebef1794eef99cc180d2356d47805c75be386d5e", "url": "https://github.com/aws-amplify/amplify-android/commit/ebef1794eef99cc180d2356d47805c75be386d5e", "message": "Resolve code delivery conditions", "committedDate": "2020-09-08T20:51:15Z", "type": "commit"}, {"oid": "01de60a629630dd1bfc2d7da620901e412ee97f4", "url": "https://github.com/aws-amplify/amplify-android/commit/01de60a629630dd1bfc2d7da620901e412ee97f4", "message": "Check if user attribute need code delivery to be updated", "committedDate": "2020-09-08T21:13:24Z", "type": "commit"}, {"oid": "900bc75a5a3b247fdd2b39f170ca11667661f2da", "url": "https://github.com/aws-amplify/amplify-android/commit/900bc75a5a3b247fdd2b39f170ca11667661f2da", "message": "remove hard code", "committedDate": "2020-09-10T18:15:29Z", "type": "commit"}, {"oid": "00a073516165fca318e68864f133773d22f70e7a", "url": "https://github.com/aws-amplify/amplify-android/commit/00a073516165fca318e68864f133773d22f70e7a", "message": "remove unnecessary error message", "committedDate": "2020-09-10T18:39:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxODI5OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r485218299", "bodyText": "You could use for (Map.Entry<String, String> entry : result.entrySet()) and then access them via entry.getKey() and entry.getValue().", "author": "jamesonwilliams", "createdAt": "2020-09-08T21:56:49Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,274 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {", "originalCommit": "01de60a629630dd1bfc2d7da620901e412ee97f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "900bc75a5a3b247fdd2b39f170ca11667661f2da", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 62ebc4a2..cfdd84ae 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -741,8 +741,7 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                             for (UserCodeDeliveryDetails details : result) {\n                                 String attributeNameResult = details.getAttributeName();\n \n-                                if (\"email\".equals(attributeNameResult) ||\n-                                        \"phone_number\".equals(attributeNameResult)) {\n+                                if (isUserAttributeVerifiedByCode(userAttributeKeyString)) {\n                                     if (attributeNameResult.equals(userAttributeKeyString)) {\n                                         onSuccess.accept(new AuthUpdateAttributeResult(\n                                                 true,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxODQ2Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r485218463", "bodyText": "Under what common scenarios would the fetch fail? Perhaps if the user has not yet signed in?", "author": "jamesonwilliams", "createdAt": "2020-09-08T21:57:15Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,274 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (String userAttributeKey : result.keySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(userAttributeKey),\n+                            result.get(userAttributeKey)\n+                    ));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"See attached exception for details\"", "originalCommit": "01de60a629630dd1bfc2d7da620901e412ee97f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMjM0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r487332349", "bodyText": "Yes, exactly due to CognitoNotAuthorizedException", "author": "changxu0306", "createdAt": "2020-09-11T23:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxODQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MTUxNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r488151516", "bodyText": "@changxu0306 If that's true, can you update the recovery suggestion? \"Ensure that you're logged in.\" Could be more helpful than \"See attached exception for details.\"", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxODQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "900bc75a5a3b247fdd2b39f170ca11667661f2da", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 62ebc4a2..cfdd84ae 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -741,8 +741,7 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                             for (UserCodeDeliveryDetails details : result) {\n                                 String attributeNameResult = details.getAttributeName();\n \n-                                if (\"email\".equals(attributeNameResult) ||\n-                                        \"phone_number\".equals(attributeNameResult)) {\n+                                if (isUserAttributeVerifiedByCode(userAttributeKeyString)) {\n                                     if (attributeNameResult.equals(userAttributeKeyString)) {\n                                         onSuccess.accept(new AuthUpdateAttributeResult(\n                                                 true,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2ODU2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r487168565", "bodyText": "It is better practice to write:\nif (definitelyNotNull.equals(possiblyNull)) {\n    // No NullPointerException!\n}\nThan:\nif (possiblyNull.equals(definitelyNotNul)) {\n    // Uh oh, might have NPE\n}\nHere, I think AuthUserAttributeKey.phoneNumber().getKeyString() is always non null -- but what about userAttributeKey?\n(Same comment for if check above)\n\nOther thought -- you could do like:\nList<String> codeVerifiedAttributeKeys = Arrays.asList(\n    AuthUserAttributeKey.phoneNumber().getKeyString(),\n    AuthUserAttributeKey.email().getKeyString()\n);\nreturn codeVerifiedAttributeKeys.contains(/* provided */ userAttributeKey);\n4 lines instead of 10 \ud83e\udd37\u200d\u2642\ufe0f", "author": "jamesonwilliams", "createdAt": "2020-09-11T16:51:55Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -1227,4 +1196,16 @@ private AuthCodeDeliveryDetails convertCodeDeliveryDetails(UserCodeDeliveryDetai\n                     details.getAttributeName())\n             : null;\n     }\n+\n+    private boolean isUserAttributeVerifiedByCode(String userAttributeKey) {\n+        if (userAttributeKey.equals(AuthUserAttributeKey.email().getKeyString())) {\n+            return true;\n+        }\n+\n+        if (userAttributeKey.equals(AuthUserAttributeKey.phoneNumber().getKeyString())) {", "originalCommit": "900bc75a5a3b247fdd2b39f170ca11667661f2da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE4NzE2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r487187164", "bodyText": "I got your idea. Yeah I should always avoid any possible NPE. \ud83d\ude2d", "author": "changxu0306", "createdAt": "2020-09-11T17:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2ODU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "19c7f3b2523669e16224b0f76a73fcd758f51269", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex cfdd84ae..542e6d9d 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -1197,15 +1229,34 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             : null;\n     }\n \n-    private boolean isUserAttributeVerifiedByCode(String userAttributeKey) {\n-        if (userAttributeKey.equals(AuthUserAttributeKey.email().getKeyString())) {\n-            return true;\n-        }\n-\n-        if (userAttributeKey.equals(AuthUserAttributeKey.phoneNumber().getKeyString())) {\n-            return true;\n-        }\n+    private boolean isValidUserAttribute(AuthUserAttributeKey userAttributeKey) {\n+        List<AuthUserAttributeKey> validUserAttributeKeys = Arrays.asList(\n+                AuthUserAttributeKey.phoneNumber(),\n+                AuthUserAttributeKey.email(),\n+                AuthUserAttributeKey.address(),\n+                AuthUserAttributeKey.birthdate(),\n+                AuthUserAttributeKey.familyName(),\n+                AuthUserAttributeKey.gender(),\n+                AuthUserAttributeKey.middleName(),\n+                AuthUserAttributeKey.givenName(),\n+                AuthUserAttributeKey.locale(),\n+                AuthUserAttributeKey.nickname(),\n+                AuthUserAttributeKey.picture(),\n+                AuthUserAttributeKey.preferredUsername(),\n+                AuthUserAttributeKey.profile(),\n+                AuthUserAttributeKey.updatedAt(),\n+                AuthUserAttributeKey.website(),\n+                AuthUserAttributeKey.zoneInfo(),\n+                AuthUserAttributeKey.name()\n+        );\n+        return validUserAttributeKeys.contains(userAttributeKey);\n+    }\n \n-        return false;\n+    private boolean isUserAttributeVerifiedByCode(AuthUserAttributeKey userAttributeKey) {\n+        List<AuthUserAttributeKey> codeVerifiedAttributeKeys = Arrays.asList(\n+                AuthUserAttributeKey.phoneNumber(),\n+                AuthUserAttributeKey.email()\n+        );\n+        return codeVerifiedAttributeKeys.contains(userAttributeKey);\n     }\n }\n"}}, {"oid": "19c7f3b2523669e16224b0f76a73fcd758f51269", "url": "https://github.com/aws-amplify/amplify-android/commit/19c7f3b2523669e16224b0f76a73fcd758f51269", "message": "Recognize invalid user attributes", "committedDate": "2020-09-14T18:21:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MjEwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r488152101", "bodyText": "Will this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, String> userAttributeMap = new HashMap<>();\n          \n          \n            \n                    String userAttributeKeyString = attribute.getKey().getKeyString();\n          \n          \n            \n                    String userAttributeValue = attribute.getValue();\n          \n          \n            \n                    userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n          \n          \n            \n            \n          \n          \n            \n                    awsMobileClient.updateUserAttributes(\n          \n          \n            \n                            userAttributeMap,\n          \n          \n            \n                    awsMobileClient.updateUserAttributes(\n          \n          \n            \n                            Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:55:33Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,274 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttributeMap,", "originalCommit": "19c7f3b2523669e16224b0f76a73fcd758f51269", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15127d7fa9cb3e58004bd2447acb63dcd1ded555", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 542e6d9d..96b4623e 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -736,61 +736,38 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n                     @Override\n                     public void onResult(List<UserCodeDeliveryDetails> result) {\n-                        if (result != null) {\n-                            if (isValidUserAttribute(attribute.getKey())) {\n-                                if (isUserAttributeVerifiedByCode(attribute.getKey())) {\n-                                    for (UserCodeDeliveryDetails details : result) {\n-                                        if (details.getAttributeName().equals(userAttributeKeyString)) {\n-                                            onSuccess.accept(new AuthUpdateAttributeResult(\n-                                                    true,\n-                                                    new AuthNextUpdateAttributeStep(\n-                                                            AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                            Collections.emptyMap(),\n-                                                            convertCodeDeliveryDetails(details))\n-                                            ));\n-                                        } else {\n-                                            onError.accept(new AuthException(\n-                                                    \"Returned an incorrect attribute name\",\n-                                                    \"See attached exception for more details\"\n-                                            ));\n-                                        }\n+                        if (isValidUserAttribute(attribute.getKey())) {\n+                            if (isUserAttributeVerifiedByCode(attribute.getKey())) {\n+                                for (UserCodeDeliveryDetails details : result) {\n+                                    if (details.getAttributeName().equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                        Collections.emptyMap(),\n+                                                        convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned an incorrect attribute name\",\n+                                                \"See attached exception for more details\"\n+                                        ));\n                                     }\n-                                } else {\n-                                    onError.accept(new AuthException(\n-                                            \"Code was returned with an attribute not verified by code\",\n-                                            \"See attached exception for more details\"\n-                                    ));\n-                                }\n-                            } else {\n-                                onError.accept(new AuthException(\n-                                        \"Invalid attribute name\",\n-                                        \"See attached exception for more details\"\n-                                ));\n-                            }\n-                        }\n-\n-                        if (result == null) {\n-                            if (isValidUserAttribute(attribute.getKey())) {\n-                                if (!isUserAttributeVerifiedByCode(attribute.getKey())) {\n-                                    onSuccess.accept(new AuthUpdateAttributeResult(\n-                                            true,\n-                                            new AuthNextUpdateAttributeStep(\n-                                                    AuthUpdateAttributeStep.DONE,\n-                                                    Collections.emptyMap(),\n-                                                    null)\n-                                    ));\n-                                } else {\n-                                    onError.accept(new AuthException(\n-                                            \"Code was not returned with an attribute verified by code\",\n-                                            \"See attached exception for more details\"\n-                                    ));\n                                 }\n                             } else {\n-                                onError.accept(new AuthException(\n-                                        \"Invalid attribute name\",\n-                                        \"See attached exception for more details\"\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.DONE,\n+                                                Collections.emptyMap(),\n+                                                null)\n                                 ));\n                             }\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Invalid attribute name\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n                     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MzMzMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r488153332", "bodyText": "Two possible strategies to reduce the nesting here:\n\nNegate all of the conditions, and \"return early,\" e.g.:\n\nif (!currentCondition) {\n    return;\n}\n// This code is now left by four columns\n\nAdd a helper method, where you can perform all of these checks in one place.\n\nif (!validUpdate(...)) {\n    return;\n}\n// This code is now left by 4 * k columns", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:57:54Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,274 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        Map<String, String> userAttributeMap = new HashMap<>();\n+        String userAttributeKeyString = attribute.getKey().getKeyString();\n+        String userAttributeValue = attribute.getValue();\n+        userAttributeMap.put(userAttributeKeyString, userAttributeValue);\n+\n+        awsMobileClient.updateUserAttributes(\n+                userAttributeMap,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result != null) {\n+                            if (isValidUserAttribute(attribute.getKey())) {\n+                                if (isUserAttributeVerifiedByCode(attribute.getKey())) {\n+                                    for (UserCodeDeliveryDetails details : result) {\n+                                        if (details.getAttributeName().equals(userAttributeKeyString)) {", "originalCommit": "19c7f3b2523669e16224b0f76a73fcd758f51269", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNzU5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r488427595", "bodyText": "Adopted solution 1! :-D", "author": "changxu0306", "createdAt": "2020-09-15T06:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1MzMzMg=="}], "type": "inlineReview", "revised_code": {"commit": "15127d7fa9cb3e58004bd2447acb63dcd1ded555", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 542e6d9d..96b4623e 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -736,61 +736,38 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n                     @Override\n                     public void onResult(List<UserCodeDeliveryDetails> result) {\n-                        if (result != null) {\n-                            if (isValidUserAttribute(attribute.getKey())) {\n-                                if (isUserAttributeVerifiedByCode(attribute.getKey())) {\n-                                    for (UserCodeDeliveryDetails details : result) {\n-                                        if (details.getAttributeName().equals(userAttributeKeyString)) {\n-                                            onSuccess.accept(new AuthUpdateAttributeResult(\n-                                                    true,\n-                                                    new AuthNextUpdateAttributeStep(\n-                                                            AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                            Collections.emptyMap(),\n-                                                            convertCodeDeliveryDetails(details))\n-                                            ));\n-                                        } else {\n-                                            onError.accept(new AuthException(\n-                                                    \"Returned an incorrect attribute name\",\n-                                                    \"See attached exception for more details\"\n-                                            ));\n-                                        }\n+                        if (isValidUserAttribute(attribute.getKey())) {\n+                            if (isUserAttributeVerifiedByCode(attribute.getKey())) {\n+                                for (UserCodeDeliveryDetails details : result) {\n+                                    if (details.getAttributeName().equals(userAttributeKeyString)) {\n+                                        onSuccess.accept(new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                        Collections.emptyMap(),\n+                                                        convertCodeDeliveryDetails(details))\n+                                        ));\n+                                    } else {\n+                                        onError.accept(new AuthException(\n+                                                \"Returned an incorrect attribute name\",\n+                                                \"See attached exception for more details\"\n+                                        ));\n                                     }\n-                                } else {\n-                                    onError.accept(new AuthException(\n-                                            \"Code was returned with an attribute not verified by code\",\n-                                            \"See attached exception for more details\"\n-                                    ));\n-                                }\n-                            } else {\n-                                onError.accept(new AuthException(\n-                                        \"Invalid attribute name\",\n-                                        \"See attached exception for more details\"\n-                                ));\n-                            }\n-                        }\n-\n-                        if (result == null) {\n-                            if (isValidUserAttribute(attribute.getKey())) {\n-                                if (!isUserAttributeVerifiedByCode(attribute.getKey())) {\n-                                    onSuccess.accept(new AuthUpdateAttributeResult(\n-                                            true,\n-                                            new AuthNextUpdateAttributeStep(\n-                                                    AuthUpdateAttributeStep.DONE,\n-                                                    Collections.emptyMap(),\n-                                                    null)\n-                                    ));\n-                                } else {\n-                                    onError.accept(new AuthException(\n-                                            \"Code was not returned with an attribute verified by code\",\n-                                            \"See attached exception for more details\"\n-                                    ));\n                                 }\n                             } else {\n-                                onError.accept(new AuthException(\n-                                        \"Invalid attribute name\",\n-                                        \"See attached exception for more details\"\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.DONE,\n+                                                Collections.emptyMap(),\n+                                                null)\n                                 ));\n                             }\n+                        } else {\n+                            onError.accept(new AuthException(\n+                                    \"Invalid attribute name\",\n+                                    \"See attached exception for more details\"\n+                            ));\n                         }\n                     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDA3Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r488154072", "bodyText": "Ah, there are a lot of these. Can we just move this responsibility to the AuthUserAttributeKey.values(), something like? Which returns a List?\nOr, maybe:\ntry {\n    AuthUserAttributeKey.fromKey(userAttributeKey);\n    return true;\n} catch (IllegalArgumentException noSuchKey) {\n    return false;\n}\nThen you can implement the fromKey as a lookup from a string", "author": "jamesonwilliams", "createdAt": "2020-09-14T18:59:16Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -955,4 +1228,35 @@ private AuthCodeDeliveryDetails convertCodeDeliveryDetails(UserCodeDeliveryDetai\n                     details.getAttributeName())\n             : null;\n     }\n+\n+    private boolean isValidUserAttribute(AuthUserAttributeKey userAttributeKey) {\n+        List<AuthUserAttributeKey> validUserAttributeKeys = Arrays.asList(\n+                AuthUserAttributeKey.phoneNumber(),", "originalCommit": "19c7f3b2523669e16224b0f76a73fcd758f51269", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52ff16a6cef45f8eb4cc412843aeb9e2c5daa7fc", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 542e6d9d..b7d270be 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -1230,26 +1172,7 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n     }\n \n     private boolean isValidUserAttribute(AuthUserAttributeKey userAttributeKey) {\n-        List<AuthUserAttributeKey> validUserAttributeKeys = Arrays.asList(\n-                AuthUserAttributeKey.phoneNumber(),\n-                AuthUserAttributeKey.email(),\n-                AuthUserAttributeKey.address(),\n-                AuthUserAttributeKey.birthdate(),\n-                AuthUserAttributeKey.familyName(),\n-                AuthUserAttributeKey.gender(),\n-                AuthUserAttributeKey.middleName(),\n-                AuthUserAttributeKey.givenName(),\n-                AuthUserAttributeKey.locale(),\n-                AuthUserAttributeKey.nickname(),\n-                AuthUserAttributeKey.picture(),\n-                AuthUserAttributeKey.preferredUsername(),\n-                AuthUserAttributeKey.profile(),\n-                AuthUserAttributeKey.updatedAt(),\n-                AuthUserAttributeKey.website(),\n-                AuthUserAttributeKey.zoneInfo(),\n-                AuthUserAttributeKey.name()\n-        );\n-        return validUserAttributeKeys.contains(userAttributeKey);\n+        return AuthUserAttributeKey.authUserAttributeKeyList().contains(userAttributeKey);\n     }\n \n     private boolean isUserAttributeVerifiedByCode(AuthUserAttributeKey userAttributeKey) {\n"}}, {"oid": "15127d7fa9cb3e58004bd2447acb63dcd1ded555", "url": "https://github.com/aws-amplify/amplify-android/commit/15127d7fa9cb3e58004bd2447acb63dcd1ded555", "message": "Remove unnecessary checks", "committedDate": "2020-09-14T20:34:20Z", "type": "commit"}, {"oid": "52ff16a6cef45f8eb4cc412843aeb9e2c5daa7fc", "url": "https://github.com/aws-amplify/amplify-android/commit/52ff16a6cef45f8eb4cc412843aeb9e2c5daa7fc", "message": "Get rid of nesting", "committedDate": "2020-09-15T07:05:46Z", "type": "commit"}, {"oid": "31f19d32b1200bc07f990c8a6622f1c10b6e2f7c", "url": "https://github.com/aws-amplify/amplify-android/commit/31f19d32b1200bc07f990c8a6622f1c10b6e2f7c", "message": "Add authUserAttributeKeyList method", "committedDate": "2020-09-15T07:14:48Z", "type": "commit"}, {"oid": "3258a7caf5876911b047b4607af61f8df92940d9", "url": "https://github.com/aws-amplify/amplify-android/commit/3258a7caf5876911b047b4607af61f8df92940d9", "message": "only make one call to AWSMobileClient when updating a list of user attributes", "committedDate": "2020-09-16T07:49:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcyMzkxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489723918", "bodyText": "Hmm - this message is not always accurate. I would remove the \"since user is not authenticated\" piece since there could be other reasons it fails (e.g. no internet) and then per Jameson's suggestion set the suggestion parameter below to \"Ensure that you are logged in and online.\" instead of \"See attached exception...\"", "author": "TrekSoft", "createdAt": "2020-09-16T20:06:25Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,250 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcyODgyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489728823", "bodyText": "Make sense!", "author": "changxu0306", "createdAt": "2020-09-16T20:16:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcyMzkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -711,9 +710,9 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @Override\n             public void onError(Exception error) {\n                 onError.accept(new AuthException(\n-                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        \"Failed to fetch user attributes\",\n                         error,\n-                        \"See attached exception for details\"\n+                        \"Ensure that you are logged in and online\"\n                 ));\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcyODE0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489728149", "bodyText": "If the user reached this success callback, that means they sent an attribute to update which Cognito accepted and successfully updated. We certainly don't want to throw an error in that case.\nAlso, Cognito supports custom attributes in addition to the standard ones we have listed so we don't know whether an attribute is valid or not - hence you can't have a working isValidUserAttribute method.", "author": "TrekSoft", "createdAt": "2020-09-16T20:14:57Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,250 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        awsMobileClient.updateUserAttributes(\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (!isValidUserAttribute(attribute.getKey().getKeyString())) {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -711,9 +710,9 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @Override\n             public void onError(Exception error) {\n                 onError.accept(new AuthException(\n-                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        \"Failed to fetch user attributes\",\n                         error,\n-                        \"See attached exception for details\"\n+                        \"Ensure that you are logged in and online\"\n                 ));\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTczMDY2NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489730665", "bodyText": "This isn't the best way to handle this because what if Cognito adds verification methods for other attributes in the future? What we know is that the onResult method only gets called if all attributes (in this case just the one) are updated successfully. The result object contains an entry if that attribute needs to be confirmed with a code and contains no entry if the update is complete and nothing more needs to be done. So the logic here for updating one attribute should be as simple as:\nonResult:\nif(result.size() == 0) return result with DONE status\nelse return result with CONFIRM_ATTRIBUTE_WITH_CODE status\nonError:\nreturn error", "author": "TrekSoft", "createdAt": "2020-09-16T20:19:59Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,250 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        awsMobileClient.updateUserAttributes(\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (!isValidUserAttribute(attribute.getKey().getKeyString())) {\n+                            onError.accept(new AuthException(\n+                                    \"Invalid attribute name\",\n+                                    \"See attached exception for more details\"\n+                            ));\n+                        }\n+\n+                        if (!isUserAttributeVerifiedByCode(attribute.getKey().getKeyString())) {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -711,9 +710,9 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @Override\n             public void onError(Exception error) {\n                 onError.accept(new AuthException(\n-                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        \"Failed to fetch user attributes\",\n                         error,\n-                        \"See attached exception for details\"\n+                        \"Ensure that you are logged in and online\"\n                 ));\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTczNjU5OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489736599", "bodyText": "Similar to above, the logic inside the onResult method should go something like this:\nCreate a resultMap<AuthUserAttributeKey, AuthUpdateAttributeResult> object upfront.\nLoop through the objects inside the result object and add them to a codeDetailsMap<String, UserCodeDeliveryDetails> keyed by the attribute string name so you can easily check whether a given attribute exists in it.\nLoop through each attribute in the attributes list and for each one:\nIf it exists in the codeDetailsMap add an entry for it to resultMap with a status of CONFIRM_ATTRIBUTE_WITH_CODE\nelse add an entry to resultMap for it with a status of DONE.\nThere's no way there can be an error if we're inside the onResult callback.", "author": "TrekSoft", "createdAt": "2020-09-16T20:31:31Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,250 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        awsMobileClient.updateUserAttributes(\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (!isValidUserAttribute(attribute.getKey().getKeyString())) {\n+                            onError.accept(new AuthException(\n+                                    \"Invalid attribute name\",\n+                                    \"See attached exception for more details\"\n+                            ));\n+                        }\n+\n+                        if (!isUserAttributeVerifiedByCode(attribute.getKey().getKeyString())) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        }\n+\n+                        // Code verified user attribute was updated before\n+                        if (result.size() == 0) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        }\n+\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            } else {\n+                                onError.accept(new AuthException(\n+                                        \"Returned an incorrect attribute name\",\n+                                        \"See attached exception for more details\"\n+                                ));\n+                            }\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        onError.accept(new AuthException(\n+                                \"Failed to update user attributes\",\n+                                error,\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+        );\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes,\n+            @NonNull Consumer<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        Map<String, String> attributesMap = new HashMap<>();\n+        for (AuthUserAttribute attribute : attributes) {\n+            attributesMap.put(attribute.getKey().getKeyString(), attribute.getValue());\n+        }\n+\n+        awsMobileClient.updateUserAttributes(\n+                attributesMap,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        for (String attributeKey : attributesMap.keySet()) {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -711,9 +710,9 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @Override\n             public void onError(Exception error) {\n                 onError.accept(new AuthException(\n-                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        \"Failed to fetch user attributes\",\n                         error,\n-                        \"See attached exception for details\"\n+                        \"Ensure that you are logged in and online\"\n                 ));\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDM1NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489740354", "bodyText": "So I actually think a better option here is to remove this check. If it comes back with a successful response, it means it recognized the attribute you sent and resent the code for it. You can simply return the converted response without checking this.", "author": "TrekSoft", "createdAt": "2020-09-16T20:38:49Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +692,250 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        error,\n+                        \"See attached exception for details\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        awsMobileClient.updateUserAttributes(\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (!isValidUserAttribute(attribute.getKey().getKeyString())) {\n+                            onError.accept(new AuthException(\n+                                    \"Invalid attribute name\",\n+                                    \"See attached exception for more details\"\n+                            ));\n+                        }\n+\n+                        if (!isUserAttributeVerifiedByCode(attribute.getKey().getKeyString())) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        }\n+\n+                        // Code verified user attribute was updated before\n+                        if (result.size() == 0) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        }\n+\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            } else {\n+                                onError.accept(new AuthException(\n+                                        \"Returned an incorrect attribute name\",\n+                                        \"See attached exception for more details\"\n+                                ));\n+                            }\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        onError.accept(new AuthException(\n+                                \"Failed to update user attributes\",\n+                                error,\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+        );\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes,\n+            @NonNull Consumer<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        Map<String, String> attributesMap = new HashMap<>();\n+        for (AuthUserAttribute attribute : attributes) {\n+            attributesMap.put(attribute.getKey().getKeyString(), attribute.getValue());\n+        }\n+\n+        awsMobileClient.updateUserAttributes(\n+                attributesMap,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        for (String attributeKey : attributesMap.keySet()) {\n+                            if (!isValidUserAttribute(attributeKey)) {\n+                                onError.accept(new AuthException(\n+                                        \"Invalid attribute name\",\n+                                        \"See attached exception for more details\"\n+                                ));\n+                            }\n+\n+                            if (!isUserAttributeVerifiedByCode(attributeKey)) {\n+                                Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                        new HashMap<>();\n+                                resultMap.put(new AuthUserAttributeKey(attributeKey),\n+                                        new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.DONE,\n+                                                        Collections.emptyMap(),\n+                                                        null)\n+                                        ));\n+                                onSuccess.accept(resultMap);\n+                            }\n+\n+                            // Code verified user attribute was updated before\n+                            if (result.size() == 0) {\n+                                Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                        new HashMap<>();\n+                                resultMap.put(new AuthUserAttributeKey(attributeKey),\n+                                        new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.\n+                                                                DONE,\n+                                                        Collections.emptyMap(),\n+                                                        null)\n+                                        ));\n+                                onSuccess.accept(resultMap);\n+                            }\n+\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                if (details.getAttributeName().equals(attributeKey)) {\n+                                    Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                            new HashMap<>();\n+                                    resultMap.put(new AuthUserAttributeKey(attributeKey),\n+                                            new AuthUpdateAttributeResult(\n+                                                    true,\n+                                                    new AuthNextUpdateAttributeStep(\n+                                                            AuthUpdateAttributeStep.\n+                                                                    CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                            Collections.emptyMap(),\n+                                                            convertCodeDeliveryDetails(details))\n+                                            ));\n+                                    onSuccess.accept(resultMap);\n+                                } else {\n+                                    onError.accept(new AuthException(\n+                                            \"Returned an incorrect attribute name\",\n+                                            \"See attached exception for more details\"));\n+                                }\n+                            }\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        onError.accept(new AuthException(\n+                                \"Failed to update user attributes\",\n+                                error,\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                });\n+    }\n+\n+    @Override\n+    public void resendUserAttributeConfirmationCode(\n+            @NonNull AuthUserAttributeKey attributeKey,\n+            @NonNull Consumer<AuthCodeDeliveryDetails> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        String attributeName = attributeKey.getKeyString();\n+        awsMobileClient.verifyUserAttribute(attributeName, new Callback<UserCodeDeliveryDetails>() {\n+            @Override\n+            public void onResult(UserCodeDeliveryDetails result) {\n+                if (result.getAttributeName().equals(attributeName)) {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -711,9 +710,9 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n             @Override\n             public void onError(Exception error) {\n                 onError.accept(new AuthException(\n-                        \"Failed to fetch user attributes since user is not authenticated\",\n+                        \"Failed to fetch user attributes\",\n                         error,\n-                        \"See attached exception for details\"\n+                        \"Ensure that you are logged in and online\"\n                 ));\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDU4OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489740589", "bodyText": "Both these two methods can be removed given my comments above.", "author": "TrekSoft", "createdAt": "2020-09-16T20:39:18Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -955,4 +1204,16 @@ private AuthCodeDeliveryDetails convertCodeDeliveryDetails(UserCodeDeliveryDetai\n                     details.getAttributeName())\n             : null;\n     }\n+\n+    private boolean isValidUserAttribute(String userAttributeKey) {\n+        return AuthUserAttributeKey.authUserAttributeKeyList().contains(userAttributeKey);\n+    }\n+\n+    private boolean isUserAttributeVerifiedByCode(String userAttributeKey) {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 5b7a3e35..14f25661 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -1204,16 +1150,4 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                     details.getAttributeName())\n             : null;\n     }\n-\n-    private boolean isValidUserAttribute(String userAttributeKey) {\n-        return AuthUserAttributeKey.authUserAttributeKeyList().contains(userAttributeKey);\n-    }\n-\n-    private boolean isUserAttributeVerifiedByCode(String userAttributeKey) {\n-        List<String> codeVerifiedAttributeKeys = Arrays.asList(\n-                AuthUserAttributeKey.phoneNumber().getKeyString(),\n-                AuthUserAttributeKey.email().getKeyString()\n-        );\n-        return codeVerifiedAttributeKeys.contains(userAttributeKey);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MTYxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r489741619", "bodyText": "This also can be removed now - this is not a list of valid user attribute keys - it's simply a list of the standard ones we provide for convenience. Because Cognito supports custom keys we can't know client side whether an attribute is valid or not (neither do we need to know).", "author": "TrekSoft", "createdAt": "2020-09-16T20:41:15Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java", "diffHunk": "@@ -195,6 +198,32 @@ public static AuthUserAttributeKey custom(String attributeKey) {\n         return new AuthUserAttributeKey(attributeKey);\n     }\n \n+    /**\n+     * Method for getting a list of all valid user attribute keys.\n+     * @return a list of user attribute keys\n+     */\n+    public static List<String> authUserAttributeKeyList() {", "originalCommit": "3258a7caf5876911b047b4607af61f8df92940d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java b/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\nindex 6a1d1eb1..43a31e27 100644\n--- a/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\n+++ b/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\n\n@@ -198,32 +195,6 @@ public final class AuthUserAttributeKey {\n         return new AuthUserAttributeKey(attributeKey);\n     }\n \n-    /**\n-     * Method for getting a list of all valid user attribute keys.\n-     * @return a list of user attribute keys\n-     */\n-    public static List<String> authUserAttributeKeyList() {\n-        return Arrays.asList(\n-                AuthUserAttributeKey.phoneNumber().getKeyString(),\n-                AuthUserAttributeKey.email().getKeyString(),\n-                AuthUserAttributeKey.address().getKeyString(),\n-                AuthUserAttributeKey.birthdate().getKeyString(),\n-                AuthUserAttributeKey.familyName().getKeyString(),\n-                AuthUserAttributeKey.gender().getKeyString(),\n-                AuthUserAttributeKey.middleName().getKeyString(),\n-                AuthUserAttributeKey.givenName().getKeyString(),\n-                AuthUserAttributeKey.locale().getKeyString(),\n-                AuthUserAttributeKey.nickname().getKeyString(),\n-                AuthUserAttributeKey.picture().getKeyString(),\n-                AuthUserAttributeKey.preferredUsername().getKeyString(),\n-                AuthUserAttributeKey.profile().getKeyString(),\n-                AuthUserAttributeKey.updatedAt().getKeyString(),\n-                AuthUserAttributeKey.website().getKeyString(),\n-                AuthUserAttributeKey.zoneInfo().getKeyString(),\n-                AuthUserAttributeKey.name().getKeyString()\n-        );\n-    }\n-\n     /**\n      * Returns the String key for the attribute.\n      * @return the String key for the attribute\n"}}, {"oid": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "url": "https://github.com/aws-amplify/amplify-android/commit/5405c161de9e89826cd89fd785fa9e6f04af15bb", "message": "Remove unnecessary checks, change the logic of updateUserAttributes", "committedDate": "2020-09-17T07:22:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5MTE3Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r490291173", "bodyText": "What is this loop for?", "author": "TrekSoft", "createdAt": "2020-09-17T14:27:15Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -757,22 +738,15 @@ public void onResult(List<UserCodeDeliveryDetails> result) {\n                                             Collections.emptyMap(),\n                                             null)\n                             ));\n-                        }\n-\n-                        for (UserCodeDeliveryDetails details : result) {\n-                            if (details.getAttributeName().equals(attribute.getKey().getKeyString())) {\n+                        } else {\n+                            for (UserCodeDeliveryDetails details : result) {", "originalCommit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjEzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r490422131", "bodyText": "Since result is a list, we must go through it to get the detail (even though in this case there is only one result)", "author": "changxu0306", "createdAt": "2020-09-17T17:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5MTE3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3OTg0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r490479849", "bodyText": "Since there's only one result you get it by calling result.get(0)", "author": "TrekSoft", "createdAt": "2020-09-17T18:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5MTE3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NDM4OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r490484389", "bodyText": "Make sense. I've already changed that", "author": "changxu0306", "createdAt": "2020-09-17T18:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5MTE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1e7277d2bf52f04600c3ed39f3c491b94014b8f5", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 14f25661..54543b7e 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -739,15 +739,13 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                                             null)\n                             ));\n                         } else {\n-                            for (UserCodeDeliveryDetails details : result) {\n-                                onSuccess.accept(new AuthUpdateAttributeResult(\n-                                        true,\n-                                        new AuthNextUpdateAttributeStep(\n-                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                Collections.emptyMap(),\n-                                                convertCodeDeliveryDetails(details))\n-                                ));\n-                            }\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                            Collections.emptyMap(),\n+                                            convertCodeDeliveryDetails(result.get(0)))\n+                            ));\n                         }\n                     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5NDU5MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r490294590", "bodyText": "Defining a singleton map here defeats the purpose of having a map. My suggested logic was to do a loop through the UserCodeDeliveryDetails in result and add them all to a map before looping through the attributesMap to avoid having a nested loop like this one. In addition, this will add duplicate result entries for each non-verifiable attribute.", "author": "TrekSoft", "createdAt": "2020-09-17T14:31:39Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -687,6 +691,197 @@ public void onError(Exception error) {\n         );\n     }\n \n+    @Override\n+    public void fetchUserAttributes(\n+            @NonNull Consumer<List<AuthUserAttribute>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        awsMobileClient.getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                List<AuthUserAttribute> userAttributes = new ArrayList<>();\n+                for (Map.Entry<String, String> entry : result.entrySet()) {\n+                    userAttributes.add(new AuthUserAttribute(\n+                            new AuthUserAttributeKey(entry.getKey()), entry.getValue()));\n+                }\n+                onSuccess.accept(userAttributes);\n+            }\n+\n+            @Override\n+            public void onError(Exception error) {\n+                onError.accept(new AuthException(\n+                        \"Failed to fetch user attributes\",\n+                        error,\n+                        \"Ensure that you are logged in and online\"\n+                ));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void updateUserAttribute(\n+            @NonNull AuthUserAttribute attribute,\n+            @NonNull Consumer<AuthUpdateAttributeResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+\n+        awsMobileClient.updateUserAttributes(\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue()),\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        if (result.size() == 0) {\n+                            onSuccess.accept(new AuthUpdateAttributeResult(\n+                                    true,\n+                                    new AuthNextUpdateAttributeStep(\n+                                            AuthUpdateAttributeStep.DONE,\n+                                            Collections.emptyMap(),\n+                                            null)\n+                            ));\n+                        } else {\n+                            for (UserCodeDeliveryDetails details : result) {\n+                                onSuccess.accept(new AuthUpdateAttributeResult(\n+                                        true,\n+                                        new AuthNextUpdateAttributeStep(\n+                                                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                Collections.emptyMap(),\n+                                                convertCodeDeliveryDetails(details))\n+                                ));\n+                            }\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        onError.accept(new AuthException(\n+                                \"Failed to update user attributes\",\n+                                error,\n+                                \"See attached exception for more details\"\n+                        ));\n+                    }\n+                }\n+        );\n+    }\n+\n+    @Override\n+    public void updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes,\n+            @NonNull Consumer<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> onSuccess,\n+            @NonNull Consumer<AuthException> onError\n+    ) {\n+        Map<String, String> attributesMap = new HashMap<>();\n+        for (AuthUserAttribute attribute : attributes) {\n+            attributesMap.put(attribute.getKey().getKeyString(), attribute.getValue());\n+        }\n+\n+        awsMobileClient.updateUserAttributes(\n+                attributesMap,\n+                new Callback<List<UserCodeDeliveryDetails>>() {\n+                    @Override\n+                    public void onResult(List<UserCodeDeliveryDetails> result) {\n+                        Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n+                                new HashMap<>();\n+\n+                        for (UserCodeDeliveryDetails details : result) {\n+                            Map<String, UserCodeDeliveryDetails> codeDetailsMap =", "originalCommit": "5405c161de9e89826cd89fd785fa9e6f04af15bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79c3ac56c293962b102867252b1067f411fb82f9", "chunk": "diff --git a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\nindex 14f25661..d286f365 100644\n--- a/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n+++ b/aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java\n\n@@ -779,36 +779,36 @@ public final class AWSCognitoAuthPlugin extends AuthPlugin<AWSMobileClient> {\n                 new Callback<List<UserCodeDeliveryDetails>>() {\n                     @Override\n                     public void onResult(List<UserCodeDeliveryDetails> result) {\n-                        Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap =\n-                                new HashMap<>();\n+                        Map<String, UserCodeDeliveryDetails> codeDetailsMap = new HashMap<>();\n+                        Map<AuthUserAttributeKey, AuthUpdateAttributeResult> resultMap = new HashMap<>();\n \n                         for (UserCodeDeliveryDetails details : result) {\n-                            Map<String, UserCodeDeliveryDetails> codeDetailsMap =\n-                                    Collections.singletonMap(details.getAttributeName(), details);\n-                            for (String attributeKey : attributesMap.keySet()) {\n-                                if (codeDetailsMap.containsKey(attributeKey)) {\n-                                    resultMap.put(new AuthUserAttributeKey(attributeKey),\n-                                            new AuthUpdateAttributeResult(\n-                                                    true,\n-                                                    new AuthNextUpdateAttributeStep(\n-                                                            AuthUpdateAttributeStep.\n-                                                                    CONFIRM_ATTRIBUTE_WITH_CODE,\n-                                                            Collections.emptyMap(),\n-                                                            convertCodeDeliveryDetails(details))\n-                                            ));\n-                                } else {\n-                                    resultMap.put(new AuthUserAttributeKey(attributeKey),\n-                                            new AuthUpdateAttributeResult(\n-                                                    true,\n-                                                    new AuthNextUpdateAttributeStep(\n-                                                            AuthUpdateAttributeStep.\n-                                                                    DONE,\n-                                                            Collections.emptyMap(),\n-                                                            null)\n-                                            ));\n-                                }\n-                                onSuccess.accept(resultMap);\n+                            codeDetailsMap.put(details.getAttributeName(), details);\n+                        }\n+\n+                        for (String attributeKey : attributesMap.keySet()) {\n+                            if (codeDetailsMap.containsKey(attributeKey)) {\n+                                resultMap.put(new AuthUserAttributeKey(attributeKey),\n+                                        new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.\n+                                                                CONFIRM_ATTRIBUTE_WITH_CODE,\n+                                                        Collections.emptyMap(),\n+                                                        convertCodeDeliveryDetails(codeDetailsMap.get(attributeKey)))\n+                                        ));\n+                            } else {\n+                                resultMap.put(new AuthUserAttributeKey(attributeKey),\n+                                        new AuthUpdateAttributeResult(\n+                                                true,\n+                                                new AuthNextUpdateAttributeStep(\n+                                                        AuthUpdateAttributeStep.\n+                                                                DONE,\n+                                                        Collections.emptyMap(),\n+                                                        null)\n+                                        ));\n                             }\n+                            onSuccess.accept(resultMap);\n                         }\n                     }\n \n"}}, {"oid": "79c3ac56c293962b102867252b1067f411fb82f9", "url": "https://github.com/aws-amplify/amplify-android/commit/79c3ac56c293962b102867252b1067f411fb82f9", "message": "Remove nested loop", "committedDate": "2020-09-17T17:22:51Z", "type": "commit"}, {"oid": "1e7277d2bf52f04600c3ed39f3c491b94014b8f5", "url": "https://github.com/aws-amplify/amplify-android/commit/1e7277d2bf52f04600c3ed39f3c491b94014b8f5", "message": "remove loop for details", "committedDate": "2020-09-17T18:55:10Z", "type": "commit"}, {"oid": "456e9ba2fb6fcf281200e12498066a2344de396e", "url": "https://github.com/aws-amplify/amplify-android/commit/456e9ba2fb6fcf281200e12498066a2344de396e", "message": "add AuthComponentTest", "committedDate": "2020-09-22T06:59:22Z", "type": "commit"}, {"oid": "a5913ee445c091cd072be1ed09be67dd90cebe1a", "url": "https://github.com/aws-amplify/amplify-android/commit/a5913ee445c091cd072be1ed09be67dd90cebe1a", "message": "Add RxAuthBinding", "committedDate": "2020-09-22T07:24:30Z", "type": "commit"}, {"oid": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "url": "https://github.com/aws-amplify/amplify-android/commit/a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "message": "remove check in resendUserAttributeConfirmationCode", "committedDate": "2020-09-22T07:33:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3MzgwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492873802", "bodyText": "Good catch - thanks for fixing this.", "author": "TrekSoft", "createdAt": "2020-09-22T16:28:28Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -831,14 +855,7 @@ public void resendUserAttributeConfirmationCode(\n         awsMobileClient.verifyUserAttribute(attributeName, new Callback<UserCodeDeliveryDetails>() {\n             @Override\n             public void onResult(UserCodeDeliveryDetails result) {\n-                if (result.getAttributeName().equals(attributeName)) {\n-                    onSuccess.accept(convertCodeDeliveryDetails(result));\n-                } else {\n-                    onError.accept(new AuthException(\n-                            \"Returned an incorrect attribute name\",\n-                            \"See attached exception for more details\"\n-                    ));\n-                }\n+                onSuccess.accept(convertCodeDeliveryDetails(result));", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4MDM1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492880351", "bodyText": "\"and get to fetch the user attributes\" ?? looks like you were starting to type something else and didn't finish", "author": "TrekSoft", "createdAt": "2020-09-22T16:38:28Z", "path": "aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java", "diffHunk": "@@ -553,6 +557,156 @@ public void confirmResetPassword() throws AuthException {\n         verify(mobileClient).confirmForgotPassword(eq(NEW_PASSWORD), eq(CONFIRMATION_CODE), any());\n     }\n \n+    /**\n+     * Tests that fetchUserAttributes method of the Auth wrapper of AWSMobileClient (AMC) calls\n+     * AMC.getUserAttributes and get to fetch the user attributes.", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwMTI2MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492901261", "bodyText": "Yeah it should be \"* AMC.getUserAttributes to obtain a list of user attributes.\"\ud83d\ude05", "author": "changxu0306", "createdAt": "2020-09-22T17:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4MDM1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java b/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\nindex 655c4b5e..c91b9b75 100644\n--- a/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\n+++ b/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\n\n@@ -559,7 +561,7 @@ public final class AuthComponentTest {\n \n     /**\n      * Tests that fetchUserAttributes method of the Auth wrapper of AWSMobileClient (AMC) calls\n-     * AMC.getUserAttributes and get to fetch the user attributes.\n+     * AMC.getUserAttributes to obtain a list of user attributes.\n      * @throws AuthException test fails if this gets thrown since method should succeed\n      */\n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4NDcxNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492884716", "bodyText": "To properly test this method as contrasted with the previous one, you should test passing in another attribute as well which doesn't get UserCodeDeliveryDetails back and verify that the correct result object gets created for it with a DONE status.", "author": "TrekSoft", "createdAt": "2020-09-22T16:45:13Z", "path": "aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java", "diffHunk": "@@ -553,6 +557,156 @@ public void confirmResetPassword() throws AuthException {\n         verify(mobileClient).confirmForgotPassword(eq(NEW_PASSWORD), eq(CONFIRMATION_CODE), any());\n     }\n \n+    /**\n+     * Tests that fetchUserAttributes method of the Auth wrapper of AWSMobileClient (AMC) calls\n+     * AMC.getUserAttributes and get to fetch the user attributes.\n+     * @throws AuthException test fails if this gets thrown since method should succeed\n+     */\n+    @Test\n+    public void fetchUserAttributes() throws AuthException {\n+        Map<String, String> attributeMap = Collections.singletonMap(ATTRIBUTE_KEY, ATTRIBUTE_VAL);\n+\n+        doAnswer(invocation -> {\n+            Callback<Map<String, String>> callback = invocation.getArgument(0);\n+            callback.onResult(attributeMap);\n+            return null;\n+        }).when(mobileClient)\n+                .getUserAttributes(Mockito.<Callback<Map<String, String>>>any());\n+\n+        List<AuthUserAttribute> result = synchronousAuth.fetchUserAttribute();\n+        assertEquals(ATTRIBUTE_KEY, result.get(0).getKey().getKeyString());\n+        assertEquals(ATTRIBUTE_VAL, result.get(0).getValue());\n+        verify(mobileClient).getUserAttributes(Mockito.<Callback<Map<String, String>>>any());\n+    }\n+\n+    /**\n+     * Tests that updateUserAttribute method of the Auth wrapper of AWSMobileClient (AMC) calls\n+     * AMC.updateUserAttributes with the user attribute it received.\n+     * Also ensures that in the onResult case, the success callback receives a valid AuthUpdateAttributeResult and in\n+     * the onError case, the error call back receives an AuthException with the root cause attached.\n+     * @throws AuthException test fails if this gets thrown since method should succeed\n+     */\n+    @Test\n+    public void updateUserAttribute() throws AuthException {\n+        AuthUserAttribute attribute = new AuthUserAttribute(new AuthUserAttributeKey(ATTRIBUTE_KEY), ATTRIBUTE_VAL);\n+        Map<String, String> attributeMap =\n+                Collections.singletonMap(attribute.getKey().getKeyString(), attribute.getValue());\n+        List<UserCodeDeliveryDetails> userCodeDeliveryDetailsList = Collections.singletonList(\n+                new UserCodeDeliveryDetails(DESTINATION, DELIVERY_MEDIUM, ATTRIBUTE_NAME));\n+\n+        doAnswer(invocation -> {\n+            Callback<List<UserCodeDeliveryDetails>> callback = invocation.getArgument(1);\n+            callback.onResult(userCodeDeliveryDetailsList);\n+            return null;\n+        }).when(mobileClient)\n+                .updateUserAttributes(any(), Mockito.<Callback<List<UserCodeDeliveryDetails>>>any());\n+\n+        AuthUpdateAttributeResult result = synchronousAuth.updateUserAttribute(attribute);\n+\n+        assertTrue(result.isUpdated());\n+        assertEquals(\n+                AuthUpdateAttributeStep.CONFIRM_ATTRIBUTE_WITH_CODE,\n+                result.getNextStep().getUpdateAttributeStep()\n+        );\n+        validateCodeDeliveryDetails(result.getNextStep().getCodeDeliveryDetails());\n+        verify(mobileClient).updateUserAttributes(eq(attributeMap),\n+                Mockito.<Callback<List<UserCodeDeliveryDetails>>>any());\n+    }\n+\n+    /**\n+     * Tests that updateUserAttributes method of the Auth wrapper of AWSMobileClient (AMC) Calls\n+     * AMC.updateUserAttributes with the user attributes it received.\n+     * Also ensures that in the onResult case, the success callback receives a valid Map which maps\n+     * AuthUserAttributeKey into AuthUpdateAttributeResult, and in the onError case, the error call\n+     * back receives an AuthException with the root cause attached.\n+     * @throws AuthException test fails if this gets thrown since method should succeed\n+     */\n+    @Test\n+    public void updateUserAttributes() throws AuthException {\n+        List<AuthUserAttribute> attributes = new ArrayList<>();\n+        AuthUserAttributeKey attributeKey = new AuthUserAttributeKey(ATTRIBUTE_KEY);\n+        attributes.add(new AuthUserAttribute(attributeKey, ATTRIBUTE_VAL));", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java b/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\nindex 655c4b5e..c91b9b75 100644\n--- a/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\n+++ b/aws-auth-cognito/src/test/java/com/amplifyframework/auth/cognito/AuthComponentTest.java\n\n@@ -559,7 +561,7 @@ public final class AuthComponentTest {\n \n     /**\n      * Tests that fetchUserAttributes method of the Auth wrapper of AWSMobileClient (AMC) calls\n-     * AMC.getUserAttributes and get to fetch the user attributes.\n+     * AMC.getUserAttributes to obtain a list of user attributes.\n      * @throws AuthException test fails if this gets thrown since method should succeed\n      */\n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4NTQ1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492885457", "bodyText": "Just out of curiosity what was the reason behind changing the order of this method?", "author": "TrekSoft", "createdAt": "2020-09-22T16:46:28Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -322,20 +336,6 @@ void confirmUserAttribute(\n             @NonNull Consumer<AuthException> onError\n     );\n \n-    /**\n-     * Update the password of an existing user - must be signed in to perform this action.\n-     * @param oldPassword The user's existing password\n-     * @param newPassword The new password desired on the user account\n-     * @param onSuccess Success callback\n-     * @param onError Error callback\n-     */\n-    void updatePassword(\n-            @NonNull String oldPassword,\n-            @NonNull String newPassword,\n-            @NonNull Action onSuccess,\n-            @NonNull Consumer<AuthException> onError\n-    );\n-", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwMjY5Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492902693", "bodyText": "Previously, the series of user attribute methods were located between confirmResetPassword() and updatePassword(). Now I want to put the methods related to password operations together.", "author": "changxu0306", "createdAt": "2020-09-22T17:14:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4NTQ1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4Njg0MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492886840", "bodyText": "Remove double parantheses", "author": "TrekSoft", "createdAt": "2020-09-22T16:48:45Z", "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java", "diffHunk": "@@ -166,6 +171,36 @@ public Completable updatePassword(@NonNull String oldPassword, @NonNull String n\n             delegate.updatePassword(oldPassword, newPassword, onComplete, onError));\n     }\n \n+    @Override\n+    public Single<List<AuthUserAttribute>> fetchUserAttributes() {\n+        return toSingle((delegate::fetchUserAttributes));", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\nindex 242ebe40..efc2df3f 100644\n--- a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\n+++ b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\n\n@@ -173,32 +173,32 @@ final class RxAuthBinding implements RxAuthCategoryBehavior {\n \n     @Override\n     public Single<List<AuthUserAttribute>> fetchUserAttributes() {\n-        return toSingle((delegate::fetchUserAttributes));\n+        return toSingle(delegate::fetchUserAttributes);\n     }\n \n     @Override\n     public Single<AuthUpdateAttributeResult> updateUserAttribute(@NonNull AuthUserAttribute attribute) {\n-        return toSingle(((onResult, onError) -> delegate.updateUserAttribute(attribute, onResult, onError)));\n+        return toSingle((onResult, onError) -> delegate.updateUserAttribute(attribute, onResult, onError));\n     }\n \n     @Override\n     public Single<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> updateUserAttributes(\n             @NonNull List<AuthUserAttribute> attributes) {\n-        return toSingle(((onResult, onError) -> delegate.updateUserAttributes(attributes, onResult, onError)));\n+        return toSingle((onResult, onError) -> delegate.updateUserAttributes(attributes, onResult, onError));\n     }\n \n     @Override\n     public Single<AuthCodeDeliveryDetails> resendUserAttributeConfirmationCode(\n             @NonNull AuthUserAttributeKey attributeKey) {\n-        return toSingle(((onResult, onError) ->\n-                delegate.resendUserAttributeConfirmationCode(attributeKey, onResult, onError)));\n+        return toSingle((onResult, onError) ->\n+                delegate.resendUserAttributeConfirmationCode(attributeKey, onResult, onError));\n     }\n \n     @Override\n     public Completable confirmUserAttribute(@NonNull AuthUserAttributeKey attributeKey,\n                                             @NonNull String confirmationCode) {\n-        return toCompletable(((onComplete, onError) ->\n-                delegate.confirmUserAttribute(attributeKey, confirmationCode, onComplete, onError)));\n+        return toCompletable((onComplete, onError) ->\n+                delegate.confirmUserAttribute(attributeKey, confirmationCode, onComplete, onError));\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNjA0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492926049", "bodyText": "all the extra parentheses should be removed", "author": "raphkim", "createdAt": "2020-09-22T17:52:55Z", "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java", "diffHunk": "@@ -166,6 +171,36 @@ public Completable updatePassword(@NonNull String oldPassword, @NonNull String n\n             delegate.updatePassword(oldPassword, newPassword, onComplete, onError));\n     }\n \n+    @Override\n+    public Single<List<AuthUserAttribute>> fetchUserAttributes() {\n+        return toSingle((delegate::fetchUserAttributes));\n+    }\n+\n+    @Override\n+    public Single<AuthUpdateAttributeResult> updateUserAttribute(@NonNull AuthUserAttribute attribute) {\n+        return toSingle(((onResult, onError) -> delegate.updateUserAttribute(attribute, onResult, onError)));\n+    }\n+\n+    @Override\n+    public Single<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes) {\n+        return toSingle(((onResult, onError) -> delegate.updateUserAttributes(attributes, onResult, onError)));\n+    }\n+\n+    @Override\n+    public Single<AuthCodeDeliveryDetails> resendUserAttributeConfirmationCode(\n+            @NonNull AuthUserAttributeKey attributeKey) {\n+        return toSingle(((onResult, onError) ->\n+                delegate.resendUserAttributeConfirmationCode(attributeKey, onResult, onError)));\n+    }\n+\n+    @Override\n+    public Completable confirmUserAttribute(@NonNull AuthUserAttributeKey attributeKey,\n+                                            @NonNull String confirmationCode) {\n+        return toCompletable(((onComplete, onError) ->\n+                delegate.confirmUserAttribute(attributeKey, confirmationCode, onComplete, onError)));\n+    }", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\nindex 242ebe40..efc2df3f 100644\n--- a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\n+++ b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthBinding.java\n\n@@ -173,32 +173,32 @@ final class RxAuthBinding implements RxAuthCategoryBehavior {\n \n     @Override\n     public Single<List<AuthUserAttribute>> fetchUserAttributes() {\n-        return toSingle((delegate::fetchUserAttributes));\n+        return toSingle(delegate::fetchUserAttributes);\n     }\n \n     @Override\n     public Single<AuthUpdateAttributeResult> updateUserAttribute(@NonNull AuthUserAttribute attribute) {\n-        return toSingle(((onResult, onError) -> delegate.updateUserAttribute(attribute, onResult, onError)));\n+        return toSingle((onResult, onError) -> delegate.updateUserAttribute(attribute, onResult, onError));\n     }\n \n     @Override\n     public Single<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> updateUserAttributes(\n             @NonNull List<AuthUserAttribute> attributes) {\n-        return toSingle(((onResult, onError) -> delegate.updateUserAttributes(attributes, onResult, onError)));\n+        return toSingle((onResult, onError) -> delegate.updateUserAttributes(attributes, onResult, onError));\n     }\n \n     @Override\n     public Single<AuthCodeDeliveryDetails> resendUserAttributeConfirmationCode(\n             @NonNull AuthUserAttributeKey attributeKey) {\n-        return toSingle(((onResult, onError) ->\n-                delegate.resendUserAttributeConfirmationCode(attributeKey, onResult, onError)));\n+        return toSingle((onResult, onError) ->\n+                delegate.resendUserAttributeConfirmationCode(attributeKey, onResult, onError));\n     }\n \n     @Override\n     public Completable confirmUserAttribute(@NonNull AuthUserAttributeKey attributeKey,\n                                             @NonNull String confirmationCode) {\n-        return toCompletable(((onComplete, onError) ->\n-                delegate.confirmUserAttribute(attributeKey, confirmationCode, onComplete, onError)));\n+        return toCompletable((onComplete, onError) ->\n+                delegate.confirmUserAttribute(attributeKey, confirmationCode, onComplete, onError));\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNjUzNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492926535", "bodyText": "extra parentheses", "author": "raphkim", "createdAt": "2020-09-22T17:53:44Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java", "diffHunk": "@@ -310,6 +315,71 @@ public void updatePassword(\n         );\n     }\n \n+    /**\n+     * Fetch a list of user attributes synchronously.\n+     * @return List of user attributes upon successful fetch\n+     * @throws AuthException exception\n+     */\n+    public List<AuthUserAttribute> fetchUserAttribute() throws AuthException {\n+        return Await.<List<AuthUserAttribute>, AuthException>result(((onResult, onError) -> {\n+            asyncDelegate.fetchUserAttributes(onResult, onError);\n+        }));\n+    }\n+\n+    /**\n+     * Update user attribute synchronously.\n+     * @param attribute The user attribute to be updated\n+     * @return result object\n+     * @throws AuthException exception\n+     */\n+    public AuthUpdateAttributeResult updateUserAttribute(@NonNull AuthUserAttribute attribute) throws AuthException {\n+        return Await.<AuthUpdateAttributeResult, AuthException>result((onResult, onError) -> {\n+            asyncDelegate.updateUserAttribute(attribute, onResult, onError);\n+        });\n+    }\n+\n+    /**\n+     * Update user attributes synchronously.\n+     * @param attributes The user attributes to be updated\n+     * @return result object\n+     * @throws AuthException exception\n+     */\n+    public Map<AuthUserAttributeKey, AuthUpdateAttributeResult> updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes) throws AuthException {\n+        return Await.<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>, AuthException>result((\n+            (onResult, onError) -> {\n+                asyncDelegate.updateUserAttributes(attributes, onResult, onError);\n+            }));\n+    }\n+\n+    /**\n+     * Resend user attribute confirmation code to verify user attribute synchronously.\n+     * @param attributeKey The user attribute key\n+     * @return result object\n+     * @throws AuthException exception\n+     */\n+    public AuthCodeDeliveryDetails resendUserAttributeConfirmationCode(\n+            @NonNull AuthUserAttributeKey attributeKey) throws AuthException {\n+        return Await.<AuthCodeDeliveryDetails, AuthException>result(((onResult, onError) -> {", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java b/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\nindex cb437b24..65445896 100644\n--- a/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\n+++ b/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\n\n@@ -321,9 +321,9 @@ public final class SynchronousAuth {\n      * @throws AuthException exception\n      */\n     public List<AuthUserAttribute> fetchUserAttribute() throws AuthException {\n-        return Await.<List<AuthUserAttribute>, AuthException>result(((onResult, onError) -> {\n+        return Await.<List<AuthUserAttribute>, AuthException>result((onResult, onError) -> {\n             asyncDelegate.fetchUserAttributes(onResult, onError);\n-        }));\n+        });\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNjk3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r492926979", "bodyText": "extra parentheses", "author": "raphkim", "createdAt": "2020-09-22T17:54:31Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java", "diffHunk": "@@ -310,6 +315,71 @@ public void updatePassword(\n         );\n     }\n \n+    /**\n+     * Fetch a list of user attributes synchronously.\n+     * @return List of user attributes upon successful fetch\n+     * @throws AuthException exception\n+     */\n+    public List<AuthUserAttribute> fetchUserAttribute() throws AuthException {\n+        return Await.<List<AuthUserAttribute>, AuthException>result(((onResult, onError) -> {", "originalCommit": "a9178bb43adfdf568aa79bc09c8e1df8d88e2199", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91966b146fe068a1a6c251748ea41604eca6f9de", "chunk": "diff --git a/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java b/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\nindex cb437b24..65445896 100644\n--- a/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\n+++ b/testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java\n\n@@ -321,9 +321,9 @@ public final class SynchronousAuth {\n      * @throws AuthException exception\n      */\n     public List<AuthUserAttribute> fetchUserAttribute() throws AuthException {\n-        return Await.<List<AuthUserAttribute>, AuthException>result(((onResult, onError) -> {\n+        return Await.<List<AuthUserAttribute>, AuthException>result((onResult, onError) -> {\n             asyncDelegate.fetchUserAttributes(onResult, onError);\n-        }));\n+        });\n     }\n \n     /**\n"}}, {"oid": "91966b146fe068a1a6c251748ea41604eca6f9de", "url": "https://github.com/aws-amplify/amplify-android/commit/91966b146fe068a1a6c251748ea41604eca6f9de", "message": "Add RxBindingTest and remove duplicated parentheses", "committedDate": "2020-09-23T08:18:20Z", "type": "commit"}, {"oid": "e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "url": "https://github.com/aws-amplify/amplify-android/commit/e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "message": "Remove unused imports", "committedDate": "2020-09-23T08:21:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1MTIwNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r493851205", "bodyText": "You don't have to make this public. You can use AuthUserAttributeKey.custom(CUSTOM_ATTR), or one of the existing AuthUserAttributeKey.address(), etc.", "author": "jamesonwilliams", "createdAt": "2020-09-23T19:43:34Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java", "diffHunk": "@@ -46,7 +46,7 @@\n      * Construct a new instance of AuthUserAttributeKey.\n      * @param attributeKey the attribute key to use in the new object.\n      */\n-    protected AuthUserAttributeKey(String attributeKey) {\n+    public AuthUserAttributeKey(String attributeKey) {", "originalCommit": "e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57495d303d638d3932dc4cd21e73ae795a3aadeb", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java b/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\nindex 43a31e27..d789ac21 100644\n--- a/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\n+++ b/core/src/main/java/com/amplifyframework/auth/AuthUserAttributeKey.java\n\n@@ -46,7 +46,7 @@ public final class AuthUserAttributeKey {\n      * Construct a new instance of AuthUserAttributeKey.\n      * @param attributeKey the attribute key to use in the new object.\n      */\n-    public AuthUserAttributeKey(String attributeKey) {\n+    protected AuthUserAttributeKey(String attributeKey) {\n         this.attributeKey = attributeKey;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1MTU3Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r493851572", "bodyText": "If you don't extend this class anywhere, make this public final class.", "author": "jamesonwilliams", "createdAt": "2020-09-23T19:44:13Z", "path": "core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.result;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.result.step.AuthNextUpdateAttributeStep;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Wraps the result of an update user attribute operation.\n+ */\n+public class AuthUpdateAttributeResult {", "originalCommit": "e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57495d303d638d3932dc4cd21e73ae795a3aadeb", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\nindex ee006542..0ab6f3e9 100644\n--- a/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n+++ b/core/src/main/java/com/amplifyframework/auth/result/AuthUpdateAttributeResult.java\n\n@@ -25,7 +25,7 @@ import java.util.Objects;\n /**\n  * Wraps the result of an update user attribute operation.\n  */\n-public class AuthUpdateAttributeResult {\n+public final class AuthUpdateAttributeResult {\n     private final boolean isUpdated;\n     private final AuthNextUpdateAttributeStep nextStep;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1MzM5Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r493853397", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return An Rx {@link Completable} which completes successfully if userAttributeKey is confirmed,\n          \n          \n            \n                 * @return An Rx {@link Completable} which completes successfully if attributeKey is confirmed,", "author": "jamesonwilliams", "createdAt": "2020-09-23T19:47:37Z", "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java", "diffHunk": "@@ -237,6 +242,48 @@\n      */\n     Completable updatePassword(@NonNull String oldPassword, @NonNull String newPassword);\n \n+    /**\n+     * Fetch the user attributes of an existing user - must be signed in to perform this action.\n+     * @return An Rx {@link Single} which emits {@link List} of {@link AuthUserAttribute} on success,\n+     *          {@link AuthException} on failure\n+     */\n+    Single<List<AuthUserAttribute>> fetchUserAttributes();\n+\n+    /**\n+     * Update a user attribute of a user who is signed in.\n+     * @param attribute The user attribute to be updated\n+     * @return An Rx {@link Single} which emits {@link AuthUpdateAttributeResult} on success,\n+     *         {@link AuthException} on failure\n+     */\n+    Single<AuthUpdateAttributeResult> updateUserAttribute(@NonNull AuthUserAttribute attribute);\n+\n+    /**\n+     * Update a list of user attributes of a user who is signed in.\n+     * @param attributes A list of user attributes to be updated\n+     * @return An Rx {@link Single} which emits a map which maps {@link AuthUserAttributeKey} into\n+     *         {@link AuthUpdateAttributeResult} on success, {@link AuthException} on failure\n+     */\n+    Single<Map<AuthUserAttributeKey, AuthUpdateAttributeResult>> updateUserAttributes(\n+            @NonNull List<AuthUserAttribute> attributes);\n+\n+    /**\n+     * Resend user attribute confirmation code to verify user attribute.\n+     * @param attributeKey The attribute key to be confirmed.\n+     * @return An Rx {@link Single} which emits {@link AuthCodeDeliveryDetails} on success,\n+     *         {@link AuthException} on failure\n+     */\n+    Single<AuthCodeDeliveryDetails> resendUserAttributeConfirmationCode(@NonNull AuthUserAttributeKey attributeKey);\n+\n+    /**\n+     * Confirm user attribute.\n+     * @param attributeKey The user attribute key\n+     * @param confirmationCode The confirmation code the user received after starting\n+     *                         the resendUserAttributeConfirmationCode process\n+     * @return An Rx {@link Completable} which completes successfully if userAttributeKey is confirmed,", "originalCommit": "e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae73673f6b2d5892b76d55748de4a9f8c30b5128", "chunk": "diff --git a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java\nindex f3dcbb3a..a430832a 100644\n--- a/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java\n+++ b/rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java\n\n@@ -279,7 +279,7 @@ public interface RxAuthCategoryBehavior {\n      * @param attributeKey The user attribute key\n      * @param confirmationCode The confirmation code the user received after starting\n      *                         the resendUserAttributeConfirmationCode process\n-     * @return An Rx {@link Completable} which completes successfully if userAttributeKey is confirmed,\n+     * @return An Rx {@link Completable} which completes successfully if attributeKey is confirmed,\n      *         emits an {@link AuthException} otherwise\n      */\n     Completable confirmUserAttribute(@NonNull AuthUserAttributeKey attributeKey, @NonNull String confirmationCode);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1NDA5OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r493854098", "bodyText": "Can this just be AuthUserAttributeKey.email()?", "author": "jamesonwilliams", "createdAt": "2020-09-23T19:48:52Z", "path": "rxbindings/src/test/java/com/amplifyframework/rx/RxAuthBindingTest.java", "diffHunk": "@@ -796,6 +811,178 @@ public void testFetchDevices() throws InterruptedException {\n                 .assertValue(expected);\n     }\n \n+    /**\n+     * Tests that a successful request to fetch user attributes will propagate a completion\n+     * back through the binding.\n+     * @throws InterruptedException  If test observer is interrupted while awaiting terminal event\n+     */\n+    @Test\n+    public void testFetchUserAttributes() throws InterruptedException {\n+        // Arrange an invocation of the success Action\n+        List<AuthUserAttribute> expected = Collections.singletonList(\n+                new AuthUserAttribute(new AuthUserAttributeKey(ATTRIBUTE_KEY), ATTRIBUTE_VAL)", "originalCommit": "e985beaf24ff0f054f142aeb6dafdefbbc3730ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1NjM3Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/798#discussion_r493856377", "bodyText": "Yes. But I was thinking about using the existing fields defined at the beginning.", "author": "changxu0306", "createdAt": "2020-09-23T19:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1NDA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "57495d303d638d3932dc4cd21e73ae795a3aadeb", "chunk": "diff --git a/rxbindings/src/test/java/com/amplifyframework/rx/RxAuthBindingTest.java b/rxbindings/src/test/java/com/amplifyframework/rx/RxAuthBindingTest.java\nindex a212e642..c02669a3 100644\n--- a/rxbindings/src/test/java/com/amplifyframework/rx/RxAuthBindingTest.java\n+++ b/rxbindings/src/test/java/com/amplifyframework/rx/RxAuthBindingTest.java\n\n@@ -820,7 +820,7 @@ public final class RxAuthBindingTest {\n     public void testFetchUserAttributes() throws InterruptedException {\n         // Arrange an invocation of the success Action\n         List<AuthUserAttribute> expected = Collections.singletonList(\n-                new AuthUserAttribute(new AuthUserAttributeKey(ATTRIBUTE_KEY), ATTRIBUTE_VAL)\n+                new AuthUserAttribute(AuthUserAttributeKey.custom(ATTRIBUTE_KEY), ATTRIBUTE_VAL)\n         );\n \n         doAnswer(invocation -> {\n"}}, {"oid": "ae73673f6b2d5892b76d55748de4a9f8c30b5128", "url": "https://github.com/aws-amplify/amplify-android/commit/ae73673f6b2d5892b76d55748de4a9f8c30b5128", "message": "Update rxbindings/src/main/java/com/amplifyframework/rx/RxAuthCategoryBehavior.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-09-23T19:53:25Z", "type": "commit"}, {"oid": "57495d303d638d3932dc4cd21e73ae795a3aadeb", "url": "https://github.com/aws-amplify/amplify-android/commit/57495d303d638d3932dc4cd21e73ae795a3aadeb", "message": "Make AuthUserAttributeKey protected", "committedDate": "2020-09-23T21:14:48Z", "type": "commit"}, {"oid": "5109e98fde832b757fd9b00d45f6be6b5127cd2d", "url": "https://github.com/aws-amplify/amplify-android/commit/5109e98fde832b757fd9b00d45f6be6b5127cd2d", "message": "Merge branch 'add_user_attribute' of https://github.com/aws-amplify/amplify-android into add_user_attribute", "committedDate": "2020-09-23T21:16:00Z", "type": "commit"}]}