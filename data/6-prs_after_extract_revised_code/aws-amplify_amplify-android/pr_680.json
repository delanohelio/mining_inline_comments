{"pr_number": 680, "pr_title": "feature: adds progress callbacks to storage", "pr_createdAt": "2020-07-30T01:28:07Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/680", "timeline": [{"oid": "be8d47beb76f7b68fa426c468e0d911c4439b744", "url": "https://github.com/aws-amplify/amplify-android/commit/be8d47beb76f7b68fa426c468e0d911c4439b744", "message": "feature: adds progress callbacks to storage\n\nThe Storage category in Amplify iOS includes progress listeners, which\ncan be used to monitor the status of an active download or upload. The\noriginal APIs launched for Amplify Android did not include this\ncapability.\n\nThis commit adds overloads for uploadFile(...) and downloadFile(...), in a\nnon-breaking way. The old signatures are still available. However, a caller may\noptionally tap into progress updates by using these newly available forms:\n\n```kotlin\nAmplify.Storage.downloadFile(fromRemoteKey, toLocalFile,\n    StorageDownloadFileOptions.defaultInstance(),\n    { Log.i(\"download\", \"Progress = ${it.fractionCompleted}\") },\n    { Log.i(\"download\", \"Result = ${it.file.canonicalPath}\") },\n    { Log.e(\"download\", \"Error = ${it.localizedMessage}\") }\n)\n```\n\nOr:\n```kotlin\nAmplify.Storage.uploadFile(toRemoteKey, fromLocalFile,\n    StorageUploadFileOptions.defaultInstance(),\n    { Log.i(\"upload\", \"Progress = ${it.fractionCompleted}\") },\n    { Log.i(\"upload\", \"Result = ${it.key}\") },\n    { Log.e(\"upload\", \"Error = ${it.localizedMessage}\") }\n)\n```\n\nWhile not part of the public API, the UPLOAD_PROGRESS and\nDOWNLOAD_PROGRESS Hub events are being removed. Previously they were\npublished without any token to signify which download or which upload\nto which they meant to refer. In a system with multiple uploads and\ndownloads, this would become a source of defects.\n\nResolves: https://github.com/aws-amplify/amplify-android/issues/679", "committedDate": "2020-07-30T03:47:14Z", "type": "commit"}, {"oid": "be8d47beb76f7b68fa426c468e0d911c4439b744", "url": "https://github.com/aws-amplify/amplify-android/commit/be8d47beb76f7b68fa426c468e0d911c4439b744", "message": "feature: adds progress callbacks to storage\n\nThe Storage category in Amplify iOS includes progress listeners, which\ncan be used to monitor the status of an active download or upload. The\noriginal APIs launched for Amplify Android did not include this\ncapability.\n\nThis commit adds overloads for uploadFile(...) and downloadFile(...), in a\nnon-breaking way. The old signatures are still available. However, a caller may\noptionally tap into progress updates by using these newly available forms:\n\n```kotlin\nAmplify.Storage.downloadFile(fromRemoteKey, toLocalFile,\n    StorageDownloadFileOptions.defaultInstance(),\n    { Log.i(\"download\", \"Progress = ${it.fractionCompleted}\") },\n    { Log.i(\"download\", \"Result = ${it.file.canonicalPath}\") },\n    { Log.e(\"download\", \"Error = ${it.localizedMessage}\") }\n)\n```\n\nOr:\n```kotlin\nAmplify.Storage.uploadFile(toRemoteKey, fromLocalFile,\n    StorageUploadFileOptions.defaultInstance(),\n    { Log.i(\"upload\", \"Progress = ${it.fractionCompleted}\") },\n    { Log.i(\"upload\", \"Result = ${it.key}\") },\n    { Log.e(\"upload\", \"Error = ${it.localizedMessage}\") }\n)\n```\n\nWhile not part of the public API, the UPLOAD_PROGRESS and\nDOWNLOAD_PROGRESS Hub events are being removed. Previously they were\npublished without any token to signify which download or which upload\nto which they meant to refer. In a system with multiple uploads and\ndownloads, this would become a source of defects.\n\nResolves: https://github.com/aws-amplify/amplify-android/issues/679", "committedDate": "2020-07-30T03:47:14Z", "type": "forcePushed"}, {"oid": "2236fa0c0193fe1a42fdd59621d41b4698839c68", "url": "https://github.com/aws-amplify/amplify-android/commit/2236fa0c0193fe1a42fdd59621d41b4698839c68", "message": "Merge remote-tracking branch 'origin/main' into storage_progress", "committedDate": "2020-07-31T04:29:08Z", "type": "commit"}, {"oid": "10062758e1cd68e74e71d8e56346aa0d6ef28218", "url": "https://github.com/aws-amplify/amplify-android/commit/10062758e1cd68e74e71d8e56346aa0d6ef28218", "message": "fixup checkstyle", "committedDate": "2020-07-31T04:48:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEyMzU5Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/680#discussion_r465123592", "bodyText": "Maybe add a check here to prevent a possible divide by zero exception?  Might be a good idea because the previous logic in AWSS3StorageUploadFileOperation.java did have a check like this.", "author": "richardmcclellan", "createdAt": "2020-08-04T15:09:52Z", "path": "core/src/main/java/com/amplifyframework/storage/result/StorageTransferProgress.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.result;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Represents the current amount of progress that has made during a storage transfer operation.\n+ */\n+public final class StorageTransferProgress {\n+    private final long currentBytes;\n+    private final long totalBytes;\n+\n+    /**\n+     * Creates a new StorageTransferProgress instance.\n+     * @param currentBytes The number of bytes that have been transferred so far\n+     * @param totalBytes The total number of bytes that are expected to transfer\n+     */\n+    public StorageTransferProgress(long currentBytes, long totalBytes) {\n+        this.currentBytes = currentBytes;\n+        this.totalBytes = totalBytes;\n+    }\n+\n+    /**\n+     * Gets the current number of bytes that have been transferred.\n+     * This is number greater than 0, and less than or equal to the value of\n+     * {@link #getTotalBytes()}. For example, if 5 bytes have been transferred,\n+     * and 10 bytes are expected to transfer, this value is 5.\n+     * @return The current number of bytes that have been transferred\n+     */\n+    public long getCurrentBytes() {\n+        return currentBytes;\n+    }\n+\n+    /**\n+     * Gets the total number of bytes that are expected to transfer. When this number\n+     * of bytes has transferred, the transfer is complete. This value is greater than or\n+     * equal to the value of {@link #getCurrentBytes()}.\n+     * @return The total number of bytes that are expected to transfer.\n+     */\n+    public long getTotalBytes() {\n+        return totalBytes;\n+    }\n+\n+    /**\n+     * Gets the fraction of the transfer that has been completed, so far. This is a value\n+     * greater than or equal to 0, and less than or equal to 1. When the value is 0, the transfer\n+     * has not started. When the value is 1, the transfer is complete. If 5 bytes have been transferred,\n+     * and 10 bytes are expected, this value is (5.0f/10.0f) = 0.5f.\n+     * @return Fraction of transfer that has been completed, a value between 0 and 1, inclusive.\n+     */\n+    public double getFractionCompleted() {\n+        return ((double) currentBytes) / totalBytes;", "originalCommit": "10062758e1cd68e74e71d8e56346aa0d6ef28218", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}