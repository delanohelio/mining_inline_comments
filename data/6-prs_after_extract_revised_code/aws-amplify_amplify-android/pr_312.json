{"pr_number": 312, "pr_title": "[Analytics] Add api to attach user information to the endpoint", "pr_createdAt": "2020-03-19T18:55:28Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/312", "timeline": [{"oid": "071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "url": "https://github.com/aws-amplify/amplify-android/commit/071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "message": "Add api to attach user information to the endpoint", "committedDate": "2020-03-20T03:24:52Z", "type": "commit"}, {"oid": "071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "url": "https://github.com/aws-amplify/amplify-android/commit/071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "message": "Add api to attach user information to the endpoint", "committedDate": "2020-03-20T03:24:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNjY1Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395426653", "bodyText": "If you make this nullable, add a note to the javadoc about what happens when it is null / what the null means.", "author": "jamesonwilliams", "createdAt": "2020-03-20T03:38:58Z", "path": "core/src/main/java/com/amplifyframework/analytics/AnalyticsCategoryBehavior.java", "diffHunk": "@@ -33,7 +34,7 @@\n      * @param userId The unique identifier for the user\n      * @param profile User specific data (e.g. plan, accountType, email, age, location, etc)\n      */\n-    void identifyUser(@NonNull String userId, @NonNull AnalyticsProfile profile);\n+    void identifyUser(@NonNull String userId, @Nullable UserProfile profile);", "originalCommit": "071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/analytics/AnalyticsCategoryBehavior.java b/core/src/main/java/com/amplifyframework/analytics/AnalyticsCategoryBehavior.java\nindex 895524bf..f462af24 100644\n--- a/core/src/main/java/com/amplifyframework/analytics/AnalyticsCategoryBehavior.java\n+++ b/core/src/main/java/com/amplifyframework/analytics/AnalyticsCategoryBehavior.java\n\n@@ -32,7 +32,8 @@ public interface AnalyticsCategoryBehavior {\n      * an unique User ID and any optional traits you know about them like their email, name, etc.\n      *\n      * @param userId The unique identifier for the user\n-     * @param profile User specific data (e.g. plan, accountType, email, age, location, etc)\n+     * @param profile User specific data (e.g. plan, accountType, email, age, location, etc).\n+     *                If profile is null, no user data other than id will be attached to the endpoint.\n      */\n     void identifyUser(@NonNull String userId, @Nullable UserProfile profile);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNzA1Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395427052", "bodyText": "Right now, if userProfile is null, then it will get passed down into addUserProfileToEndpoint(...), where userProfile.getSomething() happens, and will generate aNullPointerException.\nSo, either you should guard if (userProfile != null) { useIt(); }, or you should dis-allow null by requireNonNull(...) immediately after receiving the value.\nIt's possible that null for htis param is supposed to mean \"clear the identified user.\"?", "author": "jamesonwilliams", "createdAt": "2020-03-20T03:41:17Z", "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "diffHunk": "@@ -79,8 +96,84 @@ public void enable() {\n      * {@inheritDoc}\n      */\n     @Override\n-    public void identifyUser(@NonNull String userId, @NonNull AnalyticsProfile profile) {\n-        throw new UnsupportedOperationException(\"This operation has not been implemented yet.\");\n+    public void identifyUser(@NonNull String userId, @Nullable UserProfile userProfile) {", "originalCommit": "071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2ODk5OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395868999", "bodyText": "Added null check for userProfile. userProfile = null means that the endpoint will have userId as the only information about the user and nothing more.", "author": "desokroshan", "createdAt": "2020-03-20T20:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNzA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "chunk": "diff --git a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\nindex cecfc828..e0de8776 100644\n--- a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n+++ b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n\n@@ -104,7 +118,9 @@ public final class AmazonPinpointAnalyticsPlugin extends AnalyticsPlugin<Object>\n         user.setUserId(userId);\n         endpointProfile.setUser(user);\n         // Add user-specific data to the endpoint\n-        addUserProfileToEndpoint(endpointProfile, userProfile);\n+        if (userProfile != null) {\n+            addUserProfileToEndpoint(endpointProfile, userProfile);\n+        }\n         // update endpoint\n         targetingClient.updateEndpointProfile();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNzI0MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395427240", "bodyText": "All of these things that return a Builder will all return @NonNull, too. Might as well add it everywhere you can on public/protected members. It makes a big help for Kotlin code that calls this stuff.", "author": "jamesonwilliams", "createdAt": "2020-03-20T03:42:25Z", "path": "core/src/main/java/com/amplifyframework/analytics/UserProfile.java", "diffHunk": "@@ -0,0 +1,313 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.analytics;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Represents user specific data such as name, email, plan, location etc.\n+ */\n+public final class UserProfile {\n+    private String name;\n+    private String email;\n+    private String plan;\n+    private Location location;\n+    private Properties customProperties;\n+\n+    public UserProfile(Builder builder) {\n+        this.name = builder.name;\n+        this.email = builder.email;\n+        this.plan = builder.plan;\n+        this.location = builder.location;\n+        this.customProperties = builder.customProperties;\n+    }\n+\n+    @Nullable\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Nullable\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    @Nullable\n+    public String getPlan() {\n+        return plan;\n+    }\n+\n+    @Nullable\n+    public Location getLocation() {\n+        return location;\n+    }\n+\n+    @Nullable\n+    public Properties getCustomProperties() {\n+        return customProperties;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @SuppressWarnings(\"checkstyle:NeedBraces\")\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) return true;\n+        if (object == null || getClass() != object.getClass()) return false;\n+\n+        UserProfile that = (UserProfile) object;\n+\n+        if (name != null ? !name.equals(that.name) : that.name != null) return false;\n+        if (email != null ? !email.equals(that.email) : that.email != null) return false;\n+        if (plan != null ? !plan.equals(that.plan) : that.plan != null) return false;\n+        if (location != null ? !location.equals(that.location) : that.location != null)\n+            return false;\n+        return customProperties != null ? customProperties.equals(that.customProperties) :\n+                that.customProperties == null;\n+    }\n+\n+    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+    @Override\n+    public int hashCode() {\n+        int result = name != null ? name.hashCode() : 0;\n+        result = 31 * result + (email != null ? email.hashCode() : 0);\n+        result = 31 * result + (plan != null ? plan.hashCode() : 0);\n+        result = 31 * result + (location != null ? location.hashCode() : 0);\n+        result = 31 * result + (customProperties != null ? customProperties.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"UserProfile{\" +\n+                \"name='\" + name + '\\'' +\n+                \", email='\" + email + '\\'' +\n+                \", plan='\" + plan + '\\'' +\n+                \", location=\" + location +\n+                \", customProperties=\" + customProperties +\n+                '}';\n+    }\n+\n+    public static final class Builder {\n+        private String name;\n+        private String email;\n+        private String plan;\n+        private Location location;\n+        private Properties customProperties;\n+\n+        public Builder name(@NonNull final String name) {\n+            Objects.requireNonNull(name);\n+            this.name = name;\n+            return this;\n+        }\n+\n+        public Builder email(@NonNull final String email) {\n+            Objects.requireNonNull(email);\n+            this.email = email;\n+            return this;\n+        }\n+\n+        public Builder plan(@NonNull final String plan) {\n+            Objects.requireNonNull(plan);\n+            this.plan = plan;\n+            return this;\n+        }\n+\n+        public Builder location(@NonNull final Location location) {\n+            Objects.requireNonNull(location);\n+            this.location = location;\n+            return this;\n+        }\n+\n+        public Builder customProperties(@NonNull final Properties properties) {\n+            Objects.requireNonNull(properties);\n+            this.customProperties = properties;\n+            return this;\n+        }\n+\n+        public UserProfile build() {\n+            if (name == null &&\n+                email == null &&\n+                plan == null &&\n+                location == null &&\n+                customProperties == null\n+            ) {\n+                throw new IllegalArgumentException(\"You must set at least one user attribute to \" +\n+                        \"construct a valid user profile\");\n+            }\n+            return new UserProfile(this);\n+        }\n+    }\n+\n+    public static final class Location {\n+        private Double latitude;\n+        private Double longitude;\n+        private String postalCode;\n+        private String city;\n+        private String region;\n+        private String country;\n+\n+        public Location(Builder builder) {\n+            this.latitude = builder.latitude;\n+            this.longitude = builder.longitude;\n+            this.postalCode = builder.postalCode;\n+            this.city = builder.city;\n+            this.region = builder.region;\n+            this.country = builder.country;\n+        }\n+\n+        @Nullable\n+        public Double getLatitude() {\n+            return latitude;\n+        }\n+\n+        @Nullable\n+        public Double getLongitude() {\n+            return longitude;\n+        }\n+\n+        @Nullable\n+        public String getPostalCode() {\n+            return postalCode;\n+        }\n+\n+        @Nullable\n+        public String getCity() {\n+            return city;\n+        }\n+\n+        @Nullable\n+        public String getRegion() {\n+            return region;\n+        }\n+\n+        @Nullable\n+        public String getCountry() {\n+            return country;\n+        }\n+\n+        public static Builder builder() {\n+            return new Builder();\n+        }\n+\n+        @SuppressWarnings(\"checkstyle:NeedBraces\")\n+        @Override\n+        public boolean equals(Object object) {\n+            if (this == object) return true;\n+            if (object == null || getClass() != object.getClass()) return false;\n+\n+            Location location = (Location) object;\n+\n+            if (latitude != null ? !latitude.equals(location.latitude) : location.latitude != null)\n+                return false;\n+            if (longitude != null ? !longitude.equals(location.longitude) : location.longitude != null)\n+                return false;\n+            if (postalCode != null ? !postalCode.equals(location.postalCode) : location.postalCode != null)\n+                return false;\n+            if (city != null ? !city.equals(location.city) : location.city != null) return false;\n+            if (region != null ? !region.equals(location.region) : location.region != null)\n+                return false;\n+            return country != null ? country.equals(location.country) : location.country == null;\n+        }\n+\n+        @SuppressWarnings(\"checkstyle:MagicNumber\")\n+        @Override\n+        public int hashCode() {\n+            int result = latitude != null ? latitude.hashCode() : 0;\n+            result = 31 * result + (longitude != null ? longitude.hashCode() : 0);\n+            result = 31 * result + (postalCode != null ? postalCode.hashCode() : 0);\n+            result = 31 * result + (city != null ? city.hashCode() : 0);\n+            result = 31 * result + (region != null ? region.hashCode() : 0);\n+            result = 31 * result + (country != null ? country.hashCode() : 0);\n+            return result;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"Location{\" +\n+                    \"latitude=\" + latitude +\n+                    \", longitude=\" + longitude +\n+                    \", postalCode='\" + postalCode + '\\'' +\n+                    \", city='\" + city + '\\'' +\n+                    \", region='\" + region + '\\'' +\n+                    \", country='\" + country + '\\'' +\n+                    '}';\n+        }\n+\n+        public static final class Builder {\n+            private Double latitude;\n+            private Double longitude;\n+            private String postalCode;\n+            private String city;\n+            private String region;\n+            private String country;\n+\n+            public Builder latitude(@NonNull Double latitude) {\n+                Objects.requireNonNull(latitude);\n+                this.latitude = latitude;\n+                return this;\n+            }\n+\n+            public Builder longitude(@NonNull Double longitude) {\n+                Objects.requireNonNull(longitude);\n+                this.longitude = longitude;\n+                return this;\n+            }\n+\n+            public Builder postalCode(@NonNull String postalCode) {\n+                Objects.requireNonNull(postalCode);\n+                this.postalCode = postalCode;\n+                return this;\n+            }\n+\n+            public Builder city(@NonNull String city) {\n+                Objects.requireNonNull(city);\n+                this.city = city;\n+                return this;\n+            }\n+\n+            public Builder region(@NonNull String region) {\n+                Objects.requireNonNull(region);\n+                this.region = region;\n+                return this;\n+            }\n+\n+            public Builder country(@NonNull String country) {", "originalCommit": "071899d9eeeb45bb5c35011426377cbc3e6ec8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\nindex f03cd887..6d504b7a 100644\n--- a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n+++ b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n\n@@ -24,13 +24,14 @@ import java.util.Objects;\n  * Represents user specific data such as name, email, plan, location etc.\n  */\n public final class UserProfile {\n-    private String name;\n-    private String email;\n-    private String plan;\n-    private Location location;\n-    private Properties customProperties;\n-\n-    public UserProfile(Builder builder) {\n+    private final String name;\n+    private final String email;\n+    private final String plan;\n+    private final Location location;\n+    private final Properties customProperties;\n+\n+    public UserProfile(@NonNull Builder builder) {\n+        Objects.requireNonNull(builder);\n         this.name = builder.name;\n         this.email = builder.email;\n         this.plan = builder.plan;\n"}}, {"oid": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "url": "https://github.com/aws-amplify/amplify-android/commit/a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "message": "Add nullity annotations and apply other feedback", "committedDate": "2020-03-20T20:55:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyMzcxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395923711", "bodyText": "nit: to help break up the groupings, add an empty line after the constants, before the Application declaration.", "author": "jamesonwilliams", "createdAt": "2020-03-20T22:55:29Z", "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "diffHunk": "@@ -18,35 +18,58 @@\n import android.app.Application;\n import android.content.Context;\n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringDef;\n \n+import com.amplifyframework.analytics.AnalyticsChannelEventName;\n import com.amplifyframework.analytics.AnalyticsEvent;\n import com.amplifyframework.analytics.AnalyticsException;\n import com.amplifyframework.analytics.AnalyticsPlugin;\n-import com.amplifyframework.analytics.AnalyticsProfile;\n import com.amplifyframework.analytics.Properties;\n import com.amplifyframework.analytics.Property;\n+import com.amplifyframework.analytics.UserProfile;\n import com.amplifyframework.core.Amplify;\n import com.amplifyframework.hub.HubChannel;\n import com.amplifyframework.hub.HubEvent;\n \n import com.amazonaws.mobileconnectors.pinpoint.PinpointManager;\n import com.amazonaws.mobileconnectors.pinpoint.analytics.AnalyticsClient;\n+import com.amazonaws.mobileconnectors.pinpoint.targeting.TargetingClient;\n+import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfile;\n+import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfileLocation;\n+import com.amazonaws.mobileconnectors.pinpoint.targeting.endpointProfile.EndpointProfileUser;\n import com.amazonaws.regions.Regions;\n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.util.Collections;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n \n /**\n  * The plugin implementation for Amazon Pinpoint in Analytics category.\n  */\n public final class AmazonPinpointAnalyticsPlugin extends AnalyticsPlugin<Object> {\n+    @SuppressWarnings(\"checkstyle:WhitespaceAround\")\n+    @Retention(RetentionPolicy.SOURCE)\n+    @StringDef({\n+        USER_NAME,\n+        USER_EMAIL,\n+        USER_PLAN\n+    })\n+    private @interface PinpointUserProfileAttribute {}\n+    private static final String USER_NAME = \"name\";\n+    private static final String USER_EMAIL = \"email\";\n+    private static final String USER_PLAN = \"plan\";\n     private final Application application;", "originalCommit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd0a6fec6e3f901242da67681dd4812572798ca3", "chunk": "diff --git a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\nindex e0de8776..7de7c838 100644\n--- a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n+++ b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n\n@@ -64,6 +64,7 @@ public final class AmazonPinpointAnalyticsPlugin extends AnalyticsPlugin<Object>\n     private static final String USER_NAME = \"name\";\n     private static final String USER_EMAIL = \"email\";\n     private static final String USER_PLAN = \"plan\";\n+\n     private final Application application;\n     private AutoEventSubmitter autoEventSubmitter;\n     private AmazonPinpointAnalyticsPluginConfiguration pinpointAnalyticsPluginConfiguration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyMzkwMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395923900", "bodyText": "This class is final, and can't be extended. So protected isn't of much value, here. I think maybe you want just default package-local access, here?", "author": "jamesonwilliams", "createdAt": "2020-03-20T22:56:09Z", "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "diffHunk": "@@ -65,6 +88,14 @@ protected AnalyticsClient getAnalyticsClient() {\n         return analyticsClient;\n     }\n \n+    /**\n+     * Accessor method for pinpoint targeting client.\n+     * @return returns pinpoint targeting client.\n+     */\n+    protected TargetingClient getTargetingClient() {", "originalCommit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd0a6fec6e3f901242da67681dd4812572798ca3", "chunk": "diff --git a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\nindex e0de8776..7de7c838 100644\n--- a/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n+++ b/aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java\n\n@@ -92,7 +93,7 @@ public final class AmazonPinpointAnalyticsPlugin extends AnalyticsPlugin<Object>\n      * Accessor method for pinpoint targeting client.\n      * @return returns pinpoint targeting client.\n      */\n-    protected TargetingClient getTargetingClient() {\n+    TargetingClient getTargetingClient() {\n         return targetingClient;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNDQyMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395924421", "bodyText": "If you make this as private UserProfile(Builder builder), then only you will be able to call this constructor, and you don't have to worry about the builder being null (you'll be able to ensure that, with your own code in this file.)", "author": "jamesonwilliams", "createdAt": "2020-03-20T22:58:08Z", "path": "core/src/main/java/com/amplifyframework/analytics/UserProfile.java", "diffHunk": "@@ -0,0 +1,314 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.analytics;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Represents user specific data such as name, email, plan, location etc.\n+ */\n+public final class UserProfile {\n+    private final String name;\n+    private final String email;\n+    private final String plan;\n+    private final Location location;\n+    private final Properties customProperties;\n+\n+    public UserProfile(@NonNull Builder builder) {", "originalCommit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd0a6fec6e3f901242da67681dd4812572798ca3", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\nindex 6d504b7a..620f353d 100644\n--- a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n+++ b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n\n@@ -30,8 +30,7 @@ public final class UserProfile {\n     private final Location location;\n     private final Properties customProperties;\n \n-    public UserProfile(@NonNull Builder builder) {\n-        Objects.requireNonNull(builder);\n+    private UserProfile(@NonNull Builder builder) {\n         this.name = builder.name;\n         this.email = builder.email;\n         this.plan = builder.plan;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNDcwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r395924701", "bodyText": "Same deal here, you can probably make this private Location(Builder builder), and then as long as you always pass non-null from build(), you don't need to check Objects.requireNonNull(...), since that's the only single place it'll ever be possible.", "author": "jamesonwilliams", "createdAt": "2020-03-20T22:59:21Z", "path": "core/src/main/java/com/amplifyframework/analytics/UserProfile.java", "diffHunk": "@@ -0,0 +1,314 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.analytics;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Represents user specific data such as name, email, plan, location etc.\n+ */\n+public final class UserProfile {\n+    private final String name;\n+    private final String email;\n+    private final String plan;\n+    private final Location location;\n+    private final Properties customProperties;\n+\n+    public UserProfile(@NonNull Builder builder) {\n+        Objects.requireNonNull(builder);\n+        this.name = builder.name;\n+        this.email = builder.email;\n+        this.plan = builder.plan;\n+        this.location = builder.location;\n+        this.customProperties = builder.customProperties;\n+    }\n+\n+    @Nullable\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Nullable\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    @Nullable\n+    public String getPlan() {\n+        return plan;\n+    }\n+\n+    @Nullable\n+    public Location getLocation() {\n+        return location;\n+    }\n+\n+    @Nullable\n+    public Properties getCustomProperties() {\n+        return customProperties;\n+    }\n+\n+    @NonNull\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @SuppressWarnings(\"checkstyle:NeedBraces\")\n+    @Override\n+    public boolean equals(@Nullable Object object) {\n+        if (this == object) return true;\n+        if (object == null || getClass() != object.getClass()) return false;\n+\n+        UserProfile that = (UserProfile) object;\n+\n+        if (name != null ? !name.equals(that.name) : that.name != null) return false;\n+        if (email != null ? !email.equals(that.email) : that.email != null) return false;\n+        if (plan != null ? !plan.equals(that.plan) : that.plan != null) return false;\n+        if (location != null ? !location.equals(that.location) : that.location != null)\n+            return false;\n+        return customProperties != null ? customProperties.equals(that.customProperties) :\n+                that.customProperties == null;\n+    }\n+\n+    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+    @Override\n+    public int hashCode() {\n+        int result = name != null ? name.hashCode() : 0;\n+        result = 31 * result + (email != null ? email.hashCode() : 0);\n+        result = 31 * result + (plan != null ? plan.hashCode() : 0);\n+        result = 31 * result + (location != null ? location.hashCode() : 0);\n+        result = 31 * result + (customProperties != null ? customProperties.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+        return \"UserProfile{\" +\n+                \"name='\" + name + '\\'' +\n+                \", email='\" + email + '\\'' +\n+                \", plan='\" + plan + '\\'' +\n+                \", location=\" + location +\n+                \", customProperties=\" + customProperties +\n+                '}';\n+    }\n+\n+    public static final class Builder {\n+        private String name;\n+        private String email;\n+        private String plan;\n+        private Location location;\n+        private Properties customProperties;\n+\n+        @NonNull\n+        public Builder name(@NonNull final String name) {\n+            Objects.requireNonNull(name);\n+            this.name = name;\n+            return this;\n+        }\n+\n+        @NonNull\n+        public Builder email(@NonNull final String email) {\n+            Objects.requireNonNull(email);\n+            this.email = email;\n+            return this;\n+        }\n+\n+        @NonNull\n+        public Builder plan(@NonNull final String plan) {\n+            Objects.requireNonNull(plan);\n+            this.plan = plan;\n+            return this;\n+        }\n+\n+        @NonNull\n+        public Builder location(@NonNull final Location location) {\n+            Objects.requireNonNull(location);\n+            this.location = location;\n+            return this;\n+        }\n+\n+        @NonNull\n+        public Builder customProperties(@NonNull final Properties properties) {\n+            Objects.requireNonNull(properties);\n+            this.customProperties = properties;\n+            return this;\n+        }\n+\n+        @NonNull\n+        public UserProfile build() {\n+            return new UserProfile(this);\n+        }\n+    }\n+\n+    public static final class Location {\n+        private final Double latitude;\n+        private final Double longitude;\n+        private final String postalCode;\n+        private final String city;\n+        private final String region;\n+        private final String country;\n+\n+        public Location(@NonNull Builder builder) {", "originalCommit": "a62f3d7a7bc388e4f36c0e1203b6e126518c41ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd0a6fec6e3f901242da67681dd4812572798ca3", "chunk": "diff --git a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\nindex 6d504b7a..620f353d 100644\n--- a/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n+++ b/core/src/main/java/com/amplifyframework/analytics/UserProfile.java\n\n@@ -30,8 +30,7 @@ public final class UserProfile {\n     private final Location location;\n     private final Properties customProperties;\n \n-    public UserProfile(@NonNull Builder builder) {\n-        Objects.requireNonNull(builder);\n+    private UserProfile(@NonNull Builder builder) {\n         this.name = builder.name;\n         this.email = builder.email;\n         this.plan = builder.plan;\n"}}, {"oid": "bd0a6fec6e3f901242da67681dd4812572798ca3", "url": "https://github.com/aws-amplify/amplify-android/commit/bd0a6fec6e3f901242da67681dd4812572798ca3", "message": "Clean-ups", "committedDate": "2020-03-21T18:19:59Z", "type": "commit"}, {"oid": "05d2181828597a4633e828c5b64e0f489d6281d9", "url": "https://github.com/aws-amplify/amplify-android/commit/05d2181828597a4633e828c5b64e0f489d6281d9", "message": "Minimize the accessibility modifiers", "committedDate": "2020-03-23T19:47:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxOTk4Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/312#discussion_r396719982", "bodyText": "The comments in this test aren't very useful. I would just remove them.\n// Create a location object, and // Test endpoint attributes and metrics.\nYou could say something like:\n// Expect the properties from Amplify's UserProfile to be populated into the Pinpoint data structures.\n\nOr, this is straight-forward enough, maybe it's clearest without any comment at all.", "author": "jamesonwilliams", "createdAt": "2020-03-23T19:56:34Z", "path": "aws-analytics-pinpoint/src/androidTest/java/com/amplifyframework/analytics/pinpoint/AnalyticsPinpointInstrumentedTest.java", "diffHunk": "@@ -191,6 +198,48 @@ public void testUnregisterGlobalProperties() throws AnalyticsException {\n         assertFalse(analyticsClient.getAllEvents().get(0).has(\"attributes\"));\n     }\n \n+    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+    @Test\n+    public void testIdentifyUser() {\n+        // Create a location object", "originalCommit": "05d2181828597a4633e828c5b64e0f489d6281d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eabb741c0963f29563d73cb8bbc8140f8d937d5d", "chunk": "diff --git a/aws-analytics-pinpoint/src/androidTest/java/com/amplifyframework/analytics/pinpoint/AnalyticsPinpointInstrumentedTest.java b/aws-analytics-pinpoint/src/androidTest/java/com/amplifyframework/analytics/pinpoint/AnalyticsPinpointInstrumentedTest.java\nindex d98e145e..829efb92 100644\n--- a/aws-analytics-pinpoint/src/androidTest/java/com/amplifyframework/analytics/pinpoint/AnalyticsPinpointInstrumentedTest.java\n+++ b/aws-analytics-pinpoint/src/androidTest/java/com/amplifyframework/analytics/pinpoint/AnalyticsPinpointInstrumentedTest.java\n\n@@ -201,7 +201,6 @@ public class AnalyticsPinpointInstrumentedTest {\n     @SuppressWarnings(\"checkstyle:MagicNumber\")\n     @Test\n     public void testIdentifyUser() {\n-        // Create a location object\n         UserProfile.Location location = UserProfile.Location.builder()\n                 .latitude(47.6154086)\n                 .longitude(-122.3349685)\n"}}, {"oid": "eabb741c0963f29563d73cb8bbc8140f8d937d5d", "url": "https://github.com/aws-amplify/amplify-android/commit/eabb741c0963f29563d73cb8bbc8140f8d937d5d", "message": "Remove comments from test", "committedDate": "2020-03-23T20:28:22Z", "type": "commit"}]}