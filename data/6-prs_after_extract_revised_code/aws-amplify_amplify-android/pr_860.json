{"pr_number": 860, "pr_title": "Adds support for mixed owner and group based auth rules", "pr_createdAt": "2020-09-25T14:20:49Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/860", "timeline": [{"oid": "162482b92bf984e73a10421014052fff4ff2a286", "url": "https://github.com/aws-amplify/amplify-android/commit/162482b92bf984e73a10421014052fff4ff2a286", "message": "Adds support for mixed owner and group based auth rules", "committedDate": "2020-09-24T21:02:17Z", "type": "commit"}, {"oid": "efaf75a412673141b6eee8f4bda1c79ec75360fc", "url": "https://github.com/aws-amplify/amplify-android/commit/efaf75a412673141b6eee8f4bda1c79ec75360fc", "message": "Updated recovery message", "committedDate": "2020-09-25T14:16:38Z", "type": "commit"}, {"oid": "e8d66c56ef12a25fb659176b48e9c342f31f21c4", "url": "https://github.com/aws-amplify/amplify-android/commit/e8d66c56ef12a25fb659176b48e9c342f31f21c4", "message": "Renames variable", "committedDate": "2020-09-25T14:19:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyODc0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/860#discussion_r495028748", "bodyText": "\ud83e\udd2f \ud83e\udd23", "author": "rjuliano", "createdAt": "2020-09-25T14:30:53Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -286,13 +288,40 @@ public String getVersion() {\n         if (request instanceof AppSyncGraphQLRequest) {\n             try {\n                 AppSyncGraphQLRequest<R> appSyncRequest = (AppSyncGraphQLRequest<R>) request;\n+                AuthRule ownerRuleWithReadRestriction = null;\n+                ArrayList<String> readAuthorizedGroups = new ArrayList<>();\n+\n+                // Note that we are intentionally supporting only one owner rule with a READ operation at this time.\n+                // If there is more than one, the operation will fail because AppSync generates a parameter for each\n+                // one. The question then is which one do we pass. JavaScript currently doesn't support this use case\n+                // and it's not clear what a good solution would be until AppSync supports real time filters.\n                 for (AuthRule authRule : appSyncRequest.getModelSchema().getAuthRules()) {\n-                    if (isOwnerArgumentRequired(authRule)) {\n-                        request = appSyncRequest.newBuilder()\n-                                .variable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername())\n-                                .build();\n+                    if (isReadRestrictingOwner(authRule)) {\n+                        if (ownerRuleWithReadRestriction == null) {\n+                            ownerRuleWithReadRestriction = authRule;\n+                        } else {\n+                            onSubscriptionFailure.accept(new ApiException(\"Detected multiple owner type auth rules \" +\n+                                    \"with a READ operation\", \"We currently do not support this use case. Please \" +\n+                                    \"limit your type to just one owner auth rule with a READ operation restriction.\"));\n+                            return null;\n+                        }\n+                    } else if (isReadRestrictingStaticGroup(authRule)) {\n+                        readAuthorizedGroups.addAll(authRule.getGroups());\n                     }\n                 }\n+\n+                // We only add the owner parameter to the subscription if there is an owner rule with a READ restriction\n+                // and either there are no group auth rules with read access or there are but the user isn't in any of\n+                // them.", "originalCommit": "e8d66c56ef12a25fb659176b48e9c342f31f21c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}