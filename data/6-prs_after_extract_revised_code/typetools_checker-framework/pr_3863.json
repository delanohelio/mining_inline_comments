{"pr_number": 3863, "pr_title": "In `updateFromReturn`, remove Java expressions that contain local variables", "pr_createdAt": "2020-11-05T17:03:58Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3863", "timeline": [{"oid": "fcbb520779a380f3139c6a11d7f28ba2b7e5a717", "url": "https://github.com/typetools/checker-framework/commit/fcbb520779a380f3139c6a11d7f28ba2b7e5a717", "message": "Add formal parameter removeErroneousExpressions to dependent type standardization routines", "committedDate": "2020-11-05T08:56:26Z", "type": "commit"}, {"oid": "3f245ff7ca63a4f503db0534ea08e5e3bf58f3de", "url": "https://github.com/typetools/checker-framework/commit/3f245ff7ca63a4f503db0534ea08e5e3bf58f3de", "message": "Formatting tweak", "committedDate": "2020-11-05T09:01:26Z", "type": "commit"}, {"oid": "28770a84c88c067e9ffdfbaea553309638600655", "url": "https://github.com/typetools/checker-framework/commit/28770a84c88c067e9ffdfbaea553309638600655", "message": "Merge ../checker-framework-branch-master into standardize-removeErroneousExpressions", "committedDate": "2020-11-05T15:33:34Z", "type": "commit"}, {"oid": "f8b7ab4eedec5c018277a6ca59a363e71010511e", "url": "https://github.com/typetools/checker-framework/commit/f8b7ab4eedec5c018277a6ca59a363e71010511e", "message": "Add Javadoc", "committedDate": "2020-11-05T16:22:29Z", "type": "commit"}, {"oid": "a961649a81cb4adbbe77de06ab99b70098e5ba48", "url": "https://github.com/typetools/checker-framework/commit/a961649a81cb4adbbe77de06ab99b70098e5ba48", "message": "Add comment", "committedDate": "2020-11-05T16:22:35Z", "type": "commit"}, {"oid": "4db4a59da40d84e94be96c27e39b2f0d720ef54d", "url": "https://github.com/typetools/checker-framework/commit/4db4a59da40d84e94be96c27e39b2f0d720ef54d", "message": "Add hack for \"<self>\" expression", "committedDate": "2020-11-05T16:24:55Z", "type": "commit"}, {"oid": "b3293be5a460d7e156e62763a207d94cea15c343", "url": "https://github.com/typetools/checker-framework/commit/b3293be5a460d7e156e62763a207d94cea15c343", "message": "Skip Javadoc checking for this pull request", "committedDate": "2020-11-05T16:28:39Z", "type": "commit"}, {"oid": "1e216e365fc3273e2f79be892f82e08cda20aa74", "url": "https://github.com/typetools/checker-framework/commit/1e216e365fc3273e2f79be892f82e08cda20aa74", "message": "Undo hack, ensure that correct version of method is overridden", "committedDate": "2020-11-05T16:44:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyMjU0MQ==", "url": "https://github.com/typetools/checker-framework/pull/3863#discussion_r518422541", "bodyText": "This should only return null if removeErroneousExpressions is true.", "author": "smillst", "createdAt": "2020-11-05T23:01:53Z", "path": "checker/src/main/java/org/checkerframework/checker/lock/LockAnnotatedTypeFactory.java", "diffHunk": "@@ -170,9 +170,10 @@ protected String standardizeString(\n                     String expression,\n                     FlowExpressionContext context,\n                     TreePath localScope,\n-                    boolean useLocalScope) {\n+                    boolean useLocalScope,\n+                    boolean removeErroneousExpressions) {\n                 if (DependentTypesError.isExpressionError(expression)) {\n-                    return expression;\n+                    return null;", "originalCommit": "1e216e365fc3273e2f79be892f82e08cda20aa74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "21c9408945af4ec18e4042e31a37a2a9f8c2abd3", "chunk": "diff --git a/checker/src/main/java/org/checkerframework/checker/lock/LockAnnotatedTypeFactory.java b/checker/src/main/java/org/checkerframework/checker/lock/LockAnnotatedTypeFactory.java\nindex cc747af2f5..1e2cd2cf40 100644\n--- a/checker/src/main/java/org/checkerframework/checker/lock/LockAnnotatedTypeFactory.java\n+++ b/checker/src/main/java/org/checkerframework/checker/lock/LockAnnotatedTypeFactory.java\n\n@@ -170,10 +170,9 @@ public class LockAnnotatedTypeFactory\n                     String expression,\n                     FlowExpressionContext context,\n                     TreePath localScope,\n-                    boolean useLocalScope,\n-                    boolean removeErroneousExpressions) {\n+                    boolean useLocalScope) {\n                 if (DependentTypesError.isExpressionError(expression)) {\n-                    return null;\n+                    return expression;\n                 }\n \n                 // Adds logic to parse <self> expression, which only the Lock Checker uses.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyMjczMg==", "url": "https://github.com/typetools/checker-framework/pull/3863#discussion_r518422732", "bodyText": "Instead of passing removeErroneousExpressions to standardizeString, this if statement could check if standardized is an error string via DependentTypesError#isExpressionError.", "author": "smillst", "createdAt": "2020-11-05T23:02:19Z", "path": "framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java", "diffHunk": "@@ -600,8 +684,18 @@ private AnnotationMirror standardizeDependentTypeAnnotation(\n                     AnnotationUtils.getElementValueArray(anno, value, String.class, true);\n             List<String> standardizedStrings = new ArrayList<>();\n             for (String expression : expressionStrings) {\n-                standardizedStrings.add(\n-                        standardizeString(expression, context, localScope, useLocalScope));\n+                String standardized =\n+                        standardizeString(\n+                                expression,\n+                                context,\n+                                localScope,\n+                                useLocalScope,\n+                                removeErroneousExpressions);\n+                if (standardized == null) {", "originalCommit": "1e216e365fc3273e2f79be892f82e08cda20aa74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "21c9408945af4ec18e4042e31a37a2a9f8c2abd3", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java b/framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java\nindex 71b371e2ba..a146e862c6 100644\n--- a/framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java\n+++ b/framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java\n\n@@ -685,14 +656,10 @@ public class DependentTypesHelper {\n             List<String> standardizedStrings = new ArrayList<>();\n             for (String expression : expressionStrings) {\n                 String standardized =\n-                        standardizeString(\n-                                expression,\n-                                context,\n-                                localScope,\n-                                useLocalScope,\n-                                removeErroneousExpressions);\n-                if (standardized == null) {\n-                    assert removeErroneousExpressions;\n+                        standardizeString(expression, context, localScope, useLocalScope);\n+                if (removeErroneousExpressions\n+                        && DependentTypesError.isExpressionError(standardized)) {\n+                    // nothing to do\n                 } else {\n                     standardizedStrings.add(standardized);\n                 }\n"}}, {"oid": "21c9408945af4ec18e4042e31a37a2a9f8c2abd3", "url": "https://github.com/typetools/checker-framework/commit/21c9408945af4ec18e4042e31a37a2a9f8c2abd3", "message": "Remove removeErroneousExpressions formal parameter from standardizeString", "committedDate": "2020-11-06T00:05:03Z", "type": "commit"}, {"oid": "e6970d811f720fbe8cd9704e314d3424b2c00a41", "url": "https://github.com/typetools/checker-framework/commit/e6970d811f720fbe8cd9704e314d3424b2c00a41", "message": "Merge ../checker-framework-branch-master into standardize-removeErroneousExpressions", "committedDate": "2020-11-06T00:05:34Z", "type": "commit"}]}