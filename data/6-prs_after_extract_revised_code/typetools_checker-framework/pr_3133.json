{"pr_number": 3133, "pr_title": "Throw error rather than just printing a warning", "pr_createdAt": "2020-03-06T20:25:48Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3133", "timeline": [{"oid": "fc9a9f2c9ded224778603583a052f842dcaef9fe", "url": "https://github.com/typetools/checker-framework/commit/fc9a9f2c9ded224778603583a052f842dcaef9fe", "message": "SourceChecker cleanups", "committedDate": "2020-03-06T18:17:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5MzU3Mg==", "url": "https://github.com/typetools/checker-framework/pull/3133#discussion_r389993572", "bodyText": "You can't use BugInCF up here, because it is outside of the corresponding try/catch that would do something useful with it. So in the unlikely event this would ever happen, an ugly stack trace will be shown.\nThe previous code produces separate understandable errors, which seems preferable.\nHow about undoing this change?", "author": "wmdietl", "createdAt": "2020-03-09T22:20:54Z", "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -792,23 +792,14 @@ public void initChecker() {\n     protected int errsOnLastExit = 0;\n \n     /**\n-     * Type-check the code with Java specifications and then runs the Checker Rule Checking visitor\n-     * on the processed source.\n+     * Type-check the code using this checker's visitor.\n      *\n      * @see Processor#process(Set, RoundEnvironment)\n      */\n     @Override\n     public void typeProcess(TypeElement e, TreePath p) {\n-        if (e == null) {\n-            messager.printMessage(\n-                    javax.tools.Diagnostic.Kind.ERROR, \"Refusing to process empty TypeElement\");\n-            return;\n-        }\n-        if (p == null) {\n-            messager.printMessage(\n-                    javax.tools.Diagnostic.Kind.ERROR,\n-                    \"Refusing to process empty TreePath in TypeElement: \" + e);\n-            return;\n+        if (e == null || p == null) {\n+            throw new BugInCF(\"SourceChecker.typeProcess: e=%s, p=%s\", e, p);", "originalCommit": "fc9a9f2c9ded224778603583a052f842dcaef9fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e014c3530904ec6e09b107662e6d4a5ff6ce9a4f", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java b/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java\nindex ff9e481b2..ca130ac31 100644\n--- a/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java\n+++ b/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java\n\n@@ -798,8 +798,17 @@ public abstract class SourceChecker extends AbstractTypeProcessor\n      */\n     @Override\n     public void typeProcess(TypeElement e, TreePath p) {\n-        if (e == null || p == null) {\n-            throw new BugInCF(\"SourceChecker.typeProcess: e=%s, p=%s\", e, p);\n+        // Cannot use BugInCF here because it is outside of the try/catch for BugInCf\n+        if (e == null) {\n+            messager.printMessage(\n+                    javax.tools.Diagnostic.Kind.ERROR, \"Refusing to process empty TypeElement\");\n+            return;\n+        }\n+        if (p == null) {\n+            messager.printMessage(\n+                    javax.tools.Diagnostic.Kind.ERROR,\n+                    \"Refusing to process empty TreePath in TypeElement: \" + e);\n+            return;\n         }\n \n         Context context = ((JavacProcessingEnvironment) processingEnv).getContext();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5NDY3NA==", "url": "https://github.com/typetools/checker-framework/pull/3133#discussion_r389994674", "bodyText": "This change looks good and will indeed help us catch format string errors much easier.", "author": "wmdietl", "createdAt": "2020-03-09T22:24:05Z", "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -962,8 +953,9 @@ private void message(\n         try {\n             messageText = String.format(fmtString, args);\n         } catch (Exception e) {\n-            messageText =\n-                    \"Invalid format string: \\\"\" + fmtString + \"\\\" args: \" + Arrays.toString(args);\n+            throw new BugInCF(", "originalCommit": "fc9a9f2c9ded224778603583a052f842dcaef9fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "7f31e134b623801f49e2ed73e41eb5a518dd7cbc", "url": "https://github.com/typetools/checker-framework/commit/7f31e134b623801f49e2ed73e41eb5a518dd7cbc", "message": "Merge ../checker-framework-branch-master into sourcechecker-cleanups-2", "committedDate": "2020-03-10T01:55:46Z", "type": "commit"}, {"oid": "e014c3530904ec6e09b107662e6d4a5ff6ce9a4f", "url": "https://github.com/typetools/checker-framework/commit/e014c3530904ec6e09b107662e6d4a5ff6ce9a4f", "message": "Undo change, write comment about it", "committedDate": "2020-03-10T01:57:32Z", "type": "commit"}]}