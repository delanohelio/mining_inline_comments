{"pr_number": 3114, "pr_title": "Improve error message of inconsistent.constructor.type", "pr_createdAt": "2020-02-26T23:05:56Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3114", "timeline": [{"oid": "5c61ca5b59be2e1254cc6d77a507d2edc47f269a", "url": "https://github.com/typetools/checker-framework/commit/5c61ca5b59be2e1254cc6d77a507d2edc47f269a", "message": "update error message", "committedDate": "2020-02-26T23:01:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MTgzMA==", "url": "https://github.com/typetools/checker-framework/pull/3114#discussion_r385391830", "bodyText": "Shouldn't this just be top? Or am I missing something?", "author": "smillst", "createdAt": "2020-02-27T21:50:32Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -721,7 +721,10 @@ protected void checkConstructorResult(\n                     qualifierHierarchy.findAnnotationInHierarchy(constructorAnnotations, top);\n             if (!qualifierHierarchy.isSubtype(top, constructorAnno)) {\n                 checker.report(\n-                        Result.warning(\"inconsistent.constructor.type\", constructorAnno),\n+                        Result.warning(\n+                                \"inconsistent.constructor.type\",\n+                                constructorAnno,\n+                                qualifierHierarchy.getTopAnnotation(constructorAnno)),", "originalCommit": "5c61ca5b59be2e1254cc6d77a507d2edc47f269a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2MzI4Mg==", "url": "https://github.com/typetools/checker-framework/pull/3114#discussion_r385963282", "bodyText": "@abslamp Can you fix this?", "author": "wmdietl", "createdAt": "2020-02-28T23:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MTgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5ODU3Mg==", "url": "https://github.com/typetools/checker-framework/pull/3114#discussion_r385998572", "bodyText": "Thanks for feedback. It's now fixed.", "author": "abslamp", "createdAt": "2020-02-29T04:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MTgzMA=="}], "type": "inlineReview", "revised_code": {"commit": "8140cee5962f0bbd6044be93bf74a181cea6cbd7", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java b/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\nindex cf86b25551..3ec4473f98 100644\n--- a/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\n+++ b/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\n\n@@ -721,10 +721,7 @@ public class BaseTypeVisitor<Factory extends GenericAnnotatedTypeFactory<?, ?, ?\n                     qualifierHierarchy.findAnnotationInHierarchy(constructorAnnotations, top);\n             if (!qualifierHierarchy.isSubtype(top, constructorAnno)) {\n                 checker.report(\n-                        Result.warning(\n-                                \"inconsistent.constructor.type\",\n-                                constructorAnno,\n-                                qualifierHierarchy.getTopAnnotation(constructorAnno)),\n+                        Result.warning(\"inconsistent.constructor.type\", constructorAnno, top),\n                         constructorElement);\n             }\n         }\n"}}, {"oid": "8140cee5962f0bbd6044be93bf74a181cea6cbd7", "url": "https://github.com/typetools/checker-framework/commit/8140cee5962f0bbd6044be93bf74a181cea6cbd7", "message": "simp param", "committedDate": "2020-02-29T03:58:57Z", "type": "commit"}]}