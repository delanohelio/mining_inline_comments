{"pr_number": 3893, "pr_title": "Don't distinguish methods and constructors in purity messages", "pr_createdAt": "2020-11-13T21:40:16Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3893", "timeline": [{"oid": "691fc0471152e9ceee5dd7cde8217b95751438a6", "url": "https://github.com/typetools/checker-framework/commit/691fc0471152e9ceee5dd7cde8217b95751438a6", "message": "Don't distinguish methods and constructors in purity messages", "committedDate": "2020-11-13T20:43:28Z", "type": "commit"}, {"oid": "02c1767bb5ff0ad5e901534516df42fe39fb85ab", "url": "https://github.com/typetools/checker-framework/commit/02c1767bb5ff0ad5e901534516df42fe39fb85ab", "message": "Merge ../checker-framework-branch-master into lock-purity-fewer-messagekeys", "committedDate": "2020-11-13T21:00:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1MjExOQ==", "url": "https://github.com/typetools/checker-framework/pull/3893#discussion_r524452119", "bodyText": "This should be r.first.getKind() == Kind.METHOD_INVOCATION.", "author": "smillst", "createdAt": "2020-11-16T17:38:04Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -893,9 +893,14 @@ private void reportPurityError(String msgKeyPrefix, Pair<Tree, String> r) {\n         String reason = r.second;\n         @SuppressWarnings(\"compilermessages\")\n         @CompilerMessageKey String msgKey = msgKeyPrefix + reason;\n-        if (reason.equals(\"call\") || reason.equals(\"call.method\")) {\n-            MethodInvocationTree mitree = (MethodInvocationTree) r.first;\n-            checker.reportError(r.first, msgKey, mitree.getMethodSelect());\n+        if (reason.equals(\"call\")) {\n+            if (r.first instanceof MethodInvocationTree) {", "originalCommit": "02c1767bb5ff0ad5e901534516df42fe39fb85ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab813904748c780520f6a0b96fe712eff9dfebad", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java b/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\nindex cd72edaa4..328238763 100644\n--- a/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\n+++ b/framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java\n\n@@ -894,7 +894,7 @@ public class BaseTypeVisitor<Factory extends GenericAnnotatedTypeFactory<?, ?, ?\n         @SuppressWarnings(\"compilermessages\")\n         @CompilerMessageKey String msgKey = msgKeyPrefix + reason;\n         if (reason.equals(\"call\")) {\n-            if (r.first instanceof MethodInvocationTree) {\n+            if (r.first.getKind() == Kind.METHOD_INVOCATION) {\n                 MethodInvocationTree mitree = (MethodInvocationTree) r.first;\n                 checker.reportError(r.first, msgKey, mitree.getMethodSelect());\n             } else {\n"}}, {"oid": "ab813904748c780520f6a0b96fe712eff9dfebad", "url": "https://github.com/typetools/checker-framework/commit/ab813904748c780520f6a0b96fe712eff9dfebad", "message": "Don't use instanceof", "committedDate": "2020-11-16T17:40:59Z", "type": "commit"}, {"oid": "1cd6c9653805a13e08cc475fa16176a60a73e3b4", "url": "https://github.com/typetools/checker-framework/commit/1cd6c9653805a13e08cc475fa16176a60a73e3b4", "message": "Add outer class", "committedDate": "2020-11-16T17:44:07Z", "type": "commit"}]}