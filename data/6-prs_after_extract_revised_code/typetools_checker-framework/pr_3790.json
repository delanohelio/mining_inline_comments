{"pr_number": 3790, "pr_title": "Correct AnnotatedIntersectionTypes", "pr_createdAt": "2020-10-16T19:21:50Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3790", "timeline": [{"oid": "fdbf4e682d652c184df03640f4193c573ec0571c", "url": "https://github.com/typetools/checker-framework/commit/fdbf4e682d652c184df03640f4193c573ec0571c", "message": "The bounds of intersection types are not just declared types.", "committedDate": "2020-10-13T20:35:00Z", "type": "commit"}, {"oid": "207102a5396a9094e0d522a2dc4a890b91a391c7", "url": "https://github.com/typetools/checker-framework/commit/207102a5396a9094e0d522a2dc4a890b91a391c7", "message": "checkpoint.", "committedDate": "2020-10-14T20:28:22Z", "type": "commit"}, {"oid": "fcf3ae89cf12c8470129725b20c6ce0372310610", "url": "https://github.com/typetools/checker-framework/commit/fcf3ae89cf12c8470129725b20c6ce0372310610", "message": "Merge remote-tracking branch 'origin/master' into intersections", "committedDate": "2020-10-14T20:28:35Z", "type": "commit"}, {"oid": "538bdd377a7b8bbbf222897036a414b65594cf3b", "url": "https://github.com/typetools/checker-framework/commit/538bdd377a7b8bbbf222897036a414b65594cf3b", "message": "Replace code with equ.", "committedDate": "2020-10-14T20:32:28Z", "type": "commit"}, {"oid": "00da1a09f1b61edb76f825ff815b0d898e40e5fb", "url": "https://github.com/typetools/checker-framework/commit/00da1a09f1b61edb76f825ff815b0d898e40e5fb", "message": "Merge branch 'typevar-intersection' into intersections", "committedDate": "2020-10-14T20:46:34Z", "type": "commit"}, {"oid": "a9d183d6907d8a94e6d419d05e34f39675993f80", "url": "https://github.com/typetools/checker-framework/commit/a9d183d6907d8a94e6d419d05e34f39675993f80", "message": "Doneish", "committedDate": "2020-10-14T21:56:17Z", "type": "commit"}, {"oid": "098ec6ce5f3d27bd968bc1706e774407e71f896c", "url": "https://github.com/typetools/checker-framework/commit/098ec6ce5f3d27bd968bc1706e774407e71f896c", "message": "Fix.", "committedDate": "2020-10-14T22:30:36Z", "type": "commit"}, {"oid": "34b5e1a7c3681c49a26fca0f46da44e9b7f44381", "url": "https://github.com/typetools/checker-framework/commit/34b5e1a7c3681c49a26fca0f46da44e9b7f44381", "message": "Finish", "committedDate": "2020-10-14T22:36:26Z", "type": "commit"}, {"oid": "6f8cdfe4b77f7afc3cff66836636f353e1ff4c3c", "url": "https://github.com/typetools/checker-framework/commit/6f8cdfe4b77f7afc3cff66836636f353e1ff4c3c", "message": "Merge remote-tracking branch 'origin/master' into intersections", "committedDate": "2020-10-14T22:36:59Z", "type": "commit"}, {"oid": "781fda12fcbfefcb558a42bade8d1bbf230e6ba8", "url": "https://github.com/typetools/checker-framework/commit/781fda12fcbfefcb558a42bade8d1bbf230e6ba8", "message": "Merge remote-tracking branch 'remotes/origin/master' into intersections\n\n# Conflicts:\n#\tframework/src/main/java/org/checkerframework/framework/flow/CFTreeBuilder.java", "committedDate": "2020-10-15T16:22:47Z", "type": "commit"}, {"oid": "51fd050303d2719cbea3ae3664eed1c7d6ba6417", "url": "https://github.com/typetools/checker-framework/commit/51fd050303d2719cbea3ae3664eed1c7d6ba6417", "message": "Adapt to changes.", "committedDate": "2020-10-15T16:23:43Z", "type": "commit"}, {"oid": "eccc770dc071de9ecf0e1db3baf47f671fa4adbc", "url": "https://github.com/typetools/checker-framework/commit/eccc770dc071de9ecf0e1db3baf47f671fa4adbc", "message": "check.", "committedDate": "2020-10-15T16:47:32Z", "type": "commit"}, {"oid": "0f8250f5d47e28189d3903e9e1b52d480a1eb80c", "url": "https://github.com/typetools/checker-framework/commit/0f8250f5d47e28189d3903e9e1b52d480a1eb80c", "message": "Remove method.", "committedDate": "2020-10-15T16:57:21Z", "type": "commit"}, {"oid": "4cc352e291d4cd0d7732b0a8c474456a0b0eed72", "url": "https://github.com/typetools/checker-framework/commit/4cc352e291d4cd0d7732b0a8c474456a0b0eed72", "message": "Rename.", "committedDate": "2020-10-15T17:04:02Z", "type": "commit"}, {"oid": "d90190eca860c493b959e2eca2368705ca4e5878", "url": "https://github.com/typetools/checker-framework/commit/d90190eca860c493b959e2eca2368705ca4e5878", "message": "Added changelog.", "committedDate": "2020-10-15T17:57:11Z", "type": "commit"}, {"oid": "3d12899e66118bc50d966afc5578171bea30d9f0", "url": "https://github.com/typetools/checker-framework/commit/3d12899e66118bc50d966afc5578171bea30d9f0", "message": "Add warning.", "committedDate": "2020-10-15T20:38:42Z", "type": "commit"}, {"oid": "5962258506a11b7e14f2a79c1e2974a8d0e66736", "url": "https://github.com/typetools/checker-framework/commit/5962258506a11b7e14f2a79c1e2974a8d0e66736", "message": "Fix.", "committedDate": "2020-10-16T17:40:38Z", "type": "commit"}, {"oid": "f2dced7ccea901c5e7b5ca31c9088be61b9d95d8", "url": "https://github.com/typetools/checker-framework/commit/f2dced7ccea901c5e7b5ca31c9088be61b9d95d8", "message": "Merge remote-tracking branch 'origin/master' into warn-intersections", "committedDate": "2020-10-16T17:41:43Z", "type": "commit"}, {"oid": "22d5c32e52c2efe223209c8a1e0d99a4bfc72a65", "url": "https://github.com/typetools/checker-framework/commit/22d5c32e52c2efe223209c8a1e0d99a4bfc72a65", "message": "Tweaks.", "committedDate": "2020-10-16T17:54:29Z", "type": "commit"}, {"oid": "62b47cd4223f40119af30be741c001ed08324b0f", "url": "https://github.com/typetools/checker-framework/commit/62b47cd4223f40119af30be741c001ed08324b0f", "message": "Add expected warnings.", "committedDate": "2020-10-16T19:11:11Z", "type": "commit"}, {"oid": "24bd31b6138e677591d15ef0e48e2dfe9cafdb0f", "url": "https://github.com/typetools/checker-framework/commit/24bd31b6138e677591d15ef0e48e2dfe9cafdb0f", "message": "Add Javadoc.", "committedDate": "2020-10-16T19:16:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4OTUyNA==", "url": "https://github.com/typetools/checker-framework/pull/3790#discussion_r506789524", "bodyText": "In this example, the annotation isn't just copied to the primary annotation location, but to every bound of the intersection.\nAlso, it would be helpful to indicate that the primary annotation location is different than all the annotations on the bounds.  The example doesn't actually show the primary annotation location.  So, I find the example a bit confusing.", "author": "mernst", "createdAt": "2020-10-17T03:48:31Z", "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeMirror.java", "diffHunk": "@@ -2118,27 +2132,67 @@ public AnnotatedIntersectionType shallowCopy() {\n             return shallowCopy(true);\n         }\n \n-        protected List<AnnotatedDeclaredType> supertypes;\n-\n+        /**\n+         * {@inheritDoc}\n+         *\n+         * <p>This returns the same types as {@link #getBounds()}.\n+         *\n+         * @return the direct super types of this\n+         */\n         @Override\n-        public List<AnnotatedDeclaredType> directSuperTypes() {\n-            if (supertypes == null) {\n+        public List<? extends AnnotatedTypeMirror> directSuperTypes() {\n+            return getBounds();\n+        }\n+\n+        /**\n+         * This returns the bounds of the intersection type. Although only declared types can appear\n+         * in an explicitly written intersections, during capture conversion, intersections with\n+         * other kinds of types are created.\n+         *\n+         * <p>This returns the same types as {@link #directSuperTypes()}.\n+         *\n+         * @return the bounds of this, which are also the direct super types of this\n+         */\n+        public List<AnnotatedTypeMirror> getBounds() {\n+            if (bounds == null) {\n                 List<? extends TypeMirror> ubounds = ((IntersectionType) actualType).getBounds();\n-                List<AnnotatedDeclaredType> res = new ArrayList<>(ubounds.size());\n+                List<AnnotatedTypeMirror> res = new ArrayList<>(ubounds.size());\n                 for (TypeMirror bnd : ubounds) {\n-                    res.add((AnnotatedDeclaredType) createType(bnd, atypeFactory, false));\n+                    res.add(createType(bnd, atypeFactory, false));\n                 }\n-                supertypes = Collections.unmodifiableList(res);\n+                bounds = Collections.unmodifiableList(res);\n+                fixupBoundAnnotations();\n             }\n-            return supertypes;\n+            return bounds;\n         }\n \n-        public List<AnnotatedDeclaredType> directSuperTypesField() {\n-            return supertypes;\n+        /**\n+         * Sets the bounds.\n+         *\n+         * @param bounds bounds to use\n+         */\n+        /*default-visibility*/ void setBounds(List<AnnotatedTypeMirror> bounds) {\n+            this.bounds = bounds;\n         }\n \n-        void setDirectSuperTypes(List<AnnotatedDeclaredType> supertypes) {\n-            this.supertypes = new ArrayList<>(supertypes);\n+        /**\n+         * Copy the first annotation (in each hierarchy) on a bound to the primary annotation\n+         * location of the intersection type.\n+         *\n+         * <p>For example, {@code @NonNull Object & @Initialized @Nullable Serializable} is changed\n+         * to {@code @NonNull @Initialized Object & @Initialized @NonNull Serializable}.", "originalCommit": "24bd31b6138e677591d15ef0e48e2dfe9cafdb0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "21f7ec90ba49930f4fcd219714601c7742b4cca6", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeMirror.java b/framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeMirror.java\nindex bc3af80b40..23d5e038ad 100644\n--- a/framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeMirror.java\n+++ b/framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeMirror.java\n\n@@ -2179,8 +2179,9 @@ public abstract class AnnotatedTypeMirror {\n          * Copy the first annotation (in each hierarchy) on a bound to the primary annotation\n          * location of the intersection type.\n          *\n-         * <p>For example, {@code @NonNull Object & @Initialized @Nullable Serializable} is changed\n-         * to {@code @NonNull @Initialized Object & @Initialized @NonNull Serializable}.\n+         * <p>For example, in the type {@code @NonNull Object & @Initialized @Nullable\n+         * Serializable}, {@code @Nullable} and {@code @Initialized} are copied to the primary\n+         * annotation location.\n          */\n         public void copyIntersectionBoundAnnotations() {\n             Set<AnnotationMirror> annos = AnnotationUtils.createAnnotationSet();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MDM5Mw==", "url": "https://github.com/typetools/checker-framework/pull/3790#discussion_r506790393", "bodyText": "When this is called, have the primary annotations already been applied to every bound, so that each bound stands on its own without any need to refer to the primary annotations?", "author": "mernst", "createdAt": "2020-10-17T04:00:40Z", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -1016,6 +990,26 @@ protected boolean visitIntersectionSupertype(\n         return result;\n     }\n \n+    /**\n+     * An intersection is a subtype if one of its bounds is a subtype of {@code supertype}.", "originalCommit": "24bd31b6138e677591d15ef0e48e2dfe9cafdb0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTE3MA==", "url": "https://github.com/typetools/checker-framework/pull/3790#discussion_r508059170", "bodyText": "Yes.  This method is only called on fully-annotated types.  That means that the intersection type has a primary annotation for every qualifier hierarchy.", "author": "smillst", "createdAt": "2020-10-19T21:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MDM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MjA1OA==", "url": "https://github.com/typetools/checker-framework/pull/3790#discussion_r508062058", "bodyText": "TOOD: Add comment.", "author": "smillst", "createdAt": "2020-10-19T21:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MDM5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "21f7ec90ba49930f4fcd219714601c7742b4cca6", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\nindex 0184b1c255..14f2445e60 100644\n--- a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n+++ b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n\n@@ -1000,6 +1000,8 @@ public class DefaultTypeHierarchy extends AbstractAtmComboVisitor<Boolean, Void>\n     protected boolean visitIntersectionSubtype(\n             AnnotatedIntersectionType subtype, AnnotatedTypeMirror supertype) {\n         Types types = checker.getTypeUtils();\n+        // The primary annotations of the bounds should already be the same as the annotations on\n+        // the intersection type.\n         for (AnnotatedTypeMirror subtypeBound : subtype.getBounds()) {\n             if (TypesUtils.isErasedSubtype(\n                             subtypeBound.getUnderlyingType(), supertype.getUnderlyingType(), types)\n"}}, {"oid": "dc6386f077cfc3bc1ae07006944b7abea0ad70cb", "url": "https://github.com/typetools/checker-framework/commit/dc6386f077cfc3bc1ae07006944b7abea0ad70cb", "message": "Merge remote-tracking branch 'origin/master' into warn-intersections", "committedDate": "2020-10-20T16:15:56Z", "type": "commit"}, {"oid": "21f7ec90ba49930f4fcd219714601c7742b4cca6", "url": "https://github.com/typetools/checker-framework/commit/21f7ec90ba49930f4fcd219714601c7742b4cca6", "message": "Add comments.", "committedDate": "2020-10-20T16:21:04Z", "type": "commit"}]}