{"pr_number": 3297, "pr_title": "If two wildcards are equals, then one contains the other. (Fixes #3295)", "pr_createdAt": "2020-05-10T20:20:34Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3297", "timeline": [{"oid": "4942562d0db69412c83f970f484947ac589b280e", "url": "https://github.com/typetools/checker-framework/commit/4942562d0db69412c83f970f484947ac589b280e", "message": "Equal wildcards.", "committedDate": "2020-05-10T20:18:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU3OTUxNA==", "url": "https://github.com/typetools/checker-framework/pull/3297#discussion_r430579514", "bodyText": "Could you add a comment why this is the right check?\nOr, as we discussed last week, add a comment to the method or maybe even directly on AnnotatedWildcardType that wildcards are used also for captured variables. All logic that uses AWT should be investigated once we have a separate captured type.", "author": "wmdietl", "createdAt": "2020-05-26T17:20:16Z", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -370,6 +370,11 @@ private boolean isContainedWildcard(\n             AnnotatedTypeMirror outsideLowerBound,\n             boolean canBeCovariant) {\n \n+        if (inside.getKind() == TypeKind.WILDCARD\n+                && outside.getKind() == TypeKind.WILDCARD\n+                && inside.equals(outside)) {\n+            return true;", "originalCommit": "4942562d0db69412c83f970f484947ac589b280e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aaffc4485d01726a3bb87e2407b7e7c9cbb2a4af", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\nindex 181c5dbe44..f16e3735dc 100644\n--- a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n+++ b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n\n@@ -370,9 +370,7 @@ public class DefaultTypeHierarchy extends AbstractAtmComboVisitor<Boolean, Void>\n             AnnotatedTypeMirror outsideLowerBound,\n             boolean canBeCovariant) {\n \n-        if (inside.getKind() == TypeKind.WILDCARD\n-                && outside.getKind() == TypeKind.WILDCARD\n-                && inside.equals(outside)) {\n+        if (inside.equals(outside)) {\n             return true;\n         }\n         if (inside.getKind() == TypeKind.WILDCARD) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4MTE2OA==", "url": "https://github.com/typetools/checker-framework/pull/3297#discussion_r430581168", "bodyText": "Why is this only for wildcards? Isn't it enough if inside.equals(outside) returns true?", "author": "wmdietl", "createdAt": "2020-05-26T17:23:01Z", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -370,6 +370,11 @@ private boolean isContainedWildcard(\n             AnnotatedTypeMirror outsideLowerBound,\n             boolean canBeCovariant) {\n \n+        if (inside.getKind() == TypeKind.WILDCARD", "originalCommit": "4942562d0db69412c83f970f484947ac589b280e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aaffc4485d01726a3bb87e2407b7e7c9cbb2a4af", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\nindex 181c5dbe44..f16e3735dc 100644\n--- a/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n+++ b/framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java\n\n@@ -370,9 +370,7 @@ public class DefaultTypeHierarchy extends AbstractAtmComboVisitor<Boolean, Void>\n             AnnotatedTypeMirror outsideLowerBound,\n             boolean canBeCovariant) {\n \n-        if (inside.getKind() == TypeKind.WILDCARD\n-                && outside.getKind() == TypeKind.WILDCARD\n-                && inside.equals(outside)) {\n+        if (inside.equals(outside)) {\n             return true;\n         }\n         if (inside.getKind() == TypeKind.WILDCARD) {\n"}}, {"oid": "581cd5fb60e9b68eb3353356be67fe5956d9757f", "url": "https://github.com/typetools/checker-framework/commit/581cd5fb60e9b68eb3353356be67fe5956d9757f", "message": "Merge remote-tracking branch 'origin/master' into issue3295", "committedDate": "2020-05-29T16:41:50Z", "type": "commit"}, {"oid": "aaffc4485d01726a3bb87e2407b7e7c9cbb2a4af", "url": "https://github.com/typetools/checker-framework/commit/aaffc4485d01726a3bb87e2407b7e7c9cbb2a4af", "message": "Just always check equality.", "committedDate": "2020-05-29T16:51:15Z", "type": "commit"}, {"oid": "658766915a5316b388d75933636db2d1d6df7527", "url": "https://github.com/typetools/checker-framework/commit/658766915a5316b388d75933636db2d1d6df7527", "message": "Add comment.", "committedDate": "2020-05-29T16:52:53Z", "type": "commit"}]}