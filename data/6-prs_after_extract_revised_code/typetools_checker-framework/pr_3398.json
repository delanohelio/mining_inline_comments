{"pr_number": 3398, "pr_title": "ValueTest mytree.java update", "pr_createdAt": "2020-06-22T14:30:27Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3398", "timeline": [{"oid": "dcc66f456ccc511ed4ca9c0c9d989fdd91ea8b21", "url": "https://github.com/typetools/checker-framework/commit/dcc66f456ccc511ed4ca9c0c9d989fdd91ea8b21", "message": "value-test mytree update", "committedDate": "2020-06-22T14:27:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMDMzOQ==", "url": "https://github.com/typetools/checker-framework/pull/3398#discussion_r443810339", "bodyText": "How about Note: This is a false positive: the type of newTree(\"hello\").put(\"hello\") should be inferred as MyTree<@StringVal(\"hello\") String> and the assignment should therefore pass.", "author": "wmdietl", "createdAt": "2020-06-22T20:34:49Z", "path": "framework/tests/value/MyTree.java", "diffHunk": "@@ -21,9 +21,16 @@ void uses() {\n \n         MyTree<@UnknownVal String> myTree1 = newTree(\"hello\").put(\"bye\");\n         // :: error: (assignment.type.incompatible)\n+        MyTree<@StringVal(\"hello\") String> myTree1b = newTree(\"hello\").put(\"bye\");\n+\n+        // Note: This is a false positive: the type newTree(\"hello\").put(\"hello\") is able to be", "originalCommit": "dcc66f456ccc511ed4ca9c0c9d989fdd91ea8b21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxOTU2MA==", "url": "https://github.com/typetools/checker-framework/pull/3398#discussion_r443819560", "bodyText": "Updated. Thanks for the review!", "author": "lnsun", "createdAt": "2020-06-22T20:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMDMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8b7eb66e4ead869b212a59282a5eabbebafa7cf", "chunk": "diff --git a/framework/tests/value/MyTree.java b/framework/tests/value/MyTree.java\nindex fb189291d..8d9ee790c 100644\n--- a/framework/tests/value/MyTree.java\n+++ b/framework/tests/value/MyTree.java\n\n@@ -23,8 +23,8 @@ public class MyTree<Value> {\n         // :: error: (assignment.type.incompatible)\n         MyTree<@StringVal(\"hello\") String> myTree1b = newTree(\"hello\").put(\"bye\");\n \n-        // Note: This is a false positive: the type newTree(\"hello\").put(\"hello\") is able to be\n-        // inferred as MyTree<@StringVal(\"hello\") String>\n+        // Note: This is a false positive: the type of newTree(\"hello\").put(\"hello\") should be\n+        // inferred as MyTree<@StringVal(\"hello\") String> and the assignment should therefore pass.\n         // :: error: (assignment.type.incompatible)\n         MyTree<@StringVal(\"hello\") String> myTree2 = newTree(\"hello\").put(\"hello\");\n         MyTree<@StringVal(\"hello\") String> myTree2b =\n"}}, {"oid": "e8b7eb66e4ead869b212a59282a5eabbebafa7cf", "url": "https://github.com/typetools/checker-framework/commit/e8b7eb66e4ead869b212a59282a5eabbebafa7cf", "message": "comment", "committedDate": "2020-06-22T20:51:59Z", "type": "commit"}]}