{"pr_number": 3679, "pr_title": "Refactor TypesUtils and NumberUtils; add TypeKindUtils", "pr_createdAt": "2020-09-22T22:33:24Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3679", "timeline": [{"oid": "c82d13383b4764cbb2cc8e63408faf98daedb1e4", "url": "https://github.com/typetools/checker-framework/commit/c82d13383b4764cbb2cc8e63408faf98daedb1e4", "message": "Refactor TypesUtils and NumberUtils; add TypeKindUtils", "committedDate": "2020-09-22T20:48:19Z", "type": "commit"}, {"oid": "f4548bc9fb548d55b3269cdf30447a7bdbd83475", "url": "https://github.com/typetools/checker-framework/commit/f4548bc9fb548d55b3269cdf30447a7bdbd83475", "message": "Merge ../checker-framework-branch-master into typekindutils", "committedDate": "2020-09-22T20:49:29Z", "type": "commit"}, {"oid": "dc1eb2cc596260bf4da50134acbf7000f2a723e2", "url": "https://github.com/typetools/checker-framework/commit/dc1eb2cc596260bf4da50134acbf7000f2a723e2", "message": "Add Javadoc", "committedDate": "2020-09-22T21:51:48Z", "type": "commit"}, {"oid": "9841b4b5f8cbeff6fabc0ce665320897d42d5c12", "url": "https://github.com/typetools/checker-framework/commit/9841b4b5f8cbeff6fabc0ce665320897d42d5c12", "message": "Add type qualifier", "committedDate": "2020-09-22T22:05:14Z", "type": "commit"}, {"oid": "8cb66f6e40b176fe141b697d833afaebbd666444", "url": "https://github.com/typetools/checker-framework/commit/8cb66f6e40b176fe141b697d833afaebbd666444", "message": "Refill comment", "committedDate": "2020-09-22T22:29:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3NTM1MA==", "url": "https://github.com/typetools/checker-framework/pull/3679#discussion_r493075350", "bodyText": "Which order of arguments do you prefer?", "author": "mernst", "createdAt": "2020-09-22T22:46:22Z", "path": "javacutil/src/main/java/org/checkerframework/javacutil/TypesUtils.java", "diffHunk": "@@ -27,14 +28,91 @@\n import org.plumelib.util.ImmutableTypes;\n \n /** A utility class that helps with {@link TypeMirror}s. */\n-// TODO: This class needs significant restructuring\n public final class TypesUtils {\n \n-    // Class cannot be instantiated\n+    /** Class cannot be instantiated */\n     private TypesUtils() {\n         throw new AssertionError(\"Class TypesUtils cannot be instantiated.\");\n     }\n \n+    /// Creating types\n+\n+    // TODO: What order of arguments for typeFromClass is desirable?  Current code is inconsistent,", "originalCommit": "8cb66f6e40b176fe141b697d833afaebbd666444", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NjM3Nw==", "url": "https://github.com/typetools/checker-framework/pull/3679#discussion_r493786377", "bodyText": "I don't have a preference. It looks like the  Elements elements, Types types version was added on 9/18/20,  c163255 so I would keep the preexisting one.", "author": "smillst", "createdAt": "2020-09-23T18:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3NTM1MA=="}], "type": "inlineReview", "revised_code": {"commit": "69c034a375c7461b30230f739171457a9718d70c", "chunk": "diff --git a/javacutil/src/main/java/org/checkerframework/javacutil/TypesUtils.java b/javacutil/src/main/java/org/checkerframework/javacutil/TypesUtils.java\nindex 575bbfb91f..b921cabb2d 100644\n--- a/javacutil/src/main/java/org/checkerframework/javacutil/TypesUtils.java\n+++ b/javacutil/src/main/java/org/checkerframework/javacutil/TypesUtils.java\n\n@@ -37,39 +37,6 @@ public final class TypesUtils {\n \n     /// Creating types\n \n-    // TODO: What order of arguments for typeFromClass is desirable?  Current code is inconsistent,\n-    // and before this refactoring TypesUtils already contained both overloads.  Remove one of the\n-    // overloads.\n-\n-    /**\n-     * Given a class, return the corresponding TypeMirror.\n-     *\n-     * @param clazz a class\n-     * @param elements the element utilities to use\n-     * @param types the type utilities to use\n-     * @return the TypeMirror corresponding to the given class\n-     */\n-    public static TypeMirror typeFromClass(Class<?> clazz, Elements elements, Types types) {\n-        if (clazz == void.class) {\n-            return types.getNoType(TypeKind.VOID);\n-        } else if (clazz.isPrimitive()) {\n-            String primitiveName = clazz.getName().toUpperCase();\n-            TypeKind primitiveKind = TypeKind.valueOf(primitiveName);\n-            return types.getPrimitiveType(primitiveKind);\n-        } else if (clazz.isArray()) {\n-            TypeMirror componentType = typeFromClass(clazz.getComponentType(), elements, types);\n-            return types.getArrayType(componentType);\n-        } else {\n-            String name = clazz.getCanonicalName();\n-            assert name != null : \"@AssumeAssertion(nullness): assumption\";\n-            TypeElement element = elements.getTypeElement(name);\n-            if (element == null) {\n-                throw new BugInCF(\"Unrecognized class: \" + clazz);\n-            }\n-            return element.asType();\n-        }\n-    }\n-\n     /**\n      * Returns the {@link TypeMirror} for a given {@link Class}.\n      *\n"}}, {"oid": "69c034a375c7461b30230f739171457a9718d70c", "url": "https://github.com/typetools/checker-framework/commit/69c034a375c7461b30230f739171457a9718d70c", "message": "Remove duplicate method", "committedDate": "2020-09-23T19:57:57Z", "type": "commit"}]}