{"pr_number": 3341, "pr_title": "Make special-casing of System.getProperty sound", "pr_createdAt": "2020-05-29T05:13:04Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3341", "timeline": [{"oid": "7e2a6eb65f30f4c77dd02a2429a52827cacc9831", "url": "https://github.com/typetools/checker-framework/commit/7e2a6eb65f30f4c77dd02a2429a52827cacc9831", "message": "Update list of predefined system properties", "committedDate": "2020-05-29T03:54:46Z", "type": "commit"}, {"oid": "627053d327ea2ec611a7048db0524cba65bbf102", "url": "https://github.com/typetools/checker-framework/commit/627053d327ea2ec611a7048db0524cba65bbf102", "message": "Make special-casing of System.getProperty sound", "committedDate": "2020-05-29T05:06:29Z", "type": "commit"}, {"oid": "7755ac15d6f974a195b47ee903e08aae2885cd32", "url": "https://github.com/typetools/checker-framework/commit/7755ac15d6f974a195b47ee903e08aae2885cd32", "message": "Tweak documentation", "committedDate": "2020-05-29T05:09:20Z", "type": "commit"}, {"oid": "73eca07aa720a34f7fd0e20b103f43513302bead", "url": "https://github.com/typetools/checker-framework/commit/73eca07aa720a34f7fd0e20b103f43513302bead", "message": "Javadoc fix", "committedDate": "2020-05-29T12:29:29Z", "type": "commit"}, {"oid": "bf4e7ecddc6fe79707b2f4a7d149bdecd732546f", "url": "https://github.com/typetools/checker-framework/commit/bf4e7ecddc6fe79707b2f4a7d149bdecd732546f", "message": "Javadoc fix", "committedDate": "2020-05-29T12:37:35Z", "type": "commit"}, {"oid": "152f86092951daa2d7001cba022700c46b2aa9ef", "url": "https://github.com/typetools/checker-framework/commit/152f86092951daa2d7001cba022700c46b2aa9ef", "message": "Handle System.setProperty, and add tests", "committedDate": "2020-05-29T13:25:17Z", "type": "commit"}, {"oid": "855701054a5a77520f1b4415dc4b0dd2f2c031ff", "url": "https://github.com/typetools/checker-framework/commit/855701054a5a77520f1b4415dc4b0dd2f2c031ff", "message": "Merge ../checker-framework-branch-master into SystemGetPropertyHandler-sound", "committedDate": "2020-05-29T13:27:52Z", "type": "commit"}, {"oid": "5c197524d1e21e96622e034389dfd4d069f7057a", "url": "https://github.com/typetools/checker-framework/commit/5c197524d1e21e96622e034389dfd4d069f7057a", "message": "Documentation tweaks", "committedDate": "2020-05-29T13:41:54Z", "type": "commit"}, {"oid": "3d61e27c3c44afb0b8cd5fae833b3ccd1c532f7a", "url": "https://github.com/typetools/checker-framework/commit/3d61e27c3c44afb0b8cd5fae833b3ccd1c532f7a", "message": "Merge ../checker-framework-branch-master into SystemGetPropertyHandler-sound", "committedDate": "2020-05-29T13:42:21Z", "type": "commit"}, {"oid": "412a28028fcb4e134bbe19de63bb6605fccc59d6", "url": "https://github.com/typetools/checker-framework/commit/412a28028fcb4e134bbe19de63bb6605fccc59d6", "message": "Reflect that this is a breaking change, and likely merge date", "committedDate": "2020-05-30T16:15:35Z", "type": "commit"}, {"oid": "7b80c2f9aa9cd29786b8a2b73bb6c6e32b665f21", "url": "https://github.com/typetools/checker-framework/commit/7b80c2f9aa9cd29786b8a2b73bb6c6e32b665f21", "message": "Fix.", "committedDate": "2020-06-01T15:24:30Z", "type": "commit"}, {"oid": "763073867f627d038cb1536958dd9fd39a0213d7", "url": "https://github.com/typetools/checker-framework/commit/763073867f627d038cb1536958dd9fd39a0213d7", "message": "Merge remote-tracking branch 'origin/master' into SystemGetPropertyHandler-sound", "committedDate": "2020-06-01T15:24:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk5MzgwNQ==", "url": "https://github.com/typetools/checker-framework/pull/3341#discussion_r433993805", "bodyText": "Errors should be reported in the visitor rather than the annotated type factory.", "author": "smillst", "createdAt": "2020-06-02T16:01:10Z", "path": "checker/src/main/java/org/checkerframework/checker/nullness/SystemGetPropertyHandler.java", "diffHunk": "@@ -71,27 +91,78 @@\n                             \"user.home\",\n                             \"user.dir\"));\n \n+    /**\n+     * Creates a SystemGetPropertyHandler.\n+     *\n+     * @param env the processing environment\n+     * @param factory the factory for constructing and looking up types\n+     * @param checker the checker for issuing errors\n+     */\n     public SystemGetPropertyHandler(\n-            ProcessingEnvironment env, NullnessAnnotatedTypeFactory factory) {\n+            ProcessingEnvironment env,\n+            NullnessAnnotatedTypeFactory factory,\n+            BaseTypeChecker checker) {\n+        this.permitClearProperty =\n+                checker.getLintOption(\n+                        NullnessChecker.LINT_PERMITCLEARPROPERTY,\n+                        NullnessChecker.LINT_DEFAULT_PERMITCLEARPROPERTY);\n         this.env = env;\n         this.factory = factory;\n+        this.checker = checker;\n \n         systemGetProperty =\n                 TreeUtils.getMethod(java.lang.System.class.getName(), \"getProperty\", 1, env);\n+        systemSetProperty =\n+                TreeUtils.getMethod(java.lang.System.class.getName(), \"setProperty\", 2, env);\n+        systemClearProperty =\n+                TreeUtils.getMethod(java.lang.System.class.getName(), \"clearProperty\", 1, env);\n+        systemSetProperties =\n+                TreeUtils.getMethod(java.lang.System.class.getName(), \"setProperties\", 1, env);\n     }\n \n+    /**\n+     * If the first argument of a method call is a literal, return it; otherwise return null.\n+     *\n+     * @param tree a method invocation whose first formal parameter is of String type\n+     * @return the first argument if it is a literal, otherwise null\n+     */\n+    private static @Nullable String literalFirstArgument(MethodInvocationTree tree) {\n+        List<? extends ExpressionTree> args = tree.getArguments();\n+        assert args.size() > 0;\n+        ExpressionTree arg = args.get(0);\n+        if (arg.getKind() == Tree.Kind.STRING_LITERAL) {\n+            String literal = (String) ((LiteralTree) arg).getValue();\n+            return literal;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Apply rules regarding System.getProperty and related methods.\n+     *\n+     * @param tree a method invocation\n+     * @param method the method being invoked\n+     */\n     public void handle(MethodInvocationTree tree, AnnotatedExecutableType method) {\n-        if (TreeUtils.isMethodInvocation(tree, systemGetProperty, env)) {\n-            List<? extends ExpressionTree> args = tree.getArguments();\n-            assert args.size() == 1;\n-            ExpressionTree arg = args.get(0);\n-            if (arg.getKind() == Tree.Kind.STRING_LITERAL) {\n-                String literal = (String) ((LiteralTree) arg).getValue();\n-                if (predefinedSystemProperties.contains(literal)) {\n-                    AnnotatedTypeMirror type = method.getReturnType();\n-                    type.replaceAnnotation(factory.NONNULL);\n-                }\n+        if (permitClearProperty) {\n+            return;\n+        }\n+        if (TreeUtils.isMethodInvocation(tree, systemGetProperty, env)\n+                || TreeUtils.isMethodInvocation(tree, systemSetProperty, env)) {\n+            String literal = literalFirstArgument(tree);\n+            if (literal != null && predefinedSystemProperties.contains(literal)) {\n+                AnnotatedTypeMirror type = method.getReturnType();\n+                type.replaceAnnotation(factory.NONNULL);\n             }\n         }\n+        if (TreeUtils.isMethodInvocation(tree, systemClearProperty, env)) {\n+            String literal = literalFirstArgument(tree);\n+            if (literal == null || predefinedSystemProperties.contains(literal)) {\n+                checker.reportError(tree, \"clear.system.property\");", "originalCommit": "763073867f627d038cb1536958dd9fd39a0213d7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f709e7c46cdcf9493e01c2dbfb0760a1bc1b1792", "chunk": "diff --git a/checker/src/main/java/org/checkerframework/checker/nullness/SystemGetPropertyHandler.java b/checker/src/main/java/org/checkerframework/checker/nullness/SystemGetPropertyHandler.java\nindex 99e392570..dd104f95e 100644\n--- a/checker/src/main/java/org/checkerframework/checker/nullness/SystemGetPropertyHandler.java\n+++ b/checker/src/main/java/org/checkerframework/checker/nullness/SystemGetPropertyHandler.java\n\n@@ -96,45 +81,21 @@ public class SystemGetPropertyHandler {\n      *\n      * @param env the processing environment\n      * @param factory the factory for constructing and looking up types\n-     * @param checker the checker for issuing errors\n+     * @param permitClearProperty if true, client code may clear system properties, and this object\n+     *     does nothing\n      */\n     public SystemGetPropertyHandler(\n             ProcessingEnvironment env,\n             NullnessAnnotatedTypeFactory factory,\n-            BaseTypeChecker checker) {\n-        this.permitClearProperty =\n-                checker.getLintOption(\n-                        NullnessChecker.LINT_PERMITCLEARPROPERTY,\n-                        NullnessChecker.LINT_DEFAULT_PERMITCLEARPROPERTY);\n+            boolean permitClearProperty) {\n         this.env = env;\n         this.factory = factory;\n-        this.checker = checker;\n+        this.permitClearProperty = permitClearProperty;\n \n         systemGetProperty =\n                 TreeUtils.getMethod(java.lang.System.class.getName(), \"getProperty\", 1, env);\n         systemSetProperty =\n                 TreeUtils.getMethod(java.lang.System.class.getName(), \"setProperty\", 2, env);\n-        systemClearProperty =\n-                TreeUtils.getMethod(java.lang.System.class.getName(), \"clearProperty\", 1, env);\n-        systemSetProperties =\n-                TreeUtils.getMethod(java.lang.System.class.getName(), \"setProperties\", 1, env);\n-    }\n-\n-    /**\n-     * If the first argument of a method call is a literal, return it; otherwise return null.\n-     *\n-     * @param tree a method invocation whose first formal parameter is of String type\n-     * @return the first argument if it is a literal, otherwise null\n-     */\n-    private static @Nullable String literalFirstArgument(MethodInvocationTree tree) {\n-        List<? extends ExpressionTree> args = tree.getArguments();\n-        assert args.size() > 0;\n-        ExpressionTree arg = args.get(0);\n-        if (arg.getKind() == Tree.Kind.STRING_LITERAL) {\n-            String literal = (String) ((LiteralTree) arg).getValue();\n-            return literal;\n-        }\n-        return null;\n     }\n \n     /**\n"}}, {"oid": "234ac063e1d8c9c301f9178c7ef6cd21fef5a1e9", "url": "https://github.com/typetools/checker-framework/commit/234ac063e1d8c9c301f9178c7ef6cd21fef5a1e9", "message": "Merge ../checker-framework-branch-master into SystemGetPropertyHandler-sound", "committedDate": "2020-06-02T16:07:17Z", "type": "commit"}, {"oid": "2cc758413eaf3959cd1b9697e4a2ab4b25a3465c", "url": "https://github.com/typetools/checker-framework/commit/2cc758413eaf3959cd1b9697e4a2ab4b25a3465c", "message": "Merge ../checker-framework-branch-master into SystemGetPropertyHandler-sound", "committedDate": "2020-06-02T17:28:59Z", "type": "commit"}, {"oid": "f709e7c46cdcf9493e01c2dbfb0760a1bc1b1792", "url": "https://github.com/typetools/checker-framework/commit/f709e7c46cdcf9493e01c2dbfb0760a1bc1b1792", "message": "Issue errors in visitor, not type factory", "committedDate": "2020-06-02T22:23:23Z", "type": "commit"}, {"oid": "4e0b75a593cfe6de74569e94de6c0fce3a5671df", "url": "https://github.com/typetools/checker-framework/commit/4e0b75a593cfe6de74569e94de6c0fce3a5671df", "message": "Merge ../checker-framework-branch-master into SystemGetPropertyHandler-sound", "committedDate": "2020-06-03T16:42:34Z", "type": "commit"}]}