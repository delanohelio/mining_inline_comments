{"pr_number": 3026, "pr_title": "Fix #2985 by using proper types.", "pr_createdAt": "2020-01-02T18:01:27Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3026", "timeline": [{"oid": "b0bd0bce87ac8fe10bca8b5c8ce3aa7eba7e1ff2", "url": "https://github.com/typetools/checker-framework/commit/b0bd0bce87ac8fe10bca8b5c8ce3aa7eba7e1ff2", "message": "Fix #2985 by using proper types.", "committedDate": "2020-01-02T18:00:23Z", "type": "commit"}, {"oid": "effb0c5cbdb52784f7928e32cb26ef253bf5ab28", "url": "https://github.com/typetools/checker-framework/commit/effb0c5cbdb52784f7928e32cb26ef253bf5ab28", "message": "Suppress unused variable warning.", "committedDate": "2020-01-02T19:04:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5NjE4Mw==", "url": "https://github.com/typetools/checker-framework/pull/3026#discussion_r362596183", "bodyText": "Instead of suppressing this warning and the ErrorProne warning, you could use clazz.cast(...) instead.  Any reason not to do that?", "author": "smillst", "createdAt": "2020-01-02T19:23:37Z", "path": "framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java", "diffHunk": "@@ -135,16 +140,20 @@ public static ContractsUtils getInstance(GenericAnnotatedTypeFactory<?, ?, ?, ?>\n         if (enforcedQualifier == null) {\n             return Collections.emptySet();\n         }\n-        Set<Contract> result = new LinkedHashSet<>();\n+        Set<T> result = new LinkedHashSet<>();\n         List<String> expressions =\n                 AnnotationUtils.getElementValueArray(\n                         contractAnnotation, \"expression\", String.class, false);\n         Boolean annoResult =\n                 AnnotationUtils.getElementValueOrNull(\n                         contractAnnotation, \"result\", Boolean.class, false);\n         for (String expr : expressions) {\n-            result.add(\n-                    Contract.create(kind, expr, enforcedQualifier, contractAnnotation, annoResult));\n+            @SuppressWarnings(\"unchecked\") // clazz consistent with enum", "originalCommit": "effb0c5cbdb52784f7928e32cb26ef253bf5ab28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMTQ5Ng==", "url": "https://github.com/typetools/checker-framework/pull/3026#discussion_r362601496", "bodyText": "No reason, clazz.cast is indeed much nicer.", "author": "wmdietl", "createdAt": "2020-01-02T19:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5NjE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "332ce993603a5718df754e5a7ffb6bc1bd1f499f", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java b/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\nindex 3c1a7e561..d19c0214b 100644\n--- a/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\n+++ b/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\n\n@@ -148,11 +146,10 @@ public class ContractsUtils {\n                 AnnotationUtils.getElementValueOrNull(\n                         contractAnnotation, \"result\", Boolean.class, false);\n         for (String expr : expressions) {\n-            @SuppressWarnings(\"unchecked\") // clazz consistent with enum\n             T contract =\n-                    (T)\n+                    clazz.cast(\n                             Contract.create(\n-                                    kind, expr, enforcedQualifier, contractAnnotation, annoResult);\n+                                    kind, expr, enforcedQualifier, contractAnnotation, annoResult));\n             result.add(contract);\n         }\n         return result;\n"}}, {"oid": "332ce993603a5718df754e5a7ffb6bc1bd1f499f", "url": "https://github.com/typetools/checker-framework/commit/332ce993603a5718df754e5a7ffb6bc1bd1f499f", "message": "Use clazz.cast.", "committedDate": "2020-01-02T19:36:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMzM5NA==", "url": "https://github.com/typetools/checker-framework/pull/3026#discussion_r362613394", "bodyText": "/__w/1/s/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java:131: warning: no @param for <T>\n/__w/1/s/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java:166: warning: no @param for <T>", "author": "smillst", "createdAt": "2020-01-02T20:13:01Z", "path": "framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java", "diffHunk": "@@ -123,10 +124,12 @@ public static ContractsUtils getInstance(GenericAnnotatedTypeFactory<?, ?, ?, ?>\n      * @param contractAnnotation a {@link RequiresQualifier}, {@link EnsuresQualifier}, {@link\n      *     EnsuresQualifierIf}, or null\n      * @param kind the kind of {@code contractAnnotation}\n+     * @param clazz the class to determine the return type\n      * @return the contracts expressed by the given annotation, or the empty set if the argument is\n      *     null\n      */\n-    private Set<Contract> getContract(Contract.Kind kind, AnnotationMirror contractAnnotation) {\n+    private <T extends Contract> Set<T> getContract(", "originalCommit": "332ce993603a5718df754e5a7ffb6bc1bd1f499f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYzNjI2Mw==", "url": "https://github.com/typetools/checker-framework/pull/3026#discussion_r362636263", "bodyText": "Could you please add those? I'm traveling the rest of the day and it would be great to have these changes in the release.", "author": "wmdietl", "createdAt": "2020-01-02T21:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMzM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgwMzA4Mg==", "url": "https://github.com/typetools/checker-framework/pull/3026#discussion_r362803082", "bodyText": "I've added the javadoc.", "author": "wmdietl", "createdAt": "2020-01-03T13:11:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMzM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "232afc1d345ff99c5f7c7d3308408fc18ca6b654", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java b/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\nindex d19c0214b..ad971cd44 100644\n--- a/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\n+++ b/framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java\n\n@@ -121,6 +121,7 @@ public class ContractsUtils {\n     /**\n      * Returns the contracts expressed by the given framework contract annotation.\n      *\n+     * @param T the specific type of {@link Contract} to use\n      * @param contractAnnotation a {@link RequiresQualifier}, {@link EnsuresQualifier}, {@link\n      *     EnsuresQualifierIf}, or null\n      * @param kind the kind of {@code contractAnnotation}\n"}}, {"oid": "6fd5883d451a40c3199d47cc06856363608f660e", "url": "https://github.com/typetools/checker-framework/commit/6fd5883d451a40c3199d47cc06856363608f660e", "message": "Merge branch 'master' of github.com:typetools/checker-framework into fix-2985", "committedDate": "2020-01-03T13:05:48Z", "type": "commit"}, {"oid": "232afc1d345ff99c5f7c7d3308408fc18ca6b654", "url": "https://github.com/typetools/checker-framework/commit/232afc1d345ff99c5f7c7d3308408fc18ca6b654", "message": "Javadoc for type parameter.", "committedDate": "2020-01-03T13:10:09Z", "type": "commit"}, {"oid": "cd5104ba5accb7c92e47d5b8bd7e0813b020ac9b", "url": "https://github.com/typetools/checker-framework/commit/cd5104ba5accb7c92e47d5b8bd7e0813b020ac9b", "message": "Fix Javadoc.", "committedDate": "2020-01-03T16:34:12Z", "type": "commit"}]}