{"pr_number": 4034, "pr_title": "Use terminology \"annotation file\" in preference to \"stub file\"", "pr_createdAt": "2020-12-16T19:34:53Z", "pr_url": "https://github.com/typetools/checker-framework/pull/4034", "timeline": [{"oid": "d730a340cd36f83fe77edf1f57b5555d5f213984", "url": "https://github.com/typetools/checker-framework/commit/d730a340cd36f83fe77edf1f57b5555d5f213984", "message": "Use terminology \"annotation file\" in preference to \"stub file\"", "committedDate": "2020-12-16T17:14:43Z", "type": "commit"}, {"oid": "aa9f8e11c7ee5b8eb600ebd5c6049fdec6c81ce7", "url": "https://github.com/typetools/checker-framework/commit/aa9f8e11c7ee5b8eb600ebd5c6049fdec6c81ce7", "message": "Undo an undesirable change", "committedDate": "2020-12-16T19:49:39Z", "type": "commit"}, {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "url": "https://github.com/typetools/checker-framework/commit/0bcd9217721893cad3a3b0bc34c95d85db142bdb", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation", "committedDate": "2020-12-16T21:10:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMTc3Nw==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544631777", "bodyText": "This is in a method parseStubFiles, so saying stub here makes sense. Same comment applies to rest of method.", "author": "jwaataja", "createdAt": "2020-12-16T21:21:54Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -201,25 +201,26 @@ public void parseStubFiles() {\n                             annotationFileStream,\n                             factory,\n                             processingEnv,\n-                            stubAnnos);\n+                            annotationFileAnnos);\n                 }\n             } else {\n-                // We didn't find the stub files.\n-                // If the stub file has a prefix of \"checker.jar/\" then look for the file in the top\n+                // We didn't find the files.", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\nindex dd52d5bd6..869da5aa2 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n\n@@ -204,8 +204,8 @@ public class AnnotationFileElementTypes {\n                             annotationFileAnnos);\n                 }\n             } else {\n-                // We didn't find the files.\n-                // If the file has a prefix of \"checker.jar/\" then look for the file in the top\n+                // We didn't find the stub files.\n+                // If the stub file has a prefix of \"checker.jar/\" then look for the file in the top\n                 // level directory of the jar that contains the checker.\n                 if (path.startsWith(\"checker.jar/\")) {\n                     path = path.substring(\"checker.jar/\".length());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMzcyNw==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544633727", "bodyText": "I think now it only side-effects the last argument rather than the last two. Also, on this comment can also change \"stub\" to \"annotation file\".", "author": "jwaataja", "createdAt": "2020-12-16T21:25:14Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -101,9 +101,9 @@\n  * two maps passed as arguments.\n  *\n  * <p>The main entry point is {@link AnnotationFileParser#parse(String, InputStream,\n- * AnnotatedTypeFactory, ProcessingEnvironment, StubAnnotations)}, which side-effects its last two\n- * arguments. It operates in two steps. First, it calls the Stub Parser to parse a stub file. Then,\n- * it walks the Stub Parser's AST to create/collect types and declaration annotations.\n+ * AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileAnnotations)}, which side-effects its\n+ * last two arguments. It operates in two steps. First, it calls the Stub Parser to parse a stub", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -102,8 +102,8 @@ import org.checkerframework.javacutil.Pair;\n  *\n  * <p>The main entry point is {@link AnnotationFileParser#parse(String, InputStream,\n  * AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileAnnotations)}, which side-effects its\n- * last two arguments. It operates in two steps. First, it calls the Stub Parser to parse a stub\n- * file. Then, it walks the Stub Parser's AST to create/collect types and declaration annotations.\n+ * last argument. It operates in two steps. First, it calls the Annotation File Parser to parse an\n+ * annotation file. Then, it walks the AST to create/collect types and declaration annotations.\n  *\n  * <p>The other entry point is {@link #parseJdkFileAsStub}.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNDUzNw==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544634537", "bodyText": "\"stub file\" -> \"annotation file\".", "author": "jwaataja", "createdAt": "2020-12-16T21:26:35Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -548,43 +548,44 @@ private void parseStubUnit(InputStream inputStream) {\n     /**\n      * Process {@link #stubUnit}, which is the AST produced by {@link #parseStubUnit}.\n      *\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the file; side-effected by this method\n      */\n-    private void process(StubAnnotations stubAnnos) {\n-        processStubUnit(this.stubUnit, stubAnnos);\n+    private void process(AnnotationFileAnnotations annotationFileAnnos) {\n+        processStubUnit(this.stubUnit, annotationFileAnnos);\n     }\n \n     /**\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -558,7 +558,7 @@ public class AnnotationFileParser {\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processStubUnit(StubUnit su, AnnotationFileAnnotations annotationFileAnnos) {\n         for (CompilationUnit cu : su.getCompilationUnits()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNDc3Mg==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544634772", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:26:54Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -482,32 +482,32 @@ public static void parseJdkFileAsStub(\n             InputStream inputStream,\n             AnnotatedTypeFactory atypeFactory,\n             ProcessingEnvironment processingEnv,\n-            StubAnnotations stubAnnos) {\n+            AnnotationFileAnnotations stubAnnos) {\n         parse(filename, inputStream, atypeFactory, processingEnv, stubAnnos, true);\n     }\n \n     /**\n-     * Parse a stub file and adds annotations to {@code stubAnnos}.\n+     * Parse a stub file and adds annotations to {@code annotationFileAnnos}.\n      *\n      * @param filename name of stub file, used only for diagnostic messages\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -493,7 +493,7 @@ public class AnnotationFileParser {\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      * @param isJdkAsStub whether or not the stub file is a part of the annotated JDK\n      */\n     private static void parse(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTAwNg==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635006", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:27:16Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -456,15 +456,15 @@ private void addEnclosingTypesToImportedTypes(Element element) {\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -456,7 +456,7 @@ public class AnnotationFileParser {\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     public static void parse(\n             String filename,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTIxNQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635215", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:27:34Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -548,43 +548,44 @@ private void parseStubUnit(InputStream inputStream) {\n     /**\n      * Process {@link #stubUnit}, which is the AST produced by {@link #parseStubUnit}.\n      *\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the file; side-effected by this method\n      */\n-    private void process(StubAnnotations stubAnnos) {\n-        processStubUnit(this.stubUnit, stubAnnos);\n+    private void process(AnnotationFileAnnotations annotationFileAnnos) {\n+        processStubUnit(this.stubUnit, annotationFileAnnos);\n     }\n \n     /**\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n      */\n-    private void processStubUnit(StubUnit su, StubAnnotations stubAnnos) {\n+    private void processStubUnit(StubUnit su, AnnotationFileAnnotations annotationFileAnnos) {\n         for (CompilationUnit cu : su.getCompilationUnits()) {\n-            processCompilationUnit(cu, stubAnnos);\n+            processCompilationUnit(cu, annotationFileAnnos);\n         }\n     }\n \n     /**\n      * Process the given CompilationUnit.\n      *\n      * @param cu the CompilationUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -558,7 +558,7 @@ public class AnnotationFileParser {\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processStubUnit(StubUnit su, AnnotationFileAnnotations annotationFileAnnos) {\n         for (CompilationUnit cu : su.getCompilationUnits()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTQzMQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635431", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:27:59Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -593,17 +594,18 @@ private void processCompilationUnit(CompilationUnit cu, StubAnnotations stubAnno\n      * Process the given package declaration\n      *\n      * @param packDecl the package declaration to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -594,7 +594,7 @@ public class AnnotationFileParser {\n      * Process the given package declaration\n      *\n      * @param packDecl the package declaration to process\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processPackage(\n             PackageDeclaration packDecl, AnnotationFileAnnotations annotationFileAnnos) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTUzMQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635531", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:28:09Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -614,10 +616,12 @@ private void processPackage(PackageDeclaration packDecl, StubAnnotations stubAnn\n      * @param typeDecl the type declaration to process\n      * @param outertypeName the name of the containing class, when processing a nested class;\n      *     otherwise null\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -616,7 +616,7 @@ public class AnnotationFileParser {\n      * @param typeDecl the type declaration to process\n      * @param outertypeName the name of the containing class, when processing a nested class;\n      *     otherwise null\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processTypeDecl(\n             TypeDeclaration<?> typeDecl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTYxOA==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635618", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:28:22Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -744,13 +756,15 @@ private boolean hasNoAnnotationFileParserWarning(Iterable<AnnotationExpr> aexprs\n      *\n      * @param decl a type declaration\n      * @param elt the type's element\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -756,7 +756,7 @@ public class AnnotationFileParser {\n      *\n      * @param decl a type declaration\n      * @param elt the type's element\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      * @return the type's type parameter declarations\n      */\n     private List<AnnotatedTypeVariable> processType(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTcwMQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635701", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:28:34Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -808,17 +822,17 @@ private boolean hasNoAnnotationFileParserWarning(Iterable<AnnotationExpr> aexprs\n      *\n      * @param decl enum declaration\n      * @param elt element representing enum\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -822,7 +822,7 @@ public class AnnotationFileParser {\n      *\n      * @param decl enum declaration\n      * @param elt element representing enum\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      * @return the enum's type parameter declarations\n      */\n     private List<AnnotatedTypeVariable> processEnum(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTc0NQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635745", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:28:40Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -878,27 +892,36 @@ private void annotateSupertypes(\n      *\n      * @param decl a method or constructor declaration\n      * @param elt the method or constructor's element\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -892,7 +892,7 @@ public class AnnotationFileParser {\n      *\n      * @param decl a method or constructor declaration\n      * @param elt the method or constructor's element\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processCallableDeclaration(\n             CallableDeclaration<?> decl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjAxNg==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636016", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:29:06Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -970,13 +993,13 @@ private void processCallableDeclaration(\n      * @param method a Method or Constructor declaration\n      * @param elt ExecutableElement of {@code method}\n      * @param methodType annotated type of {@code method}\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -993,7 +993,7 @@ public class AnnotationFileParser {\n      * @param method a Method or Constructor declaration\n      * @param elt ExecutableElement of {@code method}\n      * @param methodType annotated type of {@code method}\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processParameters(\n             CallableDeclaration<?> method,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjE3Nw==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636177", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:29:22Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1229,24 +1253,27 @@ private void annotate(\n \n     /**\n      * Process the field declaration in decl, and attach any type qualifiers to the type of elt in\n-     * {@code stubAnnos}.\n+     * {@code annotationFileAnnos}.\n      *\n      * @param decl the declaration in the annotation file\n      * @param elt the element representing that same declaration\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -1257,7 +1257,7 @@ public class AnnotationFileParser {\n      *\n      * @param decl the declaration in the annotation file\n      * @param elt the element representing that same declaration\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processField(\n             FieldDeclaration decl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjI3NQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636275", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:29:32Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1268,15 +1295,17 @@ private void processField(\n      *\n      * @param decl the enum constant, in Javaparser AST form (the source of annotations)\n      * @param elt the enum constant declaration, as an element (the destination for annotations)\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -1295,7 +1295,7 @@ public class AnnotationFileParser {\n      *\n      * @param decl the enum constant, in Javaparser AST form (the source of annotations)\n      * @param elt the enum constant declaration, as an element (the destination for annotations)\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      */\n     private void processEnumConstant(\n             EnumConstantDeclaration decl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjYyNw==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636627", "bodyText": "\"stub file\" -> \"annotation file\"", "author": "jwaataja", "createdAt": "2020-12-16T21:30:09Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1329,19 +1358,19 @@ private void annotate(\n     }\n \n     /**\n-     * Adds to {@code stubAnnos} all the annotations in {@code annotations} that are applicable to\n-     * {@code elt}'s location. For example, if an annotation is a type annotation but {@code elt} is\n-     * a field declaration, the type annotation will be ignored.\n+     * Adds to {@code annotationFileAnnos} all the annotations in {@code annotations} that are\n+     * applicable to {@code elt}'s location. For example, if an annotation is a type annotation but\n+     * {@code elt} is a field declaration, the type annotation will be ignored.\n      *\n      * @param elt the element to be annotated\n      * @param annotations set of annotations that may be applicable to elt\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\nindex 77ca7cb70..ec12648bf 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java\n\n@@ -1364,7 +1364,7 @@ public class AnnotationFileParser {\n      *\n      * @param elt the element to be annotated\n      * @param annotations set of annotations that may be applicable to elt\n-     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the annotation file; side-effected by this method\n      * @param astNode where to report errors\n      */\n     private void recordDeclAnnotation(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzODA2MA==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544638060", "bodyText": "Same comment as jwaataja#1. Retain usage of word \"source\".", "author": "jwaataja", "createdAt": "2020-12-16T21:32:38Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java", "diffHunk": "@@ -3,7 +3,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-/** Contract for sources of stub data. */\n+/** Interface for annotation files (stub files). */", "originalCommit": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java\nindex d86318bda..14a66f4a0 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java\n\n@@ -3,7 +3,7 @@ package org.checkerframework.framework.stub;\n import java.io.IOException;\n import java.io.InputStream;\n \n-/** Interface for annotation files (stub files). */\n+/** Interface for sources of stub data. */\n public interface AnnotationFileResource {\n     /**\n      * Returns a user-friendly description of the resource (e.g. a filesystem path).\n"}}, {"oid": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "url": "https://github.com/typetools/checker-framework/commit/df71ffb6fa53f110e00c32d718b20a39b96c2b75", "message": "Improve wording", "committedDate": "2020-12-16T21:56:43Z", "type": "commit"}, {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d", "url": "https://github.com/typetools/checker-framework/commit/12044865eb55bb74ba282a641c38596bcb206c9d", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation", "committedDate": "2020-12-17T00:48:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjQ3OQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752479", "bodyText": "In parseStubFile, don't remove \"stub\".", "author": "jwaataja", "createdAt": "2020-12-17T01:54:11Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.", "originalCommit": "12044865eb55bb74ba282a641c38596bcb206c9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "906c8284a782bc7d96f3408745860ebf61e45403", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\nindex 869da5aa2..7e0213a7d 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n\n@@ -215,12 +215,12 @@ public class AnnotationFileElementTypes {\n                     AnnotationFileParser.parse(\n                             path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the file.  Issue a warning.\n+                    // Didn't find the stub file.  Issue a warning.\n \n-                    // When using a compound checker, the target file may be found by the\n+                    // When using a compound checker, the target stub file may be found by the\n                     // current checker's parent checkers. Also check this to avoid a false\n                     // warning. Currently, only the original checker will try to parse the target\n-                    // file, the parent checkers are only used to reduce false warnings.\n+                    // stub file, the parent checkers are only used to reduce false warnings.\n                     SourceChecker currentChecker = checker;\n                     boolean findByParentCheckers = false;\n                     while (currentChecker != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjUyNQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752525", "bodyText": "In parseStubFile, don't remove \"stub\".", "author": "jwaataja", "createdAt": "2020-12-17T01:54:17Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.\n \n-                    // When using a compound checker, the target stub file may be found by the\n+                    // When using a compound checker, the target file may be found by the", "originalCommit": "12044865eb55bb74ba282a641c38596bcb206c9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "906c8284a782bc7d96f3408745860ebf61e45403", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\nindex 869da5aa2..7e0213a7d 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n\n@@ -215,12 +215,12 @@ public class AnnotationFileElementTypes {\n                     AnnotationFileParser.parse(\n                             path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the file.  Issue a warning.\n+                    // Didn't find the stub file.  Issue a warning.\n \n-                    // When using a compound checker, the target file may be found by the\n+                    // When using a compound checker, the target stub file may be found by the\n                     // current checker's parent checkers. Also check this to avoid a false\n                     // warning. Currently, only the original checker will try to parse the target\n-                    // file, the parent checkers are only used to reduce false warnings.\n+                    // stub file, the parent checkers are only used to reduce false warnings.\n                     SourceChecker currentChecker = checker;\n                     boolean findByParentCheckers = false;\n                     while (currentChecker != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjU1MA==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752550", "bodyText": "In parseStubFile, don't remove \"stub\".", "author": "jwaataja", "createdAt": "2020-12-17T01:54:23Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.\n \n-                    // When using a compound checker, the target stub file may be found by the\n+                    // When using a compound checker, the target file may be found by the\n                     // current checker's parent checkers. Also check this to avoid a false\n                     // warning. Currently, only the original checker will try to parse the target\n-                    // stub file, the parent checkers are only used to reduce false warnings.\n+                    // file, the parent checkers are only used to reduce false warnings.", "originalCommit": "12044865eb55bb74ba282a641c38596bcb206c9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "906c8284a782bc7d96f3408745860ebf61e45403", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\nindex 869da5aa2..7e0213a7d 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n\n@@ -215,12 +215,12 @@ public class AnnotationFileElementTypes {\n                     AnnotationFileParser.parse(\n                             path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the file.  Issue a warning.\n+                    // Didn't find the stub file.  Issue a warning.\n \n-                    // When using a compound checker, the target file may be found by the\n+                    // When using a compound checker, the target stub file may be found by the\n                     // current checker's parent checkers. Also check this to avoid a false\n                     // warning. Currently, only the original checker will try to parse the target\n-                    // file, the parent checkers are only used to reduce false warnings.\n+                    // stub file, the parent checkers are only used to reduce false warnings.\n                     SourceChecker currentChecker = checker;\n                     boolean findByParentCheckers = false;\n                     while (currentChecker != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjY4MQ==", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752681", "bodyText": "In parseStubFile, don't remove \"stub\".", "author": "jwaataja", "createdAt": "2020-12-17T01:54:39Z", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -238,7 +239,7 @@ public void parseStubFiles() {\n                             currentChecker = currentChecker.getParentChecker();\n                         }\n                     }\n-                    // If there exists one parent checker that can find this stub file, don't\n+                    // If there exists one parent checker that can find this file, don't", "originalCommit": "12044865eb55bb74ba282a641c38596bcb206c9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "906c8284a782bc7d96f3408745860ebf61e45403", "chunk": "diff --git a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\nindex 869da5aa2..7e0213a7d 100644\n--- a/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n+++ b/framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java\n\n@@ -239,7 +239,7 @@ public class AnnotationFileElementTypes {\n                             currentChecker = currentChecker.getParentChecker();\n                         }\n                     }\n-                    // If there exists one parent checker that can find this file, don't\n+                    // If there exists one parent checker that can find this stub file, don't\n                     // report an warning.\n                     if (!findByParentCheckers) {\n                         File parentPath = new File(path).getParentFile();\n"}}, {"oid": "b53d28c915e7e5413eca59e3307b1690e73bd66f", "url": "https://github.com/typetools/checker-framework/commit/b53d28c915e7e5413eca59e3307b1690e73bd66f", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation", "committedDate": "2020-12-17T02:47:57Z", "type": "commit"}, {"oid": "906c8284a782bc7d96f3408745860ebf61e45403", "url": "https://github.com/typetools/checker-framework/commit/906c8284a782bc7d96f3408745860ebf61e45403", "message": "Undo changes", "committedDate": "2020-12-17T02:50:34Z", "type": "commit"}]}