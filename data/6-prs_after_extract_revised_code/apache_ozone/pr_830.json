{"pr_number": 830, "pr_title": "HDDS-3392.OM create key/file should not generate different data encryption key during validateAndUpdateCache.", "pr_createdAt": "2020-04-16T00:41:45Z", "pr_url": "https://github.com/apache/ozone/pull/830", "timeline": [{"oid": "80c3aeda734841f9488203b70db179d396bf2465", "url": "https://github.com/apache/ozone/commit/80c3aeda734841f9488203b70db179d396bf2465", "message": "HDDS-3392. OM create key/file should not generate different data encryption key during validateAndUpdateCache.", "committedDate": "2020-04-16T00:39:17Z", "type": "commit"}, {"oid": "11bb2a21574fdaa22bd18438316dcf22443be169", "url": "https://github.com/apache/ozone/commit/11bb2a21574fdaa22bd18438316dcf22443be169", "message": "remove additional space", "committedDate": "2020-04-16T00:42:49Z", "type": "commit"}, {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728", "url": "https://github.com/apache/ozone/commit/a38bbd2b185c116c8a5862673b84230a5c87b728", "message": "check style", "committedDate": "2020-04-16T00:56:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409252097", "bodyText": "If we could fail the client earlier without the request adding to request log, that can avoid adding the request to ratis log as it will fail application any way.", "author": "xiaoyuyao", "createdAt": "2020-04-16T02:59:54Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -451,4 +446,62 @@ protected void checkKeyAclsInOpenKeyTable(OzoneManager ozoneManager,\n     checkKeyAcls(ozoneManager, volume, bucket, keyNameForAclCheck,\n           aclType, OzoneObj.ResourceType.KEY);\n   }\n+\n+  /**\n+   * Generate EncryptionInfo and set in to newKeyArgs.\n+   * @param keyArgs\n+   * @param newKeyArgs\n+   * @param ozoneManager\n+   */\n+  protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n+      KeyArgs.Builder newKeyArgs, OzoneManager ozoneManager)\n+      throws IOException {\n+\n+    String volumeName = keyArgs.getVolumeName();\n+    String bucketName = keyArgs.getBucketName();\n+\n+    boolean acquireLock = false;\n+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n+\n+    // When TDE is enabled, we are doing a DB read in pre-execute. As for\n+    // most of the operations we don't read from DB because of our isLeader\n+    // semantics. This issue will be solved with implementation of leader\n+    // leases which provider strong leader semantics in the system.\n+\n+    // If KMS is not enabled, follow the normal approach of execution of not\n+    // reading DB in pre-execute.\n+    if (ozoneManager.getKmsProvider() != null) {\n+      try {\n+        acquireLock = omMetadataManager.getLock().acquireReadLock(\n+            BUCKET_LOCK, volumeName, bucketName);\n+\n+\n+        OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n+            omMetadataManager.getBucketKey(volumeName, bucketName));\n+\n+\n+        // Don't throw exception of bucket not found when bucketinfo is not\n+        // null. If bucketinfo is null, later when request\n+        // is submitted and if bucket does not really exist it will fail in\n+        // applyTransaction step. Why we are doing this is if OM thinks it is\n+        // the leader, but it is not, we don't want to fail request in this\n+        // case. As anyway when it submits request to ratis it will fail with", "originalCommit": "a38bbd2b185c116c8a5862673b84230a5c87b728", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4NjE4Ng==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409286186", "bodyText": "We are doing this because of our current isLeader semantics.\nThe same is explained in the comments, once after strong leader semantics, we can revisit this.", "author": "bharatviswa504", "createdAt": "2020-04-16T05:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczNDAyMQ==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409734021", "bodyText": "Sounds good to me. Do we have a JIRA to track the leader lease?", "author": "xiaoyuyao", "createdAt": "2020-04-16T17:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5ODAyMw==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409798023", "bodyText": "I will open a jira for this also.", "author": "bharatviswa504", "createdAt": "2020-04-16T19:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "252caca2c7af7fa024ebfb085e59e5b8d4268404", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java\nindex bb1198e0b..0aec04dc6 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java\n\n@@ -504,4 +504,17 @@ protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n       }\n     }\n   }\n+\n+  /**\n+   * Get FileEncryptionInfoProto from KeyArgs.\n+   * @param keyArgs\n+   * @return\n+   */\n+  protected FileEncryptionInfo getFileEncryptionInfo(KeyArgs keyArgs) {\n+    FileEncryptionInfo encryptionInfo = null;\n+    if (keyArgs.hasFileEncryptionInfo()) {\n+      encryptionInfo = OMPBHelper.convert(keyArgs.getFileEncryptionInfo());\n+    }\n+    return encryptionInfo;\n+  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjkwMA==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409252900", "bodyText": "encryptionInfo.orNull() should be removed as the keyArgs now have the data encryption key info.", "author": "xiaoyuyao", "createdAt": "2020-04-16T03:03:11Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,7 +214,6 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n           keyArgs.getDataSize(), locations, encryptionInfo.orNull(),", "originalCommit": "a38bbd2b185c116c8a5862673b84230a5c87b728", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4OTc4MA==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409289780", "bodyText": "Done.", "author": "bharatviswa504", "createdAt": "2020-04-16T05:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "252caca2c7af7fa024ebfb085e59e5b8d4268404", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java\nindex 572bce993..a7543b529 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java\n\n@@ -216,7 +217,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),\n           ozoneManager.getPrefixManager(), bucketInfo, trxnLogIndex,\n           ozoneManager.isRatisEnabled());\n \n"}}, {"oid": "252caca2c7af7fa024ebfb085e59e5b8d4268404", "url": "https://github.com/apache/ozone/commit/252caca2c7af7fa024ebfb085e59e5b8d4268404", "message": "review comments", "committedDate": "2020-04-16T05:25:04Z", "type": "commit"}, {"oid": "ac83fb91b042b1db7dfadced5d014bb86b56bafa", "url": "https://github.com/apache/ozone/commit/ac83fb91b042b1db7dfadced5d014bb86b56bafa", "message": "check style", "committedDate": "2020-04-16T05:50:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409733651", "bodyText": "NIT: Given we have pass keyArgs, we can reduce the number of arguments here to  avoid @SuppressWarnings(\"parameternumber\") for prepareKeyInfo().", "author": "xiaoyuyao", "createdAt": "2020-04-16T17:38:13Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,10 +213,9 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),", "originalCommit": "ac83fb91b042b1db7dfadced5d014bb86b56bafa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MTI3Mg==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409791272", "bodyText": "By removing the encryptionInfo and size, we cannot remove @SuppressWarnings(\"parameternumber\"). I will leave for now. I will open a new jira to refactor this.", "author": "bharatviswa504", "createdAt": "2020-04-16T19:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MjQzNg==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409792436", "bodyText": "Jira to track this\nhttps://issues.apache.org/jira/browse/HDDS-3407", "author": "bharatviswa504", "createdAt": "2020-04-16T19:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5OTI1OA==", "url": "https://github.com/apache/ozone/pull/830#discussion_r409799258", "bodyText": "Ok to me.  Let's fix that later. +1.", "author": "xiaoyuyao", "createdAt": "2020-04-16T19:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}], "type": "inlineReview", "revised_code": null}]}