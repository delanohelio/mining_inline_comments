{"pr_number": 1746, "pr_title": "HDDS-4631. Fix client set quota with 0.", "pr_createdAt": "2020-12-30T07:28:23Z", "pr_url": "https://github.com/apache/ozone/pull/1746", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQwMjUzNQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r550402535", "bodyText": "Question: how to set QUOTA.RESET? (basically how to disable quota by set the quota). In the past I guess we can set -2 but now it seems disallowed.\nFor example, is there a case that a bucket is enabled quota, later users decide to disable the quota by setting a quota value?", "author": "amaliujia", "createdAt": "2020-12-31T05:45:18Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +201,44 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);\n     }\n \n-    return new OzoneQuota(quotaInNamespace,\n-        new RawQuotaInBytes(currUnit, nSize));\n+    return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n   }\n \n+  /**\n+   * Parses a user provided string Namespace quota and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInNamespace Volume quota in counts\n+   *\n+   * @return OzoneQuota object\n+   */\n+  public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n+    if (nameSpaceQuota <= 0) {", "originalCommit": "bdaed0c5504ed04174ec5d6494eb180327e8f9b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMzA5MA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r550423090", "bodyText": "If the user not specifies quota when creating bucket and volume,the default is -1, indicating that quota is not enabled.\nA quota value of -2 is a special case, because older clusters such as previous versions of Ozone1.0, volume Info and bucket Info do not have quotaInBytes and quotaInNamespace in them. After such a cluster is upgraded to Ozone1.1, these fields become to 0 when getting volume Info and bucket Info because they didn't exist before, so in HDDS-4562 proto is set to -2 by default, indicating that these volumes and buckets are old, and their quota is also not enabled. Currently, it is not recommended to enable quota for these volumes and buckets because their usedbyte and usedNamespace are incorrect. So, -2 is more used to distinguish between old volumes and buckets. Later if we can support recalculation of usedbyte and usedNamespace. This lets us know which volumes and buckets need to be recalculated.\nTo disable quota, use the clrquota method instead of setquota.", "author": "captainzmc", "createdAt": "2020-12-31T08:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQwMjUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex dd7f95432a..7e96fb49dd 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -217,6 +223,10 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    if (Strings.isNullOrEmpty(quotaInNamespace)) {\n+      throw new IllegalArgumentException(\n+          \"Quota string cannot be null or empty.\");\n+    }\n     long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n     if (nameSpaceQuota <= 0) {\n       throw new IllegalArgumentException(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzMjM1MA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r555132350", "bodyText": "@captainzmc \uff0c can we rollback long to string convert for namspace quota now? As default quota 0 will all be converted to Quota.RESET based on above approach that we discussed. Or we can create a new PR for this.", "author": "linyiqun", "createdAt": "2021-01-11T15:36:11Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +201,44 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);\n     }\n \n-    return new OzoneQuota(quotaInNamespace,\n-        new RawQuotaInBytes(currUnit, nSize));\n+    return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n   }\n \n+  /**\n+   * Parses a user provided string Namespace quota and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInNamespace Volume quota in counts\n+   *\n+   * @return OzoneQuota object\n+   */\n+  public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n+    if (nameSpaceQuota <= 0) {\n+      throw new IllegalArgumentException(\n+          \"Invalid values for quota: \" + nameSpaceQuota);\n+    }\n+    return new OzoneQuota(nameSpaceQuota, new RawQuotaInBytes(Units.BYTES, -1));\n+  }\n+\n+  /**\n+   * Parses a user provided string and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInBytes Volume quota in bytes\n+   * @param quotaInNamespace Volume quota in counts\n+   *\n+   * @return OzoneQuota object\n+   */\n+  public static OzoneQuota parseQuota(String quotaInBytes,\n+      String quotaInNamespace) {", "originalCommit": "e5c28c8d87cc63c87865e3ec880be81a89d68b08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUwODA0Ng==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r555508046", "bodyText": "The above advice only solves our problem of creating volume or bucket, not setquota.\nThe string quotainNamespace in parseQuota is still useful for verifying whether the user passed quotainNamespace.Let's look at this case:\nIf the original volume space and namespace quoat were 100 and 10T, respectively, we reset the space quota separately:\nozone sh volume setquota vol1 --space-quota 20TB\nOzoneConsts.QUOTA_RESET is the default quota for VolumeArgs. The space and namespace quota for vol1 will change to -1 and 20T, which is not expected.\nI think it makes more sense to handle these cases in Ozonequota #parseQuota. Also, spaceQuota is currently a String in parseQuota, which makes our client-side processing logic more consistent,  making the code easier to maintain.", "author": "captainzmc", "createdAt": "2021-01-12T04:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzMjM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTYxNjc5OQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r555616799", "bodyText": "Hi @linyiqun , thanks for review the code.  We found bugs in production cluster with the previous implementation which doesn't distinguish the cases that user doesn't set the quota and user set the quota to 0.  So it's better to make it clear to avoid bugs caused by concept vague.\nIn summary, for quota in bucket and volume,\n\nquota value will be -2  to indicates it's 1.0.0 bucket/volume\nquota value will be -1 if  bucket/volume created without explicitly set quota value in 1.1.0\nquota > 0 indicates quota is enabled\nthrow exception if user set quota to 0 to keep consistent with current HDFS behavior\n\nI\u2018m not sure If I have answered your question. Let me know if a further explanation is needed.", "author": "ChenSammi", "createdAt": "2021-01-12T09:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzMjM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3MTE5OQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557471199", "bodyText": "Comments make sense to me, @captainzmc , @ChenSammi", "author": "linyiqun", "createdAt": "2021-01-14T15:17:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzMjM1MA=="}], "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex dd7f95432a..7e96fb49dd 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -217,6 +223,10 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    if (Strings.isNullOrEmpty(quotaInNamespace)) {\n+      throw new IllegalArgumentException(\n+          \"Quota string cannot be null or empty.\");\n+    }\n     long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n     if (nameSpaceQuota <= 0) {\n       throw new IllegalArgumentException(\n"}}, {"oid": "87fecf929f0dbf444ff98bb24f0f2c52bdc8a7b6", "url": "https://github.com/apache/ozone/commit/87fecf929f0dbf444ff98bb24f0f2c52bdc8a7b6", "message": "Add more comprehensive UT", "committedDate": "2021-01-12T05:02:07Z", "type": "forcePushed"}, {"oid": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "url": "https://github.com/apache/ozone/commit/363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "message": "rabase master and add more comprehensive UT", "committedDate": "2021-01-12T08:31:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM3OTc2Mg==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557379762", "bodyText": "Shall we keep this null check or add new Precondition check that quotaInBytes cannot be null or empty.\nThis suggestion also applies to parseNameSpaceQuota.\nBecause these two functions are public static, we need to do some kind of parameter check.", "author": "ChenSammi", "createdAt": "2021-01-14T13:04:40Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -145,21 +163,14 @@ public static String formatQuota(OzoneQuota quota) {\n   }\n \n   /**\n-   * Parses a user provided string and returns the\n+   * Parses a user provided string space quota and returns the\n    * Quota Object.\n    *\n    * @param quotaInBytes Volume quota in bytes\n-   * @param quotaInNamespace Volume quota in counts\n    *\n    * @return OzoneQuota object\n    */\n-  public static OzoneQuota parseQuota(String quotaInBytes,\n-      long quotaInNamespace) {\n-\n-    if (Strings.isNullOrEmpty(quotaInBytes)) {\n-      throw new IllegalArgumentException(\n-          \"Quota string cannot be null or empty.\");\n-    }", "originalCommit": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex dd7f95432a..7e96fb49dd 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -172,6 +173,11 @@ public static String formatQuota(OzoneQuota quota) {\n    */\n   public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n \n+    if (Strings.isNullOrEmpty(quotaInBytes)) {\n+      throw new IllegalArgumentException(\n+          \"Quota string cannot be null or empty.\");\n+    }\n+\n     String uppercase = quotaInBytes.toUpperCase()\n         .replaceAll(\"\\\\s+\", \"\");\n     String size = \"\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM5MjkwNA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557392904", "bodyText": "With default quotaInBytes and quotaInNamespace value, do we still need this and below else statement?", "author": "ChenSammi", "createdAt": "2021-01-14T13:26:53Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/CreateVolumeHandler.java", "diffHunk": "@@ -59,13 +61,19 @@ protected void execute(OzoneClient client, OzoneAddress address)\n     VolumeArgs.Builder volumeArgsBuilder = VolumeArgs.newBuilder()\n         .setAdmin(adminName)\n         .setOwner(ownerName);\n-    if (quotaOptions.getQuotaInBytes() != null) {\n-      volumeArgsBuilder.setQuotaInBytes(OzoneQuota.parseQuota(\n-          quotaOptions.getQuotaInBytes(),\n-          quotaOptions.getQuotaInNamespace()).getQuotaInBytes());\n+    if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInBytes())) {\n+      volumeArgsBuilder.setQuotaInBytes(OzoneQuota.parseSpaceQuota(\n+          quotaOptions.getQuotaInBytes()).getQuotaInBytes());\n+    } else {\n+      volumeArgsBuilder.setQuotaInBytes(OzoneConsts.QUOTA_RESET);", "originalCommit": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQyNTI5OA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557425298", "bodyText": "This part is superfluous and can be deleted", "author": "captainzmc", "createdAt": "2021-01-14T14:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM5MjkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/CreateVolumeHandler.java b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/CreateVolumeHandler.java\nindex fde9c9d272..64b988c893 100644\n--- a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/CreateVolumeHandler.java\n+++ b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/CreateVolumeHandler.java\n\n@@ -64,15 +63,11 @@ protected void execute(OzoneClient client, OzoneAddress address)\n     if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInBytes())) {\n       volumeArgsBuilder.setQuotaInBytes(OzoneQuota.parseSpaceQuota(\n           quotaOptions.getQuotaInBytes()).getQuotaInBytes());\n-    } else {\n-      volumeArgsBuilder.setQuotaInBytes(OzoneConsts.QUOTA_RESET);\n     }\n \n     if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInNamespace())) {\n       volumeArgsBuilder.setQuotaInNamespace(OzoneQuota.parseNameSpaceQuota(\n           quotaOptions.getQuotaInNamespace()).getQuotaInNamespace());\n-    } else {\n-      volumeArgsBuilder.setQuotaInNamespace(OzoneConsts.QUOTA_RESET);\n     }\n \n     client.getObjectStore().createVolume(volumeName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM5MzI1NA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557393254", "bodyText": "Same as below comment.", "author": "ChenSammi", "createdAt": "2021-01-14T13:27:28Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "diffHunk": "@@ -80,12 +81,19 @@ public void execute(OzoneClient client, OzoneAddress address)\n       }\n     }\n \n-    if (quotaOptions.getQuotaInBytes() != null) {\n-      bb.setQuotaInBytes(OzoneQuota.parseQuota(quotaOptions.getQuotaInBytes(),\n-          quotaOptions.getQuotaInNamespace()).getQuotaInBytes());\n+    if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInBytes())) {\n+      bb.setQuotaInBytes(OzoneQuota.parseSpaceQuota(\n+          quotaOptions.getQuotaInBytes()).getQuotaInBytes());\n+    } else {\n+      bb.setQuotaInBytes(OzoneConsts.QUOTA_RESET);", "originalCommit": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java\nindex b48bb48f84..5dd6e6e5b9 100644\n--- a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java\n+++ b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java\n\n@@ -84,17 +84,12 @@ public void execute(OzoneClient client, OzoneAddress address)\n     if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInBytes())) {\n       bb.setQuotaInBytes(OzoneQuota.parseSpaceQuota(\n           quotaOptions.getQuotaInBytes()).getQuotaInBytes());\n-    } else {\n-      bb.setQuotaInBytes(OzoneConsts.QUOTA_RESET);\n     }\n \n     if (!Strings.isNullOrEmpty(quotaOptions.getQuotaInNamespace())) {\n       bb.setQuotaInNamespace(OzoneQuota.parseNameSpaceQuota(\n           quotaOptions.getQuotaInNamespace()).getQuotaInNamespace());\n-    } else {\n-      bb.setQuotaInNamespace(OzoneConsts.QUOTA_RESET);\n     }\n-\n     String volumeName = address.getVolumeName();\n     String bucketName = address.getBucketName();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM5ODgxOA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557398818", "bodyText": "(volumeQuotaInBytes < OzoneConsts.QUOTA_RESET || volumeQuotaInBytes == 0) ?", "author": "ChenSammi", "createdAt": "2021-01-14T13:36:07Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java", "diffHunk": "@@ -189,7 +189,7 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n       long volumeQuotaInBytes, String volumeName) throws IOException {\n     long totalBucketQuota = 0;\n \n-    if (volumeQuotaInBytes == 0) {\n+    if (volumeQuotaInBytes < OzoneConsts.QUOTA_RESET) {", "originalCommit": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\nindex 47cc4eb79b..f000768b78 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\n\n@@ -189,7 +189,8 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n       long volumeQuotaInBytes, String volumeName) throws IOException {\n     long totalBucketQuota = 0;\n \n-    if (volumeQuotaInBytes < OzoneConsts.QUOTA_RESET) {\n+    if (volumeQuotaInBytes < OzoneConsts.QUOTA_RESET\n+        || volumeQuotaInBytes == 0) {\n       return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM5OTAxOA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557399018", "bodyText": "Same question as as above comment.", "author": "ChenSammi", "createdAt": "2021-01-14T13:36:27Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java", "diffHunk": "@@ -213,8 +213,7 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n \n   public boolean checkQuotaNamespaceValid(long quotaInNamespace) {\n \n-    if ((quotaInNamespace <= 0\n-         && quotaInNamespace != OzoneConsts.QUOTA_RESET)) {\n+    if (quotaInNamespace < OzoneConsts.QUOTA_RESET) {", "originalCommit": "363f3923a91067bd7f1875bdf99b32f5db4cbcbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\nindex 47cc4eb79b..f000768b78 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetQuotaRequest.java\n\n@@ -213,7 +214,7 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n \n   public boolean checkQuotaNamespaceValid(long quotaInNamespace) {\n \n-    if (quotaInNamespace < OzoneConsts.QUOTA_RESET) {\n+    if (quotaInNamespace < OzoneConsts.QUOTA_RESET || quotaInNamespace == 0) {\n       return false;\n     }\n     return true;\n"}}, {"oid": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "url": "https://github.com/apache/ozone/commit/dfb3d14a8ae65a7a14999b1626222f715aa8df76", "message": "fix review issues", "committedDate": "2021-01-14T14:46:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3MjUzNQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557472535", "bodyText": "Can you update quota to 'space quota' that will be more accurate for this exception?", "author": "linyiqun", "createdAt": "2021-01-14T15:18:46Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +207,48 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);", "originalCommit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "628e81233c411180f884db57b1d60ec6670a2afa", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 7e96fb49dd..9cc075e02e 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -207,8 +201,8 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize <= 0) {\n-      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);\n+    if (nSize < 0) {\n+      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n     }\n \n     return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3MzQyOQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557473429", "bodyText": "Similar comment: quota to namespace quota.", "author": "linyiqun", "createdAt": "2021-01-14T15:19:54Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +207,48 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);\n     }\n \n-    return new OzoneQuota(quotaInNamespace,\n-        new RawQuotaInBytes(currUnit, nSize));\n+    return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n   }\n \n+  /**\n+   * Parses a user provided string Namespace quota and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInNamespace Volume quota in counts\n+   *\n+   * @return OzoneQuota object\n+   */\n+  public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    if (Strings.isNullOrEmpty(quotaInNamespace)) {\n+      throw new IllegalArgumentException(\n+          \"Quota string cannot be null or empty.\");\n+    }\n+    long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n+    if (nameSpaceQuota <= 0) {\n+      throw new IllegalArgumentException(\n+          \"Invalid values for quota: \" + nameSpaceQuota);", "originalCommit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "628e81233c411180f884db57b1d60ec6670a2afa", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 7e96fb49dd..9cc075e02e 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -207,8 +201,8 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize <= 0) {\n-      throw new IllegalArgumentException(\"Invalid values for quota: \" + nSize);\n+    if (nSize < 0) {\n+      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n     }\n \n     return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3NDk4OA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557474988", "bodyText": "Seems this should be updated to quotaInBytes < OzoneConsts.QUOTA_RESET || quotaInBytes == 0 as well.", "author": "linyiqun", "createdAt": "2021-01-14T15:22:02Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -239,7 +239,7 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n           OMException.ResultCodes.QUOTA_ERROR);\n     }\n \n-    if (quotaInBytes == 0) {\n+    if (quotaInBytes < OzoneConsts.QUOTA_RESET) {", "originalCommit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "876e01a53912fa69405188a66ec99fb73c5164ad", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\nindex 6bc7b46c3d..6962895721 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\n\n@@ -239,7 +239,7 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n           OMException.ResultCodes.QUOTA_ERROR);\n     }\n \n-    if (quotaInBytes < OzoneConsts.QUOTA_RESET) {\n+    if (quotaInBytes < OzoneConsts.QUOTA_RESET || quotaInBytes == 0) {\n       return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ3NTMyMw==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557475323", "bodyText": "Same comment for this.", "author": "linyiqun", "createdAt": "2021-01-14T15:22:27Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -273,8 +273,7 @@ public boolean checkQuotaNamespaceValid(OmVolumeArgs omVolumeArgs,\n       OmBucketArgs omBucketArgs) {\n     long quotaInNamespace = omBucketArgs.getQuotaInNamespace();\n \n-    if ((quotaInNamespace <= 0\n-         && quotaInNamespace != OzoneConsts.QUOTA_RESET)) {\n+    if (quotaInNamespace < OzoneConsts.QUOTA_RESET) {", "originalCommit": "dfb3d14a8ae65a7a14999b1626222f715aa8df76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "876e01a53912fa69405188a66ec99fb73c5164ad", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\nindex 6bc7b46c3d..6962895721 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java\n\n@@ -273,7 +273,7 @@ public boolean checkQuotaNamespaceValid(OmVolumeArgs omVolumeArgs,\n       OmBucketArgs omBucketArgs) {\n     long quotaInNamespace = omBucketArgs.getQuotaInNamespace();\n \n-    if (quotaInNamespace < OzoneConsts.QUOTA_RESET) {\n+    if (quotaInNamespace < OzoneConsts.QUOTA_RESET || quotaInNamespace == 0) {\n       return false;\n     }\n     return true;\n"}}, {"oid": "628e81233c411180f884db57b1d60ec6670a2afa", "url": "https://github.com/apache/ozone/commit/628e81233c411180f884db57b1d60ec6670a2afa", "message": "Fixed client set quota with 0.", "committedDate": "2021-01-15T02:41:33Z", "type": "commit"}, {"oid": "32ce8345f0a0366a3517e002bfa419e4f650c8a5", "url": "https://github.com/apache/ozone/commit/32ce8345f0a0366a3517e002bfa419e4f650c8a5", "message": "fix style", "committedDate": "2021-01-15T02:41:33Z", "type": "commit"}, {"oid": "03d7c7cb75113689838a15270da3c428d20e8053", "url": "https://github.com/apache/ozone/commit/03d7c7cb75113689838a15270da3c428d20e8053", "message": "quota 0 should be invalid value.", "committedDate": "2021-01-15T02:41:33Z", "type": "commit"}, {"oid": "830bcaec66cf283d700d4043601ac74e59ddcb04", "url": "https://github.com/apache/ozone/commit/830bcaec66cf283d700d4043601ac74e59ddcb04", "message": "fix style.", "committedDate": "2021-01-15T02:41:33Z", "type": "commit"}, {"oid": "66251e1a952c849a54560188727c888fa9ac1dd8", "url": "https://github.com/apache/ozone/commit/66251e1a952c849a54560188727c888fa9ac1dd8", "message": "Fix review issues and fix bugs when create volume and bucket.", "committedDate": "2021-01-15T02:41:33Z", "type": "commit"}, {"oid": "876e01a53912fa69405188a66ec99fb73c5164ad", "url": "https://github.com/apache/ozone/commit/876e01a53912fa69405188a66ec99fb73c5164ad", "message": "fix review issues", "committedDate": "2021-01-15T02:42:00Z", "type": "forcePushed"}, {"oid": "6904fd0cd2c3d322c6a4303250e401d2c10f71c4", "url": "https://github.com/apache/ozone/commit/6904fd0cd2c3d322c6a4303250e401d2c10f71c4", "message": "rabase master and add more comprehensive UT", "committedDate": "2021-01-15T02:42:00Z", "type": "commit"}, {"oid": "fe322608be45fc91fc5fcdb00b06e725d49eb1d3", "url": "https://github.com/apache/ozone/commit/fe322608be45fc91fc5fcdb00b06e725d49eb1d3", "message": "fix review issues", "committedDate": "2021-01-15T02:42:00Z", "type": "commit"}, {"oid": "20c54b21641ab85a2f792bab12c2279668f8bf6c", "url": "https://github.com/apache/ozone/commit/20c54b21641ab85a2f792bab12c2279668f8bf6c", "message": "fix review issues", "committedDate": "2021-01-15T02:49:36Z", "type": "forcePushed"}, {"oid": "20c54b21641ab85a2f792bab12c2279668f8bf6c", "url": "https://github.com/apache/ozone/commit/20c54b21641ab85a2f792bab12c2279668f8bf6c", "message": "fix review issues", "committedDate": "2021-01-15T02:49:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgzNDUwNA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557834504", "bodyText": "volume quota should be ozone quota since this quota can also the bucket quota", "author": "linyiqun", "createdAt": "2021-01-15T03:07:37Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -145,16 +164,14 @@ public static String formatQuota(OzoneQuota quota) {\n   }\n \n   /**\n-   * Parses a user provided string and returns the\n+   * Parses a user provided string space quota and returns the\n    * Quota Object.\n    *\n    * @param quotaInBytes Volume quota in bytes", "originalCommit": "20c54b21641ab85a2f792bab12c2279668f8bf6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e9775a293a490e1931263a27a6efe477d80ff52", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 895ffba861..e6aa0aaeab 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -167,7 +167,7 @@ public static String formatQuota(OzoneQuota quota) {\n    * Parses a user provided string space quota and returns the\n    * Quota Object.\n    *\n-   * @param quotaInBytes Volume quota in bytes\n+   * @param quotaInBytes ozone quota in bytes\n    *\n    * @return OzoneQuota object\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgzNDYxNA==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557834614", "bodyText": "Same comment as above.", "author": "linyiqun", "createdAt": "2021-01-15T03:07:56Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +207,49 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for space quota: \"\n+          + nSize);\n     }\n \n-    return new OzoneQuota(quotaInNamespace,\n-        new RawQuotaInBytes(currUnit, nSize));\n+    return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n   }\n \n+  /**\n+   * Parses a user provided string Namespace quota and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInNamespace Volume quota in counts", "originalCommit": "20c54b21641ab85a2f792bab12c2279668f8bf6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e9775a293a490e1931263a27a6efe477d80ff52", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 895ffba861..e6aa0aaeab 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -219,7 +219,7 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n    * Parses a user provided string Namespace quota and returns the\n    * Quota Object.\n    *\n-   * @param quotaInNamespace Volume quota in counts\n+   * @param quotaInNamespace ozone quota in counts\n    *\n    * @return OzoneQuota object\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgzNDc0NQ==", "url": "https://github.com/apache/ozone/pull/1746#discussion_r557834745", "bodyText": "Same comment as above.", "author": "linyiqun", "createdAt": "2021-01-15T03:08:14Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -190,14 +207,49 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n           \" value cannot be greater than Long.MAX_VALUE BYTES\");\n     }\n \n-    if (nSize < 0) {\n-      throw new IllegalArgumentException(\"Quota cannot be negative.\");\n+    if (nSize <= 0) {\n+      throw new IllegalArgumentException(\"Invalid values for space quota: \"\n+          + nSize);\n     }\n \n-    return new OzoneQuota(quotaInNamespace,\n-        new RawQuotaInBytes(currUnit, nSize));\n+    return new OzoneQuota(new RawQuotaInBytes(currUnit, nSize));\n   }\n \n+  /**\n+   * Parses a user provided string Namespace quota and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInNamespace Volume quota in counts\n+   *\n+   * @return OzoneQuota object\n+   */\n+  public static OzoneQuota parseNameSpaceQuota(String quotaInNamespace) {\n+    if (Strings.isNullOrEmpty(quotaInNamespace)) {\n+      throw new IllegalArgumentException(\n+          \"Quota string cannot be null or empty.\");\n+    }\n+    long nameSpaceQuota = Long.parseLong(quotaInNamespace);\n+    if (nameSpaceQuota <= 0) {\n+      throw new IllegalArgumentException(\n+          \"Invalid values for namespace quota: \" + nameSpaceQuota);\n+    }\n+    return new OzoneQuota(nameSpaceQuota, new RawQuotaInBytes(Units.BYTES, -1));\n+  }\n+\n+  /**\n+   * Parses a user provided string and returns the\n+   * Quota Object.\n+   *\n+   * @param quotaInBytes Volume quota in bytes\n+   * @param quotaInNamespace Volume quota in counts", "originalCommit": "20c54b21641ab85a2f792bab12c2279668f8bf6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e9775a293a490e1931263a27a6efe477d80ff52", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 895ffba861..e6aa0aaeab 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -219,7 +219,7 @@ public static OzoneQuota parseSpaceQuota(String quotaInBytes) {\n    * Parses a user provided string Namespace quota and returns the\n    * Quota Object.\n    *\n-   * @param quotaInNamespace Volume quota in counts\n+   * @param quotaInNamespace ozone quota in counts\n    *\n    * @return OzoneQuota object\n    */\n"}}, {"oid": "1e9775a293a490e1931263a27a6efe477d80ff52", "url": "https://github.com/apache/ozone/commit/1e9775a293a490e1931263a27a6efe477d80ff52", "message": "fix review issues", "committedDate": "2021-01-15T05:34:34Z", "type": "forcePushed"}, {"oid": "22326b992d37f4d6d98eb0df6b79b9e9d82beb12", "url": "https://github.com/apache/ozone/commit/22326b992d37f4d6d98eb0df6b79b9e9d82beb12", "message": "fix review issues", "committedDate": "2021-01-15T07:54:29Z", "type": "forcePushed"}, {"oid": "22326b992d37f4d6d98eb0df6b79b9e9d82beb12", "url": "https://github.com/apache/ozone/commit/22326b992d37f4d6d98eb0df6b79b9e9d82beb12", "message": "fix review issues", "committedDate": "2021-01-15T07:54:29Z", "type": "commit"}]}