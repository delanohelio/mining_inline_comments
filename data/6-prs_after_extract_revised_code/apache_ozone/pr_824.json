{"pr_number": 824, "pr_title": "HDDS-2682: OM File create request does not check for existing directory with the same name", "pr_createdAt": "2020-04-15T07:02:39Z", "pr_url": "https://github.com/apache/ozone/pull/824", "timeline": [{"oid": "82e583b8eeb31eed140e7a07449e6fbc8de8575d", "url": "https://github.com/apache/ozone/commit/82e583b8eeb31eed140e7a07449e6fbc8de8575d", "message": "HDDS-2682: OM File create request does not check for existing directory with the same name", "committedDate": "2020-04-15T06:51:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MjA1NA==", "url": "https://github.com/apache/ozone/pull/824#discussion_r408662054", "bodyText": "Nit: can you please extract this logic into a helper method, to avoid duplication?", "author": "adoroszlai", "createdAt": "2020-04-15T08:16:05Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -65,6 +68,110 @@\n   private int rootItemCount;\n \n   @Test(timeout = 300_000)\n+  public void testCreateFileShouldCheckTheExistenceOfDirWithSameName() throws Exception {\n+    /*\n+     * Op 1. create file -> /d1/d2/d3/d4/key2\n+     * Op 2. create dir -> /d1/d2/d3/d4/key2\n+     *\n+     * Reverse of the above steps\n+     * Op 2. create dir -> /d1/d2/d3/d4/key3\n+     * Op 1. create file -> /d1/d2/d3/d4/key3\n+     *\n+     * Op 3. create file -> /d1/d2/d3 (d3 as a file inside /d1/d2)\n+     */\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    cluster = MiniOzoneCluster.newBuilder(conf)\n+            .setNumDatanodes(3)\n+            .build();\n+    cluster.waitForClusterToBeReady();\n+    // create a volume and a bucket to be used by OzoneFileSystem\n+    OzoneBucket bucket = TestDataUtil.createVolumeAndBucket(cluster);\n+    volumeName = bucket.getVolumeName();\n+    bucketName = bucket.getName();\n+\n+    String rootPath = String.format(\"%s://%s.%s/\",\n+            OzoneConsts.OZONE_URI_SCHEME, bucket.getName(), bucket.getVolumeName());\n+\n+    // Set the fs.defaultFS and start the filesystem\n+    conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY, rootPath);\n+    fs = FileSystem.get(conf);", "originalCommit": "82e583b8eeb31eed140e7a07449e6fbc8de8575d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgwMDcxOQ==", "url": "https://github.com/apache/ozone/pull/824#discussion_r408800719", "bodyText": "Thanks for the comments. Uploaded the changes.", "author": "rakeshadr", "createdAt": "2020-04-15T12:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MjA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "7a296a99fe798dba1113c0854aab70ea0563732e", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\nindex 8eeb74449e..e9324e62af 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n\n@@ -68,7 +69,8 @@\n   private int rootItemCount;\n \n   @Test(timeout = 300_000)\n-  public void testCreateFileShouldCheckTheExistenceOfDirWithSameName() throws Exception {\n+  public void testCreateFileShouldCheckExistenceOfDirWithSameName()\n+          throws Exception {\n     /*\n      * Op 1. create file -> /d1/d2/d3/d4/key2\n      * Op 2. create dir -> /d1/d2/d3/d4/key2\n"}}, {"oid": "8e1e72434fb1bb76c952be2e75b2f910244d6423", "url": "https://github.com/apache/ozone/commit/8e1e72434fb1bb76c952be2e75b2f910244d6423", "message": "trigger new CI check", "committedDate": "2020-04-15T09:07:31Z", "type": "commit"}, {"oid": "7a296a99fe798dba1113c0854aab70ea0563732e", "url": "https://github.com/apache/ozone/commit/7a296a99fe798dba1113c0854aab70ea0563732e", "message": "Fixed checkstyle and review comment", "committedDate": "2020-04-15T12:18:41Z", "type": "commit"}]}