{"pr_number": 590, "pr_title": "HDDS-3049. Fix Replication factor passed in create API doesn't take effect", "pr_createdAt": "2020-02-24T07:54:13Z", "pr_url": "https://github.com/apache/ozone/pull/590", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjQ2OQ==", "url": "https://github.com/apache/ozone/pull/590#discussion_r383142469", "bodyText": "replicationFactor can now be a local variable.", "author": "adoroszlai", "createdAt": "2020-02-24T09:03:14Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java", "diffHunk": "@@ -210,10 +210,14 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key, boolean overWrite,\n+  public OzoneFSOutputStream createFile(String key, short replication, boolean overWrite,\n       boolean recursive) throws IOException {\n     incrementCounter(Statistic.OBJECTS_CREATED);\n     try {\n+      if (replication == ReplicationFactor.ONE.getValue()\n+          || replication == ReplicationFactor.THREE.getValue()) {\n+        replicationFactor = ReplicationFactor.valueOf(replication);", "originalCommit": "3c9fc7fa4ca9be5bec2d865d5f9c93d68a49cdd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MjQxMg==", "url": "https://github.com/apache/ozone/pull/590#discussion_r383262412", "bodyText": "The replicationFactor is initialized in the constructor. When user-set Replication is invalid (neither 1 nor 3), the previous default is used.", "author": "captainzmc", "createdAt": "2020-02-24T13:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3Njc3NA==", "url": "https://github.com/apache/ozone/pull/590#discussion_r383676774", "bodyText": "Please correct me, but it looks like requests with valid replication will override the default value for later invalid requests.  Let's say that the cluster has replicationFactor=3 configured and create requests with the following replication values are issued:\n\nreplication=2\nreplication=1\nreplication=2\n\nThe requests in step 1 and 3 will behave differently, since replicationFactor was changed by the request in step 2.\n(It could be argued that requests with replication=2 or other invalid value should be rejected, but that's another topic.)", "author": "adoroszlai", "createdAt": "2020-02-25T06:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NTI1Ng==", "url": "https://github.com/apache/ozone/pull/590#discussion_r383685256", "bodyText": "Yes, you're right. This is a place where it is possible to override the default replication. I'm going to add a local variable here to avoid this problem.", "author": "captainzmc", "createdAt": "2020-02-25T06:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjQ2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b2de7c2baa66b9ae9061d62138519333811062a", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\nindex dcef90e16f..84c0d5f96b 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n\n@@ -210,17 +210,24 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key, short replication, boolean overWrite,\n+  public OzoneFSOutputStream createFile(String key,\n+      short replication,\n+      boolean overWrite,\n       boolean recursive) throws IOException {\n     incrementCounter(Statistic.OBJECTS_CREATED);\n     try {\n+      OzoneOutputStream ozoneOutputStream = null;\n       if (replication == ReplicationFactor.ONE.getValue()\n           || replication == ReplicationFactor.THREE.getValue()) {\n-        replicationFactor = ReplicationFactor.valueOf(replication);\n+        ReplicationFactor clientReplication = ReplicationFactor.valueOf(replication);\n+        ozoneOutputStream = bucket\n+            .createFile(key, 0, replicationType, clientReplication, overWrite,\n+                recursive);\n+      } else {\n+        ozoneOutputStream = bucket\n+            .createFile(key, 0, replicationType, replicationFactor, overWrite,\n+                recursive);\n       }\n-      OzoneOutputStream ozoneOutputStream = bucket\n-          .createFile(key, 0, replicationType, replicationFactor, overWrite,\n-              recursive);\n       return new OzoneFSOutputStream(ozoneOutputStream.getOutputStream());\n     } catch (OMException ex) {\n       if (ex.getResult() == OMException.ResultCodes.FILE_ALREADY_EXISTS\n"}}, {"oid": "2b2de7c2baa66b9ae9061d62138519333811062a", "url": "https://github.com/apache/ozone/commit/2b2de7c2baa66b9ae9061d62138519333811062a", "message": "fix review issue", "committedDate": "2020-02-25T10:29:47Z", "type": "forcePushed"}, {"oid": "474a8cc992ea3b359e8cd27a1cf84f6cc3ca5df1", "url": "https://github.com/apache/ozone/commit/474a8cc992ea3b359e8cd27a1cf84f6cc3ca5df1", "message": "fix review issue", "committedDate": "2020-02-25T10:47:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzNzc3NQ==", "url": "https://github.com/apache/ozone/pull/590#discussion_r384337775", "bodyText": "Please try to put parameters in the same line. One line one parameter is not recommended.\nSame comment for all the following piece of code.", "author": "ChenSammi", "createdAt": "2020-02-26T08:33:34Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java", "diffHunk": "@@ -210,13 +210,33 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key, boolean overWrite,\n+  public OzoneFSOutputStream createFile(String key,\n+      short replication,", "originalCommit": "b9daf5814238935596fd5ef9673ac2a469067bd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc7be77719c602d686beb047a1dfb6b5d8ee143c", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\nindex 563ee4fe31..cbf9cc790b 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n\n@@ -210,32 +210,20 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key,\n-      short replication,\n-      boolean overWrite,\n-      boolean recursive) throws IOException {\n+  public OzoneFSOutputStream createFile(String key, short replication,\n+      boolean overWrite, boolean recursive) throws IOException {\n     incrementCounter(Statistic.OBJECTS_CREATED);\n     try {\n       OzoneOutputStream ozoneOutputStream = null;\n       if (replication == ReplicationFactor.ONE.getValue()\n           || replication == ReplicationFactor.THREE.getValue()) {\n-        ReplicationFactor clientReplication\n-            = ReplicationFactor.valueOf(replication);\n-        ozoneOutputStream = bucket.createFile(\n-            key,\n-            0,\n-            replicationType,\n-            clientReplication,\n-            overWrite,\n-            recursive);\n+        ReplicationFactor clientReplication = ReplicationFactor\n+            .valueOf(replication);\n+        ozoneOutputStream = bucket.createFile(key, 0, replicationType,\n+            clientReplication, overWrite, recursive);\n       } else {\n-        ozoneOutputStream = bucket.createFile(\n-            key,\n-            0,\n-            replicationType,\n-            replicationFactor,\n-            overWrite,\n-            recursive);\n+        ozoneOutputStream = bucket.createFile(key, 0, replicationType,\n+            replicationFactor, overWrite, recursive);\n       }\n       return new OzoneFSOutputStream(ozoneOutputStream.getOutputStream());\n     } catch (OMException ex) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzOTAzMg==", "url": "https://github.com/apache/ozone/pull/590#discussion_r384339032", "bodyText": "If the replicationFactor is 2, will the bucket create the key using system default replication here?", "author": "ChenSammi", "createdAt": "2020-02-26T08:36:14Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java", "diffHunk": "@@ -210,13 +210,33 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key, boolean overWrite,\n+  public OzoneFSOutputStream createFile(String key,\n+      short replication,\n+      boolean overWrite,\n       boolean recursive) throws IOException {\n     incrementCounter(Statistic.OBJECTS_CREATED);\n     try {\n-      OzoneOutputStream ozoneOutputStream = bucket\n-          .createFile(key, 0, replicationType, replicationFactor, overWrite,\n-              recursive);\n+      OzoneOutputStream ozoneOutputStream = null;\n+      if (replication == ReplicationFactor.ONE.getValue()\n+          || replication == ReplicationFactor.THREE.getValue()) {\n+        ReplicationFactor clientReplication\n+            = ReplicationFactor.valueOf(replication);\n+        ozoneOutputStream = bucket.createFile(\n+            key,\n+            0,\n+            replicationType,\n+            clientReplication,\n+            overWrite,\n+            recursive);\n+      } else {\n+        ozoneOutputStream = bucket.createFile(\n+            key,\n+            0,\n+            replicationType,\n+            replicationFactor,", "originalCommit": "b9daf5814238935596fd5ef9673ac2a469067bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2OTI4Mw==", "url": "https://github.com/apache/ozone/pull/590#discussion_r384869283", "bodyText": "Yes, if the replicationFactor is not 1 or 3, the default value is used.", "author": "captainzmc", "createdAt": "2020-02-27T01:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzOTAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "bc7be77719c602d686beb047a1dfb6b5d8ee143c", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\nindex 563ee4fe31..cbf9cc790b 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java\n\n@@ -210,32 +210,20 @@ protected void incrementCounter(Statistic objectsRead) {\n   }\n \n   @Override\n-  public OzoneFSOutputStream createFile(String key,\n-      short replication,\n-      boolean overWrite,\n-      boolean recursive) throws IOException {\n+  public OzoneFSOutputStream createFile(String key, short replication,\n+      boolean overWrite, boolean recursive) throws IOException {\n     incrementCounter(Statistic.OBJECTS_CREATED);\n     try {\n       OzoneOutputStream ozoneOutputStream = null;\n       if (replication == ReplicationFactor.ONE.getValue()\n           || replication == ReplicationFactor.THREE.getValue()) {\n-        ReplicationFactor clientReplication\n-            = ReplicationFactor.valueOf(replication);\n-        ozoneOutputStream = bucket.createFile(\n-            key,\n-            0,\n-            replicationType,\n-            clientReplication,\n-            overWrite,\n-            recursive);\n+        ReplicationFactor clientReplication = ReplicationFactor\n+            .valueOf(replication);\n+        ozoneOutputStream = bucket.createFile(key, 0, replicationType,\n+            clientReplication, overWrite, recursive);\n       } else {\n-        ozoneOutputStream = bucket.createFile(\n-            key,\n-            0,\n-            replicationType,\n-            replicationFactor,\n-            overWrite,\n-            recursive);\n+        ozoneOutputStream = bucket.createFile(key, 0, replicationType,\n+            replicationFactor, overWrite, recursive);\n       }\n       return new OzoneFSOutputStream(ozoneOutputStream.getOutputStream());\n     } catch (OMException ex) {\n"}}, {"oid": "bc7be77719c602d686beb047a1dfb6b5d8ee143c", "url": "https://github.com/apache/ozone/commit/bc7be77719c602d686beb047a1dfb6b5d8ee143c", "message": "Fix Replication factor passed in create API doesn't take effect", "committedDate": "2020-02-28T02:13:13Z", "type": "commit"}, {"oid": "bc7be77719c602d686beb047a1dfb6b5d8ee143c", "url": "https://github.com/apache/ozone/commit/bc7be77719c602d686beb047a1dfb6b5d8ee143c", "message": "Fix Replication factor passed in create API doesn't take effect", "committedDate": "2020-02-28T02:13:13Z", "type": "forcePushed"}, {"oid": "96eef385ddd13bdcda52e5020e10da663021755c", "url": "https://github.com/apache/ozone/commit/96eef385ddd13bdcda52e5020e10da663021755c", "message": "Fix review issue", "committedDate": "2020-03-01T06:52:42Z", "type": "commit"}, {"oid": "488dc2c4fa947aee5875a6b1d7069e20a6f55ded", "url": "https://github.com/apache/ozone/commit/488dc2c4fa947aee5875a6b1d7069e20a6f55ded", "message": "Fix IT", "committedDate": "2020-03-01T07:39:47Z", "type": "commit"}]}