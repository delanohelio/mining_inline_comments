{"pr_number": 1082, "pr_title": "HDDS-3685. Remove replay logic from actual request logic.", "pr_createdAt": "2020-06-17T00:38:59Z", "pr_url": "https://github.com/apache/ozone/pull/1082", "timeline": [{"oid": "b9e88cab16c2bd503aa80de50a21d2dc1282ecaf", "url": "https://github.com/apache/ozone/commit/b9e88cab16c2bd503aa80de50a21d2dc1282ecaf", "message": "fix s3 mpu part", "committedDate": "2020-06-17T21:45:51Z", "type": "forcePushed"}, {"oid": "79ed27bb77cd817a95c6777579acba9e453256f3", "url": "https://github.com/apache/ozone/commit/79ed27bb77cd817a95c6777579acba9e453256f3", "message": "fix test according to new updated code\"", "committedDate": "2020-06-26T17:53:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTA2OA==", "url": "https://github.com/apache/ozone/pull/1082#discussion_r453129068", "bodyText": "Should this return value be set to repeatedOmKeyInfo?", "author": "hanishakoneru", "createdAt": "2020-07-11T00:16:51Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3MultipartUploadCommitPartResponse.java", "diffHunk": "@@ -69,58 +70,32 @@\n    */\n   public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse,\n       String multipartKey, String openKey,\n-      @Nonnull OmMultipartKeyInfo omMultipartKeyInfo,\n-      @Nonnull OzoneManagerProtocolProtos.PartKeyInfo oldPartKeyInfo,\n+      @Nullable OmMultipartKeyInfo omMultipartKeyInfo,\n+      @Nullable OzoneManagerProtocolProtos.PartKeyInfo oldPartKeyInfo,\n+      @Nullable OmKeyInfo openPartKeyInfoToBeDeleted,\n       boolean isRatisEnabled) {\n     super(omResponse);\n     this.multipartKey = multipartKey;\n     this.openKey = openKey;\n     this.omMultipartKeyInfo = omMultipartKeyInfo;\n     this.oldPartKeyInfo = oldPartKeyInfo;\n-    this.isRatisEnabled = isRatisEnabled;\n-  }\n-\n-  /**\n-   * For the case when Multipart Upload does not exist (could have been\n-   * aborted).\n-   * 1. Put the partKeyInfo from openKeyTable into DeletedTable\n-   * 2. Deleted openKey from OpenKeyTable\n-   * @param omResponse\n-   * @param openKey\n-   * @param openPartKeyInfoToBeDeleted\n-   */\n-  public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse,\n-      String openKey, @Nonnull OmKeyInfo openPartKeyInfoToBeDeleted,\n-      boolean isRatisEnabled) {\n-    super(omResponse);\n-    checkStatusNotOK();\n-    this.openKey = openKey;\n     this.openPartKeyInfoToBeDeleted = openPartKeyInfoToBeDeleted;\n     this.isRatisEnabled = isRatisEnabled;\n   }\n \n-  /**\n-   * For when the request is not successful or it is a replay transaction.\n-   * For a successful request, the other constructor should be used.\n-   */\n-  public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse) {\n-    super(omResponse);\n-    checkStatusNotOK();\n-  }\n-\n   @Override\n   public void checkAndUpdateDB(OMMetadataManager omMetadataManager,\n       BatchOperation batchOperation) throws IOException {\n \n     if (getOMResponse().getStatus() == NO_SUCH_MULTIPART_UPLOAD_ERROR) {\n       // Means by the time we try to commit part, some one has aborted this\n       // multipart upload. So, delete this part information.\n+\n       RepeatedOmKeyInfo repeatedOmKeyInfo =\n           omMetadataManager.getDeletedTable().get(openKey);\n \n-      repeatedOmKeyInfo = OmUtils.prepareKeyForDelete(\n-          openPartKeyInfoToBeDeleted, repeatedOmKeyInfo,\n-          openPartKeyInfoToBeDeleted.getUpdateID(), isRatisEnabled);\n+      OmUtils.prepareKeyForDelete(openPartKeyInfoToBeDeleted,\n+          repeatedOmKeyInfo, omMultipartKeyInfo.getUpdateID(), isRatisEnabled);", "originalCommit": "e28fd63eb47fa5e5f47de14ce9befe9040cbdd53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c863ea20fe7d5e7dab7aa97bce4db6e77a0064bd", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3MultipartUploadCommitPartResponse.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3MultipartUploadCommitPartResponse.java\nindex 883ba5797..2e07faff1 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3MultipartUploadCommitPartResponse.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3MultipartUploadCommitPartResponse.java\n\n@@ -70,19 +69,45 @@\n    */\n   public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse,\n       String multipartKey, String openKey,\n-      @Nullable OmMultipartKeyInfo omMultipartKeyInfo,\n-      @Nullable OzoneManagerProtocolProtos.PartKeyInfo oldPartKeyInfo,\n-      @Nullable OmKeyInfo openPartKeyInfoToBeDeleted,\n+      @Nonnull OmMultipartKeyInfo omMultipartKeyInfo,\n+      @Nonnull OzoneManagerProtocolProtos.PartKeyInfo oldPartKeyInfo,\n       boolean isRatisEnabled) {\n     super(omResponse);\n     this.multipartKey = multipartKey;\n     this.openKey = openKey;\n     this.omMultipartKeyInfo = omMultipartKeyInfo;\n     this.oldPartKeyInfo = oldPartKeyInfo;\n+    this.isRatisEnabled = isRatisEnabled;\n+  }\n+\n+  /**\n+   * For the case when Multipart Upload does not exist (could have been\n+   * aborted).\n+   * 1. Put the partKeyInfo from openKeyTable into DeletedTable\n+   * 2. Deleted openKey from OpenKeyTable\n+   * @param omResponse\n+   * @param openKey\n+   * @param openPartKeyInfoToBeDeleted\n+   */\n+  public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse,\n+      String openKey, @Nonnull OmKeyInfo openPartKeyInfoToBeDeleted,\n+      boolean isRatisEnabled) {\n+    super(omResponse);\n+    checkStatusNotOK();\n+    this.openKey = openKey;\n     this.openPartKeyInfoToBeDeleted = openPartKeyInfoToBeDeleted;\n     this.isRatisEnabled = isRatisEnabled;\n   }\n \n+  /**\n+   * For when the request is not successful.\n+   * For a successful request, the other constructor should be used.\n+   */\n+  public S3MultipartUploadCommitPartResponse(@Nonnull OMResponse omResponse) {\n+    super(omResponse);\n+    checkStatusNotOK();\n+  }\n+\n   @Override\n   public void checkAndUpdateDB(OMMetadataManager omMetadataManager,\n       BatchOperation batchOperation) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTgxMw==", "url": "https://github.com/apache/ozone/pull/1082#discussion_r453129813", "bodyText": "Any reason for keeping this around?", "author": "hanishakoneru", "createdAt": "2020-07-11T00:21:16Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java", "diffHunk": "@@ -223,6 +223,6 @@ public String toString() {\n \n     INVALID_VOLUME_NAME,\n \n-    REPLAY // When ratis logs are replayed.\n+    REPLAY", "originalCommit": "e28fd63eb47fa5e5f47de14ce9befe9040cbdd53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwNjY0Mw==", "url": "https://github.com/apache/ozone/pull/1082#discussion_r453806643", "bodyText": "Initially, the reason was  because proto.lock file, if any breaking changes, it will fail to compile. I have removed this, as anyway HA is part of this release, and we can remove this field.\ncc @avijayanhwx", "author": "bharatviswa504", "createdAt": "2020-07-13T17:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxMTAxOA==", "url": "https://github.com/apache/ozone/pull/1082#discussion_r453811018", "bodyText": "The general guideline is breaking API changes are allowed pre-GA, but not after that.", "author": "avijayanhwx", "createdAt": "2020-07-13T17:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "c863ea20fe7d5e7dab7aa97bce4db6e77a0064bd", "chunk": "diff --git a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java\nindex 18c1dacce..1eed619dc 100644\n--- a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java\n+++ b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java\n\n@@ -222,7 +222,5 @@ public String toString() {\n     DIRECTORY_ALREADY_EXISTS,\n \n     INVALID_VOLUME_NAME,\n-\n-    REPLAY\n   }\n }\n"}}, {"oid": "c863ea20fe7d5e7dab7aa97bce4db6e77a0064bd", "url": "https://github.com/apache/ozone/commit/c863ea20fe7d5e7dab7aa97bce4db6e77a0064bd", "message": "HDDS-3685. Remove replay logic from actual request logic.", "committedDate": "2020-07-13T17:03:51Z", "type": "commit"}, {"oid": "97634af784625984d49bb1c76a42a90e9379f826", "url": "https://github.com/apache/ozone/commit/97634af784625984d49bb1c76a42a90e9379f826", "message": "fix directory request", "committedDate": "2020-07-13T17:03:51Z", "type": "commit"}, {"oid": "835521a68c1d011fafc1eaf5c46e8bddc63b8a20", "url": "https://github.com/apache/ozone/commit/835521a68c1d011fafc1eaf5c46e8bddc63b8a20", "message": "fix checkstyle.", "committedDate": "2020-07-13T17:03:51Z", "type": "commit"}, {"oid": "048bb611081fc011647068f616a037bca8c62727", "url": "https://github.com/apache/ozone/commit/048bb611081fc011647068f616a037bca8c62727", "message": "fix mpu commitpart", "committedDate": "2020-07-13T17:03:52Z", "type": "commit"}, {"oid": "aaad74ed7329b5bcbfa7af1d0f072b0e1f59a6f3", "url": "https://github.com/apache/ozone/commit/aaad74ed7329b5bcbfa7af1d0f072b0e1f59a6f3", "message": "for now add back replay, and see later how it can be removed from proto, as now it is locked, compilation fails", "committedDate": "2020-07-13T17:03:52Z", "type": "commit"}, {"oid": "43099019fe839e89d8ed7d32388946ee22ca420d", "url": "https://github.com/apache/ozone/commit/43099019fe839e89d8ed7d32388946ee22ca420d", "message": "fix checkstyle", "committedDate": "2020-07-13T17:03:52Z", "type": "commit"}, {"oid": "14a5e5bb2835ec2c3bfd713cfdf723dc18d04024", "url": "https://github.com/apache/ozone/commit/14a5e5bb2835ec2c3bfd713cfdf723dc18d04024", "message": "fix s3 mpu part", "committedDate": "2020-07-13T17:03:52Z", "type": "commit"}, {"oid": "761b38ff1e694de734ef70744ae5ce7cc7f37b45", "url": "https://github.com/apache/ozone/commit/761b38ff1e694de734ef70744ae5ce7cc7f37b45", "message": "fix test according to new updated code\"", "committedDate": "2020-07-13T17:03:52Z", "type": "commit"}, {"oid": "82eb62ef26f6d1b974c12766097d98f8d86864ec", "url": "https://github.com/apache/ozone/commit/82eb62ef26f6d1b974c12766097d98f8d86864ec", "message": "address review comments", "committedDate": "2020-07-13T17:17:33Z", "type": "commit"}, {"oid": "82eb62ef26f6d1b974c12766097d98f8d86864ec", "url": "https://github.com/apache/ozone/commit/82eb62ef26f6d1b974c12766097d98f8d86864ec", "message": "address review comments", "committedDate": "2020-07-13T17:17:33Z", "type": "forcePushed"}, {"oid": "7fba95de064d2d21e5669dcf18141d974922e442", "url": "https://github.com/apache/ozone/commit/7fba95de064d2d21e5669dcf18141d974922e442", "message": "cs:", "committedDate": "2020-07-13T17:25:27Z", "type": "commit"}, {"oid": "8ed3fc004bd96915097940c3759f23aed4c0c011", "url": "https://github.com/apache/ozone/commit/8ed3fc004bd96915097940c3759f23aed4c0c011", "message": "missed review comment", "committedDate": "2020-07-13T22:27:13Z", "type": "commit"}]}