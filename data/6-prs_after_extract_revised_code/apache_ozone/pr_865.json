{"pr_number": 865, "pr_title": "HDDS-2969. Implement ofs://: Add contract test", "pr_createdAt": "2020-04-23T19:06:30Z", "pr_url": "https://github.com/apache/ozone/pull/865", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNDM2Mw==", "url": "https://github.com/apache/ozone/pull/865#discussion_r419624363", "bodyText": "Do we need to override teardown and createConfiguration or it is just for the additional LOG?", "author": "xiaoyuyao", "createdAt": "2020-05-04T18:03:27Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractGetFileStatusTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ozone contract tests covering getFileStatus.\n+ */\n+public class ITestRootedOzoneContractGetFileStatus\n+    extends AbstractContractGetFileStatusTest {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ITestRootedOzoneContractGetFileStatus.class);\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void teardown() throws Exception {", "originalCommit": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzNzU5MA==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420137590", "bodyText": "Copied from o3fs contract test. I believe it is just for the log.\nWill remove this.", "author": "smengcl", "createdAt": "2020-05-05T14:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNDM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3431ee262b49b81dd89b752a523c0c54d24d1553", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java\nindex 68aeda9c8..c858b35ac 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java\n\n@@ -26,8 +26,6 @@\n \n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * Ozone contract tests covering getFileStatus.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg==", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625302", "bodyText": "listEmptyRoot should be OK for OFS?", "author": "xiaoyuyao", "createdAt": "2020-05-04T18:05:00Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "originalCommit": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MDg0NQ==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420140845", "bodyText": "It fails because the test tries to delete dirs(volumes) at root:\n  @Test\n  public void testListEmptyRootDirectory() throws IOException {\n    skipIfUnsupported(TEST_ROOT_TESTS_ENABLED);\n    FileSystem fs = getFileSystem();\n    Path root = new Path(\"/\");\n    FileStatus[] statuses = fs.listStatus(root);\n    for (FileStatus status : statuses) {\n      ContractTestUtils.assertDeleted(fs, status.getPath(), true);\n    }\n  public static void assertDeleted(FileSystem fs,\n      Path file,\n      boolean recursive,\n      boolean allowRootOperations) throws IOException {\n    rejectRootOperation(file, allowRootOperations);\n    assertPathExists(fs, \"about to be deleted file\", file);\n    boolean deleted = fs.delete(file, recursive);", "author": "smengcl", "createdAt": "2020-05-05T14:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTQ4Nw==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420335487", "bodyText": "are you seeing the root is not empty even though the test claim to list empty root dir?", "author": "xiaoyuyao", "createdAt": "2020-05-05T18:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3ODM3NA==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420378374", "bodyText": "Yes. I see testvol1, which is specified in RootedOzoneContract#getTestPath.", "author": "smengcl", "createdAt": "2020-05-05T20:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}], "type": "inlineReview", "revised_code": {"commit": "3431ee262b49b81dd89b752a523c0c54d24d1553", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\nindex b50f2d3f5..00bb528c4 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\n\n@@ -39,7 +39,7 @@ public static void createCluster() throws IOException {\n   }\n \n   @AfterClass\n-  public static void teardownCluster() throws IOException {\n+  public static void teardownCluster() {\n     RootedOzoneContract.destroyCluster();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw==", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625577", "bodyText": "mkdirDepth1 should be OK for admin? Can we add some configuration to allow this?", "author": "xiaoyuyao", "createdAt": "2020-05-04T18:05:27Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "originalCommit": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MTg3NQ==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420141875", "bodyText": "It failed during clean up (assertDeleted):\n  @Test\n  public void testMkDirDepth1() throws Throwable {\n    FileSystem fs = getFileSystem();\n    Path dir = new Path(\"/testmkdirdepth1\");\n    assertPathDoesNotExist(\"directory already exists\", dir);\n    fs.mkdirs(dir);\n    assertIsDirectory(dir);\n    assertPathExists(\"directory already exists\", dir);\n    assertDeleted(dir, true);\n  }", "author": "smengcl", "createdAt": "2020-05-05T14:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTk5MA==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420335990", "bodyText": "this should be like create and delete an empty volume? why do we fail here?", "author": "xiaoyuyao", "createdAt": "2020-05-05T18:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3ODkyNw==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420378927", "bodyText": "Because OFS doesn't support deleting volumes (or buckets) at the moment. Even if they are empty.", "author": "smengcl", "createdAt": "2020-05-05T20:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3431ee262b49b81dd89b752a523c0c54d24d1553", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\nindex b50f2d3f5..00bb528c4 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java\n\n@@ -39,7 +39,7 @@ public static void createCluster() throws IOException {\n   }\n \n   @AfterClass\n-  public static void teardownCluster() throws IOException {\n+  public static void teardownCluster() {\n     RootedOzoneContract.destroyCluster();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODYxNg==", "url": "https://github.com/apache/ozone/pull/865#discussion_r419628616", "bodyText": "Is it possible to add contract test in the context of HA setup as well as the non-HA?", "author": "xiaoyuyao", "createdAt": "2020-05-04T18:10:30Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+import org.apache.hadoop.hdds.conf.DatanodeRatisServerConfig;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.ratis.RatisHelper;\n+import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.om.OMConfigKeys;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * The contract of Rooted Ozone FileSystem (OFS).\n+ */\n+class RootedOzoneContract extends AbstractFSContract {\n+\n+  private static MiniOzoneCluster cluster;\n+  private static final String CONTRACT_XML = \"contract/ozone.xml\";\n+\n+  RootedOzoneContract(Configuration conf) {\n+    super(conf);\n+    //insert the base features\n+    addConfResource(CONTRACT_XML);\n+  }\n+\n+  @Override\n+  public String getScheme() {\n+    return OzoneConsts.OZONE_OFS_URI_SCHEME;\n+  }\n+\n+  @Override\n+  public Path getTestPath() {\n+    return new Path(\"/testvol1/testbucket1/test\");\n+  }\n+\n+  public static void createCluster() throws IOException {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.RATIS_SERVER_REQUEST_TIMEOUT_KEY,\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.\n+                            RATIS_SERVER_WATCH_REQUEST_TIMEOUT_KEY,\n+            10, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"rpc.request.timeout\",\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"watch.request.timeout\",\n+            10, TimeUnit.SECONDS);\n+    conf.addResource(CONTRACT_XML);\n+\n+    cluster = MiniOzoneCluster.newBuilder(conf).setNumDatanodes(5).build();", "originalCommit": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MzA0Nw==", "url": "https://github.com/apache/ozone/pull/865#discussion_r420143047", "bodyText": "I think we need another set of classes to do this but initialize with MiniOzoneHAClusterImpl instead.", "author": "smengcl", "createdAt": "2020-05-05T14:15:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "3431ee262b49b81dd89b752a523c0c54d24d1553", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java\nindex 5c585cd3f..c2833f533 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java\n\n@@ -46,7 +46,7 @@\n \n   RootedOzoneContract(Configuration conf) {\n     super(conf);\n-    //insert the base features\n+    // insert the base features\n     addConfResource(CONTRACT_XML);\n   }\n \n"}}, {"oid": "3431ee262b49b81dd89b752a523c0c54d24d1553", "url": "https://github.com/apache/ozone/commit/3431ee262b49b81dd89b752a523c0c54d24d1553", "message": "Clean up code.", "committedDate": "2020-05-05T14:39:57Z", "type": "forcePushed"}, {"oid": "c3bbd7f90f246557768a1cec5e32294da30f1f59", "url": "https://github.com/apache/ozone/commit/c3bbd7f90f246557768a1cec5e32294da30f1f59", "message": "Copy.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "bb478c034eebb5c51826a277737190fdda5a2d28", "url": "https://github.com/apache/ozone/commit/bb478c034eebb5c51826a277737190fdda5a2d28", "message": "Rename.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "07889dc8f04fc44a51b9f2a195e271eb7e5b0aeb", "url": "https://github.com/apache/ozone/commit/07889dc8f04fc44a51b9f2a195e271eb7e5b0aeb", "message": "Change scheme to OFS. Most tests pass. DistCp and RootDir has failures.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "93208191910a8bcbd2d196a054348f240d338100", "url": "https://github.com/apache/ozone/commit/93208191910a8bcbd2d196a054348f240d338100", "message": "Handle DistCp /NONE path. DistCp contract passes.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "a4c6246f117fb36f7132b5db2949be8d864eba38", "url": "https://github.com/apache/ozone/commit/a4c6246f117fb36f7132b5db2949be8d864eba38", "message": "getFileStatus should throw FileNotFoundException for VOLUME_NOT_FOUND or BUCKET_NOT_FOUND as well.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "22b3c898b01bc9b1a595a17849b6429be5edd926", "url": "https://github.com/apache/ozone/commit/22b3c898b01bc9b1a595a17849b6429be5edd926", "message": "Disabled unsupported tests in RootDir contract since OFS doesn't support rm volumes.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "43157128b9e67682cec70838dff8e5d3fa48c080", "url": "https://github.com/apache/ozone/commit/43157128b9e67682cec70838dff8e5d3fa48c080", "message": "Retest for flaky tests.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "6db0f90f09d6bd4a9eb9e1c0eee92a3098a4aa82", "url": "https://github.com/apache/ozone/commit/6db0f90f09d6bd4a9eb9e1c0eee92a3098a4aa82", "message": "Retest 2", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "6db95b9ae4350659d0dcd83aa8fcf1fd471866e6", "url": "https://github.com/apache/ozone/commit/6db95b9ae4350659d0dcd83aa8fcf1fd471866e6", "message": "Retest 3", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "url": "https://github.com/apache/ozone/commit/2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "message": "Clean up code.", "committedDate": "2020-05-18T17:10:46Z", "type": "commit"}, {"oid": "2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "url": "https://github.com/apache/ozone/commit/2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "message": "Clean up code.", "committedDate": "2020-05-18T17:10:46Z", "type": "forcePushed"}, {"oid": "9d016e6f7b0b6ed2079a9f7376c602f45d213d3e", "url": "https://github.com/apache/ozone/commit/9d016e6f7b0b6ed2079a9f7376c602f45d213d3e", "message": "Enable testRmEmptyRootDirNonRecursive, testListEmptyRootDirectory and testMkDirDepth1 after rebase.", "committedDate": "2020-05-18T17:15:49Z", "type": "commit"}]}