{"pr_number": 584, "pr_title": "HDDS-3054. OzoneFileStatus#getModificationTime should return actual directory modification time when its OmKeyInfo is available", "pr_createdAt": "2020-02-22T07:47:00Z", "pr_url": "https://github.com/apache/ozone/pull/584", "timeline": [{"oid": "9d3cc629dbcde552b53f414a4c4b6c44bc61b84b", "url": "https://github.com/apache/ozone/commit/9d3cc629dbcde552b53f414a4c4b6c44bc61b84b", "message": "getModificationTime: Only return current time for directory when `super.getModificationTime` return 0 (implies client actually doesn't get this info from OM).", "committedDate": "2020-02-22T07:05:36Z", "type": "commit"}, {"oid": "ed8d758a016b97e85dad488b82c1b026a2fccc69", "url": "https://github.com/apache/ozone/commit/ed8d758a016b97e85dad488b82c1b026a2fccc69", "message": "KeyManagerImpl#listStatus: if the dir OmKeyInfo exists, use it.", "committedDate": "2020-02-22T07:43:18Z", "type": "commit"}, {"oid": "9d18281e31e2ffa1c03db5229bdd54c8fdbebd22", "url": "https://github.com/apache/ozone/commit/9d18281e31e2ffa1c03db5229bdd54c8fdbebd22", "message": "(Forced to) Refactor KeyManagerImpl#listStatusFindKeyInTableCache a bit due to checkstyle method 150 lines length limit exceeded.", "committedDate": "2020-02-22T08:03:36Z", "type": "commit"}, {"oid": "cac75a3078d58467731c524b77e3ff1cfe337198", "url": "https://github.com/apache/ozone/commit/cac75a3078d58467731c524b77e3ff1cfe337198", "message": "Retrigger test. TestRDBStore#testRocksDBKeyMayExistApi passed on my forked repo's run: https://github.com/smengcl/hadoop-ozone/runs/461774268", "committedDate": "2020-02-22T08:17:42Z", "type": "commit"}, {"oid": "22d58b4f336da0c5a5b8796c77d084d6eed140eb", "url": "https://github.com/apache/ozone/commit/22d58b4f336da0c5a5b8796c77d084d6eed140eb", "message": "Fix existing test TestOzoneFileInterfaces#testOzoneManagerFileSystemInterface.", "committedDate": "2020-02-22T09:09:03Z", "type": "commit"}, {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d", "url": "https://github.com/apache/ozone/commit/e7d88eeba5f5a95e38bec2541216fd8f9bbf057d", "message": "Add unit test testGetDirectoryModificationTime.", "committedDate": "2020-02-22T09:10:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzNzgwMg==", "url": "https://github.com/apache/ozone/pull/584#discussion_r383537802", "bodyText": "Can we add a small sleep (maybe 100-200 ms) between each check.", "author": "hanishakoneru", "createdAt": "2020-02-24T21:54:42Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -354,4 +356,45 @@ private OzoneKeyDetails getKey(Path keyPath, boolean isDirectory)\n   private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n+\n+  private void testGetDirectoryModificationTime() throws IOException {\n+    Path mdir1 = new Path(\"/mdir1\");\n+    Path mdir11 = new Path(mdir1, \"mdir11\");\n+    Path mdir111 = new Path(mdir11, \"mdir111\");\n+    fs.mkdirs(mdir111);\n+    rootItemCount++; // mdir1\n+\n+    // Case 1: Dir key exist on server\n+    FileStatus[] fileStatuses = o3fs.listStatus(mdir11);\n+    // Above listStatus result should only have one entry: mdir111\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir111.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // The dir key is actually created on server,\n+    // so modification time should always be the same value.\n+    long modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should always be the same\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir11);\n+      assertEquals(modificationTime, fileStatuses[0].getModificationTime());", "originalCommit": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNjcwNw==", "url": "https://github.com/apache/ozone/pull/584#discussion_r384706707", "bodyText": "I'll add a small(10ms) sleep in the loop.", "author": "smengcl", "createdAt": "2020-02-26T19:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzNzgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "1c9dea7edaf1eb435a98126e1fc874f3ffd6e963", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\nindex 91d864856..062c249ca 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n\n@@ -376,6 +376,7 @@ private void testGetDirectoryModificationTime() throws IOException {\n     long modificationTime = fileStatuses[0].getModificationTime();\n     // Check modification time in a small loop, it should always be the same\n     for (int i = 0; i < 5; i++) {\n+      Thread.sleep(10);\n       fileStatuses = o3fs.listStatus(mdir11);\n       assertEquals(modificationTime, fileStatuses[0].getModificationTime());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzODI0Ng==", "url": "https://github.com/apache/ozone/pull/584#discussion_r383538246", "bodyText": "Let's add a sleep here too.", "author": "hanishakoneru", "createdAt": "2020-02-24T21:55:36Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -354,4 +356,45 @@ private OzoneKeyDetails getKey(Path keyPath, boolean isDirectory)\n   private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n+\n+  private void testGetDirectoryModificationTime() throws IOException {\n+    Path mdir1 = new Path(\"/mdir1\");\n+    Path mdir11 = new Path(mdir1, \"mdir11\");\n+    Path mdir111 = new Path(mdir11, \"mdir111\");\n+    fs.mkdirs(mdir111);\n+    rootItemCount++; // mdir1\n+\n+    // Case 1: Dir key exist on server\n+    FileStatus[] fileStatuses = o3fs.listStatus(mdir11);\n+    // Above listStatus result should only have one entry: mdir111\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir111.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // The dir key is actually created on server,\n+    // so modification time should always be the same value.\n+    long modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should always be the same\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir11);\n+      assertEquals(modificationTime, fileStatuses[0].getModificationTime());\n+    }\n+\n+    // Case 2: Dir key doesn't exist on server\n+    fileStatuses = o3fs.listStatus(mdir1);\n+    // Above listStatus result should only have one entry: mdir11\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir11.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // Since the dir key doesn't exist on server, the modification time is\n+    // set to current time upon every listStatus request.\n+    modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should be slightly larger\n+    // each time\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir1);\n+      assertTrue(modificationTime <= fileStatuses[0].getModificationTime());", "originalCommit": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c9dea7edaf1eb435a98126e1fc874f3ffd6e963", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\nindex 91d864856..062c249ca 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java\n\n@@ -376,6 +376,7 @@ private void testGetDirectoryModificationTime() throws IOException {\n     long modificationTime = fileStatuses[0].getModificationTime();\n     // Check modification time in a small loop, it should always be the same\n     for (int i = 0; i < 5; i++) {\n+      Thread.sleep(10);\n       fileStatuses = o3fs.listStatus(mdir11);\n       assertEquals(modificationTime, fileStatuses[0].getModificationTime());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA==", "url": "https://github.com/apache/ozone/pull/584#discussion_r384034908", "bodyText": "Could you please explain this change.", "author": "hanishakoneru", "createdAt": "2020-02-25T18:10:24Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2005,15 +2016,21 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n               if (isFile) {\n                 if (!deletedKeySet.contains(entryInDb)) {\n                   cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(value, scmBlockSize, !isFile));\n+                      new OzoneFileStatus(omKeyInfo, scmBlockSize, !isFile));\n                   countEntries++;\n                 }\n                 iterator.next();\n               } else {\n                 // if entry is a directory\n                 if (!deletedKeySet.contains(entryInDb)) {\n-                  cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(immediateChild));\n+                  if (!entryKeyName.equals(immediateChild)) {\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(immediateChild));\n+                  } else {\n+                    // If entryKeyName matches dir name, we have the info\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(omKeyInfo, 0, true));", "originalCommit": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzI5OA==", "url": "https://github.com/apache/ozone/pull/584#discussion_r384707298", "bodyText": "Could you please explain this change.\n\nentryKeyName is retrieved from a DB entry (actually exists), while immediateChild is generated using the information of parent dir and a key in it:\nString immediateChild = OzoneFSUtils.getImmediateChild(entryKeyName, keyName);\nAs seen in getImmediateChild()'s javadoc:\n  /**\n   * The function returns immediate child of given ancestor in a particular\n   * descendant. For example if ancestor is /a/b and descendant is /a/b/c/d/e\n   * the function should return /a/b/c/. If the descendant itself is the\n   * immediate child then it is returned as is without adding a trailing slash.\n   * This is done to distinguish files from a directory as in ozone files do\n   * not carry a trailing slash.\n   */\n  public static String getImmediateChild(String descendant, String ancestor) {\nTherefore, when the dir key actually exists (case 1 in my unit test), entryKeyName will be an actual dir key. In this case, immediateChild equals entryKeyName. Hence my logic here.", "author": "smengcl", "createdAt": "2020-02-26T19:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzNTA0MQ==", "url": "https://github.com/apache/ozone/pull/584#discussion_r385935041", "bodyText": "Thanks for explaining Siyao.", "author": "hanishakoneru", "createdAt": "2020-02-28T21:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1c9dea7edaf1eb435a98126e1fc874f3ffd6e963", "url": "https://github.com/apache/ozone/commit/1c9dea7edaf1eb435a98126e1fc874f3ffd6e963", "message": "Add 10ms sleep in check loop.", "committedDate": "2020-02-27T00:55:01Z", "type": "commit"}, {"oid": "acf5312093c1d1766c99c8a5d1922c43f6c85d77", "url": "https://github.com/apache/ozone/commit/acf5312093c1d1766c99c8a5d1922c43f6c85d77", "message": "Throw InterruptedException in test to make compiler happy.", "committedDate": "2020-02-27T01:43:28Z", "type": "commit"}]}