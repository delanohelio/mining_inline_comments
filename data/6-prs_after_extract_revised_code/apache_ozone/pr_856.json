{"pr_number": 856, "pr_title": "HDDS-3475. Use transactionInfo table to persist transaction information.", "pr_createdAt": "2020-04-21T23:25:16Z", "pr_url": "https://github.com/apache/ozone/pull/856", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMDE4NA==", "url": "https://github.com/apache/ozone/pull/856#discussion_r418300184", "bodyText": "For this constructor, termGet will be null. But a daemon is initialized to flushTransactions. Could it lead to NullPointer?", "author": "hanishakoneru", "createdAt": "2020-04-30T21:29:42Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -86,10 +89,10 @@\n \n   private final boolean isRatisEnabled;\n \n-  public OzoneManagerDoubleBuffer(OMMetadataManager omMetadataManager,\n-      OzoneManagerRatisSnapshot ozoneManagerRatisSnapShot) {\n-    this(omMetadataManager, ozoneManagerRatisSnapShot, true);\n-  }\n+  /**\n+   * function which will get term associated with the transaction index.\n+   */\n+  private Function<Long, Long> termGet = null;\n \n   public OzoneManagerDoubleBuffer(OMMetadataManager omMetadataManager,\n       OzoneManagerRatisSnapshot ozoneManagerRatisSnapShot,", "originalCommit": "e3c28d2c66bcac8e8db21697de3fc3ae13706dcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjA5NQ==", "url": "https://github.com/apache/ozone/pull/856#discussion_r423266095", "bodyText": "This constructor is removed, as now we use Builder. And also for non-HA this termGet is not used, so we don't need this to be set. So, skipped setting this in OzoneManagerProtocolServerSideTranslatorPB. (Previously this constructor used to be called from this class)", "author": "bharatviswa504", "createdAt": "2020-05-11T19:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMDE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "cf5732846aa05b6b097cdecd122515955422782b", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\nindex 0b0c0d2c68..ff06772916 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n\n@@ -88,20 +92,66 @@\n   private final OzoneManagerRatisSnapshot ozoneManagerRatisSnapShot;\n \n   private final boolean isRatisEnabled;\n+  private final boolean isTracingEnabled;\n \n   /**\n    * function which will get term associated with the transaction index.\n    */\n-  private Function<Long, Long> termGet = null;\n+  private Function<Long, Long> indexToTerm;\n \n-  public OzoneManagerDoubleBuffer(OMMetadataManager omMetadataManager,\n+\n+\n+  /**\n+   *  Builder for creating OzoneManagerDoubleBuffer.\n+   */\n+  public static class Builder {\n+    private OMMetadataManager mm;\n+    private OzoneManagerRatisSnapshot rs;\n+    private boolean isRatisEnabled = false;\n+    private boolean isTracingEnabled = false;\n+    private Function<Long, Long> indexToTerm = null;\n+\n+    public Builder setOmMetadataManager(OMMetadataManager omm) {\n+      this.mm = omm;\n+      return this;\n+    }\n+\n+    public Builder setOzoneManagerRatisSnapShot(\n+        OzoneManagerRatisSnapshot omrs) {\n+      this.rs = omrs;\n+      return this;\n+    }\n+\n+    public Builder enableRatis(boolean enableRatis) {\n+      this.isRatisEnabled = enableRatis;\n+      return this;\n+    }\n+\n+    public Builder enableTracing(boolean enableTracing) {\n+      this.isTracingEnabled = enableTracing;\n+      return this;\n+    }\n+\n+    public Builder setIndexToTerm(Function<Long, Long> termGet) {\n+      this.indexToTerm = termGet;\n+      return this;\n+    }\n+\n+    public OzoneManagerDoubleBuffer build() {\n+      return new OzoneManagerDoubleBuffer(mm, rs, isRatisEnabled,\n+          isTracingEnabled, indexToTerm);\n+    }\n+  }\n+\n+  private OzoneManagerDoubleBuffer(OMMetadataManager omMetadataManager,\n       OzoneManagerRatisSnapshot ozoneManagerRatisSnapShot,\n-      boolean isRatisEnabled) {\n+      boolean isRatisEnabled, boolean isTracingEnabled,\n+      Function<Long, Long> indexToTerm) {\n     this.currentBuffer = new ConcurrentLinkedQueue<>();\n     this.readyBuffer = new ConcurrentLinkedQueue<>();\n \n     this.isRatisEnabled = isRatisEnabled;\n-\n+    this.isTracingEnabled = isTracingEnabled;\n     if (!isRatisEnabled) {\n       this.currentFutureQueue = new ConcurrentLinkedQueue<>();\n       this.readyFutureQueue = new ConcurrentLinkedQueue<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNDI5Ng==", "url": "https://github.com/apache/ozone/pull/856#discussion_r418304296", "bodyText": "Sorry this comment is not clear. Do you mean sorted Transaction list is not required here?", "author": "hanishakoneru", "createdAt": "2020-04-30T21:38:55Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -173,17 +196,19 @@ private void flushTransactions() {\n                 flushedTransactionsSize);\n           }\n \n-          long lastRatisTransactionIndex =\n-              readyBuffer.stream().map(DoubleBufferEntry::getTrxLogIndex)\n-                  .max(Long::compareTo).get();\n-\n-          List<Long> flushedEpochs =\n-              readyBuffer.stream().map(DoubleBufferEntry::getTrxLogIndex)\n-                  .sorted().collect(Collectors.toList());\n+          // When non-HA do this step here, as the sorted is not require in\n+          // flush to DB. As in non-HA We want to complete futures as quick\n+          // as possible after flush to DB, to release rpc handler threads.\n+          if (!isRatisEnabled) {", "originalCommit": "e3c28d2c66bcac8e8db21697de3fc3ae13706dcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjU0Ng==", "url": "https://github.com/apache/ozone/pull/856#discussion_r423266546", "bodyText": "Yes, at this point in time we don't require the list to be sorted for non-HA, the sorted list is required for cleanupCache only, so delaying this. The reason for this already explained in the comment.", "author": "bharatviswa504", "createdAt": "2020-05-11T19:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNDI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDczMw==", "url": "https://github.com/apache/ozone/pull/856#discussion_r432070733", "bodyText": "Time for this sorting should be inconsequential. The readyBuffer would have 10s of transactions at max.\nDo we really need to separate it for HA and non-HA?\nNIT: Can you please fix the typo require -> required and capital W in We.", "author": "hanishakoneru", "createdAt": "2020-05-28T19:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNDI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNjUxMQ==", "url": "https://github.com/apache/ozone/pull/856#discussion_r432116511", "bodyText": "Some time, we see this list grow up to 100-300. And for non-HA, all rpc handlers are blocked on flush futures, intention here is does not want to spend time on unnecessary operations and make the flush futures complete and unblock rpc handlers. (Even if it is some fraction of time)", "author": "bharatviswa504", "createdAt": "2020-05-28T20:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNDI5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cf5732846aa05b6b097cdecd122515955422782b", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\nindex 0b0c0d2c68..ff06772916 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n\n@@ -196,16 +299,17 @@ private void flushTransactions() {\n                 flushedTransactionsSize);\n           }\n \n-          // When non-HA do this step here, as the sorted is not require in\n-          // flush to DB. As in non-HA We want to complete futures as quick\n-          // as possible after flush to DB, to release rpc handler threads.\n+          // When non-HA do the sort step here, as the sorted list is not\n+          // require for flush to DB. As in non-HA We want to complete\n+          // futures as quick as possible after flush to DB, to release rpc\n+          // handler threads.\n           if (!isRatisEnabled) {\n             flushedEpochs =\n                 readyBuffer.stream().map(DoubleBufferEntry::getTrxLogIndex)\n                     .sorted().collect(Collectors.toList());\n           }\n \n-          // Clean up cache\n+\n           cleanupCache(flushedEpochs);\n \n           // Clean up committed transactions.\n"}}, {"oid": "cf5732846aa05b6b097cdecd122515955422782b", "url": "https://github.com/apache/ozone/commit/cf5732846aa05b6b097cdecd122515955422782b", "message": "HDDS-3475. Use transactionInfo table to persist transaction information to OM DB.", "committedDate": "2020-05-11T19:06:46Z", "type": "forcePushed"}, {"oid": "746a4453f0f3ca78637bc1fd4c4d0b9d6d8db79b", "url": "https://github.com/apache/ozone/commit/746a4453f0f3ca78637bc1fd4c4d0b9d6d8db79b", "message": "fix tests and few more changes", "committedDate": "2020-05-11T21:19:20Z", "type": "forcePushed"}, {"oid": "5f3d6cedeaec577b5280baefd1082c489df27dd9", "url": "https://github.com/apache/ozone/commit/5f3d6cedeaec577b5280baefd1082c489df27dd9", "message": "HDDS-3475. Use transactionInfo table to persist transaction information.", "committedDate": "2020-05-22T18:07:49Z", "type": "commit"}, {"oid": "c1d29fdab73c3274e37b2322bb1eb402ea7a29b0", "url": "https://github.com/apache/ozone/commit/c1d29fdab73c3274e37b2322bb1eb402ea7a29b0", "message": "HDDS-3475. Use transactionInfo table to persist transaction information to OM DB.", "committedDate": "2020-05-20T17:54:09Z", "type": "forcePushed"}, {"oid": "5f3d6cedeaec577b5280baefd1082c489df27dd9", "url": "https://github.com/apache/ozone/commit/5f3d6cedeaec577b5280baefd1082c489df27dd9", "message": "HDDS-3475. Use transactionInfo table to persist transaction information.", "committedDate": "2020-05-22T18:07:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1ODEyNA==", "url": "https://github.com/apache/ozone/pull/856#discussion_r432058124", "bodyText": "Checking indexToTerm not null instead of omRatisSnapshot", "author": "hanishakoneru", "createdAt": "2020-05-28T19:06:41Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -121,15 +133,27 @@ public Builder enableTracing(boolean enableTracing) {\n       return this;\n     }\n \n+    public Builder setIndexToTerm(Function<Long, Long> termGet) {\n+      this.indexToTerm = termGet;\n+      return this;\n+    }\n+\n     public OzoneManagerDoubleBuffer build() {\n+      if (isRatisEnabled) {\n+        Preconditions.checkNotNull(indexToTerm, \"When ratis is enabled, \" +\n+                \"OzoneManagerRatisSnapshot should not be null\");", "originalCommit": "5f3d6cedeaec577b5280baefd1082c489df27dd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExOTAxNA==", "url": "https://github.com/apache/ozone/pull/856#discussion_r432119014", "bodyText": "Done", "author": "bharatviswa504", "createdAt": "2020-05-28T20:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1ODEyNA=="}], "type": "inlineReview", "revised_code": {"commit": "4e82c0738b27c306c68df3ce3ae38b5fc8c96cf0", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\nindex 92db8311fc..6c25af5bb5 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n\n@@ -140,7 +140,7 @@ public Builder setIndexToTerm(Function<Long, Long> termGet) {\n \n     public OzoneManagerDoubleBuffer build() {\n       if (isRatisEnabled) {\n-        Preconditions.checkNotNull(indexToTerm, \"When ratis is enabled, \" +\n+        Preconditions.checkNotNull(rs, \"When ratis is enabled, \" +\n                 \"OzoneManagerRatisSnapshot should not be null\");\n         Preconditions.checkNotNull(indexToTerm, \"When ratis is enabled \" +\n             \"indexToTerm should not be null\");\n"}}, {"oid": "4e82c0738b27c306c68df3ce3ae38b5fc8c96cf0", "url": "https://github.com/apache/ozone/commit/4e82c0738b27c306c68df3ce3ae38b5fc8c96cf0", "message": "fix review comments", "committedDate": "2020-05-28T20:56:38Z", "type": "commit"}]}