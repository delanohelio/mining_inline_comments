{"pr_number": 1497, "pr_title": "HDDS-4345. Replace the deprecated Lock method", "pr_createdAt": "2020-10-14T11:35:26Z", "pr_url": "https://github.com/apache/ozone/pull/1497", "timeline": [{"oid": "518bcb9a36cb9da9e1a3110a5d272d61d8453fee", "url": "https://github.com/apache/ozone/commit/518bcb9a36cb9da9e1a3110a5d272d61d8453fee", "message": "fix an expired lock method", "committedDate": "2020-10-14T09:49:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTE0MQ==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r511191141", "bodyText": "Should we use acquireReadLock here?", "author": "xiaoyuyao", "createdAt": "2020-10-23T23:05:49Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -232,7 +232,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String prefixPath = ozObject.getPath();\n-    metadataManager.getLock().acquireLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);", "originalCommit": "518bcb9a36cb9da9e1a3110a5d272d61d8453fee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\nindex 0588f64c5c..7669233447 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\n\n@@ -232,7 +232,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String prefixPath = ozObject.getPath();\n-    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireReadLock(PREFIX_LOCK, prefixPath);\n     try {\n       String longestPrefix = prefixTree.getLongestPrefix(prefixPath);\n       if (prefixPath.equals(longestPrefix)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTIyNQ==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r511191225", "bodyText": "Same as above.", "author": "xiaoyuyao", "createdAt": "2020-10-23T23:06:07Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -253,18 +253,18 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n         return true;\n       }\n     } finally {\n-      metadataManager.getLock().releaseLock(PREFIX_LOCK, prefixPath);\n+      metadataManager.getLock().releaseWriteLock(PREFIX_LOCK, prefixPath);\n     }\n   }\n \n   @Override\n   public List<OmPrefixInfo> getLongestPrefixPath(String path) {\n     String prefixPath = prefixTree.getLongestPrefix(path);\n-    metadataManager.getLock().acquireLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);", "originalCommit": "518bcb9a36cb9da9e1a3110a5d272d61d8453fee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\nindex 0588f64c5c..7669233447 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java\n\n@@ -253,18 +253,18 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n         return true;\n       }\n     } finally {\n-      metadataManager.getLock().releaseWriteLock(PREFIX_LOCK, prefixPath);\n+      metadataManager.getLock().releaseReadLock(PREFIX_LOCK, prefixPath);\n     }\n   }\n \n   @Override\n   public List<OmPrefixInfo> getLongestPrefixPath(String path) {\n     String prefixPath = prefixTree.getLongestPrefix(path);\n-    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireReadLock(PREFIX_LOCK, prefixPath);\n     try {\n       return getLongestPrefixPathHelper(prefixPath);\n     } finally {\n-      metadataManager.getLock().releaseWriteLock(PREFIX_LOCK, prefixPath);\n+      metadataManager.getLock().releaseReadLock(PREFIX_LOCK, prefixPath);\n     }\n   }\n \n"}}, {"oid": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "url": "https://github.com/apache/ozone/commit/4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "message": "fix review issues.", "committedDate": "2020-10-26T06:54:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyMzUxMA==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r512223510", "bodyText": "This should be a ReadLock", "author": "xiaoyuyao", "createdAt": "2020-10-26T19:44:02Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "diffHunk": "@@ -620,7 +620,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String volume = ozObject.getVolumeName();\n-    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);\n+    metadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);", "originalCommit": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51f1790769304142d2b48e4bf4f3b8313c8c478e", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\nindex 7d9263e9c9..19b2945e4d 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\n\n@@ -620,7 +620,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String volume = ozObject.getVolumeName();\n-    metadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);\n+    metadataManager.getLock().acquireReadLock(VOLUME_LOCK, volume);\n     try {\n       String dbVolumeKey = metadataManager.getVolumeKey(volume);\n       OmVolumeArgs volumeArgs =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyMzYwNA==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r512223604", "bodyText": "This should be a ReadLock", "author": "xiaoyuyao", "createdAt": "2020-10-26T19:44:09Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "diffHunk": "@@ -647,7 +647,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n       throw new OMException(\"Check access operation failed for \" +\n           \"volume:\" + volume, ex, ResultCodes.INTERNAL_ERROR);\n     } finally {\n-      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);\n+      metadataManager.getLock().releaseWriteLock(VOLUME_LOCK, volume);", "originalCommit": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51f1790769304142d2b48e4bf4f3b8313c8c478e", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\nindex 7d9263e9c9..19b2945e4d 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java\n\n@@ -647,7 +647,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n       throw new OMException(\"Check access operation failed for \" +\n           \"volume:\" + volume, ex, ResultCodes.INTERNAL_ERROR);\n     } finally {\n-      metadataManager.getLock().releaseWriteLock(VOLUME_LOCK, volume);\n+      metadataManager.getLock().releaseReadLock(VOLUME_LOCK, volume);\n     }\n   }\n }\n"}}, {"oid": "51f1790769304142d2b48e4bf4f3b8313c8c478e", "url": "https://github.com/apache/ozone/commit/51f1790769304142d2b48e4bf4f3b8313c8c478e", "message": "Fix review issues.", "committedDate": "2020-10-27T02:51:22Z", "type": "commit"}, {"oid": "3e4807f862c58ce516e22dab491f1aaebd71b8ce", "url": "https://github.com/apache/ozone/commit/3e4807f862c58ce516e22dab491f1aaebd71b8ce", "message": "trigger CI", "committedDate": "2020-10-27T06:45:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1NDA0Mg==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r513654042", "bodyText": "This should be a WriteLock.", "author": "xiaoyuyao", "createdAt": "2020-10-28T18:00:50Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java", "diffHunk": "@@ -61,7 +61,7 @@ public S3SecretValue getS3Secret(String kerberosID) throws IOException {\n     Preconditions.checkArgument(Strings.isNotBlank(kerberosID),\n         \"kerberosID cannot be null or empty.\");\n     S3SecretValue result = null;\n-    omMetadataManager.getLock().acquireWriteLock(S3_SECRET_LOCK, kerberosID);\n+    omMetadataManager.getLock().acquireReadLock(S3_SECRET_LOCK, kerberosID);", "originalCommit": "51f1790769304142d2b48e4bf4f3b8313c8c478e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1dd7c3d000093069c2efad0d56fd8bf1d96d9260", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java\nindex 5d1fccd309..59fa467f93 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java\n\n@@ -61,7 +61,7 @@ public S3SecretValue getS3Secret(String kerberosID) throws IOException {\n     Preconditions.checkArgument(Strings.isNotBlank(kerberosID),\n         \"kerberosID cannot be null or empty.\");\n     S3SecretValue result = null;\n-    omMetadataManager.getLock().acquireReadLock(S3_SECRET_LOCK, kerberosID);\n+    omMetadataManager.getLock().acquireWriteLock(S3_SECRET_LOCK, kerberosID);\n     try {\n       S3SecretValue s3Secret =\n           omMetadataManager.getS3SecretTable().get(kerberosID);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MDYyMQ==", "url": "https://github.com/apache/ozone/pull/1497#discussion_r513750621", "bodyText": "This needs a WriteLock.", "author": "xiaoyuyao", "createdAt": "2020-10-28T20:49:12Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -459,7 +459,7 @@ public OpenKeySession openKey(OmKeyArgs args) throws IOException {\n         args.getVolumeName(), args.getBucketName(), args.getKeyName());\n \n     FileEncryptionInfo encInfo;\n-    metadataManager.getLock().acquireWriteLock(BUCKET_LOCK, volumeName,\n+    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,", "originalCommit": "51f1790769304142d2b48e4bf4f3b8313c8c478e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1dd7c3d000093069c2efad0d56fd8bf1d96d9260", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java\nindex a36ff0a10d..0425e433ba 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java\n\n@@ -459,7 +459,7 @@ public OpenKeySession openKey(OmKeyArgs args) throws IOException {\n         args.getVolumeName(), args.getBucketName(), args.getKeyName());\n \n     FileEncryptionInfo encInfo;\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n+    metadataManager.getLock().acquireWriteLock(BUCKET_LOCK, volumeName,\n         bucketName);\n     OmBucketInfo bucketInfo;\n     try {\n"}}, {"oid": "1dd7c3d000093069c2efad0d56fd8bf1d96d9260", "url": "https://github.com/apache/ozone/commit/1dd7c3d000093069c2efad0d56fd8bf1d96d9260", "message": "fix review issues", "committedDate": "2020-10-29T06:13:26Z", "type": "commit"}]}