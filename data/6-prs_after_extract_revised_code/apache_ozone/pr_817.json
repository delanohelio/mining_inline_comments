{"pr_number": 817, "pr_title": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures\t", "pr_createdAt": "2020-04-14T05:24:58Z", "pr_url": "https://github.com/apache/ozone/pull/817", "timeline": [{"oid": "6ccaeea5b1cbb12afaea7c5ce7df98fb6510f977", "url": "https://github.com/apache/ozone/commit/6ccaeea5b1cbb12afaea7c5ce7df98fb6510f977", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-14T05:14:47Z", "type": "commit"}, {"oid": "a081e9d9b1e707ba23f5f3721fa38d73a6be45cd", "url": "https://github.com/apache/ozone/commit/a081e9d9b1e707ba23f5f3721fa38d73a6be45cd", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-16T05:10:05Z", "type": "commit"}, {"oid": "31e03b41c0b8fe1b5d183f84fd089a4e6db112f4", "url": "https://github.com/apache/ozone/commit/31e03b41c0b8fe1b5d183f84fd089a4e6db112f4", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-16T06:18:14Z", "type": "commit"}, {"oid": "f27adc51507d4d822e86cc29d524b844d8739665", "url": "https://github.com/apache/ozone/commit/f27adc51507d4d822e86cc29d524b844d8739665", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-20T23:40:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMDAwMA==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411800000", "bodyText": "NIT: Remove    4qa  wq\"", "author": "bharatviswa504", "createdAt": "2020-04-21T01:22:05Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java", "diffHunk": "@@ -470,6 +468,7 @@ public void testCreateFile(OzoneBucket ozoneBucket, String keyName,\n     Assert.assertEquals(data, new String(fileContent));\n   }\n \n+  @Ignore(\"This test failing randomly and triggering HDDS-3465.     ` `4qa  wq\")", "originalCommit": "f27adc51507d4d822e86cc29d524b844d8739665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMDkwOQ==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411800909", "bodyText": "Damn, somehow I pressed some unwanted chars before commit. I will change it.", "author": "umamaheswararao", "createdAt": "2020-04-21T01:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMDAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "7578258956a84b9a3a1b400b9580e23c9be72dbb", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\nindex b80f040b6e..590b73f2b4 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\n\n@@ -468,7 +468,7 @@ public void testCreateFile(OzoneBucket ozoneBucket, String keyName,\n     Assert.assertEquals(data, new String(fileContent));\n   }\n \n-  @Ignore(\"This test failing randomly and triggering HDDS-3465.     ` `4qa  wq\")\n+  @Ignore(\"This test failing randomly and triggering HDDS-3465.\")\n   @Test\n   public void testMultipartUploadWithOneOmNodeDown() throws Exception {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMDk2NQ==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411800965", "bodyText": "Minor NIT: Do not use *", "author": "bharatviswa504", "createdAt": "2020-04-21T01:24:54Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java", "diffHunk": "@@ -93,8 +93,7 @@\n     .OZONE_CLIENT_FAILOVER_SLEEP_BASE_MILLIS_DEFAULT;\n import static org.apache.hadoop.ozone.OzoneConfigKeys\n     .OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS;\n-import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.FILE_ALREADY_EXISTS;\n-import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.NOT_A_FILE;\n+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.*;", "originalCommit": "f27adc51507d4d822e86cc29d524b844d8739665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMzE3MA==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411803170", "bodyText": "I think that was done by Intellij auto.", "author": "umamaheswararao", "createdAt": "2020-04-21T01:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwMDk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "64da62569e30e2d357bbec2f801277eb610f7aa8", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\nindex b80f040b6e..d2a53e16fb 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHA.java\n\n@@ -93,7 +93,9 @@\n     .OZONE_CLIENT_FAILOVER_SLEEP_BASE_MILLIS_DEFAULT;\n import static org.apache.hadoop.ozone.OzoneConfigKeys\n     .OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS;\n-import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.*;\n+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.DIRECTORY_NOT_FOUND;\n+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.FILE_ALREADY_EXISTS;\n+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.NOT_A_FILE;\n import static org.apache.hadoop.ozone.security.acl.IAccessAuthorizer.ACLIdentityType.USER;\n import static org.apache.hadoop.ozone.security.acl.IAccessAuthorizer.ACLType.READ;\n import static org.apache.hadoop.ozone.security.acl.IAccessAuthorizer.ACLType.WRITE;\n"}}, {"oid": "7578258956a84b9a3a1b400b9580e23c9be72dbb", "url": "https://github.com/apache/ozone/commit/7578258956a84b9a3a1b400b9580e23c9be72dbb", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-21T01:25:45Z", "type": "commit"}, {"oid": "64da62569e30e2d357bbec2f801277eb610f7aa8", "url": "https://github.com/apache/ozone/commit/64da62569e30e2d357bbec2f801277eb610f7aa8", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-21T01:42:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NDcwMQ==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411854701", "bodyText": "NIT: Only space change", "author": "bharatviswa504", "createdAt": "2020-04-21T04:12:45Z", "path": "hadoop-ozone/fault-injection-test/mini-chaos-tests/src/test/java/org/apache/hadoop/ozone/MiniOzoneChaosCluster.java", "diffHunk": "@@ -383,6 +383,7 @@ public MiniOzoneChaosCluster build() throws IOException {\n \n       DefaultMetricsSystem.setMiniClusterMode(true);\n       initializeConfiguration();\n+", "originalCommit": "64da62569e30e2d357bbec2f801277eb610f7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e60d39e0dacf976871064cf894a169e8ac1cc43", "chunk": "diff --git a/hadoop-ozone/fault-injection-test/mini-chaos-tests/src/test/java/org/apache/hadoop/ozone/MiniOzoneChaosCluster.java b/hadoop-ozone/fault-injection-test/mini-chaos-tests/src/test/java/org/apache/hadoop/ozone/MiniOzoneChaosCluster.java\nindex 722e44b8ac..9357768e38 100644\n--- a/hadoop-ozone/fault-injection-test/mini-chaos-tests/src/test/java/org/apache/hadoop/ozone/MiniOzoneChaosCluster.java\n+++ b/hadoop-ozone/fault-injection-test/mini-chaos-tests/src/test/java/org/apache/hadoop/ozone/MiniOzoneChaosCluster.java\n\n@@ -383,7 +383,6 @@ public MiniOzoneChaosCluster build() throws IOException {\n \n       DefaultMetricsSystem.setMiniClusterMode(true);\n       initializeConfiguration();\n-\n       if (numOfOMs > 1) {\n         initOMRatisConf();\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NDg1Mg==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411854852", "bodyText": "NIT: Can we move this to single line", "author": "bharatviswa504", "createdAt": "2020-04-21T04:13:13Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFsHAURLs.java", "diffHunk": "@@ -92,11 +89,8 @@ public void init() throws Exception {\n     final String path = GenericTestUtils.getTempPath(omId);\n     java.nio.file.Path metaDirPath = java.nio.file.Paths.get(path, \"om-meta\");\n     conf.set(HddsConfigKeys.OZONE_METADATA_DIRS, metaDirPath.toString());\n-    conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY, \"127.0.0.1:0\");\n-    conf.setBoolean(OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY, true);\n-    conf.setTimeDuration(\n-        OMConfigKeys.OZONE_OM_LEADER_ELECTION_MINIMUM_TIMEOUT_DURATION_KEY,\n-        LEADER_ELECTION_TIMEOUT, TimeUnit.MILLISECONDS);\n+    conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY, \"127.\" +", "originalCommit": "64da62569e30e2d357bbec2f801277eb610f7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e60d39e0dacf976871064cf894a169e8ac1cc43", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFsHAURLs.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFsHAURLs.java\nindex 613d972ed5..343b59dd40 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFsHAURLs.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFsHAURLs.java\n\n@@ -89,8 +89,7 @@ public void init() throws Exception {\n     final String path = GenericTestUtils.getTempPath(omId);\n     java.nio.file.Path metaDirPath = java.nio.file.Paths.get(path, \"om-meta\");\n     conf.set(HddsConfigKeys.OZONE_METADATA_DIRS, metaDirPath.toString());\n-    conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY, \"127.\" +\n-            \"0.0.1:0\");\n+    conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY, \"127.\" + \"0.0.1:0\");\n     conf.setInt(ScmConfigKeys.OZONE_DATANODE_PIPELINE_LIMIT, 3);\n \n     OMStorage omStore = new OMStorage(conf);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1ODcxNQ==", "url": "https://github.com/apache/ozone/pull/817#discussion_r411858715", "bodyText": "Formatting is not proper here for these code lines, few of them can fit in a single line.", "author": "bharatviswa504", "createdAt": "2020-04-21T04:25:59Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/MiniOzoneHAClusterImpl.java", "diffHunk": "@@ -314,16 +313,36 @@ public MiniOzoneCluster build() throws IOException {\n     protected void initOMRatisConf() {\n       conf.setBoolean(OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY, true);\n       conf.setInt(OMConfigKeys.OZONE_OM_HANDLER_COUNT_KEY, numOfOmHandlers);\n-      conf.setLong(\n-          OMConfigKeys.OZONE_OM_RATIS_SNAPSHOT_AUTO_TRIGGER_THRESHOLD_KEY,\n-          100L);\n-      conf.setLong(OMConfigKeys.OZONE_OM_RATIS_LOG_PURGE_GAP, 200L);\n-      conf.setTimeDuration(\n-          OMConfigKeys.OZONE_OM_LEADER_ELECTION_MINIMUM_TIMEOUT_DURATION_KEY,\n-          RATIS_LEADER_ELECTION_TIMEOUT, TimeUnit.MILLISECONDS);\n+      // If test change the following config values we will respect,\n+      // otherwise we will set lower timeout values.\n+      long defaultDuration = OMConfigKeys", "originalCommit": "64da62569e30e2d357bbec2f801277eb610f7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e60d39e0dacf976871064cf894a169e8ac1cc43", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/MiniOzoneHAClusterImpl.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/MiniOzoneHAClusterImpl.java\nindex 433e66ba69..9b460514e6 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/MiniOzoneHAClusterImpl.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/MiniOzoneHAClusterImpl.java\n\n@@ -318,30 +318,27 @@ protected void initOMRatisConf() {\n       long defaultDuration = OMConfigKeys\n               .OZONE_OM_LEADER_ELECTION_MINIMUM_TIMEOUT_DURATION_DEFAULT\n               .getDuration();\n-      long curLeaderElectionTimeout = conf.getTimeDuration(\n-              OMConfigKeys.\n+      long curLeaderElectionTimeout = conf.getTimeDuration(OMConfigKeys.\n                       OZONE_OM_LEADER_ELECTION_MINIMUM_TIMEOUT_DURATION_KEY,\n-              defaultDuration,\n-              TimeUnit.MILLISECONDS);\n+              defaultDuration, TimeUnit.MILLISECONDS);\n       conf.setTimeDuration(OMConfigKeys.\n                       OZONE_OM_LEADER_ELECTION_MINIMUM_TIMEOUT_DURATION_KEY,\n               defaultDuration == curLeaderElectionTimeout ?\n                       RATIS_LEADER_ELECTION_TIMEOUT :\n                       curLeaderElectionTimeout,\n               TimeUnit.MILLISECONDS);\n-      long defaultNodeFailureTimeout\n-              = OMConfigKeys.\n+      long defaultNodeFailureTimeout = OMConfigKeys.\n               OZONE_OM_RATIS_SERVER_FAILURE_TIMEOUT_DURATION_DEFAULT.\n               getDuration();\n       long curNodeFailureTimeout = conf.getTimeDuration(OMConfigKeys.\n                       OZONE_OM_RATIS_SERVER_FAILURE_TIMEOUT_DURATION_KEY,\n-                      defaultNodeFailureTimeout, OMConfigKeys.\n+              defaultNodeFailureTimeout, OMConfigKeys.\n                       OZONE_OM_RATIS_SERVER_FAILURE_TIMEOUT_DURATION_DEFAULT.\n                       getUnit());\n       conf.setTimeDuration(\n               OMConfigKeys.OZONE_OM_RATIS_SERVER_FAILURE_TIMEOUT_DURATION_KEY,\n-              curNodeFailureTimeout == defaultNodeFailureTimeout\n-                      ? NODE_FAILURE_TIMEOUT : curNodeFailureTimeout,\n+              curNodeFailureTimeout == defaultNodeFailureTimeout ?\n+                      NODE_FAILURE_TIMEOUT : curNodeFailureTimeout,\n               TimeUnit.MILLISECONDS);\n     }\n \n"}}, {"oid": "1e60d39e0dacf976871064cf894a169e8ac1cc43", "url": "https://github.com/apache/ozone/commit/1e60d39e0dacf976871064cf894a169e8ac1cc43", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-21T04:50:41Z", "type": "commit"}, {"oid": "65c5219bc6e9207ada9dc5e97f4b15d0cc9fbc43", "url": "https://github.com/apache/ozone/commit/65c5219bc6e9207ada9dc5e97f4b15d0cc9fbc43", "message": "formatting", "committedDate": "2020-04-21T04:57:56Z", "type": "commit"}, {"oid": "c18f3ebd000fee069284ad10f4b40a8fc4b2d1a7", "url": "https://github.com/apache/ozone/commit/c18f3ebd000fee069284ad10f4b40a8fc4b2d1a7", "message": "HDDS-3380. MiniOzoneHAClusterImpl#initOMRatisConf will reset the configs and causes for test failures", "committedDate": "2020-04-21T05:17:41Z", "type": "commit"}]}