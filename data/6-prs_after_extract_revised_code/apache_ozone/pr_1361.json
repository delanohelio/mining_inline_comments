{"pr_number": 1361, "pr_title": "HDDS-4155. Directory and filename can end up with same name in a path.", "pr_createdAt": "2020-08-27T21:33:55Z", "pr_url": "https://github.com/apache/ozone/pull/1361", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMDg1OQ==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485020859", "bodyText": "@bharatviswa504 can you please reword this comment? I couldn't understand what it is saying.", "author": "arp7", "createdAt": "2020-09-08T15:44:33Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory", "originalCommit": "9ad3fd1b898f2b5ce41035a4475c97a138944604", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMxNTk2OQ==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485315969", "bodyText": "done", "author": "bharatviswa504", "createdAt": "2020-09-09T03:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMDg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c259d72af6d0eee925766b621dfe0b03226e4660", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\nindex a5488a6c1..8ee3f1761 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\n\n@@ -159,14 +159,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n-      // Check by the time we commit this file, is there any directory\n-      // created if then fail it. This is being done for correctness.\n-\n-      // For now we are taking this approach similar to local file creation.\n-      // TODO: In future this can be revisited to come up with an advanced\n-      // approach.\n-\n-\n+      // Check for directory exists with same name, if it exists throw error. \n       if (ozoneManager.getEnableFileSystemPaths()) {\n         if (checkDirectoryAlreadyExists(volumeName, bucketName, keyName,\n             omMetadataManager)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMTc5Ng==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485021796", "bodyText": "Does the directory name have a trailing / in RocksDB? If so, do we need to append it to keyname before calling checkDirectoryAlreadyExists?", "author": "arp7", "createdAt": "2020-09-08T15:45:55Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory\n+      // created if then fail it. This is being done for correctness.\n+\n+      // For now we are taking this approach similar to local file creation.\n+      // TODO: In future this can be revisited to come up with an advanced\n+      // approach.\n+\n+\n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        if (checkDirectoryAlreadyExists(volumeName, bucketName, keyName,", "originalCommit": "9ad3fd1b898f2b5ce41035a4475c97a138944604", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI5MzMwNA==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485293304", "bodyText": "Does the directory name have a trailing / in RocksDB?\n\nYes.\n\nIf so, do we need to append it to keyname before calling checkDirectoryAlreadyExists?\n\nThat is taken care of by the implementation of checkDirectoryAlreadyExists.\nWhere it uses getOzoneDirKey which appends \"/\"", "author": "bharatviswa504", "createdAt": "2020-09-09T02:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMTc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c259d72af6d0eee925766b621dfe0b03226e4660", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\nindex a5488a6c1..8ee3f1761 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java\n\n@@ -159,14 +159,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n-      // Check by the time we commit this file, is there any directory\n-      // created if then fail it. This is being done for correctness.\n-\n-      // For now we are taking this approach similar to local file creation.\n-      // TODO: In future this can be revisited to come up with an advanced\n-      // approach.\n-\n-\n+      // Check for directory exists with same name, if it exists throw error. \n       if (ozoneManager.getEnableFileSystemPaths()) {\n         if (checkDirectoryAlreadyExists(volumeName, bucketName, keyName,\n             omMetadataManager)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMjIxOA==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485022218", "bodyText": "Nice detailed explanation, thanks for adding this!", "author": "arp7", "createdAt": "2020-09-08T15:46:35Z", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java", "diffHunk": "@@ -197,6 +198,18 @@ public Response put(\n           .build();\n     } catch (IOException ex) {\n       LOG.error(\"Exception occurred in PutObject\", ex);\n+      if (ex instanceof  OMException) {\n+        if (((OMException) ex).getResult() == ResultCodes.NOT_A_FILE) {\n+          OS3Exception os3Exception = S3ErrorTable.newError(INVALID_REQUEST,\n+              keyPath);\n+          os3Exception.setErrorMessage(\"An error occurred (InvalidRequest) \" +", "originalCommit": "9ad3fd1b898f2b5ce41035a4475c97a138944604", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "035c9c864dfeea4d3d847f4cc957b20664ea4f6d", "chunk": "diff --git a/hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java b/hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java\nindex 5c5300a8a..518e23e79 100644\n--- a/hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java\n+++ b/hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java\n\n@@ -204,9 +206,9 @@ public Response put(\n               keyPath);\n           os3Exception.setErrorMessage(\"An error occurred (InvalidRequest) \" +\n               \"when calling the PutObject/MPU PartUpload operation: \" +\n-              OZONE_OM_ENABLE_FILESYSTEM_PATHS + \" is enabled Keys are\" +\n-              \" considered as Unix Paths. Path has Violated FS Semantics \" +\n-              \"which caused put operation to fail.\");\n+              OZONE_OM_ENABLE_FILESYSTEM_PATHS + \" is enabled Keys are \" +\n+              \"considered as Unix Paths. Path has Violated FS Semantics which \" +\n+              \"caused put operation to fail.\");\n           throw os3Exception;\n         }\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485332430", "bodyText": "Do we have a test case that tests the reverse scenario? i.e. create the dir first, then try to create a file with the same name. Also are we testing this via the object store interface with the flag enabled?", "author": "arp7", "createdAt": "2020-09-09T04:37:09Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -209,6 +215,94 @@ public void testObjectStoreCreateWithO3fs() throws Exception {\n \n   }\n \n+\n+  @Test\n+  public void testKeyCreationFailDuetoDirectoryCreationBeforeCommit()\n+      throws Exception {\n+    OzoneVolume ozoneVolume =\n+        cluster.getRpcClient().getObjectStore().getVolume(volumeName);\n+\n+    OzoneBucket ozoneBucket = ozoneVolume.getBucket(bucketName);\n+\n+    OzoneOutputStream ozoneOutputStream =\n+        ozoneBucket.createKey(\"/a/b/c\", 10);\n+    byte[] b = new byte[10];\n+    Arrays.fill(b, (byte)96);\n+    ozoneOutputStream.write(b);\n+\n+    // Before close create directory with same name.\n+    o3fs.mkdirs(new Path(\"/a/b/c\"));", "originalCommit": "1e9ead87e8b0df104e0d718db20767d084256e59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzOTc5Mw==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485339793", "bodyText": "Do we have a test case that tests the reverse scenario? i.e. create the dir first, then try to create a file with the same >name\n\nNo such test is currently available. Will post shortly this test also.\n\nAlso are we testing this via the object store interface with the flag enabled?\n\nYes test is with flag enabled.", "author": "bharatviswa504", "createdAt": "2020-09-09T05:03:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NDIwMw==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485344203", "bodyText": "Added the test.", "author": "bharatviswa504", "createdAt": "2020-09-09T05:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "97ab0e80df3fa20bcdeda4b0e71b2eb0fbbef5c7", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\nindex babbf8260..99d037350 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\n\n@@ -303,6 +304,12 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n+  @Test(expected = FileAlreadyExistsException.class)\n+  public void testCreateDirectoryFirstThenFileWithSameName() throws Exception {\n+    o3fs.mkdirs(new Path(\"/t1/t2\"));\n+    o3fs.create(new Path(\"/t1/t2\"));\n+  }\n+\n   private void checkPath(Path path) {\n     try {\n       o3fs.getFileStatus(path);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485738948", "bodyText": "Thanks for the additional test. Can we also add a test case that exercises the REST API to create a file and dir with the same name, in both orders?", "author": "arp7", "createdAt": "2020-09-09T16:14:30Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -303,6 +304,12 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n+  @Test(expected = FileAlreadyExistsException.class)", "originalCommit": "1213423decf0237b844a7ab5a8805005a68a4fb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc1NjA1MA==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485756050", "bodyText": "You mean use OzoneBucketAPI and create a Key or add a robot test using S3\nIf robot test, we don't have a test suite with this flag enabled,  there is already an open Jira for this, we can cover this additional scenario in that.\nhttps://issues.apache.org/jira/browse/HDDS-4154", "author": "bharatviswa504", "createdAt": "2020-09-09T16:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NjMyOQ==", "url": "https://github.com/apache/ozone/pull/1361#discussion_r487246329", "bodyText": "Added a test with object store API for the same scenario", "author": "bharatviswa504", "createdAt": "2020-09-11T19:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "035c9c864dfeea4d3d847f4cc957b20664ea4f6d", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\nindex 99d037350..a410c7c64 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java\n\n@@ -304,12 +305,6 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n-  @Test(expected = FileAlreadyExistsException.class)\n-  public void testCreateDirectoryFirstThenFileWithSameName() throws Exception {\n-    o3fs.mkdirs(new Path(\"/t1/t2\"));\n-    o3fs.create(new Path(\"/t1/t2\"));\n-  }\n-\n   private void checkPath(Path path) {\n     try {\n       o3fs.getFileStatus(path);\n"}}, {"oid": "035c9c864dfeea4d3d847f4cc957b20664ea4f6d", "url": "https://github.com/apache/ozone/commit/035c9c864dfeea4d3d847f4cc957b20664ea4f6d", "message": "HDDS-4155. Directory and filename can end up with same name in a path.\"\n\"", "committedDate": "2020-09-11T19:24:20Z", "type": "commit"}, {"oid": "14b7a68b41cb90006114d1a8cc1c5f44dace5a3a", "url": "https://github.com/apache/ozone/commit/14b7a68b41cb90006114d1a8cc1c5f44dace5a3a", "message": "fix cs", "committedDate": "2020-09-11T19:24:20Z", "type": "commit"}, {"oid": "c82a83b5ddc7bd88aca7688d185f9ba155eea6da", "url": "https://github.com/apache/ozone/commit/c82a83b5ddc7bd88aca7688d185f9ba155eea6da", "message": "fix cs", "committedDate": "2020-09-11T19:24:20Z", "type": "commit"}, {"oid": "c259d72af6d0eee925766b621dfe0b03226e4660", "url": "https://github.com/apache/ozone/commit/c259d72af6d0eee925766b621dfe0b03226e4660", "message": "Update OMKeyCommitRequest.java", "committedDate": "2020-09-11T19:24:20Z", "type": "commit"}, {"oid": "729537b5a4a263344f0d494876b7b719c11fa68e", "url": "https://github.com/apache/ozone/commit/729537b5a4a263344f0d494876b7b719c11fa68e", "message": "Update S3MultipartUploadCompleteRequest.java", "committedDate": "2020-09-11T19:24:21Z", "type": "commit"}, {"oid": "97ab0e80df3fa20bcdeda4b0e71b2eb0fbbef5c7", "url": "https://github.com/apache/ozone/commit/97ab0e80df3fa20bcdeda4b0e71b2eb0fbbef5c7", "message": "new test", "committedDate": "2020-09-11T19:24:21Z", "type": "commit"}, {"oid": "b217b3c5f70445df4db86c1ced0b5e66bf3620a5", "url": "https://github.com/apache/ozone/commit/b217b3c5f70445df4db86c1ced0b5e66bf3620a5", "message": "add key test", "committedDate": "2020-09-11T19:24:21Z", "type": "commit"}, {"oid": "b217b3c5f70445df4db86c1ced0b5e66bf3620a5", "url": "https://github.com/apache/ozone/commit/b217b3c5f70445df4db86c1ced0b5e66bf3620a5", "message": "add key test", "committedDate": "2020-09-11T19:24:21Z", "type": "forcePushed"}]}