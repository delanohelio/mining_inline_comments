{"pr_number": 938, "pr_title": "HDDS-3608. NPE while process a pipeline report when PipelineQuery absent in query2OpenPipelines", "pr_createdAt": "2020-05-18T12:40:48Z", "pr_url": "https://github.com/apache/ozone/pull/938", "timeline": [{"oid": "c163a1140dbe00f51bea3eba3c446d6df6864cb1", "url": "https://github.com/apache/ozone/commit/c163a1140dbe00f51bea3eba3c446d6df6864cb1", "message": "HDDS-3608. NPE while process a pipeline report when PipelineQuery absent in query2OpenPipelines", "committedDate": "2020-05-19T02:02:12Z", "type": "commit"}, {"oid": "c163a1140dbe00f51bea3eba3c446d6df6864cb1", "url": "https://github.com/apache/ozone/commit/c163a1140dbe00f51bea3eba3c446d6df6864cb1", "message": "HDDS-3608. NPE while process a pipeline report when PipelineQuery absent in query2OpenPipelines", "committedDate": "2020-05-19T02:02:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzIwNQ==", "url": "https://github.com/apache/ozone/pull/938#discussion_r427317205", "bodyText": "Besides above change, Can you also do the empty check for another condition branch?\n} else {\n// for transition from OPEN to CLOSED state remove pipeline from\n// query2OpenPipelines\nquery2OpenPipelines.get(query).remove(pipeline);   <---\n}\nThere is also a chance that remove operation can throw NPE.", "author": "linyiqun", "createdAt": "2020-05-19T13:49:45Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java", "diffHunk": "@@ -374,7 +374,12 @@ Pipeline updatePipelineState(PipelineID pipelineID, PipelineState state)\n     PipelineQuery query = new PipelineQuery(pipeline);\n     if (updatedPipeline.getPipelineState() == PipelineState.OPEN) {\n       // for transition to OPEN state add pipeline to query2OpenPipelines\n-      query2OpenPipelines.get(query).add(updatedPipeline);\n+      List<Pipeline> pipelineList = query2OpenPipelines.get(query);\n+      if (pipelineList == null) {\n+        pipelineList = new CopyOnWriteArrayList<>();\n+        query2OpenPipelines.put(query, pipelineList);\n+      }\n+      pipelineList.add(updatedPipeline);", "originalCommit": "c163a1140dbe00f51bea3eba3c446d6df6864cb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6aeffde486bb354e5afe167bff8e63eae9fa113f", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java\nindex 0e62826011..d11200207f 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java\n\n@@ -372,9 +372,9 @@ Pipeline updatePipelineState(PipelineID pipelineID, PipelineState state)\n     Pipeline updatedPipeline = pipelineMap.compute(pipelineID,\n         (id, p) -> Pipeline.newBuilder(pipeline).setState(state).build());\n     PipelineQuery query = new PipelineQuery(pipeline);\n+    List<Pipeline> pipelineList = query2OpenPipelines.get(query);\n     if (updatedPipeline.getPipelineState() == PipelineState.OPEN) {\n       // for transition to OPEN state add pipeline to query2OpenPipelines\n-      List<Pipeline> pipelineList = query2OpenPipelines.get(query);\n       if (pipelineList == null) {\n         pipelineList = new CopyOnWriteArrayList<>();\n         query2OpenPipelines.put(query, pipelineList);\n"}}, {"oid": "6aeffde486bb354e5afe167bff8e63eae9fa113f", "url": "https://github.com/apache/ozone/commit/6aeffde486bb354e5afe167bff8e63eae9fa113f", "message": "HDDS-3608. Address comments, fix another condition branch NPE.", "committedDate": "2020-05-19T23:32:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MTY5MA==", "url": "https://github.com/apache/ozone/pull/938#discussion_r428961690", "bodyText": "query2OpenPipelines has been initialized in initializeQueryMap() based on the RepType/ReFactor and has never been removed from the map. Correct me if I'm wrong, the pipelineList should never be null unless different RepType/Factor are specified in the query, which is currently impossible.", "author": "xiaoyuyao", "createdAt": "2020-05-21T23:07:17Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateMap.java", "diffHunk": "@@ -372,13 +372,20 @@ Pipeline updatePipelineState(PipelineID pipelineID, PipelineState state)\n     Pipeline updatedPipeline = pipelineMap.compute(pipelineID,\n         (id, p) -> Pipeline.newBuilder(pipeline).setState(state).build());\n     PipelineQuery query = new PipelineQuery(pipeline);\n+    List<Pipeline> pipelineList = query2OpenPipelines.get(query);\n     if (updatedPipeline.getPipelineState() == PipelineState.OPEN) {\n       // for transition to OPEN state add pipeline to query2OpenPipelines\n-      query2OpenPipelines.get(query).add(updatedPipeline);\n+      if (pipelineList == null) {", "originalCommit": "6aeffde486bb354e5afe167bff8e63eae9fa113f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4Njg4OQ==", "url": "https://github.com/apache/ozone/pull/938#discussion_r428986889", "bodyText": "@xiaoyuyao Yeah, you are right while we do something initialized in initializeQueryMap(), but i am working on query unknown replication query dynamically, so initializeQueryMap() just put the known replication factor into the query2OpenPipelines. Further more, i have an idea to remove initializeQueryMap, instead, using a lazy way to add and remove items from/to the query2OpenPipelines, it is only an idea, but for this PR, it makes NPE gone away.", "author": "maobaolong", "createdAt": "2020-05-22T00:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2MTY5MA=="}], "type": "inlineReview", "revised_code": null}]}