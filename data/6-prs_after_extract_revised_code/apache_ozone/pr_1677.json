{"pr_number": 1677, "pr_title": "HDDS-4562. Old bucket needs to be accessible after the cluster was upgraded to the Quota version.", "pr_createdAt": "2020-12-09T02:38:03Z", "pr_url": "https://github.com/apache/ozone/pull/1677", "timeline": [{"oid": "2b61f809783986ba5ee4d140de95d457432af78c", "url": "https://github.com/apache/ozone/commit/2b61f809783986ba5ee4d140de95d457432af78c", "message": "fix review issues", "committedDate": "2020-12-14T07:03:45Z", "type": "forcePushed"}, {"oid": "265bf1db8f1ecdf2dedc932a95d0b10872555738", "url": "https://github.com/apache/ozone/commit/265bf1db8f1ecdf2dedc932a95d0b10872555738", "message": "fix namespace quota.", "committedDate": "2020-12-14T13:04:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNzU2Mw==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r542917563", "bodyText": "Why do we need to do this during set Operation?", "author": "bharatviswa504", "createdAt": "2020-12-14T23:19:33Z", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -291,9 +291,10 @@ public boolean setVolumeOwner(String volumeName, String owner)\n   public void setVolumeQuota(String volumeName, long quotaInCounts,\n       long quotaInBytes) throws IOException {\n     HddsClientUtils.verifyResourceName(volumeName);\n-    verifyCountsQuota(quotaInCounts);\n-    verifySpaceQuota(quotaInBytes);\n-    ozoneManagerClient.setQuota(volumeName, quotaInCounts, quotaInBytes);\n+    verifyCountsQuota(getQuotaValue(quotaInCounts));", "originalCommit": "ed17532fb5702f9a3429d1909d9cb1a4dea94824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxODUzNg==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r543018536", "bodyText": "This check simply ensures that when we use RpcClient set Quota, the value of quota must be legal (not less than -1). But the getQuotaValue conversion step inside is redundant,  I\u2018ll  delete this conversion.", "author": "captainzmc", "createdAt": "2020-12-15T03:29:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNzU2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "58b555780f1835356d1415f73672b66db9a931dc", "chunk": "diff --git a/hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java b/hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java\nindex d7b434158..dcb16268a 100644\n--- a/hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java\n+++ b/hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java\n\n@@ -291,10 +291,9 @@ public boolean setVolumeOwner(String volumeName, String owner)\n   public void setVolumeQuota(String volumeName, long quotaInCounts,\n       long quotaInBytes) throws IOException {\n     HddsClientUtils.verifyResourceName(volumeName);\n-    verifyCountsQuota(getQuotaValue(quotaInCounts));\n-    verifySpaceQuota(getQuotaValue(quotaInBytes));\n-    ozoneManagerClient.setQuota(volumeName, getQuotaValue(quotaInCounts),\n-        getQuotaValue(quotaInBytes));\n+    verifyCountsQuota(quotaInCounts);\n+    verifySpaceQuota(quotaInBytes);\n+    ozoneManagerClient.setQuota(volumeName, quotaInCounts, quotaInBytes);\n   }\n \n   @Override\n"}}, {"oid": "58b555780f1835356d1415f73672b66db9a931dc", "url": "https://github.com/apache/ozone/commit/58b555780f1835356d1415f73672b66db9a931dc", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T07:00:07Z", "type": "forcePushed"}, {"oid": "5b88e5160e267400ef8f9298911a63a5bd600d44", "url": "https://github.com/apache/ozone/commit/5b88e5160e267400ef8f9298911a63a5bd600d44", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T07:11:49Z", "type": "forcePushed"}, {"oid": "a38bd49a7c928557ec5346047191bc699dbb3b27", "url": "https://github.com/apache/ozone/commit/a38bd49a7c928557ec5346047191bc699dbb3b27", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T07:16:56Z", "type": "forcePushed"}, {"oid": "576e3d399ab78663dd4398b9b255f4dbba2508de", "url": "https://github.com/apache/ozone/commit/576e3d399ab78663dd4398b9b255f4dbba2508de", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T07:18:26Z", "type": "forcePushed"}, {"oid": "bc0ec8be7e745e64dc8159df3a86ff8eb9e94e51", "url": "https://github.com/apache/ozone/commit/bc0ec8be7e745e64dc8159df3a86ff8eb9e94e51", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T08:07:54Z", "type": "commit"}, {"oid": "bc0ec8be7e745e64dc8159df3a86ff8eb9e94e51", "url": "https://github.com/apache/ozone/commit/bc0ec8be7e745e64dc8159df3a86ff8eb9e94e51", "message": "fix bucket quotaInBytes.", "committedDate": "2020-12-15T08:07:54Z", "type": "forcePushed"}, {"oid": "7dce9f7a96c799d481f48316239a93865f1dac40", "url": "https://github.com/apache/ozone/commit/7dce9f7a96c799d481f48316239a93865f1dac40", "message": "fix review issues and change default to -2.", "committedDate": "2020-12-17T02:20:39Z", "type": "forcePushed"}, {"oid": "c2704f79b1e64a683eabe6031157f4dd4248c691", "url": "https://github.com/apache/ozone/commit/c2704f79b1e64a683eabe6031157f4dd4248c691", "message": "fix review issues and change default to -2.", "committedDate": "2020-12-17T11:19:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzM1Ng==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r545183356", "bodyText": "Why we change above condition check? Above check is to confirmed that the quota is enabled, not a validation check. If we want to make sure quota value is a positive value, I prefer to additionally add omVolumeArgs.getQuotaInNamespace() > 0 check.\nif (omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET && omVolumeArgs.getQuotaInNamespace() > 0) {\n}", "author": "linyiqun", "createdAt": "2020-12-17T15:34:46Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -314,7 +314,9 @@ private BucketEncryptionInfoProto getBeinfo(\n    */\n   private void checkQuotaInNamespace(OmVolumeArgs omVolumeArgs,\n       long allocatedNamespace) throws IOException {\n-    if (omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n+    // Client has ensured that no negative values other than -1 (clear quota)\n+    // will occur when quota is set.\n+    if (omVolumeArgs.getQuotaInNamespace() > OzoneConsts.QUOTA_RESET) {", "originalCommit": "c2704f79b1e64a683eabe6031157f4dd4248c691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyNjM5MQ==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r545526391", "bodyText": "@linyiqun Here with omVolumeArgs.getQuotaInNamespace () > 0 is enough? Because when it > 0 is certainly is not equal to -1.", "author": "captainzmc", "createdAt": "2020-12-18T02:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMDc0OQ==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r545530749", "bodyText": "@captainzmc , here my point is that we should firstly check if the quota was enabled by using one variable flag(here I understand is OzoneConsts.QUOTA_RESET). Then we check the quota value if it's valid. Is there a switch config for the quota now?  If the quota is not enabled, we don't need to do the quota check anymore.\nFor the current value OzoneConsts.QUOTA_RESET is -1, omVolumeArgs.getQuotaInNamespace () > 0 makes the sense. But once OzoneConsts.QUOTA_RESET  to a positive value, this check won't work. So omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET would still be a better check.", "author": "linyiqun", "createdAt": "2020-12-18T02:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzNjM1Mw==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r545536353", "bodyText": "Thanks for @linyiqun's feedback.\nCurrent there are two case  -1 or -2 (old volume/bucket) not check quota, actually we have guarantee on the client, user cann\u2019t set negative quota, Therefore, except for clear quota and old quota, there is no negative case.\nIn addition to using omVolumeArgs.getQuotaInNamespace ()! = OzoneConsts.QUOTA_RESET also need add omvolumeargs.getQuotainNamespace ()! = 2. The judgment condition will increase too much and the code will not be clear enough, we can use omVolumeArgs. getQuotaInNamespace () > 0, this will make the code much cleaner.", "author": "captainzmc", "createdAt": "2020-12-18T02:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0OTU2Ng==", "url": "https://github.com/apache/ozone/pull/1677#discussion_r545549566", "bodyText": "Okay, go ahead for this.", "author": "linyiqun", "createdAt": "2020-12-18T03:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MzM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "828f2e370d3164f24bdb811f0c48508617336a66", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java\nindex 43842e1a1..1130f94e0 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java\n\n@@ -314,9 +314,7 @@ private BucketEncryptionInfoProto getBeinfo(\n    */\n   private void checkQuotaInNamespace(OmVolumeArgs omVolumeArgs,\n       long allocatedNamespace) throws IOException {\n-    // Client has ensured that no negative values other than -1 (clear quota)\n-    // will occur when quota is set.\n-    if (omVolumeArgs.getQuotaInNamespace() > OzoneConsts.QUOTA_RESET) {\n+    if (omVolumeArgs.getQuotaInNamespace() > 0) {\n       long usedNamespace = omVolumeArgs.getUsedNamespace();\n       long quotaInNamespace = omVolumeArgs.getQuotaInNamespace();\n       long toUseNamespaceInTotal = usedNamespace + allocatedNamespace;\n"}}, {"oid": "828f2e370d3164f24bdb811f0c48508617336a66", "url": "https://github.com/apache/ozone/commit/828f2e370d3164f24bdb811f0c48508617336a66", "message": "fix review issues and change default to -2.", "committedDate": "2020-12-18T02:15:08Z", "type": "forcePushed"}, {"oid": "554c9a86c1ae468501141fcd62944a62b109926f", "url": "https://github.com/apache/ozone/commit/554c9a86c1ae468501141fcd62944a62b109926f", "message": "fix review issues and change default to -2.", "committedDate": "2020-12-18T06:02:55Z", "type": "commit"}, {"oid": "554c9a86c1ae468501141fcd62944a62b109926f", "url": "https://github.com/apache/ozone/commit/554c9a86c1ae468501141fcd62944a62b109926f", "message": "fix review issues and change default to -2.", "committedDate": "2020-12-18T06:02:55Z", "type": "forcePushed"}]}