{"pr_number": 850, "pr_title": "HDDS-3222. Add integration test for Recon FSCK.", "pr_createdAt": "2020-04-21T07:53:36Z", "pr_url": "https://github.com/apache/ozone/pull/850", "timeline": [{"oid": "7e1dff6363d8b2facc49b0674dbe987ed526a104", "url": "https://github.com/apache/ozone/commit/7e1dff6363d8b2facc49b0674dbe987ed526a104", "message": "HDDS-3222. Add integration test for Recon FSCK.", "committedDate": "2020-04-21T07:49:49Z", "type": "commit"}, {"oid": "a299c5a7564336c6dd91b183c71297f98e62b0fd", "url": "https://github.com/apache/ozone/commit/a299c5a7564336c6dd91b183c71297f98e62b0fd", "message": "Remove LOG lines.", "committedDate": "2020-04-21T07:56:00Z", "type": "commit"}, {"oid": "921714dc84c7806eb69331c31bfbcd38d3231e71", "url": "https://github.com/apache/ozone/commit/921714dc84c7806eb69331c31bfbcd38d3231e71", "message": "Add license.", "committedDate": "2020-04-21T16:18:41Z", "type": "commit"}, {"oid": "deec0f0e4368c47728bb2435863b47704acd4c61", "url": "https://github.com/apache/ozone/commit/deec0f0e4368c47728bb2435863b47704acd4c61", "message": "Move test to different classes for smaller mini ozone cluster.", "committedDate": "2020-04-21T20:54:29Z", "type": "commit"}, {"oid": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "url": "https://github.com/apache/ozone/commit/95d1dd7576b7c80e76d5ce7be872ae15444245b3", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3222-master", "committedDate": "2020-04-22T20:20:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ5MjI0Ng==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413492246", "bodyText": "We should have some timeout value, it's ok to increase it if needed.", "author": "swagle", "createdAt": "2020-04-23T04:03:05Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconAsPassiveScm.java", "diffHunk": "@@ -81,7 +81,7 @@ public void shutdown() {\n     }\n   }\n \n-  @Test(timeout = 120000)\n+  @Test", "originalCommit": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk1MTUyMQ==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413951521", "bodyText": "Timeout is implicitly enforced through LambdaTestUtils.", "author": "avijayanhwx", "createdAt": "2020-04-23T16:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ5MjI0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ5NDA1Mg==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413494052", "bodyText": "Minor nit: should declare refs as final.", "author": "swagle", "createdAt": "2020-04-23T04:08:57Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java", "diffHunk": "@@ -47,16 +47,18 @@\n \n   private ContainerManager containerManager;\n   private ContainerSchemaManager containerSchemaManager;\n-  private static final long INTERVAL = 5 * 60 * 1000L;\n+  private long interval;", "originalCommit": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk1MjcwNA==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413952704", "bodyText": "+1, will change this.", "author": "avijayanhwx", "createdAt": "2020-04-23T16:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ5NDA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java\nindex 3d20a9a5b..9c1a2505b 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/fsck/MissingContainerTask.java\n\n@@ -47,7 +47,7 @@\n \n   private ContainerManager containerManager;\n   private ContainerSchemaManager containerSchemaManager;\n-  private long interval;\n+  private final long interval;\n \n   public MissingContainerTask(\n       ContainerManager containerManager,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwMjY0Nw==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413502647", "bodyText": "If the task is persistent, restarting the task thread while keeping Recon running (which I don't know if is a possible scenario currently) will always check the DB.  If so, registered flag is unnecessary if DB check is cheap, otherwise it should be set outside of if.", "author": "adoroszlai", "createdAt": "2020-04-23T04:37:47Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconScmTask.java", "diffHunk": "@@ -34,26 +32,30 @@\n   private Thread taskThread;\n   private ReconTaskStatusDao reconTaskStatusDao;\n   private volatile boolean running;\n+  private volatile boolean registered;\n \n-  @Inject\n-  public ReconScmTask(ReconTaskStatusDao reconTaskStatusDao) {\n+  protected ReconScmTask(ReconTaskStatusDao reconTaskStatusDao) {\n     this.reconTaskStatusDao = reconTaskStatusDao;\n   }\n \n-  public void register() {\n+  private void register() {\n     String taskName = getTaskName();\n     if (!reconTaskStatusDao.existsById(taskName)) {\n       ReconTaskStatus reconTaskStatusRecord = new ReconTaskStatus(\n           taskName, 0L, 0L);\n       reconTaskStatusDao.insert(reconTaskStatusRecord);\n       LOG.info(\"Registered {} task \", taskName);\n+      registered = true;\n     }", "originalCommit": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTc2OQ==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413989769", "bodyText": "Good catch... I will fix it by removing the flag since the DB check is not expected to be costly.", "author": "avijayanhwx", "createdAt": "2020-04-23T17:32:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwMjY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconScmTask.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconScmTask.java\nindex 7ea076491..df21c2158 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconScmTask.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconScmTask.java\n\n@@ -32,7 +32,6 @@\n   private Thread taskThread;\n   private ReconTaskStatusDao reconTaskStatusDao;\n   private volatile boolean running;\n-  private volatile boolean registered;\n \n   protected ReconScmTask(ReconTaskStatusDao reconTaskStatusDao) {\n     this.reconTaskStatusDao = reconTaskStatusDao;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzg5NA==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413507894", "bodyText": "How about something like \"The time interval of periodic sync of pipeline state from SCM to Recon\"?  I think that's more friendly.\nAlso, as config type is time, values can be specified with units for clarity, eg. 10m (= 600s), so text doesn't need to state it's \"in seconds\".", "author": "adoroszlai", "createdAt": "2020-04-23T04:54:19Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.tasks;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+\n+/**\n+ * The configuration class for the Recon tasks.\n+ */\n+@ConfigGroup(prefix = \"ozone.recon.task\")\n+public class ReconTaskConfig {\n+\n+  @Config(key = \"pipelinesync.interval\",\n+      type = ConfigType.TIME, timeUnit = TimeUnit.SECONDS,\n+      defaultValue = \"600\",\n+      tags = { ConfigTag.RECON, ConfigTag.OZONE },\n+      description = \"Interval of the PipelineSyncTask in seconds.\"", "originalCommit": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\nindex e23b75799..33437dc02 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\n\n@@ -35,7 +35,8 @@\n       type = ConfigType.TIME, timeUnit = TimeUnit.SECONDS,\n       defaultValue = \"600\",\n       tags = { ConfigTag.RECON, ConfigTag.OZONE },\n-      description = \"Interval of the PipelineSyncTask in seconds.\"\n+      description = \"The time interval of periodic sync of pipeline state \" +\n+          \"from SCM to Recon.\"\n   )\n   private long pipelineSyncTaskInterval;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTI2OA==", "url": "https://github.com/apache/ozone/pull/850#discussion_r413509268", "bodyText": ">= 1 may be safer (don't know if multiple pipelines are allowed for single datanode).", "author": "adoroszlai", "createdAt": "2020-04-23T04:58:41Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconTasks.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon;\n+\n+import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_CONTAINER_REPORT_INTERVAL;\n+import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_PIPELINE_REPORT_INTERVAL;\n+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationFactor.ONE;\n+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationType.RATIS;\n+import static org.apache.hadoop.ozone.container.ozoneimpl.TestOzoneContainer.runTestOzoneContainerViaDataNode;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.List;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.scm.XceiverClientGrpc;\n+import org.apache.hadoop.hdds.scm.container.ContainerInfo;\n+import org.apache.hadoop.hdds.scm.container.ContainerManager;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineManager;\n+import org.apache.hadoop.hdds.scm.server.StorageContainerManager;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.recon.scm.ReconContainerManager;\n+import org.apache.hadoop.ozone.recon.scm.ReconStorageContainerManagerFacade;\n+import org.apache.hadoop.test.LambdaTestUtils;\n+import org.hadoop.ozone.recon.schema.tables.pojos.MissingContainers;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+/**\n+ * Integration Tests for Recon's tasks.\n+ */\n+public class TestReconTasks {\n+\n+  private MiniOzoneCluster cluster = null;\n+  private OzoneConfiguration conf;\n+\n+  @Rule\n+  public TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+  @Before\n+  public void init() throws Exception {\n+    conf = new OzoneConfiguration();\n+    conf.set(HDDS_CONTAINER_REPORT_INTERVAL, \"5s\");\n+    conf.set(HDDS_PIPELINE_REPORT_INTERVAL, \"5s\");\n+    conf.set(\"ozone.recon.task.missingcontainer.interval\", \"15s\");\n+    conf.set(\"ozone.scm.stale.node.interval\", \"10s\");\n+    conf.set(\"ozone.scm.dead.node.interval\", \"20s\");\n+    cluster =  MiniOzoneCluster.newBuilder(conf).setNumDatanodes(1)\n+        .includeRecon(true).build();\n+    cluster.waitForClusterToBeReady();\n+  }\n+\n+  @After\n+  public void shutdown() {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+    }\n+  }\n+\n+  @Test\n+  public void testMissingContainerDownNode() throws Exception {\n+    ReconStorageContainerManagerFacade reconScm =\n+        (ReconStorageContainerManagerFacade)\n+            cluster.getReconServer().getReconStorageContainerManager();\n+    StorageContainerManager scm = cluster.getStorageContainerManager();\n+    PipelineManager reconPipelineManager = reconScm.getPipelineManager();\n+    PipelineManager scmPipelineManager = scm.getPipelineManager();\n+\n+    // Make sure Recon's pipeline state is initialized.\n+    LambdaTestUtils.await(60000, 5000,\n+        () -> (reconPipelineManager.getPipelines().size() == 1));", "originalCommit": "95d1dd7576b7c80e76d5ce7be872ae15444245b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconTasks.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconTasks.java\nindex 9b21baa5e..08eb9605c 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconTasks.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/recon/TestReconTasks.java\n\n@@ -86,7 +86,7 @@ public void testMissingContainerDownNode() throws Exception {\n \n     // Make sure Recon's pipeline state is initialized.\n     LambdaTestUtils.await(60000, 5000,\n-        () -> (reconPipelineManager.getPipelines().size() == 1));\n+        () -> (reconPipelineManager.getPipelines().size() >= 1));\n \n     ContainerManager scmContainerManager = scm.getContainerManager();\n     ReconContainerManager reconContainerManager =\n"}}, {"oid": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "url": "https://github.com/apache/ozone/commit/2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "message": "Address review comments.", "committedDate": "2020-04-23T17:42:12Z", "type": "commit"}, {"oid": "b9ccd1d3375f2697845f9f47a6b84c5000888457", "url": "https://github.com/apache/ozone/commit/b9ccd1d3375f2697845f9f47a6b84c5000888457", "message": "Add unit to task interval default value.", "committedDate": "2020-04-23T17:44:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAwMTIyMw==", "url": "https://github.com/apache/ozone/pull/850#discussion_r414001223", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  description = \"The time interval of the period check for  \" +\n          \n          \n            \n                      \" containers with zero replicas in the cluster as reported by \" +\n          \n          \n            \n                  description = \"The time interval of the periodic check for \" +\n          \n          \n            \n                      \"containers with zero replicas in the cluster as reported by \" +", "author": "adoroszlai", "createdAt": "2020-04-23T17:49:56Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java", "diffHunk": "@@ -51,7 +52,9 @@ public void setPipelineSyncTaskInterval(long pipelineSyncTaskInterval) {\n       type = ConfigType.TIME, timeUnit = TimeUnit.SECONDS,\n       defaultValue = \"300\",\n       tags = { ConfigTag.RECON, ConfigTag.OZONE },\n-      description = \"Interval of the Missing Container Task in seconds.\"\n+      description = \"The time interval of the period check for  \" +\n+          \" containers with zero replicas in the cluster as reported by \" +", "originalCommit": "2e21702a9265fb93c5ae28f20b0616c50fdc8d56", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a43224de9469cd2e4e592dde3e9588f896db0e1d", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\nindex 33437dc02..688e3ac89 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\n\n@@ -50,10 +50,10 @@ public void setPipelineSyncTaskInterval(long pipelineSyncTaskInterval) {\n \n   @Config(key = \"missingcontainer.interval\",\n       type = ConfigType.TIME, timeUnit = TimeUnit.SECONDS,\n-      defaultValue = \"300\",\n+      defaultValue = \"300s\",\n       tags = { ConfigTag.RECON, ConfigTag.OZONE },\n-      description = \"The time interval of the period check for  \" +\n-          \" containers with zero replicas in the cluster as reported by \" +\n+      description = \"The time interval of the periodic check for \" +\n+          \"containers with zero replicas in the cluster as reported by \" +\n           \"Datanodes.\"\n   )\n   private long missingContainerTaskInterval;\n"}}, {"oid": "a43224de9469cd2e4e592dde3e9588f896db0e1d", "url": "https://github.com/apache/ozone/commit/a43224de9469cd2e4e592dde3e9588f896db0e1d", "message": "Update hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/tasks/ReconTaskConfig.java\n\nCo-Authored-By: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>", "committedDate": "2020-04-23T18:01:34Z", "type": "commit"}, {"oid": "17f602e9f0b6510d338f0a1b297b2e5de13674f3", "url": "https://github.com/apache/ozone/commit/17f602e9f0b6510d338f0a1b297b2e5de13674f3", "message": "trigger new CI check", "committedDate": "2020-04-23T19:39:06Z", "type": "commit"}, {"oid": "2ea71faf1079c26bc461200f0043e7bc013f3289", "url": "https://github.com/apache/ozone/commit/2ea71faf1079c26bc461200f0043e7bc013f3289", "message": "trigger new CI check", "committedDate": "2020-04-24T08:16:47Z", "type": "commit"}, {"oid": "e2c93480f5b304c2c2f26d4e7d6dd512f62a94e6", "url": "https://github.com/apache/ozone/commit/e2c93480f5b304c2c2f26d4e7d6dd512f62a94e6", "message": "trigger new CI check", "committedDate": "2020-04-24T11:32:25Z", "type": "commit"}]}