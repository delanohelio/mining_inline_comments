{"pr_number": 693, "pr_title": "HDDS-3220. Filesystem client should not retry on AccessControlException.", "pr_createdAt": "2020-03-18T07:43:37Z", "pr_url": "https://github.com/apache/ozone/pull/693", "timeline": [{"oid": "d93fb1bf21a8e407351c5ac699331f3f77691043", "url": "https://github.com/apache/ozone/commit/d93fb1bf21a8e407351c5ac699331f3f77691043", "message": "HDDS-3220. Filesystem client should not retry on AccessControlException.", "committedDate": "2020-03-18T07:41:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394438647", "bodyText": "Wow is it wrapped that deeply? Can we make this check a bit more robust, if any of the nested exceptions is an instanceOf AccessControlException and also check in a loop while getCause returns non-null?", "author": "arp7", "createdAt": "2020-03-18T15:33:54Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,30 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      if (t instanceof IOException) {\n+        t = t.getCause();\n+        if (t instanceof IOException) {", "originalCommit": "d93fb1bf21a8e407351c5ac699331f3f77691043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMDEzMg==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394500132", "bodyText": "null check is covered by instanceof operator which returns false if ex is null.\nMaking a change for checking ACE on each level.", "author": "swagle", "createdAt": "2020-03-18T16:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMzk0Mg==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394503942", "bodyText": "I meant - can we keep checking for ACE until we finally get null? I am not sure if any server side changes could impact how the exception is wrapped e.g. introduce more nesting.", "author": "arp7", "createdAt": "2020-03-18T17:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxNTAwOA==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394515008", "bodyText": "Oh yes, doing the same, thanks!", "author": "swagle", "createdAt": "2020-03-18T17:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8cdafd128a1efaaac5471ae7b3393f31995f9761", "chunk": "diff --git a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java\nindex 95e574cef..2e9dac330 100644\n--- a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java\n+++ b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java\n\n@@ -301,12 +301,11 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n   private boolean isAccessControlException(Exception ex) {\n     if (ex instanceof ServiceException) {\n       Throwable t = ex.getCause();\n-      if (t instanceof IOException) {\n-        t = t.getCause();\n-        if (t instanceof IOException) {\n-          t = t.getCause();\n-          return t instanceof AccessControlException;\n+      while (t != null) {\n+        if (t instanceof AccessControlException) {\n+          return true;\n         }\n+        t = t.getCause();\n       }\n     }\n     return false;\n"}}, {"oid": "8cdafd128a1efaaac5471ae7b3393f31995f9761", "url": "https://github.com/apache/ozone/commit/8cdafd128a1efaaac5471ae7b3393f31995f9761", "message": "HDDS-3220. Unwrap in a loop.", "committedDate": "2020-03-18T18:16:08Z", "type": "commit"}, {"oid": "18824cb02bf1c30e4294f461f327092deede6b70", "url": "https://github.com/apache/ozone/commit/18824cb02bf1c30e4294f461f327092deede6b70", "message": "HDDS-3220. Integration test.", "committedDate": "2020-03-18T22:22:53Z", "type": "commit"}, {"oid": "462e610681decfea7ab4059685d3aaff2da1b362", "url": "https://github.com/apache/ozone/commit/462e610681decfea7ab4059685d3aaff2da1b362", "message": "HDDS-3220. Spell check.", "committedDate": "2020-03-18T22:25:39Z", "type": "commit"}, {"oid": "3bdd446ad49d103556ff0155df121d9f9277f76f", "url": "https://github.com/apache/ozone/commit/3bdd446ad49d103556ff0155df121d9f9277f76f", "message": "HDDS-3220. Spell check.", "committedDate": "2020-03-18T22:26:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MDYyMA==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394790620", "bodyText": "@swagle Why are we skipping the null check for cause here and in line 338 ?\nAside from this, rest of the code change LGTM.", "author": "dineshchitlangia", "createdAt": "2020-03-19T04:54:53Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,29 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      while (t != null) {\n+        if (t instanceof AccessControlException) {\n+          return true;\n+        }\n+        t = t.getCause();\n+      }\n+    }\n+    return false;\n+  }\n+  \n   /**\n    * Check if exception is a OMNotLeaderException.\n    * @return OMNotLeaderException.\n    */\n   private OMNotLeaderException getNotLeaderException(Exception exception) {\n     Throwable cause = exception.getCause();\n-    if (cause != null && cause instanceof RemoteException) {\n+    if (cause instanceof RemoteException) {", "originalCommit": "3bdd446ad49d103556ff0155df121d9f9277f76f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5NTU3OQ==", "url": "https://github.com/apache/ozone/pull/693#discussion_r394795579", "bodyText": "@dineshchitlangia  Because the null check is redundant, instanceOf operator is null safe and returns false if obj reference is null.", "author": "swagle", "createdAt": "2020-03-19T05:16:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MDYyMA=="}], "type": "inlineReview", "revised_code": null}]}