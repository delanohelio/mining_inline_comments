{"pr_number": 895, "pr_title": "HDDS-3518: Add a freon generator to create directory tree and create \u2026", "pr_createdAt": "2020-05-04T15:50:49Z", "pr_url": "https://github.com/apache/ozone/pull/895", "timeline": [{"oid": "20d6faf05ecf3e4eb83cc12015e173e6897f8cfb", "url": "https://github.com/apache/ozone/commit/20d6faf05ecf3e4eb83cc12015e173e6897f8cfb", "message": "HDDS-3518: Add a freon generator to create directory tree and create files in each directory", "committedDate": "2020-05-04T15:46:28Z", "type": "commit"}, {"oid": "e222292dc62ea8ad7fd921013865de51b096ae37", "url": "https://github.com/apache/ozone/commit/e222292dc62ea8ad7fd921013865de51b096ae37", "message": "Fixed checkstyle and refactored code to avoid code duplication", "committedDate": "2020-05-05T06:08:51Z", "type": "commit"}, {"oid": "ed4308008971edeef256152c43914dd538c7ace8", "url": "https://github.com/apache/ozone/commit/ed4308008971edeef256152c43914dd538c7ace8", "message": "Fixed checkstyle..", "committedDate": "2020-05-05T09:11:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMjEyMw==", "url": "https://github.com/apache/ozone/pull/895#discussion_r420312123", "bodyText": "Can we wrap this with try {} finally {shutdown (cluster)} so that the cluster is ensured to shutdown if any verification failed?", "author": "xiaoyuyao", "createdAt": "2020-05-05T18:16:40Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClientFactory;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.om.OzoneManager;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.apache.ratis.server.impl.RaftServerImpl;\n+import org.apache.ratis.server.raftlog.RaftLog;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.URI;\n+\n+/**\n+ * Test for HadoopNestedDirTreeGenerator.\n+ */\n+public class TestHadoopDirTreeGenerator {\n+\n+  private String path;\n+\n+  /**\n+   * Create a MiniDFSCluster for testing.\n+   *\n+   * @throws IOException\n+   */\n+  @Before\n+  public void setup() {\n+    path = GenericTestUtils\n+            .getTempPath(TestOzoneClientKeyGenerator.class.getSimpleName());\n+    GenericTestUtils.setLogLevel(RaftLog.LOG, Level.DEBUG);\n+    GenericTestUtils.setLogLevel(RaftServerImpl.LOG, Level.DEBUG);\n+    File baseDir = new File(path);\n+    baseDir.mkdirs();\n+  }\n+\n+  /**\n+   * Shutdown MiniDFSCluster.\n+   */\n+  private void shutdown(MiniOzoneCluster cluster) throws IOException {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+      FileUtils.deleteDirectory(new File(path));\n+    }\n+  }\n+\n+  private MiniOzoneCluster startCluster(OzoneConfiguration conf)\n+          throws Exception {\n+    if (conf == null) {\n+      conf = new OzoneConfiguration();\n+    }\n+    MiniOzoneCluster cluster = MiniOzoneCluster.newBuilder(conf)\n+            .setNumDatanodes(5)\n+            .build();\n+\n+    cluster.waitForClusterToBeReady();\n+    cluster.waitTobeOutOfSafeMode();\n+    return cluster;\n+  }\n+\n+  @Test\n+  public void testNestedDirTreeGeneration() throws Exception {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    MiniOzoneCluster cluster = startCluster(conf);\n+    ObjectStore store =", "originalCommit": "ed4308008971edeef256152c43914dd538c7ace8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjE0OA==", "url": "https://github.com/apache/ozone/pull/895#discussion_r420522148", "bodyText": "Sure, I will update this in next PR commit.", "author": "rakeshadr", "createdAt": "2020-05-06T03:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMjEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5OTM5NA==", "url": "https://github.com/apache/ozone/pull/895#discussion_r421199394", "bodyText": "Done!", "author": "rakeshadr", "createdAt": "2020-05-07T02:16:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMjEyMw=="}], "type": "inlineReview", "revised_code": {"commit": "658ace1fe6663f985ce64e7d3186496b2fe35e49", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java\nindex e9b421f03..44ccf8363 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java\n\n@@ -88,33 +88,37 @@ private MiniOzoneCluster startCluster(OzoneConfiguration conf)\n   @Test\n   public void testNestedDirTreeGeneration() throws Exception {\n     OzoneConfiguration conf = new OzoneConfiguration();\n-    MiniOzoneCluster cluster = startCluster(conf);\n-    ObjectStore store =\n-            OzoneClientFactory.getRpcClient(conf).getObjectStore();\n-    OzoneManager om = cluster.getOzoneManager();\n-    FileOutputStream out = FileUtils.openOutputStream(new File(path,\n-            \"conf\"));\n-    cluster.getConf().writeXml(out);\n-    out.getFD().sync();\n-    out.close();\n+    MiniOzoneCluster cluster = null;\n+    try {\n+      cluster = startCluster(conf);\n+      ObjectStore store =\n+              OzoneClientFactory.getRpcClient(conf).getObjectStore();\n+      OzoneManager om = cluster.getOzoneManager();\n+      FileOutputStream out = FileUtils.openOutputStream(new File(path,\n+              \"conf\"));\n+      cluster.getConf().writeXml(out);\n+      out.getFD().sync();\n+      out.close();\n \n-    verifyDirTree(conf, store, \"vol1\", \"bucket1\",\n-            1, 1, 1);\n-    verifyDirTree(conf, store, \"vol2\", \"bucket1\",\n-            1, 5, 1);\n-    verifyDirTree(conf, store, \"vol3\", \"bucket1\",\n-            2, 5, 3);\n-    verifyDirTree(conf, store, \"vol4\", \"bucket1\",\n-            3, 2, 4);\n-    verifyDirTree(conf, store, \"vol5\", \"bucket1\",\n-            5, 4, 1);\n-\n-    shutdown(cluster);\n+      verifyDirTree(conf, store, \"vol1\", \"bucket1\",\n+              1, 1, 1, 0);\n+      verifyDirTree(conf, store, \"vol2\", \"bucket1\",\n+              1, 5, 1, 5);\n+      verifyDirTree(conf, store, \"vol3\", \"bucket1\",\n+              2, 5, 3, 1);\n+      verifyDirTree(conf, store, \"vol4\", \"bucket1\",\n+              3, 2, 4, 2);\n+      verifyDirTree(conf, store, \"vol5\", \"bucket1\",\n+              5, 4, 1, 0);\n+    } finally {\n+      shutdown(cluster);\n+    }\n   }\n \n   private void verifyDirTree(OzoneConfiguration conf, ObjectStore store,\n                              String volumeName, String bucketName,\n-                             int depth, int span, int fileCount)\n+                             int depth, int span, int fileCount,\n+                             int perFileSizeInKBs)\n           throws IOException {\n \n     store.createVolume(volumeName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjAyNg==", "url": "https://github.com/apache/ozone/pull/895#discussion_r420316026", "bodyText": "\"Hadoop FS directory system path\" is a bit confusing, do you mean \"Hadoop FS root path\"?", "author": "xiaoyuyao", "createdAt": "2020-05-05T18:23:11Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.apache.hadoop.fs.FSDataOutputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Random;\n+import java.util.concurrent.Callable;\n+\n+/**\n+ * Directory & File Generator tool to test OM performance.\n+ */\n+@Command(name = \"dtsg\",\n+    aliases = \"dfs-tree-generator\",\n+    description =\n+        \"Create nested directories and create given number of files in each \" +\n+                \"dir in any dfs compatible file system.\",\n+    versionProvider = HddsVersionProvider.class,\n+    mixinStandardHelpOptions = true,\n+    showDefaultValues = true)\n+public class HadoopDirTreeGenerator extends BaseFreonGenerator\n+    implements Callable<Void> {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(HadoopDirTreeGenerator.class);\n+\n+  @Option(names = {\"-r\", \"--rpath\"},\n+      description = \"Hadoop FS directory system path\",", "originalCommit": "ed4308008971edeef256152c43914dd538c7ace8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMTk1Mg==", "url": "https://github.com/apache/ozone/pull/895#discussion_r420521952", "bodyText": "Thanks @xiaoyuyao for the reviews.\nYes, its \"Hadoop FS root path\". I will modify to make it clear.", "author": "rakeshadr", "createdAt": "2020-05-06T03:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5OTQwNw==", "url": "https://github.com/apache/ozone/pull/895#discussion_r421199407", "bodyText": "Done!", "author": "rakeshadr", "createdAt": "2020-05-07T02:16:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "658ace1fe6663f985ce64e7d3186496b2fe35e49", "chunk": "diff --git a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java\nindex dcc03b4fa..02d39fb7f 100644\n--- a/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java\n+++ b/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java\n\n@@ -50,7 +50,7 @@\n       LoggerFactory.getLogger(HadoopDirTreeGenerator.class);\n \n   @Option(names = {\"-r\", \"--rpath\"},\n-      description = \"Hadoop FS directory system path\",\n+      description = \"Hadoop FS root path\",\n       defaultValue = \"o3fs://bucket2.vol2\")\n   private String rootPath;\n \n"}}, {"oid": "658ace1fe6663f985ce64e7d3186496b2fe35e49", "url": "https://github.com/apache/ozone/commit/658ace1fe6663f985ce64e7d3186496b2fe35e49", "message": "Fixed review comments", "committedDate": "2020-05-06T12:22:43Z", "type": "commit"}, {"oid": "8ffca85594dfd948211def386ac32e792b34fe8e", "url": "https://github.com/apache/ozone/commit/8ffca85594dfd948211def386ac32e792b34fe8e", "message": "Fixed checkstyle comment - more than 7 parameters", "committedDate": "2020-05-07T02:14:42Z", "type": "commit"}, {"oid": "15ef58f41830a3efbacfd00fe5925ea28585ac80", "url": "https://github.com/apache/ozone/commit/15ef58f41830a3efbacfd00fe5925ea28585ac80", "message": "Fixed checkstyle comment - unused imports", "committedDate": "2020-05-07T04:54:50Z", "type": "commit"}, {"oid": "437652de00b41195eee25de0ca54935a44434b98", "url": "https://github.com/apache/ozone/commit/437652de00b41195eee25de0ca54935a44434b98", "message": "trigger new CI check", "committedDate": "2020-05-09T04:11:03Z", "type": "commit"}, {"oid": "98b60faec4fc958a8eb9c008d22c1d764b678cab", "url": "https://github.com/apache/ozone/commit/98b60faec4fc958a8eb9c008d22c1d764b678cab", "message": "Modified the file size unit to bytes from KB", "committedDate": "2020-05-18T10:11:08Z", "type": "commit"}, {"oid": "85661b1ac8e59cc06920769f6bff9891bbc3d75e", "url": "https://github.com/apache/ozone/commit/85661b1ac8e59cc06920769f6bff9891bbc3d75e", "message": "Fixed failed test case which was due to the KBs to bytes filesize changes", "committedDate": "2020-05-20T04:50:09Z", "type": "commit"}, {"oid": "da4af075d68213d2255d601fcde151ecae483a21", "url": "https://github.com/apache/ozone/commit/da4af075d68213d2255d601fcde151ecae483a21", "message": "Addressing review comments", "committedDate": "2020-05-28T11:58:13Z", "type": "commit"}]}