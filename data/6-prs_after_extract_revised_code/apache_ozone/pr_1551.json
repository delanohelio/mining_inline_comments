{"pr_number": 1551, "pr_title": "HDDS-4429. Create unit test for SimpleContainerDownloader.", "pr_createdAt": "2020-11-03T15:57:04Z", "pr_url": "https://github.com/apache/ozone/pull/1551", "timeline": [{"oid": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "url": "https://github.com/apache/ozone/commit/9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "message": "HDDS-4429. Create unit test for SimpleContainerDownloader", "committedDate": "2020-11-03T15:54:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMyNzQwMA==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521327400", "bodyText": "downloadContainer may fail in two ways: IOException may be thrown immediately or the returned CompletableFuture may be completed exceptionally.  These hit different code paths in getContainerDataFromReplicas.  I think we should cover both cases.", "author": "adoroszlai", "createdAt": "2020-11-11T12:35:05Z", "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.container.replication;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.protocol.MockDatanodeDetails;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test SimpleContainerDownloader.\n+ */\n+public class TestSimpleContainerDownloader {\n+\n+  @Test\n+  public void testGetContainerDataFromReplicasHappyPath() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures();\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    Assert.assertEquals(datanodes.get(0).getUuidString(), result.toString());\n+  }\n+\n+  @Test\n+  public void testGetContainerDataFromReplicasOneFailure() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures(datanodes.get(0));\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    //first datanode is failed, second worked\n+    Assert.assertEquals(datanodes.get(1).getUuidString(), result.toString());\n+  }\n+\n+  /**\n+   * Creates downloader which fails with datanodes in the arguments.\n+   */\n+  private SimpleContainerDownloader createDownloaderWithPredefinedFailures(\n+      DatanodeDetails... failedDatanodes\n+  ) {\n+\n+    ConfigurationSource conf = new OzoneConfiguration();\n+\n+    final List<DatanodeDetails> datanodes =\n+        Arrays.asList(failedDatanodes);\n+\n+    return new SimpleContainerDownloader(conf, null) {\n+\n+      @Override\n+      protected CompletableFuture<Path> downloadContainer(\n+          long containerId,\n+          DatanodeDetails datanode\n+      ) throws IOException {\n+\n+        if (datanodes.contains(datanode)) {\n+          throw new IOException(\"Unavailable datanode\");", "originalCommit": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk1NTQ5MQ==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521955491", "bodyText": "Good point. Added a new test case.\n(As the test method is already simplified with helper methods, seems to be more simple to create a new method instead of introducing a new parametrized Junit test)", "author": "elek", "createdAt": "2020-11-12T09:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMyNzQwMA=="}], "type": "inlineReview", "revised_code": {"commit": "17e50ae544ba2deb3b66183da9ebd3e3d8b3f854", "chunk": "diff --git a/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java b/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\nindex abece9072..9ba3dc923 100644\n--- a/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\n+++ b/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\n\n@@ -47,7 +47,7 @@ public void testGetContainerDataFromReplicasHappyPath() throws Exception {\n     List<DatanodeDetails> datanodes = createDatanodes();\n \n     SimpleContainerDownloader downloader =\n-        createDownloaderWithPredefinedFailures();\n+        createDownloaderWithPredefinedFailures(true);\n \n     //WHEN\n     final Path result =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjMxMw==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521332313", "bodyText": "Not introduced in this patch, but I think this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } catch (IOException e) {\n          \n          \n            \n                              LOG.error(\"Error on replicating container: \" + containerId,\n          \n          \n            \n                                  t);\n          \n          \n            \n                            } catch (IOException e) {\n          \n          \n            \n                              LOG.error(\"Error on replicating container: \" + containerId,\n          \n          \n            \n                                  e);", "author": "adoroszlai", "createdAt": "2020-11-11T12:44:08Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java", "diffHunk": "@@ -74,21 +75,13 @@ public SimpleContainerDownloader(ConfigurationSource conf,\n     for (DatanodeDetails datanode : sourceDatanodes) {\n       try {\n         if (result == null) {\n-          GrpcReplicationClient grpcReplicationClient =\n-              new GrpcReplicationClient(datanode.getIpAddress(),\n-                  datanode.getPort(Name.STANDALONE).getValue(),\n-                  workingDirectory, securityConfig, caCert);\n-          result = grpcReplicationClient.download(containerId);\n+          result = downloadContainer(containerId, datanode);\n         } else {\n           result = result.thenApply(CompletableFuture::completedFuture)\n               .exceptionally(t -> {\n                 LOG.error(\"Error on replicating container: \" + containerId, t);\n                 try {\n-                  GrpcReplicationClient grpcReplicationClient =\n-                      new GrpcReplicationClient(datanode.getIpAddress(),\n-                          datanode.getPort(Name.STANDALONE).getValue(),\n-                          workingDirectory, securityConfig, caCert);\n-                  return grpcReplicationClient.download(containerId);\n+                  return downloadContainer(containerId, datanode);\n                 } catch (IOException e) {\n                   LOG.error(\"Error on replicating container: \" + containerId,\n                       t);", "originalCommit": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NjYyNQ==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521946625", "bodyText": "Nice catch, thx.", "author": "elek", "createdAt": "2020-11-12T09:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "1e96edd667182099017a043f90603fd06610eb14", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java\nindex 9d19f55e1..71a1e1a2b 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java\n\n@@ -84,7 +84,7 @@ public SimpleContainerDownloader(ConfigurationSource conf,\n                   return downloadContainer(containerId, datanode);\n                 } catch (IOException e) {\n                   LOG.error(\"Error on replicating container: \" + containerId,\n-                      t);\n+                      e);\n                   return null;\n                 }\n               }).thenCompose(Function.identity());\n"}}, {"oid": "1e96edd667182099017a043f90603fd06610eb14", "url": "https://github.com/apache/ozone/commit/1e96edd667182099017a043f90603fd06610eb14", "message": "Print out the right exception in LOG.error\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>", "committedDate": "2020-11-12T09:07:35Z", "type": "commit"}, {"oid": "17e50ae544ba2deb3b66183da9ebd3e3d8b3f854", "url": "https://github.com/apache/ozone/commit/17e50ae544ba2deb3b66183da9ebd3e3d8b3f854", "message": "test both direct and future wrapped exceptions", "committedDate": "2020-11-12T09:18:14Z", "type": "commit"}, {"oid": "c149ce443e5c757ba451de7f837f5a829f12b220", "url": "https://github.com/apache/ozone/commit/c149ce443e5c757ba451de7f837f5a829f12b220", "message": "test both direct and future wrapped exceptions", "committedDate": "2020-11-12T09:32:59Z", "type": "commit"}, {"oid": "125f8ee80da94228a47777006a0e818111b14304", "url": "https://github.com/apache/ozone/commit/125f8ee80da94228a47777006a0e818111b14304", "message": "Merge commit 'c149ce443e5c757ba451de7f837f5a829f12b220'; commit '17e50ae544ba2deb3b66183da9ebd3e3d8b3f854' into HDDS-4429", "committedDate": "2020-11-12T09:33:02Z", "type": "commit"}, {"oid": "9adbce2ae1c96b455f46d88955c785565cd20114", "url": "https://github.com/apache/ozone/commit/9adbce2ae1c96b455f46d88955c785565cd20114", "message": "trigger new CI check", "committedDate": "2020-11-12T19:14:03Z", "type": "commit"}, {"oid": "9eca4109b1d79b98f6eabaa4cb456d8823e5c7e3", "url": "https://github.com/apache/ozone/commit/9eca4109b1d79b98f6eabaa4cb456d8823e5c7e3", "message": "Merge remote-tracking branch 'origin/master' into HDDS-4429", "committedDate": "2020-11-13T09:20:07Z", "type": "commit"}, {"oid": "a7fc88b29efc156909344de37b9897102a414bb7", "url": "https://github.com/apache/ozone/commit/a7fc88b29efc156909344de37b9897102a414bb7", "message": "Merge remote-tracking branch 'elek/HDDS-4429' into HDDS-4429", "committedDate": "2020-11-13T09:54:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MjA5Nw==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r526342097", "bodyText": "Actually, these checks are no longer valid after 5e8aaee since SimpleContainerDownloader shuffles the datanodes.\n\n  \n    \n      ozone/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java\n    \n    \n        Lines 79 to 84\n      in\n      0aca5c7\n    \n    \n    \n    \n\n        \n          \n           //There is a chance for the download is successful but import is failed, \n        \n\n        \n          \n           //due to data corruption. We need a random selected datanode to have a \n        \n\n        \n          \n           //chance to succeed next time. \n        \n\n        \n          \n           final ArrayList<DatanodeDetails> shuffledDatanodes = \n        \n\n        \n          \n               new ArrayList<>(sourceDatanodes); \n        \n\n        \n          \n           Collections.shuffle(shuffledDatanodes);", "author": "adoroszlai", "createdAt": "2020-11-18T18:55:15Z", "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java", "diffHunk": "@@ -21,24 +21,84 @@\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n \n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n import org.apache.hadoop.hdds.protocol.MockDatanodeDetails;\n \n import org.junit.Assert;\n import org.junit.Test;\n \n-/**\n- * Test container downloader.\n+/*\n+ * Test SimpleContainerDownloader.\n  */\n public class TestSimpleContainerDownloader {\n \n   private static final String SUCCESS_PATH = \"downloaded\";\n \n+  @Test\n+  public void testGetContainerDataFromReplicasHappyPath() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures(true);\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    Assert.assertEquals(datanodes.get(0).getUuidString(), result.toString());", "originalCommit": "a7fc88b29efc156909344de37b9897102a414bb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY1ODc2Mg==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r528658762", "bodyText": "Looking into it. Seems I stepped in my own trap ;-)", "author": "elek", "createdAt": "2020-11-23T12:11:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MjA5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c54424b120dfb6c26ea2d70f370f789475b82e7c", "chunk": "diff --git a/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java b/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\nindex e63c5ce02..f29b15791 100644\n--- a/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\n+++ b/hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java\n\n@@ -102,7 +102,7 @@ public void testGetContainerDataFromReplicasAsyncFailure() throws Exception {\n   /**\n    * Test if different datanode is used for each download attempt.\n    */\n-  @Test(timeout = 1000L)\n+  @Test(timeout = 10_000L)\n   public void testRandomSelection()\n       throws ExecutionException, InterruptedException {\n \n"}}, {"oid": "e8d07ccc80681b6bb00d95c863b173254471cc59", "url": "https://github.com/apache/ozone/commit/e8d07ccc80681b6bb00d95c863b173254471cc59", "message": "Merge remote-tracking branch 'origin/master' into HDDS-4429", "committedDate": "2020-11-23T11:55:14Z", "type": "commit"}, {"oid": "62c34d7608b78cf417f1d70b07322764550425e1", "url": "https://github.com/apache/ozone/commit/62c34d7608b78cf417f1d70b07322764550425e1", "message": "fix retry test after HDDS-4453", "committedDate": "2020-11-23T12:31:29Z", "type": "commit"}, {"oid": "c54424b120dfb6c26ea2d70f370f789475b82e7c", "url": "https://github.com/apache/ozone/commit/c54424b120dfb6c26ea2d70f370f789475b82e7c", "message": "increased timeout", "committedDate": "2020-11-25T15:16:47Z", "type": "commit"}, {"oid": "38eee8a799db4a6b3bcd52a1d58ded105085787b", "url": "https://github.com/apache/ozone/commit/38eee8a799db4a6b3bcd52a1d58ded105085787b", "message": "trigger new CI check", "committedDate": "2020-11-25T17:05:27Z", "type": "commit"}, {"oid": "e5ee7b62f05807b8132ae0522badeacbf8b715d3", "url": "https://github.com/apache/ozone/commit/e5ee7b62f05807b8132ae0522badeacbf8b715d3", "message": "trigger new CI check", "committedDate": "2020-11-25T21:17:18Z", "type": "commit"}, {"oid": "2b66437098ba77ef65ad6ede3b64ebb109697f1c", "url": "https://github.com/apache/ozone/commit/2b66437098ba77ef65ad6ede3b64ebb109697f1c", "message": "trigger new CI check", "committedDate": "2020-11-26T14:51:04Z", "type": "commit"}, {"oid": "a280682b6a9301f73d8a5d2d2f832790b2dccd62", "url": "https://github.com/apache/ozone/commit/a280682b6a9301f73d8a5d2d2f832790b2dccd62", "message": "fix unit test and error handling", "committedDate": "2020-11-30T08:24:34Z", "type": "commit"}, {"oid": "2cc31cf579fc0c231b4d7c4f8e54434fde4c6fad", "url": "https://github.com/apache/ozone/commit/2cc31cf579fc0c231b4d7c4f8e54434fde4c6fad", "message": "Merge remote-tracking branch 'elek/HDDS-4429' into HDDS-4429", "committedDate": "2020-11-30T08:32:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwNTQ5NA==", "url": "https://github.com/apache/ozone/pull/1551#discussion_r532705494", "bodyText": "So if replication was slow, the previous version may have closed the client prematurely?", "author": "adoroszlai", "createdAt": "2020-11-30T15:59:08Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java", "diffHunk": "@@ -128,12 +130,20 @@ public SimpleContainerDownloader(ConfigurationSource conf,\n       DatanodeDetails datanode\n   ) throws Exception {\n     CompletableFuture<Path> result;\n-    try (GrpcReplicationClient grpcReplicationClient =\n+    GrpcReplicationClient grpcReplicationClient =\n         new GrpcReplicationClient(datanode.getIpAddress(),\n             datanode.getPort(Name.STANDALONE).getValue(),\n-            workingDirectory, securityConfig, caCert)) {\n-      result = grpcReplicationClient.download(containerId);\n-    }\n+            workingDirectory, securityConfig, caCert);\n+    result = grpcReplicationClient.download(containerId)\n+        .thenApply(r -> {\n+          try {\n+            grpcReplicationClient.close();", "originalCommit": "a280682b6a9301f73d8a5d2d2f832790b2dccd62", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}