{"pr_number": 547, "pr_title": "HDDS-2928. Implement ofs://: listStatus", "pr_createdAt": "2020-02-12T02:45:27Z", "pr_url": "https://github.com/apache/ozone/pull/547", "timeline": [{"oid": "75429cf1282dc008a8bcc7b2e76a44b629f3e439", "url": "https://github.com/apache/ozone/commit/75429cf1282dc008a8bcc7b2e76a44b629f3e439", "message": "Fix NPE for \"ozone fs -ls ofs://om/\" due to path field is null\n\nBefore fix:\n\nbash-4.2$ ozone fs -ls ofs://om/\n-ls: Fatal internal error\njava.lang.NullPointerException\n\tat org.apache.hadoop.fs.shell.PathData.expandAsGlob(PathData.java:379)\n\tat org.apache.hadoop.fs.shell.Command.expandArgument(Command.java:250)\n\tat org.apache.hadoop.fs.shell.Command.expandArguments(Command.java:233)\n\tat org.apache.hadoop.fs.shell.FsCommand.processRawArguments(FsCommand.java:104)\n\tat org.apache.hadoop.fs.shell.Command.run(Command.java:177)\n\tat org.apache.hadoop.fs.FsShell.run(FsShell.java:327)\n\tat org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)\n\tat org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:90)\n\tat org.apache.hadoop.fs.ozone.OzoneFsShell.main(OzoneFsShell.java:79)\n\nAfter fix:\n\nbash-4.2$ ozone fs -ls ofs://om/\nFound 2 items\ndrwxr-xr-x   - hadoop hadoop          0 1970-01-01 00:00 /volume1\ndrwxr-xr-x   - hadoop hadoop          0 1970-01-01 00:00 /volume2", "committedDate": "2020-02-12T02:44:23Z", "type": "commit"}, {"oid": "89fb201eeb9d04f154c01c6671a3fb89f2a7f2f3", "url": "https://github.com/apache/ozone/commit/89fb201eeb9d04f154c01c6671a3fb89f2a7f2f3", "message": "Fix listStatus root result item prefix.\n\nBefore:\n\nbash-4.2$ ozone fs -ls ofs://om/\nFound 2 items\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 01:04 /volume1\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 01:04 /volume2\n\nAfter:\n\nbash-4.2$ ozone fs -ls ofs://om/\nFound 2 items\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume2", "committedDate": "2020-02-12T02:44:44Z", "type": "commit"}, {"oid": "21ffd671caf076199a86d07073daee96ad3aea5f", "url": "https://github.com/apache/ozone/commit/21ffd671caf076199a86d07073daee96ad3aea5f", "message": "listStatus on root and volume works now, recursive or not. Tested in CLI:\n\nbash-4.2$ ozone fs -ls ofs://om/\nFound 2 items\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume2\n\nbash-4.2$ ozone fs -ls ofs://om/volume1/\nFound 1 items\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1/bucket1\n\nbash-4.2$ ozone fs -ls -R ofs://om/\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1/bucket1\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume1/bucket1/dir1\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume1/bucket1/dir1/subdir1\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume2\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume2/bucket2\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume2/bucket2/dir2\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume2/bucket2/dir2/subdir2\n\nbash-4.2$ ozone fs -ls -R ofs://om/volume1/\ndrwxr-xr-x   - hadoop hadoop          0 2020-02-12 02:27 ofs://om/volume1/bucket1\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:29 ofs://om/volume1/bucket1/dir1\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:29 ofs://om/volume1/bucket1/dir1/subdir1\n\nbash-4.2$ ozone fs -ls -R ofs://om/volume1/bucket1/\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume1/bucket1/dir1\ndrwxrwxrwx   - hadoop hadoop          0 2020-02-12 02:34 ofs://om/volume1/bucket1/dir1/subdir1", "committedDate": "2020-02-12T02:44:47Z", "type": "commit"}, {"oid": "5c5206cdd46a8cadecefd9005c5cf010909c21ac", "url": "https://github.com/apache/ozone/commit/5c5206cdd46a8cadecefd9005c5cf010909c21ac", "message": "Fix test `testGetFileStatusRoot()` due to `getFileStatusAdapterForRoot()` return value change.", "committedDate": "2020-02-12T21:11:27Z", "type": "commit"}, {"oid": "c4d28caf0bd7453551a34abe286632575983eeea", "url": "https://github.com/apache/ozone/commit/c4d28caf0bd7453551a34abe286632575983eeea", "message": "Add test testListStatusOFSRoot().", "committedDate": "2020-02-13T05:49:28Z", "type": "commit"}, {"oid": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "url": "https://github.com/apache/ozone/commit/1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "message": "Clean up code.", "committedDate": "2020-02-13T05:49:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNTc4NA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382215784", "bodyText": "NIT: can we refactor to dedup line 501-517.", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:38:36Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -492,4 +493,42 @@ private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n \n+  /**\n+   * OFS: Test recursive listStatus on root.\n+   */\n+  @Test\n+  public void testListStatusRootAndVolumeNonRecursive() throws Exception {\n+    String volume1 = getRandomNonExistVolumeName();", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2Mzc0NQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382263745", "bodyText": "done in ab03db6", "author": "smengcl", "createdAt": "2020-02-20T21:19:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNTc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ab03db64f18a75fdd5fcc0032ae7170e942576bf", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\nindex 2d4d1de1c0..d125611f9d 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\n\n@@ -494,41 +494,43 @@ private void assertKeyNotFoundException(IOException ex) {\n   }\n \n   /**\n-   * OFS: Test recursive listStatus on root.\n+   * Helper function for testListStatusRootAndVolume*.\n    */\n-  @Test\n-  public void testListStatusRootAndVolumeNonRecursive() throws Exception {\n+  private Path createRandomVolumeBucketWithDirs() throws IOException {\n     String volume1 = getRandomNonExistVolumeName();\n     String bucket1 = \"bucket-\" + RandomStringUtils.randomNumeric(5);\n     Path bucketPath1 = new Path(\"/\" + volume1 + \"/\" + bucket1);\n+\n     Path dir1 = new Path(bucketPath1, \"dir1\");\n     Path subdir1 = new Path(dir1, \"subdir1\");\n     fs.mkdirs(subdir1);\n     Path dir2 = new Path(bucketPath1, \"dir2\");\n     fs.mkdirs(dir2);\n \n-    String volume2 = getRandomNonExistVolumeName();\n-    String bucket2 = \"bucket-\" + RandomStringUtils.randomNumeric(5);\n-    Path bucketPath2 = new Path(\"/\" + volume2 + \"/\" + bucket2);\n-    Path dir3 = new Path(bucketPath2, \"dir3\");\n-    Path subdir2 = new Path(dir3, \"subdir2\");\n-    fs.mkdirs(subdir2);\n-    Path dir4 = new Path(bucketPath2, \"dir4\");\n-    fs.mkdirs(dir4);\n-\n-    // bucket\n-    FileStatus[] fileStatuses = ofs.listStatus(bucketPath1);\n-    Assert.assertEquals(2, fileStatuses.length);\n-\n-    // volume\n-    Path volume = new Path(\"/\" + volume1);\n-    FileStatus[] fileStatusesVolume = ofs.listStatus(volume);\n-    Assert.assertEquals(1, fileStatusesVolume.length);\n-\n-    // root\n+    return bucketPath1;\n+  }\n+\n+  /**\n+   * OFS: Test non-recursive listStatus on root and volume.\n+   */\n+  @Test\n+  public void testListStatusRootAndVolumeNonRecursive() throws Exception {\n+    Path bucketPath1 = createRandomVolumeBucketWithDirs();\n+    createRandomVolumeBucketWithDirs();\n+\n+    // listStatus(/volume/bucket)\n+    FileStatus[] fileStatusBucket = ofs.listStatus(bucketPath1);\n+    Assert.assertEquals(2, fileStatusBucket.length);\n+\n+    // listStatus(volume)\n+    Path volume = new Path(\"/\" + new OFSPath(bucketPath1).getVolumeName());\n+    FileStatus[] fileStatusVolume = ofs.listStatus(volume);\n+    Assert.assertEquals(1, fileStatusVolume.length);\n+\n+    // listStatus(/)\n     Path root = new Path(\"/\");\n-    FileStatus[] fileStatusesRoot = ofs.listStatus(root);\n-    Assert.assertEquals(2, fileStatusesRoot.length);\n+    FileStatus[] fileStatusRoot = ofs.listStatus(root);\n+    Assert.assertEquals(2, fileStatusRoot.length);\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNjQwMw==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382216403", "bodyText": "Can we add a test case to cover recursive list status?", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:39:50Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -492,4 +493,42 @@ private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n \n+  /**\n+   * OFS: Test recursive listStatus on root.\n+   */\n+  @Test\n+  public void testListStatusRootAndVolumeNonRecursive() throws Exception {", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3ODYyNA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382678624", "bodyText": "Done in 5048760", "author": "smengcl", "createdAt": "2020-02-21T16:27:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNjQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "ab03db64f18a75fdd5fcc0032ae7170e942576bf", "chunk": "diff --git a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\nindex 2d4d1de1c0..d125611f9d 100644\n--- a/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\n+++ b/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\n\n@@ -494,41 +494,43 @@ private void assertKeyNotFoundException(IOException ex) {\n   }\n \n   /**\n-   * OFS: Test recursive listStatus on root.\n+   * Helper function for testListStatusRootAndVolume*.\n    */\n-  @Test\n-  public void testListStatusRootAndVolumeNonRecursive() throws Exception {\n+  private Path createRandomVolumeBucketWithDirs() throws IOException {\n     String volume1 = getRandomNonExistVolumeName();\n     String bucket1 = \"bucket-\" + RandomStringUtils.randomNumeric(5);\n     Path bucketPath1 = new Path(\"/\" + volume1 + \"/\" + bucket1);\n+\n     Path dir1 = new Path(bucketPath1, \"dir1\");\n     Path subdir1 = new Path(dir1, \"subdir1\");\n     fs.mkdirs(subdir1);\n     Path dir2 = new Path(bucketPath1, \"dir2\");\n     fs.mkdirs(dir2);\n \n-    String volume2 = getRandomNonExistVolumeName();\n-    String bucket2 = \"bucket-\" + RandomStringUtils.randomNumeric(5);\n-    Path bucketPath2 = new Path(\"/\" + volume2 + \"/\" + bucket2);\n-    Path dir3 = new Path(bucketPath2, \"dir3\");\n-    Path subdir2 = new Path(dir3, \"subdir2\");\n-    fs.mkdirs(subdir2);\n-    Path dir4 = new Path(bucketPath2, \"dir4\");\n-    fs.mkdirs(dir4);\n-\n-    // bucket\n-    FileStatus[] fileStatuses = ofs.listStatus(bucketPath1);\n-    Assert.assertEquals(2, fileStatuses.length);\n-\n-    // volume\n-    Path volume = new Path(\"/\" + volume1);\n-    FileStatus[] fileStatusesVolume = ofs.listStatus(volume);\n-    Assert.assertEquals(1, fileStatusesVolume.length);\n-\n-    // root\n+    return bucketPath1;\n+  }\n+\n+  /**\n+   * OFS: Test non-recursive listStatus on root and volume.\n+   */\n+  @Test\n+  public void testListStatusRootAndVolumeNonRecursive() throws Exception {\n+    Path bucketPath1 = createRandomVolumeBucketWithDirs();\n+    createRandomVolumeBucketWithDirs();\n+\n+    // listStatus(/volume/bucket)\n+    FileStatus[] fileStatusBucket = ofs.listStatus(bucketPath1);\n+    Assert.assertEquals(2, fileStatusBucket.length);\n+\n+    // listStatus(volume)\n+    Path volume = new Path(\"/\" + new OFSPath(bucketPath1).getVolumeName());\n+    FileStatus[] fileStatusVolume = ofs.listStatus(volume);\n+    Assert.assertEquals(1, fileStatusVolume.length);\n+\n+    // listStatus(/)\n     Path root = new Path(\"/\");\n-    FileStatus[] fileStatusesRoot = ofs.listStatus(root);\n-    Assert.assertEquals(2, fileStatusesRoot.length);\n+    FileStatus[] fileStatusRoot = ofs.listStatus(root);\n+    Assert.assertEquals(2, fileStatusRoot.length);\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzI5NA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382217294", "bodyText": "NIT: Can we wrap the logic into OFSPath#isRoot?", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:41:32Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -439,11 +440,15 @@ public FileStatusAdapter getFileStatus(String path, URI uri,\n     incrementCounter(Statistic.OBJECTS_QUERY);\n     OFSPath ofsPath = new OFSPath(path);\n     String key = ofsPath.getKeyName();\n-    // getFileStatus is called for root\n+    // path is root\n     if (ofsPath.getVolumeName().isEmpty() &&\n         ofsPath.getBucketName().isEmpty()) {", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0ODI5OQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382248299", "bodyText": "Good idea. Cleaner that way.", "author": "smengcl", "createdAt": "2020-02-20T20:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDI1OQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382684259", "bodyText": "Done in f003b87", "author": "smengcl", "createdAt": "2020-02-21T16:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "f003b87c307b5b3aae91a5fe25d3b81bc945ec3d", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..79faf5bc8a 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -440,13 +440,10 @@ public FileStatusAdapter getFileStatus(String path, URI uri,\n     incrementCounter(Statistic.OBJECTS_QUERY);\n     OFSPath ofsPath = new OFSPath(path);\n     String key = ofsPath.getKeyName();\n-    // path is root\n-    if (ofsPath.getVolumeName().isEmpty() &&\n-        ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isRoot()) {\n       return getFileStatusAdapterForRoot(uri);\n     }\n-    // path is a volume\n-    if (ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isVolume()) {\n       OzoneVolume volume = objectStore.getVolume(ofsPath.getVolumeName());\n       return getFileStatusAdapterForVolume(volume, uri);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzYzMQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382217631", "bodyText": "Same as above. Can we wrap with OFSPath#isVolume?", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:42:08Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -439,11 +440,15 @@ public FileStatusAdapter getFileStatus(String path, URI uri,\n     incrementCounter(Statistic.OBJECTS_QUERY);\n     OFSPath ofsPath = new OFSPath(path);\n     String key = ofsPath.getKeyName();\n-    // getFileStatus is called for root\n+    // path is root\n     if (ofsPath.getVolumeName().isEmpty() &&\n         ofsPath.getBucketName().isEmpty()) {\n-      // Generate a FileStatusAdapter for root\n-      return rootFileStatusAdapter();\n+      return getFileStatusAdapterForRoot(uri);\n+    }\n+    // path is a volume\n+    if (ofsPath.getBucketName().isEmpty()) {", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDM2Mw==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382684363", "bodyText": "Done in f003b87", "author": "smengcl", "createdAt": "2020-02-21T16:38:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f003b87c307b5b3aae91a5fe25d3b81bc945ec3d", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..79faf5bc8a 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -440,13 +440,10 @@ public FileStatusAdapter getFileStatus(String path, URI uri,\n     incrementCounter(Statistic.OBJECTS_QUERY);\n     OFSPath ofsPath = new OFSPath(path);\n     String key = ofsPath.getKeyName();\n-    // path is root\n-    if (ofsPath.getVolumeName().isEmpty() &&\n-        ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isRoot()) {\n       return getFileStatusAdapterForRoot(uri);\n     }\n-    // path is a volume\n-    if (ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isVolume()) {\n       OzoneVolume volume = objectStore.getVolume(ofsPath.getVolumeName());\n       return getFileStatusAdapterForVolume(volume, uri);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxOTIzOA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382219238", "bodyText": "Can we have a single static RootFileStatusAdapter for all?", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:45:02Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -664,17 +732,73 @@ private FileStatusAdapter toFileStatusAdapter(OzoneFileStatus status) {\n     );\n   }\n \n+  /**\n+   * Generate a FileStatusAdapter for a volume.\n+   * @param ozoneVolume OzoneVolume object\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a volume.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForVolume(\n+      OzoneVolume ozoneVolume, URI uri) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneVolume.getName();\n+    LOG.debug(\"getFileStatusAdapterForVolume(pathStr=\" + pathStr);\n+    Path path = new Path(pathStr);\n+    return new FileStatusAdapter(\n+        0L,\n+        path,\n+        true,\n+        (short)0,\n+        0L,\n+        ozoneVolume.getCreationTime().getEpochSecond() * 1000,\n+        0L,\n+        (short)00755,  // Default directory permission, derive from ACLs later?\n+        ozoneVolume.getOwner(),\n+        ozoneVolume.getAdmin(),  // TODO: Get group of whom?\n+        path\n+    );\n+  }\n+\n+  /**\n+   * Generate a FileStatusAdapter for a bucket.\n+   * @param ozoneBucket OzoneBucket object.\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a bucket.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForBucket(\n+      OzoneBucket ozoneBucket, URI uri, String username) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n+        OZONE_URI_DELIMITER + ozoneBucket.getName();\n+    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);\n+    Path path = new Path(pathStr);\n+    return new FileStatusAdapter(\n+        0L,\n+        path,\n+        true,\n+        (short)0,\n+        0L,\n+        ozoneBucket.getCreationTime().getEpochSecond() * 1000,\n+        0L,\n+        (short)00755,  // Default directory permission, derive from ACLs later?\n+        username,  // TODO: owner and group.\n+        username,\n+        path\n+    );\n+  }\n+\n   /**\n    * Generate a FileStatusAdapter for OFS root.\n+   * @param uri Full URI to OFS root.\n    * @return FileStatusAdapter for root.\n    */\n-  private static FileStatusAdapter rootFileStatusAdapter() {\n+  private static FileStatusAdapter getFileStatusAdapterForRoot(URI uri) {\n     // Note that most fields are mimicked from HDFS FileStatus for root,\n     //  except modification time, permission, owner and group.\n-    // TODO: Revisit the return value.\n+    Path path = new Path(uri.toString() + OZONE_URI_DELIMITER);\n     return new FileStatusAdapter(", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4Nzg1OQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382687859", "bodyText": "The URI part (ofs://localhost:54607) can differ each time the client application initializes FileSystem. So I'd say we can't have a static RootFileStatusAdapter with the current impl.\nActually, the uri can be different each time getFileStatus is called, so we can't even have a class global variable to hold rootFileStatusAdapter.", "author": "smengcl", "createdAt": "2020-02-21T16:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxOTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU1MTg3OA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r383551878", "bodyText": "Agree.", "author": "xiaoyuyao", "createdAt": "2020-02-24T22:26:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxOTIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b5cc3e4035df0267b60354224980d3a4da1f89e4", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..fa0ac8e342 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -770,21 +767,12 @@ private static FileStatusAdapter getFileStatusAdapterForBucket(\n     String pathStr = uri.toString() +\n         OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n         OZONE_URI_DELIMITER + ozoneBucket.getName();\n-    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);\n     Path path = new Path(pathStr);\n-    return new FileStatusAdapter(\n-        0L,\n-        path,\n-        true,\n-        (short)0,\n-        0L,\n-        ozoneBucket.getCreationTime().getEpochSecond() * 1000,\n-        0L,\n-        (short)00755,  // Default directory permission, derive from ACLs later?\n-        username,  // TODO: owner and group.\n-        username,\n-        path\n-    );\n+    return new FileStatusAdapter(0L, path, true, (short)0, 0L,\n+        ozoneBucket.getCreationTime().getEpochSecond() * 1000, 0L,\n+        FsPermission.getDirDefault().toShort(),  // TODO: derive from ACLs later\n+        // TODO: revisit owner and group\n+        username, username, path);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxOTYwNQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382219605", "bodyText": "NIT: can we define as a const?", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:45:49Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -664,17 +732,73 @@ private FileStatusAdapter toFileStatusAdapter(OzoneFileStatus status) {\n     );\n   }\n \n+  /**\n+   * Generate a FileStatusAdapter for a volume.\n+   * @param ozoneVolume OzoneVolume object\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a volume.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForVolume(\n+      OzoneVolume ozoneVolume, URI uri) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneVolume.getName();\n+    LOG.debug(\"getFileStatusAdapterForVolume(pathStr=\" + pathStr);\n+    Path path = new Path(pathStr);\n+    return new FileStatusAdapter(\n+        0L,\n+        path,\n+        true,\n+        (short)0,\n+        0L,\n+        ozoneVolume.getCreationTime().getEpochSecond() * 1000,\n+        0L,\n+        (short)00755,  // Default directory permission, derive from ACLs later?", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5MjY2Ng==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382692666", "bodyText": "Done in b5cc3e4", "author": "smengcl", "createdAt": "2020-02-21T16:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxOTYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5cc3e4035df0267b60354224980d3a4da1f89e4", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..fa0ac8e342 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -770,21 +767,12 @@ private static FileStatusAdapter getFileStatusAdapterForBucket(\n     String pathStr = uri.toString() +\n         OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n         OZONE_URI_DELIMITER + ozoneBucket.getName();\n-    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);\n     Path path = new Path(pathStr);\n-    return new FileStatusAdapter(\n-        0L,\n-        path,\n-        true,\n-        (short)0,\n-        0L,\n-        ozoneBucket.getCreationTime().getEpochSecond() * 1000,\n-        0L,\n-        (short)00755,  // Default directory permission, derive from ACLs later?\n-        username,  // TODO: owner and group.\n-        username,\n-        path\n-    );\n+    return new FileStatusAdapter(0L, path, true, (short)0, 0L,\n+        ozoneBucket.getCreationTime().getEpochSecond() * 1000, 0L,\n+        FsPermission.getDirDefault().toShort(),  // TODO: derive from ACLs later\n+        // TODO: revisit owner and group\n+        username, username, path);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyMDQwNQ==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382220405", "bodyText": "Let do this with\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"getFileStatusAdapterForBucket(pathStr={}\", pathStr);\n}", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:47:20Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -664,17 +732,73 @@ private FileStatusAdapter toFileStatusAdapter(OzoneFileStatus status) {\n     );\n   }\n \n+  /**\n+   * Generate a FileStatusAdapter for a volume.\n+   * @param ozoneVolume OzoneVolume object\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a volume.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForVolume(\n+      OzoneVolume ozoneVolume, URI uri) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneVolume.getName();\n+    LOG.debug(\"getFileStatusAdapterForVolume(pathStr=\" + pathStr);\n+    Path path = new Path(pathStr);\n+    return new FileStatusAdapter(\n+        0L,\n+        path,\n+        true,\n+        (short)0,\n+        0L,\n+        ozoneVolume.getCreationTime().getEpochSecond() * 1000,\n+        0L,\n+        (short)00755,  // Default directory permission, derive from ACLs later?\n+        ozoneVolume.getOwner(),\n+        ozoneVolume.getAdmin(),  // TODO: Get group of whom?\n+        path\n+    );\n+  }\n+\n+  /**\n+   * Generate a FileStatusAdapter for a bucket.\n+   * @param ozoneBucket OzoneBucket object.\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a bucket.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForBucket(\n+      OzoneBucket ozoneBucket, URI uri, String username) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n+        OZONE_URI_DELIMITER + ozoneBucket.getName();\n+    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5NzEyMA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382697120", "bodyText": "done in 936f874", "author": "smengcl", "createdAt": "2020-02-21T17:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyMDQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5cc3e4035df0267b60354224980d3a4da1f89e4", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..fa0ac8e342 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -770,21 +767,12 @@ private static FileStatusAdapter getFileStatusAdapterForBucket(\n     String pathStr = uri.toString() +\n         OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n         OZONE_URI_DELIMITER + ozoneBucket.getName();\n-    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);\n     Path path = new Path(pathStr);\n-    return new FileStatusAdapter(\n-        0L,\n-        path,\n-        true,\n-        (short)0,\n-        0L,\n-        ozoneBucket.getCreationTime().getEpochSecond() * 1000,\n-        0L,\n-        (short)00755,  // Default directory permission, derive from ACLs later?\n-        username,  // TODO: owner and group.\n-        username,\n-        path\n-    );\n+    return new FileStatusAdapter(0L, path, true, (short)0, 0L,\n+        ozoneBucket.getCreationTime().getEpochSecond() * 1000, 0L,\n+        FsPermission.getDirDefault().toShort(),  // TODO: derive from ACLs later\n+        // TODO: revisit owner and group\n+        username, username, path);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyMTYyMw==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382221623", "bodyText": "similar to the one below, please add conditional debug output with parameterized log.", "author": "xiaoyuyao", "createdAt": "2020-02-20T19:49:51Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -664,17 +732,73 @@ private FileStatusAdapter toFileStatusAdapter(OzoneFileStatus status) {\n     );\n   }\n \n+  /**\n+   * Generate a FileStatusAdapter for a volume.\n+   * @param ozoneVolume OzoneVolume object\n+   * @param uri Full URI to OFS root.\n+   * @return FileStatusAdapter for a volume.\n+   */\n+  private static FileStatusAdapter getFileStatusAdapterForVolume(\n+      OzoneVolume ozoneVolume, URI uri) {\n+    String pathStr = uri.toString() +\n+        OZONE_URI_DELIMITER + ozoneVolume.getName();\n+    LOG.debug(\"getFileStatusAdapterForVolume(pathStr=\" + pathStr);", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5ODgwOA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382698808", "bodyText": "done in 3553f63", "author": "smengcl", "createdAt": "2020-02-21T17:05:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyMTYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "b5cc3e4035df0267b60354224980d3a4da1f89e4", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..fa0ac8e342 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -770,21 +767,12 @@ private static FileStatusAdapter getFileStatusAdapterForBucket(\n     String pathStr = uri.toString() +\n         OZONE_URI_DELIMITER + ozoneBucket.getVolumeName() +\n         OZONE_URI_DELIMITER + ozoneBucket.getName();\n-    LOG.debug(\"getFileStatusAdapterForBucket(pathStr=\" + pathStr);\n     Path path = new Path(pathStr);\n-    return new FileStatusAdapter(\n-        0L,\n-        path,\n-        true,\n-        (short)0,\n-        0L,\n-        ozoneBucket.getCreationTime().getEpochSecond() * 1000,\n-        0L,\n-        (short)00755,  // Default directory permission, derive from ACLs later?\n-        username,  // TODO: owner and group.\n-        username,\n-        path\n-    );\n+    return new FileStatusAdapter(0L, path, true, (short)0, 0L,\n+        ozoneBucket.getCreationTime().getEpochSecond() * 1000, 0L,\n+        FsPermission.getDirDefault().toShort(),  // TODO: derive from ACLs later\n+        // TODO: revisit owner and group\n+        username, username, path);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzQyNg==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382227426", "bodyText": "should we use startBucket as parameter to avoid creating OFSPath unnecessarily?", "author": "xiaoyuyao", "createdAt": "2020-02-20T20:01:33Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -486,6 +491,57 @@ public void makeQualified(FileStatus status, URI uri, Path path,\n     return new IteratorAdapter(bucket.listKeys(key));\n   }\n \n+  /**\n+   * Helper for OFS listStatus on root.\n+   */\n+  private List<FileStatusAdapter> listStatusRoot(\n+      boolean recursive, String startPath, long numEntries,\n+      URI uri, Path workingDir, String username) throws IOException {\n+    OFSPath ofsStartPath = new OFSPath(startPath);\n+    // list volumes for user\n+    Iterator<? extends OzoneVolume> iter = objectStore.listVolumesByUser(\n+        username, null, ofsStartPath.getVolumeName());\n+    List<FileStatusAdapter> res = new ArrayList<>();\n+    // TODO: Test continuation\n+    while (iter.hasNext() && res.size() <= numEntries) {\n+      OzoneVolume volume = iter.next();\n+      res.add(getFileStatusAdapterForVolume(volume, uri));\n+      if (recursive) {\n+        String next = volume.getName();\n+        // TODO: Check startPath\n+        res.addAll(listStatus(next, recursive, startPath,\n+            numEntries - res.size(), uri, workingDir, username));\n+      }\n+    }\n+    return res;\n+  }\n+\n+  /**\n+   * Helper for OFS listStatus on a volume.\n+   */\n+  private List<FileStatusAdapter> listStatusVolume(String volumeStr,\n+      boolean recursive, String startPath, long numEntries,\n+      URI uri, Path workingDir, String username) throws IOException {\n+    OFSPath ofsStartPath = new OFSPath(startPath);", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyODczMg==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382228732", "bodyText": "I think we can implement this with either next or startPath but not necessarily both.", "author": "xiaoyuyao", "createdAt": "2020-02-20T20:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwMzI2Ng==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382703266", "bodyText": "should we use startBucket as parameter to avoid creating OFSPath unnecessarily?\n\nDone in 41c081f", "author": "smengcl", "createdAt": "2020-02-21T17:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxMTU2OA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382711568", "bodyText": "I think we can implement this with either next or startPath but not necessarily both.\n\nI just realized that the current implementation with both continuation (startPath) and recursion might not work as expected.\ne.g. if such call is made: listStatus(pathStr=\"/\", recursive=true, startPath=\"/volume2/bucket2/dir2\"), the result won't be what we expect.\nActually, as I think again. It should just work. I just need to change listStatusVolume back to startPath. done in f94b95c", "author": "smengcl", "createdAt": "2020-02-21T17:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "f003b87c307b5b3aae91a5fe25d3b81bc945ec3d", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..79faf5bc8a 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -497,8 +494,9 @@ public void makeQualified(FileStatus status, URI uri, Path path,\n   private List<FileStatusAdapter> listStatusRoot(\n       boolean recursive, String startPath, long numEntries,\n       URI uri, Path workingDir, String username) throws IOException {\n+\n     OFSPath ofsStartPath = new OFSPath(startPath);\n-    // list volumes for user\n+    // list volumes\n     Iterator<? extends OzoneVolume> iter = objectStore.listVolumesByUser(\n         username, null, ofsStartPath.getVolumeName());\n     List<FileStatusAdapter> res = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzYzNA==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382227634", "bodyText": "Can we add OFSPath helpers as suggested above?", "author": "xiaoyuyao", "createdAt": "2020-02-20T20:01:58Z", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -511,10 +567,22 @@ public void makeQualified(FileStatus status, URI uri, Path path,\n \n     incrementCounter(Statistic.OBJECTS_LIST);\n     OFSPath ofsPath = new OFSPath(pathStr);\n-    // TODO: Subject to change in HDDS-2928.\n+\n+    // listStatus root\n+    if (ofsPath.getVolumeName().isEmpty()", "originalCommit": "1d9b2acd2a56c9a9bb6189cfdda895a073c7a0bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5OTk4Mg==", "url": "https://github.com/apache/ozone/pull/547#discussion_r382699982", "bodyText": "done in ada1ac4", "author": "smengcl", "createdAt": "2020-02-21T17:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNzYzNA=="}], "type": "inlineReview", "revised_code": {"commit": "ada1ac4b0b0164c71e912a70c495c269887cde09", "chunk": "diff --git a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\nindex a1a31a200e..166a48ca14 100644\n--- a/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n+++ b/hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java\n\n@@ -567,15 +564,11 @@ public void makeQualified(FileStatus status, URI uri, Path path,\n \n     incrementCounter(Statistic.OBJECTS_LIST);\n     OFSPath ofsPath = new OFSPath(pathStr);\n-\n-    // listStatus root\n-    if (ofsPath.getVolumeName().isEmpty()\n-        && ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isRoot()) {\n       return listStatusRoot(\n           recursive, startPath, numEntries, uri, workingDir, username);\n     }\n-    // listStatus volume\n-    if (ofsPath.getBucketName().isEmpty()) {\n+    if (ofsPath.isVolume()) {\n       return listStatusVolume(ofsPath.getVolumeName(),\n           recursive, startPath, numEntries, uri, workingDir, username);\n     }\n"}}, {"oid": "ab03db64f18a75fdd5fcc0032ae7170e942576bf", "url": "https://github.com/apache/ozone/commit/ab03db64f18a75fdd5fcc0032ae7170e942576bf", "message": "Improve comments; dedup testListStatusRootAndVolumeNonRecursive. https://github.com/apache/hadoop-ozone/pull/547#discussion_r382215784", "committedDate": "2020-02-20T21:19:36Z", "type": "commit"}, {"oid": "5048760863a73ae3712bed1f6b8b21f6ced247a8", "url": "https://github.com/apache/ozone/commit/5048760863a73ae3712bed1f6b8b21f6ced247a8", "message": "Add recursive listStatus test.", "committedDate": "2020-02-21T16:26:04Z", "type": "commit"}, {"oid": "f003b87c307b5b3aae91a5fe25d3b81bc945ec3d", "url": "https://github.com/apache/ozone/commit/f003b87c307b5b3aae91a5fe25d3b81bc945ec3d", "message": "Impl OFSPath#isRoot and OFSPath#isVolume. https://github.com/apache/hadoop-ozone/pull/547#discussion_r382217294 and https://github.com/apache/hadoop-ozone/pull/547#discussion_r382217631", "committedDate": "2020-02-21T16:37:54Z", "type": "commit"}, {"oid": "b5cc3e4035df0267b60354224980d3a4da1f89e4", "url": "https://github.com/apache/ozone/commit/b5cc3e4035df0267b60354224980d3a4da1f89e4", "message": "Use FsPermission.getDirDefault(). Root FileStatusAdapter mod time defaults to System.currentTimeMillis() now.\nhttps://github.com/apache/hadoop-ozone/pull/547#discussion_r382219605", "committedDate": "2020-02-21T16:53:14Z", "type": "commit"}, {"oid": "936f87472fcb204128b3ab53a8afd978d288076c", "url": "https://github.com/apache/ozone/commit/936f87472fcb204128b3ab53a8afd978d288076c", "message": "Improve debug message. https://github.com/apache/hadoop-ozone/pull/547#discussion_r382220405", "committedDate": "2020-02-21T17:01:37Z", "type": "commit"}, {"oid": "3553f6301a70292c4643fe8ded21e91d718334e8", "url": "https://github.com/apache/ozone/commit/3553f6301a70292c4643fe8ded21e91d718334e8", "message": "Improve debug message; Use FsPermission.getDirDefault().", "committedDate": "2020-02-21T17:05:02Z", "type": "commit"}, {"oid": "ada1ac4b0b0164c71e912a70c495c269887cde09", "url": "https://github.com/apache/ozone/commit/ada1ac4b0b0164c71e912a70c495c269887cde09", "message": "Use ofsPath.isRoot and ofsPath.isVolume to improve code readability.", "committedDate": "2020-02-21T17:07:16Z", "type": "commit"}, {"oid": "41c081f2f6e506f0942fe89ad5ced91df6e2c3d0", "url": "https://github.com/apache/ozone/commit/41c081f2f6e506f0942fe89ad5ced91df6e2c3d0", "message": "Optimize listStatusVolume: remove unnecessary new OFSPath by using startBucket instead of startPath in listStatusVolume.", "committedDate": "2020-02-21T17:14:10Z", "type": "commit"}, {"oid": "9a1860808a4304dbd1e62080c0879c533ae9043a", "url": "https://github.com/apache/ozone/commit/9a1860808a4304dbd1e62080c0879c533ae9043a", "message": "Clean up test code.", "committedDate": "2020-02-21T17:21:08Z", "type": "commit"}, {"oid": "f94b95c4148d19dd00f2c16781b9d4a33be4b891", "url": "https://github.com/apache/ozone/commit/f94b95c4148d19dd00f2c16781b9d4a33be4b891", "message": "Fix listVolumesByUser usage; listStatusVolume: Change startBucket back to startPath for correctness.", "committedDate": "2020-02-21T17:50:19Z", "type": "commit"}]}