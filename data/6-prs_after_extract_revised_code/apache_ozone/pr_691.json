{"pr_number": 691, "pr_title": "HDDS-3226. Tracing Ozone Manager DB write batch operations.", "pr_createdAt": "2020-03-17T23:48:03Z", "pr_url": "https://github.com/apache/ozone/pull/691", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTUzNg==", "url": "https://github.com/apache/ozone/pull/691#discussion_r412625536", "bodyText": "AtomicReference Do we need atomic here? As this is just used in a single thread.", "author": "bharatviswa504", "createdAt": "2020-04-22T02:37:08Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -135,10 +138,20 @@ private void flushTransactions() {\n           try(BatchOperation batchOperation = omMetadataManager.getStore()\n               .initBatchOperation()) {\n \n+            AtomicReference<String> lastTraceId = new AtomicReference<>();", "originalCommit": "4285520c082e5ef66dc3489aba397575ce5fb821", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0NDQzNA==", "url": "https://github.com/apache/ozone/pull/691#discussion_r413244434", "bodyText": "This is a workaround to update the lastTraceId from the lambda.  Java lambdas require the captured local variable must be final or effectively final.", "author": "xiaoyuyao", "createdAt": "2020-04-22T19:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "45277a16db46fd28d634eb3d6b639911670e470f", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\nindex 7c4af32838..9e467fa28f 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n\n@@ -141,17 +202,14 @@ private void flushTransactions() {\n             AtomicReference<String> lastTraceId = new AtomicReference<>();\n             readyBuffer.iterator().forEachRemaining((entry) -> {\n               try {\n-                lastTraceId.set(entry.getResponse().getOMResponse()\n-                    .getTraceID());\n-                try (Scope s1 = TracingUtil.importAndCreateScope(\n-                    \"DB-addToWriteBatch-\" + entry.getResponse()\n-                        .getOMResponse().getCmdType().toString(),\n-                    lastTraceId.get())){\n-                  s1.span().setTag(\"cmd\", entry.getResponse().getOMResponse()\n-                      .getCmdType().toString());\n-                  entry.getResponse().checkAndUpdateDB(omMetadataManager,\n-                      batchOperation);\n-                }\n+                OMResponse omResponse = entry.getResponse().getOMResponse();\n+                lastTraceId.set(omResponse.getTraceID());\n+                addToBatchWithTrace(omResponse,\n+                    (SupplierWithIOException<Void>) () -> {\n+                      entry.getResponse().checkAndUpdateDB(omMetadataManager,\n+                          batchOperation);\n+                      return null;\n+                    });\n               } catch (IOException ex) {\n                 // During Adding to RocksDB batch entry got an exception.\n                 // We should terminate the OM.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ==", "url": "https://github.com/apache/ozone/pull/691#discussion_r412628975", "bodyText": "One more question, here for DB commit Batch we are using last trace id, so DB Batch commit span will be linked with the last operation in the queue?", "author": "bharatviswa504", "createdAt": "2020-04-22T02:47:51Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -147,7 +160,11 @@ private void flushTransactions() {\n             });\n \n             long startTime = Time.monotonicNowNanos();\n-            omMetadataManager.getStore().commitBatchOperation(batchOperation);\n+            try (Scope s2 = TracingUtil.importAndCreateScope(\n+                \"DB-commitWriteBatch\", lastTraceId.get())) {", "originalCommit": "4285520c082e5ef66dc3489aba397575ce5fb821", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0Njg2MQ==", "url": "https://github.com/apache/ozone/pull/691#discussion_r413246861", "bodyText": "Yes. We are effectively piggy back commitWrite to the last Op that triggered the flush. The other choice is to do another loop of the ready buffers to add it to each of the individual Ops, which will have higher cost.", "author": "xiaoyuyao", "createdAt": "2020-04-22T19:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzMzYxMQ==", "url": "https://github.com/apache/ozone/pull/691#discussion_r413433611", "bodyText": "Got it.", "author": "bharatviswa504", "createdAt": "2020-04-23T01:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "45277a16db46fd28d634eb3d6b639911670e470f", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\nindex 7c4af32838..9e467fa28f 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java\n\n@@ -160,11 +218,12 @@ private void flushTransactions() {\n             });\n \n             long startTime = Time.monotonicNowNanos();\n-            try (Scope s2 = TracingUtil.importAndCreateScope(\n-                \"DB-commitWriteBatch\", lastTraceId.get())) {\n-              s2.span().setTag(\"BatchSize\", readyBuffer.size());\n-              omMetadataManager.getStore().commitBatchOperation(batchOperation);\n-            }\n+            flushBatchWithTrace(lastTraceId.get(), readyBuffer.size(),\n+                (SupplierWithIOException<Void>) () -> {\n+                  omMetadataManager.getStore().commitBatchOperation(\n+                      batchOperation);\n+                  return null;\n+            });\n             ozoneManagerDoubleBufferMetrics.updateFlushTime(\n                 Time.monotonicNowNanos() - startTime);\n           }\n"}}, {"oid": "45277a16db46fd28d634eb3d6b639911670e470f", "url": "https://github.com/apache/ozone/commit/45277a16db46fd28d634eb3d6b639911670e470f", "message": "Refactor to honor hdds.tracing.enabled", "committedDate": "2020-05-05T00:34:38Z", "type": "forcePushed"}, {"oid": "a58ffcfd75aa4bc86dc74422c36d04fb529b8fb9", "url": "https://github.com/apache/ozone/commit/a58ffcfd75aa4bc86dc74422c36d04fb529b8fb9", "message": "HDDS-3226. Tracing Ozone Manager DB write batch operations.", "committedDate": "2020-05-05T03:09:30Z", "type": "commit"}, {"oid": "a3d9df760db96f24d815b9191ed9102562013298", "url": "https://github.com/apache/ozone/commit/a3d9df760db96f24d815b9191ed9102562013298", "message": "fix after HDDS-3399.", "committedDate": "2020-05-05T03:09:30Z", "type": "commit"}, {"oid": "db826d786fd129d25855aa46715234be8764ca27", "url": "https://github.com/apache/ozone/commit/db826d786fd129d25855aa46715234be8764ca27", "message": "Refactor to honor hdds.tracing.enabled", "committedDate": "2020-05-05T03:09:30Z", "type": "commit"}, {"oid": "db826d786fd129d25855aa46715234be8764ca27", "url": "https://github.com/apache/ozone/commit/db826d786fd129d25855aa46715234be8764ca27", "message": "Refactor to honor hdds.tracing.enabled", "committedDate": "2020-05-05T03:09:30Z", "type": "forcePushed"}, {"oid": "b865455bc7b3b35b89733d3b61a192d163c6ee34", "url": "https://github.com/apache/ozone/commit/b865455bc7b3b35b89733d3b61a192d163c6ee34", "message": "clean up TracingUtil usage", "committedDate": "2020-05-05T03:30:27Z", "type": "commit"}, {"oid": "0ae13c85adb90f7cf3d593ce494497f8e471f98c", "url": "https://github.com/apache/ozone/commit/0ae13c85adb90f7cf3d593ce494497f8e471f98c", "message": "Fix checkstyle", "committedDate": "2020-05-05T04:39:41Z", "type": "commit"}, {"oid": "86d62074c2dab22fe56743a99a22396a7ed10534", "url": "https://github.com/apache/ozone/commit/86d62074c2dab22fe56743a99a22396a7ed10534", "message": "Fix unit test", "committedDate": "2020-05-05T05:52:12Z", "type": "commit"}]}