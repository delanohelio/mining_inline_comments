{"pr_number": 1378, "pr_title": "HDDS-4133. Use new ContainerManager in SCM.", "pr_createdAt": "2020-09-02T18:46:58Z", "pr_url": "https://github.com/apache/ozone/pull/1378", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxMzQ4Mw==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r487713483", "bodyText": "Is 0 a valid containerID ?", "author": "GlenGeng", "createdAt": "2020-09-14T07:44:07Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerID.java", "diffHunk": "@@ -41,8 +41,8 @@\n    * @param id int\n    */\n   private ContainerID(long id) {\n-    Preconditions.checkState(id > 0,\n-        \"Container ID should be a positive. %s.\", id);\n+    Preconditions.checkState(id >= 0,", "originalCommit": "a824b1b4dd3829f451cf8828d93914646e9ca0ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0OTQyNQ==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r496149425", "bodyText": "We don't create a container with ID 0, but 0 is a valid ID.\nThe reason for allowing 0 as a value for container ID is to avoid the explicit null check that we do in HDDS-1302.", "author": "nandakumar131", "createdAt": "2020-09-28T18:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxMzQ4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwODgzMw==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r488408833", "bodyText": "why not synchronize on pipeline ?", "author": "GlenGeng", "createdAt": "2020-09-15T06:09:15Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java", "diffHunk": "@@ -242,19 +286,82 @@ public void removeContainerReplica(final ContainerID id,\n   @Override\n   public void updateDeleteTransactionId(\n       final Map<ContainerID, Long> deleteTransactionMap) throws IOException {\n-    throw new UnsupportedOperationException(\"Not yet implemented!\");\n+    lock.writeLock().lock();\n+    try {\n+      containerStateManager.updateDeleteTransactionId(deleteTransactionMap);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n   }\n \n   @Override\n   public ContainerInfo getMatchingContainer(final long size, final String owner,\n-      final Pipeline pipeline, final List<ContainerID> excludedContainerIDS) {\n-    throw new UnsupportedOperationException(\"Not yet implemented!\");\n+      final Pipeline pipeline, final Set<ContainerID> excludedContainerIDs) {\n+    NavigableSet<ContainerID> containerIDs;\n+    ContainerInfo containerInfo;\n+    try {\n+      synchronized (pipeline.getId()) {", "originalCommit": "a824b1b4dd3829f451cf8828d93914646e9ca0ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MTUyNQ==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r496151525", "bodyText": "This is to avoid the warning that we get when we synchronize on the method parameter. This is just to fool the IDE.\nIn general, synchronizing on method parameter is bad. We have to fix this in a better way.", "author": "nandakumar131", "createdAt": "2020-09-28T18:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwODgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "52d93a069da553930163c7a46c0f3fa273dbc336", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\nindex 7e4009ac5..0b3fcc328 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\n\n@@ -302,8 +312,7 @@ public ContainerInfo getMatchingContainer(final long size, final String owner,\n     try {\n       synchronized (pipeline.getId()) {\n         containerIDs = getContainersForOwner(pipeline, owner);\n-        if (containerIDs.size() < numContainerPerVolume * pipelineManager.\n-            getNumHealthyVolumes(pipeline)) {\n+        if (containerIDs.size() < getOpenContainerCountPerPipeline(pipeline)) {\n           allocateContainer(pipeline, owner);\n           containerIDs = getContainersForOwner(pipeline, owner);\n         }\n"}}, {"oid": "52d93a069da553930163c7a46c0f3fa273dbc336", "url": "https://github.com/apache/ozone/commit/52d93a069da553930163c7a46c0f3fa273dbc336", "message": "HDDS-4133. Use new ContainerManager in SCM.", "committedDate": "2020-12-13T18:57:56Z", "type": "forcePushed"}, {"oid": "17da350a47d85981a474e4b8e833089de3c3ab1e", "url": "https://github.com/apache/ozone/commit/17da350a47d85981a474e4b8e833089de3c3ab1e", "message": "HDDS-4133. Use new ContainerManager in SCM.", "committedDate": "2020-12-14T06:13:16Z", "type": "forcePushed"}, {"oid": "b523583bbae485564781d5a60107f5764b2c05aa", "url": "https://github.com/apache/ozone/commit/b523583bbae485564781d5a60107f5764b2c05aa", "message": "HDDS-4133. Use new ContainerManager in SCM.", "committedDate": "2020-12-14T07:18:09Z", "type": "commit"}, {"oid": "b523583bbae485564781d5a60107f5764b2c05aa", "url": "https://github.com/apache/ozone/commit/b523583bbae485564781d5a60107f5764b2c05aa", "message": "HDDS-4133. Use new ContainerManager in SCM.", "committedDate": "2020-12-14T07:18:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxMzg3OQ==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r542213879", "bodyText": "Why call incNumListContainersOps() twice here ?", "author": "GlenGeng", "createdAt": "2020-12-14T08:58:45Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java", "diffHunk": "@@ -111,14 +135,18 @@ public ContainerInfo getContainer(final ContainerID id)\n   }\n \n   @Override\n-  public List<ContainerInfo> listContainers(final ContainerID startID,\n-                                            final int count) {\n+  public List<ContainerInfo> getContainers(final ContainerID startID,\n+                                           final int count) {\n     lock.readLock().lock();\n+    scmContainerManagerMetrics.incNumListContainersOps();\n     try {\n+      // TODO: Remove the null check, startID should not be null. Fix the unit\n+      //  test before removing the check.\n       final long start = startID == null ? 0 : startID.getId();\n       final List<ContainerID> containersIds =\n           new ArrayList<>(containerStateManager.getContainerIDs());\n       Collections.sort(containersIds);\n+      scmContainerManagerMetrics.incNumListContainersOps();", "originalCommit": "b523583bbae485564781d5a60107f5764b2c05aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMzNTE0MQ==", "url": "https://github.com/apache/ozone/pull/1378#discussion_r542335141", "bodyText": "My bad, thanks for catching it.", "author": "nandakumar131", "createdAt": "2020-12-14T12:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxMzg3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8281664c585ce0253306e0e3cbff07d1e704365", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\nindex 0b3fcc328..5ce85f6de 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerManagerImpl.java\n\n@@ -146,7 +146,6 @@ public ContainerInfo getContainer(final ContainerID id)\n       final List<ContainerID> containersIds =\n           new ArrayList<>(containerStateManager.getContainerIDs());\n       Collections.sort(containersIds);\n-      scmContainerManagerMetrics.incNumListContainersOps();\n       return containersIds.stream()\n           .filter(id -> id.getId() > start).limit(count)\n           .map(ContainerID::getProtobuf)\n"}}, {"oid": "e8281664c585ce0253306e0e3cbff07d1e704365", "url": "https://github.com/apache/ozone/commit/e8281664c585ce0253306e0e3cbff07d1e704365", "message": "Fixed Recon related issues.", "committedDate": "2020-12-15T18:55:28Z", "type": "forcePushed"}, {"oid": "2019297853d9b41f81cf253c1bec4712dce9cc93", "url": "https://github.com/apache/ozone/commit/2019297853d9b41f81cf253c1bec4712dce9cc93", "message": "Fixed Recon related issues.", "committedDate": "2020-12-15T19:08:10Z", "type": "commit"}, {"oid": "2019297853d9b41f81cf253c1bec4712dce9cc93", "url": "https://github.com/apache/ozone/commit/2019297853d9b41f81cf253c1bec4712dce9cc93", "message": "Fixed Recon related issues.", "committedDate": "2020-12-15T19:08:10Z", "type": "forcePushed"}]}