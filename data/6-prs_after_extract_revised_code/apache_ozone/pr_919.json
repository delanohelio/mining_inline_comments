{"pr_number": 919, "pr_title": "HDDS-3571. Recon: Display leader count in Datanodes page", "pr_createdAt": "2020-05-14T00:23:55Z", "pr_url": "https://github.com/apache/ozone/pull/919", "timeline": [{"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a", "url": "https://github.com/apache/ozone/commit/f82c8aec5c029d52673605ad2a4d1799ec579a7a", "message": "HDDS-3571. Recon: Display leader count in Datanodes page", "committedDate": "2020-05-14T00:14:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw==", "url": "https://github.com/apache/ozone/pull/919#discussion_r424808593", "bodyText": "Can be regular 'int' instead of 'AtomicInteger'.", "author": "avijayanhwx", "createdAt": "2020-05-14T00:41:45Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();", "originalCommit": "f82c8aec5c029d52673605ad2a4d1799ec579a7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNDUxNw==", "url": "https://github.com/apache/ozone/pull/919#discussion_r425304517", "bodyText": "I think this is to work around local variable in capturing lambdas must be final or effective final.", "author": "xiaoyuyao", "createdAt": "2020-05-14T17:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNjczOA==", "url": "https://github.com/apache/ozone/pull/919#discussion_r425316738", "bodyText": "Ah yes. I am OK with using AtomicInteger then.", "author": "avijayanhwx", "createdAt": "2020-05-14T17:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMTA5OQ==", "url": "https://github.com/apache/ozone/pull/919#discussion_r425321099", "bodyText": "@xiaoyuyao That is correct. Since increment happens inside the lambda, a regular int cannot be used.", "author": "vivekratnavel", "createdAt": "2020-05-14T17:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "005edee864474ad1912c6f09dcb49bbe9d9e18d7", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\nindex e5c63b1a0b..2924435f35 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\n\n@@ -96,7 +96,7 @@ public Response getDatanodes() {\n               leaderNode\n           );\n           pipelines.add(datanodePipeline);\n-          if (leaderNode.equals(hostname)) {\n+          if (pipeline.getLeaderId().equals(datanode.getUuid())) {\n             leaderCount.getAndIncrement();\n           }\n         } catch (PipelineNotFoundException ex) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwOTEyNQ==", "url": "https://github.com/apache/ozone/pull/919#discussion_r424809125", "bodyText": "UUID equality check is better here.\npipeline.getLeaderId().equals(datanode.getUuid())", "author": "avijayanhwx", "createdAt": "2020-05-14T00:43:53Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();\n+      DatanodeMetadata.Builder builder = DatanodeMetadata.newBuilder();\n       pipelineIDs.forEach(pipelineID -> {\n         try {\n           Pipeline pipeline = pipelineManager.getPipeline(pipelineID);\n+          String leaderNode = pipeline.getLeaderNode().getHostName();\n           DatanodePipeline datanodePipeline = new DatanodePipeline(\n               pipelineID.getId(),\n               pipeline.getType().toString(),\n-              pipeline.getFactor().getNumber()\n+              pipeline.getFactor().getNumber(),\n+              leaderNode\n           );\n           pipelines.add(datanodePipeline);\n+          if (leaderNode.equals(hostname)) {", "originalCommit": "f82c8aec5c029d52673605ad2a4d1799ec579a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "005edee864474ad1912c6f09dcb49bbe9d9e18d7", "chunk": "diff --git a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\nindex e5c63b1a0b..2924435f35 100644\n--- a/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\n+++ b/hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java\n\n@@ -96,7 +96,7 @@ public Response getDatanodes() {\n               leaderNode\n           );\n           pipelines.add(datanodePipeline);\n-          if (leaderNode.equals(hostname)) {\n+          if (pipeline.getLeaderId().equals(datanode.getUuid())) {\n             leaderCount.getAndIncrement();\n           }\n         } catch (PipelineNotFoundException ex) {\n"}}, {"oid": "005edee864474ad1912c6f09dcb49bbe9d9e18d7", "url": "https://github.com/apache/ozone/commit/005edee864474ad1912c6f09dcb49bbe9d9e18d7", "message": "Fix review comments.", "committedDate": "2020-05-14T17:49:58Z", "type": "commit"}]}