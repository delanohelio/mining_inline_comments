{"pr_number": 544, "pr_title": "HDDS-2999. Move server-related shared utilities from common to framework", "pr_createdAt": "2020-02-11T14:24:41Z", "pr_url": "https://github.com/apache/ozone/pull/544", "timeline": [{"oid": "404ca6afcd92b0166b5611b50d65596126978b40", "url": "https://github.com/apache/ozone/commit/404ca6afcd92b0166b5611b50d65596126978b40", "message": "HDDS-2999. Move server-related shared utilities from common to framework", "committedDate": "2020-02-13T10:28:32Z", "type": "commit"}, {"oid": "bcf05776ec6e01aac7bbfc792e41efaa7ce83266", "url": "https://github.com/apache/ozone/commit/bcf05776ec6e01aac7bbfc792e41efaa7ce83266", "message": "fix unit test failures", "committedDate": "2020-02-13T10:28:32Z", "type": "commit"}, {"oid": "bcf05776ec6e01aac7bbfc792e41efaa7ce83266", "url": "https://github.com/apache/ozone/commit/bcf05776ec6e01aac7bbfc792e41efaa7ce83266", "message": "fix unit test failures", "committedDate": "2020-02-13T10:28:32Z", "type": "forcePushed"}, {"oid": "bc39f17115e0fd5a7c0bb2d25861f4156f2d134d", "url": "https://github.com/apache/ozone/commit/bc39f17115e0fd5a7c0bb2d25861f4156f2d134d", "message": "move back the config key but not the default profile", "committedDate": "2020-02-13T12:21:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MzUzOA==", "url": "https://github.com/apache/ozone/pull/544#discussion_r379373538", "bodyText": "Is this removed intentionally?  The methods being tested are still present in RatisHelper.", "author": "adoroszlai", "createdAt": "2020-02-14T11:05:29Z", "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/ratis/TestRatisHelper.java", "diffHunk": "@@ -1,122 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.hadoop.hdds.ratis;\n-\n-import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n-import org.apache.ratis.conf.RaftProperties;\n-import org.junit.Assert;\n-import org.junit.Test;\n-\n-/**\n- * Test RatisHelper class.\n- */\n-public class TestRatisHelper {", "originalCommit": "bc39f17115e0fd5a7c0bb2d25861f4156f2d134d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwOTQ0OQ==", "url": "https://github.com/apache/ozone/pull/544#discussion_r379409449", "bodyText": "No, it was not intentional. I restored.", "author": "elek", "createdAt": "2020-02-14T12:39:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MzUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "eb4a2857e5b6aed96b41b872e6b3bb27d899fc98", "chunk": "diff --git a/hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/ratis/TestRatisHelper.java b/hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/ratis/TestRatisHelper.java\nnew file mode 100644\nindex 000000000..68fb0ffc4\n--- /dev/null\n+++ b/hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/ratis/TestRatisHelper.java\n\n@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.ratis;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.ratis.conf.RaftProperties;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test RatisHelper class.\n+ */\n+public class TestRatisHelper {\n+\n+  @Test\n+  public void testCreateRaftClientProperties() {\n+\n+    OzoneConfiguration ozoneConfiguration = new OzoneConfiguration();\n+    ozoneConfiguration.set(\"hdds.ratis.raft.client.rpc.watch\" +\n+        \".request.timeout\", \"30s\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.client.rpc.request\" +\n+        \".timeout\", \"30s\");\n+    ozoneConfiguration.set(\n+        \"hdds.ratis.raft.server.rpc.watch.request.timeout\", \"30s\");\n+\n+    RaftProperties raftProperties = new RaftProperties();\n+    RatisHelper.createRaftClientProperties(ozoneConfiguration, raftProperties);\n+\n+    Assert.assertEquals(\"30s\",\n+        raftProperties.get(\"raft.client.rpc.watch.request.timeout\"));\n+    Assert.assertEquals(\"30s\",\n+        raftProperties.get(\"raft.client.rpc.request.timeout\"));\n+    Assert.assertNull(\n+        raftProperties.get(\"raft.server.rpc.watch.request.timeout\"));\n+\n+  }\n+\n+  @Test\n+  public void testCreateRaftGrpcPropertiesForClient() {\n+\n+    OzoneConfiguration ozoneConfiguration = new OzoneConfiguration();\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.message.size.max\",\n+        \"30MB\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.flow.control\" +\n+        \".window\", \"1MB\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.tls.enabled\", \"true\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.tls.mutual_authn\" +\n+        \".enabled\", \"true\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.server.port\", \"100\");\n+\n+    RaftProperties raftProperties = new RaftProperties();\n+    RatisHelper.createRaftClientProperties(ozoneConfiguration, raftProperties);\n+\n+    Assert.assertEquals(\"30MB\",\n+        raftProperties.get(\"raft.grpc.message.size.max\"));\n+    Assert.assertEquals(\"1MB\",\n+        raftProperties.get(\"raft.grpc.flow.control.window\"));\n+\n+    // As we dont match tls and server raft.grpc properties. So they should\n+    // be null.\n+    Assert.assertNull(raftProperties.get(\"raft.grpc.tls.set\"));\n+    Assert.assertNull(raftProperties.get(\"raft.grpc.tls.mutual_authn.enabled\"));\n+    Assert.assertNull(raftProperties.get(\"raft.grpc.server.port\"));\n+\n+  }\n+\n+\n+  @Test\n+  public void testCreateRaftGrpcPropertiesForServer() {\n+\n+    OzoneConfiguration ozoneConfiguration = new OzoneConfiguration();\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.message.size.max\",\n+        \"30MB\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.flow.control\" +\n+        \".window\", \"1MB\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.tls.enabled\",\n+        \"true\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.tls.mutual_authn\" +\n+        \".enabled\", \"true\");\n+    ozoneConfiguration.set(\"hdds.ratis.raft.grpc.server.port\",\n+        \"100\");\n+\n+    RaftProperties raftProperties = new RaftProperties();\n+    RatisHelper.createRaftServerProperties(ozoneConfiguration,\n+        raftProperties);\n+\n+    Assert.assertEquals(\"30MB\",\n+        raftProperties.get(\"raft.grpc.message.size.max\"));\n+    Assert.assertEquals(\"1MB\",\n+        raftProperties.get(\"raft.grpc.flow.control.window\"));\n+    Assert.assertEquals(\"true\",\n+        raftProperties.get(\"raft.grpc.tls.enabled\"));\n+    Assert.assertEquals(\"true\",\n+        raftProperties.get(\"raft.grpc.tls.mutual_authn.enabled\"));\n+    Assert.assertEquals(\"100\",\n+        raftProperties.get(\"raft.grpc.server.port\"));\n+\n+  }\n+\n+  @Test\n+  public void testCreateRaftServerProperties() {\n+\n+    OzoneConfiguration ozoneConfiguration = new OzoneConfiguration();\n+    ozoneConfiguration.set(\n+        \"hdds.ratis.raft.server.rpc.watch.request.timeout\", \"30s\");\n+    ozoneConfiguration.set(\n+        \"hdds.ratis.raft.server.rpc.request.timeout\", \"30s\");\n+    ozoneConfiguration.set(\n+        \"hdds.ratis.raft.client.rpc.request.timeout\", \"30s\");\n+\n+    RaftProperties raftProperties = new RaftProperties();\n+    RatisHelper.createRaftServerProperties(ozoneConfiguration, raftProperties);\n+\n+    Assert.assertEquals(\"30s\",\n+        raftProperties.get(\"raft.server.rpc.watch.request.timeout\"));\n+    Assert.assertEquals(\"30s\",\n+        raftProperties.get(\"raft.server.rpc.request.timeout\"));\n+    Assert.assertNull(raftProperties.get(\"raft.client.rpc.request.timeout\"));\n+\n+  }\n+}\n"}}, {"oid": "eb4a2857e5b6aed96b41b872e6b3bb27d899fc98", "url": "https://github.com/apache/ozone/commit/eb4a2857e5b6aed96b41b872e6b3bb27d899fc98", "message": "Merge remote-tracking branch 'origin/master' into HDDS-2999", "committedDate": "2020-02-14T17:13:23Z", "type": "commit"}]}