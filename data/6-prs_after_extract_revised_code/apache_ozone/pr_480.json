{"pr_number": 480, "pr_title": "HDDS-2927. Cache EndPoint tasks instead of creating them all the time in RunningDatanodeState", "pr_createdAt": "2020-01-22T14:35:14Z", "pr_url": "https://github.com/apache/ozone/pull/480", "timeline": [{"oid": "696509d5d0512eba0e6d34971225d38672264cfc", "url": "https://github.com/apache/ozone/commit/696509d5d0512eba0e6d34971225d38672264cfc", "message": "HDDS-2927. Cache EndPoint tasks instead of creating them all the time.", "committedDate": "2020-01-22T14:31:49Z", "type": "commit"}, {"oid": "0885a2b90b750e756698bdd16304d78429532eef", "url": "https://github.com/apache/ozone/commit/0885a2b90b750e756698bdd16304d78429532eef", "message": " HDDS-2927. Cache EndPoint tasks instead of creating them all the time.", "committedDate": "2020-01-23T02:35:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNTcyMQ==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370225721", "bodyText": "Shouldn't this be state instead of endpoint.getState()?  Assuming the endpoint state is constant during initialization, wouldn't this create several instances of the same type (eg. RegisterEndpointTask) for each endpoint?", "author": "adoroszlai", "createdAt": "2020-01-23T16:33:32Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();\n+\n+      for (EndPointStates state : EndPointStates.values()) {\n+        Callable<EndPointStates> endPointTask = null;\n+        switch (endpoint.getState()) {", "originalCommit": "0885a2b90b750e756698bdd16304d78429532eef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ1MjI0Mw==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370452243", "bodyText": "Yes, it should be state, it's my typo. Here we will create endpoint task for each state type.", "author": "linyiqun", "createdAt": "2020-01-24T02:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNTcyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fd43d26200eccf869de55a6c8b34a312e420154", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\nindex d41f6394d9..779b1a21fb 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n\n@@ -54,7 +55,7 @@\n   private final StateContext context;\n   private CompletionService<EndPointStates> ecs;\n   /** Cache the end point task per end point per end point state. */\n-  private Map<String, Map<EndPointStates,\n+  private Map<EndpointStateMachine, Map<EndPointStates,\n       Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNjUzNw==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370226537", "bodyText": "Nit: no need to store null task for shutdown state.", "author": "adoroszlai", "createdAt": "2020-01-23T16:34:52Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();\n+\n+      for (EndPointStates state : EndPointStates.values()) {\n+        Callable<EndPointStates> endPointTask = null;\n+        switch (endpoint.getState()) {\n+        case GETVERSION:\n+          endPointTask = new VersionEndpointTask(endpoint, conf,\n+              context.getParent().getContainer());\n+          break;\n+        case REGISTER:\n+          endPointTask = RegisterEndpointTask.newBuilder()\n+              .setConfig(conf)\n+              .setEndpointStateMachine(endpoint)\n+              .setContext(context)\n+              .setDatanodeDetails(context.getParent().getDatanodeDetails())\n+              .setOzoneContainer(context.getParent().getContainer())\n+              .build();\n+          break;\n+        case HEARTBEAT:\n+          endPointTask = HeartbeatEndpointTask.newBuilder()\n+              .setConfig(conf)\n+              .setEndpointStateMachine(endpoint)\n+              .setDatanodeDetails(context.getParent().getDatanodeDetails())\n+              .setContext(context)\n+              .build();\n+          break;\n+        case SHUTDOWN:\n+          break;\n+        }\n+        endpointTaskForState.put(state, endPointTask);", "originalCommit": "0885a2b90b750e756698bdd16304d78429532eef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ1MjM0NA==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370452344", "bodyText": "Have removed SHUTDOWN switch case.", "author": "linyiqun", "createdAt": "2020-01-24T02:36:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNjUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "9fd43d26200eccf869de55a6c8b34a312e420154", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\nindex d41f6394d9..779b1a21fb 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n\n@@ -54,7 +55,7 @@\n   private final StateContext context;\n   private CompletionService<EndPointStates> ecs;\n   /** Cache the end point task per end point per end point state. */\n-  private Map<String, Map<EndPointStates,\n+  private Map<EndpointStateMachine, Map<EndPointStates,\n       Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzA0Mw==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370227043", "bodyText": "Nit: EnumMap is better suited for maps keyed by enums.", "author": "adoroszlai", "createdAt": "2020-01-23T16:35:42Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();", "originalCommit": "0885a2b90b750e756698bdd16304d78429532eef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ1MjM5OQ==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370452399", "bodyText": "Have addressed this comment", "author": "linyiqun", "createdAt": "2020-01-24T02:37:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzA0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9fd43d26200eccf869de55a6c8b34a312e420154", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\nindex d41f6394d9..779b1a21fb 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n\n@@ -54,7 +55,7 @@\n   private final StateContext context;\n   private CompletionService<EndPointStates> ecs;\n   /** Cache the end point task per end point per end point state. */\n-  private Map<String, Map<EndPointStates,\n+  private Map<EndpointStateMachine, Map<EndPointStates,\n       Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzg5Ng==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370227896", "bodyText": "Can you please explain why a string-based map is better than using the endpoint itself as a key?", "author": "adoroszlai", "createdAt": "2020-01-23T16:37:05Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -98,35 +148,14 @@ public void execute(ExecutorService executor) {\n       }\n     }\n   }\n-  //TODO : Cache some of these tasks instead of creating them\n-  //all the time.\n-  private Callable<EndpointStateMachine.EndPointStates>\n-      getEndPointTask(EndpointStateMachine endpoint) {\n-    switch (endpoint.getState()) {\n-    case GETVERSION:\n-      return new VersionEndpointTask(endpoint, conf, context.getParent()\n-          .getContainer());\n-    case REGISTER:\n-      return  RegisterEndpointTask.newBuilder()\n-          .setConfig(conf)\n-          .setEndpointStateMachine(endpoint)\n-          .setContext(context)\n-          .setDatanodeDetails(context.getParent().getDatanodeDetails())\n-          .setOzoneContainer(context.getParent().getContainer())\n-          .build();\n-    case HEARTBEAT:\n-      return HeartbeatEndpointTask.newBuilder()\n-          .setConfig(conf)\n-          .setEndpointStateMachine(endpoint)\n-          .setDatanodeDetails(context.getParent().getDatanodeDetails())\n-          .setContext(context)\n-          .build();\n-    case SHUTDOWN:\n-      break;\n-    default:\n-      throw new IllegalArgumentException(\"Illegal Argument.\");\n+\n+  private Callable<EndPointStates> getEndPointTask(\n+      EndpointStateMachine endpoint) {\n+    if (endpointTasks.containsKey(endpoint.toString())) {\n+      return endpointTasks.get(endpoint.toString()).get(endpoint.getState());", "originalCommit": "0885a2b90b750e756698bdd16304d78429532eef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ1MjY5Mw==", "url": "https://github.com/apache/ozone/pull/480#discussion_r370452693", "bodyText": "I just wan to use a more simple identity to indicate the different  Endpoint instance. So I use the endpoint address. But I have updated this to use Endpoint itself now.", "author": "linyiqun", "createdAt": "2020-01-24T02:39:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9fd43d26200eccf869de55a6c8b34a312e420154", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\nindex d41f6394d9..779b1a21fb 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java\n\n@@ -151,8 +155,8 @@ public void execute(ExecutorService executor) {\n \n   private Callable<EndPointStates> getEndPointTask(\n       EndpointStateMachine endpoint) {\n-    if (endpointTasks.containsKey(endpoint.toString())) {\n-      return endpointTasks.get(endpoint.toString()).get(endpoint.getState());\n+    if (endpointTasks.containsKey(endpoint)) {\n+      return endpointTasks.get(endpoint).get(endpoint.getState());\n     } else {\n       throw new IllegalArgumentException(\"Illegal endpoint: \" + endpoint);\n     }\n"}}, {"oid": "9fd43d26200eccf869de55a6c8b34a312e420154", "url": "https://github.com/apache/ozone/commit/9fd43d26200eccf869de55a6c8b34a312e420154", "message": "HDDS-2927. Address minor review comments.", "committedDate": "2020-01-24T02:34:27Z", "type": "commit"}]}