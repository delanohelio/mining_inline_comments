{"pr_number": 501, "pr_title": "HDDS-2944. Handle replay of KeyCommitRequest and DirectoryCreateRequest", "pr_createdAt": "2020-01-29T01:32:24Z", "pr_url": "https://github.com/apache/ozone/pull/501", "timeline": [{"oid": "83c18d1346863a3dfd822dd4154bc1137ef8a345", "url": "https://github.com/apache/ozone/commit/83c18d1346863a3dfd822dd4154bc1137ef8a345", "message": "rebase", "committedDate": "2020-01-30T01:04:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM0MDIwMA==", "url": "https://github.com/apache/ozone/pull/501#discussion_r373340200", "bodyText": "Is this the expected behavior, as the original code has returned normal OMResponse.", "author": "bharatviswa504", "createdAt": "2020-01-31T07:04:02Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -126,16 +143,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     boolean acquiredLock = false;\n     IOException exception = null;\n     OMClientResponse omClientResponse = null;\n+    Result result = null;\n     try {\n       // check Acl\n       checkKeyAcls(ozoneManager, volumeName, bucketName, keyName,\n           IAccessAuthorizer.ACLType.CREATE, OzoneObj.ResourceType.KEY);\n \n       // Check if this is the root of the filesystem.\n       if (keyName.length() == 0) {\n-        return new OMDirectoryCreateResponse(null,\n-            omResponse.setCreateDirectoryResponse(\n-                CreateDirectoryResponse.newBuilder()).build());\n+        throw new OMException(\"Directory create failed. Cannot create \" +", "originalCommit": "83c18d1346863a3dfd822dd4154bc1137ef8a345", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwMjg5MA==", "url": "https://github.com/apache/ozone/pull/501#discussion_r373602890", "bodyText": "I thought the previous response was wrong. We should return the correct error code, right?", "author": "hanishakoneru", "createdAt": "2020-01-31T17:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM0MDIwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1OTI0OA==", "url": "https://github.com/apache/ozone/pull/501#discussion_r374259248", "bodyText": "Yeah the change seems correct to me. @bharatviswa504 what do you think?", "author": "arp7", "createdAt": "2020-02-03T18:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM0MDIwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxMDY0Mg==", "url": "https://github.com/apache/ozone/pull/501#discussion_r374310642", "bodyText": "Looks like hdfs does the same\nTried on a HDFS cluster.\n[root@ozone-test-bh-2 ~]# hdfs dfs -mkdir hdfs://ozone-test-bh-6.vpc.cloudera.com:8020\nmkdir: Call From ozone-test-bh-2.vpc.cloudera.com/10.65.51.138 to ozone-test-bh-6.vpc.cloudera.com:8020 failed on connection exception: java.net.ConnectException: Connection refused; For more details see:  http://wiki.apache.org/hadoop/ConnectionRefused\n[root@ozone-test-bh-2 ~]# hdfs dfs -mkdir hdfs://ozone-test-bh-2.vpc.cloudera.com:8020\nmkdir: Item: hdfs://ozone-test-bh-2.vpc.cloudera.com:8020 parent's path is null. This can happen if mkdir is called on root, so there's no parent.': No such file or directory [root@ozone-test-bh-2 ~]# hdfs dfs -mkdir hdfs://ozone-test-bh-2.vpc.cloudera.com:8020/ mkdir: hdfs://ozone-test-bh-2.vpc.cloudera.com:8020/': File exists", "author": "bharatviswa504", "createdAt": "2020-02-03T20:00:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM0MDIwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MDc4OQ==", "url": "https://github.com/apache/ozone/pull/501#discussion_r377360789", "bodyText": "This change breaks Contract tests too.\nSo instead of throwing an exception, I am returning a Result code. Currently, the createDirectory client API returns a void. And added a TODO to return a boolean instead and then we can pass false when directory already exists.", "author": "hanishakoneru", "createdAt": "2020-02-10T22:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM0MDIwMA=="}], "type": "inlineReview", "revised_code": {"commit": "51705ccc8c01225039ce59fa85cc91940e84d6c8", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\nindex a50977962f..f700dc2fbe 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n\n@@ -143,7 +126,6 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     boolean acquiredLock = false;\n     IOException exception = null;\n     OMClientResponse omClientResponse = null;\n-    Result result = null;\n     try {\n       // check Acl\n       checkKeyAcls(ozoneManager, volumeName, bucketName, keyName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3MzI3MA==", "url": "https://github.com/apache/ozone/pull/501#discussion_r374973270", "bodyText": "Minor NIT:\nwe can set result = Result.Failure in the beginning, in that way we don't need if check.", "author": "bharatviswa504", "createdAt": "2020-02-04T23:02:15Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -160,52 +178,86 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n+            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n+\n+        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n+            dirKeyInfo);\n+      } else {\n+        // omDirectoryResult == DIRECTORY_EXITS\n+        // Check if this is a replay of ratis logs\n+        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n+            bucketName, keyName);\n+        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n+        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n+          throw new OMReplayException();\n+        } else {\n+          result = Result.DIRECTORY_ALREADY_EXISTS;\n+          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n+              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n+              DIRECTORY_ALREADY_EXISTS);\n+        }\n       }\n-      // if directory already exists do nothing or do we need to throw\n-      // exception? Current KeyManagerImpl code does just return, following\n-      // similar approach.\n-\n-      omResponse.setCreateDirectoryResponse(\n-          CreateDirectoryResponse.newBuilder());\n-      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n-          omResponse.build());\n \n+      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      exception = ex;\n-      omClientResponse = new OMDirectoryCreateResponse(null,\n-          createErrorOMResponse(omResponse, exception));\n+      if (ex instanceof OMReplayException) {\n+        result = Result.REPLAY;\n+        omClientResponse = new OMDirectoryCreateResponse(\n+            createReplayOMResponse(omResponse));\n+      } else {\n+        if (result == null) {", "originalCommit": "83c18d1346863a3dfd822dd4154bc1137ef8a345", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51705ccc8c01225039ce59fa85cc91940e84d6c8", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\nindex a50977962f..f700dc2fbe 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n\n@@ -178,50 +160,31 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n-\n-        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n-            dirKeyInfo);\n-      } else {\n-        // omDirectoryResult == DIRECTORY_EXITS\n-        // Check if this is a replay of ratis logs\n-        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n-            bucketName, keyName);\n-        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n-        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n-          throw new OMReplayException();\n-        } else {\n-          result = Result.DIRECTORY_ALREADY_EXISTS;\n-          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n-              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n-              DIRECTORY_ALREADY_EXISTS);\n-        }\n+            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n       }\n+      // if directory already exists do nothing or do we need to throw\n+      // exception? Current KeyManagerImpl code does just return, following\n+      // similar approach.\n+\n+      omResponse.setCreateDirectoryResponse(\n+          CreateDirectoryResponse.newBuilder());\n+      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n+          omResponse.build());\n \n-      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      if (ex instanceof OMReplayException) {\n-        result = Result.REPLAY;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createReplayOMResponse(omResponse));\n-      } else {\n-        if (result == null) {\n-          result = Result.FAILURE;\n-        }\n-        exception = ex;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createErrorOMResponse(omResponse, exception));\n-      }\n+      exception = ex;\n+      omClientResponse = new OMDirectoryCreateResponse(null,\n+          createErrorOMResponse(omResponse, exception));\n     } finally {\n       if (omClientResponse != null) {\n         omClientResponse.setFlushFuture(\n-            omDoubleBufferHelper.add(omClientResponse,\n-                trxnLogIndex));\n+            ozoneManagerDoubleBufferHelper.add(omClientResponse,\n+                transactionLogIndex));\n       }\n       if (acquiredLock) {\n         omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3MzUyNw==", "url": "https://github.com/apache/ozone/pull/501#discussion_r374973527", "bodyText": "Minor:\nisDebugEnabled check.", "author": "bharatviswa504", "createdAt": "2020-02-04T23:02:55Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -160,52 +178,86 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n+            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n+\n+        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n+            dirKeyInfo);\n+      } else {\n+        // omDirectoryResult == DIRECTORY_EXITS\n+        // Check if this is a replay of ratis logs\n+        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n+            bucketName, keyName);\n+        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n+        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n+          throw new OMReplayException();\n+        } else {\n+          result = Result.DIRECTORY_ALREADY_EXISTS;\n+          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n+              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n+              DIRECTORY_ALREADY_EXISTS);\n+        }\n       }\n-      // if directory already exists do nothing or do we need to throw\n-      // exception? Current KeyManagerImpl code does just return, following\n-      // similar approach.\n-\n-      omResponse.setCreateDirectoryResponse(\n-          CreateDirectoryResponse.newBuilder());\n-      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n-          omResponse.build());\n \n+      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      exception = ex;\n-      omClientResponse = new OMDirectoryCreateResponse(null,\n-          createErrorOMResponse(omResponse, exception));\n+      if (ex instanceof OMReplayException) {\n+        result = Result.REPLAY;\n+        omClientResponse = new OMDirectoryCreateResponse(\n+            createReplayOMResponse(omResponse));\n+      } else {\n+        if (result == null) {\n+          result = Result.FAILURE;\n+        }\n+        exception = ex;\n+        omClientResponse = new OMDirectoryCreateResponse(\n+            createErrorOMResponse(omResponse, exception));\n+      }\n     } finally {\n       if (omClientResponse != null) {\n         omClientResponse.setFlushFuture(\n-            ozoneManagerDoubleBufferHelper.add(omClientResponse,\n-                transactionLogIndex));\n+            omDoubleBufferHelper.add(omClientResponse,\n+                trxnLogIndex));\n       }\n       if (acquiredLock) {\n         omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n             bucketName);\n       }\n     }\n \n-    auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_DIRECTORY,\n-        auditMap, exception, userInfo));\n+    if (result != Result.REPLAY) {\n+      auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_DIRECTORY,\n+          auditMap, exception, userInfo));\n+    }\n \n-    if (exception == null) {\n-      LOG.debug(\"Directory is successfully created for Key: {} in \" +\n-              \"volume/bucket:{}/{}\", keyName, volumeName, bucketName);\n+    switch (result) {\n+    case SUCCESS:\n       omMetrics.incNumKeys();\n-      return omClientResponse;\n-    } else {\n-      LOG.error(\"CreateDirectory failed for Key: {} in volume/bucket:{}/{}\",\n-          keyName, volumeName, bucketName, exception);\n-      omMetrics.incNumCreateDirectoryFails();\n-      return omClientResponse;\n+      LOG.debug(\"Directory created. Volume:{}, Bucket:{}, Key:{}\", volumeName,\n+          bucketName, keyName);\n+      break;\n+    case REPLAY:\n+      LOG.debug(\"Replayed Transaction {} ignored. Request: {}\", trxnLogIndex,", "originalCommit": "83c18d1346863a3dfd822dd4154bc1137ef8a345", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51705ccc8c01225039ce59fa85cc91940e84d6c8", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\nindex a50977962f..f700dc2fbe 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n\n@@ -178,50 +160,31 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n-\n-        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n-            dirKeyInfo);\n-      } else {\n-        // omDirectoryResult == DIRECTORY_EXITS\n-        // Check if this is a replay of ratis logs\n-        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n-            bucketName, keyName);\n-        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n-        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n-          throw new OMReplayException();\n-        } else {\n-          result = Result.DIRECTORY_ALREADY_EXISTS;\n-          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n-              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n-              DIRECTORY_ALREADY_EXISTS);\n-        }\n+            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n       }\n+      // if directory already exists do nothing or do we need to throw\n+      // exception? Current KeyManagerImpl code does just return, following\n+      // similar approach.\n+\n+      omResponse.setCreateDirectoryResponse(\n+          CreateDirectoryResponse.newBuilder());\n+      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n+          omResponse.build());\n \n-      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      if (ex instanceof OMReplayException) {\n-        result = Result.REPLAY;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createReplayOMResponse(omResponse));\n-      } else {\n-        if (result == null) {\n-          result = Result.FAILURE;\n-        }\n-        exception = ex;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createErrorOMResponse(omResponse, exception));\n-      }\n+      exception = ex;\n+      omClientResponse = new OMDirectoryCreateResponse(null,\n+          createErrorOMResponse(omResponse, exception));\n     } finally {\n       if (omClientResponse != null) {\n         omClientResponse.setFlushFuture(\n-            omDoubleBufferHelper.add(omClientResponse,\n-                trxnLogIndex));\n+            ozoneManagerDoubleBufferHelper.add(omClientResponse,\n+                transactionLogIndex));\n       }\n       if (acquiredLock) {\n         omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MDY2Mg==", "url": "https://github.com/apache/ozone/pull/501#discussion_r374980662", "bodyText": "omMetrics.incNumCreateDirectoryFails(); this is missing.", "author": "bharatviswa504", "createdAt": "2020-02-04T23:22:34Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -160,52 +178,86 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n+            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n+\n+        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n+            dirKeyInfo);\n+      } else {\n+        // omDirectoryResult == DIRECTORY_EXITS\n+        // Check if this is a replay of ratis logs\n+        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n+            bucketName, keyName);\n+        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n+        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n+          throw new OMReplayException();\n+        } else {\n+          result = Result.DIRECTORY_ALREADY_EXISTS;\n+          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n+              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n+              DIRECTORY_ALREADY_EXISTS);\n+        }\n       }\n-      // if directory already exists do nothing or do we need to throw\n-      // exception? Current KeyManagerImpl code does just return, following\n-      // similar approach.\n-\n-      omResponse.setCreateDirectoryResponse(\n-          CreateDirectoryResponse.newBuilder());\n-      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n-          omResponse.build());\n \n+      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      exception = ex;\n-      omClientResponse = new OMDirectoryCreateResponse(null,\n-          createErrorOMResponse(omResponse, exception));\n+      if (ex instanceof OMReplayException) {\n+        result = Result.REPLAY;\n+        omClientResponse = new OMDirectoryCreateResponse(\n+            createReplayOMResponse(omResponse));\n+      } else {\n+        if (result == null) {\n+          result = Result.FAILURE;\n+        }\n+        exception = ex;\n+        omClientResponse = new OMDirectoryCreateResponse(\n+            createErrorOMResponse(omResponse, exception));\n+      }\n     } finally {\n       if (omClientResponse != null) {\n         omClientResponse.setFlushFuture(\n-            ozoneManagerDoubleBufferHelper.add(omClientResponse,\n-                transactionLogIndex));\n+            omDoubleBufferHelper.add(omClientResponse,\n+                trxnLogIndex));\n       }\n       if (acquiredLock) {\n         omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n             bucketName);\n       }\n     }\n \n-    auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_DIRECTORY,\n-        auditMap, exception, userInfo));\n+    if (result != Result.REPLAY) {\n+      auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_DIRECTORY,\n+          auditMap, exception, userInfo));\n+    }\n \n-    if (exception == null) {\n-      LOG.debug(\"Directory is successfully created for Key: {} in \" +\n-              \"volume/bucket:{}/{}\", keyName, volumeName, bucketName);\n+    switch (result) {\n+    case SUCCESS:\n       omMetrics.incNumKeys();\n-      return omClientResponse;\n-    } else {\n-      LOG.error(\"CreateDirectory failed for Key: {} in volume/bucket:{}/{}\",\n-          keyName, volumeName, bucketName, exception);\n-      omMetrics.incNumCreateDirectoryFails();\n-      return omClientResponse;\n+      LOG.debug(\"Directory created. Volume:{}, Bucket:{}, Key:{}\", volumeName,\n+          bucketName, keyName);\n+      break;\n+    case REPLAY:\n+      LOG.debug(\"Replayed Transaction {} ignored. Request: {}\", trxnLogIndex,\n+          createDirectoryRequest);\n+      break;\n+    case DIRECTORY_ALREADY_EXISTS:\n+      LOG.error(\"Directory already exists. Volume:{}, Bucket:{}, Key{}\",\n+          volumeName, bucketName, keyName, exception);\n+      break;\n+    case FAILURE:\n+      LOG.error(\"Directory creation failed. Volume:{}, Bucket:{}, Key{}. \" +", "originalCommit": "83c18d1346863a3dfd822dd4154bc1137ef8a345", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51705ccc8c01225039ce59fa85cc91940e84d6c8", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\nindex a50977962f..f700dc2fbe 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java\n\n@@ -178,50 +160,31 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       } else if (omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH ||\n           omDirectoryResult == NONE) {\n         dirKeyInfo = createDirectoryKeyInfo(ozoneManager, omBucketInfo,\n-            volumeName, bucketName, keyName, keyArgs, trxnLogIndex);\n+            volumeName, bucketName, keyName, keyArgs, transactionLogIndex);\n \n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 dirKeyInfo.getKeyName())),\n-            new CacheValue<>(Optional.of(dirKeyInfo), trxnLogIndex));\n-\n-        omClientResponse = new OMDirectoryCreateResponse(omResponse.build(),\n-            dirKeyInfo);\n-      } else {\n-        // omDirectoryResult == DIRECTORY_EXITS\n-        // Check if this is a replay of ratis logs\n-        String dirKey = omMetadataManager.getOzoneDirKey(volumeName,\n-            bucketName, keyName);\n-        OmKeyInfo dbKeyInfo = omMetadataManager.getKeyTable().get(dirKey);\n-        if (isReplay(ozoneManager, dbKeyInfo.getUpdateID(), trxnLogIndex)) {\n-          throw new OMReplayException();\n-        } else {\n-          result = Result.DIRECTORY_ALREADY_EXISTS;\n-          throw new OMException(\"Directory \" + dirKey + \"already exists in \" +\n-              \"volume/bucket: \" + volumeName + \"/\" + bucketName,\n-              DIRECTORY_ALREADY_EXISTS);\n-        }\n+            new CacheValue<>(Optional.of(dirKeyInfo), transactionLogIndex));\n       }\n+      // if directory already exists do nothing or do we need to throw\n+      // exception? Current KeyManagerImpl code does just return, following\n+      // similar approach.\n+\n+      omResponse.setCreateDirectoryResponse(\n+          CreateDirectoryResponse.newBuilder());\n+      omClientResponse = new OMDirectoryCreateResponse(dirKeyInfo,\n+          omResponse.build());\n \n-      result = Result.SUCCESS;\n     } catch (IOException ex) {\n-      if (ex instanceof OMReplayException) {\n-        result = Result.REPLAY;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createReplayOMResponse(omResponse));\n-      } else {\n-        if (result == null) {\n-          result = Result.FAILURE;\n-        }\n-        exception = ex;\n-        omClientResponse = new OMDirectoryCreateResponse(\n-            createErrorOMResponse(omResponse, exception));\n-      }\n+      exception = ex;\n+      omClientResponse = new OMDirectoryCreateResponse(null,\n+          createErrorOMResponse(omResponse, exception));\n     } finally {\n       if (omClientResponse != null) {\n         omClientResponse.setFlushFuture(\n-            omDoubleBufferHelper.add(omClientResponse,\n-                trxnLogIndex));\n+            ozoneManagerDoubleBufferHelper.add(omClientResponse,\n+                transactionLogIndex));\n       }\n       if (acquiredLock) {\n         omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n"}}, {"oid": "51705ccc8c01225039ce59fa85cc91940e84d6c8", "url": "https://github.com/apache/ozone/commit/51705ccc8c01225039ce59fa85cc91940e84d6c8", "message": "HDDS-2944. Handle replay of KeyCommit Requests", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "d532b3c25c1c720497637f8ab15353958092252a", "url": "https://github.com/apache/ozone/commit/d532b3c25c1c720497637f8ab15353958092252a", "message": "HDDS-2944. OMReplayException", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "5a3aebe8832b8c42e2d790e14a298d4495965768", "url": "https://github.com/apache/ozone/commit/5a3aebe8832b8c42e2d790e14a298d4495965768", "message": "OMDirectoryCreateRequest and pending changes to KeyCreate and FileCreate requests", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "844774d029c448f3520f396f87e5a44b7f32bb80", "url": "https://github.com/apache/ozone/commit/844774d029c448f3520f396f87e5a44b7f32bb80", "message": "unit test and checkstyle fix", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "e4709797a89109806c814e1976a7adfbdcc7ed0a", "url": "https://github.com/apache/ozone/commit/e4709797a89109806c814e1976a7adfbdcc7ed0a", "message": "checkstyle", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "2c8ecdaaf49e429a4721fe22d8c66b6a7ce7c324", "url": "https://github.com/apache/ozone/commit/2c8ecdaaf49e429a4721fe22d8c66b6a7ce7c324", "message": "rebase", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "2b6fc6237839120869db774aa24413168b8032f3", "url": "https://github.com/apache/ozone/commit/2b6fc6237839120869db774aa24413168b8032f3", "message": "review comments", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "1098a5b13c6861d1da7d0e0a4422c88d5a2016db", "url": "https://github.com/apache/ozone/commit/1098a5b13c6861d1da7d0e0a4422c88d5a2016db", "message": "it-icontract test fix", "committedDate": "2020-02-10T20:05:13Z", "type": "commit"}, {"oid": "4165271c53662bf9cd87a5c353506d48079b6b02", "url": "https://github.com/apache/ozone/commit/4165271c53662bf9cd87a5c353506d48079b6b02", "message": "rebase", "committedDate": "2020-02-10T20:18:27Z", "type": "commit"}, {"oid": "73791f513647e237abbe47b7bd7c26d0e59464e0", "url": "https://github.com/apache/ozone/commit/73791f513647e237abbe47b7bd7c26d0e59464e0", "message": "Reverting changes to OM Key/File Create Request to add appenBlock to prepareKeyInfo as it breaks Multipart upload.", "committedDate": "2020-02-10T20:37:04Z", "type": "commit"}, {"oid": "73791f513647e237abbe47b7bd7c26d0e59464e0", "url": "https://github.com/apache/ozone/commit/73791f513647e237abbe47b7bd7c26d0e59464e0", "message": "Reverting changes to OM Key/File Create Request to add appenBlock to prepareKeyInfo as it breaks Multipart upload.", "committedDate": "2020-02-10T20:37:04Z", "type": "forcePushed"}, {"oid": "ce75e620bdf77fe500a1231a593660986ff54ece", "url": "https://github.com/apache/ozone/commit/ce75e620bdf77fe500a1231a593660986ff54ece", "message": "unit test fix", "committedDate": "2020-02-10T21:03:14Z", "type": "commit"}]}