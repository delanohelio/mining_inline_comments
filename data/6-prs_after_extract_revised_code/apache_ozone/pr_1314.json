{"pr_number": 1314, "pr_title": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM", "pr_createdAt": "2020-08-11T11:24:27Z", "pr_url": "https://github.com/apache/ozone/pull/1314", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzMzNQ==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r468973335", "bodyText": "Can be a private method", "author": "timmylicheng", "createdAt": "2020-08-12T02:46:13Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -470,6 +484,65 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n     }\n   }\n \n+  /**\n+   * After startup, datanode needs detect latest leader SCM before handling\n+   * any SCMCommand, so that it won't be disturbed by stale leader SCM.\n+   *\n+   * The rule is: after majority SCMs are in HEARTBEAT state and has\n+   * heard from leader SCMs (commandQueue is not empty), datanode will init\n+   * termOfLeaderSCM with the max term found in commandQueue.\n+   *\n+   * The init process also works for non-HA mode. In that case, term of all\n+   * SCMCommands will be 0.\n+   */\n+  void initTermOfLeaderSCM() {\n+    // only init once\n+    if (termOfLeaderSCM.isPresent()) {\n+      return;\n+    }\n+\n+    AtomicInteger scmNum = new AtomicInteger(0);\n+    AtomicInteger activeScmNum = new AtomicInteger(0);\n+\n+    getParent().getConnectionManager().getValues()\n+        .forEach(endpoint -> {\n+          if (endpoint.isPassive()) {\n+            return;\n+          }\n+          scmNum.incrementAndGet();\n+          if (endpoint.getState()\n+              == EndpointStateMachine.EndPointStates.HEARTBEAT) {\n+            activeScmNum.incrementAndGet();\n+          }\n+        });\n+\n+    // majority SCMs should be in HEARTBEAT state.\n+    if (activeScmNum.get() < scmNum.get() / 2 + 1) {\n+      return;\n+    }\n+\n+    // if commandQueue is not empty, init termOfLeaderSCM\n+    // with the largest term found in commandQueue\n+    commandQueue.stream()\n+        .mapToLong(SCMCommand::getTerm)\n+        .max()\n+        .ifPresent(term -> termOfLeaderSCM = Optional.of(term));\n+  }\n+\n+  /**\n+   * monotonically increase termOfLeaderSCM.\n+   * Always record the latest term that has seen.\n+   */\n+  void updateTermOfLeaderSCM(SCMCommand<?> command) {", "originalCommit": "8d780e7c6461880a509e8c48aaa2620238bd0202", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyMjM2NA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r533922364", "bodyText": "Sure", "author": "GlenGeng", "createdAt": "2020-12-02T06:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "92be0d6c391bfac3670014d16270a30d9456e470", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\nindex 56dd0957c..f39755ffe 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n\n@@ -495,7 +495,7 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n    * The init process also works for non-HA mode. In that case, term of all\n    * SCMCommands will be 0.\n    */\n-  void initTermOfLeaderSCM() {\n+  private void initTermOfLeaderSCM() {\n     // only init once\n     if (termOfLeaderSCM.isPresent()) {\n       return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzM1Nw==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r468973357", "bodyText": "Can be a private method", "author": "timmylicheng", "createdAt": "2020-08-12T02:46:20Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -470,6 +484,65 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n     }\n   }\n \n+  /**\n+   * After startup, datanode needs detect latest leader SCM before handling\n+   * any SCMCommand, so that it won't be disturbed by stale leader SCM.\n+   *\n+   * The rule is: after majority SCMs are in HEARTBEAT state and has\n+   * heard from leader SCMs (commandQueue is not empty), datanode will init\n+   * termOfLeaderSCM with the max term found in commandQueue.\n+   *\n+   * The init process also works for non-HA mode. In that case, term of all\n+   * SCMCommands will be 0.\n+   */\n+  void initTermOfLeaderSCM() {", "originalCommit": "8d780e7c6461880a509e8c48aaa2620238bd0202", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyMjE3OA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r533922178", "bodyText": "Sure", "author": "GlenGeng", "createdAt": "2020-12-02T06:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzM1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "92be0d6c391bfac3670014d16270a30d9456e470", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\nindex 56dd0957c..f39755ffe 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n\n@@ -495,7 +495,7 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n    * The init process also works for non-HA mode. In that case, term of all\n    * SCMCommands will be 0.\n    */\n-  void initTermOfLeaderSCM() {\n+  private void initTermOfLeaderSCM() {\n     // only init once\n     if (termOfLeaderSCM.isPresent()) {\n       return;\n"}}, {"oid": "ea538f97370242c96462966cb760afc9444e047b", "url": "https://github.com/apache/ozone/commit/ea538f97370242c96462966cb760afc9444e047b", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM", "committedDate": "2020-08-18T11:24:02Z", "type": "forcePushed"}, {"oid": "b0ed6364c9bd8421fdd027add93c110386dcac68", "url": "https://github.com/apache/ozone/commit/b0ed6364c9bd8421fdd027add93c110386dcac68", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM", "committedDate": "2020-08-19T02:00:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkyNDE0MA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r473924140", "bodyText": "Shall we use AtomicLong for termOfLeaderSCM?", "author": "timmylicheng", "createdAt": "2020-08-20T12:14:32Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -470,6 +484,65 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n     }\n   }\n \n+  /**\n+   * After startup, datanode needs detect latest leader SCM before handling\n+   * any SCMCommand, so that it won't be disturbed by stale leader SCM.\n+   *\n+   * The rule is: after majority SCMs are in HEARTBEAT state and has\n+   * heard from leader SCMs (commandQueue is not empty), datanode will init\n+   * termOfLeaderSCM with the max term found in commandQueue.\n+   *\n+   * The init process also works for non-HA mode. In that case, term of all\n+   * SCMCommands will be 0.\n+   */\n+  void initTermOfLeaderSCM() {\n+    // only init once\n+    if (termOfLeaderSCM.isPresent()) {\n+      return;\n+    }\n+\n+    AtomicInteger scmNum = new AtomicInteger(0);\n+    AtomicInteger activeScmNum = new AtomicInteger(0);\n+\n+    getParent().getConnectionManager().getValues()\n+        .forEach(endpoint -> {\n+          if (endpoint.isPassive()) {\n+            return;\n+          }\n+          scmNum.incrementAndGet();\n+          if (endpoint.getState()\n+              == EndpointStateMachine.EndPointStates.HEARTBEAT) {\n+            activeScmNum.incrementAndGet();\n+          }\n+        });\n+\n+    // majority SCMs should be in HEARTBEAT state.\n+    if (activeScmNum.get() < scmNum.get() / 2 + 1) {\n+      return;\n+    }\n+\n+    // if commandQueue is not empty, init termOfLeaderSCM\n+    // with the largest term found in commandQueue\n+    commandQueue.stream()\n+        .mapToLong(SCMCommand::getTerm)\n+        .max()\n+        .ifPresent(term -> termOfLeaderSCM = Optional.of(term));\n+  }\n+\n+  /**\n+   * monotonically increase termOfLeaderSCM.\n+   * Always record the latest term that has seen.\n+   */\n+  void updateTermOfLeaderSCM(SCMCommand<?> command) {\n+    if (!termOfLeaderSCM.isPresent()) {\n+      LOG.error(\"should init termOfLeaderSCM before update it.\");\n+      return;\n+    }\n+\n+    termOfLeaderSCM = Optional.of(", "originalCommit": "b0ed6364c9bd8421fdd027add93c110386dcac68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyMzE5NA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r533923194", "bodyText": "Good Point.\nSince this is executed in a single thread, let's do this first. We surely need to consider the thread safety in future change.", "author": "GlenGeng", "createdAt": "2020-12-02T06:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkyNDE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "92be0d6c391bfac3670014d16270a30d9456e470", "chunk": "diff --git a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\nindex 56dd0957c..f39755ffe 100644\n--- a/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n+++ b/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java\n\n@@ -495,7 +495,7 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n    * The init process also works for non-HA mode. In that case, term of all\n    * SCMCommands will be 0.\n    */\n-  void initTermOfLeaderSCM() {\n+  private void initTermOfLeaderSCM() {\n     // only init once\n     if (termOfLeaderSCM.isPresent()) {\n       return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNTE0Ng==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r473935146", "bodyText": "Any case SCMNodeManager would not require SCMHAManager?\nNote that PipelineManager will always rely on SCMHAManager", "author": "timmylicheng", "createdAt": "2020-08-20T12:34:02Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "diffHunk": "@@ -130,6 +135,14 @@ public SCMNodeManager(OzoneConfiguration conf,\n     this.useHostname = conf.getBoolean(\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME,\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);\n+    this.scmhaManager = scmhaManager;\n+  }\n+\n+  public SCMNodeManager(OzoneConfiguration conf,", "originalCommit": "b0ed6364c9bd8421fdd027add93c110386dcac68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyNDc2Mw==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r533924763", "bodyText": "Quite a lot of unit tests rely on this old Ctor.", "author": "GlenGeng", "createdAt": "2020-12-02T06:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNTE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d5c05a264a65eac9fcbb3fcff8f85f6e7d560588", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\nindex 24b51f295..47ed12116 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\n\n@@ -135,6 +138,11 @@ public SCMNodeManager(OzoneConfiguration conf,\n     this.useHostname = conf.getBoolean(\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME,\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);\n+    this.numPipelinesPerMetadataVolume =\n+        conf.getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_METADATA_VOLUME,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_METADATA_VOLUME_DEFAULT);\n+    String dnLimit = conf.get(ScmConfigKeys.OZONE_DATANODE_PIPELINE_LIMIT);\n+    this.heavyNodeCriteria = dnLimit == null ? 0 : Integer.parseInt(dnLimit);\n     this.scmhaManager = scmhaManager;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MDQxOA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r485370418", "bodyText": "I am confused on when termOfLeaderSCM is updated to the newest leader term. Is termOfLeaderSCM updated in during leader selection?", "author": "amaliujia", "createdAt": "2020-09-09T06:35:23Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -478,7 +551,26 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n   public SCMCommand getNextCommand() {\n     lock.lock();\n     try {\n-      return commandQueue.poll();\n+      initTermOfLeaderSCM();\n+      if (!termOfLeaderSCM.isPresent()) {\n+        return null;      // not ready yet\n+      }\n+\n+      while (true) {\n+        SCMCommand<?> command = commandQueue.poll();\n+        if (command == null) {\n+          return null;\n+        }\n+\n+        updateTermOfLeaderSCM(command);\n+        if (command.getTerm() == termOfLeaderSCM.get()) {", "originalCommit": "b0ed6364c9bd8421fdd027add93c110386dcac68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4MTY2NQ==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r486281665", "bodyText": "Do you mean whether termOfLeaderSCM is updated in leader election of SCM ? No, it won't. Datanode detects the latest SCM term by heartbeat with SCMs, whose interval is larger than 30s.", "author": "GlenGeng", "createdAt": "2020-09-10T12:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MDQxOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MTE1MA==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r485371150", "bodyText": "another challenge is how to test such change. ideally we can have a minicluster setup with configurable nodes so we can simulate the scenario of split brian.", "author": "amaliujia", "createdAt": "2020-09-09T06:37:12Z", "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/MockSCMHAManager.java", "diffHunk": "@@ -78,8 +79,8 @@ public void start() throws IOException {\n    * {@inheritDoc}\n    */\n   @Override\n-  public boolean isLeader() {\n-    return isLeader;\n+  public Optional<Long> isLeader() {", "originalCommit": "b0ed6364c9bd8421fdd027add93c110386dcac68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4MjE1OQ==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r486282159", "bodyText": "Good point. We need add a lot of test cases, including UT and acceptance test, before merging 2823 back to master.", "author": "GlenGeng", "createdAt": "2020-09-10T12:04:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MTE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTk0OQ==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r486495949", "bodyText": "Agreed. I have been thinking about it and we might be some testing infrastructure to simulate these complicated consensus cases. E.g. split-brian.\nOM HA might have done something similar.", "author": "amaliujia", "createdAt": "2020-09-10T16:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MTE1MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d5c05a264a65eac9fcbb3fcff8f85f6e7d560588", "url": "https://github.com/apache/ozone/commit/d5c05a264a65eac9fcbb3fcff8f85f6e7d560588", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM", "committedDate": "2020-11-18T09:03:24Z", "type": "forcePushed"}, {"oid": "2ecae8fe53d2ea83f5453ed40669b80f1917204f", "url": "https://github.com/apache/ozone/commit/2ecae8fe53d2ea83f5453ed40669b80f1917204f", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM", "committedDate": "2020-11-18T09:22:40Z", "type": "forcePushed"}, {"oid": "6645cabbdd51cfff9522b3dd271f4ca65192bbd4", "url": "https://github.com/apache/ozone/commit/6645cabbdd51cfff9522b3dd271f4ca65192bbd4", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM.", "committedDate": "2020-11-19T12:23:58Z", "type": "forcePushed"}, {"oid": "92be0d6c391bfac3670014d16270a30d9456e470", "url": "https://github.com/apache/ozone/commit/92be0d6c391bfac3670014d16270a30d9456e470", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM.", "committedDate": "2020-12-02T11:17:05Z", "type": "commit"}, {"oid": "92be0d6c391bfac3670014d16270a30d9456e470", "url": "https://github.com/apache/ozone/commit/92be0d6c391bfac3670014d16270a30d9456e470", "message": "HDDS-3988: DN can distinguish SCMCommand from stale leader SCM.", "committedDate": "2020-12-02T11:17:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMDE3Nw==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r535130177", "bodyText": "Nit: Try not to list all the commands by name. It would be hard to maintain the correctness of the comments.", "author": "timmylicheng", "createdAt": "2020-12-03T11:25:33Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "diffHunk": "@@ -656,8 +669,57 @@ public void setContainers(DatanodeDetails datanodeDetails,\n   // Since datanode commands are added through event queue, onMessage method\n   // should take care of adding commands to command queue.\n   // Refactor and remove all the usage of this method and delete this method.\n+  /**\n+   * Only leader SCM can send SCMCommand to datanode, and needs record its\n+   * term in the command so that datanode can distinguish commands from stale\n+   * leader SCM by comparing term.\n+   *\n+   * There are 7 SCMCommands:", "originalCommit": "92be0d6c391bfac3670014d16270a30d9456e470", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MzUxMg==", "url": "https://github.com/apache/ozone/pull/1314#discussion_r535173512", "bodyText": "Good point. I've removed the comments for good.\nAs discussed in design of SCMContext, we will query and inject the term before firing event of DATANODE_COMMAND explicitly for all related places. I will revisit this code in dev of phase 2.0.", "author": "GlenGeng", "createdAt": "2020-12-03T12:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMDE3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "332fd3d904bcd0f4b408bb7e2347ddaeaa932e5d", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\nindex 47ed12116..89fd99ecd 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java\n\n@@ -669,43 +669,6 @@ public void setContainers(DatanodeDetails datanodeDetails,\n   // Since datanode commands are added through event queue, onMessage method\n   // should take care of adding commands to command queue.\n   // Refactor and remove all the usage of this method and delete this method.\n-  /**\n-   * Only leader SCM can send SCMCommand to datanode, and needs record its\n-   * term in the command so that datanode can distinguish commands from stale\n-   * leader SCM by comparing term.\n-   *\n-   * There are 7 SCMCommands:\n-   *    ReregisterCommand\n-   *    ClosePipelineCommand\n-   *    CreatePipelineCommand\n-   *    CloseContainerCommand\n-   *    ReplicateContainerCommand\n-   *    DeleteContainerCommand\n-   *    DeleteBlocksCommand\n-   *\n-   * They are sent by:\n-   *    NodeManager\n-   *    PipelineManager\n-   *    ContainerManager\n-   *    BlockManager\n-   *    ReplicationManager and etc.\n-   *\n-   * Ideally term of SCMCommand should be queried from SCMHAManager::isLeader()\n-   * before these managers decide to take an action.\n-   *\n-   * However till now only several of these managers have been integrated\n-   * with HA, thus need NodeManager, as EventHandler for DATANODE_COMMAND,\n-   * to play as a safe guard when receiving a SCMCommand:\n-   *\n-   * - If receive a SCMCommand when underling RaftServer is not leader,\n-   *   drop the command.\n-   *\n-   * - If receive a SCMCommand when underling RaftServer is leader, meanwhile\n-   *   term of SCMCommand is 0 (which is the default value of term and will\n-   *   not be used under HA mode), log a warning and help set the term.\n-   *   Notes that, term queried before putting into command queue may be not\n-   *   accurate, since raft term may bump when managers are taking actions.\n-   */\n   @Override\n   public void addDatanodeCommand(UUID dnId, SCMCommand command) {\n     if (scmhaManager != null && command.getTerm() == 0) {\n"}}, {"oid": "332fd3d904bcd0f4b408bb7e2347ddaeaa932e5d", "url": "https://github.com/apache/ozone/commit/332fd3d904bcd0f4b408bb7e2347ddaeaa932e5d", "message": "HDDS-3988: fix comments", "committedDate": "2020-12-03T11:58:18Z", "type": "commit"}]}