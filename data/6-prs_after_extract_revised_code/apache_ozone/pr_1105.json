{"pr_number": 1105, "pr_title": "HDDS-3828. Configuration parsing of ozone insight should be based on fields", "pr_createdAt": "2020-06-22T10:22:59Z", "pr_url": "https://github.com/apache/ozone/pull/1105", "timeline": [{"oid": "38e6259a12aaae32bab6736cc1bc2c8a7137e93f", "url": "https://github.com/apache/ozone/commit/38e6259a12aaae32bab6736cc1bc2c8a7137e93f", "message": "HDDS-3828. Configuration parsing of ozone insight should be based on fields", "committedDate": "2020-06-18T11:56:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4OTM2Nw==", "url": "https://github.com/apache/ozone/pull/1105#discussion_r443489367", "bodyText": "Shouldn't it handle inherited fields, too?  I don't think we have such a configuration object hierarchy currently, but injection is prepared for it:\nhttps://github.com/apache/hadoop-ozone/blob/53549eea6f5dfc8e4cc9594583d7510b206a8acd/hadoop-hdds/config/src/main/java/org/apache/hadoop/hdds/conf/ConfigurationReflectionUtil.java#L37-L44", "author": "adoroszlai", "createdAt": "2020-06-22T11:20:56Z", "path": "hadoop-ozone/insight/src/main/java/org/apache/hadoop/ozone/insight/ConfigurationSubCommand.java", "diffHunk": "@@ -71,9 +71,9 @@ private void showConfig(Class clazz, Type type) {\n \n     String prefix = configGroup.prefix();\n \n-    for (Method method : clazz.getMethods()) {\n-      if (method.isAnnotationPresent(Config.class)) {\n-        Config config = method.getAnnotation(Config.class);\n+    for (Field field : clazz.getDeclaredFields()) {", "originalCommit": "38e6259a12aaae32bab6736cc1bc2c8a7137e93f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2ODg4NQ==", "url": "https://github.com/apache/ozone/pull/1105#discussion_r443568885", "bodyText": "Good point.\nBut I am afraid we need a unit test to here to prove if it works as it's a more complex logic. I added one to prove it work.", "author": "elek", "createdAt": "2020-06-22T13:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4OTM2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "222b3bfec88f6dd4e905310aec3bb68bbd748b84", "chunk": "diff --git a/hadoop-ozone/insight/src/main/java/org/apache/hadoop/ozone/insight/ConfigurationSubCommand.java b/hadoop-ozone/insight/src/main/java/org/apache/hadoop/ozone/insight/ConfigurationSubCommand.java\nindex 6883fe11ea..dd565e5b26 100644\n--- a/hadoop-ozone/insight/src/main/java/org/apache/hadoop/ozone/insight/ConfigurationSubCommand.java\n+++ b/hadoop-ozone/insight/src/main/java/org/apache/hadoop/ozone/insight/ConfigurationSubCommand.java\n\n@@ -60,15 +60,26 @@ public Void call() throws Exception {\n     return null;\n   }\n \n-  private void showConfig(Class clazz, Type type) {\n+  protected void showConfig(Class clazz, Type type) {\n     OzoneConfiguration conf = new OzoneConfiguration();\n     conf.addResource(getHost(conf, new Component(type)) + \"/conf\");\n+    printConfig(clazz, conf);\n+  }\n+\n+  /**\n+   * Print all the configuration annotated on the class or any superclass.\n+   */\n+  protected void printConfig(Class clazz, OzoneConfiguration conf) {\n     ConfigGroup configGroup =\n         (ConfigGroup) clazz.getAnnotation(ConfigGroup.class);\n     if (configGroup == null) {\n       return;\n     }\n+    printConfig(configGroup, clazz, conf);\n+  }\n \n+  private void printConfig(ConfigGroup configGroup, Class clazz,\n+      OzoneConfiguration conf) {\n     String prefix = configGroup.prefix();\n \n     for (Field field : clazz.getDeclaredFields()) {\n"}}, {"oid": "222b3bfec88f6dd4e905310aec3bb68bbd748b84", "url": "https://github.com/apache/ozone/commit/222b3bfec88f6dd4e905310aec3bb68bbd748b84", "message": "recursive support + unit test", "committedDate": "2020-06-22T13:43:58Z", "type": "commit"}]}