{"pr_number": 695, "pr_title": "HDDS-3137. OM RpcClient fail with java.lang.IllegalArgumentException.", "pr_createdAt": "2020-03-18T20:28:36Z", "pr_url": "https://github.com/apache/ozone/pull/695", "timeline": [{"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237", "url": "https://github.com/apache/ozone/commit/793c61e78d9a6d5c2240b3e91ff18977bf07c237", "message": "HDDS-3137. OM RpcClient fail with java.lang.IllegalArgumentException.", "committedDate": "2020-03-18T20:14:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNjY0NQ==", "url": "https://github.com/apache/ozone/pull/695#discussion_r394626645", "bodyText": "should we attempt this iif rpcAddr.isUnresolved()is false?", "author": "xiaoyuyao", "createdAt": "2020-03-18T20:41:19Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java", "diffHunk": "@@ -21,23 +21,48 @@\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.net.NetUtils;\n import org.apache.hadoop.security.SecurityUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.net.InetSocketAddress;\n \n /**\n  * Class to store OM proxy information.\n  */\n public class OMProxyInfo {\n+  private String serviceId;\n   private String nodeId;\n   private String rpcAddrStr;\n   private InetSocketAddress rpcAddr;\n   private Text dtService;\n \n-  OMProxyInfo(String nodeID, String rpcAddress) {\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(OMProxyInfo.class);\n+\n+  OMProxyInfo(String serviceID, String nodeID, String rpcAddress) {\n+    this.serviceId = serviceID;\n     this.nodeId = nodeID;\n     this.rpcAddrStr = rpcAddress;\n     this.rpcAddr = NetUtils.createSocketAddr(rpcAddrStr);\n-    this.dtService = SecurityUtil.buildTokenService(rpcAddr);\n+    if (rpcAddr.isUnresolved()) {\n+      LOG.warn(\"OzoneManager address {} for serviceID {} remains unresolved \" +\n+          \"for node ID {} Check your ozone-site.xml file to ensure ozone \" +\n+          \"manager addresses are configured properly.\",\n+          rpcAddress, serviceId, nodeId);\n+    }\n+\n+    // This issue will be a problem with docker/kubernetes world where one of\n+    // the container is killed, and that OM address will be unresolved. For now\n+    // skip the unresolved OM address setting it to the token service field.\n+\n+    // TODo: Retry rpcAddr when unresolved during getProxy which will be used\n+    //  until next fail over. Fix setting of dtService also at that time.\n+    try {", "originalCommit": "793c61e78d9a6d5c2240b3e91ff18977bf07c237", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY4MTQwMQ==", "url": "https://github.com/apache/ozone/pull/695#discussion_r394681401", "bodyText": "Yes, good idea. done.", "author": "bharatviswa504", "createdAt": "2020-03-18T22:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNjY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d0a8ba0fe3f02e5863057c26a6d2953e2c32b7be", "chunk": "diff --git a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java\nindex 42d4ada7dc..7392dd9d16 100644\n--- a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java\n+++ b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java\n\n@@ -49,19 +49,19 @@\n           \"for node ID {} Check your ozone-site.xml file to ensure ozone \" +\n           \"manager addresses are configured properly.\",\n           rpcAddress, serviceId, nodeId);\n-    }\n+    } else {\n+\n+      // This issue will be a problem with docker/kubernetes world where one of\n+      // the container is killed, and that OM address will be unresolved. For now\n+      // skip the unresolved OM address setting it to the token service field.\n \n-    // This issue will be a problem with docker/kubernetes world where one of\n-    // the container is killed, and that OM address will be unresolved. For now\n-    // skip the unresolved OM address setting it to the token service field.\n \n-    // TODo: Retry rpcAddr when unresolved during getProxy which will be used\n-    //  until next fail over. Fix setting of dtService also at that time.\n-    try {\n-      this.dtService = SecurityUtil.buildTokenService(rpcAddr);\n-    } catch (Throwable t) {\n-      // As anyway, we have logged above for unresolved address skipping here.\n-      this.dtService = null;\n+      try {\n+        this.dtService = SecurityUtil.buildTokenService(rpcAddr);\n+      } catch (Throwable t) {\n+        // As anyway, we have logged above for unresolved address skipping here.\n+        this.dtService = null;\n+      }\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ==", "url": "https://github.com/apache/ozone/pull/695#discussion_r394627535", "bodyText": "As we discussed offline, can you add a TODO to fix the computed DTService when the dtService is temporarily avialable due to OM instance reboot, DNS issue?", "author": "xiaoyuyao", "createdAt": "2020-03-18T20:43:00Z", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -191,20 +192,19 @@ public Text getCurrentProxyDelegationToken() {\n   private Text computeDelegationTokenService() {\n     // For HA, this will return \",\" separated address of all OM's.\n     StringBuilder rpcAddress = new StringBuilder();\n-    int count = 0;\n+\n     for (Map.Entry<String, OMProxyInfo> omProxyInfoSet :\n         omProxyInfos.entrySet()) {\n-      count++;\n-      rpcAddress =\n-          rpcAddress.append(\n-              omProxyInfoSet.getValue().getDelegationTokenService());\n+      Text dtService = omProxyInfoSet.getValue().getDelegationTokenService();\n \n-      if (omProxyInfos.size() != count) {\n-        rpcAddress.append(\",\");\n+      // dtService can be null when during client object creation when one of\n+      // the OM configured address in unreachable.\n+      if (dtService != null) {\n+        rpcAddress.append(\",\").append(rpcAddress);", "originalCommit": "793c61e78d9a6d5c2240b3e91ff18977bf07c237", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY4MTY0Nw==", "url": "https://github.com/apache/ozone/pull/695#discussion_r394681647", "bodyText": "I have added TODO in OMProxyInfo.java. Based on @arp7 offline comments removed TODO and create a Jira to resolve this.\nhttps://issues.apache.org/jira/browse/HDDS-3233", "author": "bharatviswa504", "createdAt": "2020-03-18T22:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM1NzU2Mg==", "url": "https://github.com/apache/ozone/pull/695#discussion_r395357562", "bodyText": "I have an in-progress patch for HDDS-3233. I need to test out the scenario, and I see few in cases not resolving the address. Still looking into that part, will post the change as part of HDDS-3233.", "author": "bharatviswa504", "createdAt": "2020-03-19T22:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "bb6b6aa5febd98a5f352906f4d317cb7a1c3c1e6", "chunk": "diff --git a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java\nindex e6a8ee4dab..a164c73c28 100644\n--- a/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java\n+++ b/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java\n\n@@ -200,7 +200,7 @@ private Text computeDelegationTokenService() {\n       // dtService can be null when during client object creation when one of\n       // the OM configured address in unreachable.\n       if (dtService != null) {\n-        rpcAddress.append(\",\").append(rpcAddress);\n+        rpcAddress.append(\",\").append(dtService);\n       }\n     }\n \n"}}, {"oid": "d0a8ba0fe3f02e5863057c26a6d2953e2c32b7be", "url": "https://github.com/apache/ozone/commit/d0a8ba0fe3f02e5863057c26a6d2953e2c32b7be", "message": "fix review comment", "committedDate": "2020-03-18T22:43:17Z", "type": "commit"}, {"oid": "bb6b6aa5febd98a5f352906f4d317cb7a1c3c1e6", "url": "https://github.com/apache/ozone/commit/bb6b6aa5febd98a5f352906f4d317cb7a1c3c1e6", "message": "fix test", "committedDate": "2020-03-19T22:32:08Z", "type": "commit"}, {"oid": "e8e314a9d33e39da9a89b1f5e0981dcef631a5c9", "url": "https://github.com/apache/ozone/commit/e8e314a9d33e39da9a89b1f5e0981dcef631a5c9", "message": "fix checkstyle and wording", "committedDate": "2020-03-19T22:32:18Z", "type": "commit"}]}