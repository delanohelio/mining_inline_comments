{"pr_number": 1647, "pr_title": "HDDS-4265. Refactor OzoneQuota to make it easy to support more quota \u2026", "pr_createdAt": "2020-12-02T06:47:58Z", "pr_url": "https://github.com/apache/ozone/pull/1647", "timeline": [{"oid": "33a41c031d2e42b3e029e63562eae879459a0b78", "url": "https://github.com/apache/ozone/commit/33a41c031d2e42b3e029e63562eae879459a0b78", "message": "HDDS-4265. Refactor OzoneQuota to make it easy to support more quota type", "committedDate": "2020-12-02T06:25:38Z", "type": "commit"}, {"oid": "843040234ce45d814746c5b47737d9c403201780", "url": "https://github.com/apache/ozone/commit/843040234ce45d814746c5b47737d9c403201780", "message": "fix checkstyle", "committedDate": "2020-12-02T06:52:19Z", "type": "commit"}, {"oid": "573799dfc2f792e2ce71feb89335b4a6445cda61", "url": "https://github.com/apache/ozone/commit/573799dfc2f792e2ce71feb89335b4a6445cda61", "message": "Fix checkstyle", "committedDate": "2020-12-02T06:54:27Z", "type": "commit"}, {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "url": "https://github.com/apache/ozone/commit/9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "message": "fix checkstyle again", "committedDate": "2020-12-02T08:20:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NjA4Ng==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066086", "bodyText": "we can Initialize quotaList in static {}\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static QuotaList quotaList;\n          \n          \n            \n              private static QuotaList quotaList;\n          \n          \n            \n              static {\n          \n          \n            \n                 quotaList = new QuotaList();\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_TB, Units.TB, TB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_GB, Units.GB, GB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_MB, Units.MB, MB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_KB, Units.KB, KB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_BYTES, Units.BYTES, 1L);\n          \n          \n            \n              }", "author": "captainzmc", "createdAt": "2020-12-09T07:22:52Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -43,13 +43,25 @@\n   public static final String OZONE_QUOTA_TB = \"TB\";\n \n   /** Quota Units.*/\n-  public enum Units {UNDEFINED, BYTES, KB, MB, GB, TB}\n+  public enum Units {BYTES, KB, MB, GB, TB}\n \n   // Quota to decide how many buckets can be created.\n   private long quotaInCounts;\n   // Quota to decide how many storage space will be used in bytes.\n   private long quotaInBytes;\n   private RawQuotaInBytes rawQuotaInBytes;\n+  // Data class of Quota.\n+  private static QuotaList quotaList;", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -54,7 +54,7 @@\n   private static QuotaList quotaList;\n \n   /** Setting QuotaList parameters from large to small. */\n-  private static void setQuotaList(){\n+  static {\n     quotaList = new QuotaList();\n     quotaList.addQuotaList(OZONE_QUOTA_TB, Units.TB, TB);\n     quotaList.addQuotaList(OZONE_QUOTA_GB, Units.GB, GB);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2Njc3MQ==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066771", "bodyText": "space\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(Units quota:quotaList.getUnitQuotaArray()){\n          \n          \n            \n                  for(Units quota : quotaList.getUnitQuotaArray()){", "author": "captainzmc", "createdAt": "2020-12-09T07:24:23Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,18 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuote = -1L;\n+      setQuotaList();\n+      for(Units quota:quotaList.getUnitQuotaArray()){", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -87,15 +87,14 @@ public long getSize() {\n      * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      long sQuote = -1L;\n-      setQuotaList();\n-      for(Units quota:quotaList.getUnitQuotaArray()){\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){\n         if(quota == this.unit){\n-          sQuote = quotaList.getQuotaSize(quota);\n+          sQuota = quotaList.getQuotaSize(quota);\n           break;\n         }\n       }\n-      return this.getSize() * sQuote;\n+      return this.getSize() * sQuota;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2Njk2OQ==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066969", "bodyText": "space", "author": "captainzmc", "createdAt": "2020-12-09T07:24:46Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -171,21 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota:quotaList.getOzoneQuotaArray()){\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n         if (uppercase.endsWith((quota))){\n           size = uppercase\n-                  .substring(0, uppercase.length() - quota.length());\n+              .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n           quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n-                  quotaList.getQuotaSize(currUnit));\n+              quotaList.getQuotaSize(currUnit));\n           break;\n         }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-              \" that the Quota format is legal(supported values are BYTES, \" +\n-              \" KB, MB, GB and TB).\");\n+          \" that the Quota format is legal(supported values are BYTES, \" +\n+          \" KB, MB, GB and TB).\");\n     } catch  (ArithmeticException e) {\n       LOG.debug(\"long overflow:\\n{}\", quotaMultiplyExact);\n       throw new IllegalArgumentException(\"Invalid values for quota, the quota\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NzEwMw==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539067103", "bodyText": "space", "author": "captainzmc", "createdAt": "2020-12-09T07:25:06Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -227,24 +210,15 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-      long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+                                         long quotaInCounts) {\n+    long size = 1L;\n+    Units unit = Units.BYTES;\n+    setQuotaList();\n+    for (Long quota:quotaList.getSizeQuotaArray()){", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkxOTY2Mw==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539919663", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (Long quota:quotaList.getSizeQuotaArray()){\n          \n          \n            \n                for (Long quota : quotaList.getSizeQuotaArray()) {", "author": "captainzmc", "createdAt": "2020-12-10T07:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NzEwMw=="}], "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -210,10 +208,9 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-                                         long quotaInCounts) {\n+      long quotaInCounts) {\n     long size = 1L;\n     Units unit = Units.BYTES;\n-    setQuotaList();\n     for (Long quota:quotaList.getSizeQuotaArray()){\n       if(quotaInBytes % quota == 0){\n         size = quotaInBytes / quota;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NDQxMA==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539074410", "bodyText": "indentation", "author": "captainzmc", "createdAt": "2020-12-09T07:39:57Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -227,24 +210,15 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-      long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+                                         long quotaInCounts) {", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -210,10 +208,9 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-                                         long quotaInCounts) {\n+      long quotaInCounts) {\n     long size = 1L;\n     Units unit = Units.BYTES;\n-    setQuotaList();\n     for (Long quota:quotaList.getSizeQuotaArray()){\n       if(quotaInBytes % quota == 0){\n         size = quotaInBytes / quota;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NDk4MQ==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539074981", "bodyText": "indentation", "author": "captainzmc", "createdAt": "2020-12-09T07:41:06Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());\n+          currUnit = quotaList.getUnits(quota);\n+          quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n+                  quotaList.getQuotaSize(currUnit));\n+          break;\n+        }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-          \" that the Quota format is legal(supported values are BYTES, KB, \" +\n-          \"MB, GB and TB).\");\n+              \" that the Quota format is legal(supported values are BYTES, \" +\n+              \" KB, MB, GB and TB).\");", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -171,21 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota:quotaList.getOzoneQuotaArray()){\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n         if (uppercase.endsWith((quota))){\n           size = uppercase\n-                  .substring(0, uppercase.length() - quota.length());\n+              .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n           quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n-                  quotaList.getQuotaSize(currUnit));\n+              quotaList.getQuotaSize(currUnit));\n           break;\n         }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-              \" that the Quota format is legal(supported values are BYTES, \" +\n-              \" KB, MB, GB and TB).\");\n+          \" that the Quota format is legal(supported values are BYTES, \" +\n+          \" KB, MB, GB and TB).\");\n     } catch  (ArithmeticException e) {\n       LOG.debug(\"long overflow:\\n{}\", quotaMultiplyExact);\n       throw new IllegalArgumentException(\"Invalid values for quota, the quota\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NTM4NQ==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539075385", "bodyText": "Should it be sQuota?", "author": "captainzmc", "createdAt": "2020-12-09T07:41:48Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,18 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuote = -1L;", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -87,15 +87,14 @@ public long getSize() {\n      * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      long sQuote = -1L;\n-      setQuotaList();\n-      for(Units quota:quotaList.getUnitQuotaArray()){\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){\n         if(quota == this.unit){\n-          sQuote = quotaList.getQuotaSize(quota);\n+          sQuota = quotaList.getQuotaSize(quota);\n           break;\n         }\n       }\n-      return this.getSize() * sQuote;\n+      return this.getSize() * sQuota;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NjI0MA==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539076240", "bodyText": "indentation", "author": "captainzmc", "createdAt": "2020-12-09T07:43:27Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());\n+          currUnit = quotaList.getUnits(quota);\n+          quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n+                  quotaList.getQuotaSize(currUnit));", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -171,21 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota:quotaList.getOzoneQuotaArray()){\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n         if (uppercase.endsWith((quota))){\n           size = uppercase\n-                  .substring(0, uppercase.length() - quota.length());\n+              .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n           quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n-                  quotaList.getQuotaSize(currUnit));\n+              quotaList.getQuotaSize(currUnit));\n           break;\n         }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-              \" that the Quota format is legal(supported values are BYTES, \" +\n-              \" KB, MB, GB and TB).\");\n+          \" that the Quota format is legal(supported values are BYTES, \" +\n+          \" KB, MB, GB and TB).\");\n     } catch  (ArithmeticException e) {\n       LOG.debug(\"long overflow:\\n{}\", quotaMultiplyExact);\n       throw new IllegalArgumentException(\"Invalid values for quota, the quota\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NjMwNA==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539076304", "bodyText": "indentation", "author": "captainzmc", "createdAt": "2020-12-09T07:43:35Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());", "originalCommit": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 2ac61fe50..10bae9245 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -171,21 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota:quotaList.getOzoneQuotaArray()){\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n         if (uppercase.endsWith((quota))){\n           size = uppercase\n-                  .substring(0, uppercase.length() - quota.length());\n+              .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n           quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n-                  quotaList.getQuotaSize(currUnit));\n+              quotaList.getQuotaSize(currUnit));\n           break;\n         }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-              \" that the Quota format is legal(supported values are BYTES, \" +\n-              \" KB, MB, GB and TB).\");\n+          \" that the Quota format is legal(supported values are BYTES, \" +\n+          \" KB, MB, GB and TB).\");\n     } catch  (ArithmeticException e) {\n       LOG.debug(\"long overflow:\\n{}\", quotaMultiplyExact);\n       throw new IllegalArgumentException(\"Invalid values for quota, the quota\" +\n"}}, {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "url": "https://github.com/apache/ozone/commit/adf518fc93aec010fa1797a7fd7ef8ce05735900", "message": "Fix space and indentation", "committedDate": "2020-12-10T05:47:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMTg4NQ==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539921885", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if(quotaInBytes % quota == 0){\n          \n          \n            \n                  if (quotaInBytes % quota == 0) {", "author": "captainzmc", "createdAt": "2020-12-10T07:07:51Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -228,23 +209,13 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n       long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+    long size = 1L;\n+    Units unit = Units.BYTES;\n+    for (Long quota:quotaList.getSizeQuotaArray()){\n+      if(quotaInBytes % quota == 0){", "originalCommit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00dab4c95ccd749a76bce6228ff1734d358b4690", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 10bae9245..510538d04 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -211,8 +211,8 @@ public static OzoneQuota getOzoneQuota(long quotaInBytes,\n       long quotaInCounts) {\n     long size = 1L;\n     Units unit = Units.BYTES;\n-    for (Long quota:quotaList.getSizeQuotaArray()){\n-      if(quotaInBytes % quota == 0){\n+    for (Long quota : quotaList.getSizeQuotaArray()) {\n+      if (quotaInBytes % quota == 0) {\n         size = quotaInBytes / quota;\n         unit = quotaList.getQuotaUnit(quota);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMjc0NA==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539922744", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(Units quota : quotaList.getUnitQuotaArray()){\n          \n          \n            \n                  for (Units quota : quotaList.getUnitQuotaArray()) {", "author": "captainzmc", "createdAt": "2020-12-10T07:08:48Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,17 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){", "originalCommit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00dab4c95ccd749a76bce6228ff1734d358b4690", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 10bae9245..510538d04 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -88,8 +88,8 @@ public long getSize() {\n      */\n     public long sizeInBytes() {\n       long sQuota = -1L;\n-      for(Units quota : quotaList.getUnitQuotaArray()){\n-        if(quota == this.unit){\n+      for (Units quota : quotaList.getUnitQuotaArray()) {\n+        if (quota == this.unit) {\n           sQuota = quotaList.getQuotaSize(quota);\n           break;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMjk4Mg==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539922982", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(quota == this.unit){\n          \n          \n            \n                    if (quota == this.unit) {", "author": "captainzmc", "createdAt": "2020-12-10T07:09:07Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,17 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){\n+        if(quota == this.unit){", "originalCommit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00dab4c95ccd749a76bce6228ff1734d358b4690", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 10bae9245..510538d04 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -88,8 +88,8 @@ public long getSize() {\n      */\n     public long sizeInBytes() {\n       long sQuota = -1L;\n-      for(Units quota : quotaList.getUnitQuotaArray()){\n-        if(quota == this.unit){\n+      for (Units quota : quotaList.getUnitQuotaArray()) {\n+        if (quota == this.unit) {\n           sQuota = quotaList.getQuotaSize(quota);\n           break;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMzQwNg==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539923406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(String quota : quotaList.getOzoneQuotaArray()){\n          \n          \n            \n                  for (String quota : quotaList.getOzoneQuotaArray()) {", "author": "captainzmc", "createdAt": "2020-12-10T07:09:34Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota : quotaList.getOzoneQuotaArray()){", "originalCommit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00dab4c95ccd749a76bce6228ff1734d358b4690", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 10bae9245..510538d04 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -169,8 +169,8 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota : quotaList.getOzoneQuotaArray()){\n-        if (uppercase.endsWith((quota))){\n+      for (String quota : quotaList.getOzoneQuotaArray()) {\n+        if (uppercase.endsWith((quota))) {\n           size = uppercase\n               .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyNDAwNw==", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539924007", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (uppercase.endsWith((quota))){\n          \n          \n            \n                    if (uppercase.endsWith((quota))) {", "author": "captainzmc", "createdAt": "2020-12-10T07:10:20Z", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){", "originalCommit": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00dab4c95ccd749a76bce6228ff1734d358b4690", "chunk": "diff --git a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\nindex 10bae9245..510538d04 100644\n--- a/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n+++ b/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java\n\n@@ -169,8 +169,8 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      for(String quota : quotaList.getOzoneQuotaArray()){\n-        if (uppercase.endsWith((quota))){\n+      for (String quota : quotaList.getOzoneQuotaArray()) {\n+        if (uppercase.endsWith((quota))) {\n           size = uppercase\n               .substring(0, uppercase.length() - quota.length());\n           currUnit = quotaList.getUnits(quota);\n"}}, {"oid": "00dab4c95ccd749a76bce6228ff1734d358b4690", "url": "https://github.com/apache/ozone/commit/00dab4c95ccd749a76bce6228ff1734d358b4690", "message": "fix space issue again", "committedDate": "2020-12-11T08:11:07Z", "type": "commit"}]}