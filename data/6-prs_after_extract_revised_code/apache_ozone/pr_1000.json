{"pr_number": 1000, "pr_title": "HDDS-3562. Datanodes should send ICR when a container replica deletion is successful.", "pr_createdAt": "2020-06-01T14:45:19Z", "pr_url": "https://github.com/apache/ozone/pull/1000", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3NDQ5NQ==", "url": "https://github.com/apache/ozone/pull/1000#discussion_r434974495", "bodyText": "NIT: Update javadocs", "author": "dineshchitlangia", "createdAt": "2020-06-04T03:40:08Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java", "diffHunk": "@@ -225,14 +218,35 @@ private void updateContainerState(final DatanodeDetails datanode,\n     }\n   }\n \n+  private void updateContainerReplica(final DatanodeDetails datanodeDetails,\n+                                      final ContainerID containerId,\n+                                      final ContainerReplicaProto replicaProto)\n+      throws ContainerNotFoundException, ContainerReplicaNotFoundException {\n+    final ContainerReplica replica = ContainerReplica.newBuilder()\n+        .setContainerID(containerId)\n+        .setContainerState(replicaProto.getState())\n+        .setDatanodeDetails(datanodeDetails)\n+        .setOriginNodeId(UUID.fromString(replicaProto.getOriginNodeId()))\n+        .setSequenceId(replicaProto.getBlockCommitSequenceId())\n+        .build();\n+\n+    if (replica.getState().equals(State.DELETED)) {\n+      containerManager.removeContainerReplica(containerId, replica);\n+    } else {\n+      containerManager.updateContainerReplica(containerId, replica);\n+    }\n+  }\n+\n   /**\n    * Returns true if the container replica is not marked as UNHEALTHY.\n    *\n    * @param replicaState State of the container replica.\n    * @return true if unhealthy, false otherwise\n    */\n   private boolean isUnhealthy(final Supplier<State> replicaState) {", "originalCommit": "ab84718cf4f99850982ca0c1c5627b2092b64c7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77cf3c1f7dc741efe6d3be598827e2b29b853a07", "chunk": "diff --git a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java\nindex cf1dc8ca3..44b3364c5 100644\n--- a/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java\n+++ b/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java\n\n@@ -238,15 +238,17 @@ private void updateContainerReplica(final DatanodeDetails datanodeDetails,\n   }\n \n   /**\n-   * Returns true if the container replica is not marked as UNHEALTHY.\n+   * Returns true if the container replica is HEALTHY. <br>\n+   * A replica is considered healthy if it's not in UNHEALTHY,\n+   * INVALID or DELETED state.\n    *\n    * @param replicaState State of the container replica.\n-   * @return true if unhealthy, false otherwise\n+   * @return true if healthy, false otherwise\n    */\n-  private boolean isUnhealthy(final Supplier<State> replicaState) {\n-    return replicaState.get() == State.UNHEALTHY\n-        || replicaState.get() == State.INVALID\n-        || replicaState.get() == State.DELETED;\n+  private boolean isHealthy(final Supplier<State> replicaState) {\n+    return replicaState.get() != State.UNHEALTHY\n+        && replicaState.get() != State.INVALID\n+        && replicaState.get() != State.DELETED;\n   }\n \n   /**\n"}}, {"oid": "77cf3c1f7dc741efe6d3be598827e2b29b853a07", "url": "https://github.com/apache/ozone/commit/77cf3c1f7dc741efe6d3be598827e2b29b853a07", "message": "HDDS-3562. Datanodes should send ICR when a container replica deletion is successful.", "committedDate": "2020-06-05T14:21:16Z", "type": "commit"}, {"oid": "77cf3c1f7dc741efe6d3be598827e2b29b853a07", "url": "https://github.com/apache/ozone/commit/77cf3c1f7dc741efe6d3be598827e2b29b853a07", "message": "HDDS-3562. Datanodes should send ICR when a container replica deletion is successful.", "committedDate": "2020-06-05T14:21:16Z", "type": "forcePushed"}]}