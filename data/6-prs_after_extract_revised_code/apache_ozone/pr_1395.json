{"pr_number": 1395, "pr_title": "HDDS-4088. Adding Owner info for Authorizer plugin to honor owner access rights", "pr_createdAt": "2020-09-04T19:59:19Z", "pr_url": "https://github.com/apache/ozone/pull/1395", "timeline": [{"oid": "8884eb7c074bb1cc610697c21c227fd77fc9873b", "url": "https://github.com/apache/ozone/commit/8884eb7c074bb1cc610697c21c227fd77fc9873b", "message": "HDDS-4088. Adding Owner info for Authorizer plugin to honor owner access rights.", "committedDate": "2020-10-04T02:38:54Z", "type": "forcePushed"}, {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd", "url": "https://github.com/apache/ozone/commit/8bf6065d93422cacb79eeed053c1a758e1ee3ccd", "message": "fix locking heriarchy", "committedDate": "2020-10-12T20:14:50Z", "type": "forcePushed"}, {"oid": "148b27c9732868480761e01d093e1478cbc49774", "url": "https://github.com/apache/ozone/commit/148b27c9732868480761e01d093e1478cbc49774", "message": "HDDS-4088. Adding Owner info for Authorizer plugin to honor owner access rights.", "committedDate": "2020-10-19T22:29:20Z", "type": "commit"}, {"oid": "0148aa4260b14f44b5b642f1914d497da24d5fce", "url": "https://github.com/apache/ozone/commit/0148aa4260b14f44b5b642f1914d497da24d5fce", "message": "refactor", "committedDate": "2020-10-19T22:29:20Z", "type": "commit"}, {"oid": "a8b7c31d76a777534f63d82f9c770aec233b862b", "url": "https://github.com/apache/ozone/commit/a8b7c31d76a777534f63d82f9c770aec233b862b", "message": "fix locking heriarchy", "committedDate": "2020-10-19T22:29:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ==", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510108891", "bodyText": "getVolumeTable().get(vol) seems to return null when volume not found rather than throwing.\nthe exception message in the following catch block needs to be changed.", "author": "smengcl", "createdAt": "2020-10-22T12:10:42Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);", "originalCommit": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5MzE4OA==", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510293188", "bodyText": "Thanks @smengcl  for the review. The null check of volumeArgs for volume not found is done outside the lock between Line 1677-1682.", "author": "xiaoyuyao", "createdAt": "2020-10-22T16:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NjI2Mw==", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510376263", "bodyText": "Yes @xiaoyuyao . I do see the Line 1677-1682 check and message.\nI meant Line 1670-1671 OMException, since volumeArgs won't throw if volume is not found, we should change that message. Or just wrap IOException inside OMException?", "author": "smengcl", "createdAt": "2020-10-22T18:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxMDI0OQ==", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510410249", "bodyText": "Thanks for the clarification. I just pushed a change to refine the exception for this case as suggested.", "author": "xiaoyuyao", "createdAt": "2020-10-22T19:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d29621850894c1bc4ab38a87f385df1f66de9371", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\nindex 2a9882aab..258564c1b 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\n\n@@ -1667,8 +1667,12 @@ private String getVolumeOwner(String volume) throws OMException {\n     try {\n       volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);\n     } catch (IOException ioe) {\n-      throw new OMException(\"Volume \" + volume + \" is not found\",\n-          OMException.ResultCodes.VOLUME_NOT_FOUND);\n+      if (ioe instanceof OMException) {\n+        throw (OMException)ioe;\n+      } else {\n+        throw new OMException(\"getVolumeOwner for Volume \" + volume + \" failed\",\n+            ResultCodes.INTERNAL_ERROR);\n+      }\n     } finally {\n       if (lockAcquired) {\n         metadataManager.getLock().releaseReadLock(VOLUME_LOCK, volume);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NTUyMQ==", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510375521", "bodyText": "I should tag here :) #tag", "author": "smengcl", "createdAt": "2020-10-22T18:35:47Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);\n+    } catch (IOException ioe) {\n+      throw new OMException(\"Volume \" + volume + \" is not found\",\n+          OMException.ResultCodes.VOLUME_NOT_FOUND);", "originalCommit": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d29621850894c1bc4ab38a87f385df1f66de9371", "chunk": "diff --git a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\nindex 2a9882aab..258564c1b 100644\n--- a/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\n+++ b/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\n\n@@ -1667,8 +1667,12 @@ private String getVolumeOwner(String volume) throws OMException {\n     try {\n       volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);\n     } catch (IOException ioe) {\n-      throw new OMException(\"Volume \" + volume + \" is not found\",\n-          OMException.ResultCodes.VOLUME_NOT_FOUND);\n+      if (ioe instanceof OMException) {\n+        throw (OMException)ioe;\n+      } else {\n+        throw new OMException(\"getVolumeOwner for Volume \" + volume + \" failed\",\n+            ResultCodes.INTERNAL_ERROR);\n+      }\n     } finally {\n       if (lockAcquired) {\n         metadataManager.getLock().releaseReadLock(VOLUME_LOCK, volume);\n"}}, {"oid": "d29621850894c1bc4ab38a87f385df1f66de9371", "url": "https://github.com/apache/ozone/commit/d29621850894c1bc4ab38a87f385df1f66de9371", "message": "address code review feedback", "committedDate": "2020-10-22T19:36:54Z", "type": "commit"}, {"oid": "d29621850894c1bc4ab38a87f385df1f66de9371", "url": "https://github.com/apache/ozone/commit/d29621850894c1bc4ab38a87f385df1f66de9371", "message": "address code review feedback", "committedDate": "2020-10-22T19:36:54Z", "type": "forcePushed"}]}