{"pr_number": 2570, "pr_title": "Add all HTTP methods to route when the method is empty", "pr_createdAt": "2020-03-11T09:05:12Z", "pr_url": "https://github.com/line/armeria/pull/2570", "timeline": [{"oid": "18da010f4a7dae8204c5632a2817bbc19790dc4a", "url": "https://github.com/line/armeria/commit/18da010f4a7dae8204c5632a2817bbc19790dc4a", "message": "Add all HTTP methods to route when the method is empty\nMotivation:\nCheck out this code:\n```java\nsb.decorator((delegate, ctx, req) -> {\n    System.err.println(2);\n    return delegate.serve(ctx, req);\n});\nsb.routeDecorator().pathPrefix(\"/\").build((delegate, ctx, req) -> {\n    System.err.println(1);\n    return delegate.serve(ctx, req);\n});\nsb.decoratorUnder(\"/\", (delegate, ctx, req) -> {\n    System.err.println(3);\n    return delegate.serve(ctx, req);\n});\n```\nThe executed order of decorators are a little messed becuase `routeDecorator()` has all `HttpMethod`s set, but others don't.\nIf we set `HttpMethods.knownMethods()` when there's no method set for a route, the execution order of decorator will be the order they inserted.\n\nModifications:\n- Add `HttpMethod.knownMethods()` to the `Route` if it's empty.\n  - However, the logger name and metric don't include it because it's verbose.\n\nResult:\n- Right decoration order.", "committedDate": "2020-03-11T09:04:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzNTg2OA==", "url": "https://github.com/line/armeria/pull/2570#discussion_r390835868", "bodyText": "(Maybe) don't we need to update methods.isEmpty() condition in apply(RoutingContext routingCtx)?\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n    \n    \n         Line 99\n      in\n      3bc7bbd\n    \n    \n    \n    \n\n        \n          \n           if (!methods.isEmpty() && !methods.contains(routingCtx.method())) {", "author": "ikhoon", "createdAt": "2020-03-11T09:19:59Z", "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -244,7 +244,9 @@ private static String generateLoggerName(String prefix, Set<HttpMethod> methods,\n                                              List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         final StringJoiner name = new StringJoiner(\".\");\n         name.add(prefix);\n-        if (!methods.isEmpty()) {\n+\n+        // Skip if the methods is empty or it's knownMethods because it's verbose.\n+        if (!methods.isEmpty() && methods != HttpMethod.knownMethods()) {", "originalCommit": "18da010f4a7dae8204c5632a2817bbc19790dc4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0Mzc5OA==", "url": "https://github.com/line/armeria/pull/2570#discussion_r390843798", "bodyText": "Indeed! Thanks.", "author": "minwoox", "createdAt": "2020-03-11T09:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzNTg2OA=="}], "type": "inlineReview", "revised_code": {"commit": "35385c1e9484e6b4df1b1683e1708da988ce6a3e", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java b/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\nindex 737cc4500..e319ba779 100644\n--- a/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n+++ b/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n\n@@ -245,8 +244,8 @@ final class DefaultRoute implements Route {\n         final StringJoiner name = new StringJoiner(\".\");\n         name.add(prefix);\n \n-        // Skip if the methods is empty or it's knownMethods because it's verbose.\n-        if (!methods.isEmpty() && methods != HttpMethod.knownMethods()) {\n+        // Skip if the methods is knownMethods because it's verbose.\n+        if (HttpMethod.knownMethods().equals(methods)) {\n             name.add(loggerNameJoiner.join(methods.stream().sorted().iterator()));\n         }\n \n"}}, {"oid": "35385c1e9484e6b4df1b1683e1708da988ce6a3e", "url": "https://github.com/line/armeria/commit/35385c1e9484e6b4df1b1683e1708da988ce6a3e", "message": "Address comments by @trustin and @ikhoon", "committedDate": "2020-03-11T09:33:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg1MTI5MA==", "url": "https://github.com/line/armeria/pull/2570#discussion_r390851290", "bodyText": "You have to check null first.", "author": "trustin", "createdAt": "2020-03-11T09:46:57Z", "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -58,6 +59,7 @@\n                  List<RoutingPredicate<QueryParams>> paramPredicates,\n                  List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         this.pathMapping = requireNonNull(pathMapping, \"pathMapping\");\n+        checkArgument(!methods.isEmpty(), \"methods is empty.\");\n         this.methods = Sets.immutableEnumSet(requireNonNull(methods, \"methods\"));", "originalCommit": "35385c1e9484e6b4df1b1683e1708da988ce6a3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2MTE4OA==", "url": "https://github.com/line/armeria/pull/2570#discussion_r390861188", "bodyText": "Oops \ud83d\ude05", "author": "minwoox", "createdAt": "2020-03-11T10:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg1MTI5MA=="}], "type": "inlineReview", "revised_code": {"commit": "e6c8b53732a72cc8b0b5525ceef089c8b649d4b1", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java b/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\nindex e319ba779..2fff347c5 100644\n--- a/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n+++ b/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n\n@@ -59,8 +59,8 @@ final class DefaultRoute implements Route {\n                  List<RoutingPredicate<QueryParams>> paramPredicates,\n                  List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         this.pathMapping = requireNonNull(pathMapping, \"pathMapping\");\n-        checkArgument(!methods.isEmpty(), \"methods is empty.\");\n-        this.methods = Sets.immutableEnumSet(requireNonNull(methods, \"methods\"));\n+        checkArgument(!requireNonNull(methods, \"methods\").isEmpty(), \"methods is empty.\");\n+        this.methods = Sets.immutableEnumSet(methods);\n         this.consumes = ImmutableSet.copyOf(requireNonNull(consumes, \"consumes\"));\n         this.produces = ImmutableSet.copyOf(requireNonNull(produces, \"produces\"));\n         this.paramPredicates = ImmutableList.copyOf(requireNonNull(paramPredicates, \"paramPredicates\"));\n"}}, {"oid": "5d6677e83a5cd9be7bb8d30188883efc648d4f10", "url": "https://github.com/line/armeria/commit/5d6677e83a5cd9be7bb8d30188883efc648d4f10", "message": "Fix`", "committedDate": "2020-03-11T09:52:53Z", "type": "commit"}, {"oid": "37afd0bbb69c77d6c8d70ab794011c12d194ea27", "url": "https://github.com/line/armeria/commit/37afd0bbb69c77d6c8d70ab794011c12d194ea27", "message": "Use Sets.immutableEnumSet", "committedDate": "2020-03-11T10:02:20Z", "type": "commit"}, {"oid": "e6c8b53732a72cc8b0b5525ceef089c8b649d4b1", "url": "https://github.com/line/armeria/commit/e6c8b53732a72cc8b0b5525ceef089c8b649d4b1", "message": "Add null check", "committedDate": "2020-03-11T10:03:28Z", "type": "commit"}]}