{"pr_number": 2533, "pr_title": "Fix Subscriber not to throw an exception", "pr_createdAt": "2020-02-26T08:30:27Z", "pr_url": "https://github.com/line/armeria/pull/2533", "timeline": [{"oid": "c1b4983f31516f7a6586428b4fd0d1fd00389390", "url": "https://github.com/line/armeria/commit/c1b4983f31516f7a6586428b4fd0d1fd00389390", "message": "Handle exceptions thrown by Subscriber\nMotivation:\nAccording to https://github.com/reactive-streams/reactive-streams-jvm#2.13,\na subscriber must not throw an exception but just call `Subscription.cancel()`.\nSome of our subscribers violated this rule so we should fix them.\n\nModifications:\n- Call `Subscription.cancel()` instead of throwing an exception in `Subscriber`s\n\nResult:\n- Close #2475\n- `Subscriber` does not throw an exception anymore.", "committedDate": "2020-02-26T08:28:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTgzNA==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384341834", "bodyText": "I would say none of these methods should be invoked. The exceptions that were thrown in this class are like an assertion, i.e. better leaving as is?", "author": "trustin", "createdAt": "2020-02-26T08:42:16Z", "path": "core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java", "diffHunk": "@@ -30,21 +34,22 @@\n \n     @Override\n     public void onSubscribe(Subscription s) {\n-        throw new IllegalStateException(\"onSubscribe(\" + s + ')');\n+        s.cancel();\n+        logger.warn(\"onSubscribe({}) is invoked.\", s);", "originalCommit": "c1b4983f31516f7a6586428b4fd0d1fd00389390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3OTYxOQ==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384379619", "bodyText": "Sounds good. Let me revert this class. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-02-26T09:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTgzNA=="}], "type": "inlineReview", "revised_code": {"commit": "bdd155b6ca767d71ec1931179798ffbbf9068f69", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java b/core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java\nindex 6325c555a6..17e33aaf79 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java\n\n@@ -34,22 +30,21 @@ final class NeverInvokedSubscriber<T> implements Subscriber<T> {\n \n     @Override\n     public void onSubscribe(Subscription s) {\n-        s.cancel();\n-        logger.warn(\"onSubscribe({}) is invoked.\", s);\n+        throw new IllegalStateException(\"onSubscribe(\" + s + ')');\n     }\n \n     @Override\n     public void onNext(T t) {\n-        logger.warn(\"onNext({}) is invoked.\", t);\n+        throw new IllegalStateException(\"onNext(\" + t + ')');\n     }\n \n     @Override\n     public void onError(Throwable t) {\n-        logger.warn(\"onError() is invoked with:\", t);\n+        throw new IllegalStateException(\"onError(\" + t + ')', t);\n     }\n \n     @Override\n     public void onComplete() {\n-        logger.warn(\"onComplete() is invoked.\");\n+        throw new IllegalStateException(\"onComplete()\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MjMyNw==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384342327", "bodyText": "Probably better not logging, because a response can be closed by a remote peer at any time?", "author": "trustin", "createdAt": "2020-02-26T08:43:18Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "diffHunk": "@@ -248,7 +252,9 @@ public void onComplete() {\n                 return;\n             }\n             if (!trailers.isEmpty()) {\n-                writer.write(trailers);\n+                if (!writer.tryWrite(trailers)) {\n+                    logger.warn(\"Failed to write a trailers: {}\", trailers);", "originalCommit": "c1b4983f31516f7a6586428b4fd0d1fd00389390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM4MTAyNA==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384381024", "bodyText": "Removed that. Thanks!", "author": "minwoox", "createdAt": "2020-02-26T09:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MjMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "bdd155b6ca767d71ec1931179798ffbbf9068f69", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java b/core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java\nindex fab2e94880..7075e8a5d4 100644\n--- a/core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java\n+++ b/core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java\n\n@@ -252,9 +252,7 @@ public final class ResponseConversionUtil {\n                 return;\n             }\n             if (!trailers.isEmpty()) {\n-                if (!writer.tryWrite(trailers)) {\n-                    logger.warn(\"Failed to write a trailers: {}\", trailers);\n-                }\n+                writer.tryWrite(trailers);\n             }\n             writer.close();\n         }\n"}}, {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69", "url": "https://github.com/line/armeria/commit/bdd155b6ca767d71ec1931179798ffbbf9068f69", "message": "Address comments by @trustin", "committedDate": "2020-02-26T09:49:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384427207", "bodyText": "I guess IllegalStateException is better in this class because the exception does not go to the caller.", "author": "trustin", "createdAt": "2020-02-26T11:13:14Z", "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -246,7 +247,8 @@ public void onNext(HttpObject o) {\n                 if (o instanceof HttpHeaders) {\n                     final HttpHeaders trailers = (HttpHeaders) o;\n                     if (trailers.contains(HttpHeaderNames.STATUS)) {\n-                        throw newIllegalStateException(\"published a trailers with status: \" + o);\n+                        fail(new IllegalArgumentException(\"published a trailers with status: \" + o));", "originalCommit": "bdd155b6ca767d71ec1931179798ffbbf9068f69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMzI4OA==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384433288", "bodyText": "Never mind. It's good as it is.", "author": "trustin", "createdAt": "2020-02-26T11:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMzc1NA==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384433754", "bodyText": "I slightly prefer to leave this as it is because the user will see this exception from RequestLog even though the exception does not go to the caller right away.\nHad a chat with @trustin and he is fine with both exceptions.\nBut I'm not so strong on this. \ud83d\ude06 Any idea? @anuraaga, @ikhoon", "author": "minwoox", "createdAt": "2020-02-26T11:27:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzNTI2OQ==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384435269", "bodyText": "Okay then, let me just use IllegalArgumentException. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-02-26T11:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2NTIxMg==", "url": "https://github.com/line/armeria/pull/2533#discussion_r384565212", "bodyText": "These comments seem very noisy. Do we need them? I feel like just leaving it to a SafeSubscriber abstract class that always adds try / catch is better than adding these comments that reduce the readability of the code.", "author": "anuraaga", "createdAt": "2020-02-26T15:25:40Z", "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HttpHealthChecker.java", "diffHunk": "@@ -174,6 +174,10 @@ public void onSubscribe(Subscription subscription) {\n \n         @Override\n         public void onNext(HttpObject obj) {\n+            // There's no chance that an exception is raised from the underlying logic, so we don't do", "originalCommit": "bdd155b6ca767d71ec1931179798ffbbf9068f69", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}