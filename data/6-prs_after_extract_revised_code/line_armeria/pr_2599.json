{"pr_number": 2599, "pr_title": "Provide a way to access a parent log from a child log", "pr_createdAt": "2020-03-17T17:15:05Z", "pr_url": "https://github.com/line/armeria/pull/2599", "timeline": [{"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b", "url": "https://github.com/line/armeria/commit/9ed5a0d661c2e1880a089042f6d554517412c01b", "message": "Provide a way to access parent log from child log\n\nMotivation:\n\n`RequestId` is used for tracking the request and the response pair.\nA request can be executed multiple times by `RetryingClient`.\nIt is difficult to group and trace all retried requests without the request ID of the original request.\nBy accessing the parent log from the current request context, we are able to log the parent and current request ID pair.\n\nModifications:\n\n- Add `parent()` to `RequestLogAccess`\n- Include the request ID of parent to `toString()`\n\nResults:\n\n- You can now access a parent log from a child log.\n- `DefaultClientRequest.toString()` contains a parent request ID if available.\n- Fixes #2588", "committedDate": "2020-03-17T17:13:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTE3Mw==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394061173", "bodyText": "Checkstyle?", "author": "trustin", "createdAt": "2020-03-18T01:38:40Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java", "diffHunk": "@@ -31,6 +31,7 @@\n import com.linecorp.armeria.common.RequestContextWrapper;\n import com.linecorp.armeria.common.RequestId;\n import com.linecorp.armeria.common.RpcRequest;\n+import com.linecorp.armeria.common.logging.RequestLogAccess;", "originalCommit": "9ed5a0d661c2e1880a089042f6d554517412c01b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NjEyMw==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394066123", "bodyText": "Oops..", "author": "ikhoon", "createdAt": "2020-03-18T01:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java\nindex 67a95024b..40c614fb1 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java\n\n@@ -31,7 +31,6 @@ import com.linecorp.armeria.common.HttpRequest;\n import com.linecorp.armeria.common.RequestContextWrapper;\n import com.linecorp.armeria.common.RequestId;\n import com.linecorp.armeria.common.RpcRequest;\n-import com.linecorp.armeria.common.logging.RequestLogAccess;\n import com.linecorp.armeria.server.ServiceRequestContext;\n \n import io.netty.util.AttributeKey;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTc5Nw==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394061797", "bodyText": "Could you add checkState that makes sure that parent is null?", "author": "trustin", "createdAt": "2020-03-18T01:41:10Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -420,6 +428,11 @@ private boolean isDeferredFlagSet(RequestLogProperty property) {\n     public void addChild(RequestLogAccess child) {\n         checkState(!hasLastChild, \"last child is already added\");\n         requireNonNull(child, \"child\");\n+\n+        if (child instanceof DefaultRequestLog) {\n+            ((DefaultRequestLog) child).parent = this;", "originalCommit": "9ed5a0d661c2e1880a089042f6d554517412c01b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java b/core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java\nindex e1294e97b..0914d4d3d 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java\n\n@@ -430,6 +430,7 @@ final class DefaultRequestLog implements RequestLog, RequestLogBuilder {\n         requireNonNull(child, \"child\");\n \n         if (child instanceof DefaultRequestLog) {\n+            checkState(((DefaultRequestLog) child).parent == null, \"child has parent already\");\n             ((DefaultRequestLog) child).parent = this;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjUzMg==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394062532", "bodyText": "This will create a new clientReqIdStr every time. How about adding some state variable to minimize the regeneration of strings? e.g. You could create a small flag that keeps whether 1) channel is available and 2) log.parent is available, so strVal is regenerated when the flag changes.", "author": "trustin", "createdAt": "2020-03-18T01:44:11Z", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,18 +556,30 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n+        final String clientRequestIdStr = toStringClientRequestId();\n         if (strVal != null) {\n-            return strVal;\n+            return clientRequestIdStr + strVal;\n         }\n-        return toStringSlow();\n+        return clientRequestIdStr + toStringSlow();\n+    }", "originalCommit": "9ed5a0d661c2e1880a089042f6d554517412c01b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDk3NQ==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394064975", "bodyText": "Oh, that sounds nice. Let me address it!", "author": "ikhoon", "createdAt": "2020-03-18T01:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\nindex b578dfcc1..f4324604a 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n\n@@ -556,23 +559,27 @@ public final class DefaultClientRequestContext\n \n     @Override\n     public String toString() {\n-        final String clientRequestIdStr = toStringClientRequestId();\n-        if (strVal != null) {\n-            return clientRequestIdStr + strVal;\n+        if (strVal == null) {\n+            strVal = toStringSlow();\n+            if (channel() != null) {\n+                strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n+            }\n+            if (log().parent() != null) {\n+                strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n+            }\n+            return strVal;\n         }\n-        return clientRequestIdStr + toStringSlow();\n-    }\n \n-    private String toStringClientRequestId() {\n-        final String creqId = id().shortText();\n-        final RequestLogAccess parent = log.parent();\n-        final String pcreqId = parent != null ? parent.context().id().shortText() : null;\n-        final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n-        buf.append(\"[creqId=\").append(creqId);\n-        if (parent != null) {\n-            buf.append(\", pcreqId=\").append(pcreqId);\n+        boolean dirty = false;\n+        if (channel() != null && (strValAvailabilities & STR_CHANNEL_AVAILABILITY) == 0) {\n+            dirty = true;\n+            strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n+        } else if (log().parent() != null && (strValAvailabilities & STR_PARENT_LOG_AVAILABILITY) == 0) {\n+            dirty = true;\n+            strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n         }\n-        return buf.toString();\n+\n+        return dirty ? strVal = toStringSlow() : strVal;\n     }\n \n     private String toStringSlow() {\n"}}, {"oid": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "url": "https://github.com/line/armeria/commit/df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "message": "Address comments by @trustin / Add strValAvailabilities", "committedDate": "2020-03-18T03:05:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzkzOQ==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394087939", "bodyText": "How about simplifying like this:\nfinal Channel ch = channel();\nfinal RequestLogAccess parent = log().parent();\nfinal short newAvailability = (ch != null ? ... : 0) | (parent != null ? ... : 0);\nif (strVal != null && strValAvailabilities == newAvailability) {\n    return strVal;\n}\n\nstrValAvailabilities = newAvailability;\nreturn toStringSlow(ch, parent);\nKeep in mind that toStringSlow() does this:\n        if (ch != null) {\n            this.strVal = strVal;\n        }\n.. and you must change it to make it work properly. Add tests properly so that this kind of mistake doesn't slip in.", "author": "trustin", "createdAt": "2020-03-18T03:29:17Z", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,30 +559,37 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n-        final String clientRequestIdStr = toStringClientRequestId();\n-        if (strVal != null) {\n-            return clientRequestIdStr + strVal;\n+        if (strVal == null) {\n+            strVal = toStringSlow();\n+            if (channel() != null) {\n+                strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n+            }\n+            if (log().parent() != null) {\n+                strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n+            }", "originalCommit": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMDEwMQ==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394120101", "bodyText": "Thanks for the gentle suggestion. I've learned a lot. \ud83d\ude4f", "author": "ikhoon", "createdAt": "2020-03-18T05:54:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzkzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "495faffb45f1f92c2f287b54bf15c626ca5c1523", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\nindex f4324604a..2dfe18021 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n\n@@ -559,36 +559,24 @@ public final class DefaultClientRequestContext\n \n     @Override\n     public String toString() {\n-        if (strVal == null) {\n-            strVal = toStringSlow();\n-            if (channel() != null) {\n-                strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n-            }\n-            if (log().parent() != null) {\n-                strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n-            }\n+        final Channel ch = channel();\n+        final RequestLogAccess parent = log().parent();\n+        final short newAvailability =\n+                (short) ((ch != null ? STR_CHANNEL_AVAILABILITY : 0) |\n+                         (parent != null ? STR_PARENT_LOG_AVAILABILITY : 0));\n+        if (strVal != null && strValAvailabilities == newAvailability) {\n             return strVal;\n         }\n \n-        boolean dirty = false;\n-        if (channel() != null && (strValAvailabilities & STR_CHANNEL_AVAILABILITY) == 0) {\n-            dirty = true;\n-            strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n-        } else if (log().parent() != null && (strValAvailabilities & STR_PARENT_LOG_AVAILABILITY) == 0) {\n-            dirty = true;\n-            strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n-        }\n-\n-        return dirty ? strVal = toStringSlow() : strVal;\n+        strValAvailabilities = newAvailability;\n+        return strVal = toStringSlow(ch, parent) ;\n     }\n \n-    private String toStringSlow() {\n+    private String toStringSlow(@Nullable Channel ch, @Nullable RequestLogAccess parent) {\n         // Prepare all properties required for building a String, so that we don't have a chance of\n         // building one String with a thread-local StringBuilder while building another String with\n         // the same StringBuilder. See TemporaryThreadLocals for more information.\n-        final Channel ch = channel();\n         final String creqId = id().shortText();\n-        final RequestLogAccess parent = log.parent();\n         final String pcreqId = parent != null ? parent.context().id().shortText() : null;\n         final String sreqId = root() != null ? root().id().shortText() : null;\n         final String chanId = ch != null ? ch.id().asShortText() : null;\n"}}, {"oid": "495faffb45f1f92c2f287b54bf15c626ca5c1523", "url": "https://github.com/line/armeria/commit/495faffb45f1f92c2f287b54bf15c626ca5c1523", "message": "Address comments by @trustin / Clean up implementation", "committedDate": "2020-03-18T03:53:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394109596", "bodyText": "How about just preqId?", "author": "trustin", "createdAt": "2020-03-18T05:10:16Z", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -578,6 +588,9 @@ private String toStringSlow() {\n         // Build the string representation.\n         final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n         buf.append(\"[creqId=\").append(creqId);\n+        if (parent != null) {\n+            buf.append(\", pcreqId=\").append(pcreqId);\n+        }\n         if (sreqId != null) {\n             buf.append(\", sreqId=\").append(sreqId);\n         }", "originalCommit": "495faffb45f1f92c2f287b54bf15c626ca5c1523", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMTY2Mg==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394111662", "bodyText": "I meant renaming pcreqId to preqId, just in case it wasn't clear.", "author": "trustin", "createdAt": "2020-03-18T05:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMjMyNQ==", "url": "https://github.com/line/armeria/pull/2599#discussion_r394112325", "bodyText": "I thought the preqId too. preqId sounds good to me. Let's go with preqId.", "author": "ikhoon", "createdAt": "2020-03-18T05:22:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e7f65bd2a7c6a22f1eb35099be3c8c78c29803f2", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\nindex 2dfe18021..68667997f 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java\n\n@@ -589,7 +589,7 @@ public final class DefaultClientRequestContext\n         final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n         buf.append(\"[creqId=\").append(creqId);\n         if (parent != null) {\n-            buf.append(\", pcreqId=\").append(pcreqId);\n+            buf.append(\", preqId=\").append(preqId);\n         }\n         if (sreqId != null) {\n             buf.append(\", sreqId=\").append(sreqId);\n"}}, {"oid": "e7f65bd2a7c6a22f1eb35099be3c8c78c29803f2", "url": "https://github.com/line/armeria/commit/e7f65bd2a7c6a22f1eb35099be3c8c78c29803f2", "message": "Rename to `preqId` and fix checkstyle", "committedDate": "2020-03-18T05:27:38Z", "type": "commit"}]}