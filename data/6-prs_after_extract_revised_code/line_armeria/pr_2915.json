{"pr_number": 2915, "pr_title": "Allow `@Blocking` annotation to be used at the class level", "pr_createdAt": "2020-07-20T12:48:13Z", "pr_url": "https://github.com/line/armeria/pull/2915", "timeline": [{"oid": "67337d961d671ca90c0fa0dd7c229f9f049d4d6e", "url": "https://github.com/line/armeria/commit/67337d961d671ca90c0fa0dd7c229f9f049d4d6e", "message": "Allow `@Blocking` annotation to be used at the class level\n\nMotivation:\n\nCurrently, `@Blocking` could be used only for a method\nto run a service on blocking task executor.\nIf users want to run all services on blocking task executor,\nthey have to annotate all methods. It would cause a bad user experience.\n\nI think we can widen `@Blocking` annotation target to class level without harmless.\n\nModifications:\n\n- Add `ElementType.TYPE` to target of `@Blocking`\n- Miscellaneous\n- Misallouse\n  - Clean up unused parameters in test code\n  - Add `@SafeVarargs` for generic varags.\n\nResult:\n\nYou can now annotate `@Blocking` annotation at class level.", "committedDate": "2020-07-20T12:46:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1NTQ4Mw==", "url": "https://github.com/line/armeria/pull/2915#discussion_r457355483", "bodyText": "Could be simplified into a || operator?\nfinal boolean useBlockingTaskExecutor =\n    AnnotationUtil.findFirst(method, Blocking.class) != null ||\n    AnnotationUtil.findFirst(object.getClass(), Blocking.class) != null;", "author": "trustin", "createdAt": "2020-07-20T12:53:23Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -303,7 +303,11 @@ private static HttpStatus defaultResponseStatus(Method method) {\n         final ResponseHeaders responseHeaders = defaultHeaders.build();\n         final HttpHeaders responseTrailers = defaultTrailers.build();\n \n-        final boolean useBlockingTaskExecutor = AnnotationUtil.findFirst(method, Blocking.class) != null;\n+        boolean tempUseBlockingTaskExecutor = AnnotationUtil.findFirst(method, Blocking.class) != null;\n+        if (!tempUseBlockingTaskExecutor) {\n+            tempUseBlockingTaskExecutor = AnnotationUtil.findFirst(object.getClass(), Blocking.class) != null;\n+        }\n+        final boolean useBlockingTaskExecutor = tempUseBlockingTaskExecutor;", "originalCommit": "67337d961d671ca90c0fa0dd7c229f9f049d4d6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fc3b651f0804f5c2c6aeb8b9f9dd6564cfe83e3", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java b/core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java\nindex fe9257887e..2d70b5af4c 100644\n--- a/core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java\n+++ b/core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java\n\n@@ -303,11 +303,9 @@ public final class AnnotatedServiceFactory {\n         final ResponseHeaders responseHeaders = defaultHeaders.build();\n         final HttpHeaders responseTrailers = defaultTrailers.build();\n \n-        boolean tempUseBlockingTaskExecutor = AnnotationUtil.findFirst(method, Blocking.class) != null;\n-        if (!tempUseBlockingTaskExecutor) {\n-            tempUseBlockingTaskExecutor = AnnotationUtil.findFirst(object.getClass(), Blocking.class) != null;\n-        }\n-        final boolean useBlockingTaskExecutor = tempUseBlockingTaskExecutor;\n+        final boolean useBlockingTaskExecutor =\n+                AnnotationUtil.findFirst(method, Blocking.class) != null ||\n+                AnnotationUtil.findFirst(object.getClass(), Blocking.class) != null;\n \n         return routes.stream().map(route -> {\n             final List<AnnotatedValueResolver> resolvers = getAnnotatedValueResolvers(req, route, method,\n"}}, {"oid": "9fc3b651f0804f5c2c6aeb8b9f9dd6564cfe83e3", "url": "https://github.com/line/armeria/commit/9fc3b651f0804f5c2c6aeb8b9f9dd6564cfe83e3", "message": "Address comments by @trustin", "committedDate": "2020-07-20T12:55:36Z", "type": "commit"}, {"oid": "30b12c35c1eb2d6816adc58e618ffc0dfdcc5a45", "url": "https://github.com/line/armeria/commit/30b12c35c1eb2d6816adc58e618ffc0dfdcc5a45", "message": "Checkstyle", "committedDate": "2020-07-20T13:23:59Z", "type": "commit"}]}