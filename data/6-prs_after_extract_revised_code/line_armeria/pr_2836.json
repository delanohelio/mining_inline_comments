{"pr_number": 2836, "pr_title": "Wrap `DnsTimeoutException` with `UnprocessedRequestException`", "pr_createdAt": "2020-06-25T09:58:32Z", "pr_url": "https://github.com/line/armeria/pull/2836", "timeline": [{"oid": "2888e55e6aa8dcacf15f1892ddb442463cd1e262", "url": "https://github.com/line/armeria/commit/2888e55e6aa8dcacf15f1892ddb442463cd1e262", "message": "Wrap `DnsTimeoutException` with `UnprocessedRequestException`\nMotivation:\nWe can wrap `DnsTimeoutException` with `UnprocessedRequestException` because the request is unprocessed.\n\nModifications:\n- Wrap `DnsTimeoutException` with `UnprocessedRequestException`.\n- Wrap other exceptions in `HttpClientDelegate` with `UnprocessedRequestException`.\n- (Breaking) `UnprocessedRequestException(String, Throwable)` constructor is gone.\n- `UnprocessedRequestException(Throwable)` constructor is deprecated.\n  - Use `UnprocessedRequestException.wrap(Throwable)`.\n\nResult:\n- You can retry when `DnsTimeoutException` is raised using `RetryRule.onUnprocessed()`.\n- (Breaking) `UnprocessedRequestException(String, Throwable)` constructor is gone.\n- (Deprecated) `UnprocessedRequestException(Throwable)` constructor is deprecated.\n  - Use `UnprocessedRequestException.wrap(Throwable)`.", "committedDate": "2020-06-25T09:57:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MDUwNA==", "url": "https://github.com/line/armeria/pull/2836#discussion_r445950504", "bodyText": "\ud83d\udc4d", "author": "ikhoon", "createdAt": "2020-06-26T03:37:04Z", "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -131,12 +131,7 @@ public void operationComplete(ChannelFuture future) throws Exception {\n             }\n \n             if (!loggedRequestFirstBytesTransferred) {\n-                final Throwable cause = future.cause();\n-                if (cause instanceof UnprocessedRequestException) {\n-                    fail(cause);\n-                } else {\n-                    fail(new UnprocessedRequestException(cause));\n-                }\n+                fail(UnprocessedRequestException.wrap(future.cause()));", "originalCommit": "2888e55e6aa8dcacf15f1892ddb442463cd1e262", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9688bb45d457cb6b68674ee758cf9779b7ba89b", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java b/core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java\nindex 874299ab31..0302edd5ca 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java\n\n@@ -131,7 +131,7 @@ final class HttpRequestSubscriber implements Subscriber<HttpObject>, ChannelFutu\n             }\n \n             if (!loggedRequestFirstBytesTransferred) {\n-                fail(UnprocessedRequestException.wrap(future.cause()));\n+                fail(UnprocessedRequestException.of(future.cause()));\n             } else {\n                 failAndReset(future.cause());\n             }\n"}}, {"oid": "a9688bb45d457cb6b68674ee758cf9779b7ba89b", "url": "https://github.com/line/armeria/commit/a9688bb45d457cb6b68674ee758cf9779b7ba89b", "message": "Use of", "committedDate": "2020-06-26T08:52:15Z", "type": "commit"}, {"oid": "029cecaf98f4b6935fd223219190d712179a895c", "url": "https://github.com/line/armeria/commit/029cecaf98f4b6935fd223219190d712179a895c", "message": "Merge branch 'master' into wrap_Unprocessed", "committedDate": "2020-06-26T09:29:17Z", "type": "commit"}, {"oid": "029cecaf98f4b6935fd223219190d712179a895c", "url": "https://github.com/line/armeria/commit/029cecaf98f4b6935fd223219190d712179a895c", "message": "Merge branch 'master' into wrap_Unprocessed", "committedDate": "2020-06-26T09:29:17Z", "type": "forcePushed"}]}