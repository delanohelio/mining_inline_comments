{"pr_number": 2706, "pr_title": "Implement TTEXT_NAMED_ENUM serialization format", "pr_createdAt": "2020-05-13T05:41:36Z", "pr_url": "https://github.com/line/armeria/pull/2706", "timeline": [{"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed", "url": "https://github.com/line/armeria/commit/6f58ae94fde45799d9d74b3cdf3c4def809deeed", "message": "Allow TTEXT to serialize enums as strings", "committedDate": "2020-05-13T05:33:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE4NjAzNA==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424186034", "bodyText": "This is to avoid an unnecessary call to getCurrentFieldClassIfIs(). I can remove it if you consider the impact insignificant", "author": "KarboniteKream", "createdAt": "2020-05-13T05:47:29Z", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java", "diffHunk": "@@ -337,7 +344,25 @@ public void writeI16(short i16) throws TException {\n \n     @Override\n     public void writeI32(int i32) throws TException {\n-        writeNameOrValue(TypedParser.INTEGER, i32);\n+        if (!writeEnumsAsString) {", "originalCommit": "6f58ae94fde45799d9d74b3cdf3c4def809deeed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTg3Mg==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205872", "bodyText": "Sounds good to me.", "author": "trustin", "createdAt": "2020-05-13T06:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE4NjAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "39eb181e95677f90d0991ca5949dc040890c224c", "chunk": "diff --git a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java\nindex 8f0fab1c6..3cb24fb51 100644\n--- a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java\n+++ b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java\n\n@@ -344,7 +344,7 @@ public final class TTextProtocol extends TProtocol {\n \n     @Override\n     public void writeI32(int i32) throws TException {\n-        if (!writeEnumsAsString) {\n+        if (!useNamedEnums) {\n             writeNameOrValue(TypedParser.INTEGER, i32);\n             return;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424198310", "bodyText": "This doesn't sound right to me because writeEnumsAsString is only useful for TEXT protocol. How about reverting this and let a user refer to TEXT_ENUM directly?", "author": "trustin", "createdAt": "2020-05-13T06:23:47Z", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "originalCommit": "6f58ae94fde45799d9d74b3cdf3c4def809deeed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5OTg1MA==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424199850", "bodyText": "Sure! The reason I wrote this is that if you set writeEnumsAsString in ThriftJacksonModule, you might assume that behavior will work for all protocols", "author": "KarboniteKream", "createdAt": "2020-05-13T06:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNDE1MA==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424204150", "bodyText": "I think it's fine since TEXT_ENUM is not really a default behavior. For less confusion, how about removing TEXT_ENUM and letting a user get the TProtocolFactory via TTextProtocolFactory.get(true)?", "author": "trustin", "createdAt": "2020-05-13T06:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTAxMw==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205013", "bodyText": "Alternatively, we could register a new SerializationFormat? Then this problem could go away completely.", "author": "trustin", "createdAt": "2020-05-13T06:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTY0Nw==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205647", "bodyText": "e.g. ttext_named_enum and TTEXT_NAMED_ENUM", "author": "trustin", "createdAt": "2020-05-13T06:42:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MzE0Ng==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424263146", "bodyText": "Done. I had to name the protocol ttext-named-enum since underscores are not allowed.", "author": "KarboniteKream", "createdAt": "2020-05-13T08:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}], "type": "inlineReview", "revised_code": {"commit": "39eb181e95677f90d0991ca5949dc040890c224c", "chunk": "diff --git a/thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java b/thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java\nindex b42cb20fd..2b4216dd9 100644\n--- a/thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java\n+++ b/thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java\n\n@@ -73,9 +73,9 @@ public final class ThriftProtocolFactories {\n     public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n \n     /**\n-     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     * {@link TProtocolFactory} for the Thrift TText protocol with named enums.\n      */\n-    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n+    public static final TProtocolFactory TEXT_NAMED_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODcyMw==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424198723", "bodyText": "How about keeping the old method as well for backward compatibility?", "author": "trustin", "createdAt": "2020-05-13T06:24:45Z", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "diffHunk": "@@ -26,20 +26,25 @@\n \n     private static final long serialVersionUID = -7323272088544581160L;\n \n-    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory();\n+    private static final TTextProtocolFactory INSTANCE_ORDINAL = new TTextProtocolFactory(false);\n+    private static final TTextProtocolFactory INSTANCE_STRING = new TTextProtocolFactory(true);\n+\n+    private final boolean writeEnumsAsString;\n \n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n-    public static TTextProtocolFactory get() {\n-        return INSTANCE;\n+    public static TTextProtocolFactory get(boolean writeEnumsAsString) {", "originalCommit": "6f58ae94fde45799d9d74b3cdf3c4def809deeed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39eb181e95677f90d0991ca5949dc040890c224c", "chunk": "diff --git a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\nindex 1a7068ce3..cf80fe9aa 100644\n--- a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\n+++ b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\n\n@@ -26,29 +26,36 @@ public final class TTextProtocolFactory implements TProtocolFactory {\n \n     private static final long serialVersionUID = -7323272088544581160L;\n \n-    private static final TTextProtocolFactory INSTANCE_ORDINAL = new TTextProtocolFactory(false);\n-    private static final TTextProtocolFactory INSTANCE_STRING = new TTextProtocolFactory(true);\n+    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory(false);\n+    private static final TTextProtocolFactory INSTANCE_NAMED_ENUMS = new TTextProtocolFactory(true);\n \n-    private final boolean writeEnumsAsString;\n+    private final boolean useNamedEnums;\n \n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n-    public static TTextProtocolFactory get(boolean writeEnumsAsString) {\n-        return writeEnumsAsString ? INSTANCE_STRING : INSTANCE_ORDINAL;\n+    public static TTextProtocolFactory get(boolean useNamedEnums) {\n+        return useNamedEnums ? INSTANCE_NAMED_ENUMS : INSTANCE;\n     }\n \n-    private TTextProtocolFactory(boolean writeEnumsAsString) {\n-        this.writeEnumsAsString = writeEnumsAsString;\n+    private TTextProtocolFactory(boolean useNamedEnums) {\n+        this.useNamedEnums = useNamedEnums;\n+    }\n+\n+    /**\n+     * Returns whether the serialization of named enums is enabled.\n+     */\n+    public boolean usesNamedEnums() {\n+        return useNamedEnums;\n     }\n \n     @Override\n     public TProtocol getProtocol(TTransport trans) {\n-        return new TTextProtocol(trans, writeEnumsAsString);\n+        return new TTextProtocol(trans, useNamedEnums);\n     }\n \n     @Override\n     public String toString() {\n-        return \"TProtocolFactory(TTEXT)\";\n+        return useNamedEnums ? \"TProtocolFactory(TTEXT_NAMED_ENUM)\" : \"TProtocolFactory(TTEXT)\";\n     }\n }\n"}}, {"oid": "39eb181e95677f90d0991ca5949dc040890c224c", "url": "https://github.com/line/armeria/commit/39eb181e95677f90d0991ca5949dc040890c224c", "message": "Address comments by @trustin", "committedDate": "2020-05-13T08:27:56Z", "type": "commit"}, {"oid": "b291c120dff2cacff6d731b9aaccf51c52bff563", "url": "https://github.com/line/armeria/commit/b291c120dff2cacff6d731b9aaccf51c52bff563", "message": "Add test", "committedDate": "2020-05-13T09:29:37Z", "type": "commit"}, {"oid": "d4accc394b0ec1df421c3ead158bcfbbef28cf7a", "url": "https://github.com/line/armeria/commit/d4accc394b0ec1df421c3ead158bcfbbef28cf7a", "message": "Simplify the test", "committedDate": "2020-05-13T12:02:14Z", "type": "commit"}, {"oid": "9798deabe337307ed1615a0efc7e42468efe113a", "url": "https://github.com/line/armeria/commit/9798deabe337307ed1615a0efc7e42468efe113a", "message": "Keep old constructor of TTextProtocol", "committedDate": "2020-05-13T12:08:45Z", "type": "commit"}, {"oid": "8a8eb5f83c52b0a9dda2e39244b444a7ad1aaf58", "url": "https://github.com/line/armeria/commit/8a8eb5f83c52b0a9dda2e39244b444a7ad1aaf58", "message": "Update ThriftJacksonModule.java", "committedDate": "2020-05-14T01:45:45Z", "type": "commit"}, {"oid": "0d0407b101e7703373fa8b89f347bc315501b25a", "url": "https://github.com/line/armeria/commit/0d0407b101e7703373fa8b89f347bc315501b25a", "message": "Update TTextProtocol.java", "committedDate": "2020-05-14T01:47:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMjg1MQ==", "url": "https://github.com/line/armeria/pull/2706#discussion_r424832851", "bodyText": "This is a breaking change. How about reviving the original get() method?\nget() {\n   return get(false)\n}", "author": "ikhoon", "createdAt": "2020-05-14T02:16:40Z", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "diffHunk": "@@ -26,24 +26,36 @@\n \n     private static final long serialVersionUID = -7323272088544581160L;\n \n-    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory();\n+    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory(false);\n+    private static final TTextProtocolFactory INSTANCE_NAMED_ENUMS = new TTextProtocolFactory(true);\n+\n+    private final boolean useNamedEnums;\n \n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n-    public static TTextProtocolFactory get() {\n-        return INSTANCE;\n+    public static TTextProtocolFactory get(boolean useNamedEnums) {\n+        return useNamedEnums ? INSTANCE_NAMED_ENUMS : INSTANCE;\n+    }", "originalCommit": "0d0407b101e7703373fa8b89f347bc315501b25a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78b0e7806648178a05e1a86d310ec74913df21b4", "chunk": "diff --git a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\nindex cf80fe9aa..dc3333586 100644\n--- a/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\n+++ b/thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java\n\n@@ -34,6 +34,14 @@ public final class TTextProtocolFactory implements TProtocolFactory {\n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n+    public static TTextProtocolFactory get() {\n+        return get(false);\n+    }\n+\n+    /**\n+     * Returns the singleton {@link TTextProtocolFactory} instance,\n+     * with optional serialization of named enums.\n+     */\n     public static TTextProtocolFactory get(boolean useNamedEnums) {\n         return useNamedEnums ? INSTANCE_NAMED_ENUMS : INSTANCE;\n     }\n"}}, {"oid": "78b0e7806648178a05e1a86d310ec74913df21b4", "url": "https://github.com/line/armeria/commit/78b0e7806648178a05e1a86d310ec74913df21b4", "message": "Restore the original get() method", "committedDate": "2020-05-14T02:24:03Z", "type": "commit"}, {"oid": "78b0e7806648178a05e1a86d310ec74913df21b4", "url": "https://github.com/line/armeria/commit/78b0e7806648178a05e1a86d310ec74913df21b4", "message": "Restore the original get() method", "committedDate": "2020-05-14T02:24:03Z", "type": "forcePushed"}]}