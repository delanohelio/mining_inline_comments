{"pr_number": 2412, "pr_title": "Auto-generate gRPC examples with default fields", "pr_createdAt": "2020-01-21T08:00:32Z", "pr_url": "https://github.com/line/armeria/pull/2412", "timeline": [{"oid": "316f080423ca0b4170a3144ec6c85e8282485a6b", "url": "https://github.com/line/armeria/commit/316f080423ca0b4170a3144ec6c85e8282485a6b", "message": "Auto-generate gRPC examples with default fields\n\nMotivation:\n\nA user sometimes uses a default gRPC `Message` instance as an example\nrequest when building a `DocService`:\n\n    DocService.builder()\n              .exampleRequestForMethod(MyServiceGrpc.SERVICE_NAME,\n                                       \"DoSomething\",\n                                       SomeRequest.getDefaultInstance())\n\n.. which is a tedious job that can be automated.\n\nModifications:\n\n- Make `GrpcDocServicePlugin` append an example request generated from\n  the default instance.\n  - The frontend will show the user-specified example first.\n\nResult:\n\n- A user does not need to set the default gRPC examples.", "committedDate": "2020-01-21T07:57:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1NjcxMQ==", "url": "https://github.com/line/armeria/pull/2412#discussion_r368856711", "bodyText": "A bit more characters, but guess we may just stick to Stream API for simplicity Stream.concat(Streams.stream(first), Streams.stream(second)).distinct()", "author": "anuraaga", "createdAt": "2020-01-21T08:08:42Z", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -318,14 +318,20 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                 service.methods().stream().map(m -> new MethodInfo(\n                         m.name(), m.returnTypeSignature(), m.parameters(), m.exceptionTypeSignatures(),\n                         m.endpoints(),\n-                        Iterables.concat(m.exampleHttpHeaders(), exampleHttpHeaders.get(m.name())),\n-                        Iterables.concat(m.exampleRequests(), exampleRequests.get(m.name())),\n+                        // Show the examples added via `DocServiceBuilder` before the examples\n+                        // generated by the plugin.\n+                        concatAndDedup(exampleHttpHeaders.get(m.name()), m.exampleHttpHeaders()),\n+                        concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n                         m.httpMethod(), m.docString()))::iterator,\n                 Iterables.concat(service.exampleHttpHeaders(),\n                                  exampleHttpHeaders.get(\"\")),\n                 service.docString());\n     }\n \n+    private static <T> Iterable<T> concatAndDedup(Iterable<T> first, Iterable<T> second) {\n+        return Streams.stream(Iterables.concat(first, second)).distinct()::iterator;", "originalCommit": "316f080423ca0b4170a3144ec6c85e8282485a6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7479085937d1ebfb5e95bd43c2551b86486577d", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/server/docs/DocService.java b/core/src/main/java/com/linecorp/armeria/server/docs/DocService.java\nindex 3d32419098..d74d0ce8d8 100644\n--- a/core/src/main/java/com/linecorp/armeria/server/docs/DocService.java\n+++ b/core/src/main/java/com/linecorp/armeria/server/docs/DocService.java\n\n@@ -329,7 +330,7 @@ public class DocService extends AbstractCompositeService<HttpService, HttpReques\n     }\n \n     private static <T> Iterable<T> concatAndDedup(Iterable<T> first, Iterable<T> second) {\n-        return Streams.stream(Iterables.concat(first, second)).distinct()::iterator;\n+        return Stream.concat(Streams.stream(first), Streams.stream(second)).distinct()::iterator;\n     }\n \n     private DocServiceVfs vfs(int index) {\n"}}, {"oid": "1666f3ea23553cedfcc22ed79fc24661c52af78f", "url": "https://github.com/line/armeria/commit/1666f3ea23553cedfcc22ed79fc24661c52af78f", "message": "Serialize default fields for user-specified gRPC examples as well", "committedDate": "2020-01-21T09:13:36Z", "type": "commit"}, {"oid": "37db289935752c2979300caa3c83ec7071dd41b9", "url": "https://github.com/line/armeria/commit/37db289935752c2979300caa3c83ec7071dd41b9", "message": "Fix a test", "committedDate": "2020-01-21T09:37:44Z", "type": "commit"}, {"oid": "8771e74e2759f1efc7bb515ec916787c64b88a16", "url": "https://github.com/line/armeria/commit/8771e74e2759f1efc7bb515ec916787c64b88a16", "message": "Checkstyle", "committedDate": "2020-01-21T09:38:17Z", "type": "commit"}, {"oid": "d7479085937d1ebfb5e95bd43c2551b86486577d", "url": "https://github.com/line/armeria/commit/d7479085937d1ebfb5e95bd43c2551b86486577d", "message": "Address the comments from @anuraaga", "committedDate": "2020-01-21T09:40:10Z", "type": "commit"}, {"oid": "aa524cb3731d3af993bb6d7fb642ff28ea9eb722", "url": "https://github.com/line/armeria/commit/aa524cb3731d3af993bb6d7fb642ff28ea9eb722", "message": "Ignore an empty object", "committedDate": "2020-01-21T10:12:38Z", "type": "commit"}, {"oid": "79574d970bacb49cd7887e624215f3e8293cf2ec", "url": "https://github.com/line/armeria/commit/79574d970bacb49cd7887e624215f3e8293cf2ec", "message": "Fix test", "committedDate": "2020-01-21T10:17:57Z", "type": "commit"}]}