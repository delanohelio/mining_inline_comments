{"pr_number": 2687, "pr_title": "Fix a bug where two threads access MPSC queue", "pr_createdAt": "2020-05-04T04:01:36Z", "pr_url": "https://github.com/line/armeria/pull/2687", "timeline": [{"oid": "a10d733f701e24f981861abccc6cb3d07e1e5f35", "url": "https://github.com/line/armeria/commit/a10d733f701e24f981861abccc6cb3d07e1e5f35", "message": "Fix a bug where two threads access MPSC queue\nMotivation:\nWe use MPSC queue in `DefaultStreamMessage`. If more than one thread consume the MPSC queue,\nthe index of the queue is not correctly updated so a thread might spin forever in `peek()` as we've seen in #2683.\nThis bug was introduced from 0.98.4 #2539 by me. :cry\n\nModifications:\n- Fix to consume the MPSC queue only by the subscription thread.\n\nResult:\n- You no longer see spinning thread in `StreamMessage`.", "committedDate": "2020-05-04T03:58:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNzA5Ng==", "url": "https://github.com/line/armeria/pull/2687#discussion_r419207096", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!wroteAny && o instanceof AbstractStreamMessage.CloseEvent) {\n          \n          \n            \n                    if (!wroteAny && o instanceof CloseEvent) {", "author": "ikhoon", "createdAt": "2020-05-04T04:15:11Z", "path": "core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java", "diffHunk": "@@ -174,25 +174,33 @@ private void abort0(Throwable cause) {\n             }\n         }\n         assert subscription != null;\n+        final SubscriptionImpl abortedSubscription = subscription;\n \n         if (setState(State.OPEN, State.CLEANUP)) {\n-            notifySubscriberOfCloseEvent(subscription, newCloseEvent(cause));\n+            notifySubscriberOfCloseEvent(abortedSubscription, newCloseEvent(cause));\n             return;\n         }\n \n         if (setState(State.CLOSED, State.CLEANUP)) {\n             // close() or close(cause) has been called before cancel() or abort() is called.\n-\n-            final Object o = queue.peek();\n-            // If there's no data pushed (i.e empty stream), notify subscriber with the event pushed by\n-            // close() or close(cause).\n-            if (!wroteAny && o instanceof CloseEvent) {\n-                notifySubscriberOfCloseEvent(subscription, (CloseEvent) queue.remove());\n-                return;\n+            if (abortedSubscription.needsDirectInvocation()) {\n+                abort0(cause, abortedSubscription);\n+            } else {\n+                abortedSubscription.executor().execute(() -> abort0(cause, abortedSubscription));\n             }\n+        }\n+    }\n \n-            notifySubscriberOfCloseEvent(subscription, newCloseEvent(cause));\n+    private void abort0(Throwable cause, SubscriptionImpl subscription) {\n+        final Object o = queue.peek();\n+        // If there's no data pushed (i.e empty stream), notify subscriber with the event pushed by\n+        // close() or close(cause).\n+        if (!wroteAny && o instanceof AbstractStreamMessage.CloseEvent) {", "originalCommit": "a10d733f701e24f981861abccc6cb3d07e1e5f35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxNzM4Mg==", "url": "https://github.com/line/armeria/pull/2687#discussion_r419217382", "bodyText": "Fixed. Thanks!", "author": "minwoox", "createdAt": "2020-05-04T05:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNzA5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bad66086a92e9116ff80d460de8a0bc9f94c9d28", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java b/core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java\nindex 9c083f428..6d67dc885 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java\n\n@@ -195,7 +195,7 @@ public class DefaultStreamMessage<T> extends AbstractStreamMessageAndWriter<T> {\n         final Object o = queue.peek();\n         // If there's no data pushed (i.e empty stream), notify subscriber with the event pushed by\n         // close() or close(cause).\n-        if (!wroteAny && o instanceof AbstractStreamMessage.CloseEvent) {\n+        if (!wroteAny && o instanceof CloseEvent) {\n             notifySubscriberOfCloseEvent(subscription, (CloseEvent) queue.remove());\n             return;\n         }\n"}}, {"oid": "bad66086a92e9116ff80d460de8a0bc9f94c9d28", "url": "https://github.com/line/armeria/commit/bad66086a92e9116ff80d460de8a0bc9f94c9d28", "message": "Address the comment by @ikhoon", "committedDate": "2020-05-04T05:18:32Z", "type": "commit"}]}