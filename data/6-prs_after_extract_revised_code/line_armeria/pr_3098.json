{"pr_number": 3098, "pr_title": "Fix a bug where a request is sent with an empty `:path` pseudo-header.", "pr_createdAt": "2020-10-05T08:04:22Z", "pr_url": "https://github.com/line/armeria/pull/3098", "timeline": [{"oid": "ff2d2cb456db1536b8044a7709ebba7610c8c20e", "url": "https://github.com/line/armeria/commit/ff2d2cb456db1536b8044a7709ebba7610c8c20e", "message": "Fix a bug where a request is sent with an empty `:path` pseudo-header.\n\nMotivation:\n\nWhen a request is sent with absolute URI that does not contrains path,\n```java\nvar client = WebClient.of();\nclient.get(\"https://google.com\").aggregate();\n```\n\nthen the request is failed with:\n```\nCaused by: com.linecorp.armeria.common.stream.ClosedStreamException: received a RST_STREAM frame: PROTOCOL_ERROR\n```\n\nThe request is rejected by remote peers because it has an empty `:path` pseudo-header.\nFrom the [HTTP/2 spec](https://tools.ietf.org/html/rfc7540#section-8.1.2.3),\n> This pseudo-header field MUST NOT be empty for \"http\" or \"https\"\n  URIs; \"http\" or \"https\" URIs that do not contain a path component\n  MUST include a value of '/'.\n\nMotifications:\n\n- Set path to `/` if it is empty\n\nResults:\n\nArmeria client sets default path(`\\`) properly if it is empty.", "committedDate": "2020-10-05T08:03:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxNDEwOA==", "url": "https://github.com/line/armeria/pull/3098#discussion_r501614108", "bodyText": "Should we optimize like this:\nif (String.isNullOrEmpty(path)) {\n    path = query == null ? \"/\" : \"/?\" + query;\n} else if (query != null) {\n    path = path + '?' + query;\n}", "author": "trustin", "createdAt": "2020-10-08T10:27:55Z", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -69,7 +71,10 @@ public HttpResponse execute(HttpRequest req) {\n \n             final Endpoint endpoint = Endpoint.parse(uri.getAuthority());\n             final String query = uri.getRawQuery();\n-            final String path = uri.getRawPath();\n+            String path = uri.getRawPath();\n+            if (Strings.isNullOrEmpty(path)) {\n+                path = \"/\";\n+            }", "originalCommit": "ff2d2cb456db1536b8044a7709ebba7610c8c20e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b9f9627d25a49a9c3d8f47a5e2ee462785aa7939", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java b/core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java\nindex e1ce7dc270..425cde6e69 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java\n\n@@ -73,10 +73,11 @@ final class DefaultWebClient extends UserClient<HttpRequest, HttpResponse> imple\n             final String query = uri.getRawQuery();\n             String path = uri.getRawPath();\n             if (Strings.isNullOrEmpty(path)) {\n-                path = \"/\";\n+                path = query == null ? \"/\" : \"/?\" + query;\n+            } else if (query != null) {\n+                path = path + '?' + query;\n             }\n-            final HttpRequest newReq = req.withHeaders(req.headers().toBuilder()\n-                                                          .path(query == null ? path : path + '?' + query));\n+            final HttpRequest newReq = req.withHeaders(req.headers().toBuilder().path(path));\n             return execute(endpoint, newReq, protocol);\n         }\n \n"}}, {"oid": "b9f9627d25a49a9c3d8f47a5e2ee462785aa7939", "url": "https://github.com/line/armeria/commit/b9f9627d25a49a9c3d8f47a5e2ee462785aa7939", "message": "Address comments by @trustin", "committedDate": "2020-10-08T15:56:01Z", "type": "commit"}]}