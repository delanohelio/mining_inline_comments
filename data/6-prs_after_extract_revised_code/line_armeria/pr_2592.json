{"pr_number": 2592, "pr_title": "Change CountingSampler to accept float instead of double", "pr_createdAt": "2020-03-16T09:34:41Z", "pr_url": "https://github.com/line/armeria/pull/2592", "timeline": [{"oid": "954c0c63d451b968e60822cad067a098a1e83055", "url": "https://github.com/line/armeria/commit/954c0c63d451b968e60822cad067a098a1e83055", "message": "Change CountingSampler to accept float instead of double", "committedDate": "2020-03-16T09:34:20Z", "type": "commit"}, {"oid": "1228cadb5131a8f28dcb4f5e2e675890ce622fcb", "url": "https://github.com/line/armeria/commit/1228cadb5131a8f28dcb4f5e2e675890ce622fcb", "message": "More tests", "committedDate": "2020-03-16T09:42:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5MTYyOA==", "url": "https://github.com/line/armeria/pull/2592#discussion_r392891628", "bodyText": "Isn't this 1?", "author": "minwoox", "createdAt": "2020-03-16T09:44:48Z", "path": "core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java", "diffHunk": "@@ -36,22 +36,29 @@\n \n public class CountingSamplerTest {\n     @Test\n-    public void testSamplingRateMinimumLimit() throws Exception {\n-        assertThatThrownBy(() -> CountingSampler.create(-1.99)).isInstanceOf(IllegalArgumentException.class);\n+    public void testSamplingRateMinimumLimit() {\n+        assertThatThrownBy(() -> CountingSampler.create(-1.99f)).isInstanceOf(IllegalArgumentException.class);\n     }\n \n     @Test\n-    public void testSamplingRateMaximumLimit() throws Exception {\n-        assertThatThrownBy(() -> CountingSampler.create(1.01)).isInstanceOf(IllegalArgumentException.class);\n+    public void testSamplingRateMaximumLimit() {\n+        assertThatThrownBy(() -> CountingSampler.create(1.01f)).isInstanceOf(IllegalArgumentException.class);\n     }\n \n     @Test\n-    public void testNeverSampledSampler() throws Exception {\n-        assertThat(CountingSampler.create(0.0)).isSameAs(Sampler.never());\n+    public void testSamplingRatePercentageRounding() {\n+        assertThat(CountingSampler.create(0.01f)).isInstanceOfSatisfying(CountingSampler.class, sampler -> {\n+            assertThat(sampler.sampleDecisions.cardinality()).isEqualTo(10);", "originalCommit": "1228cadb5131a8f28dcb4f5e2e675890ce622fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5MjQzMQ==", "url": "https://github.com/line/armeria/pull/2592#discussion_r392892431", "bodyText": "Just noticed it, thanks. Copied from SamplerTest too quickly \ud83d\ude05", "author": "KarboniteKream", "createdAt": "2020-03-16T09:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5MTYyOA=="}], "type": "inlineReview", "revised_code": {"commit": "956ddb8d33c94cc826be18d7f2f263df477deec4", "chunk": "diff --git a/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java b/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\nindex 0979739569..a20c05ef00 100644\n--- a/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\n+++ b/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\n\n@@ -48,7 +48,7 @@ public class CountingSamplerTest {\n     @Test\n     public void testSamplingRatePercentageRounding() {\n         assertThat(CountingSampler.create(0.01f)).isInstanceOfSatisfying(CountingSampler.class, sampler -> {\n-            assertThat(sampler.sampleDecisions.cardinality()).isEqualTo(10);\n+            assertThat(sampler.sampleDecisions.cardinality()).isEqualTo(1);\n         });\n     }\n \n"}}, {"oid": "956ddb8d33c94cc826be18d7f2f263df477deec4", "url": "https://github.com/line/armeria/commit/956ddb8d33c94cc826be18d7f2f263df477deec4", "message": "Fix test", "committedDate": "2020-03-16T09:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5MzM4NA==", "url": "https://github.com/line/armeria/pull/2592#discussion_r392893384", "bodyText": "nit: you could just do isOne().", "author": "minwoox", "createdAt": "2020-03-16T09:47:57Z", "path": "core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java", "diffHunk": "@@ -36,22 +36,29 @@\n \n public class CountingSamplerTest {\n     @Test\n-    public void testSamplingRateMinimumLimit() throws Exception {\n-        assertThatThrownBy(() -> CountingSampler.create(-1.99)).isInstanceOf(IllegalArgumentException.class);\n+    public void testSamplingRateMinimumLimit() {\n+        assertThatThrownBy(() -> CountingSampler.create(-1.99f)).isInstanceOf(IllegalArgumentException.class);\n     }\n \n     @Test\n-    public void testSamplingRateMaximumLimit() throws Exception {\n-        assertThatThrownBy(() -> CountingSampler.create(1.01)).isInstanceOf(IllegalArgumentException.class);\n+    public void testSamplingRateMaximumLimit() {\n+        assertThatThrownBy(() -> CountingSampler.create(1.01f)).isInstanceOf(IllegalArgumentException.class);\n     }\n \n     @Test\n-    public void testNeverSampledSampler() throws Exception {\n-        assertThat(CountingSampler.create(0.0)).isSameAs(Sampler.never());\n+    public void testSamplingRatePercentageRounding() {\n+        assertThat(CountingSampler.create(0.01f)).isInstanceOfSatisfying(CountingSampler.class, sampler -> {\n+            assertThat(sampler.sampleDecisions.cardinality()).isEqualTo(1);", "originalCommit": "956ddb8d33c94cc826be18d7f2f263df477deec4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "147e6fb18a866413ff1461bab51ddba95aee97a1", "chunk": "diff --git a/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java b/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\nindex a20c05ef00..f2518d84b7 100644\n--- a/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\n+++ b/core/src/test/java/com/linecorp/armeria/common/util/CountingSamplerTest.java\n\n@@ -48,7 +48,7 @@ public class CountingSamplerTest {\n     @Test\n     public void testSamplingRatePercentageRounding() {\n         assertThat(CountingSampler.create(0.01f)).isInstanceOfSatisfying(CountingSampler.class, sampler -> {\n-            assertThat(sampler.sampleDecisions.cardinality()).isEqualTo(1);\n+            assertThat(sampler.sampleDecisions.cardinality()).isOne();\n         });\n     }\n \n"}}, {"oid": "147e6fb18a866413ff1461bab51ddba95aee97a1", "url": "https://github.com/line/armeria/commit/147e6fb18a866413ff1461bab51ddba95aee97a1", "message": "Address comment by @minwoox", "committedDate": "2020-03-16T09:53:50Z", "type": "commit"}, {"oid": "a94e2b4323593db80c981ee2a39c0bed24c69fea", "url": "https://github.com/line/armeria/commit/a94e2b4323593db80c981ee2a39c0bed24c69fea", "message": "Add more tests", "committedDate": "2020-03-16T09:59:37Z", "type": "commit"}]}