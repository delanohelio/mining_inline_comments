{"pr_number": 3197, "pr_title": "Provide a way to customize gRPC Status mapping rule", "pr_createdAt": "2020-11-26T12:15:17Z", "pr_url": "https://github.com/line/armeria/pull/3197", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NjgzMw==", "url": "https://github.com/line/armeria/pull/3197#discussion_r531446833", "bodyText": "Should we iterate and use isAssignableFrom() instead?", "author": "trustin", "createdAt": "2020-11-27T08:25:33Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java", "diffHunk": "@@ -80,6 +85,13 @@\n     public static Status fromThrowable(Throwable t) {\n         t = unwrap(requireNonNull(t, \"t\"));\n \n+        if (!exceptionMappings.isEmpty()) {\n+            final Status status = exceptionMappings.get(t.getClass());", "originalCommit": "9ae6d1d81fe734b0a52445e5a67d685f4893a721", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1MjEwNA==", "url": "https://github.com/line/armeria/pull/3197#discussion_r531652104", "bodyText": "\ud83d\udc4d We need it to find the nearest exception type from the exception hierarchy.", "author": "ikhoon", "createdAt": "2020-11-27T15:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NjgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "dde9d6d1369ffaaef0a9c40153cc0f3c7badaf87", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java b/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java\nsimilarity index 82%\nrename from grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java\nrename to grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java\nindex 38fe45fb9..ade31ac99 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java\n\n@@ -71,24 +77,23 @@ import io.netty.handler.codec.http2.Http2Exception;\n /**\n  * Internal Utilities for handling {@link Status} in Armeria.\n  */\n-public final class GrpcStatusUtil {\n-\n-    private static final Logger logger = LoggerFactory.getLogger(GrpcStatusUtil.class);\n+public final class GrpcStatus {\n \n-    private static final Map<Class<? extends Throwable>, Status> exceptionMappings =\n-            new MapMaker().weakKeys().makeMap();\n+    private static final Logger logger = LoggerFactory.getLogger(GrpcStatus.class);\n \n     /**\n      * Converts the {@link Throwable} to a {@link Status}, taking into account exceptions specific to Armeria as\n      * well and the protocol package.\n      */\n-    public static Status fromThrowable(Throwable t) {\n+    public static Status fromThrowable(\n+            @Nullable List<Map.Entry<Class<? extends Throwable>, Status>> exceptionMappings, Throwable t) {\n         t = unwrap(requireNonNull(t, \"t\"));\n \n-        if (!exceptionMappings.isEmpty()) {\n-            final Status status = exceptionMappings.get(t.getClass());\n-            if (status != null) {\n-                return status.withCause(t);\n+        if (exceptionMappings != null) {\n+            for (Map.Entry<Class<? extends Throwable>, Status> exceptionMapping : exceptionMappings) {\n+                if (exceptionMapping.getKey().isInstance(t)) {\n+                    return exceptionMapping.getValue().withCause(t);\n+                }\n             }\n         }\n \n"}}, {"oid": "dde9d6d1369ffaaef0a9c40153cc0f3c7badaf87", "url": "https://github.com/line/armeria/commit/dde9d6d1369ffaaef0a9c40153cc0f3c7badaf87", "message": "Provide a way to customize gRPC Status mapping rule\n\nMotivation:\n\nWhen an exception is raised, the exception is converted to gRPC Status by:\n- `GrpcStatus.fromThrowable()` provided by Armeria\n  https://github.com/line/armeria/blob/ca2c25fde0d5a2ae7f4d99a4e511ef307e1fa5fa/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java#L76-L80\n- `Status.fromThrowable()` provided by gRPC-Java\n  https://github.com/grpc/grpc-java/blob/3811ef3d22f90ae8da8200964d178cbd829ee9f8/api/src/main/java/io/grpc/Status.java#L390-L396\n\nHowever, there is no extension point that allows users to map an exception to gRPC status.\n\nModifications:\n\n- Add `registerException()` that maps an excepiton class to gRPC status.\n  ```\n  import com.linecorp.armeria.common.grpc.GrpcStatus;\n\n  GrpcStatus.registerException(AccessDeniedException.class, Status.UNAUTHENTICATED);\n  ```\n- Rename `internal.GrpcStatus` to `internal.GrpcStatusUtil` for avoiding naming conflicts.\n\nResult:\n\n- You can now override the default gRPC mapping rule using `GrpcStatus.registerException()`.\n- Fixes: #3191", "committedDate": "2020-11-28T13:28:00Z", "type": "commit"}, {"oid": "dde9d6d1369ffaaef0a9c40153cc0f3c7badaf87", "url": "https://github.com/line/armeria/commit/dde9d6d1369ffaaef0a9c40153cc0f3c7badaf87", "message": "Provide a way to customize gRPC Status mapping rule\n\nMotivation:\n\nWhen an exception is raised, the exception is converted to gRPC Status by:\n- `GrpcStatus.fromThrowable()` provided by Armeria\n  https://github.com/line/armeria/blob/ca2c25fde0d5a2ae7f4d99a4e511ef307e1fa5fa/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java#L76-L80\n- `Status.fromThrowable()` provided by gRPC-Java\n  https://github.com/grpc/grpc-java/blob/3811ef3d22f90ae8da8200964d178cbd829ee9f8/api/src/main/java/io/grpc/Status.java#L390-L396\n\nHowever, there is no extension point that allows users to map an exception to gRPC status.\n\nModifications:\n\n- Add `registerException()` that maps an excepiton class to gRPC status.\n  ```\n  import com.linecorp.armeria.common.grpc.GrpcStatus;\n\n  GrpcStatus.registerException(AccessDeniedException.class, Status.UNAUTHENTICATED);\n  ```\n- Rename `internal.GrpcStatus` to `internal.GrpcStatusUtil` for avoiding naming conflicts.\n\nResult:\n\n- You can now override the default gRPC mapping rule using `GrpcStatus.registerException()`.\n- Fixes: #3191", "committedDate": "2020-11-28T13:28:00Z", "type": "forcePushed"}, {"oid": "15b17e4cdb2d8a2e13c57d68c4a2c375f427ca91", "url": "https://github.com/line/armeria/commit/15b17e4cdb2d8a2e13c57d68c4a2c375f427ca91", "message": "Clean up", "committedDate": "2020-11-28T13:46:59Z", "type": "commit"}, {"oid": "a325470025712ca249a970fe18e5f3e52d357d00", "url": "https://github.com/line/armeria/commit/a325470025712ca249a970fe18e5f3e52d357d00", "message": "indent", "committedDate": "2020-11-28T13:55:01Z", "type": "commit"}, {"oid": "a325470025712ca249a970fe18e5f3e52d357d00", "url": "https://github.com/line/armeria/commit/a325470025712ca249a970fe18e5f3e52d357d00", "message": "indent", "committedDate": "2020-11-28T13:55:01Z", "type": "forcePushed"}, {"oid": "8cd81a0ad30b7782f003cca101ff89dc87aa7a89", "url": "https://github.com/line/armeria/commit/8cd81a0ad30b7782f003cca101ff89dc87aa7a89", "message": "Remove unsed imports", "committedDate": "2020-11-28T14:05:37Z", "type": "commit"}, {"oid": "24b552d2445b0bd8907b8c7d6965121b0fe53e34", "url": "https://github.com/line/armeria/commit/24b552d2445b0bd8907b8c7d6965121b0fe53e34", "message": "Add gRPC client interceptor test", "committedDate": "2020-11-28T16:32:44Z", "type": "commit"}, {"oid": "6bab87d0b2549fe9f779d8b60e11e6665cab1e43", "url": "https://github.com/line/armeria/commit/6bab87d0b2549fe9f779d8b60e11e6665cab1e43", "message": "Merge branch 'master' into grpc-status-mapping", "committedDate": "2020-11-28T16:50:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA2MDY3Mg==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532060672", "bodyText": "This is a bug fix. onNext() of Subscriber should return normally.\nhttps://github.com/reactive-streams/reactive-streams-jvm#2.13", "author": "ikhoon", "createdAt": "2020-11-28T16:54:33Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java", "diffHunk": "@@ -390,8 +397,9 @@ public void onNext(DeframedMessage message) {\n                 listener.onMessage(msg);\n             }\n         } catch (Throwable t) {\n-            req.close(GrpcStatus.fromThrowable(t).asException());\n-            throw t instanceof RuntimeException ? (RuntimeException) t : new RuntimeException(t);\n+            final Status status = GrpcStatus.fromThrowable(exceptionMappings, t);\n+            req.close(status.asException());\n+            close(status, new Metadata());", "originalCommit": "6bab87d0b2549fe9f779d8b60e11e6665cab1e43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e927d31ce46c2ee2b299f6f81764ebe4c63656cd", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java b/grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java\nindex 2128467e4..c26877078 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java\n\n@@ -397,7 +390,7 @@ final class ArmeriaClientCall<I, O> extends ClientCall<I, O>\n                 listener.onMessage(msg);\n             }\n         } catch (Throwable t) {\n-            final Status status = GrpcStatus.fromThrowable(exceptionMappings, t);\n+            final Status status = GrpcStatus.fromThrowable(t);\n             req.close(status.asException());\n             close(status, new Metadata());\n         }\n"}}, {"oid": "e927d31ce46c2ee2b299f6f81764ebe4c63656cd", "url": "https://github.com/line/armeria/commit/e927d31ce46c2ee2b299f6f81764ebe4c63656cd", "message": "Address comments by @trusin / Add GrpcStatusFunction and remove client-side option", "committedDate": "2020-11-30T04:40:05Z", "type": "commit"}, {"oid": "4f286520d2cbbc12ce13e07371fbc8a61120f900", "url": "https://github.com/line/armeria/commit/4f286520d2cbbc12ce13e07371fbc8a61120f900", "message": "Clean up", "committedDate": "2020-11-30T04:48:01Z", "type": "commit"}, {"oid": "1daa571c9a97d14ac82a31fd5c94242ad4c2eee1", "url": "https://github.com/line/armeria/commit/1daa571c9a97d14ac82a31fd5c94242ad4c2eee1", "message": "Use Map.Entry", "committedDate": "2020-11-30T04:51:23Z", "type": "commit"}, {"oid": "42226fd0802a086a505c9eb660a25cb042d1e5da", "url": "https://github.com/line/armeria/commit/42226fd0802a086a505c9eb660a25cb042d1e5da", "message": "Move toGrpcStatusFunction to GrpcServiceBuilder", "committedDate": "2020-11-30T04:58:53Z", "type": "commit"}, {"oid": "8fb939219c57f0f22003afa217bcc844a866fb57", "url": "https://github.com/line/armeria/commit/8fb939219c57f0f22003afa217bcc844a866fb57", "message": "checkstyle", "committedDate": "2020-11-30T05:00:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1NzgzMg==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532357832", "bodyText": "statusFunction?", "author": "trustin", "createdAt": "2020-11-30T05:39:33Z", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java", "diffHunk": "@@ -39,16 +40,21 @@\n \n     private final DecompressorRegistry decompressorRegistry;\n     private final TransportStatusListener transportStatusListener;\n+    @Nullable\n+    private final GrpcStatusFunction exceptionHandler;", "originalCommit": "8fb939219c57f0f22003afa217bcc844a866fb57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b10e4b66f9f24484c365937e0d7b38857f1fa9d", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java b/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java\nindex 0d6eb7156..3f34e7d59 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java\n\n@@ -41,7 +41,7 @@ public final class HttpStreamDeframerHandler extends ArmeriaMessageDeframerHandl\n     private final DecompressorRegistry decompressorRegistry;\n     private final TransportStatusListener transportStatusListener;\n     @Nullable\n-    private final GrpcStatusFunction exceptionHandler;\n+    private final GrpcStatusFunction statusFunction;\n \n     @Nullable\n     private HttpDeframer<DeframedMessage> deframer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1ODE2NQ==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532358165", "bodyText": "How about adding close(Throwable, Metadata) to deduplicate the convertThrowableToStatus() calls?", "author": "trustin", "createdAt": "2020-11-30T05:40:42Z", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java", "diffHunk": "@@ -441,7 +449,7 @@ private void invokeOnMessage(I request) {\n             listener.onMessage(request);\n         } catch (Throwable t) {\n             upstream.cancel();\n-            close(GrpcStatus.fromThrowable(t), new Metadata());\n+            close(convertThrowableToStatus(t), new Metadata());", "originalCommit": "8fb939219c57f0f22003afa217bcc844a866fb57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b10e4b66f9f24484c365937e0d7b38857f1fa9d", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java b/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java\nindex ac7f56f96..b081e53cf 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java\n\n@@ -449,7 +454,7 @@ final class ArmeriaServerCall<I, O> extends ServerCall<I, O>\n             listener.onMessage(request);\n         } catch (Throwable t) {\n             upstream.cancel();\n-            close(convertThrowableToStatus(t), new Metadata());\n+            close(t, new Metadata());\n         }\n     }\n \n"}}, {"oid": "9b10e4b66f9f24484c365937e0d7b38857f1fa9d", "url": "https://github.com/line/armeria/commit/9b10e4b66f9f24484c365937e0d7b38857f1fa9d", "message": "Address comments by @trustin", "committedDate": "2020-11-30T06:20:56Z", "type": "commit"}, {"oid": "722118d8270bcf744b674f1ad48963201a6d6405", "url": "https://github.com/line/armeria/commit/722118d8270bcf744b674f1ad48963201a6d6405", "message": "clean up", "committedDate": "2020-11-30T06:26:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MDg4Mw==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532390883", "bodyText": "Could we introduce a local variable? Otherwise a user cannot do this:\nbuilder.addExceptionMapping(...);\nGrpcService a = builder.build();\nbuilder.addExceptionMapping(...);\nGrpcService b = builder.build();", "author": "trustin", "createdAt": "2020-11-30T07:27:48Z", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -467,6 +566,10 @@ public GrpcService build() {\n             handlerRegistry = registryBuilder.build();\n         }\n \n+        if (exceptionMappings != null) {\n+            statusFunction = toGrpcStatusFunction(exceptionMappings);", "originalCommit": "722118d8270bcf744b674f1ad48963201a6d6405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5NzMyMA==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532397320", "bodyText": "Oops... Thanks for pointing out. Fixed", "author": "ikhoon", "createdAt": "2020-11-30T07:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MDg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8630c3ecc744a614eb3d4ac88dc572836a7e72c7", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java b/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\nindex 263947f45..25765a944 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\n\n@@ -566,8 +566,11 @@ public final class GrpcServiceBuilder {\n             handlerRegistry = registryBuilder.build();\n         }\n \n+        final GrpcStatusFunction statusFunction;\n         if (exceptionMappings != null) {\n             statusFunction = toGrpcStatusFunction(exceptionMappings);\n+        } else {\n+            statusFunction = this.statusFunction;\n         }\n \n         final GrpcService grpcService = new FramedGrpcService(\n"}}, {"oid": "8630c3ecc744a614eb3d4ac88dc572836a7e72c7", "url": "https://github.com/line/armeria/commit/8630c3ecc744a614eb3d4ac88dc572836a7e72c7", "message": "Add a local variable for GrpcStatusFunction", "committedDate": "2020-11-30T07:30:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjUzNA==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532402534", "bodyText": "nit: is used?\nOr, I think we can just remove this line. \ud83e\udd14", "author": "minwoox", "createdAt": "2020-11-30T07:56:08Z", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -442,6 +456,91 @@ public GrpcServiceBuilder useClientTimeoutHeader(boolean useClientTimeoutHeader)\n         return this;\n     }\n \n+    /**\n+     * Sets the specified {@link GrpcStatusFunction} that maps a {@link Throwable} to a gRPC {@link Status}.\n+     * The mapping function are used to handle a {@link Throwable} when it is raised.", "originalCommit": "8630c3ecc744a614eb3d4ac88dc572836a7e72c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxNDg3Ng==", "url": "https://github.com/line/armeria/pull/3197#discussion_r532414876", "bodyText": "Removed", "author": "trustin", "createdAt": "2020-11-30T08:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "e0cf02652539fcbde1b9a1a3e45a5424606bf009", "chunk": "diff --git a/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java b/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\nindex 25765a944..a61af1184 100644\n--- a/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\n+++ b/grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java\n\n@@ -458,7 +458,6 @@ public final class GrpcServiceBuilder {\n \n     /**\n      * Sets the specified {@link GrpcStatusFunction} that maps a {@link Throwable} to a gRPC {@link Status}.\n-     * The mapping function are used to handle a {@link Throwable} when it is raised.\n      *\n      * <p>Note that this method and {@link #addExceptionMapping(Class, Status)} are mutually exclusive.\n      */\n"}}, {"oid": "e0cf02652539fcbde1b9a1a3e45a5424606bf009", "url": "https://github.com/line/armeria/commit/e0cf02652539fcbde1b9a1a3e45a5424606bf009", "message": "Update GrpcServiceBuilder.java", "committedDate": "2020-11-30T08:21:21Z", "type": "commit"}]}