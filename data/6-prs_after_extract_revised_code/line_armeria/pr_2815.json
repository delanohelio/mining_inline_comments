{"pr_number": 2815, "pr_title": "Abide by the rule Reactive Streams 2.3", "pr_createdAt": "2020-06-18T09:09:36Z", "pr_url": "https://github.com/line/armeria/pull/2815", "timeline": [{"oid": "af2df0254bcd2577343e0a4e4a15f0dfaa88fe20", "url": "https://github.com/line/armeria/commit/af2df0254bcd2577343e0a4e4a15f0dfaa88fe20", "message": "Abide by the rule Reactive Streams 2.3\nSome of the subscribers violated Reactive Stremas 2.3 which is:\n`Subscriber.onComplete()` and `Subscriber.onError(Throwable t)` MUST NOT call any methods on the `Subscription` or the `Publisher`.\n\nhttps://github.com/reactive-streams/reactive-streams-jvm#2.3\n\nCo-authored-by: ikhoon <ih.pert@gmail.com>", "committedDate": "2020-06-18T09:09:16Z", "type": "commit"}, {"oid": "defa548af5cd017e620d2c8a798741d5353b4872", "url": "https://github.com/line/armeria/commit/defa548af5cd017e620d2c8a798741d5353b4872", "message": "Add final", "committedDate": "2020-06-18T12:23:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5MTYzMA==", "url": "https://github.com/line/armeria/pull/2815#discussion_r442091630", "bodyText": "Question: Don't we need to check whether writer is open like we did in onError(...)?", "author": "ikhoon", "createdAt": "2020-06-18T09:24:08Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "diffHunk": "@@ -227,7 +227,12 @@ public void onNext(T value) {\n                     subscription.request(1);\n                 });\n             } catch (Exception e) {\n-                onError(e);\n+                try {\n+                    writer.close(e);", "originalCommit": "af2df0254bcd2577343e0a4e4a15f0dfaa88fe20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMjU4Ng==", "url": "https://github.com/line/armeria/pull/2815#discussion_r442212586", "bodyText": "I think it's okay just to call it because we checked it at line 214.", "author": "minwoox", "createdAt": "2020-06-18T13:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5MTYzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwNDEyMA==", "url": "https://github.com/line/armeria/pull/2815#discussion_r442204120", "bodyText": "try...catch and throwIfFatal(...)?", "author": "ikhoon", "createdAt": "2020-06-18T12:55:35Z", "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "diffHunk": "@@ -236,14 +241,7 @@ public void onError(Throwable cause) {\n             if (!writer.isOpen()) {\n                 return;\n             }\n-            try {\n-                writer.close(cause);\n-            } catch (Exception e) {\n-                // 'subscription.cancel()' would be called by the close future listener of the writer,\n-                // so we call it when we failed to close the writer.\n-                assert subscription != null;\n-                subscription.cancel();\n-            }\n+            writer.close(cause);", "originalCommit": "defa548af5cd017e620d2c8a798741d5353b4872", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMTg3Nw==", "url": "https://github.com/line/armeria/pull/2815#discussion_r442211877", "bodyText": "try...catch and throwIfFatal(...)?\n\nIt's done by the caller such as:\nhttps://github.com/line/armeria/blob/master/core/src/main/java/com/linecorp/armeria/common/stream/AbstractStreamMessage.java#L165", "author": "minwoox", "createdAt": "2020-06-18T13:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwNDEyMA=="}], "type": "inlineReview", "revised_code": null}]}