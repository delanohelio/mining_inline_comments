{"pr_number": 2796, "pr_title": "Add connection lifespan metrics", "pr_createdAt": "2020-06-12T09:49:48Z", "pr_url": "https://github.com/line/armeria/pull/2796", "timeline": [{"oid": "d64e61f2fa0781d218713e25229462e06f916647", "url": "https://github.com/line/armeria/commit/d64e61f2fa0781d218713e25229462e06f916647", "message": "Add connection lifetime metrics\n\nMotivation:\nA nopen and close event on connections can be listening using `ConnectionPoolListner` only on the client-side.\nHowever, there is no way to get the status of connections on server-side.\nThis PR will provide `armeria.{server,client}.conneciton.lifetime` metrics\nfor better monitoring of the connection lifetime.\n\nModifications:\n* Add `keepAliveTimer` to `KeepAliveHandler`.\n* Record connection lifetime when a connection is closed.\n\nResult:\nYou can now get a connection lifetime metric using\n`armeria.{server,client}.conneciton.lifetime`.", "committedDate": "2020-06-12T09:49:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg4NTk4NA==", "url": "https://github.com/line/armeria/pull/2796#discussion_r439885984", "bodyText": "nit: indentation?", "author": "minwoox", "createdAt": "2020-06-15T00:46:22Z", "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -300,7 +304,7 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exc\n                 if (idleTimeoutMillis > 0 || pingIntervalMillis > 0) {\n                     final Http1ClientKeepAliveHandler keepAliveHandler =\n                             new Http1ClientKeepAliveHandler(channel, requestEncoder, responseDecoder,\n-                                                            idleTimeoutMillis, pingIntervalMillis);\n+                                    keepAliveTimer, idleTimeoutMillis, pingIntervalMillis);", "originalCommit": "d64e61f2fa0781d218713e25229462e06f916647", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMTM4NQ==", "url": "https://github.com/line/armeria/pull/2796#discussion_r439931385", "bodyText": "I thought this indentation is weird too. IntelliJ formatter seems to not align vertically if it is longer than max-width.", "author": "ikhoon", "createdAt": "2020-06-15T05:02:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg4NTk4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxOTA3Nw==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440719077", "bodyText": "Now IntelliJ formats this well. \ud83e\udd23", "author": "ikhoon", "createdAt": "2020-06-16T09:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg4NTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "f5930e165b3c0ec332f1c977c5c2da3b97d77c2a", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java b/core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java\nindex 1aa08070e..11b7cd49d 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java\n\n@@ -303,7 +303,8 @@ final class HttpSessionHandler extends ChannelDuplexHandler implements HttpSessi\n                 final Http1ResponseDecoder responseDecoder = ctx.pipeline().get(Http1ResponseDecoder.class);\n                 if (idleTimeoutMillis > 0 || pingIntervalMillis > 0) {\n                     final Http1ClientKeepAliveHandler keepAliveHandler =\n-                            new Http1ClientKeepAliveHandler(channel, requestEncoder, responseDecoder,\n+                            new Http1ClientKeepAliveHandler(\n+                                    channel, requestEncoder, responseDecoder,\n                                     keepAliveTimer, idleTimeoutMillis, pingIntervalMillis);\n                     requestEncoder.setKeepAliveHandler(keepAliveHandler);\n                     responseDecoder.setKeepAliveHandler(ctx, keepAliveHandler);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg5NjI1NA==", "url": "https://github.com/line/armeria/pull/2796#discussion_r439896254", "bodyText": "Shouldn't we make the value to milliseconds because TimeUnit.MILLISECONDS.toSeconds(elapsed) will shrink the elapsed?", "author": "minwoox", "createdAt": "2020-06-15T01:56:30Z", "path": "core/src/test/java/com/linecorp/armeria/server/HttpServerKeepAliveHandlerTest.java", "diffHunk": "@@ -150,6 +155,10 @@ void closeByClientIdleTimeout(SessionProtocol protocol) throws InterruptedExcept\n         await().untilAtomic(counter, Matchers.is(0));\n         final long elapsed = stopwatch.stop().elapsed(TimeUnit.MILLISECONDS);\n         assertThat(elapsed).isBetween(clientIdleTimeout, serverIdleTimeout - 1000);\n+        assertThat(MoreMeters.measureAll(meterRegistry))\n+                .hasEntrySatisfying(\"armeria.client.connections.lifetime#total\", value -> {\n+                    assertThat(value).isCloseTo(TimeUnit.MILLISECONDS.toSeconds(elapsed), withinPercentage(25));", "originalCommit": "d64e61f2fa0781d218713e25229462e06f916647", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjM1Mg==", "url": "https://github.com/line/armeria/pull/2796#discussion_r439932352", "bodyText": "Oops...", "author": "ikhoon", "createdAt": "2020-06-15T05:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg5NjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4NTA4OQ==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440685089", "bodyText": "In Micrometer (and Prometheus), all duration values are represented as seconds.", "author": "trustin", "createdAt": "2020-06-16T08:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg5NjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMzI4OQ==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440713289", "bodyText": "It just needs to be double so that sub-second part is preserved.", "author": "trustin", "createdAt": "2020-06-16T09:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg5NjI1NA=="}], "type": "inlineReview", "revised_code": {"commit": "f73b922249ce6486f2b3c24a2c8f602be67c40f8", "chunk": "diff --git a/core/src/test/java/com/linecorp/armeria/server/HttpServerKeepAliveHandlerTest.java b/core/src/test/java/com/linecorp/armeria/server/HttpServerKeepAliveHandlerTest.java\nindex 638b13216..3b75bdfcc 100644\n--- a/core/src/test/java/com/linecorp/armeria/server/HttpServerKeepAliveHandlerTest.java\n+++ b/core/src/test/java/com/linecorp/armeria/server/HttpServerKeepAliveHandlerTest.java\n\n@@ -156,8 +156,8 @@ class HttpServerKeepAliveHandlerTest {\n         final long elapsed = stopwatch.stop().elapsed(TimeUnit.MILLISECONDS);\n         assertThat(elapsed).isBetween(clientIdleTimeout, serverIdleTimeout - 1000);\n         assertThat(MoreMeters.measureAll(meterRegistry))\n-                .hasEntrySatisfying(\"armeria.client.connections.lifetime#total\", value -> {\n-                    assertThat(value).isCloseTo(TimeUnit.MILLISECONDS.toSeconds(elapsed), withinPercentage(25));\n+                .hasEntrySatisfying(\"armeria.client.connections.lifespan#total\", value -> {\n+                    assertThat(value * 1000).isCloseTo(elapsed, withinPercentage(25));\n                 });\n     }\n \n"}}, {"oid": "f73b922249ce6486f2b3c24a2c8f602be67c40f8", "url": "https://github.com/line/armeria/commit/f73b922249ce6486f2b3c24a2c8f602be67c40f8", "message": "Address comments by @minwoox and @trustin", "committedDate": "2020-06-16T09:23:43Z", "type": "commit"}, {"oid": "f5930e165b3c0ec332f1c977c5c2da3b97d77c2a", "url": "https://github.com/line/armeria/commit/f5930e165b3c0ec332f1c977c5c2da3b97d77c2a", "message": "Address comments by @minwoox / Fix indent", "committedDate": "2020-06-16T09:34:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyODczNQ==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440728735", "bodyText": "Shouldn't we add some tags? e.g. protocol", "author": "trustin", "createdAt": "2020-06-16T09:52:29Z", "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientFactory.java", "diffHunk": "@@ -146,6 +149,8 @@\n         useHttp1Pipelining = options.useHttp1Pipelining();\n         connectionPoolListener = options.connectionPoolListener();\n         meterRegistry = options.meterRegistry();\n+        keepAliveTimer = MoreMeters.newTimer(meterRegistry, \"armeria.client.connections.lifespan\",\n+                                             ImmutableList.of());", "originalCommit": "f5930e165b3c0ec332f1c977c5c2da3b97d77c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0NDg2MA==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440744860", "bodyText": "Oh, good idea!", "author": "ikhoon", "createdAt": "2020-06-16T10:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyODczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "49b14edc999eb8974a0a827563682b9ba2f5f0ef", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/HttpClientFactory.java b/core/src/main/java/com/linecorp/armeria/client/HttpClientFactory.java\nindex b44421d9b..d36c72c83 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/HttpClientFactory.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/HttpClientFactory.java\n\n@@ -149,8 +146,6 @@ final class HttpClientFactory implements ClientFactory {\n         useHttp1Pipelining = options.useHttp1Pipelining();\n         connectionPoolListener = options.connectionPoolListener();\n         meterRegistry = options.meterRegistry();\n-        keepAliveTimer = MoreMeters.newTimer(meterRegistry, \"armeria.client.connections.lifespan\",\n-                                             ImmutableList.of());\n         proxyConfig = options.proxyConfig();\n \n         this.options = options;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyOTUwNw==", "url": "https://github.com/line/armeria/pull/2796#discussion_r440729507", "bodyText": "Ditto - tags?", "author": "trustin", "createdAt": "2020-06-16T09:53:47Z", "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerPipelineConfigurator.java", "diffHunk": "@@ -112,6 +117,8 @@\n         this.port = requireNonNull(port, \"port\");\n         this.sslContexts = sslContexts;\n         this.gracefulShutdownSupport = requireNonNull(gracefulShutdownSupport, \"gracefulShutdownSupport\");\n+        keepAliveTimer = MoreMeters.newTimer(config.meterRegistry(), \"armeria.server.connections.lifespan\",\n+                                             ImmutableList.of());", "originalCommit": "f5930e165b3c0ec332f1c977c5c2da3b97d77c2a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b14edc999eb8974a0a827563682b9ba2f5f0ef", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/server/HttpServerPipelineConfigurator.java b/core/src/main/java/com/linecorp/armeria/server/HttpServerPipelineConfigurator.java\nindex e506cfeb4..5f09c4e03 100644\n--- a/core/src/main/java/com/linecorp/armeria/server/HttpServerPipelineConfigurator.java\n+++ b/core/src/main/java/com/linecorp/armeria/server/HttpServerPipelineConfigurator.java\n\n@@ -117,8 +121,6 @@ final class HttpServerPipelineConfigurator extends ChannelInitializer<Channel> {\n         this.port = requireNonNull(port, \"port\");\n         this.sslContexts = sslContexts;\n         this.gracefulShutdownSupport = requireNonNull(gracefulShutdownSupport, \"gracefulShutdownSupport\");\n-        keepAliveTimer = MoreMeters.newTimer(config.meterRegistry(), \"armeria.server.connections.lifespan\",\n-                                             ImmutableList.of());\n     }\n \n     @Override\n"}}, {"oid": "49b14edc999eb8974a0a827563682b9ba2f5f0ef", "url": "https://github.com/line/armeria/commit/49b14edc999eb8974a0a827563682b9ba2f5f0ef", "message": "Address comments by @trustin / Add protocol tag", "committedDate": "2020-06-16T13:09:48Z", "type": "commit"}, {"oid": "2e3de83ee18d78823198dc48d213e41a58321959", "url": "https://github.com/line/armeria/commit/2e3de83ee18d78823198dc48d213e41a58321959", "message": "Checkstyle", "committedDate": "2020-06-17T06:19:05Z", "type": "commit"}, {"oid": "18e79915e7a7034449f5e2c11716d3bb78ad16ba", "url": "https://github.com/line/armeria/commit/18e79915e7a7034449f5e2c11716d3bb78ad16ba", "message": "Merge branch 'master' into connection-age-metric", "committedDate": "2020-06-17T10:33:22Z", "type": "commit"}, {"oid": "ef4dfb7e1bd58d5d222bbc07702edca9ba31f191", "url": "https://github.com/line/armeria/commit/ef4dfb7e1bd58d5d222bbc07702edca9ba31f191", "message": "Fix broken test", "committedDate": "2020-06-17T11:09:19Z", "type": "commit"}, {"oid": "f019f81879865d604927f14696f15cff8e7012c0", "url": "https://github.com/line/armeria/commit/f019f81879865d604927f14696f15cff8e7012c0", "message": "Fix flaky test", "committedDate": "2020-06-17T11:33:51Z", "type": "commit"}, {"oid": "c49b36293cc877ee5dfbcf85df8d580f6499a76f", "url": "https://github.com/line/armeria/commit/c49b36293cc877ee5dfbcf85df8d580f6499a76f", "message": "Fix closed count in test", "committedDate": "2020-06-17T11:53:56Z", "type": "commit"}]}