{"pr_number": 2723, "pr_title": "Add `RequestContextStorage.hook()`", "pr_createdAt": "2020-05-18T06:49:33Z", "pr_url": "https://github.com/line/armeria/pull/2723", "timeline": [{"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "url": "https://github.com/line/armeria/commit/d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "message": "Add `RequestContextStorage.hook()`\n\nMotivation:\n\nThere's currently no way to perform an additional operation on top of\nthe `RequestContextStorage` implementation discovered via `ServiceLoader`.\n\nModifications:\n\n- Added `RequestContextStorage.hook(Function)` so that a user is allowed\n  to modify the current `RequestContextStorage`.\n- `RequestContextStorage` is now `Unwrappable`.\n  - Added `RequestContextStorageWrapper`\n\nResult:\n\n- A user can install a custom hook in runtime, usually at startup time,\n  like other frameworks.", "committedDate": "2020-05-18T06:45:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMjUxMg==", "url": "https://github.com/line/armeria/pull/2723#discussion_r426412512", "bodyText": "Now we have a hook \ud83d\ude0e, could remove this and add a hook for counting?", "author": "ikhoon", "createdAt": "2020-05-18T07:14:03Z", "path": "it/context-storage/src/test/java/com/linecorp/armeria/common/CustomRequestContextStorageProvider.java", "diffHunk": "@@ -48,32 +48,33 @@ static int popCalled() {\n \n     @Override\n     public RequestContextStorage newStorage() {\n-        return new RequestContextStorage() {\n-\n-            @Nullable\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            public <T extends RequestContext> T push(RequestContext toPush) {\n-                requireNonNull(toPush, \"toPush\");\n-                pushCalled.incrementAndGet();\n-                final InternalThreadLocalMap map = InternalThreadLocalMap.get();\n-                final RequestContext oldCtx = context.get(map);\n-                context.set(map, toPush);\n-                return (T) oldCtx;\n-            }\n-\n-            @Override\n-            public void pop(RequestContext current, @Nullable RequestContext toRestore) {\n-                popCalled.incrementAndGet();\n-                context.set(toRestore);\n-            }\n-\n-            @Nullable\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            public <T extends RequestContext> T currentOrNull() {\n-                return (T) context.get();\n-            }\n-        };\n+        return new CustomRequestContextStorage();\n+    }\n+\n+    static final class CustomRequestContextStorage implements RequestContextStorage {\n+        @Nullable\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public <T extends RequestContext> T push(RequestContext toPush) {\n+            requireNonNull(toPush, \"toPush\");\n+            pushCalled.incrementAndGet();", "originalCommit": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNDgyNw==", "url": "https://github.com/line/armeria/pull/2723#discussion_r426414827", "bodyText": "Ah... ignore this review. This code is test code.\ud83d\ude05", "author": "ikhoon", "createdAt": "2020-05-18T07:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMjUxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNzY5MQ==", "url": "https://github.com/line/armeria/pull/2723#discussion_r426417691", "bodyText": "How about adding more warnings such as thread safety?", "author": "minwoox", "createdAt": "2020-05-18T07:24:59Z", "path": "core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java", "diffHunk": "@@ -57,7 +63,17 @@\n  * }</pre>\n  */\n @UnstableApi\n-public interface RequestContextStorage {\n+public interface RequestContextStorage extends Unwrappable {\n+\n+    /**\n+     * Customizes the current {@link RequestContextStorage} by applying the specified {@link Function} to it.\n+     * This method is useful when you need to perform an additional operation when a {@link RequestContext}\n+     * is pushed or popped. However, keep in mind that all {@link RequestContextStorage} operations are\n+     * highly performance-sensitive operation and thus it's not a good idea to run a time-consuming task.", "originalCommit": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b96b6aeb9aae69be8ecbf86a8706010b64d0ea89", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java b/core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java\nindex 867945a13..b485ffdc3 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java\n\n@@ -68,8 +68,13 @@ public interface RequestContextStorage extends Unwrappable {\n     /**\n      * Customizes the current {@link RequestContextStorage} by applying the specified {@link Function} to it.\n      * This method is useful when you need to perform an additional operation when a {@link RequestContext}\n-     * is pushed or popped. However, keep in mind that all {@link RequestContextStorage} operations are\n-     * highly performance-sensitive operation and thus it's not a good idea to run a time-consuming task.\n+     * is pushed or popped. Note:\n+     * <ul>\n+     *   <li>All {@link RequestContextStorage} operations are highly performance-sensitive operation and thus\n+     *       it's not a good idea to run a time-consuming task.</li>\n+     *   <li>This method must be invoked at the beginning of application startup, e.g.\n+     *       Never call this method in the middle of request processing.</li>\n+     * </ul>\n      */\n     static void hook(Function<? super RequestContextStorage, ? extends RequestContextStorage> function) {\n         RequestContextUtil.hook(requireNonNull(function, \"function\"));\n"}}, {"oid": "b96b6aeb9aae69be8ecbf86a8706010b64d0ea89", "url": "https://github.com/line/armeria/commit/b96b6aeb9aae69be8ecbf86a8706010b64d0ea89", "message": "Address the comment from @minwoox", "committedDate": "2020-05-18T09:59:16Z", "type": "commit"}]}