{"pr_number": 2817, "pr_title": "Update dependencies / Fix warnings", "pr_createdAt": "2020-06-19T06:55:21Z", "pr_url": "https://github.com/line/armeria/pull/2817", "timeline": [{"oid": "67078fe420166cd2ec1679d7be284aa7df284d42", "url": "https://github.com/line/armeria/commit/67078fe420166cd2ec1679d7be284aa7df284d42", "message": "Update dependencies / Fix warnings\n\n- Bouncy Castle 1.65 -> 1.65.01\n- Dropwizard 2.0.9 -> 2.0.10\n- Jetty 9.4.29 -> 9.4.30\n- Reactor 3.3.5 -> 3.3.6\n- Spring Boot 2.3.0 -> 2.3.1, 2.1.14 -> 2.1.15\n- Tomcat 9.0.35 -> 9.0.36, 8.5.55 -> 8.5.56\n- Examples:\n  - Dagger 2.27 -> 2.28\n  - grpc-kotlin-stub 0.1.2 -> 0.1.3\n- Build:\n  - Gradle 6.4.1 -> 6.5\n  - Checkstyle 8.32 -> 8.33\n  - eureka-client 1.9.22 -> 1.9.23\n  - gax-grpc 1.56.0 -> 1.57.0\n  - json-unit 2.17.0 -> 2.18.0\n  - Shadow 5.2.0 -> 6.0.0\n- Fix warnings\n  - Add `SupportedSourceVersion` annotation to `DocumentationProcessor`\n  - Fix various deprecated API usages", "committedDate": "2020-06-19T06:38:45Z", "type": "commit"}, {"oid": "2e58de6153ce434798b3709c70c466e6f2909497", "url": "https://github.com/line/armeria/commit/2e58de6153ce434798b3709c70c466e6f2909497", "message": "Fix test failures", "committedDate": "2020-06-19T08:54:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2NjI0MA==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442666240", "bodyText": "\ud83d\udc4d", "author": "ikhoon", "createdAt": "2020-06-19T07:00:25Z", "path": "annotation-processor/src/main/java/com/linecorp/armeria/server/annotation/processor/DocumentationProcessor.java", "diffHunk": "@@ -61,6 +63,7 @@\n         \"com.linecorp.armeria.server.annotation.Options\",\n         \"com.linecorp.armeria.server.annotation.Patch\",\n })\n+@SupportedSourceVersion(SourceVersion.RELEASE_8)", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2NzY4Nw==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442667687", "bodyText": "Could remove lower-cased?", "author": "ikhoon", "createdAt": "2020-06-19T07:04:12Z", "path": "brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientTest.java", "diffHunk": "@@ -147,12 +147,12 @@ void shouldSubmitSpanWithCustomRemoteName() throws Exception {\n         assertThat(span.localServiceName()).isEqualTo(TEST_SERVICE);\n \n         // check remote service name, lower-cased", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "72b8cfde5c385fe812277d544cd3a30bee6dd36c", "chunk": "diff --git a/brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientTest.java b/brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientTest.java\nindex 8f36204ef..432a1c9f0 100644\n--- a/brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientTest.java\n+++ b/brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientTest.java\n\n@@ -146,7 +146,7 @@ class BraveClientTest {\n         // check service name\n         assertThat(span.localServiceName()).isEqualTo(TEST_SERVICE);\n \n-        // check remote service name, lower-cased\n+        // check remote service name\n         assertThat(span.remoteServiceName()).isEqualTo(\"fooService\");\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MjM3OA==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442672378", "bodyText": "nit: Rename to SpanHandlerImpl?", "author": "ikhoon", "createdAt": "2020-06-19T07:15:59Z", "path": "brave/src/test/java/com/linecorp/armeria/it/brave/BraveIntegrationTest.java", "diffHunk": "@@ -548,23 +551,23 @@ public void onError(Exception exception) {\n         }\n     }\n \n-    private static class ReporterImpl implements Reporter<Span> {\n-        private final BlockingQueue<Span> spans = new LinkedBlockingQueue<>();\n+    private static class ReporterImpl extends SpanHandler {", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "72b8cfde5c385fe812277d544cd3a30bee6dd36c", "chunk": "diff --git a/brave/src/test/java/com/linecorp/armeria/it/brave/BraveIntegrationTest.java b/brave/src/test/java/com/linecorp/armeria/it/brave/BraveIntegrationTest.java\nindex 765eb2944..4c071d827 100644\n--- a/brave/src/test/java/com/linecorp/armeria/it/brave/BraveIntegrationTest.java\n+++ b/brave/src/test/java/com/linecorp/armeria/it/brave/BraveIntegrationTest.java\n\n@@ -551,7 +551,7 @@ class BraveIntegrationTest {\n         }\n     }\n \n-    private static class ReporterImpl extends SpanHandler {\n+    private static class SpanHandlerImpl extends SpanHandler {\n         private final BlockingQueue<MutableSpan> spans = new LinkedBlockingQueue<>();\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3Mjk2OA==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442672968", "bodyText": "Oops... \ud83d\ude05", "author": "ikhoon", "createdAt": "2020-06-19T07:17:21Z", "path": "core/src/main/java/com/linecorp/armeria/client/Client.java", "diffHunk": "@@ -76,4 +76,13 @@\n         requireNonNull(type, \"type\");\n         return Unwrappable.super.as(type);\n     }\n+\n+    /**\n+     * Unwraps this {@link Client} and returns the object being decorated.\n+     * If this {@link Client} is the innermost object, this method returns itself.\n+     */\n+    @Override\n+    default Client<? extends Request, ? extends Response> unwrap() {", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3NDcwMA==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442674700", "bodyText": "unwrap?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      .add(\"delegate\", unwrap())\n          \n          \n            \n                                      .add(\"unwrap\", unwrap())", "author": "ikhoon", "createdAt": "2020-06-19T07:21:18Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/AttemptLimitingBackoff.java", "diffHunk": "@@ -41,7 +41,7 @@ public long nextDelayMillis(int numAttemptsSoFar) {\n     @Override\n     public String toString() {\n         return MoreObjects.toStringHelper(this)\n-                          .add(\"delegate\", delegate())\n+                          .add(\"delegate\", unwrap())", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDAzNg==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442744036", "bodyText": "I think delegate is better here because unwrap is a verb.", "author": "trustin", "createdAt": "2020-06-19T09:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3NDcwMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3NDk3Ng==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442674976", "bodyText": "Ditto\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      .add(\"delegate\", unwrap())\n          \n          \n            \n                                      .add(\"unwrap\", unwrap())", "author": "ikhoon", "createdAt": "2020-06-19T07:21:57Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/JitterAddingBackoff.java", "diffHunk": "@@ -65,7 +65,7 @@ public long nextDelayMillis(int numAttemptsSoFar) {\n     @Override\n     public String toString() {\n         return MoreObjects.toStringHelper(this)\n-                          .add(\"delegate\", delegate())\n+                          .add(\"delegate\", unwrap())", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3OTI3MQ==", "url": "https://github.com/line/armeria/pull/2817#discussion_r442679271", "bodyText": "unwrap?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                          .add(\"delegate\", unwrap()).toString();\n          \n          \n            \n                                          .add(\"unwrap\", unwrap()).toString();", "author": "ikhoon", "createdAt": "2020-06-19T07:31:15Z", "path": "core/src/main/java/com/linecorp/armeria/server/RouteDecoratingService.java", "diffHunk": "@@ -139,7 +139,7 @@ public HttpResponse serve(ServiceRequestContext ctx, HttpRequest req) throws Exc\n         public String toString() {\n             return MoreObjects.toStringHelper(this)\n                               .add(\"router\", router)\n-                              .add(\"delegate\", delegate()).toString();\n+                              .add(\"delegate\", unwrap()).toString();", "originalCommit": "67078fe420166cd2ec1679d7be284aa7df284d42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "fac6db9d8a6517afbb71f5334009e746518e66ba", "url": "https://github.com/line/armeria/commit/fac6db9d8a6517afbb71f5334009e746518e66ba", "message": "Make virtual hostname pattern follow Netty's", "committedDate": "2020-06-19T09:48:57Z", "type": "commit"}, {"oid": "72b8cfde5c385fe812277d544cd3a30bee6dd36c", "url": "https://github.com/line/armeria/commit/72b8cfde5c385fe812277d544cd3a30bee6dd36c", "message": "Address the comments from @ikhoon", "committedDate": "2020-06-19T09:51:27Z", "type": "commit"}]}