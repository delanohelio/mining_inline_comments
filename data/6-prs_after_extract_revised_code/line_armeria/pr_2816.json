{"pr_number": 2816, "pr_title": "Add `onResponseTrailers()` to circuit breaker and retry rule builders", "pr_createdAt": "2020-06-18T10:39:25Z", "pr_url": "https://github.com/line/armeria/pull/2816", "timeline": [{"oid": "251033226809c71ce0cc56f192842415df45489c", "url": "https://github.com/line/armeria/commit/251033226809c71ce0cc56f192842415df45489c", "message": "Add `onResponseTrailers()` to circuit breaker and retry rule builders\n\nMotivation:\n\nA user wants to determine whether a request was successful or not from\nthe value of a trailer, which is currently not possible.\n\nModifications:\n\n- Added `onResponseTrailers()` to `AbstractRuleBuilder` and its\n  subtypes, including:\n  - `CircuitBreakerRuleBuilder`\n  - `CircuitBreakerRuleWithContentBuilder`\n  - `RetryRuleBuilder`\n  - `RetryRuleWithContentBuilder`\n- Added `requiresResponseTrailers()` to rule types, including:\n  - `CircuitBreakerRule`\n  - `CircuitBreakerRuleWithContent`\n  - `RetryRule`\n  - `RetryRuleWithContent`\n- Updated `CircuitBreakerClient` and `RetryingClient` to respect\n  `requiredResponseTrailers()` flag and wait until response trailers are\n  available.\n- Miscellaneous:\n  - Removed the `toString()` implementations in some builder classes.\n\nResult:\n\n- A user can break the circuit or retry based on a response trailer,\n  such as `grpc-status`.", "committedDate": "2020-06-18T13:12:10Z", "type": "commit"}, {"oid": "251033226809c71ce0cc56f192842415df45489c", "url": "https://github.com/line/armeria/commit/251033226809c71ce0cc56f192842415df45489c", "message": "Add `onResponseTrailers()` to circuit breaker and retry rule builders\n\nMotivation:\n\nA user wants to determine whether a request was successful or not from\nthe value of a trailer, which is currently not possible.\n\nModifications:\n\n- Added `onResponseTrailers()` to `AbstractRuleBuilder` and its\n  subtypes, including:\n  - `CircuitBreakerRuleBuilder`\n  - `CircuitBreakerRuleWithContentBuilder`\n  - `RetryRuleBuilder`\n  - `RetryRuleWithContentBuilder`\n- Added `requiresResponseTrailers()` to rule types, including:\n  - `CircuitBreakerRule`\n  - `CircuitBreakerRuleWithContent`\n  - `RetryRule`\n  - `RetryRuleWithContent`\n- Updated `CircuitBreakerClient` and `RetryingClient` to respect\n  `requiredResponseTrailers()` flag and wait until response trailers are\n  available.\n- Miscellaneous:\n  - Removed the `toString()` implementations in some builder classes.\n\nResult:\n\n- A user can break the circuit or retry based on a response trailer,\n  such as `grpc-status`.", "committedDate": "2020-06-18T13:12:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyNjA4Mg==", "url": "https://github.com/line/armeria/pull/2816#discussion_r442226082", "bodyText": "\ud83d\ude05", "author": "ikhoon", "createdAt": "2020-06-18T13:29:29Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerRuleUtil.java", "diffHunk": "@@ -146,10 +225,22 @@ static CircuitBreakerRule orElse(CircuitBreakerRule first, CircuitBreakerRule se\n     }\n \n     private static CircuitBreakerRuleWithContent<HttpResponse>\n-    withDuplicator(CircuitBreakerRuleWithContent<HttpResponse> retryRuleWithContent,", "originalCommit": "251033226809c71ce0cc56f192842415df45489c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NTY5Nw==", "url": "https://github.com/line/armeria/pull/2816#discussion_r442585697", "bodyText": "I think we should pass HttpResponse.ofFailure(cause) instead of response.\nIf the rule does not retry on the exception, then the response will be scribed twice.", "author": "minwoox", "createdAt": "2020-06-19T01:36:27Z", "path": "core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java", "diffHunk": "@@ -247,7 +251,26 @@ private void doExecute0(ClientRequestContext ctx, HttpRequestDuplicator rootReqD\n         final HttpResponse response = executeWithFallback(delegate(), derivedCtx,\n                                                           (context, cause) -> HttpResponse.ofFailure(cause));\n \n-        derivedCtx.log().whenAvailable(RequestLogProperty.RESPONSE_HEADERS).thenAccept(log -> {\n+        if (requiresResponseTrailers) {\n+            response.aggregate().handle((aggregated, cause) -> {\n+                handleResponse(ctx, rootReqDuplicator, originalReq, returnedRes, future, derivedCtx,\n+                               cause != null ? response : aggregated.toHttpResponse());", "originalCommit": "251033226809c71ce0cc56f192842415df45489c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMjQxNg==", "url": "https://github.com/line/armeria/pull/2816#discussion_r442602416", "bodyText": "Nice catch! Fixed.", "author": "trustin", "createdAt": "2020-06-19T02:46:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NTY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e741f44f733612b55df988c375346dda1d96ed75", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java b/core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java\nindex 4743fa76af..13c030917e 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/retry/RetryingClient.java\n\n@@ -254,7 +254,7 @@ public final class RetryingClient extends AbstractRetryingClient<HttpRequest, Ht\n         if (requiresResponseTrailers) {\n             response.aggregate().handle((aggregated, cause) -> {\n                 handleResponse(ctx, rootReqDuplicator, originalReq, returnedRes, future, derivedCtx,\n-                               cause != null ? response : aggregated.toHttpResponse());\n+                               cause != null ? HttpResponse.ofFailure(cause) : aggregated.toHttpResponse());\n                 return null;\n             });\n         } else {\n"}}, {"oid": "e741f44f733612b55df988c375346dda1d96ed75", "url": "https://github.com/line/armeria/commit/e741f44f733612b55df988c375346dda1d96ed75", "message": "Address the comment from @minwoox", "committedDate": "2020-06-19T02:46:12Z", "type": "commit"}]}