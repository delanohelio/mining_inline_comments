{"pr_number": 2742, "pr_title": "Guarantee backward compatibility with Micrometer 1.3.x", "pr_createdAt": "2020-05-25T05:14:39Z", "pr_url": "https://github.com/line/armeria/pull/2742", "timeline": [{"oid": "587b278205cec92bf1c762f14abb83d37da27554", "url": "https://github.com/line/armeria/commit/587b278205cec92bf1c762f14abb83d37da27554", "message": "Guarantee backward compatibility with Micrometer 1.3.x\nMotivation:\nA user might uses Armeria 0.99.x with Micrometer 1.3.x.\nWe should guarantee that works.\n\nModifications:\n- Add test module which covers the compatibilty with Micrometer 1.3.9\n\nResult:\n- You can now use Armeria 0.99.6 with Micrometer 1.3.x", "committedDate": "2020-05-25T05:01:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MDYzNQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429740635", "bodyText": "nit: I'm not strong here, but could be inlined?\nprivate static final boolean MICROMETER_1_5 = !ReflectionUtils.getMethods(Builder.class, method ->\n        method != null && \"serviceLevelObjectives\".equals(method.getName())).isEmpty();", "author": "ikhoon", "createdAt": "2020-05-25T05:45:51Z", "path": "core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java", "diffHunk": "@@ -38,8 +45,22 @@\n  */\n public final class MoreMeters {\n \n+    private static final Logger logger = LoggerFactory.getLogger(MoreMeters.class);\n+\n     private static final double[] PERCENTILES = { 0, 0.5, 0.75, 0.9, 0.95, 0.98, 0.99, 0.999, 1.0 };\n \n+    private static final boolean MICROMETER_1_5;\n+\n+    static {\n+        final Set<Method> methods = ReflectionUtils.getMethods(Builder.class, method ->\n+                method != null && \"serviceLevelObjectives\".equals(method.getName()));", "originalCommit": "587b278205cec92bf1c762f14abb83d37da27554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwMTIzMQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r430101231", "bodyText": "Fixed. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-05-26T00:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MDYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5490fbfb184c2439f26e50084d3c98479da23646", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java b/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\nindex 10fbfb9d7..f35c2bc7f 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\n\n@@ -52,13 +50,9 @@ public final class MoreMeters {\n     private static final boolean MICROMETER_1_5;\n \n     static {\n-        final Set<Method> methods = ReflectionUtils.getMethods(Builder.class, method ->\n-                method != null && \"serviceLevelObjectives\".equals(method.getName()));\n-        if (methods.isEmpty()) {\n-            MICROMETER_1_5 = false;\n-        } else {\n-            MICROMETER_1_5 = true;\n-        }\n+        MICROMETER_1_5 = Stream.of(Builder.class.getMethods())\n+                               .anyMatch(method -> method != null &&\n+                                                   \"serviceLevelObjectives\".equals(method.getName()));\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429742241", "bodyText": "Can you add a TODO with a link to the issue to clean this up?", "author": "anuraaga", "createdAt": "2020-05-25T05:52:40Z", "path": "core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java", "diffHunk": "@@ -38,8 +45,22 @@\n  */\n public final class MoreMeters {\n \n+    private static final Logger logger = LoggerFactory.getLogger(MoreMeters.class);\n+\n     private static final double[] PERCENTILES = { 0, 0.5, 0.75, 0.9, 0.95, 0.98, 0.99, 0.999, 1.0 };\n \n+    private static final boolean MICROMETER_1_5;\n+\n+    static {\n+        final Set<Method> methods = ReflectionUtils.getMethods(Builder.class, method ->", "originalCommit": "587b278205cec92bf1c762f14abb83d37da27554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0Mjc3Mg==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429742772", "bodyText": "I still need this logic because we can set serviceLevelObjectives from 1.5. \ud83e\udd14", "author": "minwoox", "createdAt": "2020-05-25T05:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0NjUzMA==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429746530", "bodyText": "Ah guess it makes sense. Wonder if using new micrometer APIs are worth these fragile-looking branches vs just compiling against 1.3.x. For example, I think this sort of branch breaks graalvm.", "author": "anuraaga", "createdAt": "2020-05-25T06:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc1NDI4NQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429754285", "bodyText": "I think this sort of branch breaks graalvm.\n\nIf it's so, then we should not branch but send a PR to fix this. \ud83d\ude04\nLet me send a one for this.", "author": "minwoox", "createdAt": "2020-05-25T06:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2Mzg0OQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429763849", "bodyText": "Build.class.getMethod(....); will do the job I guess? No need to use Reflections library.\nI don't think this breaks GraalVM anymore since they have changed the default behavior of static initializer evaluation. Even if they evaluate this block at image build time, I think it's fine because Micrometer will be baked in together, no?", "author": "trustin", "createdAt": "2020-05-25T07:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Njc1NA==", "url": "https://github.com/line/armeria/pull/2742#discussion_r429776754", "bodyText": "Yeah it's probably OK nowadays. Just I don't see such branching on versions in static languages much \ud83d\ude05", "author": "anuraaga", "createdAt": "2020-05-25T07:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwMTM4NQ==", "url": "https://github.com/line/armeria/pull/2742#discussion_r430101385", "bodyText": "Changed to use getMethod.", "author": "minwoox", "createdAt": "2020-05-26T00:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MjI0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5490fbfb184c2439f26e50084d3c98479da23646", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java b/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\nindex 10fbfb9d7..f35c2bc7f 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/metric/MoreMeters.java\n\n@@ -52,13 +50,9 @@ public final class MoreMeters {\n     private static final boolean MICROMETER_1_5;\n \n     static {\n-        final Set<Method> methods = ReflectionUtils.getMethods(Builder.class, method ->\n-                method != null && \"serviceLevelObjectives\".equals(method.getName()));\n-        if (methods.isEmpty()) {\n-            MICROMETER_1_5 = false;\n-        } else {\n-            MICROMETER_1_5 = true;\n-        }\n+        MICROMETER_1_5 = Stream.of(Builder.class.getMethods())\n+                               .anyMatch(method -> method != null &&\n+                                                   \"serviceLevelObjectives\".equals(method.getName()));\n     }\n \n     /**\n"}}, {"oid": "5490fbfb184c2439f26e50084d3c98479da23646", "url": "https://github.com/line/armeria/commit/5490fbfb184c2439f26e50084d3c98479da23646", "message": "Tests *MetricsIntegrationsTest as well", "committedDate": "2020-05-26T00:03:23Z", "type": "commit"}, {"oid": "6f892e726559c88b58642e35cce851cf511283cc", "url": "https://github.com/line/armeria/commit/6f892e726559c88b58642e35cce851cf511283cc", "message": "Remove unused", "committedDate": "2020-05-26T01:06:52Z", "type": "commit"}, {"oid": "f1d340e7712caa47bd31b850ab363b7b26e3c13f", "url": "https://github.com/line/armeria/commit/f1d340e7712caa47bd31b850ab363b7b26e3c13f", "message": "Remove unused import", "committedDate": "2020-05-26T01:11:11Z", "type": "commit"}]}