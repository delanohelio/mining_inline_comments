{"pr_number": 2520, "pr_title": "Fix a bug where `RequestContextExporter` exports wrong properties", "pr_createdAt": "2020-02-21T07:47:23Z", "pr_url": "https://github.com/line/armeria/pull/2520", "timeline": [{"oid": "c1cdb9e99147a22a8cc99acd8a62801b9764ec4d", "url": "https://github.com/line/armeria/commit/c1cdb9e99147a22a8cc99acd8a62801b9764ec4d", "message": "Fix a bug where `RequestContextExporter` exports wrong properties\n\nMotivation:\n\n- `RequestContextExporter.state()` does not consider the case where the\n  current context has a root context. As a result, a `ClientRequestContext`\n  may reuse the state of its root context.\n- `RequestContextExporter` does not take custom attributes into account\n  when determining if the properties needs to be re-exported. As a\n  result, custom attributes will not be re-exported even if a user\n  changes any of their values.\n\nModifications:\n\n- Use `ClientRequestContext.ownAttr()` to check whether the state object\n  exists.\n- Compare attribute values as well when determining if properties need\n  to be re-exported.\n- Handle the case where attribute or header disappears.\n- Miscellaneous:\n  - Implemented `toString()` for:\n    - `DefaultAttributeMap`\n    - `FakeChannel` in `AbstractRequestContextBuilder`\n  - Fixed `StackOverflowError` in `RouteDecoratingService.toString()`\n\nResult:\n\n- When using `RequestContextExporter` or `RequestContextExportingAppender`,\n  the properties are exported properly.\n- Maybe fixes #197 partially", "committedDate": "2020-02-21T07:38:50Z", "type": "commit"}, {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "url": "https://github.com/line/armeria/commit/5f0e8a3d26cb678762f075ac8f97996e0fd82078", "message": "long -> int", "committedDate": "2020-02-21T07:49:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382438994", "bodyText": "!needsUpdate &&", "author": "anuraaga", "createdAt": "2020-02-21T07:51:23Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTYwMw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441603", "bodyText": "Let me make it clear that this loop also updates state.attrValues while scanning.", "author": "trustin", "createdAt": "2020-02-21T07:59:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTc2Mw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441763", "bodyText": "Ah :)", "author": "anuraaga", "createdAt": "2020-02-21T07:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}], "type": "inlineReview", "revised_code": {"commit": "182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\nindex 677f3abfc..1004c8481 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\n@@ -241,26 +241,27 @@ public final class RequestContextExporter {\n \n         final State state = state(ctx);\n         final RequestLogAccess log = ctx.log();\n-\n-        boolean needsUpdate;\n+        boolean needsUpdate = false;\n \n         // Needs to update if availabilityStamp has changed.\n+        // Also updates `State.availabilityStamp` while checking.\n         final int availabilityStamp = log.availabilityStamp();\n         if (state.availabilityStamp != availabilityStamp) {\n             state.availabilityStamp = availabilityStamp;\n             needsUpdate = true;\n-        } else {\n-            needsUpdate = false;\n         }\n \n         // Needs to update if any attributes have changed.\n+        // Also updates `State.attrValues` while scanning.\n         if (attrs != null) {\n             assert state.attrValues != null;\n             for (int i = 0; i < attrs.length; i++) {\n-                final Object oldValue = state.attrValues[i];\n                 final Object newValue = ctx.attr(attrs[i].key);\n                 state.attrValues[i] = newValue;\n-                needsUpdate |= !Objects.equals(oldValue, newValue);\n+                if (!needsUpdate) {\n+                    final Object oldValue = state.attrValues[i];\n+                    needsUpdate = !Objects.equals(oldValue, newValue);\n+                }\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382439307", "bodyText": "if (!equals) {\n  needsUpdate = true;\n  break;\n}", "author": "anuraaga", "createdAt": "2020-02-21T07:52:12Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {\n+            assert state.attrValues != null;\n+            for (int i = 0; i < attrs.length; i++) {\n+                final Object oldValue = state.attrValues[i];\n+                final Object newValue = ctx.attr(attrs[i].key);\n+                state.attrValues[i] = newValue;\n+                needsUpdate |= !Objects.equals(oldValue, newValue);", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0Mjk1Mw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382442953", "bodyText": "Can't break out of the loop because it needs to update state.attrValues with the new values.", "author": "trustin", "createdAt": "2020-02-21T08:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw=="}], "type": "inlineReview", "revised_code": {"commit": "182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\nindex 677f3abfc..1004c8481 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\n@@ -241,26 +241,27 @@ public final class RequestContextExporter {\n \n         final State state = state(ctx);\n         final RequestLogAccess log = ctx.log();\n-\n-        boolean needsUpdate;\n+        boolean needsUpdate = false;\n \n         // Needs to update if availabilityStamp has changed.\n+        // Also updates `State.availabilityStamp` while checking.\n         final int availabilityStamp = log.availabilityStamp();\n         if (state.availabilityStamp != availabilityStamp) {\n             state.availabilityStamp = availabilityStamp;\n             needsUpdate = true;\n-        } else {\n-            needsUpdate = false;\n         }\n \n         // Needs to update if any attributes have changed.\n+        // Also updates `State.attrValues` while scanning.\n         if (attrs != null) {\n             assert state.attrValues != null;\n             for (int i = 0; i < attrs.length; i++) {\n-                final Object oldValue = state.attrValues[i];\n                 final Object newValue = ctx.attr(attrs[i].key);\n                 state.attrValues[i] = newValue;\n-                needsUpdate |= !Objects.equals(oldValue, newValue);\n+                if (!needsUpdate) {\n+                    final Object oldValue = state.attrValues[i];\n+                    needsUpdate = !Objects.equals(oldValue, newValue);\n+                }\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDIzNA==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382440234", "bodyText": "I guess easier to read if this is false and remove below else.", "author": "anuraaga", "createdAt": "2020-02-21T07:55:04Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\nindex 677f3abfc..1004c8481 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\n@@ -241,26 +241,27 @@ public final class RequestContextExporter {\n \n         final State state = state(ctx);\n         final RequestLogAccess log = ctx.log();\n-\n-        boolean needsUpdate;\n+        boolean needsUpdate = false;\n \n         // Needs to update if availabilityStamp has changed.\n+        // Also updates `State.availabilityStamp` while checking.\n         final int availabilityStamp = log.availabilityStamp();\n         if (state.availabilityStamp != availabilityStamp) {\n             state.availabilityStamp = availabilityStamp;\n             needsUpdate = true;\n-        } else {\n-            needsUpdate = false;\n         }\n \n         // Needs to update if any attributes have changed.\n+        // Also updates `State.attrValues` while scanning.\n         if (attrs != null) {\n             assert state.attrValues != null;\n             for (int i = 0; i < attrs.length; i++) {\n-                final Object oldValue = state.attrValues[i];\n                 final Object newValue = ctx.attr(attrs[i].key);\n                 state.attrValues[i] = newValue;\n-                needsUpdate |= !Objects.equals(oldValue, newValue);\n+                if (!needsUpdate) {\n+                    final Object oldValue = state.attrValues[i];\n+                    needsUpdate = !Objects.equals(oldValue, newValue);\n+                }\n             }\n         }\n \n"}}, {"oid": "182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "url": "https://github.com/line/armeria/commit/182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "message": "Address the comments from @anuraaga", "committedDate": "2020-02-21T08:01:42Z", "type": "commit"}, {"oid": "7c9245e7128b6037187c24f96a5e3fc3bf98d5bb", "url": "https://github.com/line/armeria/commit/7c9245e7128b6037187c24f96a5e3fc3bf98d5bb", "message": "Reuse the scanned attribute values when exporting / Use concrete type", "committedDate": "2020-02-21T08:08:54Z", "type": "commit"}, {"oid": "71b598e927833207da0dd2afa8c5771a0e30c1ef", "url": "https://github.com/line/armeria/commit/71b598e927833207da0dd2afa8c5771a0e30c1ef", "message": "Fix", "committedDate": "2020-02-21T08:11:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTg4NQ==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382461885", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i = 0; i < attrs.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < numAttrs; i++) {", "author": "ikhoon", "createdAt": "2020-02-21T08:52:51Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -537,54 +565,60 @@ private void exportRpcResponse(Map<String, String> out, RequestLog log) {\n         }\n     }\n \n-    private void exportAttributes(Map<String, String> out, RequestContext ctx) {\n+    private void exportAttributes(State state) {\n         if (attrs == null) {\n             return;\n         }\n \n-        for (ExportEntry<AttributeKey<?>> e : attrs) {\n-            putOtherProperty(out, e, ctx.attr(e.key));\n+        assert state.attrValues != null;\n+        for (int i = 0; i < attrs.length; i++) {", "originalCommit": "71b598e927833207da0dd2afa8c5771a0e30c1ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b92d2332b7e5b258f4b1fed0f38b5b94b835522", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\nindex bcd0ddbb4..3fad0ddb6 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\n@@ -571,7 +571,7 @@ public final class RequestContextExporter {\n         }\n \n         assert state.attrValues != null;\n-        for (int i = 0; i < attrs.length; i++) {\n+        for (int i = 0; i < numAttrs; i++) {\n             final ExportEntry<AttributeKey<?>> e = attrs[i];\n             putOtherProperty(state, e, state.attrValues[i]);\n         }\n"}}, {"oid": "0b92d2332b7e5b258f4b1fed0f38b5b94b835522", "url": "https://github.com/line/armeria/commit/0b92d2332b7e5b258f4b1fed0f38b5b94b835522", "message": "Update core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2020-02-24T03:39:40Z", "type": "commit"}, {"oid": "a587f064e386ddc2ea73d5283b1a316a7798eebb", "url": "https://github.com/line/armeria/commit/a587f064e386ddc2ea73d5283b1a316a7798eebb", "message": "Merge branch 'master' into fix_request_context_exporter", "committedDate": "2020-02-24T03:56:17Z", "type": "commit"}]}