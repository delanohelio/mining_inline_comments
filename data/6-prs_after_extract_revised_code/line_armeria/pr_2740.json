{"pr_number": 2740, "pr_title": "Provide a way to trigger a timeout without scheduler", "pr_createdAt": "2020-05-22T12:56:05Z", "pr_url": "https://github.com/line/armeria/pull/2740", "timeline": [{"oid": "a7318e458e5306babd2e5e259bdf27d740617c1b", "url": "https://github.com/line/armeria/commit/a7318e458e5306babd2e5e259bdf27d740617c1b", "message": "Provide a way to trigger a timeout without scheduler\n\nMotivation:\n\nSometimes a user might want to trigger timeout immediately without a specific timeout scheduler.\nThis is also useful for testing the behavior of `Service` or `Client` when a request is timed-out.\n\nModifications:\n\n- Add `timeoutNow()` to `RequestContext`.\n- Pull up `isTimedOut()` to `RequestContext` from `ServiceRequestContext`.\n- Add `isTimedOut(boolean)` to `AbstractRequestContextBuilder`\n\nResult:\nFixes: #2547\nYou can make a request timed-out manually by invoking `timeoutNow()`.\nYou can build and test a RequestContext timed-out.", "committedDate": "2020-05-22T12:52:32Z", "type": "commit"}, {"oid": "afa9bfa4c98f5fe1a669979eb437fc8ef10e8149", "url": "https://github.com/line/armeria/commit/afa9bfa4c98f5fe1a669979eb437fc8ef10e8149", "message": "Fix broken test", "committedDate": "2020-05-23T07:26:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNzc3Mg==", "url": "https://github.com/line/armeria/pull/2740#discussion_r433627772", "bodyText": "Can we use ImmediateEventExecutor, so that we do not instantiate event loop threads in CommonPools unnecessarily during the class initialization?", "author": "trustin", "createdAt": "2020-06-02T05:27:13Z", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, CommonPools.workerGroup().next());", "originalCommit": "afa9bfa4c98f5fe1a669979eb437fc8ef10e8149", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e5535c2d22c9851e3cbe36e6354338f4a6edefd5", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java b/core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java\nindex 989f189e1..b90f1f59e 100644\n--- a/core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java\n+++ b/core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java\n\n@@ -79,7 +79,7 @@ public final class ServiceRequestContextBuilder extends AbstractRequestContextBu\n      * A timeout controller that has been timed-out.\n      */\n     private static final DefaultTimeoutController noopTimedOutController =\n-            new DefaultTimeoutController(noopTimeoutTask, CommonPools.workerGroup().next());\n+            new DefaultTimeoutController(noopTimeoutTask, ImmediateEventExecutor.INSTANCE);\n \n     static {\n         noopTimedOutController.timeoutNow();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyODM5OA==", "url": "https://github.com/line/armeria/pull/2740#discussion_r433628398", "bodyText": "Should we rename this to timedOut(boolean)?", "author": "trustin", "createdAt": "2020-06-02T05:29:09Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -170,4 +213,9 @@ public ClientRequestContextBuilder requestStartTime(long requestStartTimeNanos,\n         return (ClientRequestContextBuilder) super.requestStartTime(requestStartTimeNanos,\n                                                                     requestStartTimeMicros);\n     }\n+\n+    @Override\n+    public ClientRequestContextBuilder isTimedOut(boolean timeout) {", "originalCommit": "afa9bfa4c98f5fe1a669979eb437fc8ef10e8149", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e5535c2d22c9851e3cbe36e6354338f4a6edefd5", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\nindex a272454c3..0dccb22d6 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\n\n@@ -215,7 +215,7 @@ public final class ClientRequestContextBuilder extends AbstractRequestContextBui\n     }\n \n     @Override\n-    public ClientRequestContextBuilder isTimedOut(boolean timeout) {\n-        return (ClientRequestContextBuilder) super.isTimedOut(timeout);\n+    public ClientRequestContextBuilder timedOut(boolean timeout) {\n+        return (ClientRequestContextBuilder) super.timedOut(timeout);\n     }\n }\n"}}, {"oid": "e5535c2d22c9851e3cbe36e6354338f4a6edefd5", "url": "https://github.com/line/armeria/commit/e5535c2d22c9851e3cbe36e6354338f4a6edefd5", "message": "Address comments by @trustin", "committedDate": "2020-06-02T14:01:29Z", "type": "commit"}, {"oid": "2679490b4bee9231c51231a42f2488385812b286", "url": "https://github.com/line/armeria/commit/2679490b4bee9231c51231a42f2488385812b286", "message": "Merge branch 'master' into manual-timeout", "committedDate": "2020-06-03T01:46:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434341155", "bodyText": "What's the difference between enableTimeout and timedOut?\nCan't we combine them?", "author": "minwoox", "createdAt": "2020-06-03T06:43:11Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "originalCommit": "2679490b4bee9231c51231a42f2488385812b286", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5NDQwNA==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434394404", "bodyText": "The difference between them is:\n\nenableTimeout(false) does not set DefaultTimeoutController when building ClientRequestContext. This is useful when testing a pending timeout task because we can set it later via DefaultClientRequestContext.setResponseTimeoutController(). TimeoutController can be set only once.\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java\n    \n    \n        Lines 184 to 187\n      in\n      a7318e4\n    \n    \n    \n    \n\n        \n          \n           public void setTimeoutController(TimeoutController timeoutController, EventLoop eventLoop) { \n        \n\n        \n          \n               requireNonNull(timeoutController, \"timeoutController\"); \n        \n\n        \n          \n               requireNonNull(eventLoop, \"eventLoop\"); \n        \n\n        \n          \n               checkState(this.timeoutController == null, \"timeoutController is set already.\"); \n        \n    \n  \n\n\nAs you know, just inject a TimeoutController that has been timed-out.", "author": "ikhoon", "createdAt": "2020-06-03T08:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxMDIwNg==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434410206", "bodyText": "Thanks for the explanation. I felt that enableTimeout(false) meant that the timeout is disabled for this context so we cannot schedule it.\nHow about renaming something like configureDefaultTimeoutController?", "author": "minwoox", "createdAt": "2020-06-03T08:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NTI0OA==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434545248", "bodyText": "I felt that enableTimeout(false) meant that the timeout is disabled for this context so we cannot schedule it.\n\nIt seems better to remove the boolean argument. How about renaming to noTimeoutController()?", "author": "ikhoon", "createdAt": "2020-06-03T12:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTA1Mg==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434941052", "bodyText": "Sounds good to me. \ud83d\udc4d", "author": "minwoox", "createdAt": "2020-06-04T01:25:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "367d5e97957bdfdd0d4e39609050e89bf26f27c4", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\nindex 0dccb22d6..903796eb6 100644\n--- a/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\n+++ b/core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java\n\n@@ -119,8 +119,8 @@ public final class ClientRequestContextBuilder extends AbstractRequestContextBui\n     }\n \n     @VisibleForTesting\n-    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {\n-        this.enableTimeout = enableTimeout;\n+    ClientRequestContextBuilder noTimeoutController() {\n+        initTimeoutController = false;\n         return this;\n     }\n \n"}}, {"oid": "5d96e99b28eeea721a680b0bcad05af0c853e78c", "url": "https://github.com/line/armeria/commit/5d96e99b28eeea721a680b0bcad05af0c853e78c", "message": "Fix flaky test", "committedDate": "2020-06-03T08:45:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434406768", "bodyText": "Is there any reason that uses ImmediateEventExecutor.INSTANCE unlike ClientRequestContextBuilder uses?\nAlso, can we put this into the superclass to share?", "author": "minwoox", "createdAt": "2020-06-03T08:45:04Z", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, ImmediateEventExecutor.INSTANCE);", "originalCommit": "2679490b4bee9231c51231a42f2488385812b286", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUyOTg0Mg==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434529842", "bodyText": "Is there any reason that uses ImmediateEventExecutor.INSTANCE unlike ClientRequestContextBuilder uses?\n\nOops, I missed it. I changed this based on #2740 (comment)\n\nAlso, can we put this into the superclass to share?\n\nThis is duplicate code, but I intentionally added these to the subclasses. DefaultTimeoutController is an internal class. We can't expose it to public or protected.", "author": "ikhoon", "createdAt": "2020-06-03T12:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTY3NA==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434941674", "bodyText": "Yeah, it's fine as it is.", "author": "minwoox", "createdAt": "2020-06-04T01:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxMTM0Nw==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434411347", "bodyText": "probably better to use timedOut as well?", "author": "minwoox", "createdAt": "2020-06-03T08:52:44Z", "path": "core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java", "diffHunk": "@@ -485,6 +488,24 @@ protected final Channel fakeChannel() {\n         return channel;\n     }\n \n+    /**\n+     * Returns whether a timeout is set.\n+     */\n+    protected final boolean timedOut() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * Sets the specified {@code timeout}. If the specified {@code timeout} is {@code true},", "originalCommit": "5d96e99b28eeea721a680b0bcad05af0c853e78c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "367d5e97957bdfdd0d4e39609050e89bf26f27c4", "chunk": "diff --git a/core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java b/core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java\nindex ea14f30cf..6fa870341 100644\n--- a/core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java\n+++ b/core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java\n\n@@ -492,17 +492,17 @@ public abstract class AbstractRequestContextBuilder {\n      * Returns whether a timeout is set.\n      */\n     protected final boolean timedOut() {\n-        return timeout;\n+        return timedOut;\n     }\n \n     /**\n-     * Sets the specified {@code timeout}. If the specified {@code timeout} is {@code true},\n+     * Sets the specified {@code timedOut}. If the specified {@code timedOut} is {@code true},\n      * {@link RequestContext#isTimedOut()} will always return {@code true}.\n      * This is useful for checking the behavior of a {@link Service} and {@link Client}\n      * when a request exceeds a deadline.\n      */\n-    public AbstractRequestContextBuilder timedOut(boolean timeout) {\n-        this.timeout = timeout;\n+    public AbstractRequestContextBuilder timedOut(boolean timedOut) {\n+        this.timedOut = timedOut;\n         return this;\n     }\n \n"}}, {"oid": "367d5e97957bdfdd0d4e39609050e89bf26f27c4", "url": "https://github.com/line/armeria/commit/367d5e97957bdfdd0d4e39609050e89bf26f27c4", "message": "Address comments by @minwoox", "committedDate": "2020-06-03T13:15:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjI1Nw==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434942257", "bodyText": "We need to change this. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-06-04T01:29:56Z", "path": "core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java", "diffHunk": "@@ -187,4 +191,11 @@ void limitRequestTimeoutByDecorator(String path) {\n                 clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + path).aggregate().join();\n         assertThat(response.status().code()).isEqualTo(503);\n     }\n+\n+    @Test\n+    void timeoutNow() {\n+        final AggregatedHttpResponse response =\n+                clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + \"/timeout-now\").aggregate().join();", "originalCommit": "367d5e97957bdfdd0d4e39609050e89bf26f27c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1MDY5Mg==", "url": "https://github.com/line/armeria/pull/2740#discussion_r434950692", "bodyText": "Ahh.... Oops \ud83d\ude4a\ud83d\ude31", "author": "ikhoon", "createdAt": "2020-06-04T02:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjI1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "6b93f851cfdae2eb5982701c53732440d51666a2", "chunk": "diff --git a/core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java b/core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java\nindex 8e37543dc..f4dce53af 100644\n--- a/core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java\n+++ b/core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java\n\n@@ -188,7 +192,7 @@ class HttpServerRequestTimeoutTest {\n     })\n     void limitRequestTimeoutByDecorator(String path) {\n         final AggregatedHttpResponse response =\n-                clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + path).aggregate().join();\n+                withoutTimeoutServerClient.get(path).aggregate().join();\n         assertThat(response.status().code()).isEqualTo(503);\n     }\n \n"}}, {"oid": "6b93f851cfdae2eb5982701c53732440d51666a2", "url": "https://github.com/line/armeria/commit/6b93f851cfdae2eb5982701c53732440d51666a2", "message": "Merge branch 'master' into manual-timeout", "committedDate": "2020-06-04T02:03:27Z", "type": "commit"}, {"oid": "d5bb25640d94eefda0df4f8112f7660b1a94e984", "url": "https://github.com/line/armeria/commit/d5bb25640d94eefda0df4f8112f7660b1a94e984", "message": "Merge master", "committedDate": "2020-06-04T02:04:15Z", "type": "commit"}]}