{"pr_number": 7521, "pr_title": "IGNITE-8152 Forbid empty sql schema name", "pr_createdAt": "2020-03-12T09:40:22Z", "pr_url": "https://github.com/apache/ignite/pull/7521", "timeline": [{"oid": "ef3cb311a853af63737aacc5a220cf03812faecd", "url": "https://github.com/apache/ignite/commit/ef3cb311a853af63737aacc5a220cf03812faecd", "message": "IGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-12T11:31:58Z", "type": "forcePushed"}, {"oid": "ef3cb311a853af63737aacc5a220cf03812faecd", "url": "https://github.com/apache/ignite/commit/ef3cb311a853af63737aacc5a220cf03812faecd", "message": "IGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-12T11:31:58Z", "type": "forcePushed"}, {"oid": "ef3cb311a853af63737aacc5a220cf03812faecd", "url": "https://github.com/apache/ignite/commit/ef3cb311a853af63737aacc5a220cf03812faecd", "message": "IGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-12T11:31:58Z", "type": "forcePushed"}, {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "url": "https://github.com/apache/ignite/commit/cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "message": "IGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-13T13:25:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4MDkzNA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393480934", "bodyText": "here schema is always not null", "author": "joooger", "createdAt": "2020-03-17T07:13:51Z", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java", "diffHunk": "@@ -73,6 +73,11 @@ public void schema(@Nullable String schema) {\n     public Connection connection(@Nullable String schema) {\n         if (schema != null && !F.eq(this.schema, schema)) {\n             try {\n+\n+                if(schema != null && schema.trim().isEmpty()){", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTIzOA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525238", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4MDkzNA=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java b/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java\nindex d934add84a..0951fc5f8b 100644\n--- a/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java\n+++ b/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java\n\n@@ -74,7 +74,7 @@ public class H2ConnectionWrapper implements AutoCloseable {\n         if (schema != null && !F.eq(this.schema, schema)) {\n             try {\n \n-                if(schema != null && schema.trim().isEmpty()){\n+                if(schema.trim().isEmpty()){\n                    throw new IgniteSQLException(\"Failed to set schema for DB connection. \" +\n                            \"Schema name could not be an empty string\");\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTQzOA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489438", "bodyText": "Missed javadoc", "author": "AMashenkov", "createdAt": "2020-03-17T07:37:58Z", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -351,6 +353,10 @@ protected Result executeFrom(String qry, Ignite node) {\n         return executeFrom(new SqlFieldsQuery(qry), node);\n     }\n \n+    protected Result executeFrom(String qry, Ignite node, String schema) {", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTMxMA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525310", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\nindex 91c792e4e4..838ddfe2bd 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n\n@@ -353,6 +353,9 @@ public class BaseSqlTest extends AbstractIndexingCommonTest {\n         return executeFrom(new SqlFieldsQuery(qry), node);\n     }\n \n+    /**\n+     * Shortcut for {@link #executeFrom(String, Ignite, String)}, that has two String arguments.\n+     */\n     protected Result executeFrom(String qry, Ignite node, String schema) {\n         return executeFrom(new SqlFieldsQuery(qry).setSchema(schema), node);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTU1MA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489550", "bodyText": "Redundant empty line", "author": "AMashenkov", "createdAt": "2020-03-17T07:38:18Z", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTM0OQ==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525349", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTU1MA=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\nindex 91c792e4e4..838ddfe2bd 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n\n@@ -1256,15 +1259,16 @@ public class BaseSqlTest extends AbstractIndexingCommonTest {\n     }\n \n     /**\n-     * Check schema for validation\n+     * Init rule for expected exception\n      */\n-\n     @Rule\n     public ExpectedException expectedEx = ExpectedException.none();\n \n+    /**\n+     * Check schema for validation\n+     */\n     @Test\n     public void testCheckEmptySchema() {\n-\n         expectedEx.expect(IgniteSQLException.class);\n         expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n                 \"Schema name could not be an empty string\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTcwMw==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489703", "bodyText": "Missed javadoc", "author": "AMashenkov", "createdAt": "2020-03-17T07:38:39Z", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTQzNQ==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525435", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\nindex 91c792e4e4..838ddfe2bd 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n\n@@ -1256,15 +1259,16 @@ public class BaseSqlTest extends AbstractIndexingCommonTest {\n     }\n \n     /**\n-     * Check schema for validation\n+     * Init rule for expected exception\n      */\n-\n     @Rule\n     public ExpectedException expectedEx = ExpectedException.none();\n \n+    /**\n+     * Check schema for validation\n+     */\n     @Test\n     public void testCheckEmptySchema() {\n-\n         expectedEx.expect(IgniteSQLException.class);\n         expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n                 \"Schema name could not be an empty string\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTc4NQ==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489785", "bodyText": "Empty line", "author": "AMashenkov", "createdAt": "2020-03-17T07:38:52Z", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTQ3Nw==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525477", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTc4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\nindex 91c792e4e4..838ddfe2bd 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n\n@@ -1256,15 +1259,16 @@ public class BaseSqlTest extends AbstractIndexingCommonTest {\n     }\n \n     /**\n-     * Check schema for validation\n+     * Init rule for expected exception\n      */\n-\n     @Rule\n     public ExpectedException expectedEx = ExpectedException.none();\n \n+    /**\n+     * Check schema for validation\n+     */\n     @Test\n     public void testCheckEmptySchema() {\n-\n         expectedEx.expect(IgniteSQLException.class);\n         expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n                 \"Schema name could not be an empty string\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5MDAxMw==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393490013", "bodyText": "Empty line.", "author": "AMashenkov", "createdAt": "2020-03-17T07:39:29Z", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+\n+        expectedEx.expect(IgniteSQLException.class);\n+        expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n+                \"Schema name could not be an empty string\"\n+        );\n+\n+        String sqlQuery = \"SELECT * FROM Employee limit 1\";\n+\n+        testAllNodes(node -> {\n+            executeFrom(sqlQuery, node, \"\");\n+            executeFrom(sqlQuery, node, \" \");\n+            assertTrue(\"Check valid schema\",\n+                    executeFrom(sqlQuery, node, \"PUBLIC\").values().stream().count() > 0\n+            );\n+            assertTrue(\"Check null schema\",\n+                    executeFrom(sqlQuery, node, null).values().stream().count() > 0\n+            );\n+        });\n+", "originalCommit": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTUyNA==", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525524", "bodyText": "fixed", "author": "Aleksei-Litsov", "createdAt": "2020-03-17T08:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5MDAxMw=="}], "type": "inlineReview", "revised_code": {"commit": "caf83aff22f65ce3670a1c633880af1478f5764e", "chunk": "diff --git a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\nindex 91c792e4e4..838ddfe2bd 100644\n--- a/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n+++ b/modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java\n\n@@ -1256,15 +1259,16 @@ public class BaseSqlTest extends AbstractIndexingCommonTest {\n     }\n \n     /**\n-     * Check schema for validation\n+     * Init rule for expected exception\n      */\n-\n     @Rule\n     public ExpectedException expectedEx = ExpectedException.none();\n \n+    /**\n+     * Check schema for validation\n+     */\n     @Test\n     public void testCheckEmptySchema() {\n-\n         expectedEx.expect(IgniteSQLException.class);\n         expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n                 \"Schema name could not be an empty string\"\n"}}, {"oid": "caf83aff22f65ce3670a1c633880af1478f5764e", "url": "https://github.com/apache/ignite/commit/caf83aff22f65ce3670a1c633880af1478f5764e", "message": "IGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-17T08:20:18Z", "type": "forcePushed"}, {"oid": "97f2b2a28852a6f8952e08fe894f3e3dc7ee82a9", "url": "https://github.com/apache/ignite/commit/97f2b2a28852a6f8952e08fe894f3e3dc7ee82a9", "message": "IGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-19T10:13:52Z", "type": "forcePushed"}, {"oid": "13daea1ba271a49405df10569a977d3803fd7bff", "url": "https://github.com/apache/ignite/commit/13daea1ba271a49405df10569a977d3803fd7bff", "message": "IGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-19T15:16:34Z", "type": "commit"}, {"oid": "13daea1ba271a49405df10569a977d3803fd7bff", "url": "https://github.com/apache/ignite/commit/13daea1ba271a49405df10569a977d3803fd7bff", "message": "IGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name\n\nIGNITE-8152 Forbid empty sql schema name", "committedDate": "2020-03-19T15:16:34Z", "type": "forcePushed"}]}