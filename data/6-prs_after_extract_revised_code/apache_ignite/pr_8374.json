{"pr_number": 8374, "pr_title": "IGNITE-13599 Switch tests should have better precision", "pr_createdAt": "2020-10-20T10:32:24Z", "pr_url": "https://github.com/apache/ignite/pull/8374", "timeline": [{"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131", "url": "https://github.com/apache/ignite/commit/2674ca9b1f827c91b9d2e5af5efde621a412f131", "message": "Precision++", "committedDate": "2020-10-20T10:28:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5MzczMQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508493731", "bodyText": "Calendar? ORLY? Have you considered LocalDateTime?", "author": "ivandasch", "createdAt": "2020-10-20T13:19:27Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();", "originalCommit": "2674ca9b1f827c91b9d2e5af5efde621a412f131", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NjI5OQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509186299", "bodyText": "Fixed.", "author": "anton-vinogradov", "createdAt": "2020-10-21T11:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5MzczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "chunk": "diff --git a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\nindex 67fb322174..e0c5eb019f 100644\n--- a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n+++ b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n\n@@ -115,17 +121,10 @@ public class CellularTxStreamer extends IgniteAwareApplication {\n         }\n \n         List<String> result = new ArrayList<>();\n-        Calendar calendar = Calendar.getInstance();\n+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss.SSS\");\n \n-        for (int i = 0; i < precision; i++) {\n-            calendar.setTimeInMillis(opStartTimes[i]);\n-\n-            result.add(latencies[i] + \"ms started \"\n-                + calendar.get(Calendar.HOUR_OF_DAY) + \":\"\n-                + calendar.get(Calendar.MINUTE) + \":\"\n-                + calendar.get(Calendar.SECOND) + \".\"\n-                + calendar.get(Calendar.MILLISECOND));\n-        }\n+        for (int i = 0; i < precision; i++)\n+            result.add(Duration.ofNanos(latencies[i]).toMillis() + \" ms at \" + formatter.format(opStartTimes[i]));\n \n         recordResult(\"WORST_LATENCY\", result.toString());\n         recordResult(\"STREAMED\", cnt - warmup);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NjAwMg==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508496002", "bodyText": "Eeww, what about LocalDateTimeFormatter?", "author": "ivandasch", "createdAt": "2020-10-20T13:22:02Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();\n+\n+        for (int i = 0; i < precision; i++) {\n+            calendar.setTimeInMillis(opStartTimes[i]);\n+\n+            result.add(latencies[i] + \"ms started \"\n+                + calendar.get(Calendar.HOUR_OF_DAY) + \":\"", "originalCommit": "2674ca9b1f827c91b9d2e5af5efde621a412f131", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTg2OA==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509185868", "bodyText": "Fixed.", "author": "anton-vinogradov", "createdAt": "2020-10-21T11:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NjAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "chunk": "diff --git a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\nindex 67fb322174..e0c5eb019f 100644\n--- a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n+++ b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n\n@@ -115,17 +121,10 @@ public class CellularTxStreamer extends IgniteAwareApplication {\n         }\n \n         List<String> result = new ArrayList<>();\n-        Calendar calendar = Calendar.getInstance();\n+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss.SSS\");\n \n-        for (int i = 0; i < precision; i++) {\n-            calendar.setTimeInMillis(opStartTimes[i]);\n-\n-            result.add(latencies[i] + \"ms started \"\n-                + calendar.get(Calendar.HOUR_OF_DAY) + \":\"\n-                + calendar.get(Calendar.MINUTE) + \":\"\n-                + calendar.get(Calendar.SECOND) + \".\"\n-                + calendar.get(Calendar.MILLISECOND));\n-        }\n+        for (int i = 0; i < precision; i++)\n+            result.add(Duration.ofNanos(latencies[i]).toMillis() + \" ms at \" + formatter.format(opStartTimes[i]));\n \n         recordResult(\"WORST_LATENCY\", result.toString());\n         recordResult(\"STREAMED\", cnt - warmup);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzIxNw==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508497217", "bodyText": "I don't hesitate to insist, that System.nanoTime() is the only option.", "author": "ivandasch", "createdAt": "2020-10-20T13:23:06Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java", "diffHunk": "@@ -46,11 +43,9 @@\n \n             long start = System.currentTimeMillis();\n \n-            cache.put(key++, key);\n-\n-            long finish = System.currentTimeMillis();\n+            cache.put(key++ % 100, key); // Cycled update.\n \n-            long time = finish - start;\n+            long latency = System.currentTimeMillis() - start;", "originalCommit": "2674ca9b1f827c91b9d2e5af5efde621a412f131", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTc5OQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509185799", "bodyText": "Fixed.", "author": "anton-vinogradov", "createdAt": "2020-10-21T11:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "chunk": "diff --git a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java\nindex dd7fb464ab..bb91df8d2f 100644\n--- a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java\n+++ b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java\n\n@@ -41,11 +42,11 @@ public class SingleKeyTxStreamerApplication extends IgniteAwareApplication {\n         while (!terminated()) {\n             cnt++;\n \n-            long start = System.currentTimeMillis();\n+            long from = System.nanoTime();\n \n             cache.put(key++ % 100, key); // Cycled update.\n \n-            long latency = System.currentTimeMillis() - start;\n+            long latency = System.nanoTime() - from;\n \n             if (!record && cnt > warmup) {\n                 record = true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508501971", "bodyText": "Are you sure that creating the same map on each iteration is a good idea?", "author": "ivandasch", "createdAt": "2020-10-20T13:28:32Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -58,26 +63,30 @@\n \n         Affinity<Integer> aff = ignite.affinity(cacheName);\n \n-        while (!terminated()) {\n-            key++;\n+        List<Integer> cellKeys = new ArrayList<>();\n+\n+        int candidate = 0;\n \n-            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(key);\n+        while (cellKeys.size() < 100) {\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(++candidate);\n \n             Map<Object, Long> stat = nodes.stream().collect(", "originalCommit": "2674ca9b1f827c91b9d2e5af5efde621a412f131", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNDUyMQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508514521", "bodyText": "each key has it's own map", "author": "anton-vinogradov", "createdAt": "2020-10-20T13:42:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNDgzNQ==", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508514835", "bodyText": "Sorry, collections difers from each other on each iteration", "author": "ivandasch", "createdAt": "2020-10-20T13:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "chunk": "diff --git a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\nindex 67fb322174..e0c5eb019f 100644\n--- a/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n+++ b/modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java\n\n@@ -70,23 +71,28 @@ public class CellularTxStreamer extends IgniteAwareApplication {\n         while (cellKeys.size() < 100) {\n             Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(++candidate);\n \n-            Map<Object, Long> stat = nodes.stream().collect(\n-                Collectors.groupingBy(n -> n.attributes().get(attr), Collectors.counting()));\n+            Set<ClusterNode> stat = nodes.stream()\n+                .filter(n -> n.attributes().get(attr).equals(cell))\n+                .collect(Collectors.toSet());\n \n-            if (!stat.containsKey(cell))\n+            if (stat.isEmpty())\n                 continue;\n \n+            assert nodes.size() == stat.size();\n+\n             cellKeys.add(candidate);\n         }\n \n         while (!terminated()) {\n             cnt++;\n \n-            long start = System.currentTimeMillis();\n+            LocalDateTime start = LocalDateTime.now();\n+\n+            long from = System.nanoTime();\n \n             cache.put(cellKeys.get(cnt % cellKeys.size()), cnt); // Cycled update.\n \n-            long latency = System.currentTimeMillis() - start;\n+            long latency = System.nanoTime() - from;\n \n             if (!record && cnt > warmup) {\n                 record = true;\n"}}, {"oid": "a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "url": "https://github.com/apache/ignite/commit/a64d56f2a52abbe5baeb27dcde7f5c663e550b7d", "message": "Precision++", "committedDate": "2020-10-21T11:00:23Z", "type": "commit"}, {"oid": "ead5b29ada44ec8583e9b96d9a60a3a451df8334", "url": "https://github.com/apache/ignite/commit/ead5b29ada44ec8583e9b96d9a60a3a451df8334", "message": "Precision++", "committedDate": "2020-10-21T11:01:13Z", "type": "commit"}]}