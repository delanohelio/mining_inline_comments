{"pr_number": 1401, "pr_title": "Configurable timeouts for all cloud requests", "pr_createdAt": "2020-02-27T01:30:45Z", "pr_url": "https://github.com/linkedin/ambry/pull/1401", "timeline": [{"oid": "ad9cc4ffb71ca941709aef866c5ebf55afeba88c", "url": "https://github.com/linkedin/ambry/commit/ad9cc4ffb71ca941709aef866c5ebf55afeba88c", "message": "Configurable timeouts for all cloud requests", "committedDate": "2020-02-26T23:58:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2Njg5Mw==", "url": "https://github.com/linkedin/ambry/pull/1401#discussion_r384866893", "bodyText": "Increased timeout since integration test occasionally timed out on startup.", "author": "lightningrob", "createdAt": "2020-02-27T01:32:34Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java", "diffHunk": "@@ -239,7 +226,7 @@ public boolean downloadFile(String containerName, String fileName, OutputStream\n   void testConnectivity() {\n     try {\n       // TODO: Turn on verbose logging during this call (how to do in v12?)\n-      storageClient.getBlobContainerClient(\"partition-0\").existsWithResponse(Duration.ofSeconds(1), Context.NONE);\n+      storageClient.getBlobContainerClient(\"partition-0\").existsWithResponse(Duration.ofSeconds(5), Context.NONE);", "originalCommit": "ad9cc4ffb71ca941709aef866c5ebf55afeba88c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "2bf52afabe7a9400368fab3b8610281acf09d7dd", "url": "https://github.com/linkedin/ambry/commit/2bf52afabe7a9400368fab3b8610281acf09d7dd", "message": "Fix test mocks", "committedDate": "2020-02-27T02:01:50Z", "type": "commit"}, {"oid": "ea6e2a96d549a15aeeb12144b7836fad672b398f", "url": "https://github.com/linkedin/ambry/commit/ea6e2a96d549a15aeeb12144b7836fad672b398f", "message": "Another test fix", "committedDate": "2020-02-27T04:08:24Z", "type": "commit"}, {"oid": "4d75805a541371cb1bdf695e1fec3da5c5ad2ef3", "url": "https://github.com/linkedin/ambry/commit/4d75805a541371cb1bdf695e1fec3da5c5ad2ef3", "message": "Merge branch 'master' of github.com:linkedin/ambry into cloud-request-timeouts", "committedDate": "2020-02-27T06:23:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1Nzc5Ng==", "url": "https://github.com/linkedin/ambry/pull/1401#discussion_r386557796", "bodyText": "Seems everything here needs to be public static final int.", "author": "xuhao417347761", "createdAt": "2020-03-02T18:06:11Z", "path": "ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java", "diffHunk": "@@ -59,7 +61,9 @@\n   public static final int DEFAULT_RECENT_BLOB_CACHE_LIMIT = 10000;\n   public static final int DEFAULT_MAX_ATTEMPTS = 3;\n   public static final long DEFAULT_RETRY_DELAY_VALUE = 50;", "originalCommit": "4d75805a541371cb1bdf695e1fec3da5c5ad2ef3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad00d73742509d3d98dece6e6da0595d3f818cda", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java b/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\nindex d40f533fd..9dd35015e 100644\n--- a/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\n+++ b/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\n\n@@ -60,9 +61,10 @@ public class CloudConfig {\n   public static final int DEFAULT_COMPACTION_QUERY_LIMIT = 1000;\n   public static final int DEFAULT_RECENT_BLOB_CACHE_LIMIT = 10000;\n   public static final int DEFAULT_MAX_ATTEMPTS = 3;\n-  public static final long DEFAULT_RETRY_DELAY_VALUE = 50;\n+  public static final int DEFAULT_RETRY_DELAY_VALUE = 50;\n   public static final int DEFAULT_CLOUD_REQUEST_TIMEOUT = 500;\n   public static final int DEFAULT_UPLOAD_TIMEOUT = 5000;\n+  public static final int DEFAULT_QUERY_TIMEOUT = 60000;\n   public static final int DEFAULT_BATCH_TIMEOUT = 60000;\n   public static final int DEFAULT_VCR_PROXY_PORT = 3128;\n   public static final String DEFAULT_VCR_CLUSTER_SPECTATOR_FACTORY_CLASS =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1ODExMg==", "url": "https://github.com/linkedin/ambry/pull/1401#discussion_r386558112", "bodyText": "Same as above.", "author": "xuhao417347761", "createdAt": "2020-03-02T18:06:46Z", "path": "ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java", "diffHunk": "@@ -217,8 +221,23 @@\n   @Config(CLOUD_DEFAULT_RETRY_DELAY)\n   public final long cloudDefaultRetryDelay;", "originalCommit": "4d75805a541371cb1bdf695e1fec3da5c5ad2ef3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad00d73742509d3d98dece6e6da0595d3f818cda", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java b/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\nindex d40f533fd..9dd35015e 100644\n--- a/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\n+++ b/ambry-api/src/main/java/com.github.ambry/config/CloudConfig.java\n\n@@ -219,7 +221,7 @@ public class CloudConfig {\n    * The default delay in ms between retries of cloud operations.\n    */\n   @Config(CLOUD_DEFAULT_RETRY_DELAY)\n-  public final long cloudDefaultRetryDelay;\n+  public final int cloudDefaultRetryDelay;\n \n   /**\n    * The request timeout in msec for single-blob cloud operations.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxNjMzMA==", "url": "https://github.com/linkedin/ambry/pull/1401#discussion_r386616330", "bodyText": "Note here is a little confused. Please add more context.", "author": "zzmao", "createdAt": "2020-03-02T19:56:28Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java", "diffHunk": "@@ -93,12 +95,15 @@\n       logger.info(\"Using proxy: {}:{}\", cloudConfig.vcrProxyHost, cloudConfig.vcrProxyPort);\n     }\n     HttpClient client = new NettyAsyncHttpClientBuilder().proxy(proxyOptions).build();\n+    requestTimeout = Duration.ofMillis(cloudConfig.cloudRequestTimeout);\n+    uploadTimeout = Duration.ofMillis(cloudConfig.cloudUploadRequestTimeout);\n+    batchTimeout = Duration.ofMillis(cloudConfig.cloudBatchRequestTimeout);\n \n-    // TODO: may want to set different retry options depending on live serving or replication mode\n-    RequestRetryOptions requestRetryOptions = new RequestRetryOptions();\n+    // Note: retry decisions are made at CloudBlobStore level, not here.", "originalCommit": "4d75805a541371cb1bdf695e1fec3da5c5ad2ef3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad00d73742509d3d98dece6e6da0595d3f818cda", "chunk": "diff --git a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java\nindex c32f07de3..0a89bdff0 100644\n--- a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java\n+++ b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobDataAccessor.java\n\n@@ -99,7 +99,7 @@ public class AzureBlobDataAccessor {\n     uploadTimeout = Duration.ofMillis(cloudConfig.cloudUploadRequestTimeout);\n     batchTimeout = Duration.ofMillis(cloudConfig.cloudBatchRequestTimeout);\n \n-    // Note: retry decisions are made at CloudBlobStore level, not here.\n+    // Note: retry decisions are made at CloudBlobStore level.  Configure storageClient with no retries.\n     RequestRetryOptions noRetries = new RequestRetryOptions(RetryPolicyType.FIXED, 1, null, null, null, null);\n     storageClient = new BlobServiceClientBuilder().connectionString(azureCloudConfig.azureStorageConnectionString)\n         .httpClient(client)\n"}}, {"oid": "ad00d73742509d3d98dece6e6da0595d3f818cda", "url": "https://github.com/linkedin/ambry/commit/ad00d73742509d3d98dece6e6da0595d3f818cda", "message": "Address review comments", "committedDate": "2020-03-03T02:03:19Z", "type": "commit"}]}