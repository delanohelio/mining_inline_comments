{"pr_number": 1549, "pr_title": "Optimizations for BlobStoreStats", "pr_createdAt": "2020-06-04T15:45:26Z", "pr_url": "https://github.com/linkedin/ambry/pull/1549", "timeline": [{"oid": "44bbdd0c75fa5734ca5e720aea306c19cf0973d2", "url": "https://github.com/linkedin/ambry/commit/44bbdd0c75fa5734ca5e720aea306c19cf0973d2", "message": "Optimizations for BlobStoreStats\n\nThere seem to be a couple hot spots for stats collection. The main one\nis querying the full index for each put index entry in\nupdateExpiryTimeForAllPuts. I do not have a way of reducing the number\nof index lookups here yet, but I am trying to find a couple places where\nwe can improve things along the way:\n\nIn this commit, I get rid of one intermediate list of valid index\nentries and instead directly update the map instead of iterating an\nextra time and allocating an extra ~40k item list.", "committedDate": "2020-06-04T15:40:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MzM2OA==", "url": "https://github.com/linkedin/ambry/pull/1549#discussion_r435363368", "bodyText": "I added a new interface instead of using Consumer<IndexEntry> or ThrowingConsumer<IndexEntry> since these some of these methods need to throw StoreException specifically unless many method signatures are changed", "author": "cgtz", "createdAt": "2020-06-04T15:47:41Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreStats.java", "diffHunk": "@@ -1130,4 +1116,16 @@ void cancel() {\n       cancelled = true;\n     }\n   }\n+\n+  /**\n+   * An action to take on a single {@link IndexEntry}\n+   */\n+  @FunctionalInterface\n+  private interface IndexEntryAction {", "originalCommit": "44bbdd0c75fa5734ca5e720aea306c19cf0973d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}