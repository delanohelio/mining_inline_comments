{"pr_number": 1720, "pr_title": "Change compaction retention time granularity to hour", "pr_createdAt": "2020-12-08T23:40:48Z", "pr_url": "https://github.com/linkedin/ambry/pull/1720", "timeline": [{"oid": "4b94bcd917e14ae4b42992a31effb5b38196c1d0", "url": "https://github.com/linkedin/ambry/commit/4b94bcd917e14ae4b42992a31effb5b38196c1d0", "message": "compataction retention time granularity to hour", "committedDate": "2020-12-08T23:21:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1MTk0Ng==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r539851946", "bodyText": "minor: Might want to change to \"Message retention hours\" for the exception message.", "author": "SophieGuo410", "createdAt": "2020-12-10T05:17:22Z", "path": "ambry-store/src/main/java/com/github/ambry/store/StorageManager.java", "diffHunk": "@@ -165,8 +165,8 @@ private void verifyConfigs(StoreConfig storeConfig, DiskManagerConfig diskManage\n     /* NOTE: We must ensure that the store never performs hard deletes on the part of the log that is not yet flushed.\n        We do this by making sure that the retention period for deleted messages (which determines the end point for hard\n        deletes) is always greater than the log flush period. */\n-    if (storeConfig.storeDeletedMessageRetentionDays\n-        < TimeUnit.SECONDS.toDays(storeConfig.storeDataFlushIntervalSeconds) + 1) {\n+    if (storeConfig.storeDeletedMessageRetentionHours\n+        < TimeUnit.SECONDS.toHours(storeConfig.storeDataFlushIntervalSeconds) + 1) {\n       throw new StoreException(\"Message retention days must be greater than the store flush interval period\",", "originalCommit": "4b94bcd917e14ae4b42992a31effb5b38196c1d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edd25b507cd4fbae91e50709cbf69226b6018e47", "chunk": "diff --git a/ambry-store/src/main/java/com/github/ambry/store/StorageManager.java b/ambry-store/src/main/java/com/github/ambry/store/StorageManager.java\nindex d5226c8cc..d9b238870 100644\n--- a/ambry-store/src/main/java/com/github/ambry/store/StorageManager.java\n+++ b/ambry-store/src/main/java/com/github/ambry/store/StorageManager.java\n\n@@ -167,7 +167,7 @@ public class StorageManager implements StoreManager {\n        deletes) is always greater than the log flush period. */\n     if (storeConfig.storeDeletedMessageRetentionHours\n         < TimeUnit.SECONDS.toHours(storeConfig.storeDataFlushIntervalSeconds) + 1) {\n-      throw new StoreException(\"Message retention days must be greater than the store flush interval period\",\n+      throw new StoreException(\"Message retention hours must be greater than the store flush interval period\",\n           StoreErrorCodes.Initialization_Error);\n     }\n     if (diskManagerConfig.diskManagerReserveFileDirName.length() == 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg4MjMyOA==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r539882328", "bodyText": "TimeUnit.HOURS.toMillis", "author": "jsjtzyy", "createdAt": "2020-12-10T06:19:55Z", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/CloudBlobStore.java", "diffHunk": "@@ -648,7 +648,7 @@ private boolean preUndeleteValidation(CloudBlobMetadata metadata, StoreKey key,\n       throw new StoreException(\"Id \" + key + \" is already undeleted in cloud\", StoreErrorCodes.ID_Undeleted);\n     } else if (!metadata.isDeleted()) {\n       throw new StoreException(\"Id \" + key + \" is not deleted yet in cloud \", StoreErrorCodes.ID_Not_Deleted);\n-    } else if (metadata.getDeletionTime() + TimeUnit.DAYS.toMillis(storeConfig.storeDeletedMessageRetentionDays)\n+    } else if (metadata.getDeletionTime() + TimeUnit.DAYS.toMillis(storeConfig.storeDeletedMessageRetentionHours)", "originalCommit": "4b94bcd917e14ae4b42992a31effb5b38196c1d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edd25b507cd4fbae91e50709cbf69226b6018e47", "chunk": "diff --git a/ambry-cloud/src/main/java/com/github/ambry/cloud/CloudBlobStore.java b/ambry-cloud/src/main/java/com/github/ambry/cloud/CloudBlobStore.java\nindex 66c962130..149d25073 100644\n--- a/ambry-cloud/src/main/java/com/github/ambry/cloud/CloudBlobStore.java\n+++ b/ambry-cloud/src/main/java/com/github/ambry/cloud/CloudBlobStore.java\n\n@@ -648,7 +648,7 @@ class CloudBlobStore implements Store {\n       throw new StoreException(\"Id \" + key + \" is already undeleted in cloud\", StoreErrorCodes.ID_Undeleted);\n     } else if (!metadata.isDeleted()) {\n       throw new StoreException(\"Id \" + key + \" is not deleted yet in cloud \", StoreErrorCodes.ID_Not_Deleted);\n-    } else if (metadata.getDeletionTime() + TimeUnit.DAYS.toMillis(storeConfig.storeDeletedMessageRetentionHours)\n+    } else if (metadata.getDeletionTime() + TimeUnit.HOURS.toMillis(storeConfig.storeDeletedMessageRetentionHours)\n         < System.currentTimeMillis()) {\n       throw new StoreException(\"Id \" + key + \" already permanently deleted in cloud \",\n           StoreErrorCodes.ID_Deleted_Permanently);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg5MzE1NA==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r539893154", "bodyText": "@justinlin-linkedin if logSegmentForecastOffsetMs becomes a few hours and bucketSpanInMs, bucketCount stay unchanged, will it be a problem? logSegmentForecastEndTimeMsForDeleted  > scan timestamp", "author": "jsjtzyy", "createdAt": "2020-12-10T06:33:05Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "diffHunk": "@@ -247,7 +247,7 @@ public void start() throws StoreException {\n             diskIOScheduler, metrics, time, sessionId, storeDescriptor.getIncarnationId());\n         compactor.initialize(index);\n         metrics.initializeIndexGauges(storeId, index, capacityInBytes);\n-        long logSegmentForecastOffsetMs = TimeUnit.DAYS.toMillis(config.storeDeletedMessageRetentionDays);\n+        long logSegmentForecastOffsetMs = TimeUnit.HOURS.toMillis(config.storeDeletedMessageRetentionHours);\n         long bucketSpanInMs = TimeUnit.MINUTES.toMillis(config.storeStatsBucketSpanInMinutes);", "originalCommit": "4b94bcd917e14ae4b42992a31effb5b38196c1d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1Mzk0NQ==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542653945", "bodyText": "@justinlin-linkedin  any comment on Ying's concern?", "author": "zzmao", "createdAt": "2020-12-14T19:03:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg5MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2MDIwMg==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542660202", "bodyText": "@jsjtzyy @zzmao  I don't think so, buckets are designed to serve the incoming requests, it shouldn't be affected by the retention duration. One we get a smooth transition is to not enable bucket reporting in delivery cluster.", "author": "justinlin-linkedin", "createdAt": "2020-12-14T19:08:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg5MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2NjYwOA==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542666608", "bodyText": "Thanks and noted. I will disable bucket reporting in EI testing.", "author": "zzmao", "createdAt": "2020-12-14T19:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg5MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MTI3MQ==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542681271", "bodyText": "Sure, we can temporarily disable bucket and revisit this before turning it on.", "author": "jsjtzyy", "createdAt": "2020-12-14T19:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg5MzE1NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "edd25b507cd4fbae91e50709cbf69226b6018e47", "url": "https://github.com/linkedin/ambry/commit/edd25b507cd4fbae91e50709cbf69226b6018e47", "message": "address comment", "committedDate": "2020-12-11T21:55:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4Mzk1Ng==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542683956", "bodyText": "One minor suggestion:  maybe we can use 7 * 24 as default value which lines up with we are using for main cluster, and change this for delivery cluster only.", "author": "jsjtzyy", "createdAt": "2020-12-14T19:29:51Z", "path": "ambry-api/src/main/java/com/github/ambry/config/StoreConfig.java", "diffHunk": "@@ -75,11 +75,11 @@\n   public final double storeIndexBloomMaxFalsePositiveProbability;\n \n   /**\n-   * How long (in days) a key must be in deleted state before it is hard deleted.\n+   * How long (in hours) a key must be in deleted state before it is hard deleted. Minimum value: 1 hour.\n    */\n-  @Config(\"store.deleted.message.retention.days\")\n-  @Default(\"7\")\n-  public final int storeDeletedMessageRetentionDays;\n+  @Config(\"store.deleted.message.retention.hours\")\n+  @Default(\"24\")", "originalCommit": "edd25b507cd4fbae91e50709cbf69226b6018e47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MDk3NA==", "url": "https://github.com/linkedin/ambry/pull/1720#discussion_r542690974", "bodyText": "sure.", "author": "zzmao", "createdAt": "2020-12-14T19:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4Mzk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "31495050ff497992d120a5149afe508b1d56870f", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/config/StoreConfig.java b/ambry-api/src/main/java/com/github/ambry/config/StoreConfig.java\nindex 50461e242..8d7b33dc1 100644\n--- a/ambry-api/src/main/java/com/github/ambry/config/StoreConfig.java\n+++ b/ambry-api/src/main/java/com/github/ambry/config/StoreConfig.java\n\n@@ -78,7 +78,7 @@ public class StoreConfig {\n    * How long (in hours) a key must be in deleted state before it is hard deleted. Minimum value: 1 hour.\n    */\n   @Config(\"store.deleted.message.retention.hours\")\n-  @Default(\"24\")\n+  @Default(\"168\")\n   public final int storeDeletedMessageRetentionHours;\n \n   /**\n"}}, {"oid": "31495050ff497992d120a5149afe508b1d56870f", "url": "https://github.com/linkedin/ambry/commit/31495050ff497992d120a5149afe508b1d56870f", "message": "change to 7*24h", "committedDate": "2020-12-14T19:37:54Z", "type": "commit"}]}