{"pr_number": 1363, "pr_title": "Add UndeleteMessageFormatInputStream", "pr_createdAt": "2020-01-22T21:49:55Z", "pr_url": "https://github.com/linkedin/ambry/pull/1363", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4OTcxOQ==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370789719", "bodyText": "minor: 2020", "author": "jsjtzyy", "createdAt": "2020-01-24T18:55:28Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7681b19e150208e17604c12e2382993863d7e2e", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\nindex 2ca625395..a88d6bfcf 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4OTg1MA==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370789850", "bodyText": "nit: to undelete a blob", "author": "jsjtzyy", "createdAt": "2020-01-24T18:55:43Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.messageformat;\n+\n+import com.github.ambry.store.StoreKey;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * Represents a message that consists of the undelete record.\n+ * This format is used to delete a blob", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7681b19e150208e17604c12e2382993863d7e2e", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\nindex 2ca625395..a88d6bfcf 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5MzQyNQ==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370793425", "bodyText": "Looks like you decide to go with MessageHeader_Format_V2, which means lifeVersion is not tracked in message header. Is this intended?", "author": "jsjtzyy", "createdAt": "2020-01-24T19:04:08Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.messageformat;\n+\n+import com.github.ambry.store.StoreKey;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * Represents a message that consists of the undelete record.\n+ * This format is used to delete a blob\n+ *\n+ *  - - - - - - - - - - - - -\n+ * |     Message Header      |\n+ *  - - - - - - - - - - - - -\n+ * |       blob key          |\n+ *  - - - - - - - - - - - - -\n+ * |      Update Record      |\n+ *  - - - - - - - - - - - - -\n+ *\n+ */\n+public class UndeleteMessageFormatInputStream extends MessageFormatInputStream {\n+  public UndeleteMessageFormatInputStream(StoreKey key, short accountId, short containerId, long updateTimeInMs)\n+      throws MessageFormatException {\n+    int headerSize = MessageFormatRecord.getHeaderSizeForVersion(MessageFormatRecord.headerVersionToUse);\n+    int recordSize = MessageFormatRecord.Update_Format_V3.getRecordSize(SubRecord.Type.UNDELETE);\n+    buffer = ByteBuffer.allocate(headerSize + key.sizeInBytes() + recordSize);\n+    MessageFormatRecord.MessageHeader_Format_V2.serializeHeader(buffer, recordSize,", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7681b19e150208e17604c12e2382993863d7e2e", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\nindex 2ca625395..a88d6bfcf 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMjQwNw==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370802407", "bodyText": "nit: add more comment for update operation (i.e DELETE/TTLUpdate/UNDELETE)", "author": "jsjtzyy", "createdAt": "2020-01-24T19:24:50Z", "path": "ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java", "diffHunk": "@@ -64,6 +64,24 @@ public MessageInfo(StoreKey key, long size, boolean deleted, boolean ttlUpdated,\n     this(key, size, deleted, ttlUpdated, Utils.Infinite_Time, accountId, containerId, operationTimeMs);\n   }\n \n+  /**\n+   * Construct an instance of MessageInfo.\n+   * @param key the {@link StoreKey} associated with this message.\n+   * @param size the size of this message in bytes.\n+   * @param deleted {@code true} if the message is deleted, {@code false} otherwise\n+   * @param ttlUpdated {@code true} if the message's ttl has been updated, {@code false} otherwise\n+   * @param undeleted {@code true} if the message is undeleted, {@code false} otherwise\n+   * @param accountId accountId of the blob\n+   * @param containerId containerId of the blob\n+   * @param operationTimeMs operation time in ms\n+   * @param lifeVersion update version of update", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java b/ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java\nindex e0e2799f3..9c546b9ff 100644\n--- a/ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java\n+++ b/ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java\n\n@@ -74,12 +74,11 @@ public class MessageInfo {\n    * @param accountId accountId of the blob\n    * @param containerId containerId of the blob\n    * @param operationTimeMs operation time in ms\n-   * @param lifeVersion update version of update\n    */\n   public MessageInfo(StoreKey key, long size, boolean deleted, boolean ttlUpdated, boolean undeleted, short accountId,\n-      short containerId, long operationTimeMs, short lifeVersion) {\n+      short containerId, long operationTimeMs) {\n     this(key, size, deleted, ttlUpdated, undeleted, Utils.Infinite_Time, null, accountId, containerId, operationTimeMs,\n-        lifeVersion);\n+        (short) 0);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNTkzMg==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370805932", "bodyText": "If we don't adopt MessageHeader_Format_V3, do we still need to check this?  I am considering if lifeVersion is not put in header, we probably need to remove hasLifeVersion method from V1/V2 as well.", "author": "jsjtzyy", "createdAt": "2020-01-24T19:32:37Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java", "diffHunk": "@@ -80,24 +80,36 @@ public MessageInfo getMessageInfo(Read read, long offset, StoreKeyFactory storeK\n       if (headerFormat.hasEncryptionKeyRecord()) {\n         deserializeBlobEncryptionKey(stream);\n       }\n+      short lifeVersion = 0;\n+      if (headerFormat.hasLifeVersion()) {\n+        lifeVersion = headerFormat.getLifeVersion();\n+      }", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNjk0MA==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370806940", "bodyText": "Sorry, ignore this, I feel like we do need the lifeVersion in message header", "author": "jsjtzyy", "createdAt": "2020-01-24T19:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNTkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java\nindex 20f43c6e6..d0e84bdce 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java\n\n@@ -80,17 +80,12 @@ public class BlobStoreHardDelete implements MessageStoreHardDelete {\n       if (headerFormat.hasEncryptionKeyRecord()) {\n         deserializeBlobEncryptionKey(stream);\n       }\n-      short lifeVersion = 0;\n-      if (headerFormat.hasLifeVersion()) {\n-        lifeVersion = headerFormat.getLifeVersion();\n-      }\n       // read the appropriate type of message based on the relative offset that is set\n       if (headerFormat.isPutRecord()) {\n         BlobProperties properties = deserializeBlobProperties(stream);\n-        return new MessageInfo(key, header.capacity() + key.sizeInBytes() + headerFormat.getMessageSize(), false, false,\n-            false, Utils.addSecondsToEpochTime(properties.getCreationTimeInMs(), properties.getTimeToLiveInSeconds()),\n-            null, properties.getAccountId(), properties.getContainerId(), properties.getCreationTimeInMs(),\n-            lifeVersion);\n+        return new MessageInfo(key, header.capacity() + key.sizeInBytes() + headerFormat.getMessageSize(),\n+            Utils.addSecondsToEpochTime(properties.getCreationTimeInMs(), properties.getTimeToLiveInSeconds()),\n+            properties.getAccountId(), properties.getContainerId(), properties.getCreationTimeInMs());\n       } else {\n         UpdateRecord updateRecord = deserializeUpdateRecord(stream);\n         boolean deleted = false, ttlUpdated = false, undeleted = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNTA4Mg==", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370815082", "bodyText": "if we decide to use V3 header in the future, please add lifeVersion check in checkHeaderAndStoreKeyForUpdate method.", "author": "jsjtzyy", "createdAt": "2020-01-24T19:54:24Z", "path": "ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java", "diffHunk": "@@ -443,4 +443,57 @@ private static void checkTtlUpdateSubRecord(InputStream stream, short accountId,\n         updateRecord.getTtlUpdateSubRecord().getUpdatedExpiryTimeMs());\n     Assert.assertEquals(\"UpdateTime mismatch\", updateTimeMs, updateRecord.getUpdateTimeInMs());\n   }\n+\n+  /**\n+   * Test for {@link UndeleteMessageFormatInputStream}.\n+   * @throws Exception\n+   */\n+  @Test\n+  public void messageFormatUndeleteUpdateRecordTest() throws Exception {\n+    StoreKey key = new MockId(\"id1\");\n+    short accountId = Utils.getRandomShort(TestUtils.RANDOM);\n+    short containerId = Utils.getRandomShort(TestUtils.RANDOM);\n+    long updateTimeMs = SystemTime.getInstance().milliseconds() + TestUtils.RANDOM.nextInt();\n+    MessageFormatInputStream messageFormatInputStream =\n+        new UndeleteMessageFormatInputStream(key, accountId, containerId, updateTimeMs);\n+    long undeleteRecordSize = MessageFormatRecord.Update_Format_V3.getRecordSize(SubRecord.Type.UNDELETE);\n+    int headerSize = MessageFormatRecord.getHeaderSizeForVersion(MessageFormatRecord.headerVersionToUse);\n+    Assert.assertEquals(headerSize + undeleteRecordSize + key.sizeInBytes(), messageFormatInputStream.getSize());\n+    checkUndeleteMessage(messageFormatInputStream, undeleteRecordSize, key, accountId, containerId, updateTimeMs);\n+  }\n+\n+  /**\n+   * Checks a undelete message including headers and the {@link UpdateRecord}.\n+   * @param stream the {@link InputStream} to read data from\n+   * @param expectedRecordSize the expected size of the record in the message. Can be {@code null} if unknown (won't be\n+   *                            checked)\n+   * @param key the expected {@link StoreKey}\n+   * @param accountId the account id expected\n+   * @param containerId the container id expected\n+   * @param updateTimeMs the expected time of update\n+   * @throws Exception any error.\n+   */\n+  private static void checkUndeleteMessage(InputStream stream, Long expectedRecordSize, StoreKey key, short accountId,\n+      short containerId, long updateTimeMs) throws Exception {\n+    checkHeaderAndStoreKeyForUpdate(stream, expectedRecordSize, key);", "originalCommit": "db954abb88da5a83867a4fffb1a2f74955954ced", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "chunk": "diff --git a/ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java b/ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java\nindex 7fc34441b..4c7b3d2e5 100644\n--- a/ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java\n+++ b/ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java\n\n@@ -462,31 +462,12 @@ public class MessageFormatInputStreamTest {\n     checkUndeleteMessage(messageFormatInputStream, undeleteRecordSize, key, accountId, containerId, updateTimeMs);\n   }\n \n-  /**\n-   * Checks a undelete message including headers and the {@link UpdateRecord}.\n-   * @param stream the {@link InputStream} to read data from\n-   * @param expectedRecordSize the expected size of the record in the message. Can be {@code null} if unknown (won't be\n-   *                            checked)\n-   * @param key the expected {@link StoreKey}\n-   * @param accountId the account id expected\n-   * @param containerId the container id expected\n-   * @param updateTimeMs the expected time of update\n-   * @throws Exception any error.\n-   */\n   private static void checkUndeleteMessage(InputStream stream, Long expectedRecordSize, StoreKey key, short accountId,\n       short containerId, long updateTimeMs) throws Exception {\n     checkHeaderAndStoreKeyForUpdate(stream, expectedRecordSize, key);\n     checkUndeleteSubRecord(stream, accountId, containerId, updateTimeMs);\n   }\n \n-  /**\n-   * Verifies the values in the {@link UpdateRecord} obtained from {@code stream} for undelete.\n-   * @param stream the {@link InputStream} to obtain the records from\n-   * @param accountId the account id expected\n-   * @param containerId the container id expected\n-   * @param updateTimeMs the expected time of update\n-   * @throws Exception any error.\n-   */\n   private static void checkUndeleteSubRecord(InputStream stream, short accountId, short containerId, long updateTimeMs)\n       throws Exception {\n     UpdateRecord updateRecord = MessageFormatRecord.deserializeUpdateRecord(stream);\n"}}, {"oid": "c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "url": "https://github.com/linkedin/ambry/commit/c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "message": "Add UndeleteMessageFormatInputStream", "committedDate": "2020-01-27T18:40:11Z", "type": "commit"}, {"oid": "dcda6e5e1dacef9a25c3018fb08993bbc800db8f", "url": "https://github.com/linkedin/ambry/commit/dcda6e5e1dacef9a25c3018fb08993bbc800db8f", "message": "comments", "committedDate": "2020-01-27T18:40:11Z", "type": "commit"}, {"oid": "ac01989d5d7ef599e550a95b2a0e7122e3e56901", "url": "https://github.com/linkedin/ambry/commit/ac01989d5d7ef599e550a95b2a0e7122e3e56901", "message": "add life version from log to index", "committedDate": "2020-01-27T18:40:11Z", "type": "commit"}, {"oid": "e7681b19e150208e17604c12e2382993863d7e2e", "url": "https://github.com/linkedin/ambry/commit/e7681b19e150208e17604c12e2382993863d7e2e", "message": "wip for comments", "committedDate": "2020-01-27T18:40:11Z", "type": "commit"}, {"oid": "10d9507fb1f28d78755d7fce843182356ae86d22", "url": "https://github.com/linkedin/ambry/commit/10d9507fb1f28d78755d7fce843182356ae86d22", "message": "Comments", "committedDate": "2020-01-27T18:40:11Z", "type": "commit"}, {"oid": "10d9507fb1f28d78755d7fce843182356ae86d22", "url": "https://github.com/linkedin/ambry/commit/10d9507fb1f28d78755d7fce843182356ae86d22", "message": "Comments", "committedDate": "2020-01-27T18:40:11Z", "type": "forcePushed"}]}