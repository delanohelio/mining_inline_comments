{"pr_number": 1563, "pr_title": "Acquire stream from connections randomly", "pr_createdAt": "2020-06-12T03:45:13Z", "pr_url": "https://github.com/linkedin/ambry/pull/1563", "timeline": [{"oid": "41de580a1ffa4ad0ee439c95cf280ec59e48db64", "url": "https://github.com/linkedin/ambry/commit/41de580a1ffa4ad0ee439c95cf280ec59e48db64", "message": "Acquire stream from connections randomly", "committedDate": "2020-06-12T03:42:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5MTg3NA==", "url": "https://github.com/linkedin/ambry/pull/1563#discussion_r439191874", "bodyText": "nit: we can just Collections.shuffle(multiplexedChannelRecords, random, then go through the for loop.", "author": "justinlin-linkedin", "createdAt": "2020-06-12T03:48:37Z", "path": "ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java", "diffHunk": "@@ -186,15 +188,17 @@ Http2ClientConfig getHttp2ClientConfig() {\n       return promise.setFailure(new IOException(\"Channel pool is closed!\"));\n     }\n \n-    if (parentConnections.size() >= http2ClientConfig.http2MinConnectionPerPort) {\n-      // TODO: if warmup is not 100%, new connections are still required.\n-      // This is a passive load balance depends on compareAndSet in claimStream().\n-      for (MultiplexedChannelRecord multiplexedChannel : parentConnections) {\n-        if (acquireStreamOnInitializedConnection(multiplexedChannel, promise)) {\n-          return promise;\n-        }\n-        http2ClientMetrics.http2StreamSlipAcquireCount.inc();\n+    List<MultiplexedChannelRecord> multiplexedChannelRecords = new ArrayList<>(parentConnections);\n+\n+    // Attempt at most multiplexedChannelRecords.size(). No slip acquire expected.\n+    for (int i = 0; i < multiplexedChannelRecords.size(); i++) {\n+      int randomIndex = random.nextInt(multiplexedChannelRecords.size());\n+      MultiplexedChannelRecord multiplexedChannelRecord = multiplexedChannelRecords.get(randomIndex);\n+      if (acquireStreamOnInitializedConnection(multiplexedChannelRecord, promise)) {\n+        return promise;\n       }\n+      log.warn(\"Stream slip acquire on {}\", inetSocketAddress);\n+      http2ClientMetrics.http2StreamSlipAcquireCount.inc();", "originalCommit": "41de580a1ffa4ad0ee439c95cf280ec59e48db64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNzczMQ==", "url": "https://github.com/linkedin/ambry/pull/1563#discussion_r439537731", "bodyText": "fixed.", "author": "zzmao", "createdAt": "2020-06-12T16:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5MTg3NA=="}], "type": "inlineReview", "revised_code": {"commit": "bab2cb23f593258ccd75c6fb54541ddb94b28b2e", "chunk": "diff --git a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\nindex 1890888ac..a66426acb 100644\n--- a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\n+++ b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\n\n@@ -189,11 +189,9 @@ public class Http2MultiplexedChannelPool implements ChannelPool {\n     }\n \n     List<MultiplexedChannelRecord> multiplexedChannelRecords = new ArrayList<>(parentConnections);\n-\n+    Collections.shuffle(multiplexedChannelRecords);\n     // Attempt at most multiplexedChannelRecords.size(). No slip acquire expected.\n-    for (int i = 0; i < multiplexedChannelRecords.size(); i++) {\n-      int randomIndex = random.nextInt(multiplexedChannelRecords.size());\n-      MultiplexedChannelRecord multiplexedChannelRecord = multiplexedChannelRecords.get(randomIndex);\n+    for (MultiplexedChannelRecord multiplexedChannelRecord : multiplexedChannelRecords) {\n       if (acquireStreamOnInitializedConnection(multiplexedChannelRecord, promise)) {\n         return promise;\n       }\n"}}, {"oid": "bab2cb23f593258ccd75c6fb54541ddb94b28b2e", "url": "https://github.com/linkedin/ambry/commit/bab2cb23f593258ccd75c6fb54541ddb94b28b2e", "message": "use shuffle", "committedDate": "2020-06-12T04:00:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5ODU5MQ==", "url": "https://github.com/linkedin/ambry/pull/1563#discussion_r439198591", "bodyText": "nit: these two and VerifiableProperties can be removed. (format this file)", "author": "jsjtzyy", "createdAt": "2020-06-12T04:19:43Z", "path": "ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java", "diffHunk": "@@ -43,8 +43,10 @@\n import java.net.InetSocketAddress;\n import java.nio.channels.ClosedChannelException;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n+import java.util.Random;", "originalCommit": "bab2cb23f593258ccd75c6fb54541ddb94b28b2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNzkyNQ==", "url": "https://github.com/linkedin/ambry/pull/1563#discussion_r439537925", "bodyText": "fixed. (for some reason, my cmd+L can't fix unused package anymore)", "author": "zzmao", "createdAt": "2020-06-12T16:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5ODU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9c2d73c203679bb10246f2fd77c715cd592dde06", "chunk": "diff --git a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\nindex a66426acb..13b02d30d 100644\n--- a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\n+++ b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2MultiplexedChannelPool.java\n\n@@ -45,8 +44,6 @@ import java.nio.channels.ClosedChannelException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Properties;\n-import java.util.Random;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.TimeUnit;\n"}}, {"oid": "9c2d73c203679bb10246f2fd77c715cd592dde06", "url": "https://github.com/linkedin/ambry/commit/9c2d73c203679bb10246f2fd77c715cd592dde06", "message": "remove unused lib", "committedDate": "2020-06-12T16:32:44Z", "type": "commit"}, {"oid": "0e46fa184909e05c48d3959c371096794e058688", "url": "https://github.com/linkedin/ambry/commit/0e46fa184909e05c48d3959c371096794e058688", "message": "fix min connection issue", "committedDate": "2020-06-12T16:59:02Z", "type": "commit"}]}