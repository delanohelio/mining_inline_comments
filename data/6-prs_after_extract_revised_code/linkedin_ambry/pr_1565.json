{"pr_number": 1565, "pr_title": "Fix incorrect variable assignment in DynamicClusterChangeHandler", "pr_createdAt": "2020-06-16T02:42:11Z", "pr_url": "https://github.com/linkedin/ambry/pull/1565", "timeline": [{"oid": "615245290a52a054c878e176a15e0660e6b88223", "url": "https://github.com/linkedin/ambry/commit/615245290a52a054c878e176a15e0660e6b88223", "message": "Fix a bug in variable assigment in DynamicClusterChangeHandler\n\nPR1522 mistakenly assigned getStoppedReplicas() from dataNodeConfig to\nsealedReplicas variable. This PR fixed it and added debug log.", "committedDate": "2020-06-16T02:34:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1Mzk3Mg==", "url": "https://github.com/linkedin/ambry/pull/1565#discussion_r440553972", "bodyText": "This change comes from formatting file. No logic change.", "author": "jsjtzyy", "createdAt": "2020-06-16T02:43:04Z", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -356,8 +358,8 @@ private void addOrUpdateInstanceInfos(Iterable<DataNodeConfig> dataNodeConfigs)\n               new AmbryPartition(Long.parseLong(partitionName), replicaConfig.getPartitionClass(),\n                   helixClusterManagerCallback);\n           // Ensure only one AmbryPartition instance exists for specific partition.\n-          mappedPartition =\n-              clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaConfig.getReplicaCapacityInBytes());\n+          mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition,\n+              replicaConfig.getReplicaCapacityInBytes());", "originalCommit": "615245290a52a054c878e176a15e0660e6b88223", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1NDAyNg==", "url": "https://github.com/linkedin/ambry/pull/1565#discussion_r440554026", "bodyText": "same here", "author": "jsjtzyy", "createdAt": "2020-06-16T02:43:19Z", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -472,8 +474,8 @@ private void updateReplicaStateAndOverrideIfNeeded(AmbryReplica replica, Collect\n       DataNodeConfig.DiskConfig diskConfig = diskEntry.getValue();\n \n       // Create disk\n-      AmbryDisk disk =\n-          new AmbryDisk(clusterMapConfig, datanode, mountPath, diskConfig.getState(), diskConfig.getDiskCapacityInBytes());\n+      AmbryDisk disk = new AmbryDisk(clusterMapConfig, datanode, mountPath, diskConfig.getState(),\n+          diskConfig.getDiskCapacityInBytes());", "originalCommit": "615245290a52a054c878e176a15e0660e6b88223", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU1NDA5MA==", "url": "https://github.com/linkedin/ambry/pull/1565#discussion_r440554090", "bodyText": "same here, no production code change", "author": "jsjtzyy", "createdAt": "2020-06-16T02:43:33Z", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -485,9 +487,10 @@ private void updateReplicaStateAndOverrideIfNeeded(AmbryReplica replica, Collect\n             new AmbryPartition(Long.parseLong(partitionName), replicaConfig.getPartitionClass(),\n                 helixClusterManagerCallback);\n         // Ensure only one AmbryPartition instance exists for specific partition.\n-        mappedPartition =\n-            clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaConfig.getReplicaCapacityInBytes());\n-        ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, datanode, replicaConfig.getReplicaCapacityInBytes());\n+        mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition,\n+            replicaConfig.getReplicaCapacityInBytes());\n+        ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, datanode,\n+            replicaConfig.getReplicaCapacityInBytes());", "originalCommit": "615245290a52a054c878e176a15e0660e6b88223", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}