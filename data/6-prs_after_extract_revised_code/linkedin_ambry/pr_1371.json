{"pr_number": 1371, "pr_title": "Azure blob layout strategy", "pr_createdAt": "2020-01-28T20:41:41Z", "pr_url": "https://github.com/linkedin/ambry/pull/1371", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NDIyOQ==", "url": "https://github.com/linkedin/ambry/pull/1371#discussion_r374794229", "bodyText": "Technically, account IDs can be negative for \"unknown\" containers or \"system\" containers like the router account metadata store so I would recommend using an underscore as the separator.", "author": "cgtz", "createdAt": "2020-02-04T16:52:15Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobLayoutStrategy.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.cloud.azure;\n+\n+import com.github.ambry.cloud.CloudBlobMetadata;\n+import com.github.ambry.commons.BlobId;\n+import com.github.ambry.utils.Utils;\n+\n+\n+/**\n+ * Strategy class that decides where Ambry blobs and tokens are stored in the Azure storage.\n+ * The decision is governed by two {@link AzureCloudConfig} properties:\n+ * <ol>\n+ * <li>nameSchemeVersion: version of the translation scheme for blob names.</li>\n+ * <li>blobContainerStrategy: strategy for organizing Azure containers.</li>\n+ * </ol>\n+ */\n+public class AzureBlobLayoutStrategy {\n+\n+  private static final String SEPARATOR = \"-\";", "originalCommit": "c500d7bbd7dfd463ef9555b43d87ad46bcde6d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3NTEwMg==", "url": "https://github.com/linkedin/ambry/pull/1371#discussion_r374975102", "bodyText": "Changed.", "author": "lightningrob", "createdAt": "2020-02-04T23:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NDIyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8b178ff4c700f6fa3a83c04f0cf6884a5cf1d37d", "chunk": "diff --git a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobLayoutStrategy.java b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobLayoutStrategy.java\nindex 114e53a07..26816cbf2 100644\n--- a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobLayoutStrategy.java\n+++ b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureBlobLayoutStrategy.java\n\n@@ -17,128 +17,67 @@ import com.github.ambry.cloud.CloudBlobMetadata;\n import com.github.ambry.commons.BlobId;\n import com.github.ambry.utils.Utils;\n \n+// TODO: if blobs are organized by container, then need a different container for tokens\n+// Use separate dedicated token container, using replicaTokens//partitionPath/replicaTokens\n \n-/**\n- * Strategy class that decides where Ambry blobs and tokens are stored in the Azure storage.\n- * The decision is governed by two {@link AzureCloudConfig} properties:\n- * <ol>\n- * <li>nameSchemeVersion: version of the translation scheme for blob names.</li>\n- * <li>blobContainerStrategy: strategy for organizing Azure containers.</li>\n- * </ol>\n- */\n public class AzureBlobLayoutStrategy {\n \n   private static final String SEPARATOR = \"-\";\n-  // Note: Azure container name needs to be lower case\n   private static final String TOKEN_CONTAINER_NAME = \"replicatokens\";\n   private final String clusterName;\n   private int currentVersion;\n   private BlobContainerStrategy blobContainerStrategy;\n \n-  /**\n-   * Enum for deciding how Azure storage containers are organized.\n-   */\n   enum BlobContainerStrategy {\n-\n-    /** Each Azure container corresponds to an Ambry partitionId. */\n-    PARTITION,\n-\n-    /** Each Azure container corresponds to an Ambry accountId-containerId combination. */\n-    CONTAINER;\n-\n-    /**\n-     * @return {@link BlobContainerStrategy} using case-insensitive string match.\n-     * @param enumVal the enum string value.\n-     * @throws IllegalArgumentException for invalid enumVal.\n-     */\n-    static BlobContainerStrategy get(String enumVal) {\n-      return BlobContainerStrategy.valueOf(enumVal.toUpperCase());\n-    }\n+    PARTITION, CONTAINER\n   }\n \n-  /** A struct holding Azure container name and file path within the container. */\n   static class BlobLayout {\n-    final String containerName;\n-    final String blobFilePath;\n+    public String containerName;\n+    public String blobFilePath;\n \n-    /**\n-     * @param containerName Name of the Azure storage container.\n-     * @param blobFilePath Name of the file path for the blob within the container.\n-     */\n-    BlobLayout(String containerName, String blobFilePath) {\n+    public BlobLayout(String containerName, String blobFilePath) {\n       this.containerName = containerName;\n       this.blobFilePath = blobFilePath;\n     }\n   }\n \n-  /**\n-   * Constuctor for {@link AzureBlobLayoutStrategy}.\n-   * @param clusterName Name of the Ambry cluster.\n-   * @param azureCloudConfig The {@link AzureCloudConfig} to use.\n-   * @throws IllegalArgumentException if invalid config properties are present.\n-   */\n   public AzureBlobLayoutStrategy(String clusterName, AzureCloudConfig azureCloudConfig) {\n     this.clusterName = clusterName;\n-    currentVersion = azureCloudConfig.azureNameSchemeVersion;\n-    blobContainerStrategy = BlobContainerStrategy.get(azureCloudConfig.azureBlobContainerStrategy);\n+    currentVersion = 0;  // azureCloudConfig.nameSchemeVersion;\n+    blobContainerStrategy = BlobContainerStrategy.PARTITION; // azureCloudConfig.blobContainerStrategy\n   }\n \n-  /** Test constructor */\n-  public AzureBlobLayoutStrategy(String clusterName) {\n-    this.clusterName = clusterName;\n-    currentVersion = 0;\n-    blobContainerStrategy = BlobContainerStrategy.PARTITION;\n-  }\n   /**\n-   * @return the {@link BlobLayout} for the specified blob.\n-   * @param blobMetadata the {@link CloudBlobMetadata for the data blob.\n+   * @return the name of the Azure storage container to store the specified blob.\n+   * @param blobMetadata the blob metadata.\n    */\n   public BlobLayout getDataBlobLayout(CloudBlobMetadata blobMetadata) {\n-    return new BlobLayout(getAzureContainerName(blobMetadata), getAzureBlobName(blobMetadata));\n+    String baseContainerName =\n+        (blobContainerStrategy == BlobContainerStrategy.PARTITION) ? blobMetadata.getPartitionId()\n+            : blobMetadata.getAccountId() + SEPARATOR + blobMetadata.getContainerId();\n+    String blobName = getAzureBlobName(blobMetadata.getId(), blobMetadata.getNameSchemeVersion());\n+    return new BlobLayout(baseContainerName, blobName);\n   }\n \n   /**\n-   * @return the {@link BlobLayout} for the specified blob.\n+   * @return the name of the Azure storage container to store the specified blob.\n    * @param blobId the id of the blob.\n    */\n   public BlobLayout getDataBlobLayout(BlobId blobId) {\n     return getDataBlobLayout(toMetadata(blobId));\n   }\n \n-  /**\n-   * @return the {@link BlobLayout} for token files in the specified partition.\n-   * @param partitionPath the lexical partitionId name.\n-   * @param tokenFileName the name of the token file to store.\n-   */\n   public BlobLayout getTokenBlobLayout(String partitionPath, String tokenFileName) {\n     if (blobContainerStrategy == BlobContainerStrategy.PARTITION) {\n       return new BlobLayout(getClusterAwareAzureContainerName(partitionPath), tokenFileName);\n     } else {\n-      // Use separate dedicated token container, using replicaTokens//partitionPath/replicaTokens\n       return new BlobLayout(getClusterAwareAzureContainerName(TOKEN_CONTAINER_NAME),\n           partitionPath + \"/\" + tokenFileName);\n     }\n   }\n \n-  /**\n-   * Gets the Azure container name for the blob, depending on the configured strategy.\n-   * @param blobMetadata the {@link CloudBlobMetadata} to store.\n-   * @return the container name to use.\n-   */\n-  private String getAzureContainerName(CloudBlobMetadata blobMetadata) {\n-    String baseContainerName =\n-        (blobContainerStrategy == BlobContainerStrategy.PARTITION) ? blobMetadata.getPartitionId()\n-            : blobMetadata.getAccountId() + SEPARATOR + blobMetadata.getContainerId();\n-    return getClusterAwareAzureContainerName(baseContainerName);\n-  }\n-\n-  /**\n-   * @return the blob name to use in Azure storage.\n-   * @param blobMetadata the {@link CloudBlobMetadata} to store.\n-   */\n-  private String getAzureBlobName(CloudBlobMetadata blobMetadata) {\n-    String blobIdStr = blobMetadata.getId();\n-    int nameVersion = blobMetadata.getNameSchemeVersion();\n+  private String getAzureBlobName(String blobIdStr, int nameVersion) {\n     switch (nameVersion) {\n       default:\n         // Use the last four chars as prefix to assist in Azure sharding, since beginning of blobId has little variation.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5Njg3Mg==", "url": "https://github.com/linkedin/ambry/pull/1371#discussion_r374796872", "bodyText": "looks like the capitalization here differs from DEFAULT_CONTAINER_STRATEGY", "author": "cgtz", "createdAt": "2020-02-04T16:56:40Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureCloudConfig.java", "diffHunk": "@@ -62,7 +67,13 @@\n   @Default(\"5\")\n   public final int cosmosMaxRetries;\n \n-  // TODO: Add blobNamingSchemeVersion, containerNamingScheme\n+  @Config(AZURE_NAME_SCHEME_VERSION)\n+  @Default(\"0\")\n+  public final int azureNameSchemeVersion;\n+\n+  @Config(AZURE_BLOB_CONTAINER_STRATEGY)\n+  @Default(\"partition\")", "originalCommit": "c500d7bbd7dfd463ef9555b43d87ad46bcde6d21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8b178ff4c700f6fa3a83c04f0cf6884a5cf1d37d", "chunk": "diff --git a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureCloudConfig.java b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureCloudConfig.java\nindex bd133ce54..c812c6026 100644\n--- a/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureCloudConfig.java\n+++ b/ambry-cloud/src/main/java/com.github.ambry.cloud/azure/AzureCloudConfig.java\n\n@@ -67,13 +66,10 @@ public class AzureCloudConfig {\n   @Default(\"5\")\n   public final int cosmosMaxRetries;\n \n-  @Config(AZURE_NAME_SCHEME_VERSION)\n-  @Default(\"0\")\n-  public final int azureNameSchemeVersion;\n-\n-  @Config(AZURE_BLOB_CONTAINER_STRATEGY)\n-  @Default(\"partition\")\n-  public final String azureBlobContainerStrategy;\n+  @Config(AZURE_PURGE_BATCH_SIZE)\n+  @Default(\"100\")\n+  public final int azurePurgeBatchSize;\n+  // TODO: Add blobNamingSchemeVersion, containerNamingScheme\n \n   /**\n    * Flag indicating whether to use DirectHttps CosmosDB connection mode.\n"}}, {"oid": "8b178ff4c700f6fa3a83c04f0cf6884a5cf1d37d", "url": "https://github.com/linkedin/ambry/commit/8b178ff4c700f6fa3a83c04f0cf6884a5cf1d37d", "message": "Added configurable AzureBlobLayoutStrategy.", "committedDate": "2020-02-05T00:04:53Z", "type": "commit"}, {"oid": "3f90e47b7f671ab36f45c17d82d1171f9f4e654e", "url": "https://github.com/linkedin/ambry/commit/3f90e47b7f671ab36f45c17d82d1171f9f4e654e", "message": "Added test for layout strategy and minor refactoring.", "committedDate": "2020-02-05T00:07:45Z", "type": "commit"}, {"oid": "e42da5996c2c4c9ee3befea279676ad2b4c5e2b8", "url": "https://github.com/linkedin/ambry/commit/e42da5996c2c4c9ee3befea279676ad2b4c5e2b8", "message": "Fix NPE in test", "committedDate": "2020-02-05T00:07:45Z", "type": "commit"}, {"oid": "418b4669ce8a1a30b082631606d222e3a4c7e0cf", "url": "https://github.com/linkedin/ambry/commit/418b4669ce8a1a30b082631606d222e3a4c7e0cf", "message": "Change container name separator to underscore per Casey's comment.", "committedDate": "2020-02-05T00:07:45Z", "type": "commit"}, {"oid": "418b4669ce8a1a30b082631606d222e3a4c7e0cf", "url": "https://github.com/linkedin/ambry/commit/418b4669ce8a1a30b082631606d222e3a4c7e0cf", "message": "Change container name separator to underscore per Casey's comment.", "committedDate": "2020-02-05T00:07:45Z", "type": "forcePushed"}, {"oid": "bff7215d10f25d48cf6b259a8f739c44494aef8f", "url": "https://github.com/linkedin/ambry/commit/bff7215d10f25d48cf6b259a8f739c44494aef8f", "message": "Fix rebase merge issues.", "committedDate": "2020-02-05T03:41:01Z", "type": "commit"}]}