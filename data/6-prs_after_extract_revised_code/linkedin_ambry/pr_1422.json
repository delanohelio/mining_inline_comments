{"pr_number": 1422, "pr_title": "Bump the message header version from 2 to 3", "pr_createdAt": "2020-03-10T02:56:57Z", "pr_url": "https://github.com/linkedin/ambry/pull/1422", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NzU2MQ==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391267561", "bodyText": "Just want to make sure one thing. For V2 and V2, info.getLifeVersion() returns -1, right?", "author": "zzmao", "createdAt": "2020-03-11T21:05:37Z", "path": "ambry-replication/src/test/java/com.github.ambry.replication/InMemoryStore.java", "diffHunk": "@@ -264,7 +264,7 @@ public void updateTtl(List<MessageInfo> infos) throws StoreException {\n         }\n         MessageFormatInputStream stream =\n             new TtlUpdateMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n-                info.getExpirationTimeInMs(), info.getOperationTimeMs());\n+                info.getExpirationTimeInMs(), info.getOperationTimeMs(), info.getLifeVersion());", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3NzE5OQ==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391277199", "bodyText": "it returns 0 here. 0 should be the lifeVersion to be persisted in the log.", "author": "justinlin-linkedin", "createdAt": "2020-03-11T21:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NzU2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "chunk": "diff --git a/ambry-replication/src/test/java/com.github.ambry.replication/InMemoryStore.java b/ambry-replication/src/test/java/com.github.ambry.replication/InMemoryStore.java\nindex 4b467c96c..a9021b7bb 100644\n--- a/ambry-replication/src/test/java/com.github.ambry.replication/InMemoryStore.java\n+++ b/ambry-replication/src/test/java/com.github.ambry.replication/InMemoryStore.java\n\n@@ -264,7 +264,7 @@ class InMemoryStore implements Store {\n         }\n         MessageFormatInputStream stream =\n             new TtlUpdateMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n-                info.getExpirationTimeInMs(), info.getOperationTimeMs(), info.getLifeVersion());\n+                info.getExpirationTimeInMs(), info.getOperationTimeMs());\n         infosToUpdate.add(\n             new MessageInfo(info.getStoreKey(), stream.getSize(), false, true, info.getExpirationTimeInMs(),\n                 info.getAccountId(), info.getContainerId(), info.getOperationTimeMs()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5NzIyMw==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391397223", "bodyText": "can be removed", "author": "jsjtzyy", "createdAt": "2020-03-12T04:36:54Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java", "diffHunk": "@@ -13,6 +13,7 @@\n  */\n package com.github.ambry.messageformat;\n \n+import com.github.ambry.store.Message;", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0625ea2e2648b2578725aeb48cbf8324d63033d0", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\nindex b3d49b6f9..63f61b578 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\n\n@@ -13,7 +13,6 @@\n  */\n package com.github.ambry.messageformat;\n \n-import com.github.ambry.store.Message;\n import com.github.ambry.store.StoreKey;\n import com.github.ambry.utils.Crc32;\n import com.github.ambry.utils.CrcInputStream;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5Nzk3Mw==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391397973", "bodyText": "you can change this to:\nthis(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize, BlobType.DataBlob, (short) 0);\n\navoiding an extra method call.", "author": "jsjtzyy", "createdAt": "2020-03-12T04:41:02Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java", "diffHunk": "@@ -43,27 +44,33 @@\n   public PutMessageFormatInputStream(StoreKey key, ByteBuffer blobEncryptionKey, BlobProperties blobProperties,\n       ByteBuffer userMetadata, InputStream blobStream, long streamSize, BlobType blobType)\n       throws MessageFormatException {\n-    if (MessageFormatRecord.headerVersionToUse == MessageFormatRecord.Message_Header_Version_V2) {\n-      createStreamWithMessageHeaderV2(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize,\n-          blobType);\n-    } else {\n-      createStreamWithMessageHeaderV1(key, blobProperties, userMetadata, blobStream, streamSize, blobType);\n-    }\n+    this(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize, blobType, (short) 0);\n   }\n \n   public PutMessageFormatInputStream(StoreKey key, ByteBuffer blobEncryptionKey, BlobProperties blobProperties,\n       ByteBuffer userMetadata, InputStream blobStream, long streamSize) throws MessageFormatException {\n     this(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize, BlobType.DataBlob);", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0625ea2e2648b2578725aeb48cbf8324d63033d0", "chunk": "diff --git a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\nindex b3d49b6f9..63f61b578 100644\n--- a/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\n+++ b/ambry-messageformat/src/main/java/com.github.ambry.messageformat/PutMessageFormatInputStream.java\n\n@@ -49,7 +48,7 @@ public class PutMessageFormatInputStream extends MessageFormatInputStream {\n \n   public PutMessageFormatInputStream(StoreKey key, ByteBuffer blobEncryptionKey, BlobProperties blobProperties,\n       ByteBuffer userMetadata, InputStream blobStream, long streamSize) throws MessageFormatException {\n-    this(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize, BlobType.DataBlob);\n+    this(key, blobEncryptionKey, blobProperties, userMetadata, blobStream, streamSize, BlobType.DataBlob, (short) 0);\n   }\n \n   public PutMessageFormatInputStream(StoreKey key, ByteBuffer blobEncryptionKey, BlobProperties blobProperties,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNTI3Ng==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391405276", "bodyText": "nit: could you change ind to index?", "author": "jsjtzyy", "createdAt": "2020-03-12T05:15:03Z", "path": "ambry-store/src/main/java/com.github.ambry.store/BlobStore.java", "diffHunk": "@@ -507,14 +507,9 @@ public void delete(List<MessageInfo> infosToDelete) throws StoreException {\n         List<MessageInfo> updatedInfos = new ArrayList<>(infosToDelete.size());\n         int ind = 0;", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzODQwNA==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391838404", "bodyText": "we already have a member variable named \"index\", it's persistentIndex in the blobstore. I guess I can just name this variable to \"i\" if you desire.", "author": "justinlin-linkedin", "createdAt": "2020-03-12T19:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk0MDg5Mw==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391940893", "bodyText": "yeah, \"i\" makes less ambiguity.", "author": "jsjtzyy", "createdAt": "2020-03-12T22:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNTI3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "chunk": "diff --git a/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java b/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\nindex b5555c608..af9e8a4a0 100644\n--- a/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\n+++ b/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\n\n@@ -507,9 +507,14 @@ public class BlobStore implements Store {\n         List<MessageInfo> updatedInfos = new ArrayList<>(infosToDelete.size());\n         int ind = 0;\n         for (MessageInfo info : infosToDelete) {\n-          MessageFormatInputStream stream =\n-              new DeleteMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n-                  info.getOperationTimeMs(), lifeVersions.get(ind));\n+          MessageFormatInputStream stream = null;\n+          if (MessageFormatRecord.getCurrentMessageHeaderVersion() == MessageFormatRecord.Message_Header_Version_V3) {\n+            stream = new DeleteMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n+                info.getOperationTimeMs(), lifeVersions.get(ind));\n+          } else {\n+            stream = new DeleteMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n+                info.getOperationTimeMs());\n+          }\n           updatedInfos.add(\n               new MessageInfo(info.getStoreKey(), stream.getSize(), info.getAccountId(), info.getContainerId(),\n                   info.getOperationTimeMs()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjIzOA==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391406238", "bodyText": "same here", "author": "jsjtzyy", "createdAt": "2020-03-12T05:19:30Z", "path": "ambry-store/src/main/java/com.github.ambry.store/BlobStore.java", "diffHunk": "@@ -619,16 +614,9 @@ public void updateTtl(List<MessageInfo> infosToUpdate) throws StoreException {\n         List<MessageInfo> updatedInfos = new ArrayList<>(infosToUpdate.size());\n         int ind = 0;", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzODQ3MQ==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391838471", "bodyText": "above.", "author": "justinlin-linkedin", "createdAt": "2020-03-12T19:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "chunk": "diff --git a/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java b/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\nindex b5555c608..af9e8a4a0 100644\n--- a/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\n+++ b/ambry-store/src/main/java/com.github.ambry.store/BlobStore.java\n\n@@ -614,9 +619,16 @@ public class BlobStore implements Store {\n         List<MessageInfo> updatedInfos = new ArrayList<>(infosToUpdate.size());\n         int ind = 0;\n         for (MessageInfo info : infosToUpdate) {\n-          MessageFormatInputStream stream =\n-              new TtlUpdateMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n-                  info.getExpirationTimeInMs(), info.getOperationTimeMs(), lifeVersions.get(ind));\n+          MessageFormatInputStream stream = null;\n+          if (MessageFormatRecord.getCurrentMessageHeaderVersion() == MessageFormatRecord.Message_Header_Version_V3) {\n+            stream =\n+                new TtlUpdateMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n+                    info.getExpirationTimeInMs(), info.getOperationTimeMs(), lifeVersions.get(ind));\n+          } else {\n+            stream =\n+                new TtlUpdateMessageFormatInputStream(info.getStoreKey(), info.getAccountId(), info.getContainerId(),\n+                    info.getExpirationTimeInMs(), info.getOperationTimeMs());\n+          }\n           updatedInfos.add(\n               new MessageInfo(info.getStoreKey(), stream.getSize(), info.getAccountId(), info.getContainerId(),\n                   info.getOperationTimeMs()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjYyMg==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391406622", "bodyText": "Could you explain \"- 2\" here?", "author": "jsjtzyy", "createdAt": "2020-03-12T05:21:12Z", "path": "ambry-tools/src/main/java/com.github.ambry/store/DumpDataHelper.java", "diffHunk": "@@ -92,6 +92,20 @@ static LogBlobRecordInfo readSingleRecordFromLog(RandomAccessFile randomAccessFi\n                 + header.getUserMetadataRecordRelativeOffset() + \" dataRelativeOffset \"\n                 + header.getBlobRecordRelativeOffset() + \" crc \" + header.getCrc();\n         totalRecordSize += header.getMessageSize() + buffer.capacity();\n+      } else if (version == MessageFormatRecord.Message_Header_Version_V3) {\n+        ByteBuffer buffer = ByteBuffer.allocate(MessageFormatRecord.MessageHeader_Format_V3.getHeaderSize());\n+        buffer.putShort(version);\n+        randomAccessFile.read(buffer.array(), 2, buffer.capacity() - 2);", "originalCommit": "74ae36479409fb4b780fda0e92afe28e48d6852d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzOTAwOQ==", "url": "https://github.com/linkedin/ambry/pull/1422#discussion_r391839009", "bodyText": "2 is the number of bytes to store header version (it's a short). I copy this code from case above.", "author": "justinlin-linkedin", "createdAt": "2020-03-12T19:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "chunk": "diff --git a/ambry-tools/src/main/java/com.github.ambry/store/DumpDataHelper.java b/ambry-tools/src/main/java/com.github.ambry/store/DumpDataHelper.java\nindex cd3942922..b0e23e076 100644\n--- a/ambry-tools/src/main/java/com.github.ambry/store/DumpDataHelper.java\n+++ b/ambry-tools/src/main/java/com.github.ambry/store/DumpDataHelper.java\n\n@@ -92,20 +92,6 @@ class DumpDataHelper {\n                 + header.getUserMetadataRecordRelativeOffset() + \" dataRelativeOffset \"\n                 + header.getBlobRecordRelativeOffset() + \" crc \" + header.getCrc();\n         totalRecordSize += header.getMessageSize() + buffer.capacity();\n-      } else if (version == MessageFormatRecord.Message_Header_Version_V3) {\n-        ByteBuffer buffer = ByteBuffer.allocate(MessageFormatRecord.MessageHeader_Format_V3.getHeaderSize());\n-        buffer.putShort(version);\n-        randomAccessFile.read(buffer.array(), 2, buffer.capacity() - 2);\n-        buffer.clear();\n-        header = new MessageFormatRecord.MessageHeader_Format_V3(buffer);\n-        messageheader =\n-            \" Header - version \" + header.getVersion() + \" messagesize \" + header.getMessageSize() + \" currentOffset \"\n-                + currentOffset + \" blobEncryptionKeyRelativeOffset \"\n-                + header.getBlobEncryptionKeyRecordRelativeOffset() + \" blobPropertiesRelativeOffset \"\n-                + header.getBlobPropertiesRecordRelativeOffset() + \" userMetadataRelativeOffset \"\n-                + header.getUserMetadataRecordRelativeOffset() + \" dataRelativeOffset \"\n-                + header.getBlobRecordRelativeOffset() + \" crc \" + header.getCrc();\n-        totalRecordSize += header.getMessageSize() + buffer.capacity();\n       } else {\n         throw new MessageFormatException(\"Header version not supported \" + version, MessageFormatErrorCodes.IO_Error);\n       }\n"}}, {"oid": "06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "url": "https://github.com/linkedin/ambry/commit/06bd3d301d0e80c5cef832bbd2a7a04a9e1ef71b", "message": "Bump the message header version from 2 to 3", "committedDate": "2020-03-12T19:12:53Z", "type": "commit"}, {"oid": "cf4b5801de23018e302f5848a54dd0fe0b00a595", "url": "https://github.com/linkedin/ambry/commit/cf4b5801de23018e302f5848a54dd0fe0b00a595", "message": "Add more tests", "committedDate": "2020-03-12T19:12:53Z", "type": "commit"}, {"oid": "0625ea2e2648b2578725aeb48cbf8324d63033d0", "url": "https://github.com/linkedin/ambry/commit/0625ea2e2648b2578725aeb48cbf8324d63033d0", "message": "Add even more tests for version compatibility", "committedDate": "2020-03-12T22:04:32Z", "type": "commit"}, {"oid": "0625ea2e2648b2578725aeb48cbf8324d63033d0", "url": "https://github.com/linkedin/ambry/commit/0625ea2e2648b2578725aeb48cbf8324d63033d0", "message": "Add even more tests for version compatibility", "committedDate": "2020-03-12T22:04:32Z", "type": "forcePushed"}, {"oid": "4f7070d13f66ded3d0102dc59726957d55d88c96", "url": "https://github.com/linkedin/ambry/commit/4f7070d13f66ded3d0102dc59726957d55d88c96", "message": "Fix", "committedDate": "2020-03-12T23:39:08Z", "type": "commit"}, {"oid": "5d18d52850c26daffe2d0e701b1e4ca3854d4ed7", "url": "https://github.com/linkedin/ambry/commit/5d18d52850c26daffe2d0e701b1e4ca3854d4ed7", "message": "Address comments", "committedDate": "2020-03-13T18:42:15Z", "type": "commit"}]}