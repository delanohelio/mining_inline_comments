{"pr_number": 1372, "pr_title": "Add additional log to track unsatisfied requests", "pr_createdAt": "2020-02-04T20:15:49Z", "pr_url": "https://github.com/linkedin/ambry/pull/1372", "timeline": [{"oid": "f3a26286a7117a62c71f7cd04cc5333d7ee500e1", "url": "https://github.com/linkedin/ambry/commit/f3a26286a7117a62c71f7cd04cc5333d7ee500e1", "message": "Add additional log to track unsatisfied requests\n\nPrint out more info of unsatisfied requests for investigation.", "committedDate": "2020-02-04T20:12:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE3Mjk0MQ==", "url": "https://github.com/linkedin/ambry/pull/1372#discussion_r376172941", "bodyText": "\"; method=\" and say uri=request.getUri() to match the other key value pairs", "author": "cgtz", "createdAt": "2020-02-07T01:28:59Z", "path": "ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java", "diffHunk": "@@ -369,10 +369,37 @@ private void evaluatePerformanceAndUpdateMetrics() {\n         .checkThresholds(requestPerfToCheck))) {\n       // this means either response is 5xx or request missed one of thresholds, the request should be unsatisfied\n       restRequestMetricsTracker.markUnsatisfied();\n+      logUnsatisfiedRequest(requestPerfToCheck);\n     }\n     restRequestMetricsTracker.recordMetrics();\n   }\n \n+  /**\n+   * Log unsatisfied request (print out request/response info and performance indices)\n+   * @param requestPerfToCheck the performance indices associated with this request.\n+   */\n+  private void logUnsatisfiedRequest(Map<PerformanceIndex, Long> requestPerfToCheck) {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"  method=\").append(request.getRestMethod());", "originalCommit": "f3a26286a7117a62c71f7cd04cc5333d7ee500e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbbee904161c9e2dd1d25f1703d082c417794408", "chunk": "diff --git a/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java b/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\nindex 36535a405..b631b4b88 100644\n--- a/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\n+++ b/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\n\n@@ -380,7 +380,7 @@ class NettyResponseChannel implements RestResponseChannel {\n    */\n   private void logUnsatisfiedRequest(Map<PerformanceIndex, Long> requestPerfToCheck) {\n     StringBuilder sb = new StringBuilder();\n-    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"  method=\").append(request.getRestMethod());\n+    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"; method=\").append(request.getRestMethod());\n     if (request.getRestMethod() == RestMethod.POST) {\n       sb.append(\"; location=\").append((String) getHeader(RestUtils.Headers.LOCATION));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE3NDQ4MA==", "url": "https://github.com/linkedin/ambry/pull/1372#discussion_r376174480", "bodyText": "change \": \" to \"=\" to match other key value pairs", "author": "cgtz", "createdAt": "2020-02-07T01:35:35Z", "path": "ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java", "diffHunk": "@@ -369,10 +369,37 @@ private void evaluatePerformanceAndUpdateMetrics() {\n         .checkThresholds(requestPerfToCheck))) {\n       // this means either response is 5xx or request missed one of thresholds, the request should be unsatisfied\n       restRequestMetricsTracker.markUnsatisfied();\n+      logUnsatisfiedRequest(requestPerfToCheck);\n     }\n     restRequestMetricsTracker.recordMetrics();\n   }\n \n+  /**\n+   * Log unsatisfied request (print out request/response info and performance indices)\n+   * @param requestPerfToCheck the performance indices associated with this request.\n+   */\n+  private void logUnsatisfiedRequest(Map<PerformanceIndex, Long> requestPerfToCheck) {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"  method=\").append(request.getRestMethod());\n+    if (request.getRestMethod() == RestMethod.POST) {\n+      sb.append(\"; location=\").append((String) getHeader(RestUtils.Headers.LOCATION));\n+    }\n+    sb.append(\"; status=\").append(responseStatus.getStatusCode());\n+    Object blobSize = getHeader(RestUtils.Headers.BLOB_SIZE);\n+    if (blobSize != null) {\n+      sb.append(\"; blob size=\").append((String) blobSize);\n+    }\n+    for (Map.Entry<PerformanceIndex, Long> entry : requestPerfToCheck.entrySet()) {\n+      sb.append(\"; \").append(entry.getKey().toString()).append(\": \").append(entry.getValue());", "originalCommit": "f3a26286a7117a62c71f7cd04cc5333d7ee500e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbbee904161c9e2dd1d25f1703d082c417794408", "chunk": "diff --git a/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java b/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\nindex 36535a405..b631b4b88 100644\n--- a/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\n+++ b/ambry-rest/src/main/java/com.github.ambry.rest/NettyResponseChannel.java\n\n@@ -380,7 +380,7 @@ class NettyResponseChannel implements RestResponseChannel {\n    */\n   private void logUnsatisfiedRequest(Map<PerformanceIndex, Long> requestPerfToCheck) {\n     StringBuilder sb = new StringBuilder();\n-    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"  method=\").append(request.getRestMethod());\n+    sb.append(\"Unsatisfied request: \").append(request.getUri()).append(\"; method=\").append(request.getRestMethod());\n     if (request.getRestMethod() == RestMethod.POST) {\n       sb.append(\"; location=\").append((String) getHeader(RestUtils.Headers.LOCATION));\n     }\n"}}, {"oid": "dbbee904161c9e2dd1d25f1703d082c417794408", "url": "https://github.com/linkedin/ambry/commit/dbbee904161c9e2dd1d25f1703d082c417794408", "message": "comments", "committedDate": "2020-02-07T06:41:50Z", "type": "commit"}, {"oid": "17d46debebf202a36df876f17c149419f26814b7", "url": "https://github.com/linkedin/ambry/commit/17d46debebf202a36df876f17c149419f26814b7", "message": "minor", "committedDate": "2020-02-07T16:25:14Z", "type": "commit"}]}