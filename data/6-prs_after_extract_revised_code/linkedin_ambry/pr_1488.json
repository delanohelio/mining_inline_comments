{"pr_number": 1488, "pr_title": "Updating replica status(sealed/stopped) in multiple clusters", "pr_createdAt": "2020-04-27T16:36:30Z", "pr_url": "https://github.com/linkedin/ambry/pull/1488", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5NjMzMg==", "url": "https://github.com/linkedin/ambry/pull/1488#discussion_r417696332", "bodyText": "minor: delegates (plural)", "author": "lightningrob", "createdAt": "2020-04-30T00:55:12Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "diffHunk": "@@ -117,17 +117,17 @@\n    * @param factory the {@link StoreKeyFactory} for parsing store keys.\n    * @param recovery the {@link MessageStoreRecovery} instance to use.\n    * @param hardDelete the {@link MessageStoreHardDelete} instance to use.\n-   * @param replicaStatusDelegate delegate used to communicate BlobStore write status (sealed/unsealed, stopped/started)\n+   * @param replicaStatusDelegates delegate used to communicate BlobStore write status(sealed/unsealed, stopped/started)", "originalCommit": "a45c344b87357206fd33df6969a9084912d9c180", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7d7ba704afcc5e915267888fb6fc005f5ba79b0", "chunk": "diff --git a/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java b/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\nindex 42a80b6a4..6313580c0 100644\n--- a/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\n+++ b/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\n\n@@ -117,17 +119,18 @@ public class BlobStore implements Store {\n    * @param factory the {@link StoreKeyFactory} for parsing store keys.\n    * @param recovery the {@link MessageStoreRecovery} instance to use.\n    * @param hardDelete the {@link MessageStoreHardDelete} instance to use.\n-   * @param replicaStatusDelegates delegate used to communicate BlobStore write status(sealed/unsealed, stopped/started)\n+   * @param replicaStatusDelegates delegates used to communicate BlobStore write status(sealed/unsealed, stopped/started)\n    * @param time the {@link Time} instance to use.\n+   * @param accountService  the {@link AccountService} instance to use.\n    */\n   BlobStore(ReplicaId replicaId, StoreConfig config, ScheduledExecutorService taskScheduler,\n       ScheduledExecutorService longLivedTaskScheduler, DiskIOScheduler diskIOScheduler,\n       DiskSpaceAllocator diskSpaceAllocator, StoreMetrics metrics, StoreMetrics storeUnderCompactionMetrics,\n       StoreKeyFactory factory, MessageStoreRecovery recovery, MessageStoreHardDelete hardDelete,\n-      List<ReplicaStatusDelegate> replicaStatusDelegates, Time time) {\n+      List<ReplicaStatusDelegate> replicaStatusDelegates, Time time, AccountService accountService) {\n     this(replicaId, replicaId.getPartitionId().toString(), config, taskScheduler, longLivedTaskScheduler,\n         diskIOScheduler, diskSpaceAllocator, metrics, storeUnderCompactionMetrics, replicaId.getReplicaPath(),\n-        replicaId.getCapacityInBytes(), factory, recovery, hardDelete, replicaStatusDelegates, time);\n+        replicaId.getCapacityInBytes(), factory, recovery, hardDelete, replicaStatusDelegates, time, accountService);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5ODg1MQ==", "url": "https://github.com/linkedin/ambry/pull/1488#discussion_r417698851", "bodyText": "Add javadoc explaining what the return vals are and that they can be null.", "author": "lightningrob", "createdAt": "2020-04-30T01:04:07Z", "path": "ambry-store/src/test/java/com/github/ambry/store/StorageManagerTest.java", "diffHunk": "@@ -1236,15 +1274,23 @@ private void generateConfigs(boolean segmentedLog, boolean updateInstanceConfig)\n   /**\n    * An extension of {@link HelixParticipant} to help with tests.\n    */\n-  private class MockClusterParticipant extends HelixParticipant {\n+  class MockClusterParticipant extends HelixParticipant {\n     Boolean updateNodeInfoReturnVal = null;\n     Set<ReplicaId> sealedReplicas = new HashSet<>();\n     Set<ReplicaId> stoppedReplicas = new HashSet<>();\n+    private Boolean setSealStateReturnVal;\n+    private Boolean setStopStateReturnVal;\n \n     MockClusterParticipant() throws IOException {\n+      this(null, null);\n+    }\n+\n+    MockClusterParticipant(Boolean setSealStateReturnVal, Boolean setStopStateReturnVal) {", "originalCommit": "a45c344b87357206fd33df6969a9084912d9c180", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7d7ba704afcc5e915267888fb6fc005f5ba79b0", "chunk": "diff --git a/ambry-store/src/test/java/com/github/ambry/store/StorageManagerTest.java b/ambry-store/src/test/java/com/github/ambry/store/StorageManagerTest.java\nindex 8ede0b264..e504b4521 100644\n--- a/ambry-store/src/test/java/com/github/ambry/store/StorageManagerTest.java\n+++ b/ambry-store/src/test/java/com/github/ambry/store/StorageManagerTest.java\n\n@@ -1285,6 +1285,13 @@ public class StorageManagerTest {\n       this(null, null);\n     }\n \n+    /**\n+     * Ctor for MockClusterParticipant with arguments to override return value of some methods.\n+     * @param setSealStateReturnVal if not null, use this value to override result of setReplicaSealedState(). If null,\n+     *                              go through standard workflow in the method.\n+     * @param setStopStateReturnVal if not null, use this value to override result of setReplicaStoppedState(). If null,\n+     *                              go through standard workflow in the method.\n+     */\n     MockClusterParticipant(Boolean setSealStateReturnVal, Boolean setStopStateReturnVal) {\n       super(clusterMapConfig, new MockHelixManagerFactory(), new MetricRegistry(),\n           parseDcJsonAndPopulateDcInfo(clusterMapConfig.clusterMapDcsZkConnectStrings).get(\n"}}, {"oid": "f7d7ba704afcc5e915267888fb6fc005f5ba79b0", "url": "https://github.com/linkedin/ambry/commit/f7d7ba704afcc5e915267888fb6fc005f5ba79b0", "message": "rebase master and minor changes", "committedDate": "2020-05-05T21:24:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTExMTUxMw==", "url": "https://github.com/linkedin/ambry/pull/1488#discussion_r421111513", "bodyText": "javadoc needs to be changed here.", "author": "ankagrawal", "createdAt": "2020-05-06T21:46:06Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "diffHunk": "@@ -941,8 +945,8 @@ public long getEndPositionOfLastPut() throws StoreException {\n   /**\n    * @return {@link ReplicaStatusDelegate} associated with this store\n    */\n-  public ReplicaStatusDelegate getReplicaStatusDelegate() {", "originalCommit": "95949e8838c0be87fd01e576303e5b4bec0b185e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f501a207a3048dad1b274224e9c390d8ba761924", "chunk": "diff --git a/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java b/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\nindex 6313580c0..3295c99c2 100644\n--- a/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\n+++ b/ambry-store/src/main/java/com/github/ambry/store/BlobStore.java\n\n@@ -943,7 +943,7 @@ public class BlobStore implements Store {\n   }\n \n   /**\n-   * @return {@link ReplicaStatusDelegate} associated with this store\n+   * @return a {@link ReplicaStatusDelegate}(s) associated with this store\n    */\n   public List<ReplicaStatusDelegate> getReplicaStatusDelegates() {\n     return replicaStatusDelegates;\n"}}, {"oid": "822dd8a870052e208d923728e1b23fbbb09ebf87", "url": "https://github.com/linkedin/ambry/commit/822dd8a870052e208d923728e1b23fbbb09ebf87", "message": "Updating replica status(sealed/stopped) in multiple clusters\n\nAs an effort for migrating Ambry from one ZK cluster to another, storage manager\nshould update replica status in both clusters to make sure they are consistent.\nThis PR allows storage manager to take in a list of participants and generate\ncorresponding replica status delegates. BlobStore will update sealing/unsealing\nstate via these delegates.", "committedDate": "2020-05-06T21:57:12Z", "type": "commit"}, {"oid": "f501a207a3048dad1b274224e9c390d8ba761924", "url": "https://github.com/linkedin/ambry/commit/f501a207a3048dad1b274224e9c390d8ba761924", "message": "comment", "committedDate": "2020-05-06T21:58:33Z", "type": "commit"}, {"oid": "f501a207a3048dad1b274224e9c390d8ba761924", "url": "https://github.com/linkedin/ambry/commit/f501a207a3048dad1b274224e9c390d8ba761924", "message": "comment", "committedDate": "2020-05-06T21:58:33Z", "type": "forcePushed"}, {"oid": "54cd7763beee4832fbb84819ecec2890e9962928", "url": "https://github.com/linkedin/ambry/commit/54cd7763beee4832fbb84819ecec2890e9962928", "message": "fixed test failure", "committedDate": "2020-05-06T22:25:44Z", "type": "commit"}]}