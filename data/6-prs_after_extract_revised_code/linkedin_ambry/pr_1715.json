{"pr_number": 1715, "pr_title": "[ContentEncoding] Add two fields in blob property", "pr_createdAt": "2020-12-04T05:20:52Z", "pr_url": "https://github.com/linkedin/ambry/pull/1715", "timeline": [{"oid": "f049363c9531a24e3de3c95f182dcf426a64447c", "url": "https://github.com/linkedin/ambry/commit/f049363c9531a24e3de3c95f182dcf426a64447c", "message": "[ContentEncoding] Add two fields in blob property", "committedDate": "2020-12-04T04:43:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNzQ2Nw==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536217467", "bodyText": "I think this null handling case is not actually required, although I see that this pattern was used before in this method.\nsb.append(\"ContentEncoding=\").append(null) will work and return \"ContentEncoding=null\"", "author": "cgtz", "createdAt": "2020-12-04T16:21:52Z", "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java", "diffHunk": "@@ -209,6 +227,16 @@ public String toString() {\n     sb.append(\", \").append(\"ContainerId=\").append(getContainerId());\n     sb.append(\", \").append(\"IsEncrypted=\").append(isEncrypted());\n     sb.append(\", \").append(\"externalAssetTag=\").append(getExternalAssetTag());\n+    if (getContentEncoding() != null) {\n+      sb.append(\", \").append(\"ContentEncoding=\").append(getContentEncoding());\n+    } else {\n+      sb.append(\", \").append(\"ContentEncoding=Null\");", "originalCommit": "f049363c9531a24e3de3c95f182dcf426a64447c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTY3MQ==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421671", "bodyText": "Removed all the redundant part.", "author": "SophieGuo410", "createdAt": "2020-12-04T22:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNzQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "13b3fc614a3b060d9cc4086e8b807d883dc97f1e", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java b/ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java\nindex ed5ba1d8e..0a026868e 100644\n--- a/ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java\n+++ b/ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java\n\n@@ -227,16 +215,8 @@ public class BlobProperties {\n     sb.append(\", \").append(\"ContainerId=\").append(getContainerId());\n     sb.append(\", \").append(\"IsEncrypted=\").append(isEncrypted());\n     sb.append(\", \").append(\"externalAssetTag=\").append(getExternalAssetTag());\n-    if (getContentEncoding() != null) {\n-      sb.append(\", \").append(\"ContentEncoding=\").append(getContentEncoding());\n-    } else {\n-      sb.append(\", \").append(\"ContentEncoding=Null\");\n-    }\n-    if (getFilename() != null) {\n-      sb.append(\", \").append(\"Filename=\").append(getFilename());\n-    } else {\n-      sb.append(\", \").append(\"Filename=Null\");\n-    }\n+    sb.append(\", \").append(\"ContentEncoding=\").append(getContentEncoding());\n+    sb.append(\", \").append(\"Filename=\").append(getFilename());\n     sb.append(\"]\");\n     return sb.toString();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTU5Mw==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536219593", "bodyText": "For a get blob response, this should be set as the HTTP standard Content-Encoding header instead of x-ambry-content-encoding", "author": "cgtz", "createdAt": "2020-12-04T16:24:58Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());", "originalCommit": "f049363c9531a24e3de3c95f182dcf426a64447c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTgwMA==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421800", "bodyText": "Sure. Thanks for catching that, fixed it.", "author": "SophieGuo410", "createdAt": "2020-12-04T22:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTU5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "13b3fc614a3b060d9cc4086e8b807d883dc97f1e", "chunk": "diff --git a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\nindex 768f9be0e..b02f9066f 100644\n--- a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n+++ b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n\n@@ -321,10 +318,7 @@ class AmbrySecurityService implements SecurityService {\n       }\n     }\n     if (blobProperties.getContentEncoding() != null) {\n-      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());\n-    }\n-    if (blobProperties.getFilename() != null) {\n-      restResponseChannel.setHeader(Headers.AMBRY_FILENAME, blobProperties.getFilename());\n+      restResponseChannel.setHeader(Headers.CONTENT_ENCODING, blobProperties.getContentEncoding());\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyMjMyOA==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536222328", "bodyText": "In our LinkedIn SecurityService, we use the filename to set the value of the Content-Disposition. Not sure if we want to port that behavior here.", "author": "cgtz", "createdAt": "2020-12-04T16:28:33Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());\n+    }\n+    if (blobProperties.getFilename() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_FILENAME, blobProperties.getFilename());", "originalCommit": "f049363c9531a24e3de3c95f182dcf426a64447c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTkxMQ==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421911", "bodyText": "Removed.", "author": "SophieGuo410", "createdAt": "2020-12-04T22:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyMjMyOA=="}], "type": "inlineReview", "revised_code": {"commit": "13b3fc614a3b060d9cc4086e8b807d883dc97f1e", "chunk": "diff --git a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\nindex 768f9be0e..b02f9066f 100644\n--- a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n+++ b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n\n@@ -321,10 +318,7 @@ class AmbrySecurityService implements SecurityService {\n       }\n     }\n     if (blobProperties.getContentEncoding() != null) {\n-      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());\n-    }\n-    if (blobProperties.getFilename() != null) {\n-      restResponseChannel.setHeader(Headers.AMBRY_FILENAME, blobProperties.getFilename());\n+      restResponseChannel.setHeader(Headers.CONTENT_ENCODING, blobProperties.getContentEncoding());\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNTU0NA==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536405544", "bodyText": "minor: is there a unit test to verify these two properties in BlobIdTransformerTest?", "author": "jsjtzyy", "createdAt": "2020-12-04T21:55:03Z", "path": "ambry-replication/src/test/java/com/github/ambry/replication/BlobIdTransformerTest.java", "diffHunk": "@@ -527,7 +527,7 @@ private Message buildMessage(String blobIdString, Class clazz, boolean hasEncryp\n       MessageInfo messageInfo;\n       BlobProperties blobProperties =\n           new BlobProperties(blobPropertiesSize, \"serviceId\", \"ownerId\", \"contentType\", false, 0, 0,\n-              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null);\n+              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null, \"gzip\", \"filename\");", "originalCommit": "f049363c9531a24e3de3c95f182dcf426a64447c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMzg2OQ==", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536423869", "bodyText": "Will add the test cases once the serialize part is done.", "author": "SophieGuo410", "createdAt": "2020-12-04T22:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNTU0NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "13b3fc614a3b060d9cc4086e8b807d883dc97f1e", "url": "https://github.com/linkedin/ambry/commit/13b3fc614a3b060d9cc4086e8b807d883dc97f1e", "message": "Address comments", "committedDate": "2020-12-04T22:28:49Z", "type": "commit"}]}