{"pr_number": 1714, "pr_title": "[Container API] Check status of existing container before creating same container", "pr_createdAt": "2020-12-03T22:04:25Z", "pr_url": "https://github.com/linkedin/ambry/pull/1714", "timeline": [{"oid": "537ca8c2d6f1275042e2ec0e8d18892426e59cfd", "url": "https://github.com/linkedin/ambry/commit/537ca8c2d6f1275042e2ec0e8d18892426e59cfd", "message": "[Container API] Check status of existing container when creating same container\n\nThis PR fixes an edge case where user may attempt to create same container even though the container is already deprecated.\nThere are two posssible states to handle:\n1. if existing container is INACTIVE, Ambry throws ResourceHasGone exception indicating the container is unrecoverable.\n2. if existing container is DELETE_IN_PROGRESS, Ambry throws MethodNotAllowed exception. User is able to cancel deprecation to\n   restore the whole container.", "committedDate": "2020-12-03T21:58:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMjA2Mw==", "url": "https://github.com/linkedin/ambry/pull/1714#discussion_r535822063", "bodyText": "Include container name in error messages.", "author": "lightningrob", "createdAt": "2020-12-04T04:10:15Z", "path": "ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java", "diffHunk": "@@ -111,18 +111,28 @@ public Account getAccountById(short id) {\n     for (Container container : containers) {\n       if (container.getId() == Container.UNKNOWN_CONTAINER_ID) {\n         // new container\n-        // make sure there is no conflicting container (conflicting means a container with same name but different attributes already exists).\n         Container existingContainer = existingContainersInAccount.get(container.getName());\n         if (existingContainer != null) {\n-          if (existingContainer.isSameContainer(container)) {\n-            // If an exactly same container already exists, treat as no-op (may be retry after partial failure).\n-            // But include it in the list returned to caller to provide the containerId.\n-            logger.info(\"Request to create container with existing name and properties: {}\",\n-                existingContainer.toJson().toString());\n-            existingUnchangedContainers.add(existingContainer);\n-          } else {\n-            throw new AccountServiceException(\"There is a conflicting container in account \" + accountName,\n-                AccountServiceErrorCode.ResourceConflict);\n+          switch (existingContainer.getStatus()) {\n+            case INACTIVE:\n+              throw new AccountServiceException(\"The container has gone and cannot be restored\",", "originalCommit": "537ca8c2d6f1275042e2ec0e8d18892426e59cfd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5654e7fe4c0693a8d6b9a23a7480d580cdf8f769", "chunk": "diff --git a/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java b/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\nindex 84d59a357..a54f4e230 100644\n--- a/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\n+++ b/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\n\n@@ -115,12 +115,12 @@ abstract class AbstractAccountService implements AccountService {\n         if (existingContainer != null) {\n           switch (existingContainer.getStatus()) {\n             case INACTIVE:\n-              throw new AccountServiceException(\"The container has gone and cannot be restored\",\n+              throw new AccountServiceException(\n+                  \"The container \" + container.getName() + \" has gone and cannot be restored\",\n                   AccountServiceErrorCode.ResourceHasGone);\n             case DELETE_IN_PROGRESS:\n-              throw new AccountServiceException(\n-                  \"Create method is not allowed on container with Delete_In_Progress state\",\n-                  AccountServiceErrorCode.MethodNotAllowed);\n+              throw new AccountServiceException(\"Create method is not allowed on container \" + container.getName()\n+                  + \" as it's in Delete_In_Progress state\", AccountServiceErrorCode.MethodNotAllowed);\n             case ACTIVE:\n               // make sure there is no conflicting container (conflicting means a container with same name but different attributes already exists).\n               if (existingContainer.isSameContainer(container)) {\n"}}, {"oid": "5654e7fe4c0693a8d6b9a23a7480d580cdf8f769", "url": "https://github.com/linkedin/ambry/commit/5654e7fe4c0693a8d6b9a23a7480d580cdf8f769", "message": "address comments", "committedDate": "2020-12-04T18:31:20Z", "type": "commit"}, {"oid": "927254b9bec71e095bd8a24f69ef8f7e0433377e", "url": "https://github.com/linkedin/ambry/commit/927254b9bec71e095bd8a24f69ef8f7e0433377e", "message": "Check if Delete_In_Progress container is past retention period", "committedDate": "2020-12-07T04:55:01Z", "type": "commit"}]}