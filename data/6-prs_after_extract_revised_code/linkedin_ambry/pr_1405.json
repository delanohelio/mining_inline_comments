{"pr_number": 1405, "pr_title": "Make PartitionSelectionHelper incorporate clustermap changes", "pr_createdAt": "2020-02-28T00:17:23Z", "pr_url": "https://github.com/linkedin/ambry/pull/1405", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTQ4OA==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139488", "bodyText": "Instead of copying the list and requiring a (potentially) unsafe cast. I think we could make more use of generics in ClusterManagerCallback.", "author": "cgtz", "createdAt": "2020-03-01T20:49:20Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -64,12 +65,18 @@\n \n   @Override\n   public List<AmbryReplica> getReplicaIds() {\n-    return clusterManagerCallback.getReplicaIdsForPartition(this);\n+    return clusterManagerCallback.getReplicaIdsForPartition(this)", "originalCommit": "41f31387ea6be5d992961efb7d73f981c2efa2b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\nindex 937bcb1ec..37d0a86c6 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n\n@@ -65,18 +65,12 @@ public class AmbryPartition implements PartitionId {\n \n   @Override\n   public List<AmbryReplica> getReplicaIds() {\n-    return clusterManagerCallback.getReplicaIdsForPartition(this)\n-        .stream()\n-        .map(r -> (AmbryReplica) r)\n-        .collect(Collectors.toList());\n+    return clusterManagerCallback.getReplicaIdsForPartition(this);\n   }\n \n   @Override\n   public List<AmbryReplica> getReplicaIdsByState(ReplicaState state, String dcName) {\n-    return clusterManagerCallback.getReplicaIdsByState(this, state, dcName)\n-        .stream()\n-        .map(r -> (AmbryReplica) r)\n-        .collect(Collectors.toList());\n+    return clusterManagerCallback.getReplicaIdsByState(this, state, dcName);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTU2MQ==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139561", "bodyText": "ClusterManagerCallback<R extends ReplicaId, D extends DiskId, P extends PartitionId>", "author": "cgtz", "createdAt": "2020-03-01T20:50:34Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java", "diffHunk": "@@ -18,26 +18,25 @@\n \n \n /**\n- * A callback that needs to be implemented by dynamic implementations of the cluster manager which can be\n- * used by dynamic cluster manager components such as {@link AmbryDataNode}, {@link AmbryDisk},\n- * {@link AmbryPartition}, and {@link AmbryReplica}\n+ * A callback that needs to be implemented by different implementations of the cluster manager. External components may\n+ * get resources (i.e. {@link ReplicaId}, {@link PartitionId}, {@link DiskId}) via this callback.\n  */\n interface ClusterManagerCallback {", "originalCommit": "41f31387ea6be5d992961efb7d73f981c2efa2b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxNDIwNw==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r387314207", "bodyText": "good point, changes are made", "author": "jsjtzyy", "createdAt": "2020-03-03T21:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTU2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java\nindex 3836571af..a71d2c054 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java\n\n@@ -19,15 +19,15 @@ import java.util.List;\n \n /**\n  * A callback that needs to be implemented by different implementations of the cluster manager. External components may\n- * get resources (i.e. {@link ReplicaId}, {@link PartitionId}, {@link DiskId}) via this callback.\n+ * get resources (i.e. {@link ReplicaId}, {@link PartitionId}, {@link DiskId}, {@link DataNodeId}) via this callback.\n  */\n-interface ClusterManagerCallback {\n+interface ClusterManagerCallback<R extends ReplicaId, D extends DiskId, P extends PartitionId, N extends DataNodeId> {\n   /**\n    * Get all replica ids associated with the given {@link AmbryPartition}\n    * @param partition the {@link PartitionId} for which to get the list of replicas.\n    * @return the list of {@link ReplicaId}s associated with the given partition.\n    */\n-  List<? extends ReplicaId> getReplicaIdsForPartition(PartitionId partition);\n+  List<R> getReplicaIdsForPartition(P partition);\n \n   /**\n    * Get replicas of given partition from specified datacenter that are in required state\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTcxNQ==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139715", "bodyText": "And then pass in ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition> here and in other similar classes, which will get rid of the need for the copies/casts.", "author": "cgtz", "createdAt": "2020-03-01T20:52:40Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -46,7 +47,7 @@\n    * Instantiate an AmbryPartition instance.\n    * @param id the id associated with this partition.\n    * @param partitionClass the partition class that this partition belongs to\n-   * @param clusterManagerCallback the {@link ClusterManagerCallback} to use to make callbacks\n+   * @param clusterManagerCallback the {@link HelixClusterManager.HelixClusterManagerCallback} to use to make callbacks\n    *                               to the {@link HelixClusterManager}\n    * The initial state defaults to {@link PartitionState#READ_WRITE}.\n    */", "originalCommit": "41f31387ea6be5d992961efb7d73f981c2efa2b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\nindex 937bcb1ec..37d0a86c6 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n\n@@ -51,7 +50,8 @@ public class AmbryPartition implements PartitionId {\n    *                               to the {@link HelixClusterManager}\n    * The initial state defaults to {@link PartitionState#READ_WRITE}.\n    */\n-  AmbryPartition(long id, String partitionClass, ClusterManagerCallback clusterManagerCallback) {\n+  AmbryPartition(long id, String partitionClass,\n+      ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition, AmbryDataNode> clusterManagerCallback) {\n     this.id = id;\n     this.partitionClass = partitionClass;\n     this.clusterManagerCallback = clusterManagerCallback;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMDQ2NQ==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386200465", "bodyText": "why not just return the added replicas instead of pair?", "author": "cgtz", "createdAt": "2020-03-02T05:14:13Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -393,11 +421,12 @@ private void updateReplicaStateAndOverrideIfNeeded(AmbryReplica replica, List<St\n   /**\n    * Create a new instance(node) and initialize disks/replicas on it.\n    * @param instanceConfig the {@link InstanceConfig} to create new instance\n+   * @return a pair of lists: (1) newly added replicas; (2) removed old replicas(in this method, it should be empty)", "originalCommit": "41f31387ea6be5d992961efb7d73f981c2efa2b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0Njg5OQ==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r388846899", "bodyText": "Return a pair instead of return multiple values in java function(not allowed)? Just curious about this.", "author": "xuhao417347761", "createdAt": "2020-03-06T11:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMDQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\nindex 15b53a6b5..a49b078bf 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n\n@@ -421,15 +421,15 @@ public class DynamicClusterChangeHandler implements ClusterChangeHandler {\n   /**\n    * Create a new instance(node) and initialize disks/replicas on it.\n    * @param instanceConfig the {@link InstanceConfig} to create new instance\n-   * @return a pair of lists: (1) newly added replicas; (2) removed old replicas(in this method, it should be empty)\n+   * @return a list of newly added replicas;\n    * @throws Exception\n    */\n-  private Pair<List<ReplicaId>, List<ReplicaId>> createNewInstance(InstanceConfig instanceConfig) throws Exception {\n+  private List<ReplicaId> createNewInstance(InstanceConfig instanceConfig) throws Exception {\n     String instanceName = instanceConfig.getInstanceName();\n     logger.info(\"Adding node {} and its disks and replicas in {}\", instanceName, dcName);\n     AmbryDataNode datanode =\n         new AmbryDataNode(getDcName(instanceConfig), clusterMapConfig, instanceConfig.getHostName(),\n-            Integer.valueOf(instanceConfig.getPort()), getRackId(instanceConfig), getSslPortStr(instanceConfig), null,\n+            Integer.parseInt(instanceConfig.getPort()), getRackId(instanceConfig), getSslPortStr(instanceConfig), null,\n             getXid(instanceConfig), helixClusterManagerCallback);\n     // for new instance, we first set it to unavailable and rely on its participation to update its liveness\n     if (!instanceName.equals(selfInstanceName)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwNzc5Mg==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386207792", "bodyText": "Any reason to hook into the cluster change handler instead of ClusterChangeHandlerCallback? I was considering adding some logic that would call a hook directly from addPartitionIfAbsent", "author": "cgtz", "createdAt": "2020-03-02T05:52:38Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -510,7 +512,9 @@ public ReplicaId getBootstrapReplica(String partitionIdStr, DataNodeId dataNodeI\n \n   @Override\n   public void registerClusterMapListener(ClusterMapChangeListener clusterMapChangeListener) {\n-    clusterMapChangeListeners.add(clusterMapChangeListener);\n+    for (DcInfo dcInfo : dcToDcZkInfo.values()) {\n+      dcInfo.clusterChangeHandler.registerClusterMapListener(clusterMapChangeListener);", "originalCommit": "41f31387ea6be5d992961efb7d73f981c2efa2b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMDUzNg==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r387320536", "bodyText": "Discussed offline. Basically, the ClusterChangeHandlerCallback. addPartitionIfAbsent() might be called multiple times in the for-loop (see updateInstanceInfo method in DynamicClusterChangeHandler). What I am doing is to aggregate the added replicas and invoke callback in PartitionSelectionHelper only once.", "author": "jsjtzyy", "createdAt": "2020-03-03T22:01:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwNzc5Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "url": "https://github.com/linkedin/ambry/commit/7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "message": "minor changes", "committedDate": "2020-03-03T22:37:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzNzE1NQ==", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r388637155", "bodyText": "For long type names like this, I wish java had typedef statements, but alas it does not", "author": "cgtz", "createdAt": "2020-03-06T00:09:17Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -32,7 +32,7 @@\n public class AmbryPartition implements PartitionId {\n   private final Long id;\n   private final String partitionClass;\n-  private final ClusterManagerCallback clusterManagerCallback;\n+  private final ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition, AmbryDataNode> clusterManagerCallback;", "originalCommit": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d2f043cbdf0ffa9f3f9715546caf96df05932d96", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\nindex 37d0a86c6..937bcb1ec 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java\n\n@@ -32,7 +33,7 @@ import static com.github.ambry.clustermap.ClusterMapSnapshotConstants.*;\n public class AmbryPartition implements PartitionId {\n   private final Long id;\n   private final String partitionClass;\n-  private final ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition, AmbryDataNode> clusterManagerCallback;\n+  private final ClusterManagerCallback clusterManagerCallback;\n   private final Lock stateChangeLock = new ReentrantLock();\n \n   private volatile PartitionState state;\n"}}, {"oid": "d2f043cbdf0ffa9f3f9715546caf96df05932d96", "url": "https://github.com/linkedin/ambry/commit/d2f043cbdf0ffa9f3f9715546caf96df05932d96", "message": "Make PartitionSelectionHelper incorporate clustermap changes\n\nPreviously, data structures in PartitionSelectionHelper are constant\nafter initialization. With \"Move Replica\" feature on, this should\ndynamically incorporate any changes in clustermap (i.e. new\nreplica/partition added or replica is removed). In this PR, we make it as\na listener of clustermap and re-populate all in-mem data structures if\nnumber of replicas/partitions has changed.", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "4442ee4fa3cbc6aa898b0b4397d0c4f4caeaf4c1", "url": "https://github.com/linkedin/ambry/commit/4442ee4fa3cbc6aa898b0b4397d0c4f4caeaf4c1", "message": "fix test failures", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "d01acbd0daa85a711916db37cd4eefbc8b88bee8", "url": "https://github.com/linkedin/ambry/commit/d01acbd0daa85a711916db37cd4eefbc8b88bee8", "message": "added additional synchronization", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "acd91bdb42bb1f5f9c26ec265cfddfd14a107cb3", "url": "https://github.com/linkedin/ambry/commit/acd91bdb42bb1f5f9c26ec265cfddfd14a107cb3", "message": "fix one more test failure", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "6afdb542b1a9d409cc1f8b4fe7c5c1d77092d59f", "url": "https://github.com/linkedin/ambry/commit/6afdb542b1a9d409cc1f8b4fe7c5c1d77092d59f", "message": "added unit test", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "2d5a74954ecd5b719bf7cb4f55f9dbee624b9235", "url": "https://github.com/linkedin/ambry/commit/2d5a74954ecd5b719bf7cb4f55f9dbee624b9235", "message": "addressed comments", "committedDate": "2020-03-06T02:06:58Z", "type": "commit"}, {"oid": "c087bd030db3d445e3e2d07e1bac2f5f2e0cb06d", "url": "https://github.com/linkedin/ambry/commit/c087bd030db3d445e3e2d07e1bac2f5f2e0cb06d", "message": "fix compilation error", "committedDate": "2020-03-06T02:08:19Z", "type": "commit"}, {"oid": "0c0e0650112c94b76d63d6cb69b4f593e0f17c59", "url": "https://github.com/linkedin/ambry/commit/0c0e0650112c94b76d63d6cb69b4f593e0f17c59", "message": "minor changes", "committedDate": "2020-03-06T02:08:19Z", "type": "commit"}, {"oid": "1cca6f41b832891cced45858fbc1268c4c26f720", "url": "https://github.com/linkedin/ambry/commit/1cca6f41b832891cced45858fbc1268c4c26f720", "message": "rebase and fix conflicts", "committedDate": "2020-03-06T02:11:07Z", "type": "commit"}, {"oid": "1cca6f41b832891cced45858fbc1268c4c26f720", "url": "https://github.com/linkedin/ambry/commit/1cca6f41b832891cced45858fbc1268c4c26f720", "message": "rebase and fix conflicts", "committedDate": "2020-03-06T02:11:07Z", "type": "forcePushed"}]}