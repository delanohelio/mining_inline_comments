{"pr_number": 1697, "pr_title": "Ignore version mismatch temporarily in MySqlAccountService while updating Accounts and Containers", "pr_createdAt": "2020-11-18T03:27:34Z", "pr_url": "https://github.com/linkedin/ambry/pull/1697", "timeline": [{"oid": "10b58fdd725f1d0b8737f3c385426239dde3a8c6", "url": "https://github.com/linkedin/ambry/commit/10b58fdd725f1d0b8737f3c385426239dde3a8c6", "message": "Ignore version mismatch temporarily in MySqlAccountService while updating Accounts and Containers", "committedDate": "2020-11-18T03:16:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0MjY5Mg==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r525842692", "bodyText": "Does this need to be changed?  I thought only account version was out of sync.", "author": "lightningrob", "createdAt": "2020-11-18T06:30:36Z", "path": "ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java", "diffHunk": "@@ -141,11 +142,6 @@ public Account getAccountById(short id) {\n               \"In account \" + accountName + \", container \" + container.getName() + \" has containerId \"\n                   + existingContainer.getId() + \" (\" + container.getId() + \" was supplied)\",\n               AccountServiceErrorCode.ResourceConflict);\n-        } else if (existingContainer.getSnapshotVersion() != container.getSnapshotVersion()) {", "originalCommit": "10b58fdd725f1d0b8737f3c385426239dde3a8c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNjA1OA==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526306058", "bodyText": "+1", "author": "jsjtzyy", "createdAt": "2020-11-18T17:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0MjY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4ODU4Ng==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526488586", "bodyText": "Discussed offline.  This does need to be adjusted.  Please use the mentioned config property (after moving to base class) to toggle the behavior.", "author": "lightningrob", "createdAt": "2020-11-18T23:22:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0MjY5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "chunk": "diff --git a/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java b/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\nindex 85733b2d6..d2bd76811 100644\n--- a/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\n+++ b/ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java\n\n@@ -142,6 +141,12 @@ abstract class AbstractAccountService implements AccountService {\n               \"In account \" + accountName + \", container \" + container.getName() + \" has containerId \"\n                   + existingContainer.getId() + \" (\" + container.getId() + \" was supplied)\",\n               AccountServiceErrorCode.ResourceConflict);\n+        } else if (!config.ignoreVersionMismatch\n+            && existingContainer.getSnapshotVersion() != container.getSnapshotVersion()) {\n+          throw new AccountServiceException(\n+              \"In account \" + accountName + \", container \" + container.getName() + \" has version \"\n+                  + existingContainer.getSnapshotVersion() + \" (\" + container.getSnapshotVersion() + \" was supplied)\",\n+              AccountServiceErrorCode.ResourceConflict);\n         } else {\n           resolvedContainers.add(container);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0NTUyNw==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r525845527", "bodyText": "Can we make ignoreAccountVersion a mysql config property?  That way we won't need to change the code later.  Default can be false and override in config when composite AS is used.", "author": "lightningrob", "createdAt": "2020-11-18T06:38:34Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -249,14 +249,16 @@ public void updateAccounts(Collection<Account> accounts) throws AccountServiceEx\n     infoMapLock.readLock().lock();\n     try {\n       AccountInfoMap accountInfoMap = accountInfoMapRef.get();\n-      if (accountInfoMap.hasConflictingAccount(accounts)) {\n+      //TODO: Temporarily disabling version check with CompositeAccountService enabled. Remove it after moving to MySql only.\n+      if (accountInfoMap.hasConflictingAccount(accounts, true)) {", "originalCommit": "10b58fdd725f1d0b8737f3c385426239dde3a8c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxMjQzNQ==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526312435", "bodyText": "Right, config seems to be better. This is one-off migration and we can keep the default value false after it's complete.", "author": "jsjtzyy", "createdAt": "2020-11-18T18:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0NTUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "824449255240e6e8dbb356e23c2b9ef8a08a4d73", "chunk": "diff --git a/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java b/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\nindex e1fdfb810..8795835a3 100644\n--- a/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\n+++ b/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\n\n@@ -249,16 +249,15 @@ public class MySqlAccountService extends AbstractAccountService {\n     infoMapLock.readLock().lock();\n     try {\n       AccountInfoMap accountInfoMap = accountInfoMapRef.get();\n-      //TODO: Temporarily disabling version check with CompositeAccountService enabled. Remove it after moving to MySql only.\n-      if (accountInfoMap.hasConflictingAccount(accounts, true)) {\n+      if (accountInfoMap.hasConflictingAccount(accounts, config.ignoreVersionMismatch)) {\n         logger.error(\"Accounts={} conflict with the accounts in local cache. Cancel the update operation.\", accounts);\n         accountServiceMetrics.updateAccountErrorCount.inc();\n         throw new AccountServiceException(\"Input accounts conflict with the accounts in local cache\",\n             AccountServiceErrorCode.ResourceConflict);\n       }\n       for (Account account : accounts) {\n-        //TODO: Temporarily disabling version check with CompositeAccountService enabled. Remove it after moving to MySql only.\n-        if (accountInfoMap.hasConflictingContainer(account.getAllContainers(), account.getId(), true)) {\n+        if (accountInfoMap.hasConflictingContainer(account.getAllContainers(), account.getId(),\n+            config.ignoreVersionMismatch)) {\n           logger.error(\n               \"Containers={} under Account={} conflict with the containers in local cache. Cancel the update operation.\",\n               account.getAllContainers(), account.getId());\n"}}, {"oid": "824449255240e6e8dbb356e23c2b9ef8a08a4d73", "url": "https://github.com/linkedin/ambry/commit/824449255240e6e8dbb356e23c2b9ef8a08a4d73", "message": "Add config to check if version mismatch can be ignored during Account and Container updates.", "committedDate": "2020-11-18T23:26:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzEyMQ==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526493121", "bodyText": "I would move this to base AccountServiceConfig class so AbstractAccountService can also use it.", "author": "lightningrob", "createdAt": "2020-11-18T23:34:53Z", "path": "ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java", "diffHunk": "@@ -97,6 +98,13 @@\n   @Default(\"false\")\n   public final boolean updateDisabled;\n \n+  /**\n+   * If true, MySqlAccountService would ignore version mismatch while updating Accounts and Containers.\n+   */\n+  @Config(IGNORE_VERSION_MISMATCH)\n+  @Default(\"false\")\n+  public final boolean ignoreVersionMismatch;", "originalCommit": "824449255240e6e8dbb356e23c2b9ef8a08a4d73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java b/ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java\nindex a2990b7d0..998f9b494 100644\n--- a/ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java\n+++ b/ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java\n\n@@ -98,13 +97,6 @@ public class MySqlAccountServiceConfig extends AccountServiceConfig {\n   @Default(\"false\")\n   public final boolean updateDisabled;\n \n-  /**\n-   * If true, MySqlAccountService would ignore version mismatch while updating Accounts and Containers.\n-   */\n-  @Config(IGNORE_VERSION_MISMATCH)\n-  @Default(\"false\")\n-  public final boolean ignoreVersionMismatch;\n-\n   public MySqlAccountServiceConfig(VerifiableProperties verifiableProperties) {\n     super(verifiableProperties);\n     dbInfo = verifiableProperties.getString(DB_INFO);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMTcyMg==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526501722", "bodyText": "minor: can you print out  account name instead of account id?\nAlso account.getAllContainers() can be replaced with resolvedContainers", "author": "jsjtzyy", "createdAt": "2020-11-18T23:57:26Z", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -340,6 +341,23 @@ ExecutorService getScheduler() {\n   @Override\n   protected void updateResolvedContainers(Account account, Collection<Container> resolvedContainers)\n       throws AccountServiceException {\n+\n+    // Check for name/id/version conflicts for containers being updated with those in local cache.\n+    infoMapLock.readLock().lock();\n+    try {\n+      if (accountInfoMapRef.get()\n+          .hasConflictingContainer(resolvedContainers, account.getId(), config.ignoreVersionMismatch)) {\n+        logger.error(\n+            \"Containers={} under Account={} conflict with the containers in local cache. Cancel the update operation.\",\n+            account.getAllContainers(), account.getId());", "originalCommit": "824449255240e6e8dbb356e23c2b9ef8a08a4d73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "chunk": "diff --git a/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java b/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\nindex 8795835a3..d1ce2b0ec 100644\n--- a/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\n+++ b/ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java\n\n@@ -341,23 +341,6 @@ public class MySqlAccountService extends AbstractAccountService {\n   @Override\n   protected void updateResolvedContainers(Account account, Collection<Container> resolvedContainers)\n       throws AccountServiceException {\n-\n-    // Check for name/id/version conflicts for containers being updated with those in local cache.\n-    infoMapLock.readLock().lock();\n-    try {\n-      if (accountInfoMapRef.get()\n-          .hasConflictingContainer(resolvedContainers, account.getId(), config.ignoreVersionMismatch)) {\n-        logger.error(\n-            \"Containers={} under Account={} conflict with the containers in local cache. Cancel the update operation.\",\n-            account.getAllContainers(), account.getId());\n-        accountServiceMetrics.updateAccountErrorCount.inc();\n-        throw new AccountServiceException(\"Containers in account \" + account.getId() + \" conflict with local cache\",\n-            AccountServiceErrorCode.ResourceConflict);\n-      }\n-    } finally {\n-      infoMapLock.readLock().unlock();\n-    }\n-\n     try {\n       updateContainersWithMySqlStore(account.getId(), resolvedContainers);\n     } catch (SQLException e) {\n"}}, {"oid": "0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "url": "https://github.com/linkedin/ambry/commit/0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "message": "Move IGNORE_VERSION_MISMATCH config to AccountServiceConfig from MySqlAccountServiceConfig", "committedDate": "2020-11-19T01:28:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1MTg4NA==", "url": "https://github.com/linkedin/ambry/pull/1697#discussion_r526551884", "bodyText": "I'm wondering if this will be a problem when we switch to mysql primary and Helix secondary.", "author": "lightningrob", "createdAt": "2020-11-19T02:29:43Z", "path": "ambry-account/src/main/java/com/github/ambry/account/HelixAccountService.java", "diffHunk": "@@ -289,7 +289,7 @@ void updateAccountsWithAccountMetadataStore(Collection<Account> accounts, Accoun\n     // update operation for all the accounts if any conflict exists. There is a slight chance that the account to update\n     // conflicts with the accounts in the local cache, but does not conflict with those in the helixPropertyStore. This\n     // will happen if some accounts are updated but the local cache is not refreshed.\n-    if (accountInfoMapRef.get().hasConflictingAccount(accounts)) {\n+    if (accountInfoMapRef.get().hasConflictingAccount(accounts, false)) {", "originalCommit": "0faf6aada9374159dfb87383fc91bf3b1d9a3b11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d30d0e0dfa07e6595cd95e69721ee37bc4abc96d", "chunk": "diff --git a/ambry-account/src/main/java/com/github/ambry/account/HelixAccountService.java b/ambry-account/src/main/java/com/github/ambry/account/HelixAccountService.java\nindex 4b0de29dd..8a7eeb849 100644\n--- a/ambry-account/src/main/java/com/github/ambry/account/HelixAccountService.java\n+++ b/ambry-account/src/main/java/com/github/ambry/account/HelixAccountService.java\n\n@@ -289,7 +289,7 @@ public class HelixAccountService extends AbstractAccountService implements Accou\n     // update operation for all the accounts if any conflict exists. There is a slight chance that the account to update\n     // conflicts with the accounts in the local cache, but does not conflict with those in the helixPropertyStore. This\n     // will happen if some accounts are updated but the local cache is not refreshed.\n-    if (accountInfoMapRef.get().hasConflictingAccount(accounts, false)) {\n+    if (accountInfoMapRef.get().hasConflictingAccount(accounts, config.ignoreVersionMismatch)) {\n       logger.debug(\"Accounts={} conflict with the accounts in local cache. Cancel the update operation.\", accounts);\n       accountServiceMetrics.updateAccountErrorCount.inc();\n       throw new AccountServiceException(\"Input accounts conflict with the accounts in local cache\",\n"}}, {"oid": "d30d0e0dfa07e6595cd95e69721ee37bc4abc96d", "url": "https://github.com/linkedin/ambry/commit/d30d0e0dfa07e6595cd95e69721ee37bc4abc96d", "message": "Address Rob's comments", "committedDate": "2020-11-19T21:56:27Z", "type": "commit"}]}