{"pr_number": 1386, "pr_title": "Change Store interface to not use MessageWriteSet", "pr_createdAt": "2020-02-14T21:46:48Z", "pr_url": "https://github.com/linkedin/ambry/pull/1386", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NjE2Ng==", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384696166", "bodyText": "Minor:\nAdding a new constructor created some duplicated code and you need 'if else' in the caller. Prefer to change existing constructor by adding lifeVersion.", "author": "zzmao", "createdAt": "2020-02-26T18:56:45Z", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/DeleteMessageFormatInputStream.java", "diffHunk": "@@ -55,4 +55,22 @@ public DeleteMessageFormatInputStream(StoreKey key, short accountId, short conta\n     messageLength = buffer.capacity();\n     buffer.flip();\n   }\n+\n+  public DeleteMessageFormatInputStream(StoreKey key, short accountId, short containerId, long deletionTimeMs,", "originalCommit": "b4204604af246e821e68de6a68b29ca80c2e12fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzQ1NA==", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384707454", "bodyText": "The reason I create a different constructor is because of dependency issue.\nThe new constructor requires lifeVersion to be not -1, which is a constant from IndexValue.Life_Version_From_Frontend. And I don't want to create a new constant here and I can't import the IndexValue constant either. That's why I create a new constructor and leave if-else statement in the ambry-store package, where IndexValue constant can be used.", "author": "justinlin-linkedin", "createdAt": "2020-02-26T19:17:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NjE2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5OTIwNw==", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384699207", "bodyText": "-1 might be better, to indicate invalid or meaningless.", "author": "zzmao", "createdAt": "2020-02-26T19:02:11Z", "path": "ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java", "diffHunk": "@@ -398,16 +396,11 @@ public void handleDeleteRequest(NetworkRequest request) throws IOException, Inte\n         response = new DeleteResponse(deleteRequest.getCorrelationId(), deleteRequest.getClientId(), error);\n       } else {\n         BlobId convertedBlobId = (BlobId) convertedStoreKey;\n-        MessageFormatInputStream stream =\n-            new DeleteMessageFormatInputStream(convertedStoreKey, convertedBlobId.getAccountId(),\n-                convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        MessageInfo info = new MessageInfo(convertedStoreKey, stream.getSize(), convertedBlobId.getAccountId(),\n-            convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        ArrayList<MessageInfo> infoList = new ArrayList<MessageInfo>();\n-        infoList.add(info);\n-        MessageFormatWriteSet writeSet = new MessageFormatWriteSet(stream, infoList, false);\n+        MessageInfo info =\n+            new MessageInfo(convertedStoreKey, 0, convertedBlobId.getAccountId(), convertedBlobId.getContainerId(),", "originalCommit": "b4204604af246e821e68de6a68b29ca80c2e12fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzUwNQ==", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384707505", "bodyText": "sure", "author": "justinlin-linkedin", "createdAt": "2020-02-26T19:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5OTIwNw=="}], "type": "inlineReview", "revised_code": {"commit": "83b8f0af78f4506873e64cdff816198b1c3cad11", "chunk": "diff --git a/ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java b/ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java\nindex b938d02dc..69a91b5b6 100644\n--- a/ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java\n+++ b/ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java\n\n@@ -397,7 +397,7 @@ public class AmbryRequests implements RequestAPI {\n       } else {\n         BlobId convertedBlobId = (BlobId) convertedStoreKey;\n         MessageInfo info =\n-            new MessageInfo(convertedStoreKey, 0, convertedBlobId.getAccountId(), convertedBlobId.getContainerId(),\n+            new MessageInfo(convertedStoreKey, -1, convertedBlobId.getAccountId(), convertedBlobId.getContainerId(),\n                 deleteRequest.getDeletionTimeInMs());\n         Store storeToDelete = storeManager.getStore(deleteRequest.getBlobId().getPartition());\n         storeToDelete.delete(Collections.singletonList(info));\n"}}, {"oid": "83b8f0af78f4506873e64cdff816198b1c3cad11", "url": "https://github.com/linkedin/ambry/commit/83b8f0af78f4506873e64cdff816198b1c3cad11", "message": "Comments", "committedDate": "2020-02-26T19:19:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2MzgxOQ==", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384863819", "bodyText": "Not sure why you removed the javadoc.  Please restore.", "author": "lightningrob", "createdAt": "2020-02-27T01:20:49Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java", "diffHunk": "@@ -367,18 +367,12 @@ public short undelete(MessageInfo info) throws StoreException {\n     throw new UnsupportedOperationException(\"Undelete not supported in cloud store\");\n   }\n \n-  /**\n-   * {@inheritDoc}\n-   * Currently, the only supported operation is to set the TTL to infinite (i.e. no arbitrary increase or decrease)\n-   * @param messageSetToUpdate The list of messages that need to be updated\n-   * @throws StoreException if there is a problem persisting the operation in the store.\n-   */", "originalCommit": "83b8f0af78f4506873e64cdff816198b1c3cad11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7277456b0d7c6d2f9131c373a46448ad3aff4c2", "chunk": "diff --git a/ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java b/ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java\nindex 91894953e..537674996 100644\n--- a/ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java\n+++ b/ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java\n\n@@ -367,6 +372,12 @@ class CloudBlobStore implements Store {\n     throw new UnsupportedOperationException(\"Undelete not supported in cloud store\");\n   }\n \n+  /**\n+   * {@inheritDoc}\n+   * Currently, the only supported operation is to set the TTL to infinite (i.e. no arbitrary increase or decrease)\n+   * @param infos The list of messages that need to be updated\n+   * @throws StoreException\n+   */\n   @Override\n   public void updateTtl(List<MessageInfo> infos) throws StoreException {\n     checkStarted();\n"}}, {"oid": "31d235b1fb1ab2206e8af6ee80931f5995a2a3ba", "url": "https://github.com/linkedin/ambry/commit/31d235b1fb1ab2206e8af6ee80931f5995a2a3ba", "message": "Change Store interface to not use MessageWriteSet on delete and updateTtl", "committedDate": "2020-02-27T01:52:38Z", "type": "commit"}, {"oid": "134b4c1cca6dd49f6706fb9285b4c640a42bd648", "url": "https://github.com/linkedin/ambry/commit/134b4c1cca6dd49f6706fb9285b4c640a42bd648", "message": "Comments", "committedDate": "2020-02-27T01:52:38Z", "type": "commit"}, {"oid": "d7277456b0d7c6d2f9131c373a46448ad3aff4c2", "url": "https://github.com/linkedin/ambry/commit/d7277456b0d7c6d2f9131c373a46448ad3aff4c2", "message": "comments", "committedDate": "2020-02-27T02:04:00Z", "type": "commit"}, {"oid": "d7277456b0d7c6d2f9131c373a46448ad3aff4c2", "url": "https://github.com/linkedin/ambry/commit/d7277456b0d7c6d2f9131c373a46448ad3aff4c2", "message": "comments", "committedDate": "2020-02-27T02:04:00Z", "type": "forcePushed"}]}