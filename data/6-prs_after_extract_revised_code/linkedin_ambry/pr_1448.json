{"pr_number": 1448, "pr_title": "Fix hard deleter bug when the startToken is journal-based token", "pr_createdAt": "2020-03-31T18:11:48Z", "pr_url": "https://github.com/linkedin/ambry/pull/1448", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NDQ3Nw==", "url": "https://github.com/linkedin/ambry/pull/1448#discussion_r401194477", "bodyText": "This test is good, after verifying HardDelete doesn't move token forward, can we also verify calling pruneHardDeleteRecoveryRange should clear hardDeleteRecoveryRange?", "author": "jsjtzyy", "createdAt": "2020-03-31T20:28:23Z", "path": "ambry-store/src/test/java/com.github.ambry.store/HardDeleterTest.java", "diffHunk": "@@ -378,29 +378,33 @@ public void testHardDelete() {\n         }\n         assertEquals(\"Recovery range size mismatch\", 0, index.hardDeleter.getHardDeleteRecoveryRange().getSize());\n \n-        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10*] [8d 10d] [1u 3u]\n-        // journal:                                                     [10d 8d 3u 1u]\n+        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10*] [1u 3u] [8d 10d]\n+        // journal:                                                    [3u 1u 10d 8d]\n         tokenMovedForward = index.hardDelete();\n         Assert.assertTrue(tokenMovedForward);\n-        hardDeletedKeys.add(keys.get(9)); // blobId10\n-        hardDeletedKeys.add(keys.get(7)); // blobId08\n         if (!recordContentChecked) {\n           checkRecordHardDeleted(keys, hardDeletedKeys);\n         }\n-        // blobid08 and blobid10\n-        assertEquals(\"Recovery range size mismatch\", 2, index.hardDeleter.getHardDeleteRecoveryRange().getSize());\n \n-        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10] [8d 10d] [1u 3u]\n-        // journal:                                                     [10d 8d* 3u 1u]\n+        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10] [1u 3u] [8d 10d]\n+        // journal:                                                    [3u 1u* 10d 8d]\n         tokenMovedForward = index.hardDelete();\n         Assert.assertTrue(tokenMovedForward);\n+        hardDeletedKeys.add(keys.get(9)); // blobId10\n+        hardDeletedKeys.add(keys.get(7)); // blobId08\n         if (!recordContentChecked) {\n           checkRecordHardDeleted(keys, hardDeletedKeys);\n         }\n+        // blobid08 and blobid10\n+        assertEquals(\"Recovery range size mismatch\", 2, index.hardDeleter.getHardDeleteRecoveryRange().getSize());\n+        // Persist safeToken here since now we have two items in the recovery range and their startToken is journal-based.\n+        token = (StoreFindToken) index.hardDeleter.getStartTokenSafeToPersistTo();\n+        index.hardDeleter.getHardDeleteRecoveryRange().pruneTill(token);\n+        // After prune we still have two\n         assertEquals(\"Recovery range size mismatch\", 2, index.hardDeleter.getHardDeleteRecoveryRange().getSize());\n \n-        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10] [8d 10d] [1u 3u]\n-        // journal:                                                     [10d 8d 3u 1u*]\n+        // indexes: [1 2] [3 4] [3d 5] [6 7] [2d 6d] [8 9*] [1d 10] [1u 3u] [8d 10d]\n+        // journal:                                                    [3u 1u 10d 8d*]\n         // All caught up, hardDelete should not move token forward.\n         tokenMovedForward = index.hardDelete();\n         Assert.assertFalse(tokenMovedForward);", "originalCommit": "e0e6b0f39931df7f3cb969feb6941f8bc61b6352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDUzOQ==", "url": "https://github.com/linkedin/ambry/pull/1448#discussion_r401830539", "bodyText": "This is already done. Below I call persistAndAdvanceStartTokenSafeToPersist so trigger the prune and verify that the hardDeleteRecoveryRange is cleared.", "author": "justinlin-linkedin", "createdAt": "2020-04-01T18:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NDQ3Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8af3e0be9026c152e0d4cf4b685e15a3a08752bb", "url": "https://github.com/linkedin/ambry/commit/8af3e0be9026c152e0d4cf4b685e15a3a08752bb", "message": "Comments", "committedDate": "2020-04-01T18:43:23Z", "type": "forcePushed"}, {"oid": "53ee2aa6267552302f18e53d71f3971c11b28e22", "url": "https://github.com/linkedin/ambry/commit/53ee2aa6267552302f18e53d71f3971c11b28e22", "message": "Comments", "committedDate": "2020-04-01T20:01:46Z", "type": "forcePushed"}, {"oid": "5593aa555a774fcbc8d3638011e360715d77882c", "url": "https://github.com/linkedin/ambry/commit/5593aa555a774fcbc8d3638011e360715d77882c", "message": "Fix hard deleter bug when the startToken is journal-based token", "committedDate": "2020-04-01T20:40:52Z", "type": "commit"}, {"oid": "ccd9b653633b9c3ad8be42ebce68586c08738e67", "url": "https://github.com/linkedin/ambry/commit/ccd9b653633b9c3ad8be42ebce68586c08738e67", "message": "Comments", "committedDate": "2020-04-01T20:40:52Z", "type": "commit"}, {"oid": "ccd9b653633b9c3ad8be42ebce68586c08738e67", "url": "https://github.com/linkedin/ambry/commit/ccd9b653633b9c3ad8be42ebce68586c08738e67", "message": "Comments", "committedDate": "2020-04-01T20:40:52Z", "type": "forcePushed"}]}