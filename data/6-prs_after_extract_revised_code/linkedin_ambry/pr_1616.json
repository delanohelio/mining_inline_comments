{"pr_number": 1616, "pr_title": "[SEGMENTED_GET_FIX] Return correct size in headers for segmented blobs.", "pr_createdAt": "2020-09-03T11:19:06Z", "pr_url": "https://github.com/linkedin/ambry/pull/1616", "timeline": [{"oid": "c9583ce18c3431a3eb29535cf09b8786d94d6e53", "url": "https://github.com/linkedin/ambry/commit/c9583ce18c3431a3eb29535cf09b8786d94d6e53", "message": "Return correct size if headers for segmented blobs.", "committedDate": "2020-09-03T11:14:19Z", "type": "commit"}, {"oid": "6370fce4afeeb8ef279ed3e26bdf8cbafbfdcf35", "url": "https://github.com/linkedin/ambry/commit/6370fce4afeeb8ef279ed3e26bdf8cbafbfdcf35", "message": "Fix size for encrypted blob.", "committedDate": "2020-09-07T00:03:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwMjg2Mw==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r485202863", "bodyText": "hmm, it seems like this static init block wasn't even needed since it can be done in one line:\nstatic final Set<String> OPERATIONS = Collections...", "author": "cgtz", "createdAt": "2020-09-08T21:21:02Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -385,4 +384,9 @@ private void validateSecurePathIfRequired(RestRequest restRequest, String prefix\n       }\n     }\n   }\n+\n+  static {\n+    OPERATIONS = Collections.unmodifiableSet(Utils.getStaticFieldValuesAsStrings(Operations.class)", "originalCommit": "6370fce4afeeb8ef279ed3e26bdf8cbafbfdcf35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwMTQ1Mg==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r486801452", "bodyText": "Makes sense. These changes crept in because of style check fixes by Intellij though.", "author": "ankagrawal", "createdAt": "2020-09-11T06:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwMjg2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "92d16597d4e7691c89bd477334ce67ae91c20b57", "chunk": "diff --git a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\nindex dc321a8a9..5c5f70744 100644\n--- a/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n+++ b/ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java\n\n@@ -384,9 +386,4 @@ class AmbrySecurityService implements SecurityService {\n       }\n     }\n   }\n-\n-  static {\n-    OPERATIONS = Collections.unmodifiableSet(Utils.getStaticFieldValuesAsStrings(Operations.class)\n-        .collect(Collectors.toCollection(() -> new TreeSet<>(String.CASE_INSENSITIVE_ORDER))));\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMzQ3Mg==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r485723472", "bodyText": "why move this variable down here?", "author": "cgtz", "createdAt": "2020-09-09T15:57:10Z", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -376,6 +416,8 @@ public void onCompletion(Long result, Exception exception) {\n         routerCallback.onPollReady();\n       }\n     };\n+    // the index of the next chunk that is to be written out to the asyncWritableChannel.\n+    private int indexOfNextChunkToWriteOut = 0;", "originalCommit": "6370fce4afeeb8ef279ed3e26bdf8cbafbfdcf35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5NjMyMg==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r487196322", "bodyText": "It was auto moved by intellij code formatting tool. Let me know if you want me to move it back.", "author": "ankagrawal", "createdAt": "2020-09-11T17:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMzQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5OTQ2NA==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r487199464", "bodyText": "Ah, it doesn't do that for me since I don't have rearrange code checked in the formatting options. Just keep it in whatever place you feel is best or most logical, I don't think we have any designated style for this", "author": "cgtz", "createdAt": "2020-09-11T17:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMzQ3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0OTE4OA==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r485749188", "bodyText": "This seems to always set the size to the size of the first chunk regardless of which chunk is being fetched. Also, why can't this be done in the chunk == firstChunk block above? It looks like we have all of the necessary pieces to complete the operation at that time (BlobInfo for the properties of the composite blob, ChunkMetadata list to get the datachunk size, segment index from options)\nEDIT: Oh, I remember now that the first chunk internal logic already filters the list down to just the segment of interest. However, I'm still wondering what prevents this from working in the firstChunk block?", "author": "cgtz", "createdAt": "2020-09-09T16:26:07Z", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -252,15 +236,49 @@ private void onChunkOperationComplete(GetChunk chunk) {\n             routerMetrics.onGetBlobError(e, options, isEncrypted);\n           }\n         }\n-        NonBlockingRouter.completeOperation(null, getOperationCallback, operationResult, e);\n+        // We don't complete operation in case of segmented blob, as we don't have all the header information until we fetch the segmented chunk.\n+        if (e != null || !options.getBlobOptions.hasBlobSegmentIdx()) {\n+          NonBlockingRouter.completeOperation(null, getOperationCallback, operationResult, e);\n+        }\n       }\n+    } else if (options.getBlobOptions.hasBlobSegmentIdx()) {\n+      // We have fetched the segmented chunk, and there cannot be any more chunks to fetch now.\n+      fixBlobSizeIfRequired(blobInfo.getBlobProperties().getBlobSize(),\n+          firstChunk.getChunkMetadataList().get(0).getSize());", "originalCommit": "6370fce4afeeb8ef279ed3e26bdf8cbafbfdcf35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwODI1Nw==", "url": "https://github.com/linkedin/ambry/pull/1616#discussion_r486808257", "bodyText": "You are right about being able to do it in the firstChunk block itself. fixed it!", "author": "ankagrawal", "createdAt": "2020-09-11T06:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0OTE4OA=="}], "type": "inlineReview", "revised_code": {"commit": "92d16597d4e7691c89bd477334ce67ae91c20b57", "chunk": "diff --git a/ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java b/ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java\nindex 1313935da..bd5979b8c 100644\n--- a/ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java\n+++ b/ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java\n\n@@ -236,21 +239,11 @@ class GetBlobOperation extends GetOperation {\n             routerMetrics.onGetBlobError(e, options, isEncrypted);\n           }\n         }\n-        // We don't complete operation in case of segmented blob, as we don't have all the header information until we fetch the segmented chunk.\n-        if (e != null || !options.getBlobOptions.hasBlobSegmentIdx()) {\n-          NonBlockingRouter.completeOperation(null, getOperationCallback, operationResult, e);\n-        }\n+        NonBlockingRouter.completeOperation(null, getOperationCallback, operationResult, e);\n       }\n-    } else if (options.getBlobOptions.hasBlobSegmentIdx()) {\n-      // We have fetched the segmented chunk, and there cannot be any more chunks to fetch now.\n-      fixBlobSizeIfRequired(blobInfo.getBlobProperties().getBlobSize(),\n-          firstChunk.getChunkMetadataList().get(0).getSize());\n-      operationResult = new GetBlobResultInternal(new GetBlobResult(blobInfo, blobDataChannel), null);\n-      NonBlockingRouter.completeOperation(null, getOperationCallback, operationResult, e);\n     }\n-    boolean shouldWriteToChannel = !(options.getBlobOptions.hasBlobSegmentIdx() && chunk == firstChunk);\n     chunk.postCompletionCleanup();\n-    if (shouldWriteToChannel && blobDataChannel != null) {\n+    if (blobDataChannel != null) {\n       blobDataChannel.maybeWriteToChannel();\n     }\n   }\n"}}, {"oid": "92d16597d4e7691c89bd477334ce67ae91c20b57", "url": "https://github.com/linkedin/ambry/commit/92d16597d4e7691c89bd477334ce67ae91c20b57", "message": "Address review comment to move the logic to firstChunk block", "committedDate": "2020-09-11T06:48:53Z", "type": "commit"}, {"oid": "9373464bd417ce24219186360b53f2fe96b52f1a", "url": "https://github.com/linkedin/ambry/commit/9373464bd417ce24219186360b53f2fe96b52f1a", "message": "fix comments", "committedDate": "2020-09-11T06:51:38Z", "type": "commit"}]}