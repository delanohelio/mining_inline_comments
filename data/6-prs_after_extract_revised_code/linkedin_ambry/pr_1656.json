{"pr_number": 1656, "pr_title": "Fix test failures in BlobStoreStatsTest and GetBlobOperationTest", "pr_createdAt": "2020-10-12T23:54:06Z", "pr_url": "https://github.com/linkedin/ambry/pull/1656", "timeline": [{"oid": "e6adfa891251709467d87644d90ff2abe9be0bf0", "url": "https://github.com/linkedin/ambry/commit/e6adfa891251709467d87644d90ff2abe9be0bf0", "message": "Fix test failures in BlobStoreStatsTest", "committedDate": "2020-10-12T23:50:09Z", "type": "commit"}, {"oid": "142597248818fafb0895366890f8b971030b97b8", "url": "https://github.com/linkedin/ambry/commit/142597248818fafb0895366890f8b971030b97b8", "message": "Fix a test failure in GetBlobOperationTest", "committedDate": "2020-10-13T05:41:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2Njk0NQ==", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504166945", "bodyText": "+1 to AtomicReference", "author": "lightningrob", "createdAt": "2020-10-13T18:21:34Z", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1549,15 +1557,15 @@ private void onInvalidRange(Exception exception) {\n class DecryptCallBackResultInfo {\n   volatile boolean decryptJobComplete;\n   volatile Exception exception;\n-  volatile DecryptJob.DecryptJobResult result;\n+  AtomicReference<DecryptJob.DecryptJobResult> result = new AtomicReference<>();", "originalCommit": "142597248818fafb0895366890f8b971030b97b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3MzIxNA==", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504173214", "bodyText": "If you pull latest master branch, you can use:\nif (!TestUtils.checkAndSleep(() -> blobStoreStats.isRecentEntryQueueEnabled(), 10000)) {\n  throw new TimeoutException(\"Time out to wait for IndexScanner to finish\");\n}", "author": "lightningrob", "createdAt": "2020-10-13T18:32:55Z", "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreStatsTest.java", "diffHunk": "@@ -752,7 +754,15 @@ public void testBucketingWithEmptyIndexToBegin()\n     throttlers.put(BlobStoreStats.IO_SCHEDULER_JOB_TYPE, mockThrottler);\n     int bucketCount = 50;\n     BlobStoreStats blobStoreStats = setupBlobStoreStats(bucketCount, 0);\n-    int expectedThrottleCount = state.referenceIndex.size();\n+    // Make sure the index scanner is finished and we can enqueue\n+    long recentEntryQueueTimeout = 10 * SystemTime.MsPerSec + System.currentTimeMillis();\n+    while (!blobStoreStats.isRecentEntryQueueEnabled()) {", "originalCommit": "142597248818fafb0895366890f8b971030b97b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3MzcwMA==", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504173700", "bodyText": "nit, it may be a bit more readable to do the getandset on this line:\nDecryptJob.DecryptJobResult result = decryptCallbackResultInfo.result.getAndSet(null);\nif (result != null) {...", "author": "cgtz", "createdAt": "2020-10-13T18:33:49Z", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -715,13 +716,17 @@ protected void maybeProcessCallbacks() {\n         // Only when the blob is encrypted should we need to call this method. When finish decryption, we don't need\n         // response info anymore.\n         if (decryptCallbackResultInfo.exception == null) {\n-          chunkIndexToBuf.put(chunkIndex,\n-              filterChunkToRange(decryptCallbackResultInfo.result.getDecryptedBlobContent()));\n-          numChunksRetrieved.incrementAndGet();\n+          DecryptJob.DecryptJobResult result = null;", "originalCommit": "142597248818fafb0895366890f8b971030b97b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}