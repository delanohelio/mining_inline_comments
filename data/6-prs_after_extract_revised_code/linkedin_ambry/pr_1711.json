{"pr_number": 1711, "pr_title": "[HTTP2_REPLICATION] Changes to support http2 Replication", "pr_createdAt": "2020-12-02T07:59:57Z", "pr_url": "https://github.com/linkedin/ambry/pull/1711", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4MzY5Mw==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r534583693", "bodyText": "It seems like this method getPortToConnectTo only returns the port to replication. If so, can you also update the comment in the interface for future reference?", "author": "justinlin-linkedin", "createdAt": "2020-12-03T00:51:22Z", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/AmbryServerDataNode.java", "diffHunk": "@@ -58,13 +59,17 @@\n     this.rackId = rackId;\n     this.xid = xid;\n     this.sslEnabledDataCenters = Utils.splitString(clusterMapConfig.clusterMapSslEnabledDatacenters, \",\");\n+    this.enableHttp2Replication = clusterMapConfig.clusterMapEnableHttp2Replication;\n     this.clusterManagerCallback = clusterManagerCallback;\n     validateHostName(clusterMapConfig.clusterMapResolveHostnames, hostName);\n     validatePorts(plainTextPort, sslPort, http2Port, sslEnabledDataCenters.contains(dataCenterName));\n   }\n \n   @Override\n   public Port getPortToConnectTo() {\n+    if (enableHttp2Replication) {\n+      return http2Port;", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYwMDQxMg==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r534600412", "bodyText": "this not going to work, since the underlying input stream for getResponse is a DataInputStream not a NettyByteBufDataInputStream. check out line 1072.\nWe can make ChannelOutput return DataInputStream in getInputStream method, this would fix the problem.", "author": "justinlin-linkedin", "createdAt": "2020-12-03T01:35:05Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -715,12 +717,16 @@ void fixMissingStoreKeys(ConnectedChannel connectedChannel, List<RemoteReplicaIn\n             + \" should be the same and greater than zero\");\n       }\n       DataNodeId remoteNode = replicasToReplicatePerNode.get(0).getReplicaId().getDataNodeId();\n-      GetResponse getResponse =\n+      getResponse =\n           getMessagesForMissingKeys(connectedChannel, exchangeMetadataResponseList, replicasToReplicatePerNode,\n               remoteNode, remoteColoGetRequestForStandby);\n       writeMessagesToLocalStoreAndAdvanceTokens(exchangeMetadataResponseList, getResponse, replicasToReplicatePerNode,\n           remoteNode, remoteColoGetRequestForStandby);\n     } finally {\n+      if (getResponse != null && getResponse.getInputStream() instanceof NettyByteBufDataInputStream) {\n+        // if the InputStream is NettyByteBufDataInputStream based, it's time to release its buffer.\n+        ((NettyByteBufDataInputStream) (getResponse.getInputStream())).getBuffer().release();\n+      }", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYwMjI3OA==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r534602278", "bodyText": "logger? or maybe remove?", "author": "justinlin-linkedin", "createdAt": "2020-12-03T01:40:01Z", "path": "ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java", "diffHunk": "@@ -98,10 +98,12 @@ public NonBlockingRouterFactory(VerifiableProperties verifiableProperties, Clust\n     time = SystemTime.getInstance();\n     if (new RouterConfig(verifiableProperties).routerEnableHttp2NetworkClient) {\n       networkClientFactory = new Http2NetworkClientFactory(http2ClientMetrics, http2ClientConfig, sslFactory, time);\n+      System.out.println(\"enable routerEnableHttp2NetworkClient\");", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b17999e955b16b288e498c0539bed152f793d6a", "chunk": "diff --git a/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java b/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\nindex cffd93757..efa51a952 100644\n--- a/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\n+++ b/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\n\n@@ -98,12 +98,10 @@ public class NonBlockingRouterFactory implements RouterFactory {\n     time = SystemTime.getInstance();\n     if (new RouterConfig(verifiableProperties).routerEnableHttp2NetworkClient) {\n       networkClientFactory = new Http2NetworkClientFactory(http2ClientMetrics, http2ClientConfig, sslFactory, time);\n-      System.out.println(\"enable routerEnableHttp2NetworkClient\");\n     } else {\n       networkClientFactory = new SocketNetworkClientFactory(networkMetrics, networkConfig, sslFactory,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortSsl, routerConfig.routerConnectionCheckoutTimeoutMs, time);\n-      System.out.println(\"not enable routerEnableHttp2NetworkClient\");\n     }\n     KeyManagementServiceFactory kmsFactory =\n         Utils.getObj(routerConfig.routerKeyManagementServiceFactory, verifiableProperties,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYwMjM0NA==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r534602344", "bodyText": "same above.", "author": "justinlin-linkedin", "createdAt": "2020-12-03T01:40:09Z", "path": "ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java", "diffHunk": "@@ -98,10 +98,12 @@ public NonBlockingRouterFactory(VerifiableProperties verifiableProperties, Clust\n     time = SystemTime.getInstance();\n     if (new RouterConfig(verifiableProperties).routerEnableHttp2NetworkClient) {\n       networkClientFactory = new Http2NetworkClientFactory(http2ClientMetrics, http2ClientConfig, sslFactory, time);\n+      System.out.println(\"enable routerEnableHttp2NetworkClient\");\n     } else {\n       networkClientFactory = new SocketNetworkClientFactory(networkMetrics, networkConfig, sslFactory,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortSsl, routerConfig.routerConnectionCheckoutTimeoutMs, time);\n+      System.out.println(\"not enable routerEnableHttp2NetworkClient\");", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b17999e955b16b288e498c0539bed152f793d6a", "chunk": "diff --git a/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java b/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\nindex cffd93757..efa51a952 100644\n--- a/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\n+++ b/ambry-router/src/main/java/com/github/ambry/router/NonBlockingRouterFactory.java\n\n@@ -98,12 +98,10 @@ public class NonBlockingRouterFactory implements RouterFactory {\n     time = SystemTime.getInstance();\n     if (new RouterConfig(verifiableProperties).routerEnableHttp2NetworkClient) {\n       networkClientFactory = new Http2NetworkClientFactory(http2ClientMetrics, http2ClientConfig, sslFactory, time);\n-      System.out.println(\"enable routerEnableHttp2NetworkClient\");\n     } else {\n       networkClientFactory = new SocketNetworkClientFactory(networkMetrics, networkConfig, sslFactory,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText,\n           routerConfig.routerScalingUnitMaxConnectionsPerPortSsl, routerConfig.routerConnectionCheckoutTimeoutMs, time);\n-      System.out.println(\"not enable routerEnableHttp2NetworkClient\");\n     }\n     KeyManagementServiceFactory kmsFactory =\n         Utils.getObj(routerConfig.routerKeyManagementServiceFactory, verifiableProperties,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NzI1Mw==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r535687253", "bodyText": "replace 8 with Long.BYTES", "author": "cgtz", "createdAt": "2020-12-03T22:23:21Z", "path": "ambry-network/src/main/java/com/github/ambry/network/http2/Http2BlockingChannel.java", "diffHunk": "@@ -112,7 +112,9 @@ public ChannelOutput receive() throws IOException {\n       throw new IOException(\"Failed to receive response from \" + getRemoteHost() + \":\" + getRemotePort(), e);\n     }\n     DataInputStream dataInputStream = new NettyByteBufDataInputStream(responseByteBuf);\n-    return new ChannelOutput(dataInputStream, dataInputStream.readLong());\n+    // Because readLong() is called to get entire stream size(long),\n+    // the size of remaining data should be dataInputStream.readLong() - 8\n+    return new ChannelOutput(dataInputStream, dataInputStream.readLong() - 8);", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b17999e955b16b288e498c0539bed152f793d6a", "chunk": "diff --git a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2BlockingChannel.java b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2BlockingChannel.java\nindex 61fd165a8..01c845c2e 100644\n--- a/ambry-network/src/main/java/com/github/ambry/network/http2/Http2BlockingChannel.java\n+++ b/ambry-network/src/main/java/com/github/ambry/network/http2/Http2BlockingChannel.java\n\n@@ -111,10 +111,10 @@ public class Http2BlockingChannel implements ConnectedChannel {\n     } catch (InterruptedException | ExecutionException | TimeoutException e) {\n       throw new IOException(\"Failed to receive response from \" + getRemoteHost() + \":\" + getRemotePort(), e);\n     }\n-    DataInputStream dataInputStream = new NettyByteBufDataInputStream(responseByteBuf);\n+    NettyByteBufDataInputStream dataInputStream = new NettyByteBufDataInputStream(responseByteBuf);\n     // Because readLong() is called to get entire stream size(long),\n     // the size of remaining data should be dataInputStream.readLong() - 8\n-    return new ChannelOutput(dataInputStream, dataInputStream.readLong() - 8);\n+    return new ChannelOutput(dataInputStream, dataInputStream.readLong() - Long.BYTES);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5NjgzMg==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r535696832", "bodyText": "Do you think we will eventually use DataNodeId.getPortToConnectTo in the router too? If so, we may want to change the config name to clusterMapEnableHttp2Client (and deprecate the router config at some point) so that it makes sense for both the router and replication.", "author": "cgtz", "createdAt": "2020-12-03T22:41:39Z", "path": "ambry-server/src/main/java/com/github/ambry/server/AmbryServer.java", "diffHunk": "@@ -228,7 +228,7 @@ public void startup() throws InstantiationException {\n \n       SSLFactory sslFactory = new NettySslHttp2Factory(sslConfig);\n \n-      if (replicationConfig.replicationEnableHttp2) {\n+      if (clusterMapConfig.clusterMapEnableHttp2Replication) {", "originalCommit": "6b8a1fde596b5a4edb84c2d73fbd1aae470b3513", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2OTUwMQ==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r537769501", "bodyText": "Yes.\nI had an old comment:\n  /**\n   * A temporary method to get port before http2 based replication is implemented.\n   * TODO: remove this once http2 based replication is implemented.\n   * @param replicaId The {@link ReplicaId} to connect to.\n   * @param routerEnableHttp2NetworkClient  if http2 network client should be enabled.\n   * @return the port to connect.\n   */\n  static Port getPortToConnectTo(ReplicaId replicaId, boolean routerEnableHttp2NetworkClient) {\n    if (routerEnableHttp2NetworkClient) {\n      return new Port(replicaId.getDataNodeId().getHttp2Port(), PortType.HTTP2);\n    } else {\n      return replicaId.getDataNodeId().getPortToConnectTo();\n    }\n  }\n\nThe plan is:\n\nApply this PR and verify http2 replication works\nDeprecate sslEnabledDataCenters and routerEnableHttp2NetworkClient. Rename clusterMapEnableHttp2Replication to clusterMapEnableHttp2.\n\nAfter deprecating sslEnabledDataCenters, the default connection is SSL based, if clusterMapEnableHttp2 is enabled, it's Http2 based.\nBoth frontend and server will be accessible to  clusterMapEnableHttp2.", "author": "zzmao", "createdAt": "2020-12-07T19:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5NjgzMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2b17999e955b16b288e498c0539bed152f793d6a", "url": "https://github.com/linkedin/ambry/commit/2b17999e955b16b288e498c0539bed152f793d6a", "message": "getInputStream refactor", "committedDate": "2020-12-07T21:54:42Z", "type": "forcePushed"}, {"oid": "a2565352e3b635eedab6fb9042b125e2a17ec8d4", "url": "https://github.com/linkedin/ambry/commit/a2565352e3b635eedab6fb9042b125e2a17ec8d4", "message": "getInputStream refactor.", "committedDate": "2020-12-11T21:13:49Z", "type": "forcePushed"}, {"oid": "bd68fb1bc7954741787315b524938c69fb8496e4", "url": "https://github.com/linkedin/ambry/commit/bd68fb1bc7954741787315b524938c69fb8496e4", "message": "getInputStream refactor", "committedDate": "2020-12-12T22:50:13Z", "type": "forcePushed"}, {"oid": "6721c5b437149b3c8d29d5a53030858a74ff8db4", "url": "https://github.com/linkedin/ambry/commit/6721c5b437149b3c8d29d5a53030858a74ff8db4", "message": "getInputStream refactor", "committedDate": "2020-12-16T00:10:49Z", "type": "forcePushed"}, {"oid": "6c48598e4cff875c8cc53ff5830013a969ccbcfd", "url": "https://github.com/linkedin/ambry/commit/6c48598e4cff875c8cc53ff5830013a969ccbcfd", "message": "getInputStream refactor", "committedDate": "2020-12-16T20:01:25Z", "type": "forcePushed"}, {"oid": "dabc10136643ba693a9b4a388fd556c8232c665d", "url": "https://github.com/linkedin/ambry/commit/dabc10136643ba693a9b4a388fd556c8232c665d", "message": "increase timeout for test", "committedDate": "2020-12-18T01:19:48Z", "type": "forcePushed"}, {"oid": "3f00094f28ef0dae754f03ad3e8c256e19de553c", "url": "https://github.com/linkedin/ambry/commit/3f00094f28ef0dae754f03ad3e8c256e19de553c", "message": "2nd round", "committedDate": "2020-12-18T23:49:56Z", "type": "forcePushed"}, {"oid": "6070e6bdaf17b1956730e39df797ee4c633aa6f5", "url": "https://github.com/linkedin/ambry/commit/6070e6bdaf17b1956730e39df797ee4c633aa6f5", "message": "Changes to support http2 Replication", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "970275fd32d6c3122cd8d6fa7cc4c1d0e1f55da0", "url": "https://github.com/linkedin/ambry/commit/970275fd32d6c3122cd8d6fa7cc4c1d0e1f55da0", "message": "address comments", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "d84ff7c02c77eda99050f26a633d9648fe608458", "url": "https://github.com/linkedin/ambry/commit/d84ff7c02c77eda99050f26a633d9648fe608458", "message": "getInputStream refactor", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "6617a3cc184c7c9676391d9a69b58c00bcecc115", "url": "https://github.com/linkedin/ambry/commit/6617a3cc184c7c9676391d9a69b58c00bcecc115", "message": "increase timeout for test", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "454c6c6948dacc39d5359b0c1eb27a24aa85720a", "url": "https://github.com/linkedin/ambry/commit/454c6c6948dacc39d5359b0c1eb27a24aa85720a", "message": "h2 rep", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "36a26022a8b7591dae65b732625a90a84164419f", "url": "https://github.com/linkedin/ambry/commit/36a26022a8b7591dae65b732625a90a84164419f", "message": "add release stream fun", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "fb95044c4e44c55b7214028a2cb26da296b63b55", "url": "https://github.com/linkedin/ambry/commit/fb95044c4e44c55b7214028a2cb26da296b63b55", "message": "first round", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "0a1c7f24b3eea9d7587842d7e674dd626907528e", "url": "https://github.com/linkedin/ambry/commit/0a1c7f24b3eea9d7587842d7e674dd626907528e", "message": "remove get release stream", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "f438647075a4dc21600c80871743750f7489a8a4", "url": "https://github.com/linkedin/ambry/commit/f438647075a4dc21600c80871743750f7489a8a4", "message": "2nd round", "committedDate": "2020-12-21T18:20:25Z", "type": "commit"}, {"oid": "283538dec736126875386f07233e48a2d301d7b8", "url": "https://github.com/linkedin/ambry/commit/283538dec736126875386f07233e48a2d301d7b8", "message": "polish", "committedDate": "2020-12-21T18:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4MjMyNA==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546882324", "bodyText": "remove this?", "author": "jsjtzyy", "createdAt": "2020-12-21T19:12:50Z", "path": "ambry-api/src/main/java/com/github/ambry/network/ChannelOutput.java", "diffHunk": "@@ -22,19 +23,23 @@\n  */\n public class ChannelOutput {\n \n-  private InputStream inputStream;\n+  private DataInputStream inputStream;\n \n   private long streamSize;\n \n-  public ChannelOutput(InputStream inputStream, long streamSize) {\n+  public ChannelOutput(DataInputStream inputStream, long streamSize) {\n     this.inputStream = inputStream;\n     this.streamSize = streamSize;\n   }\n \n-  public InputStream getInputStream() {\n+  public DataInputStream getInputStream() {\n     return inputStream;\n   }\n \n+//  public DataInputStream getDataInputStream() {\n+//\n+//  }", "originalCommit": "3f00094f28ef0dae754f03ad3e8c256e19de553c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4OTM0Mg==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546889342", "bodyText": "my latest changes were not in. just pushed.", "author": "zzmao", "createdAt": "2020-12-21T19:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4MjMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/network/ChannelOutput.java b/ambry-api/src/main/java/com/github/ambry/network/ChannelOutput.java\nindex a59d7c750..37fa9cc39 100644\n--- a/ambry-api/src/main/java/com/github/ambry/network/ChannelOutput.java\n+++ b/ambry-api/src/main/java/com/github/ambry/network/ChannelOutput.java\n\n@@ -36,10 +35,6 @@ public class ChannelOutput {\n     return inputStream;\n   }\n \n-//  public DataInputStream getDataInputStream() {\n-//\n-//  }\n-\n   public long getStreamSize() {\n     return streamSize;\n   }\n"}}, {"oid": "283538dec736126875386f07233e48a2d301d7b8", "url": "https://github.com/linkedin/ambry/commit/283538dec736126875386f07233e48a2d301d7b8", "message": "polish", "committedDate": "2020-12-21T18:32:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NTI1NQ==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546945255", "bodyText": "nit: remove necessary DataInputStream import.", "author": "jsjtzyy", "createdAt": "2020-12-21T21:45:44Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/CloudAndStoreReplicationTest.java", "diffHunk": "@@ -301,7 +301,7 @@ private void testGetOnServerNode(Map<BlobId, Integer> blobIdToSizeMap, DataNodeI\n \n     channel.send(getRequest);\n     GetResponse getResponse =\n-        GetResponse.readFrom(new DataInputStream(channel.receive().getInputStream()), recoveryCluster.getClusterMap());\n+        GetResponse.readFrom(channel.receive().getInputStream(), recoveryCluster.getClusterMap());", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NTgyNQ==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546945825", "bodyText": "same here for InputStream", "author": "jsjtzyy", "createdAt": "2020-12-21T21:47:03Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/DirectSender.java", "diffHunk": "@@ -23,6 +23,7 @@\n import com.github.ambry.network.ConnectedChannel;\n import com.github.ambry.protocol.PutRequest;\n import com.github.ambry.protocol.PutResponse;\n+import com.github.ambry.utils.NettyByteBufDataInputStream;\n import io.netty.buffer.Unpooled;\n import java.io.DataInputStream;\n import java.io.InputStream;", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/DirectSender.java b/ambry-server/src/integration-test/java/com/github/ambry/server/DirectSender.java\nindex 5ca1175cf..d9a2dda32 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/DirectSender.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/DirectSender.java\n\n@@ -26,7 +26,6 @@ import com.github.ambry.protocol.PutResponse;\n import com.github.ambry.utils.NettyByteBufDataInputStream;\n import io.netty.buffer.Unpooled;\n import java.io.DataInputStream;\n-import java.io.InputStream;\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NzA5NQ==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546947095", "bodyText": "Minor: can be simplified to\nPutResponse response0 = PutResponse.readFrom(channel.sendAndReceive(putRequest0).getInputStream());", "author": "jsjtzyy", "createdAt": "2020-12-21T21:50:17Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java", "diffHunk": "@@ -389,8 +389,8 @@ void putBlob(BlobId blobId, BlobProperties properties, byte[] encryptionKey, byt\n         new PutRequest(1, \"client1\", blobId, properties, ByteBuffer.wrap(usermetadata), Unpooled.wrappedBuffer(data),\n             properties.getBlobSize(), BlobType.DataBlob, encryptionKey == null ? null : ByteBuffer.wrap(encryptionKey));\n     channel.send(putRequest0);\n-    InputStream putResponseStream = channel.receive().getInputStream();\n-    PutResponse response0 = PutResponse.readFrom(new DataInputStream(putResponseStream));\n+    DataInputStream putResponseStream = channel.receive().getInputStream();\n+    PutResponse response0 = PutResponse.readFrom(putResponseStream);", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\nindex 10ed43067..ed0feb16d 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n\n@@ -388,9 +388,7 @@ public class ServerHardDeleteTest {\n     PutRequest putRequest0 =\n         new PutRequest(1, \"client1\", blobId, properties, ByteBuffer.wrap(usermetadata), Unpooled.wrappedBuffer(data),\n             properties.getBlobSize(), BlobType.DataBlob, encryptionKey == null ? null : ByteBuffer.wrap(encryptionKey));\n-    channel.send(putRequest0);\n-    DataInputStream putResponseStream = channel.receive().getInputStream();\n-    PutResponse response0 = PutResponse.readFrom(putResponseStream);\n+    PutResponse response0 = PutResponse.readFrom(channel.sendAndReceive(putRequest0).getInputStream());\n     Assert.assertEquals(ServerErrorCode.No_Error, response0.getError());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NzIzNA==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546947234", "bodyText": "same here", "author": "jsjtzyy", "createdAt": "2020-12-21T21:50:39Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java", "diffHunk": "@@ -403,8 +403,8 @@ void putBlob(BlobId blobId, BlobProperties properties, byte[] encryptionKey, byt\n   void deleteBlob(BlobId blobId, ConnectedChannel channel) throws IOException {\n     DeleteRequest deleteRequest = new DeleteRequest(1, \"client1\", blobId, time.milliseconds());\n     channel.send(deleteRequest);\n-    InputStream deleteResponseStream = channel.receive().getInputStream();\n-    DeleteResponse deleteResponse = DeleteResponse.readFrom(new DataInputStream(deleteResponseStream));\n+    DataInputStream deleteResponseStream = channel.receive().getInputStream();\n+    DeleteResponse deleteResponse = DeleteResponse.readFrom(deleteResponseStream);", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\nindex 10ed43067..ed0feb16d 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n\n@@ -402,9 +400,7 @@ public class ServerHardDeleteTest {\n    */\n   void deleteBlob(BlobId blobId, ConnectedChannel channel) throws IOException {\n     DeleteRequest deleteRequest = new DeleteRequest(1, \"client1\", blobId, time.milliseconds());\n-    channel.send(deleteRequest);\n-    DataInputStream deleteResponseStream = channel.receive().getInputStream();\n-    DeleteResponse deleteResponse = DeleteResponse.readFrom(deleteResponseStream);\n+    DeleteResponse deleteResponse = DeleteResponse.readFrom(channel.sendAndReceive(deleteRequest).getInputStream());\n     Assert.assertEquals(ServerErrorCode.No_Error, deleteResponse.getError());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NzM2NA==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546947364", "bodyText": "same here", "author": "jsjtzyy", "createdAt": "2020-12-21T21:50:59Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java", "diffHunk": "@@ -417,8 +417,8 @@ void deleteBlob(BlobId blobId, ConnectedChannel channel) throws IOException {\n   void undeleteBlob(BlobId blobId, ConnectedChannel channel) throws IOException {\n     UndeleteRequest deleteRequest = new UndeleteRequest(1, \"client1\", blobId, time.milliseconds());\n     channel.send(deleteRequest);\n-    InputStream undeleteResponseStream = channel.receive().getInputStream();\n-    UndeleteResponse undeleteResponse = UndeleteResponse.readFrom(new DataInputStream(undeleteResponseStream));\n+    DataInputStream undeleteResponseStream = channel.receive().getInputStream();\n+    UndeleteResponse undeleteResponse = UndeleteResponse.readFrom(undeleteResponseStream);", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\nindex 10ed43067..ed0feb16d 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n\n@@ -415,10 +411,9 @@ public class ServerHardDeleteTest {\n    * @throws IOException\n    */\n   void undeleteBlob(BlobId blobId, ConnectedChannel channel) throws IOException {\n-    UndeleteRequest deleteRequest = new UndeleteRequest(1, \"client1\", blobId, time.milliseconds());\n-    channel.send(deleteRequest);\n-    DataInputStream undeleteResponseStream = channel.receive().getInputStream();\n-    UndeleteResponse undeleteResponse = UndeleteResponse.readFrom(undeleteResponseStream);\n+    UndeleteRequest unDeleteRequest = new UndeleteRequest(1, \"client1\", blobId, time.milliseconds());\n+    UndeleteResponse undeleteResponse =\n+        UndeleteResponse.readFrom(channel.sendAndReceive(unDeleteRequest).getInputStream());\n     Assert.assertEquals(\"BlobId \" + blobId + \" undelete failed\", ServerErrorCode.No_Error, undeleteResponse.getError());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk0NzQ4OQ==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546947489", "bodyText": "same here (I noticed other files may be simplified too, it's ok to defer such simplification to future PR)", "author": "jsjtzyy", "createdAt": "2020-12-21T21:51:16Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java", "diffHunk": "@@ -456,8 +456,8 @@ void getAndVerify(ConnectedChannel channel, int blobsCount) throws Exception {\n     for (MessageFormatFlags flag : flags) {\n       GetRequest getRequest = new GetRequest(1, \"clientid2\", flag, partitionRequestInfoList, GetOption.Include_All);\n       channel.send(getRequest);\n-      InputStream stream = channel.receive().getInputStream();\n-      GetResponse resp = GetResponse.readFrom(new DataInputStream(stream), mockClusterMap);\n+      DataInputStream stream = channel.receive().getInputStream();\n+      GetResponse resp = GetResponse.readFrom(stream, mockClusterMap);", "originalCommit": "283538dec736126875386f07233e48a2d301d7b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\nindex 10ed43067..ed0feb16d 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerHardDeleteTest.java\n\n@@ -455,9 +450,7 @@ public class ServerHardDeleteTest {\n     flags.add(MessageFormatFlags.Blob);\n     for (MessageFormatFlags flag : flags) {\n       GetRequest getRequest = new GetRequest(1, \"clientid2\", flag, partitionRequestInfoList, GetOption.Include_All);\n-      channel.send(getRequest);\n-      DataInputStream stream = channel.receive().getInputStream();\n-      GetResponse resp = GetResponse.readFrom(stream, mockClusterMap);\n+      GetResponse resp = GetResponse.readFrom(channel.sendAndReceive(getRequest).getInputStream(), mockClusterMap);\n       if (flag == MessageFormatFlags.BlobProperties) {\n         for (int i = 0; i < blobsCount; i++) {\n           BlobProperties propertyOutput = MessageFormatRecord.deserializeBlobProperties(resp.getInputStream());\n"}}, {"oid": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "url": "https://github.com/linkedin/ambry/commit/ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "message": "Yingyi comments", "committedDate": "2020-12-21T23:23:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk4MzM1Nw==", "url": "https://github.com/linkedin/ambry/pull/1711#discussion_r546983357", "bodyText": "nit: copy paste error?", "author": "jsjtzyy", "createdAt": "2020-12-21T23:29:40Z", "path": "ambry-server/src/integration-test/java/com/github/ambry/server/ServerTestUtil.java", "diffHunk": "@@ -2866,7 +2866,7 @@ static PutMessageFormatInputStream getPutMessageInputStreamForBlob(BlobId blobId\n     return blobIds;\n   }\n \n-  /**\n+  /*CloudAndStoreReplicationTest.java*", "originalCommit": "ad55181cf7564ebadee6fe87ce816336c0d1d9c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15f91b5dfa57509fffcc14e1c7beed9fc3135c86", "chunk": "diff --git a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerTestUtil.java b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerTestUtil.java\nindex c188084b4..f22e194ba 100644\n--- a/ambry-server/src/integration-test/java/com/github/ambry/server/ServerTestUtil.java\n+++ b/ambry-server/src/integration-test/java/com/github/ambry/server/ServerTestUtil.java\n\n@@ -2866,7 +2866,7 @@ final class ServerTestUtil {\n     return blobIds;\n   }\n \n-  /*CloudAndStoreReplicationTest.java*\n+  /*\n    * Release the Netty ByteBuf if the stream is NettyByteBufDataInputStream\n    * @param stream the input stream.\n    */\n"}}, {"oid": "15f91b5dfa57509fffcc14e1c7beed9fc3135c86", "url": "https://github.com/linkedin/ambry/commit/15f91b5dfa57509fffcc14e1c7beed9fc3135c86", "message": "yingyi", "committedDate": "2020-12-22T00:35:59Z", "type": "commit"}]}