{"pr_number": 1535, "pr_title": "Add lastUpdateTime for container and select container meet retention time during compaction", "pr_createdAt": "2020-05-26T18:11:36Z", "pr_url": "https://github.com/linkedin/ambry/pull/1535", "timeline": [{"oid": "b81f66b992287f755b634af31827545b42e338f4", "url": "https://github.com/linkedin/ambry/commit/b81f66b992287f755b634af31827545b42e338f4", "message": "Retention time support for container deletion", "committedDate": "2020-05-26T18:07:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNTczNg==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430615736", "bodyText": "we can give lastUpdateTime a default value\nprivate long lastUpdateTime = System. currentTimeMillis();\n\nThis way we don't have to change the constructor's signature.", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:20:29Z", "path": "ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java", "diffHunk": "@@ -29,6 +29,7 @@\n   private short id;\n   private String name;\n   private ContainerStatus status;\n+  private long lastUpdateTime;", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MDAyNA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431490024", "bodyText": "Updated.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNTczNg=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\nindex 1fa15c22c..f36d0fc36 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n\n@@ -29,11 +29,11 @@ public class ContainerBuilder {\n   private short id;\n   private String name;\n   private ContainerStatus status;\n-  private long lastUpdateTime;\n   private String description;\n   private short parentAccountId;\n \n   // optional\n+  private long lastUpdateTime = System.currentTimeMillis();\n   private boolean encrypted = ENCRYPTED_DEFAULT_VALUE;\n   private boolean previouslyEncrypted = PREVIOUSLY_ENCRYPTED_DEFAULT_VALUE;\n   private boolean cacheable = CACHEABLE_DEFAULT_VALUE;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNTc3NA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430615774", "bodyText": "The beauty of having builder pattern is to avoid this massive change when adding a new field. I suggest that we make lastUpdateTime as an optional here. We can give lastUpdateTime a default value and only set the lastUpdateTime when it's not the default value.\npublic ContainerBuilder(short id, String name, ContainerStatus status, String description, short parentAccountId) {\n    this.id = id;\n    this.name = name;\n    this.status = status;\n    this.description = description;\n    this.parentAccountId = parentAccountId;\n}\n\npublic ContainerBuilder lastUpdateTime(long val) {\n    this.lastUpdateTime = val;\n    return this;\n}", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:20:33Z", "path": "ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java", "diffHunk": "@@ -78,12 +80,13 @@ public ContainerBuilder(Container origin) {\n    * @param description The description of the {@link Container}.\n    * @param parentAccountId The id of the parent {@link Account} of the {@link Container} to build.\n    */\n-  public ContainerBuilder(short id, String name, ContainerStatus status, String description, short parentAccountId) {\n+  public ContainerBuilder(short id, String name, ContainerStatus status, String description, short parentAccountId, long lastUpdateTime) {", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MDQxOQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431490419", "bodyText": "Updated to make lastUpdateTime optional.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNTc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\nindex 1fa15c22c..f36d0fc36 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n\n@@ -80,13 +80,12 @@ public class ContainerBuilder {\n    * @param description The description of the {@link Container}.\n    * @param parentAccountId The id of the parent {@link Account} of the {@link Container} to build.\n    */\n-  public ContainerBuilder(short id, String name, ContainerStatus status, String description, short parentAccountId, long lastUpdateTime) {\n+  public ContainerBuilder(short id, String name, ContainerStatus status, String description, short parentAccountId) {\n     this.id = id;\n     this.name = name;\n     this.status = status;\n     this.description = description;\n     this.parentAccountId = parentAccountId;\n-    this.lastUpdateTime = lastUpdateTime;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNjg0Ng==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430616846", "bodyText": "this is a bad signature in builder. It should be\npublic ContainerBuilder lastUpdateTime(long val) {\n    this.lastUpdateTime = val;\n    return this;\n}\n\nIt's up to you to prefix set to the method name. I would not, but to keep it consistent with all the methods in this file, we probably should.", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:22:25Z", "path": "ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java", "diffHunk": "@@ -116,6 +119,14 @@ public ContainerBuilder setStatus(ContainerStatus status) {\n     return this;\n   }\n \n+  /**\n+   * Sets the last update time of the {@link Container} to build.\n+   */\n+  public Long setLastUpdateTime(Long lastUpdateTime) {", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzMDcxNg==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430630716", "bodyText": "Since we have already started using set for the other methods, and this builder is shared with Nuage, I think we should keep prefixing these with set. Not sure how this builder ended up having different naming conventions than all the other ones though.", "author": "cgtz", "createdAt": "2020-05-26T18:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNjg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MTYwMA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431491600", "bodyText": "Return ContainerBuilder instead of Long type and keep name prefixing with set for consistency.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNjg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\nindex 1fa15c22c..f36d0fc36 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/ContainerBuilder.java\n\n@@ -122,9 +121,9 @@ public class ContainerBuilder {\n   /**\n    * Sets the last update time of the {@link Container} to build.\n    */\n-  public Long setLastUpdateTime(Long lastUpdateTime) {\n+  public ContainerBuilder setLastUpdateTime(long lastUpdateTime) {\n     this.lastUpdateTime = lastUpdateTime;\n-    return lastUpdateTime;\n+    return this;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNzY4Nw==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430617687", "bodyText": "please don't change the current version.", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:23:53Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -478,6 +498,7 @@ JSONObject toJson() throws JSONException {\n         metadata.put(JSON_VERSION_KEY, JSON_VERSION_1);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n+        metadata.put(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MTk2NA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431491964", "bodyText": "Removed put for version one.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "64eea3cda811ca108182b6b5ad6112ab97f379a1", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 15b170e4f..6a42a9eeb 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -498,7 +499,6 @@ public class Container {\n         metadata.put(JSON_VERSION_KEY, JSON_VERSION_1);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n-        metadata.put(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);\n         metadata.put(STATUS_KEY, status.name());\n         metadata.put(DESCRIPTION_KEY, description);\n         metadata.put(IS_PRIVATE_KEY, !cacheable);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxODEyNQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430618125", "bodyText": "Please don't change the current version. Please add JSON_VERSON_3 and only in version_3 can we put container_last_update_time_key.", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:24:39Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -487,6 +508,7 @@ JSONObject toJson() throws JSONException {\n         metadata.put(Container.JSON_VERSION_KEY, JSON_VERSION_2);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n+        metadata.put(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNjQ3Nw==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430636477", "bodyText": "I think we should not create a version 3. version 2 was only created since we removed a field between v1 and v2.\nHowever, you are right that adding a new required field to an existing version will cause issues when deserializing existing records. Generally the best way to make the migration seamless for json documents is to make any new field optional in version 2.", "author": "cgtz", "createdAt": "2020-05-26T18:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxODEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjQxNg==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431492416", "bodyText": "Made the new field optional in version2.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxODEyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "64eea3cda811ca108182b6b5ad6112ab97f379a1", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 15b170e4f..6a42a9eeb 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -508,7 +508,7 @@ public class Container {\n         metadata.put(Container.JSON_VERSION_KEY, JSON_VERSION_2);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n-        metadata.put(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);\n+        metadata.putOpt(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);\n         metadata.put(Container.STATUS_KEY, status.name());\n         metadata.put(DESCRIPTION_KEY, description);\n         metadata.put(ENCRYPTED_KEY, encrypted);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxODI5MQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430618291", "bodyText": "please format this methood.", "author": "justinlin-linkedin", "createdAt": "2020-05-26T18:24:57Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -535,6 +557,12 @@ public ContainerStatus getStatus() {\n     return status;\n   }\n \n+  /**\n+   * Gets the last update time of the container.\n+   * @return The last update time of the container.\n+   */\n+  public Long getLastUpdateTime() {return lastUpdateTime;}", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjU3Nw==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431492577", "bodyText": "Done!", "author": "SophieGuo410", "createdAt": "2020-05-27T23:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxODI5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 15b170e4f..719597510 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -561,7 +561,9 @@ public class Container {\n    * Gets the last update time of the container.\n    * @return The last update time of the container.\n    */\n-  public Long getLastUpdateTime() {return lastUpdateTime;}\n+  public Long getLastUpdateTime() {\n+    return lastUpdateTime;\n+  }\n \n   /**\n    * Gets the description of the container.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNDgyNg==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430634826", "bodyText": "This will set the default time to whatever the timestamp was when this classes static initialization completed. Maybe the default time should be 0 for consistency? Also, generally prefer long over Long when there is no need for a primitive to be null and no need to use the long as part of a generic. This avoids unnecessary unboxing penalties.", "author": "cgtz", "createdAt": "2020-05-26T18:53:29Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -136,6 +137,21 @@\n    */\n   public static final ContainerStatus UNKNOWN_CONTAINER_STATUS = ContainerStatus.ACTIVE;\n \n+  /**\n+   * The last update time of {@link #UNKNOWN_CONTAINER}\n+   */\n+  public static final Long UNKNOWN_CONTAINER_LAST_UPDATE_TIME = System.currentTimeMillis();\n+\n+  /**\n+   * The last update time of {@link #DEFAULT_PUBLIC_CONTAINER}\n+   */\n+  public static final Long DEFAULT_PUBLIC_CONTAINER_LAST_UPDATE_TIME = System.currentTimeMillis();", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MzI1OA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431493258", "bodyText": "Updated the type to long and change the default time to 0 for consistency.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNDgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 15b170e4f..719597510 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -140,17 +140,17 @@ public class Container {\n   /**\n    * The last update time of {@link #UNKNOWN_CONTAINER}\n    */\n-  public static final Long UNKNOWN_CONTAINER_LAST_UPDATE_TIME = System.currentTimeMillis();\n+  public static final long UNKNOWN_CONTAINER_LAST_UPDATE_TIME = 0;\n \n   /**\n    * The last update time of {@link #DEFAULT_PUBLIC_CONTAINER}\n    */\n-  public static final Long DEFAULT_PUBLIC_CONTAINER_LAST_UPDATE_TIME = System.currentTimeMillis();\n+  public static final long DEFAULT_PUBLIC_CONTAINER_LAST_UPDATE_TIME = 0;\n \n   /**\n    * The last update time of {@link #DEFAULT_PRIVATE_CONTAINER}\n    */\n-  public static final Long DEFAULT_PRIVATE_CONTAINER_LAST_UPDATE_TIME = System.currentTimeMillis();\n+  public static final long DEFAULT_PRIVATE_CONTAINER_LAST_UPDATE_TIME = 0;\n \n   /**\n    * The status for the containers to be associated with the blobs that are put without specifying a target container,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNjgwNQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r430636805", "bodyText": "any new field added to an existing version should be optional so existing records can be deserialized by the new code.", "author": "cgtz", "createdAt": "2020-05-26T18:56:40Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -353,6 +371,7 @@ private Container(JSONObject metadata, short parentAccountId) throws JSONExcepti\n         id = (short) metadata.getInt(CONTAINER_ID_KEY);\n         name = metadata.getString(CONTAINER_NAME_KEY);\n         status = ContainerStatus.valueOf(metadata.getString(STATUS_KEY));\n+        lastUpdateTime = metadata.getLong(CONTAINER_LAST_UPDATE_TIME_KEY);", "originalCommit": "b81f66b992287f755b634af31827545b42e338f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MzkwNw==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431493907", "bodyText": "In version1, I assigned the default value which is 0. In version2, I made it optional for the new field.", "author": "SophieGuo410", "createdAt": "2020-05-27T23:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNjgwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 15b170e4f..719597510 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -371,7 +371,7 @@ public class Container {\n         id = (short) metadata.getInt(CONTAINER_ID_KEY);\n         name = metadata.getString(CONTAINER_NAME_KEY);\n         status = ContainerStatus.valueOf(metadata.getString(STATUS_KEY));\n-        lastUpdateTime = metadata.getLong(CONTAINER_LAST_UPDATE_TIME_KEY);\n+        lastUpdateTime = metadata.optLong(CONTAINER_LAST_UPDATE_TIME_KEY, UNKNOWN_CONTAINER_LAST_UPDATE_TIME);\n         description = metadata.optString(DESCRIPTION_KEY);\n         encrypted = metadata.optBoolean(ENCRYPTED_KEY, ENCRYPTED_DEFAULT_VALUE);\n         previouslyEncrypted = metadata.optBoolean(PREVIOUSLY_ENCRYPTED_KEY, PREVIOUSLY_ENCRYPTED_DEFAULT_VALUE);\n"}}, {"oid": "fcdcca1697a6297ca4727847c40d27f25ab56b6a", "url": "https://github.com/linkedin/ambry/commit/fcdcca1697a6297ca4727847c40d27f25ab56b6a", "message": "address comments", "committedDate": "2020-05-27T06:09:01Z", "type": "forcePushed"}, {"oid": "64eea3cda811ca108182b6b5ad6112ab97f379a1", "url": "https://github.com/linkedin/ambry/commit/64eea3cda811ca108182b6b5ad6112ab97f379a1", "message": "address comments", "committedDate": "2020-05-27T06:26:21Z", "type": "forcePushed"}, {"oid": "60bc6bdedd9ff6e224ab1cb8d122ee7a8a57e0aa", "url": "https://github.com/linkedin/ambry/commit/60bc6bdedd9ff6e224ab1cb8d122ee7a8a57e0aa", "message": "address comments", "committedDate": "2020-05-27T06:58:08Z", "type": "forcePushed"}, {"oid": "812e422491acb2f378230d425203ebad0d047fa9", "url": "https://github.com/linkedin/ambry/commit/812e422491acb2f378230d425203ebad0d047fa9", "message": "address comments", "committedDate": "2020-05-27T22:18:55Z", "type": "commit"}, {"oid": "812e422491acb2f378230d425203ebad0d047fa9", "url": "https://github.com/linkedin/ambry/commit/812e422491acb2f378230d425203ebad0d047fa9", "message": "address comments", "committedDate": "2020-05-27T22:18:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxMjg1NQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431512855", "bodyText": "The PR looks good after addressing people's comments.\nI have one concern:  lastUpdateTime sounds like a general update time. Any update can refer to it.\nBut in this PR, it is used as delete triggered time.", "author": "zzmao", "createdAt": "2020-05-28T00:13:56Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -61,6 +61,7 @@\n   static final String CONTAINER_NAME_KEY = \"containerName\";\n   static final String CONTAINER_ID_KEY = \"containerId\";\n   static final String STATUS_KEY = \"status\";\n+  static final String CONTAINER_LAST_UPDATE_TIME_KEY = \"lastUpdateTime\";", "originalCommit": "812e422491acb2f378230d425203ebad0d047fa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MjA0MA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r431992040", "bodyText": "I named the field in a general way intentionally cause for container deletion the lastUpdateTime should be when user mark container as DELETE_IN_PROGRESS(since after user mark the status, ACLs would be removed and they can't access this container). But for future we may use this field for different purpose. What do you think? If naming style should be more specific, I can change to deleteTriggerTime.", "author": "SophieGuo410", "createdAt": "2020-05-28T17:07:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxMjg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxMzAzOA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432013038", "bodyText": "If it's for general use cases, you might need to update this value for all container related update. Not only ACL changes, but all other container metadata changes. I prefer a narrow name:  deleteTriggerTime . @justinlin-linkedin @cgtz  any opinion?", "author": "zzmao", "createdAt": "2020-05-28T17:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxMjg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExODU0OQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432118549", "bodyText": "I am fine with deleteTriggerTime. From my past experience, we actually don't update  container that much, except for adding download content type in the whitelist and delete container. Of course we can update the container in anyway allowed but we just don't. And we don't even have a creation time, which indicates we just don't care about update time at all. So a delete time should be enough for a container.\nThat being said, if we start to care more about when the container is created, update and deleted, then, we might have to at least have a creation time and update time.", "author": "justinlin-linkedin", "createdAt": "2020-05-28T20:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxMjg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5MjAwOA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432192008", "bodyText": "Thank you all for the great explanation. Updated to deleteTriggerTime.", "author": "SophieGuo410", "createdAt": "2020-05-29T00:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxMjg1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c1b32931d02f663eba45a2773746501439f82ed8", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 0d78fa611..063f6b69d 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -61,7 +61,7 @@ public class Container {\n   static final String CONTAINER_NAME_KEY = \"containerName\";\n   static final String CONTAINER_ID_KEY = \"containerId\";\n   static final String STATUS_KEY = \"status\";\n-  static final String CONTAINER_LAST_UPDATE_TIME_KEY = \"lastUpdateTime\";\n+  static final String CONTAINER_DELETE_TRIGGER_TIME_KEY = \"deleteTriggerTime\";\n   static final String DESCRIPTION_KEY = \"description\";\n   static final String IS_PRIVATE_KEY = \"isPrivate\";\n   static final String BACKUP_ENABLED_KEY = \"backupEnabled\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMjUxOQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432112519", "bodyText": "nit: we know the key and value won't be null, so we can just use metadata.put.", "author": "justinlin-linkedin", "createdAt": "2020-05-28T20:44:38Z", "path": "ambry-api/src/main/java/com/github/ambry/account/Container.java", "diffHunk": "@@ -487,6 +509,7 @@ JSONObject toJson() throws JSONException {\n         metadata.put(Container.JSON_VERSION_KEY, JSON_VERSION_2);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n+        metadata.putOpt(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);", "originalCommit": "812e422491acb2f378230d425203ebad0d047fa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5MjA5Nw==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432192097", "bodyText": "Updated.", "author": "SophieGuo410", "createdAt": "2020-05-29T00:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMjUxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c1b32931d02f663eba45a2773746501439f82ed8", "chunk": "diff --git a/ambry-api/src/main/java/com/github/ambry/account/Container.java b/ambry-api/src/main/java/com/github/ambry/account/Container.java\nindex 0d78fa611..063f6b69d 100644\n--- a/ambry-api/src/main/java/com/github/ambry/account/Container.java\n+++ b/ambry-api/src/main/java/com/github/ambry/account/Container.java\n\n@@ -509,7 +509,7 @@ public class Container {\n         metadata.put(Container.JSON_VERSION_KEY, JSON_VERSION_2);\n         metadata.put(CONTAINER_ID_KEY, id);\n         metadata.put(CONTAINER_NAME_KEY, name);\n-        metadata.putOpt(CONTAINER_LAST_UPDATE_TIME_KEY, lastUpdateTime);\n+        metadata.put(CONTAINER_DELETE_TRIGGER_TIME_KEY, deleteTriggerTime);\n         metadata.put(Container.STATUS_KEY, status.name());\n         metadata.put(DESCRIPTION_KEY, description);\n         metadata.put(ENCRYPTED_KEY, encrypted);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMzM1OA==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432113358", "bodyText": "nit: we should use a config for this value, maybe we can update it in next pr.", "author": "justinlin-linkedin", "createdAt": "2020-05-28T20:46:12Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -198,14 +197,17 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n   }\n \n   /**\n-   * Filters deprecated {@link Container}s for compaction purpose. Deprecated status include DELETE_IN_PROGRESS and INACTIVE.\n+   * Filters deprecated {@link Container}s for compaction purpose. Deprecated containers include DELETE_IN_PROGRESS\n+   * containers met with retention time and all INACTIVE containers.\n    * @return the deprecated {@link Container}s' accountId & containerId pairs.\n    */\n   private void getDeprecatedContainers() {\n     deprecatedContainers.clear();\n     if (accountService != null) {\n       accountService.getContainersByStatus(Container.ContainerStatus.DELETE_IN_PROGRESS).forEach((container) -> {\n-        deprecatedContainers.add(new Pair<>(container.getParentAccountId(), container.getId()));\n+        if (container.getLastUpdateTime() + TimeUnit.DAYS.toMillis(14) >= System.currentTimeMillis()) {", "originalCommit": "812e422491acb2f378230d425203ebad0d047fa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5MjEzNQ==", "url": "https://github.com/linkedin/ambry/pull/1535#discussion_r432192135", "bodyText": "Updated.", "author": "SophieGuo410", "createdAt": "2020-05-29T00:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMzM1OA=="}], "type": "inlineReview", "revised_code": {"commit": "c1b32931d02f663eba45a2773746501439f82ed8", "chunk": "diff --git a/ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java b/ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java\nindex cab58d5df..62e62c6a3 100644\n--- a/ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java\n+++ b/ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java\n\n@@ -205,7 +205,7 @@ class BlobStoreCompactor {\n     deprecatedContainers.clear();\n     if (accountService != null) {\n       accountService.getContainersByStatus(Container.ContainerStatus.DELETE_IN_PROGRESS).forEach((container) -> {\n-        if (container.getLastUpdateTime() + TimeUnit.DAYS.toMillis(14) >= System.currentTimeMillis()) {\n+        if (container.getDeleteTriggerTime() + TimeUnit.DAYS.toMillis(config.storeContainerDeletionRetentionDays) >= System.currentTimeMillis()) {\n           deprecatedContainers.add(new Pair<>(container.getParentAccountId(), container.getId()));\n         }\n       });\n"}}, {"oid": "c1b32931d02f663eba45a2773746501439f82ed8", "url": "https://github.com/linkedin/ambry/commit/c1b32931d02f663eba45a2773746501439f82ed8", "message": "minor fixing", "committedDate": "2020-05-28T23:17:26Z", "type": "commit"}]}