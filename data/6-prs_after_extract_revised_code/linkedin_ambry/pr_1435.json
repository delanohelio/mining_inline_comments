{"pr_number": 1435, "pr_title": "Fix two instances of same replica during replica addition", "pr_createdAt": "2020-03-24T18:26:58Z", "pr_url": "https://github.com/linkedin/ambry/pull/1435", "timeline": [{"oid": "e15332da56fb3814268b9cef3b6e63fe853f93fb", "url": "https://github.com/linkedin/ambry/commit/e15332da56fb3814268b9cef3b6e63fe853f93fb", "message": "WIP: Fix two instances of same replica during replica addition\n\nWhen adding a new replica to certain node, the node first creates a\nbootstrap replica and uses it to perform boostrap work(i.e. allocate\nfiles and create new store). Afterwards, the node updates Helix\nInstanceConfig which notifies all listeners in cluster (including itself).\nWhen dealing with InstanceConfig change, this node creates a second\ninstance of same replica and adds it into in-mem clustermap.\nThe consequence is storage manager holds a different instance from Helix\nCluster Manager, which mistakenly adds self replica into peer replicas\nwhen performing replication catchup. It blocks decommission process\nbecause there is always a self replica that will never catch up.\nThis PR fixes this problem by maintaining boostrap replica set in\ncluster manager and it checks if there are existing replica instances when\nhanlding InstanceConfig change.", "committedDate": "2020-03-24T18:11:06Z", "type": "commit"}, {"oid": "b4c60b0bdfd6d73f8c2ac9e3be142157f9f77dd1", "url": "https://github.com/linkedin/ambry/commit/b4c60b0bdfd6d73f8c2ac9e3be142157f9f77dd1", "message": "fix test failure and add unit tests", "committedDate": "2020-03-25T16:09:17Z", "type": "commit"}, {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371", "url": "https://github.com/linkedin/ambry/commit/44b41c1d5529383ce1ac5c25cf0809e17f84b371", "message": "minor cleanup", "committedDate": "2020-03-25T16:37:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxMTUyMw==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399011523", "bodyText": "Would it be worth having a metric for this event? Would this mean that the replica never gets added until the machine is restarted or will it get added eventually?", "author": "cgtz", "createdAt": "2020-03-27T03:10:28Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -360,10 +363,20 @@ private void addOrUpdateInstanceInfos(List<InstanceConfig> instanceConfigs) thro\n             // Ensure only one AmbryPartition instance exists for specific partition.\n             mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaCapacity);\n             ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, dataNode, replicaCapacity);\n-            // create new replica belonging to this partition\n-            AmbryReplica replica =\n-                new AmbryServerReplica(clusterMapConfig, mappedPartition, disk, stoppedReplicas.contains(partitionName),\n-                    replicaCapacity, sealedReplicas.contains(partitionName));\n+            // create new replica belonging to this partition or find the existing replica from bootstrapReplicas map.\n+            AmbryReplica replica;\n+            if (selfInstanceName.equals(instanceName)) {\n+              // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n+              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());\n+              if (replica == null) {\n+                logger.warn(\"Replica {} is not present in bootstrap replica set, skip adding it to clustermap\",", "originalCommit": "44b41c1d5529383ce1ac5c25cf0809e17f84b371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyNzM4MA==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399027380", "bodyText": "Actually, replica == null should not happen in practice. If everything goes well, then the replica should be present in bootstrap replica map. If failure occurs during bootstrap, there are two cases to discuss:\n(1)  new replica is added but node crashes before updating Helix InstanceConfig\nThere is no InstanceConfig change. When machine is restarted, node will re-do replica addition and newly added replica should be in the map.\n(2) InstanceConfig is updated and then node crashes immediately\nSince new replica is already in InstanceConfig, once machine is restarted the new replica will be added to in-mem clustermap when handling initial InstanceConfig change (a different code path within createNewInstance() method)\nThere is only one rare case (human error) where we mistakenly update InstanceConfig of existing node by adding new replica rather than update IdealState, which may trigger this replica == null statement. In this case, it won't be added. Instead of a metric, I think I should throw an exception here and change the warn to error.", "author": "jsjtzyy", "createdAt": "2020-03-27T04:21:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxMTUyMw=="}], "type": "inlineReview", "revised_code": {"commit": "1a334651e1184c6c3d5bf7122443d4e049da3189", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\nindex c8e689e73..0334a3cfa 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n\n@@ -367,11 +365,11 @@ public class DynamicClusterChangeHandler implements HelixClusterChangeHandler {\n             AmbryReplica replica;\n             if (selfInstanceName.equals(instanceName)) {\n               // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n-              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());\n+              replica = clusterChangeHandlerCallback.popBootstrapReplica(mappedPartition.toPathString());\n               if (replica == null) {\n-                logger.warn(\"Replica {} is not present in bootstrap replica set, skip adding it to clustermap\",\n+                logger.error(\"Replica {} is not present in bootstrap replica set, abort instance info update\",\n                     mappedPartition.toPathString());\n-                continue;\n+                throw new IllegalStateException(\"Replica to add is not present in bootstrap replica map\");\n               }\n             } else {\n               replica = new AmbryServerReplica(clusterMapConfig, mappedPartition, disk,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNDUzNw==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399014537", "bodyText": "Instead of passing the map directly to DynamicClusterChangeHandler, could you add a AmbryReplica popBootstrapReplica(String partition) method to ClusterChangeHandlerCallback?", "author": "cgtz", "createdAt": "2020-03-27T03:23:55Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -360,10 +363,20 @@ private void addOrUpdateInstanceInfos(List<InstanceConfig> instanceConfigs) thro\n             // Ensure only one AmbryPartition instance exists for specific partition.\n             mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaCapacity);\n             ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, dataNode, replicaCapacity);\n-            // create new replica belonging to this partition\n-            AmbryReplica replica =\n-                new AmbryServerReplica(clusterMapConfig, mappedPartition, disk, stoppedReplicas.contains(partitionName),\n-                    replicaCapacity, sealedReplicas.contains(partitionName));\n+            // create new replica belonging to this partition or find the existing replica from bootstrapReplicas map.\n+            AmbryReplica replica;\n+            if (selfInstanceName.equals(instanceName)) {\n+              // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n+              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());", "originalCommit": "44b41c1d5529383ce1ac5c25cf0809e17f84b371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyMzU1OQ==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399023559", "bodyText": "Yeah, we can do that. Actually, it is quite safe in terms of concurrency. There should be only one dc (where the current node sits) calling this method.", "author": "jsjtzyy", "createdAt": "2020-03-27T04:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNDUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "1a334651e1184c6c3d5bf7122443d4e049da3189", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\nindex c8e689e73..0334a3cfa 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java\n\n@@ -367,11 +365,11 @@ public class DynamicClusterChangeHandler implements HelixClusterChangeHandler {\n             AmbryReplica replica;\n             if (selfInstanceName.equals(instanceName)) {\n               // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n-              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());\n+              replica = clusterChangeHandlerCallback.popBootstrapReplica(mappedPartition.toPathString());\n               if (replica == null) {\n-                logger.warn(\"Replica {} is not present in bootstrap replica set, skip adding it to clustermap\",\n+                logger.error(\"Replica {} is not present in bootstrap replica set, abort instance info update\",\n                     mappedPartition.toPathString());\n-                continue;\n+                throw new IllegalStateException(\"Replica to add is not present in bootstrap replica map\");\n               }\n             } else {\n               replica = new AmbryServerReplica(clusterMapConfig, mappedPartition, disk,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNTI5MA==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399015290", "bodyText": "No need to remove these, but for some reason, my formatter keeps the enum like this without compressing it onto one line like it used to. It may be different on different versions of LI intellij.", "author": "cgtz", "createdAt": "2020-03-27T03:27:10Z", "path": "ambry-clustermap/src/test/java/com.github.ambry.clustermap/TestUtils.java", "diffHunk": "@@ -39,20 +39,24 @@\n   static final int DEFAULT_XID = 64;\n \n   enum ReplicaStateType {\n+    // @formatter:off\n     SealedState,\n     StoppedState\n+    // @formatter:om\n   }\n \n   /**\n    * Resource state associated with datanode, disk and replica.\n    */\n   enum ResourceState {\n+    // @formatter:off\n     Node_Up,", "originalCommit": "44b41c1d5529383ce1ac5c25cf0809e17f84b371", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189", "url": "https://github.com/linkedin/ambry/commit/1a334651e1184c6c3d5bf7122443d4e049da3189", "message": "addressed comments", "committedDate": "2020-03-27T05:31:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNTcxNg==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399505716", "bodyText": "Can this be just Map?", "author": "lightningrob", "createdAt": "2020-03-27T19:53:50Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -73,6 +73,7 @@\n   private final AtomicLong sealedStateChangeCounter = new AtomicLong(0);\n   private final PartitionSelectionHelper partitionSelectionHelper;\n   private final Map<String, Map<String, String>> partitionOverrideInfoMap = new HashMap<>();\n+  private final ConcurrentHashMap<String, ReplicaId> bootstrapReplicas = new ConcurrentHashMap<>();", "originalCommit": "1a334651e1184c6c3d5bf7122443d4e049da3189", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUyMzE0OA==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399523148", "bodyText": "Yep, will make the change.", "author": "jsjtzyy", "createdAt": "2020-03-27T20:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNTcxNg=="}], "type": "inlineReview", "revised_code": {"commit": "173928d0275d048d6d34841233e939a0d5d51236", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\nindex 79b70fd6c..b082d5199 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\n\n@@ -73,7 +73,7 @@ public class HelixClusterManager implements ClusterMap {\n   private final AtomicLong sealedStateChangeCounter = new AtomicLong(0);\n   private final PartitionSelectionHelper partitionSelectionHelper;\n   private final Map<String, Map<String, String>> partitionOverrideInfoMap = new HashMap<>();\n-  private final ConcurrentHashMap<String, ReplicaId> bootstrapReplicas = new ConcurrentHashMap<>();\n+  private final Map<String, ReplicaId> bootstrapReplicas = new ConcurrentHashMap<>();\n   private ZkHelixPropertyStore<ZNRecord> helixPropertyStoreInLocalDc = null;\n   // The current xid currently does not change after instantiation. This can change in the future, allowing the cluster\n   // manager to dynamically incorporate newer changes in the cluster. This variable is atomic so that the gauge metric\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNjg2Mg==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399506862", "bodyText": "Pop makes it sound like a stack.  How about removeBootstrapReplica?", "author": "lightningrob", "createdAt": "2020-03-27T19:56:03Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -617,6 +637,16 @@ void removeReplicasFromPartition(AmbryPartition partition, List<AmbryReplica> re\n     void addClusterWideRawCapacity(long diskRawCapacityBytes) {\n       clusterWideRawCapacityBytes.getAndAdd(diskRawCapacityBytes);\n     }\n+\n+    /**\n+     * Pop out bootstrap replica (if any) on current instance. A bootstrap replica is a replica dynamically added to\n+     * current node at runtime.\n+     * @param partitionName the partition name of bootstrap replica.\n+     * @return bootstrap replica or {@code null} if not found.\n+     */\n+    AmbryReplica popBootstrapReplica(String partitionName) {", "originalCommit": "1a334651e1184c6c3d5bf7122443d4e049da3189", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU0MDIwNg==", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399540206", "bodyText": "Considering the context of this method, I think I will rename it to fetchBootstrapReplica. It fetches a replica out (if any) from bootstrap replica map and add it into in-memory clustermap.\n(Just like fetchRequest() in GetBlobOperation, DeleteOperation, etc)", "author": "jsjtzyy", "createdAt": "2020-03-27T21:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNjg2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "173928d0275d048d6d34841233e939a0d5d51236", "chunk": "diff --git a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\nindex 79b70fd6c..b082d5199 100644\n--- a/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\n+++ b/ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java\n\n@@ -644,7 +644,7 @@ public class HelixClusterManager implements ClusterMap {\n      * @param partitionName the partition name of bootstrap replica.\n      * @return bootstrap replica or {@code null} if not found.\n      */\n-    AmbryReplica popBootstrapReplica(String partitionName) {\n+    AmbryReplica fetchBootstrapReplica(String partitionName) {\n       return (AmbryReplica) bootstrapReplicas.remove(partitionName);\n     }\n   }\n"}}, {"oid": "173928d0275d048d6d34841233e939a0d5d51236", "url": "https://github.com/linkedin/ambry/commit/173928d0275d048d6d34841233e939a0d5d51236", "message": "address Rob's comments", "committedDate": "2020-03-27T20:44:27Z", "type": "commit"}]}