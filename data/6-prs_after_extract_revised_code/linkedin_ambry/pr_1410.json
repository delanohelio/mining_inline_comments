{"pr_number": 1410, "pr_title": "Preparation and cleanup for Http2NetworkClient", "pr_createdAt": "2020-03-02T21:52:16Z", "pr_url": "https://github.com/linkedin/ambry/pull/1410", "timeline": [{"oid": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "url": "https://github.com/linkedin/ambry/commit/b630547b37b13f74b6ac95d3cb7147063d2a4022", "message": "Clean up and preparation for http2NetworkClient", "committedDate": "2020-03-02T19:40:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0Mzg0Mw==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r386743843", "bodyText": "Long.MAX_VALUE seems pretty scary? Is stream id reusable in http2?", "author": "justinlin-linkedin", "createdAt": "2020-03-03T01:05:58Z", "path": "ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.config;\n+\n+/**\n+ * The configs for HTTP/2 Client\n+ */\n+public class Http2ClientConfig {\n+\n+  public static final String HTTP2_MIN_CONNECTION_PER_PORT = \"http2.min.connection.per.port\";\n+  public static final String HTTP2_MAX_STREAMS_PER_CONNECTION = \"http2.max.streams.per.connection\";\n+  public static final String HTTP2_NETTY_EVENT_LOOP_GROUP_THREADS = \"http2.netty.event.loop.group.threads\";\n+  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT = \"http2.idle.connection.timeout\";\n+\n+  /**\n+   * HTTP/2 connection idle time before we close it. -1 means no idle close.\n+   */\n+  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT)\n+  @Default(\"-1\")\n+  public final Long idleConnectionTimeout;\n+\n+  /**\n+   * Minimum number of http2 connection per port we want to keep.\n+   */\n+  @Config(HTTP2_MIN_CONNECTION_PER_PORT)\n+  @Default(\"4\")\n+  public final int http2MinConnectionPerPort;\n+\n+  /**\n+   * Maximum number of streams allowed per HTTP/2 connection.\n+   */\n+  @Config(HTTP2_MAX_STREAMS_PER_CONNECTION)\n+  @Default(\"Long.Max_VALUE\")\n+  public final Long http2MaxStreamsPerConnection;\n+\n+  /**\n+   * Number of threads in a Netty event loop group. 0 means Netty will decide the number.\n+   */\n+  @Config(HTTP2_NETTY_EVENT_LOOP_GROUP_THREADS)\n+  @Default(\"0\")\n+  public final int http2NettyEventLoopGroupThreads;\n+\n+  public Http2ClientConfig(VerifiableProperties verifiableProperties) {\n+    idleConnectionTimeout = verifiableProperties.getLong(HTTP2_IDLE_CONNECTION_TIMEOUT, -1);\n+    http2MinConnectionPerPort = verifiableProperties.getInt(HTTP2_MIN_CONNECTION_PER_PORT, 4);\n+    http2MaxStreamsPerConnection = verifiableProperties.getLong(HTTP2_MAX_STREAMS_PER_CONNECTION, Long.MAX_VALUE);", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM5MTI5MQ==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387391291", "bodyText": "This config is for max concurrency streams per connection, not stream id. There is no reason to limit the concurrency.\nAfter I double checking http2 spec, stream id is between 1-Int.max, changing this to int and reanming it to http2MaxConcurrentStreamsPerConnection.", "author": "zzmao", "createdAt": "2020-03-04T01:10:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0Mzg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java b/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\nindex 4ec6d62bb..77615d0da 100644\n--- a/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\n+++ b/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\n\n@@ -19,16 +19,17 @@ package com.github.ambry.config;\n public class Http2ClientConfig {\n \n   public static final String HTTP2_MIN_CONNECTION_PER_PORT = \"http2.min.connection.per.port\";\n-  public static final String HTTP2_MAX_STREAMS_PER_CONNECTION = \"http2.max.streams.per.connection\";\n+  public static final String HTTP2_MAX_CONCURRENT_STREAMS_PER_CONNECTION =\n+      \"http2.max.concurrent.streams.per.connection\";\n   public static final String HTTP2_NETTY_EVENT_LOOP_GROUP_THREADS = \"http2.netty.event.loop.group.threads\";\n-  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT = \"http2.idle.connection.timeout\";\n+  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT_MS = \"http2.idle.connection.timeout.ms\";\n \n   /**\n    * HTTP/2 connection idle time before we close it. -1 means no idle close.\n    */\n-  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT)\n+  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT_MS)\n   @Default(\"-1\")\n-  public final Long idleConnectionTimeout;\n+  public final Long idleConnectionTimeoutMs;\n \n   /**\n    * Minimum number of http2 connection per port we want to keep.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0NTcxMg==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r386745712", "bodyText": "2020", "author": "justinlin-linkedin", "createdAt": "2020-03-03T01:11:58Z", "path": "ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright 2019 LinkedIn Corp. All rights reserved.", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\nindex 990c12f90..a95746de5 100644\n--- a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n+++ b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0NTc2OA==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r386745768", "bodyText": "javadoc?", "author": "justinlin-linkedin", "createdAt": "2020-03-03T01:12:12Z", "path": "ambry-network/src/main/java/com.github.ambry.network/http2/Http2ClientMetrics.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+\n+package com.github.ambry.network.http2;\n+\n+import com.codahale.metrics.MetricRegistry;\n+\n+\n+public class Http2ClientMetrics {", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ClientMetrics.java b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ClientMetrics.java\nindex 95f1fc144..c7d430656 100644\n--- a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ClientMetrics.java\n+++ b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ClientMetrics.java\n\n@@ -17,6 +17,9 @@ package com.github.ambry.network.http2;\n import com.codahale.metrics.MetricRegistry;\n \n \n+/**\n+ * The metrics for HTTP/2 Client\n+ */\n public class Http2ClientMetrics {\n \n   public Http2ClientMetrics(MetricRegistry registry) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NzYyMQ==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387257621", "bodyText": "How about calling it clustermap.http2.network.client.enabled?", "author": "jsjtzyy", "createdAt": "2020-03-03T19:55:00Z", "path": "ambry-api/src/main/java/com.github.ambry/config/ClusterMapConfig.java", "diffHunk": "@@ -75,6 +75,15 @@\n   @Default(\"10 * 60 * 1000\")\n   public final int clusterMapFixedTimeoutReplicaRetryBackoffMs;\n \n+  /**\n+   * TODO: Clean up configs once HTTP/2 fully deployed\n+   * HTTP/2 network client will be enabled if true. HTTP/2 network client send HTTP/2 request to all storage nodes.\n+   * This config takes precedence over clusterMapSslEnabledDatacenters.\n+   */\n+  @Config(\"clustermap.http2.enable\")\n+  @Default(\"false\")\n+  public final boolean clusterMapHttp2Enable;", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/config/ClusterMapConfig.java b/ambry-api/src/main/java/com.github.ambry/config/ClusterMapConfig.java\nindex 838e15624..846d74327 100644\n--- a/ambry-api/src/main/java/com.github.ambry/config/ClusterMapConfig.java\n+++ b/ambry-api/src/main/java/com.github.ambry/config/ClusterMapConfig.java\n\n@@ -80,9 +80,9 @@ public class ClusterMapConfig {\n    * HTTP/2 network client will be enabled if true. HTTP/2 network client send HTTP/2 request to all storage nodes.\n    * This config takes precedence over clusterMapSslEnabledDatacenters.\n    */\n-  @Config(\"clustermap.http2.enable\")\n+  @Config(\"clustermap.http2.network.client.enabled\")\n   @Default(\"false\")\n-  public final boolean clusterMapHttp2Enable;\n+  public final boolean clusterMapHttp2NetworkClientEnabled;\n \n   /**\n    * List of Datacenters to which local node needs SSL encryption to communicate\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1OTQzNw==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387259437", "bodyText": "could you add time unit for this config?", "author": "jsjtzyy", "createdAt": "2020-03-03T19:58:17Z", "path": "ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.config;\n+\n+/**\n+ * The configs for HTTP/2 Client\n+ */\n+public class Http2ClientConfig {\n+\n+  public static final String HTTP2_MIN_CONNECTION_PER_PORT = \"http2.min.connection.per.port\";\n+  public static final String HTTP2_MAX_STREAMS_PER_CONNECTION = \"http2.max.streams.per.connection\";\n+  public static final String HTTP2_NETTY_EVENT_LOOP_GROUP_THREADS = \"http2.netty.event.loop.group.threads\";\n+  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT = \"http2.idle.connection.timeout\";\n+\n+  /**\n+   * HTTP/2 connection idle time before we close it. -1 means no idle close.\n+   */\n+  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT)\n+  @Default(\"-1\")\n+  public final Long idleConnectionTimeout;", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java b/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\nindex 4ec6d62bb..77615d0da 100644\n--- a/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\n+++ b/ambry-api/src/main/java/com.github.ambry/config/Http2ClientConfig.java\n\n@@ -19,16 +19,17 @@ package com.github.ambry.config;\n public class Http2ClientConfig {\n \n   public static final String HTTP2_MIN_CONNECTION_PER_PORT = \"http2.min.connection.per.port\";\n-  public static final String HTTP2_MAX_STREAMS_PER_CONNECTION = \"http2.max.streams.per.connection\";\n+  public static final String HTTP2_MAX_CONCURRENT_STREAMS_PER_CONNECTION =\n+      \"http2.max.concurrent.streams.per.connection\";\n   public static final String HTTP2_NETTY_EVENT_LOOP_GROUP_THREADS = \"http2.netty.event.loop.group.threads\";\n-  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT = \"http2.idle.connection.timeout\";\n+  public static final String HTTP2_IDLE_CONNECTION_TIMEOUT_MS = \"http2.idle.connection.timeout.ms\";\n \n   /**\n    * HTTP/2 connection idle time before we close it. -1 means no idle close.\n    */\n-  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT)\n+  @Config(HTTP2_IDLE_CONNECTION_TIMEOUT_MS)\n   @Default(\"-1\")\n-  public final Long idleConnectionTimeout;\n+  public final Long idleConnectionTimeoutMs;\n \n   /**\n    * Minimum number of http2 connection per port we want to keep.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2MjQ3MA==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387262470", "bodyText": "I notice that getSnapshot() method doesn't contain Http2 port info. Could you add it?", "author": "jsjtzyy", "createdAt": "2020-03-03T20:03:59Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryDatanode.java", "diffHunk": "@@ -118,6 +120,9 @@ public boolean hasHttp2Port() {\n \n   @Override\n   public Port getPortToConnectTo() {\n+    if (http2ClientEnabled) {\n+      return http2Port;\n+    }", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NDA5Nw==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387264097", "bodyText": "Same in CloudDataNode, please add Http2 port info into getSnapshot()", "author": "jsjtzyy", "createdAt": "2020-03-03T20:07:16Z", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/CloudDataNode.java", "diffHunk": "@@ -117,6 +120,9 @@ public int getHttp2Port() {\n \n   @Override\n   public Port getPortToConnectTo() {\n+    if (http2ClientEnabled) {\n+      return http2Port;\n+    }", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MjUzMQ==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387292531", "bodyText": "Could you add some java doc for this class?", "author": "jsjtzyy", "createdAt": "2020-03-03T21:04:35Z", "path": "ambry-network/src/main/java/com.github.ambry.network/http2/Http2ChannelPoolMap.java", "diffHunk": "@@ -28,9 +29,13 @@\n   private final EventLoopGroup eventLoopGroup;\n   private final SSLFactory sslFactory;\n \n-  public Http2ChannelPoolMap(SSLFactory sslFactory, EventLoopGroup eventLoopGroup) {\n+  private final Http2ClientConfig http2ClientConfig;\n+\n+  public Http2ChannelPoolMap(SSLFactory sslFactory, EventLoopGroup eventLoopGroup,", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ChannelPoolMap.java b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ChannelPoolMap.java\nindex 14dcf1f6b..1b88ddd12 100644\n--- a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ChannelPoolMap.java\n+++ b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2ChannelPoolMap.java\n\n@@ -25,10 +25,13 @@ import io.netty.channel.socket.nio.NioSocketChannel;\n import java.net.InetSocketAddress;\n \n \n+/**\n+ * Implementation of {@link AbstractChannelPoolMap}. Each Host:Port has a ChannelPool.\n+ * The ChannelPool is {@link Http2MultiplexedChannelPool}, which leverages http2 multiplexing.\n+ */\n public class Http2ChannelPoolMap extends AbstractChannelPoolMap<InetSocketAddress, ChannelPool> {\n   private final EventLoopGroup eventLoopGroup;\n   private final SSLFactory sslFactory;\n-\n   private final Http2ClientConfig http2ClientConfig;\n \n   public Http2ChannelPoolMap(SSLFactory sslFactory, EventLoopGroup eventLoopGroup,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MzY2NA==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387293664", "bodyText": "minor: Add TODO before More implementation details will be added in next PR.", "author": "jsjtzyy", "createdAt": "2020-03-03T21:06:51Z", "path": "ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.network.http2;\n+\n+import com.github.ambry.clustermap.DataNodeId;\n+import com.github.ambry.commons.SSLFactory;\n+import com.github.ambry.config.Http2ClientConfig;\n+import com.github.ambry.network.NetworkClient;\n+import com.github.ambry.network.RequestInfo;\n+import com.github.ambry.network.ResponseInfo;\n+import io.netty.channel.EventLoopGroup;\n+import io.netty.channel.nio.NioEventLoopGroup;\n+import io.netty.channel.pool.ChannelPool;\n+import io.netty.channel.pool.ChannelPoolMap;\n+import java.net.InetSocketAddress;\n+import java.util.List;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * A HTTP/2 implementation of {@link NetworkClient}. More implementation details will be added in next PR.", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\nindex 990c12f90..a95746de5 100644\n--- a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n+++ b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NDExNg==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387294116", "bodyText": "can this be final ?", "author": "jsjtzyy", "createdAt": "2020-03-03T21:07:51Z", "path": "ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.network.http2;\n+\n+import com.github.ambry.clustermap.DataNodeId;\n+import com.github.ambry.commons.SSLFactory;\n+import com.github.ambry.config.Http2ClientConfig;\n+import com.github.ambry.network.NetworkClient;\n+import com.github.ambry.network.RequestInfo;\n+import com.github.ambry.network.ResponseInfo;\n+import io.netty.channel.EventLoopGroup;\n+import io.netty.channel.nio.NioEventLoopGroup;\n+import io.netty.channel.pool.ChannelPool;\n+import io.netty.channel.pool.ChannelPoolMap;\n+import java.net.InetSocketAddress;\n+import java.util.List;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * A HTTP/2 implementation of {@link NetworkClient}. More implementation details will be added in next PR.\n+ */\n+public class Http2NetworkClient implements NetworkClient {\n+  private static final Logger logger = LoggerFactory.getLogger(Http2NetworkClient.class);\n+  private EventLoopGroup eventLoopGroup;", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\nindex 990c12f90..a95746de5 100644\n--- a/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n+++ b/ambry-network/src/main/java/com.github.ambry.network/http2/Http2NetworkClient.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMDAzMw==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387300033", "bodyText": "Can we just create one instance of ClusterMapConfig ? No need to create ClusterMapConfig twice in some cases.", "author": "jsjtzyy", "createdAt": "2020-03-03T21:20:23Z", "path": "ambry-rest/src/main/java/com.github.ambry.rest/RestServerMain.java", "diffHunk": "@@ -79,6 +80,9 @@ public static void main(String[] args) {\n    * @throws IOException\n    */\n   private static SSLFactory getSSLFactoryIfRequired(VerifiableProperties verifiableProperties) throws Exception {\n+    if (new ClusterMapConfig(verifiableProperties).clusterMapHttp2Enable) {", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-rest/src/main/java/com.github.ambry.rest/RestServerMain.java b/ambry-rest/src/main/java/com.github.ambry.rest/RestServerMain.java\nindex fd57ee0e4..9dff11bce 100644\n--- a/ambry-rest/src/main/java/com.github.ambry.rest/RestServerMain.java\n+++ b/ambry-rest/src/main/java/com.github.ambry.rest/RestServerMain.java\n\n@@ -80,11 +80,12 @@ public class RestServerMain {\n    * @throws IOException\n    */\n   private static SSLFactory getSSLFactoryIfRequired(VerifiableProperties verifiableProperties) throws Exception {\n-    if (new ClusterMapConfig(verifiableProperties).clusterMapHttp2Enable) {\n+    ClusterMapConfig clusterMapConfig = new ClusterMapConfig(verifiableProperties);\n+    if (clusterMapConfig.clusterMapHttp2NetworkClientEnabled) {\n       return new NettySslHttp2Factory(new SSLConfig(verifiableProperties));\n     }\n     boolean sslRequired = new NettyConfig(verifiableProperties).nettyServerEnableSSL\n-        || new ClusterMapConfig(verifiableProperties).clusterMapSslEnabledDatacenters.length() > 0;\n+        || clusterMapConfig.clusterMapSslEnabledDatacenters.length() > 0;\n     return sslRequired ? SSLFactory.getNewInstance(new SSLConfig(verifiableProperties)) : null;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMjIzNQ==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387302235", "bodyText": "After reviewing the whole PR, I actually wonder if we can put the Http2ClientEnabled config into NetworkConfig.   Any specific reason to keep it in the ClusterMapConfig ?", "author": "jsjtzyy", "createdAt": "2020-03-03T21:24:54Z", "path": "ambry-router/src/main/java/com.github.ambry.router/NonBlockingRouterFactory.java", "diffHunk": "@@ -86,11 +91,18 @@ public NonBlockingRouterFactory(VerifiableProperties verifiableProperties, Clust\n     MetricRegistry registry = clusterMap.getMetricRegistry();\n     routerMetrics = new NonBlockingRouterMetrics(clusterMap, routerConfig);\n     networkConfig = new NetworkConfig(verifiableProperties);\n+    http2ClientConfig = new Http2ClientConfig(verifiableProperties);\n     networkMetrics = new NetworkMetrics(registry);\n+    http2ClientMetrics = new Http2ClientMetrics(registry);\n+\n     time = SystemTime.getInstance();\n-    networkClientFactory = new SocketNetworkClientFactory(networkMetrics, networkConfig, sslFactory,\n-        routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText,\n-        routerConfig.routerScalingUnitMaxConnectionsPerPortSsl, routerConfig.routerConnectionCheckoutTimeoutMs, time);\n+    if (new ClusterMapConfig(verifiableProperties).clusterMapHttp2Enable) {", "originalCommit": "b630547b37b13f74b6ac95d3cb7147063d2a4022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0MDk5Mw==", "url": "https://github.com/linkedin/ambry/pull/1410#discussion_r387340993", "bodyText": "I initially tried to add this in networkConfig, the problem is DataNode:getPortConnectTo(). It doesn't have NetworkConfig context.\nAnother benefit is we aimed to use this to override sslEnabledDc config in ClusterMapConfig.", "author": "zzmao", "createdAt": "2020-03-03T22:46:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMjIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b779036e027290ce1e435d686a6ef2a2111ff823", "chunk": "diff --git a/ambry-router/src/main/java/com.github.ambry.router/NonBlockingRouterFactory.java b/ambry-router/src/main/java/com.github.ambry.router/NonBlockingRouterFactory.java\nindex fbad6f679..574e32cd3 100644\n--- a/ambry-router/src/main/java/com.github.ambry.router/NonBlockingRouterFactory.java\n+++ b/ambry-router/src/main/java/com.github.ambry.router/NonBlockingRouterFactory.java\n\n@@ -96,7 +96,7 @@ public class NonBlockingRouterFactory implements RouterFactory {\n     http2ClientMetrics = new Http2ClientMetrics(registry);\n \n     time = SystemTime.getInstance();\n-    if (new ClusterMapConfig(verifiableProperties).clusterMapHttp2Enable) {\n+    if (new ClusterMapConfig(verifiableProperties).clusterMapHttp2NetworkClientEnabled) {\n       networkClientFactory = new Http2NetworkClientFactory(http2ClientMetrics, http2ClientConfig, sslFactory, time);\n     } else {\n       networkClientFactory = new SocketNetworkClientFactory(networkMetrics, networkConfig, sslFactory,\n"}}, {"oid": "b779036e027290ce1e435d686a6ef2a2111ff823", "url": "https://github.com/linkedin/ambry/commit/b779036e027290ce1e435d686a6ef2a2111ff823", "message": "address comments", "committedDate": "2020-03-04T01:23:59Z", "type": "commit"}]}