{"pr_number": 1143, "pr_title": "feat: deprecate getAccessProfile api", "pr_createdAt": "2020-03-25T06:32:45Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1143", "timeline": [{"oid": "8b61d1a78eed19388bfbc268e731676d3d8efde3", "url": "https://github.com/Azure/azure-libraries-for-java/commit/8b61d1a78eed19388bfbc268e731676d3d8efde3", "message": "feat: deprecate getAccessProfile api", "committedDate": "2020-03-25T06:17:31Z", "type": "commit"}, {"oid": "378b6c870d8bc6120a06d3c031b572b98ef58980", "url": "https://github.com/Azure/azure-libraries-for-java/commit/378b6c870d8bc6120a06d3c031b572b98ef58980", "message": "fix: remove unused import", "committedDate": "2020-03-25T06:51:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDAyNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1143#discussion_r397640026", "bodyText": "Usually use isEmpty()", "author": "weidongxu-microsoft", "createdAt": "2020-03-25T06:53:59Z", "path": "azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/KubernetesClustersImpl.java", "diffHunk": "@@ -157,51 +156,45 @@ public void call(TreeSet<String> kubernetesVersions, OrchestratorVersionProfileL\n \n     @Override\n     public byte[] getAdminKubeConfigContent(String resourceGroupName, String kubernetesClusterName) {\n-        ManagedClusterAccessProfileInner profileInner = this.manager().inner().managedClusters().getAccessProfile(resourceGroupName, kubernetesClusterName, KubernetesClusterAccessProfileRole.ADMIN.toString());\n-        if (profileInner == null) {\n-            return new byte[0];\n-        } else {\n-            return profileInner.kubeConfig();\n-        }\n+        return this.getAdminKubeConfigContentAsync(resourceGroupName, kubernetesClusterName).toBlocking().last();\n     }\n \n     @Override\n     public Observable<byte[]> getAdminKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName) {\n         return this.manager().inner().managedClusters()\n-            .getAccessProfileAsync(resourceGroupName, kubernetesClusterName, KubernetesClusterAccessProfileRole.ADMIN.toString())\n-            .map(new Func1<ManagedClusterAccessProfileInner, byte[]>() {\n+            .listClusterAdminCredentialsAsync(resourceGroupName, kubernetesClusterName)\n+            .map(new Func1<CredentialResultsInner, byte[]>() {\n                 @Override\n-                public byte[] call(ManagedClusterAccessProfileInner profileInner) {\n-                    if (profileInner == null) {\n+                public byte[] call(CredentialResultsInner credentialInner) {\n+                    if (credentialInner == null\n+                            || credentialInner.kubeconfigs() == null\n+                            || credentialInner.kubeconfigs().size() == 0) {\n                         return new byte[0];\n                     } else {\n-                        return profileInner.kubeConfig();\n+                        return credentialInner.kubeconfigs().get(0).value();\n                     }\n                 }\n             });\n     }\n \n     @Override\n     public byte[] getUserKubeConfigContent(String resourceGroupName, String kubernetesClusterName) {\n-        ManagedClusterAccessProfileInner profileInner = this.manager().inner().managedClusters().getAccessProfile(resourceGroupName, kubernetesClusterName, KubernetesClusterAccessProfileRole.USER.toString());\n-        if (profileInner == null) {\n-            return new byte[0];\n-        } else {\n-            return profileInner.kubeConfig();\n-        }\n+        return this.getUserKubeConfigContentAsync(resourceGroupName, kubernetesClusterName).toBlocking().last();\n     }\n \n     @Override\n     public Observable<byte[]> getUserKubeConfigContentAsync(String resourceGroupName, String kubernetesClusterName) {\n         return this.manager().inner().managedClusters()\n-            .getAccessProfileAsync(resourceGroupName, kubernetesClusterName, KubernetesClusterAccessProfileRole.USER.toString())\n-            .map(new Func1<ManagedClusterAccessProfileInner, byte[]>() {\n+            .listClusterUserCredentialsAsync(resourceGroupName, kubernetesClusterName)\n+            .map(new Func1<CredentialResultsInner, byte[]>() {\n                 @Override\n-                public byte[] call(ManagedClusterAccessProfileInner profileInner) {\n-                    if (profileInner == null) {\n+                public byte[] call(CredentialResultsInner credentialInner) {\n+                    if (credentialInner == null\n+                        || credentialInner.kubeconfigs() == null\n+                        || credentialInner.kubeconfigs().size() == 0) {", "originalCommit": "378b6c870d8bc6120a06d3c031b572b98ef58980", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTE3MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1143#discussion_r397641171", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-03-25T06:57:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "1e0795fc1890a7d2b6b5ba5786dd18c22603c52b", "chunk": "diff --git a/azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/KubernetesClustersImpl.java b/azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/KubernetesClustersImpl.java\nindex a3386fcd..550f25df 100644\n--- a/azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/KubernetesClustersImpl.java\n+++ b/azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/KubernetesClustersImpl.java\n\n@@ -168,7 +168,7 @@ public class KubernetesClustersImpl extends\n                 public byte[] call(CredentialResultsInner credentialInner) {\n                     if (credentialInner == null\n                             || credentialInner.kubeconfigs() == null\n-                            || credentialInner.kubeconfigs().size() == 0) {\n+                            || credentialInner.kubeconfigs().isEmpty()) {\n                         return new byte[0];\n                     } else {\n                         return credentialInner.kubeconfigs().get(0).value();\n"}}, {"oid": "1e0795fc1890a7d2b6b5ba5786dd18c22603c52b", "url": "https://github.com/Azure/azure-libraries-for-java/commit/1e0795fc1890a7d2b6b5ba5786dd18c22603c52b", "message": "fix: change size == 0 -> empty", "committedDate": "2020-03-25T06:57:32Z", "type": "commit"}, {"oid": "757cf3f852b7025c8ec2af460d6c7b8da76e27a6", "url": "https://github.com/Azure/azure-libraries-for-java/commit/757cf3f852b7025c8ec2af460d6c7b8da76e27a6", "message": "fix: aks test and update session record", "committedDate": "2020-03-26T03:01:13Z", "type": "commit"}]}