{"pr_number": 1199, "pr_title": "Compute: update to package-2019-12 and support simulate eviction", "pr_createdAt": "2020-06-01T05:37:43Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1199", "timeline": [{"oid": "40f7319c356afe19db1be2531fdcbc38ad14c804", "url": "https://github.com/Azure/azure-libraries-for-java/commit/40f7319c356afe19db1be2531fdcbc38ad14c804", "message": "update compute version", "committedDate": "2020-05-28T05:04:34Z", "type": "commit"}, {"oid": "e4a34bee46c3b5a8e5ae4927dca0e14bc43aba65", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e4a34bee46c3b5a8e5ae4927dca0e14bc43aba65", "message": "generate package-2019-12", "committedDate": "2020-05-28T05:24:33Z", "type": "commit"}, {"oid": "5b5aaf22dc388315e442ae5d020e2b5bbe948255", "url": "https://github.com/Azure/azure-libraries-for-java/commit/5b5aaf22dc388315e442ae5d020e2b5bbe948255", "message": "fix compile error", "committedDate": "2020-05-28T06:15:19Z", "type": "commit"}, {"oid": "f8811f1f57311427f9e68b3ead0bcbba5987b04e", "url": "https://github.com/Azure/azure-libraries-for-java/commit/f8811f1f57311427f9e68b3ead0bcbba5987b04e", "message": "support simulate eviction in vm and vmss", "committedDate": "2020-05-28T08:59:45Z", "type": "commit"}, {"oid": "e21bdb939f748cc8b37a2908220fe53193892fd4", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e21bdb939f748cc8b37a2908220fe53193892fd4", "message": "manual fix for json serialization", "committedDate": "2020-05-29T05:41:24Z", "type": "commit"}, {"oid": "714ff5e75dea4329507ed02ac593a29b0c9a40ef", "url": "https://github.com/Azure/azure-libraries-for-java/commit/714ff5e75dea4329507ed02ac593a29b0c9a40ef", "message": "update session records", "committedDate": "2020-05-29T05:43:17Z", "type": "commit"}, {"oid": "51792fbbf2db7e99b449743edf21655f4581479f", "url": "https://github.com/Azure/azure-libraries-for-java/commit/51792fbbf2db7e99b449743edf21655f4581479f", "message": "update session records", "committedDate": "2020-06-01T05:21:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1MTYxNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1199#discussion_r433051616", "bodyText": "What does this function do?", "author": "ChenTanyi", "createdAt": "2020-06-01T05:46:04Z", "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/implementation/ProximityPlacementGroupImpl.java", "diffHunk": "@@ -69,12 +69,12 @@ public ProximityPlacementGroupInner inner() {\n     }\n \n \n-    private List<String> getStringListFromSubResourceList(List<SubResource> subList) {\n+    private List<String> getStringListFromSubResourceList(List<SubResourceWithColocationStatus> subList) {", "originalCommit": "5b5aaf22dc388315e442ae5d020e2b5bbe948255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1MzgzMw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1199#discussion_r433053833", "bodyText": "It's to return a list of resource ids. The changes come from swagger and apply here.", "author": "xseeseesee", "createdAt": "2020-06-01T05:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1MTYxNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fc1dc6ea64f7ed48a39f85eb607304a401d0b0d8", "url": "https://github.com/Azure/azure-libraries-for-java/commit/fc1dc6ea64f7ed48a39f85eb607304a401d0b0d8", "message": "update session records", "committedDate": "2020-06-01T05:51:23Z", "type": "commit"}, {"oid": "e86681ca9b5c78eeb7ece50b301a12c2a0d9e8d4", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e86681ca9b5c78eeb7ece50b301a12c2a0d9e8d4", "message": "update session records", "committedDate": "2020-06-02T04:01:12Z", "type": "commit"}, {"oid": "febfe79079aac28529fb8c1698e395b6266b73ff", "url": "https://github.com/Azure/azure-libraries-for-java/commit/febfe79079aac28529fb8c1698e395b6266b73ff", "message": "manual fix error", "committedDate": "2020-06-02T04:52:22Z", "type": "commit"}, {"oid": "ba08aa0fdd06e9fa080eee1b68f891fa05a84168", "url": "https://github.com/Azure/azure-libraries-for-java/commit/ba08aa0fdd06e9fa080eee1b68f891fa05a84168", "message": "manual fix checkstyle error", "committedDate": "2020-06-02T05:08:11Z", "type": "commit"}, {"oid": "161a5c26a5a63de16f58edca99afc82d957808b8", "url": "https://github.com/Azure/azure-libraries-for-java/commit/161a5c26a5a63de16f58edca99afc82d957808b8", "message": "add tests for simulate eviction", "committedDate": "2020-06-02T11:37:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTMyMQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1199#discussion_r434245321", "bodyText": "Assert if the vm state is deallocated. When it is deallocated, vm entity will still be there.", "author": "sandeepkv93", "createdAt": "2020-06-03T00:28:24Z", "path": "azure-mgmt-compute/src/test/java/com/microsoft/azure/management/compute/VirtualMachineOperationsTests.java", "diffHunk": "@@ -702,6 +702,40 @@ public void canRunScriptOnVM() {\n         Assert.assertTrue(runResult.value().size() > 0);\n     }\n \n+    @Test\n+    public void canPerformSimulateEvictionOnSpotVirtualMachine() {\n+        VirtualMachine virtualMachine = computeManager.virtualMachines()\n+                .define(VMNAME)\n+                .withRegion(REGION)\n+                .withNewResourceGroup(RG_NAME)\n+                .withNewPrimaryNetwork(\"10.0.0.0/28\")\n+                .withPrimaryPrivateIPAddressDynamic()\n+                .withoutPrimaryPublicIPAddress()\n+                .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n+                .withRootUsername(\"firstuser\")\n+                .withRootPassword(\"afh123RVS!\")\n+                .withSpotPriority(VirtualMachineEvictionPolicyTypes.DEALLOCATE)\n+                .withSize(VirtualMachineSizeTypes.STANDARD_D2_V3)\n+                .create();\n+\n+        Assert.assertNotNull(virtualMachine.osDiskStorageAccountType());\n+        Assert.assertTrue(virtualMachine.osDiskSize() > 0);\n+        Disk disk = computeManager.disks().getById(virtualMachine.osDiskId());\n+        Assert.assertNotNull(disk);\n+        Assert.assertEquals(DiskState.ATTACHED, disk.inner().diskState());\n+\n+        // call simulate eviction\n+        virtualMachine.simulateEviction();\n+        SdkContext.sleep(30 * 60 * 1000);\n+\n+        virtualMachine = computeManager.virtualMachines().getById(virtualMachine.id());\n+        Assert.assertNotNull(virtualMachine);", "originalCommit": "161a5c26a5a63de16f58edca99afc82d957808b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4NjM0Mw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1199#discussion_r434286343", "bodyText": "Do we need to get such state via InstanceView?", "author": "xseeseesee", "createdAt": "2020-06-03T03:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTMyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTUxMQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1199#discussion_r434245511", "bodyText": "Same as Single VM. Check the vm state of each VM.", "author": "sandeepkv93", "createdAt": "2020-06-03T00:29:11Z", "path": "azure-mgmt-compute/src/test/java/com/microsoft/azure/management/compute/VirtualMachineScaleSetOperationsTests.java", "diffHunk": "@@ -1143,6 +1144,56 @@ public void canCreateLowPriorityVMSSInstance() throws Exception {\n         Assert.assertEquals(vmss.billingProfile().maxPrice(), (Double)2000.0);\n     }\n \n+    @Test\n+    public void canPerformSimulateEvictionOnSpotVMSSInstance() {\n+        final String vmssName = generateRandomResourceName(\"vmss\", 10);\n+\n+        ResourceGroup resourceGroup = this.resourceManager.resourceGroups()\n+                .define(RG_NAME)\n+                .withRegion(REGION)\n+                .create();\n+\n+        Network network = this.networkManager\n+                .networks()\n+                .define(\"vmssvnet\")\n+                .withRegion(REGION)\n+                .withExistingResourceGroup(resourceGroup)\n+                .withAddressSpace(\"10.0.0.0/28\")\n+                .withSubnet(\"subnet1\", \"10.0.0.0/28\")\n+                .create();\n+\n+        VirtualMachineScaleSet vmss = computeManager.virtualMachineScaleSets()\n+                .define(vmssName)\n+                .withRegion(REGION)\n+                .withExistingResourceGroup(RG_NAME)\n+                .withSku(VirtualMachineScaleSetSkuTypes.STANDARD_D3_V2)\n+                .withExistingPrimaryNetworkSubnet(network, \"subnet1\")\n+                .withoutPrimaryInternetFacingLoadBalancer()\n+                .withoutPrimaryInternalLoadBalancer()\n+                .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n+                .withRootUsername(\"jvuser\")\n+                .withRootPassword(\"123OData!@#123\")\n+                .withSpotPriorityVirtualMachine(VirtualMachineEvictionPolicyTypes.DEALLOCATE)\n+                .create();\n+\n+        PagedList<VirtualMachineScaleSetVM> vmInstances = vmss.virtualMachines().list();\n+        for (VirtualMachineScaleSetVM instance: vmInstances) {\n+            Assert.assertTrue(instance.osDiskSizeInGB() > 0);\n+            //Disk disk = computeManager.disks().getById(instance.osDiskId());\n+            //Assert.assertEquals(DiskState.ATTACHED, disk.inner().diskState());\n+            // call simulate eviction\n+            vmss.virtualMachines().simulateEviction(instance.instanceId());\n+        }\n+\n+        SdkContext.sleep(30 * 60 * 1000);\n+\n+        for (VirtualMachineScaleSetVM instance: vmInstances) {\n+            instance.refresh();", "originalCommit": "161a5c26a5a63de16f58edca99afc82d957808b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "8a4e0efa311688bd9bfde5c166fe02045c5a23da", "url": "https://github.com/Azure/azure-libraries-for-java/commit/8a4e0efa311688bd9bfde5c166fe02045c5a23da", "message": "support delete eviction policy", "committedDate": "2020-06-11T01:08:47Z", "type": "commit"}]}