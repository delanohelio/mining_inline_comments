{"pr_number": 1079, "pr_title": "Add CI pipeline and Fix azure, azure-sample test", "pr_createdAt": "2020-03-09T09:26:34Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1079", "timeline": [{"oid": "0ad7b0664cdb26a9a738c1e8286680c660f36a2e", "url": "https://github.com/Azure/azure-libraries-for-java/commit/0ad7b0664cdb26a9a738c1e8286680c660f36a2e", "message": "feat: add settings to ci-pipeline", "committedDate": "2020-03-09T09:12:20Z", "type": "commit"}, {"oid": "f4e25ee06eb9cb64f73bd72faedb42c9dc8a1863", "url": "https://github.com/Azure/azure-libraries-for-java/commit/f4e25ee06eb9cb64f73bd72faedb42c9dc8a1863", "message": "feat: synchronized when build rest client", "committedDate": "2020-03-09T09:19:45Z", "type": "commit"}, {"oid": "0295f71db82537ffcc590741a3b4013e87e3e2e0", "url": "https://github.com/Azure/azure-libraries-for-java/commit/0295f71db82537ffcc590741a3b4013e87e3e2e0", "message": "fix: sql test", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "071bef190ddac050c48fb2f7c74eb818486c79c9", "url": "https://github.com/Azure/azure-libraries-for-java/commit/071bef190ddac050c48fb2f7c74eb818486c79c9", "message": "fix: ci yml", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "a3595380aabbcc6e2fa97e6f52480a6d5d0d6393", "url": "https://github.com/Azure/azure-libraries-for-java/commit/a3595380aabbcc6e2fa97e6f52480a6d5d0d6393", "message": "fix: javadoc error", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "7f7f36a9064e56bb03ccfb266a05e3704502373b", "url": "https://github.com/Azure/azure-libraries-for-java/commit/7f7f36a9064e56bb03ccfb266a05e3704502373b", "message": "tmp: remove style check", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "3cd8e32fe61d8d507a7ed587a8992d201e770fab", "url": "https://github.com/Azure/azure-libraries-for-java/commit/3cd8e32fe61d8d507a7ed587a8992d201e770fab", "message": "fix: ci yml", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "08c4aa7d556fa3ce6d64e3ef7235de163e6c2425", "url": "https://github.com/Azure/azure-libraries-for-java/commit/08c4aa7d556fa3ce6d64e3ef7235de163e6c2425", "message": "revert mvn test", "committedDate": "2020-03-11T08:35:39Z", "type": "commit"}, {"oid": "e7bc4870c16a5b4194963800056da9c7ca8ebd16", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e7bc4870c16a5b4194963800056da9c7ca8ebd16", "message": "fix: surefire jvm crash problem", "committedDate": "2020-03-11T08:36:21Z", "type": "commit"}, {"oid": "d8d2f4ac14f4e7fd83ac4cef67b7968623ec94de", "url": "https://github.com/Azure/azure-libraries-for-java/commit/d8d2f4ac14f4e7fd83ac4cef67b7968623ec94de", "message": "Merge branch 'vnext' into vnext-pipeline", "committedDate": "2020-03-12T07:19:33Z", "type": "commit"}, {"oid": "bde4eb79cdb095d9848a40b0cf9f39ca30a8dd9f", "url": "https://github.com/Azure/azure-libraries-for-java/commit/bde4eb79cdb095d9848a40b0cf9f39ca30a8dd9f", "message": "feat: add sdkContext to azure test and fix some test case", "committedDate": "2020-03-16T07:41:31Z", "type": "commit"}, {"oid": "d8452c2751c0f6f991eb857a9184ef0b0bdb6151", "url": "https://github.com/Azure/azure-libraries-for-java/commit/d8452c2751c0f6f991eb857a9184ef0b0bdb6151", "message": "fix: cannot block the mono thread", "committedDate": "2020-03-17T02:40:02Z", "type": "commit"}, {"oid": "9b4baa2daee90c7b8d15ea20aadb484537d28a17", "url": "https://github.com/Azure/azure-libraries-for-java/commit/9b4baa2daee90c7b8d15ea20aadb484537d28a17", "message": "fix: resource group and deployment", "committedDate": "2020-03-17T02:40:07Z", "type": "commit"}, {"oid": "f692bad3e22085f3257fda6a0ef140b843899a06", "url": "https://github.com/Azure/azure-libraries-for-java/commit/f692bad3e22085f3257fda6a0ef140b843899a06", "message": "fix: reduce request for vm images list", "committedDate": "2020-03-17T02:40:08Z", "type": "commit"}, {"oid": "06f5ae480aaa19985b3a77488dafccaef606dab7", "url": "https://github.com/Azure/azure-libraries-for-java/commit/06f5ae480aaa19985b3a77488dafccaef606dab7", "message": "fix: naming dependency error", "committedDate": "2020-03-17T02:40:08Z", "type": "commit"}, {"oid": "5f7ce43ad078b08a4767fe40e4c181be8bda1e53", "url": "https://github.com/Azure/azure-libraries-for-java/commit/5f7ce43ad078b08a4767fe40e4c181be8bda1e53", "message": "feat: update session-records", "committedDate": "2020-03-17T02:40:08Z", "type": "commit"}, {"oid": "a2457b89242c11ceabd77fc915012eb66456f57d", "url": "https://github.com/Azure/azure-libraries-for-java/commit/a2457b89242c11ceabd77fc915012eb66456f57d", "message": "fix: deployment begin create", "committedDate": "2020-03-18T02:21:56Z", "type": "commit"}, {"oid": "d8fd163744da91d78b326c5f99ae9329af6c1e21", "url": "https://github.com/Azure/azure-libraries-for-java/commit/d8fd163744da91d78b326c5f99ae9329af6c1e21", "message": "fix: sample test", "committedDate": "2020-03-18T02:23:44Z", "type": "commit"}, {"oid": "39aae2133a551d54ad0a9c237843fa422e47af0a", "url": "https://github.com/Azure/azure-libraries-for-java/commit/39aae2133a551d54ad0a9c237843fa422e47af0a", "message": "feat: update session-records", "committedDate": "2020-03-18T02:24:01Z", "type": "commit"}, {"oid": "71b8354c8c48355113b6d78aaa418e7955154dbb", "url": "https://github.com/Azure/azure-libraries-for-java/commit/71b8354c8c48355113b6d78aaa418e7955154dbb", "message": "fix: naming error in parallel", "committedDate": "2020-03-18T04:59:14Z", "type": "commit"}, {"oid": "0eba3d59baa852c16c790bbf9cad772f585bf51b", "url": "https://github.com/Azure/azure-libraries-for-java/commit/0eba3d59baa852c16c790bbf9cad772f585bf51b", "message": "feat: add azure-core-management with snapshot and limit pr trigger for vnext", "committedDate": "2020-03-18T06:17:31Z", "type": "commit"}, {"oid": "bf9f8bf814a70666d015b0d84abaaefccf1f8686", "url": "https://github.com/Azure/azure-libraries-for-java/commit/bf9f8bf814a70666d015b0d84abaaefccf1f8686", "message": "feat: add snapshot repo first", "committedDate": "2020-03-18T07:22:00Z", "type": "commit"}, {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4", "url": "https://github.com/Azure/azure-libraries-for-java/commit/f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4", "message": "fix: Pair not found", "committedDate": "2020-03-18T08:22:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NjM2Mg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394196362", "bodyText": "Is these import necessary, given it is already compile pass?", "author": "weidongxu-microsoft", "createdAt": "2020-03-18T09:08:10Z", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n import com.azure.management.resources.fluentcore.arm.models.Resource;\n import com.azure.management.resources.fluentcore.model.Appliable;\n+import com.azure.management.resources.fluentcore.model.Attachable;", "originalCommit": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMjI3MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394202271", "bodyText": "It fixes a warning for https://github.com/azure/azure-libraries-for-java/blob/a3595380aabbcc6e2fa97e6f52480a6d5d0d6393/azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java#L85", "author": "ChenTanyi", "createdAt": "2020-03-18T09:18:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NjM2Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394273409", "bodyText": "Why we are having such kind of change from void to Mono?", "author": "xseeseesee", "createdAt": "2020-03-18T11:20:14Z", "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "originalCommit": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MDM1MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394740351", "bodyText": "Because this function could be implemented with blocking, which is not allowed during creation, so I change to Mono which can be chained.", "author": "ChenTanyi", "createdAt": "2020-03-19T01:35:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MzM3OA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394753378", "bodyText": "But in that case, you could wrap in createResourceAsync when it's required. I doubt if it is good style to do like this. After your changes, a lot of code snippet will work as it is while it just returns Mono.empty().", "author": "xseeseesee", "createdAt": "2020-03-19T02:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1NzMwOQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394757309", "bodyText": "Yes, but I'm afraid something bad happened if I change the blocking into createResourceAsync. The framework is not written by me, I can't guarantee to change everywhere. Anyway, I could try to change it. And actually, for this implementation, createResourceAsync is not necessary, it is splited into beforeCreating, createInner and afterCreating three necessary function. It could be strange when implement them all.", "author": "ChenTanyi", "createdAt": "2020-03-19T02:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2OTM2NA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394769364", "bodyText": "I am not sure but from v1 code in GroupableParentResourceImpl it seems the intention for beforeCreating and afterCreating is do things no blocking (so no request). But we have bug in v1 that do block.\nSo it fails in v2 after migration.\nAgree it might be better for us to fix the blocking issue in before/after if possible, as done in latest commit.", "author": "weidongxu-microsoft", "createdAt": "2020-03-19T03:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2OTkzMw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394769933", "bodyText": "Change it back, and use non-blocking chaining in another way.", "author": "ChenTanyi", "createdAt": "2020-03-19T03:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "chunk": "diff --git a/azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java b/azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java\nindex 207ed984..21b8ba6e 100644\n--- a/azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java\n+++ b/azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java\n\n@@ -1468,7 +1468,7 @@ public class VirtualMachineScaleSetImpl\n     // Create Update specific methods\n     //\n     @Override\n-    protected Mono<Void> beforeCreating() {\n+    protected void beforeCreating() {\n         if (this.extensions.size() > 0) {\n             this.inner()\n                     .virtualMachineProfile()\n"}}, {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "url": "https://github.com/Azure/azure-libraries-for-java/commit/b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "message": "revert: change before creating and after creating back to void", "committedDate": "2020-03-19T03:04:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTE5Nw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395435197", "bodyText": "Is it called somewhere instead?", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T04:31:13Z", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/RouteTableImpl.java", "diffHunk": "@@ -132,11 +132,6 @@ protected void beforeCreating() {\n         this.inner().withRoutes(innersFromWrappers(this.routes.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDQ0MA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440440", "bodyText": "The initializeChildrenFromInner is call before afterCreating in GroupableParentResourceImpl.createResourceAsync, https://github.com/azure/azure-libraries-for-java/blob/95bc556/azure-mgmt-resources/src/main/java/com/azure/management/resources/fluentcore/arm/models/implementation/GroupableParentResourceImpl.java#L57", "author": "ChenTanyi", "createdAt": "2020-03-20T05:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTE5Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTU2OA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395435568", "bodyText": "Is it called somewhere instead?", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T04:33:21Z", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -329,11 +327,6 @@ protected void beforeCreating() {\n         this.inner().withIpConfigurations(innersFromWrappers(this.ipConfigs.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDQ4Mg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440482", "bodyText": "same above.", "author": "ChenTanyi", "createdAt": "2020-03-20T05:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTU2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjEyMw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436123", "bodyText": "Would you let us know why it need synchronized. This method seems not sharing anything (and almost just a static method)?", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T04:36:30Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "diffHunk": "@@ -290,7 +290,7 @@ protected String baseUri() {\n         }\n     }\n \n-    protected RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {\n+    protected synchronized RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDY2MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440661", "bodyText": "It call a static function in RetryPolicy, which will cause iterator error if not synchronized.", "author": "ChenTanyi", "createdAt": "2020-03-20T05:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjEyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436377", "bodyText": "Same question. These are static method sharing nothing?", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T04:38:03Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java", "diffHunk": "@@ -19,7 +19,7 @@\n      *\n      * @param milliseconds time in milliseconds for which to sleep.\n      */\n-    public static void sleep(int milliseconds, boolean isRecordMode) {\n+    public synchronized static void sleep(int milliseconds, boolean isRecordMode) {", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDkzNQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440935", "bodyText": "Maybe this synchronized could be removed, I just add it to most static method, since they are dangerous in parallel test.", "author": "ChenTanyi", "createdAt": "2020-03-20T05:06:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1NTI2Mw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395455263", "bodyText": "Removed some unnecessary synchronized.", "author": "ChenTanyi", "createdAt": "2020-03-20T06:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0f3c03f9e683301b7a37b375e7ccefa6c7e8b40b", "chunk": "diff --git a/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java b/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java\nindex 46cc8cb05..1a8ee8c63 100644\n--- a/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java\n+++ b/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java\n\n@@ -19,7 +19,7 @@ public class TestUtilities {\n      *\n      * @param milliseconds time in milliseconds for which to sleep.\n      */\n-    public synchronized static void sleep(int milliseconds, boolean isRecordMode) {\n+    public static void sleep(int milliseconds, boolean isRecordMode) {\n         if (isRecordMode) {\n             try {\n                 Thread.sleep(milliseconds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436725", "bodyText": "Eh... stdout also considered IO blocking operation?", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T04:40:21Z", "path": "azure-samples/src/main/java/com/azure/management/network/samples/ManageVirtualNetworkAsync.java", "diffHunk": "@@ -131,15 +143,9 @@ public static boolean runSample(final Azure azure) {\n             ).map(indexable -> {\n                 if (indexable instanceof NetworkSecurityGroup) {\n                     NetworkSecurityGroup nsg = (NetworkSecurityGroup) indexable;\n-                    System.out.println(\"Created network security group\");\n-                    // Print the network security group\n-                    Utils.print(nsg);", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NDAzNA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395444034", "bodyText": "Blocking operation is in the Utils.print, it call some get function.", "author": "ChenTanyi", "createdAt": "2020-03-20T05:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NTkzOQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395445939", "bodyText": "Got it.", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T05:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440128", "bodyText": "There is a Collectors.joining as well.", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T05:01:54Z", "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "diffHunk": "@@ -463,8 +463,8 @@ public static void print(Vault vault) {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getKeys()))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getSecrets()));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))", "originalCommit": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NDg0MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395444841", "bodyText": "I'll test it later.", "author": "ChenTanyi", "createdAt": "2020-03-20T05:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NTkxOA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395445918", "bodyText": "No need to change now. Just a heads-up.", "author": "weidongxu-microsoft", "createdAt": "2020-03-20T05:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1Mjc3Nw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395452777", "bodyText": "I've added it for test, since it could shorten the code.", "author": "ChenTanyi", "createdAt": "2020-03-20T06:13:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}], "type": "inlineReview", "revised_code": {"commit": "e9c42e3faefa382282769e09ce0593064b671e49", "chunk": "diff --git a/azure-samples/src/main/java/com/azure/management/samples/Utils.java b/azure-samples/src/main/java/com/azure/management/samples/Utils.java\nindex a56e3b1b9..57756f0e8 100644\n--- a/azure-samples/src/main/java/com/azure/management/samples/Utils.java\n+++ b/azure-samples/src/main/java/com/azure/management/samples/Utils.java\n\n@@ -463,8 +464,8 @@ public final class Utils {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(String.join(\", \", accessPolicy.permissions().getSecrets().stream().map(secret -> secret.toString()).collect(Collectors.toList())));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(accessPolicy.permissions().getKeys().stream().map(Objects::toString).collect(Collectors.joining(\", \")))\n+                    .append(\"\\n\\t\\tSecret permissions: \").append(accessPolicy.permissions().getSecrets().stream().map(Objects::toString).collect(Collectors.joining(\", \")));\n         }\n         System.out.println(info.toString());\n     }\n"}}, {"oid": "0f3c03f9e683301b7a37b375e7ccefa6c7e8b40b", "url": "https://github.com/Azure/azure-libraries-for-java/commit/0f3c03f9e683301b7a37b375e7ccefa6c7e8b40b", "message": "fix: remove extra synchronized", "committedDate": "2020-03-20T05:47:45Z", "type": "commit"}, {"oid": "e9c42e3faefa382282769e09ce0593064b671e49", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e9c42e3faefa382282769e09ce0593064b671e49", "message": "feat: use collectors.joining", "committedDate": "2020-03-20T05:51:57Z", "type": "commit"}]}