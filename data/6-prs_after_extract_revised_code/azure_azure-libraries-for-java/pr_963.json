{"pr_number": 963, "pr_title": "Add record and playback test", "pr_createdAt": "2020-01-15T05:36:39Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/963", "timeline": [{"oid": "970617835505bc97f5dfe374b6043c8a561d3ef7", "url": "https://github.com/Azure/azure-libraries-for-java/commit/970617835505bc97f5dfe374b6043c8a561d3ef7", "message": "feat: add record and playback test", "committedDate": "2020-01-15T05:35:59Z", "type": "commit"}, {"oid": "2ac5bab5fff36ab65afb8d2097c49eeda8c91ea5", "url": "https://github.com/Azure/azure-libraries-for-java/commit/2ac5bab5fff36ab65afb8d2097c49eeda8c91ea5", "message": "Merge branch 'vnext' into vnext_testframework", "committedDate": "2020-01-15T05:47:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcwODU4Mg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r366708582", "bodyText": "Need a bit more discussion on this interface, whether need to group into withCredential?", "author": "weidongxu-microsoft", "createdAt": "2020-01-15T06:08:44Z", "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -144,6 +148,11 @@ public RestClientBuilder withConfiguration(Configuration configuration) {\n         return this;\r\n     }\r\n \r\n+    public RestClientBuilder withClientId(String clientId) {\r", "originalCommit": "2ac5bab5fff36ab65afb8d2097c49eeda8c91ea5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8144575fe2e7935f5cdf563c76860ab8937b11d", "chunk": "diff --git a/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java b/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\nindex 5f76ea97..fc644896 100644\n--- a/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\n+++ b/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\n\n@@ -148,11 +149,15 @@ public final class RestClientBuilder {\n         return this;\n     }\n \n-    public RestClientBuilder withClientId(String clientId) {\n-        this.clientId = clientId;\n+    public RestClientBuilder withScope(String scope) {\n+        this.scopes.add(scope);\n         return this;\n     }\n \n+    public String[] getScopes() {\n+        return this.scopes.isEmpty() ? defaultScopes : this.scopes.toArray(new String[0]);\n+    }\n+\n     public SerializerAdapter getSerializerAdapter() {\n         return this.serializerAdapter;\n     }\n"}}, {"oid": "a7e28004c91665f3c73f9a29e2b48769a267d262", "url": "https://github.com/Azure/azure-libraries-for-java/commit/a7e28004c91665f3c73f9a29e2b48769a267d262", "message": "Rename CachedHttpResponse to RecordedHttpResponse and close original response", "committedDate": "2020-01-15T06:39:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzMDE4Mg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r366930182", "bodyText": "The second part should be factor out and make it clear of the meaning.", "author": "yaohaizh", "createdAt": "2020-01-15T15:13:44Z", "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -66,7 +69,8 @@ public RestClient buildClient() {\n         // Closest to API goes first, closest to wire goes last.\r\n         final List<HttpPipelinePolicy> policies = new ArrayList<>();\r\n         // TODO: Add UserAgent\r\n-        // TODO Add credential policy\r\n+        // policies.add(new UserAgentPolicy(\"test\", this.getClass().getPackage().getName(), this.getClass().getPackage().getImplementationVersion(), Configuration.getGlobalConfiguration()));\r\n+        policies.add(new BearerTokenAuthenticationPolicy(this.credential, (this.clientId == null ? \"\" : this.clientId) + \"/.default\"));\r", "originalCommit": "a7e28004c91665f3c73f9a29e2b48769a267d262", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "84fa3b19aab80f862d17a45caebd54a0ae76d59c", "chunk": "diff --git a/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java b/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\nindex 5f76ea97..ee684d72 100644\n--- a/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\n+++ b/azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java\n\n@@ -68,9 +67,9 @@ public final class RestClientBuilder {\n \n         // Closest to API goes first, closest to wire goes last.\n         final List<HttpPipelinePolicy> policies = new ArrayList<>();\n-        // TODO: Add UserAgent\n-        // policies.add(new UserAgentPolicy(\"test\", this.getClass().getPackage().getName(), this.getClass().getPackage().getImplementationVersion(), Configuration.getGlobalConfiguration()));\n-        policies.add(new BearerTokenAuthenticationPolicy(this.credential, (this.clientId == null ? \"\" : this.clientId) + \"/.default\"));\n+        policies.add(new UserAgentPolicy(httpLogOptions, configuration));\n+        // TODO Add credential policy\n+\n         HttpPolicyProviders.addBeforeRetryPolicies(policies);\n         policies.add(retryPolicy);\n         policies.addAll(this.policies);\n"}}, {"oid": "84fa3b19aab80f862d17a45caebd54a0ae76d59c", "url": "https://github.com/Azure/azure-libraries-for-java/commit/84fa3b19aab80f862d17a45caebd54a0ae76d59c", "message": "Merge branch 'vnext' into vnext_testframework", "committedDate": "2020-01-20T06:02:01Z", "type": "commit"}, {"oid": "e8144575fe2e7935f5cdf563c76860ab8937b11d", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e8144575fe2e7935f5cdf563c76860ab8937b11d", "message": "feat: use scopes in rest client", "committedDate": "2020-01-20T06:21:52Z", "type": "commit"}, {"oid": "750833305c32930f07b7d3c4934791a398413cde", "url": "https://github.com/Azure/azure-libraries-for-java/commit/750833305c32930f07b7d3c4934791a398413cde", "message": "Merge branch 'vnext' into vnext_testframework", "committedDate": "2020-01-20T08:23:02Z", "type": "commit"}, {"oid": "52d892637388f25a0e0234e08956af7a9af84098", "url": "https://github.com/Azure/azure-libraries-for-java/commit/52d892637388f25a0e0234e08956af7a9af84098", "message": "fix: do not read body when content-length is 0", "committedDate": "2020-01-21T06:19:31Z", "type": "commit"}, {"oid": "01f79a119fb8a766a90d4b438be99fbf7e8494ac", "url": "https://github.com/Azure/azure-libraries-for-java/commit/01f79a119fb8a766a90d4b438be99fbf7e8494ac", "message": "Merge branch 'vnext' into vnext_testframework", "committedDate": "2020-02-04T07:15:33Z", "type": "commit"}, {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6", "url": "https://github.com/Azure/azure-libraries-for-java/commit/47df65ab9bf0a6deb57b3f15016b48a329da2cd6", "message": "fix compile error and make localhost pass authetication policy", "committedDate": "2020-02-04T08:05:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374543127", "bodyText": "just int?", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T08:57:29Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "diffHunk": "@@ -37,7 +36,8 @@\n public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n-    private static final String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code", "originalCommit": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTgwNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374551806", "bodyText": "The original one is int https://hc.apache.org/httpcomponents-core-4.4.x/httpcore/apidocs/org/apache/http/HttpStatus.html", "author": "ChenTanyi", "createdAt": "2020-02-04T09:16:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1ODQwNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374558406", "bodyText": "Got it. I mean just use int should be OK, no need for Integer (which could have problem when using ==).", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MDkyOA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374560928", "bodyText": "Got it, I have seen the Integer.ParseInt, so I thought it would get Integer before.", "author": "ChenTanyi", "createdAt": "2020-02-04T09:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}], "type": "inlineReview", "revised_code": {"commit": "089ed89944439ad8d9021ba2d36cd7584afaf6ab", "chunk": "diff --git a/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java b/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java\nindex 2179dcc3..7b9e0f06 100644\n--- a/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java\n+++ b/azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java\n\n@@ -37,7 +37,7 @@ public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n     private final static String BODY_LOGGING = \"x-ms-body-logging\";\n-    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code\n+    private final static int HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code\n \n     private Map<String, String> textReplacementRules = new HashMap<>();\n     // Stores a map of all the HTTP properties in a session\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374543726", "bodyText": "Try see if we can have another solution? It seems not reasonable to change product code because of test reason.", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T08:58:38Z", "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "diffHunk": "@@ -72,7 +72,8 @@ private String getDefaultScopeFromRequest(HttpRequest request) {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n+            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {", "originalCommit": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTEwMg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374551102", "bodyText": "I use it due to I thought the localhost should not be blocked even there is user use it in real request. And the request for localhost usually doesn't have https.", "author": "ChenTanyi", "createdAt": "2020-02-04T09:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTgwMg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374561802", "bodyText": "Yes, probably OK. Just check whether we could say use an overloaded BearerTokenPolicy for playback (or do we need Auth on playback at all?).", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3MTIxNw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374571217", "bodyText": "I think we could add a skipAuthetication for restClientBuilder.", "author": "ChenTanyi", "createdAt": "2020-02-04T09:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "25ac6e6b84f8d07d34c43cbd1d850076c5753e51", "chunk": "diff --git a/azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java b/azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java\nindex fadc0dcb..8d20bb6f 100644\n--- a/azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java\n+++ b/azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java\n\n@@ -72,8 +72,7 @@ public class BearerTokenAuthenticationPolicy implements HttpPipelinePolicy {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n-            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n             return Mono.error(new RuntimeException(\"token credentials require a URL using the HTTPS protocol scheme\"));\n         }\n \n"}}, {"oid": "089ed89944439ad8d9021ba2d36cd7584afaf6ab", "url": "https://github.com/Azure/azure-libraries-for-java/commit/089ed89944439ad8d9021ba2d36cd7584afaf6ab", "message": "fix: use int instead of Integer for http status code", "committedDate": "2020-02-04T09:32:47Z", "type": "commit"}, {"oid": "25ac6e6b84f8d07d34c43cbd1d850076c5753e51", "url": "https://github.com/Azure/azure-libraries-for-java/commit/25ac6e6b84f8d07d34c43cbd1d850076c5753e51", "message": "fix: use credential to check if need to skip authentication", "committedDate": "2020-02-05T02:12:24Z", "type": "commit"}]}