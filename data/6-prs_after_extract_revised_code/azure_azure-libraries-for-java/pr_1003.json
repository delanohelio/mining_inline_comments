{"pr_number": 1003, "pr_title": "GraphRbac/MSI: V2 update", "pr_createdAt": "2020-02-04T09:16:36Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1003", "timeline": [{"oid": "f02aebafc8da0e177c93e51da42c99ca5f53be08", "url": "https://github.com/Azure/azure-libraries-for-java/commit/f02aebafc8da0e177c93e51da42c99ca5f53be08", "message": "GraphRbac: fix GroupsTests and avoid using toIterable", "committedDate": "2020-02-04T09:09:19Z", "type": "commit"}, {"oid": "6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "url": "https://github.com/Azure/azure-libraries-for-java/commit/6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "message": "GraphRbac: fix code import style", "committedDate": "2020-02-04T09:15:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MjI2Ng==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1003#discussion_r374562266", "bodyText": "Better to use directoryObjectInner instanceof UserInner?", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:36:42Z", "path": "azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryGroupImpl.java", "diffHunk": "@@ -74,22 +72,17 @@ public String mail() {\n     public PagedFlux<ActiveDirectoryObject> listMembersAsync() {\n         return getManager().getInner().groups().getGroupMembersAsync(getId())\n                 .mapPage(directoryObjectInner -> {\n-                    SerializerAdapter adapter = getManager().getInner().getSerializerAdapter();\n-                    try {\n-                        String serialized = adapter.serialize(directoryObjectInner, SerializerEncoding.JSON);\n-                        if (serialized.contains(\"User\")) {\n-                            return new ActiveDirectoryUserImpl(adapter.deserialize(serialized, UserInner.class, SerializerEncoding.JSON), getManager());\n-                        } else if (serialized.contains(\"Group\")) {\n-                            return new ActiveDirectoryGroupImpl(adapter.deserialize(serialized, ADGroupInner.class, SerializerEncoding.JSON), getManager());\n-                        } else if (serialized.contains(\"ServicePrincipal\")) {\n-                            return new ServicePrincipalImpl(adapter.deserialize(serialized, ServicePrincipalInner.class, SerializerEncoding.JSON), getManager());\n-                        } else if (serialized.contains(\"Application\")) {\n-                            return new ActiveDirectoryApplicationImpl(adapter.deserialize(serialized, ApplicationInner.class, SerializerEncoding.JSON), getManager());\n-                        } else {\n-                            return null;\n-                        }\n-                    } catch (IOException e) {\n-                        throw new RuntimeException(e);\n+                    String objectType = directoryObjectInner.getClass().getName();\n+                    if (UserInner.class.getName().equals(objectType)) {", "originalCommit": "6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cca524971de14a37a7aa4c8750ebd28e6fc81799", "chunk": "diff --git a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryGroupImpl.java b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryGroupImpl.java\nindex 498d61c7..2d5dc3bc 100644\n--- a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryGroupImpl.java\n+++ b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryGroupImpl.java\n\n@@ -70,17 +70,16 @@ class ActiveDirectoryGroupImpl\n \n     @Override\n     public PagedFlux<ActiveDirectoryObject> listMembersAsync() {\n-        return getManager().getInner().groups().getGroupMembersAsync(getId())\n+        return manager().inner().groups().getGroupMembersAsync(id())\n                 .mapPage(directoryObjectInner -> {\n-                    String objectType = directoryObjectInner.getClass().getName();\n-                    if (UserInner.class.getName().equals(objectType)) {\n-                        return new ActiveDirectoryUserImpl((UserInner) directoryObjectInner, getManager());\n-                    } else if (ADGroupInner.class.getName().equals(objectType)) {\n-                        return new ActiveDirectoryGroupImpl((ADGroupInner)directoryObjectInner, getManager());\n-                    } else if (ServicePrincipalInner.class.getName().equals(objectType)) {\n-                        return new ServicePrincipalImpl((ServicePrincipalInner)directoryObjectInner, getManager());\n-                    } else if (ApplicationInner.class.getName().equals(objectType)) {\n-                        return new ActiveDirectoryApplicationImpl((ApplicationInner)directoryObjectInner, getManager());\n+                    if (directoryObjectInner instanceof UserInner) {\n+                        return new ActiveDirectoryUserImpl((UserInner) directoryObjectInner, manager());\n+                    } else if (directoryObjectInner instanceof ADGroupInner) {\n+                        return new ActiveDirectoryGroupImpl((ADGroupInner)directoryObjectInner, manager());\n+                    } else if (directoryObjectInner instanceof ServicePrincipalInner) {\n+                        return new ServicePrincipalImpl((ServicePrincipalInner)directoryObjectInner, manager());\n+                    } else if (directoryObjectInner instanceof ApplicationInner) {\n+                        return new ActiveDirectoryApplicationImpl((ApplicationInner)directoryObjectInner, manager());\n                     } else {\n                         return null;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MzU1MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1003#discussion_r374563551", "bodyText": "I think this line will have Error when not found. So it need to be followed by onErrorResume?", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:39:23Z", "path": "azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java", "diffHunk": "@@ -69,22 +70,18 @@ public ActiveDirectoryUserImpl getByName(String upn) {\n     @Override\n     public Mono<ActiveDirectoryUser> getByNameAsync(final String name) {\n         return getManager().getInner().users().getAsync(name)", "originalCommit": "6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cca524971de14a37a7aa4c8750ebd28e6fc81799", "chunk": "diff --git a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\nindex 8d63d013..18886f71 100644\n--- a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\n+++ b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\n\n@@ -69,15 +69,15 @@ class ActiveDirectoryUsersImpl\n \n     @Override\n     public Mono<ActiveDirectoryUser> getByNameAsync(final String name) {\n-        return getManager().getInner().users().getAsync(name)\n+        return manager().inner().users().getAsync(name)\n                 .flatMap((Function<UserInner, Mono<UserInner>>) userInner -> Mono.just(userInner))\n                 .switchIfEmpty(Mono.defer((Supplier<Mono<UserInner>>) () -> {\n                     if (name.contains(\"@\")) {\n-                        return getManager().getInner().users().listAsync(\n+                        return manager().inner().users().listAsync(\n                                 String.format(\"mail eq '%s' or mailNickName eq '%s#EXT#'\", name, name.replace(\"@\", \"_\"))\n                         ).last();\n                     } else {\n-                        return getManager().getInner().users().listAsync(\n+                        return manager().inner().users().listAsync(\n                                 String.format(\"displayName eq '%s'\", name)\n                         ).last();\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MzY5MA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1003#discussion_r374563690", "bodyText": "This line is meanless?", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:39:40Z", "path": "azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java", "diffHunk": "@@ -69,22 +70,18 @@ public ActiveDirectoryUserImpl getByName(String upn) {\n     @Override\n     public Mono<ActiveDirectoryUser> getByNameAsync(final String name) {\n         return getManager().getInner().users().getAsync(name)\n-                .flatMap((Function<UserInner, Mono<UserInner>>) userInner -> {\n-                    // Exact match\n-                    if (userInner != null) {\n-                        return Mono.just(userInner);\n-                    }\n-                    // Search mail & mail nickname\n+                .flatMap((Function<UserInner, Mono<UserInner>>) userInner -> Mono.just(userInner))", "originalCommit": "6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cca524971de14a37a7aa4c8750ebd28e6fc81799", "chunk": "diff --git a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\nindex 8d63d013..18886f71 100644\n--- a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\n+++ b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ActiveDirectoryUsersImpl.java\n\n@@ -69,15 +69,15 @@ class ActiveDirectoryUsersImpl\n \n     @Override\n     public Mono<ActiveDirectoryUser> getByNameAsync(final String name) {\n-        return getManager().getInner().users().getAsync(name)\n+        return manager().inner().users().getAsync(name)\n                 .flatMap((Function<UserInner, Mono<UserInner>>) userInner -> Mono.just(userInner))\n                 .switchIfEmpty(Mono.defer((Supplier<Mono<UserInner>>) () -> {\n                     if (name.contains(\"@\")) {\n-                        return getManager().getInner().users().listAsync(\n+                        return manager().inner().users().listAsync(\n                                 String.format(\"mail eq '%s' or mailNickName eq '%s#EXT#'\", name, name.replace(\"@\", \"_\"))\n                         ).last();\n                     } else {\n-                        return getManager().getInner().users().listAsync(\n+                        return manager().inner().users().listAsync(\n                                 String.format(\"displayName eq '%s'\", name)\n                         ).last();\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NjIxNg==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1003#discussion_r374566216", "bodyText": "Again, I think reactor does not allow null at all. You need to use map and switchIfEmpty.", "author": "weidongxu-microsoft", "createdAt": "2020-02-04T09:44:32Z", "path": "azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ServicePrincipalsImpl.java", "diffHunk": "@@ -98,10 +98,14 @@ public ServicePrincipal getByName(String spn) {\n                     ));\n                 })\n                 .map(result -> {\n-                    if (result == null || result.toIterable() == null || !result.toIterable().iterator().hasNext()) {\n+                    if (result == null) {", "originalCommit": "6a06c1aef1ee60d2b46b554ae85c22f3225caac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cca524971de14a37a7aa4c8750ebd28e6fc81799", "chunk": "diff --git a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ServicePrincipalsImpl.java b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ServicePrincipalsImpl.java\nindex 1826b44d..9dcd6a36 100644\n--- a/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ServicePrincipalsImpl.java\n+++ b/azure-mgmt-graph-rbac/src/main/java/com/azure/management/graphrbac/implementation/ServicePrincipalsImpl.java\n\n@@ -105,7 +105,7 @@ class ServicePrincipalsImpl\n                     if (servicePrincipalInner == null) {\n                         return null;\n                     }\n-                    return new ServicePrincipalImpl(servicePrincipalInner, getManager());\n+                    return new ServicePrincipalImpl(servicePrincipalInner, manager());\n                 })\n                 .flatMap((Function<ServicePrincipalImpl, Mono<ServicePrincipal>>) servicePrincipal -> {\n                     if (servicePrincipal == null) {\n"}}, {"oid": "cf7ebecca9e83a61c4a8d4f6e8cf660507d471d4", "url": "https://github.com/Azure/azure-libraries-for-java/commit/cf7ebecca9e83a61c4a8d4f6e8cf660507d471d4", "message": "Merge branch 'vnext' into vnext-graph-msi", "committedDate": "2020-02-10T10:04:17Z", "type": "commit"}, {"oid": "cca524971de14a37a7aa4c8750ebd28e6fc81799", "url": "https://github.com/Azure/azure-libraries-for-java/commit/cca524971de14a37a7aa4c8750ebd28e6fc81799", "message": "GraphRbac/MSI: fix tests", "committedDate": "2020-02-10T11:03:42Z", "type": "commit"}, {"oid": "3937ab98aa98a2ea6123f7806ccb874bf3acde37", "url": "https://github.com/Azure/azure-libraries-for-java/commit/3937ab98aa98a2ea6123f7806ccb874bf3acde37", "message": "GraphRbac: avoid using toIterable()", "committedDate": "2020-02-10T11:18:14Z", "type": "commit"}, {"oid": "3fdb98fac69d74f5d92249011e63b24e5e6e7a07", "url": "https://github.com/Azure/azure-libraries-for-java/commit/3fdb98fac69d74f5d92249011e63b24e5e6e7a07", "message": "GraphRbac: update with switchIfEmpty()", "committedDate": "2020-02-10T12:11:05Z", "type": "commit"}, {"oid": "b625edd36bdb5a40d11c125f5349681a979d5465", "url": "https://github.com/Azure/azure-libraries-for-java/commit/b625edd36bdb5a40d11c125f5349681a979d5465", "message": "Graph: add exception handling and reformat coding style", "committedDate": "2020-02-11T10:19:45Z", "type": "commit"}, {"oid": "e35fd0e14f53de8c310d8b6e585f94741aeaf516", "url": "https://github.com/Azure/azure-libraries-for-java/commit/e35fd0e14f53de8c310d8b6e585f94741aeaf516", "message": "Graph: remove redundant", "committedDate": "2020-02-11T10:22:05Z", "type": "commit"}]}