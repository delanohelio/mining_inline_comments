{"pr_number": 282, "pr_title": "Fix PersistFlowUnitAndSummaryTest", "pr_createdAt": "2020-07-16T19:01:03Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/282", "timeline": [{"oid": "9ba111bd5efcc7b7006a76f8bab33ac8a41d07b4", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/9ba111bd5efcc7b7006a76f8bab33ac8a41d07b4", "message": "Fix PersistFlowUnitAndSummaryTest", "committedDate": "2020-07-16T18:52:44Z", "type": "commit"}, {"oid": "7a16048d1a39e7838e3df0cd9dc39ea700d0f8e5", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7a16048d1a39e7838e3df0cd9dc39ea700d0f8e5", "message": "update gradle.yml", "committedDate": "2020-07-16T18:53:33Z", "type": "commit"}, {"oid": "20e03329b8fef61d457b21ce3bc5d5693989bc75", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/20e03329b8fef61d457b21ce3bc5d5693989bc75", "message": "revert changes made in gradle.yml", "committedDate": "2020-07-16T19:00:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMzU3Mg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/282#discussion_r456013572", "bodyText": "Shouldn't this be error ?", "author": "yojs", "createdAt": "2020-07-16T19:14:11Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java", "diffHunk": "@@ -211,7 +212,7 @@ private void rotateRegisterGarbageThenCreateNewDB(RotationType type) throws IOEx\n       T flowUnit, String tableName) throws SQLException, IOException {\n     try {\n         tryWriteFlowUnit(flowUnit, tableName);\n-    } catch (SQLException e) {\n+    } catch (SQLException | DataAccessException e) {\n       LOG.info(", "originalCommit": "20e03329b8fef61d457b21ce3bc5d5693989bc75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA2Mzg0NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/282#discussion_r456063844", "bodyText": "updated the error log", "author": "rguo-aws", "createdAt": "2020-07-16T20:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMzU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "cdc92d022774a5f44bd2a049201c8f1d881ae746", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java\nindex 98272066..e953aa60 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistorBase.java\n\n@@ -214,7 +214,7 @@ public abstract class PersistorBase implements Persistable {\n         tryWriteFlowUnit(flowUnit, tableName);\n     } catch (SQLException | DataAccessException e) {\n       LOG.info(\n-          \"RCA: Fail to write to table '{}', try creating a new DB\", tableName);\n+          \"RCA: Fail to write to table '{}', creating a new DB file and retrying write/create operation\", tableName);\n       rotateRegisterGarbageThenCreateNewDB(RotationType.FORCE_ROTATE);\n       tryWriteFlowUnit(flowUnit, tableName);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxNjMzMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/282#discussion_r456016330", "bodyText": "I see that HighHeapUsageClusterRcaX node is created in the construct but it is removed from verification here. Can you add a code-comment with the reason ?", "author": "yojs", "createdAt": "2020-07-16T19:19:15Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java", "diffHunk": "@@ -176,35 +176,44 @@ private AppContext createAppContextWithDataNodes(String nodeName, NodeRole role)\n     return appContext;\n   }\n \n+  /**\n+   * Add testPersistSummaryOnDataNode() and testPersistSummaryOnMasterNode() into a single UT\n+   * This will force both tests to run in sequential and can avoid access contention to the\n+   * same db file.\n+   * @throws Exception SQL exception\n+   */\n   @Test\n-  public void testPersistSummaryOnDataNode() throws Exception {\n-    AppContext appContext = createAppContextWithDataNodes(\"node1\", NodeRole.DATA);\n-\n-    AnalysisGraph graph = new DataNodeGraph();\n+  public void testPersisSummary() throws Exception {\n     RcaConf rcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"rca.conf\").toString());\n+    RcaConf masterRcaConf = new RcaConf(Paths.get(RcaConsts.TEST_CONFIG_PATH, \"rca_elected_master.conf\").toString());\n     Persistable persistable = PersistenceFactory.create(rcaConf);\n+    testPersistSummaryOnDataNode(rcaConf, persistable);\n+    testPersistSummaryOnMasterNode(masterRcaConf, persistable);\n+    persistable.close();\n+  }\n+\n+  private void testPersistSummaryOnDataNode(RcaConf rcaConf, Persistable persistable) throws Exception {\n+    AppContext appContext = createAppContextWithDataNodes(\"node1\", NodeRole.DATA, false);\n+\n+    AnalysisGraph graph = new DataNodeGraph();\n     RCAScheduler scheduler = startScheduler(rcaConf, graph, persistable, this.queryable, appContext);\n     // Wait at most 1 minute for the persisted data to show up with the correct contents\n     WaitFor.waitFor(() -> {\n       String readTableStr = persistable.read();\n       System.out.println(readTableStr);\n       if (readTableStr != null) {\n         return readTableStr.contains(\"HotResourceSummary\") && readTableStr.contains(\"DummyYoungGenRca\")\n-                && readTableStr.contains(\"HotNodeSummary\") && readTableStr.contains(\"HotNodeRcaX\")\n-                && readTableStr.contains(\"HighHeapUsageClusterRcaX\");\n+                && readTableStr.contains(\"HotNodeSummary\") && readTableStr.contains(\"HotNodeRcaX\");", "originalCommit": "20e03329b8fef61d457b21ce3bc5d5693989bc75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA2NDgzNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/282#discussion_r456064835", "bodyText": "done", "author": "rguo-aws", "createdAt": "2020-07-16T20:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxNjMzMA=="}], "type": "inlineReview", "revised_code": {"commit": "acc8dc259039e8a0e591b30f683cb3875c2df049", "chunk": "diff --git a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java\nindex 29b9168f..42dfec08 100644\n--- a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java\n+++ b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/PersistFlowUnitAndSummaryTest.java\n\n@@ -202,6 +202,8 @@ public class PersistFlowUnitAndSummaryTest {\n       String readTableStr = persistable.read();\n       System.out.println(readTableStr);\n       if (readTableStr != null) {\n+        // HighHeapUsageClusterRcaX is a cluster level RCA so it should not be scheduled and persisted on\n+        // data node.\n         return readTableStr.contains(\"HotResourceSummary\") && readTableStr.contains(\"DummyYoungGenRca\")\n                 && readTableStr.contains(\"HotNodeSummary\") && readTableStr.contains(\"HotNodeRcaX\");\n       }\n"}}, {"oid": "cdc92d022774a5f44bd2a049201c8f1d881ae746", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/cdc92d022774a5f44bd2a049201c8f1d881ae746", "message": "Address PR comment", "committedDate": "2020-07-16T20:37:42Z", "type": "commit"}, {"oid": "acc8dc259039e8a0e591b30f683cb3875c2df049", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/acc8dc259039e8a0e591b30f683cb3875c2df049", "message": "Add comment", "committedDate": "2020-07-16T20:40:22Z", "type": "commit"}]}