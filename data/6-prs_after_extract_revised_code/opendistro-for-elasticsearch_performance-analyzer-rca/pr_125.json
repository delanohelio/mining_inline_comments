{"pr_number": 125, "pr_title": "Create a base class RCA ResourceResourceRca as a generic resource type RCA. Add HighCpuRca to collect total cpu usage", "pr_createdAt": "2020-03-10T01:18:59Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125", "timeline": [{"oid": "809c04b864cac24a216c393493ca127f0f738d93", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/809c04b864cac24a216c393493ca127f0f738d93", "message": "Add GenericResourceRca and HighCpuRca", "committedDate": "2020-03-10T01:05:16Z", "type": "commit"}, {"oid": "e0edfe076241a9f667f8b82bd6a27de5023b36a8", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e0edfe076241a9f667f8b82bd6a27de5023b36a8", "message": "fix check style", "committedDate": "2020-03-10T01:14:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4ODQxOA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125#discussion_r395788418", "bodyText": "Can we make this final so that its threadsafe?", "author": "ditac", "createdAt": "2020-03-20T17:30:29Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.store.rca.hot_node;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceType;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Metric;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Rca;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.aggregators.SlidingWindow;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.aggregators.SlidingWindowData;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.contexts.ResourceContext;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.MetricFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.flow_units.ResourceFlowUnit;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.HotResourceSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.summaries.TopConsumerSummary;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.scheduler.FlowUnitOperationArgWrapper;\n+import java.time.Clock;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jooq.Record;\n+import org.jooq.Result;\n+import org.jooq.exception.DataTypeException;\n+\n+/**\n+ * Generic resource type RCA. ideally this RCA can be extended to any resource type\n+ * and calculate the total resource usage & top consumers.\n+ */\n+public class GenericResourceRca extends Rca<ResourceFlowUnit> {\n+\n+  private static final Logger LOG = LogManager.getLogger(GenericResourceRca.class);\n+  private static final int SLIDING_WINDOW_IN_MIN = 10;\n+  private static final int DEFAULT_TOP_K = 3;\n+  private static final double DEFAULT_LOWER_BOUND_THRESHOLD = 0.0;\n+  private final SlidingWindow<SlidingWindowData> slidingWindow;\n+  private final Metric resourceUsageGroupByConsumer;\n+  private final int rcaPeriod;\n+  private int counter;\n+  private final ResourceType resourceType;\n+  private double threshold;", "originalCommit": "e0edfe076241a9f667f8b82bd6a27de5023b36a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxNTA0NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/125#discussion_r396715044", "bodyText": "I have changed those variables to volatile to make them thread safe", "author": "rguo-aws", "createdAt": "2020-03-23T19:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4ODQxOA=="}], "type": "inlineReview", "revised_code": {"commit": "5b580c6e3cd07ac2447bd535d63ed15cfa6da567", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java\nindex 03d49961..4bf26dca 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/rca/hot_node/GenericResourceRca.java\n\n@@ -51,9 +51,9 @@ public class GenericResourceRca extends Rca<ResourceFlowUnit> {\n   private final int rcaPeriod;\n   private int counter;\n   private final ResourceType resourceType;\n-  private double threshold;\n-  private double lowerBoundThreshold;\n-  private int topK;\n+  private volatile double threshold;\n+  private volatile double lowerBoundThreshold;\n+  private volatile int topK;\n   protected Clock clock;\n \n   /**\n"}}, {"oid": "5b580c6e3cd07ac2447bd535d63ed15cfa6da567", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/5b580c6e3cd07ac2447bd535d63ed15cfa6da567", "message": "make GenericResourceRca thread safe", "committedDate": "2020-03-23T19:42:11Z", "type": "commit"}]}