{"pr_number": 482, "pr_title": "Evaluate the 128G RCAs only if CMS is the collector for OldGen", "pr_createdAt": "2020-10-20T09:12:56Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482", "timeline": [{"oid": "f2e03b719fe148e1342e2f7d462a43ee31216f92", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f2e03b719fe148e1342e2f7d462a43ee31216f92", "message": "Depend on GC_Type", "committedDate": "2020-10-20T08:59:39Z", "type": "commit"}, {"oid": "c2c088b2c07ec09bea8473dade9d3baead6c453f", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c2c088b2c07ec09bea8473dade9d3baead6c453f", "message": "Checkstyle fixes", "committedDate": "2020-10-20T16:48:23Z", "type": "commit"}, {"oid": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "message": "Add newline", "committedDate": "2020-10-20T16:50:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODIyMg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698222", "bodyText": "nit: unnecessary", "author": "sidheart", "createdAt": "2020-10-20T17:09:10Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -125,22 +126,27 @@ public void construct() {\n     Metric gcEvent = new GC_Collection_Event(EVALUATION_INTERVAL_SECONDS);\n     Heap_Max heapMax = new Heap_Max(EVALUATION_INTERVAL_SECONDS);\n     Metric gc_Collection_Time = new GC_Collection_Time(EVALUATION_INTERVAL_SECONDS);\n+    Metric gcType = new GC_Type(EVALUATION_INTERVAL_SECONDS);\n     Metric cpuUtilizationGroupByOperation = new AggregateMetric(1, CPU_Utilization.NAME,\n             AggregateFunction.SUM,\n             MetricsDB.AVG, CommonDimension.OPERATION.toString());\n \n     heapUsed.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gcEvent.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    gcType.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     heapMax.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n+", "originalCommit": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwNTk2MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508705960", "bodyText": "removed", "author": "ktkrg", "createdAt": "2020-10-20T17:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODIyMg=="}], "type": "inlineReview", "revised_code": {"commit": "59bc804cfd899a39c5729c21c442acc64eedc094", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\nindex 2b8ab768..e16c911a 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n\n@@ -138,7 +138,6 @@ public class ElasticSearchAnalysisGraph extends AnalysisGraph {\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n-\n     addLeaf(heapUsed);\n     addLeaf(gcEvent);\n     addLeaf(gcType);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODI5MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698290", "bodyText": "nit: unnecessary", "author": "sidheart", "createdAt": "2020-10-20T17:09:15Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -125,22 +126,27 @@ public void construct() {\n     Metric gcEvent = new GC_Collection_Event(EVALUATION_INTERVAL_SECONDS);\n     Heap_Max heapMax = new Heap_Max(EVALUATION_INTERVAL_SECONDS);\n     Metric gc_Collection_Time = new GC_Collection_Time(EVALUATION_INTERVAL_SECONDS);\n+    Metric gcType = new GC_Type(EVALUATION_INTERVAL_SECONDS);\n     Metric cpuUtilizationGroupByOperation = new AggregateMetric(1, CPU_Utilization.NAME,\n             AggregateFunction.SUM,\n             MetricsDB.AVG, CommonDimension.OPERATION.toString());\n \n     heapUsed.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gcEvent.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    gcType.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     heapMax.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n+\n     addLeaf(heapUsed);\n     addLeaf(gcEvent);\n+    addLeaf(gcType);\n     addLeaf(heapMax);\n     addLeaf(gc_Collection_Time);\n     addLeaf(cpuUtilizationGroupByOperation);\n \n+", "originalCommit": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59bc804cfd899a39c5729c21c442acc64eedc094", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\nindex 2b8ab768..e16c911a 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n\n@@ -138,7 +138,6 @@ public class ElasticSearchAnalysisGraph extends AnalysisGraph {\n     gc_Collection_Time.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     cpuUtilizationGroupByOperation.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n \n-\n     addLeaf(heapUsed);\n     addLeaf(gcEvent);\n     addLeaf(gcType);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODU4Nw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698587", "bodyText": "Add gcType as an upstream", "author": "sidheart", "createdAt": "2020-10-20T17:09:42Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -176,12 +182,13 @@ public void construct() {\n     hotNodeClusterRca.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     hotNodeClusterRca.addAllUpstreams(Collections.singletonList(hotJVMNodeRca));\n \n-    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax, heapUsed);\n+    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n+        heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));", "originalCommit": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwNTY4OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508705688", "bodyText": "good catch! Added.", "author": "ktkrg", "createdAt": "2020-10-20T17:20:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "59bc804cfd899a39c5729c21c442acc64eedc094", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\nindex 2b8ab768..e16c911a 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n\n@@ -185,12 +183,12 @@ public class ElasticSearchAnalysisGraph extends AnalysisGraph {\n     final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n         heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n-    oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));\n+    oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed, gcType));\n \n     final OldGenReclamationRca oldGenReclamationRca = new OldGenReclamationRca(heapUsed,\n         heapMax, gcEvent, gcType);\n     oldGenReclamationRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n-    oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent));\n+    oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent, gcType));\n \n     final OldGenContendedRca oldGenContendedRca = new OldGenContendedRca(oldGenOccupancyRca,\n         oldGenReclamationRca);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5ODgyMw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/482#discussion_r508698823", "bodyText": "Add gcType as an upstream", "author": "sidheart", "createdAt": "2020-10-20T17:10:01Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -176,12 +182,13 @@ public void construct() {\n     hotNodeClusterRca.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     hotNodeClusterRca.addAllUpstreams(Collections.singletonList(hotJVMNodeRca));\n \n-    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax, heapUsed);\n+    final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n+        heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));\n \n     final OldGenReclamationRca oldGenReclamationRca = new OldGenReclamationRca(heapUsed,\n-        heapMax, gcEvent);\n+        heapMax, gcEvent, gcType);\n     oldGenReclamationRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent));", "originalCommit": "d88a9c9892e54ae3d592d1e7dc74d10bfbd7d2a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59bc804cfd899a39c5729c21c442acc64eedc094", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\nindex 2b8ab768..e16c911a 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n\n@@ -185,12 +183,12 @@ public class ElasticSearchAnalysisGraph extends AnalysisGraph {\n     final HighOldGenOccupancyRca oldGenOccupancyRca = new HighOldGenOccupancyRca(heapMax,\n         heapUsed, gcType);\n     oldGenOccupancyRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n-    oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed));\n+    oldGenOccupancyRca.addAllUpstreams(Arrays.asList(heapMax, heapUsed, gcType));\n \n     final OldGenReclamationRca oldGenReclamationRca = new OldGenReclamationRca(heapUsed,\n         heapMax, gcEvent, gcType);\n     oldGenReclamationRca.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n-    oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent));\n+    oldGenReclamationRca.addAllUpstreams(Arrays.asList(heapUsed, heapMax, gcEvent, gcType));\n \n     final OldGenContendedRca oldGenContendedRca = new OldGenContendedRca(oldGenOccupancyRca,\n         oldGenReclamationRca);\n"}}, {"oid": "59bc804cfd899a39c5729c21c442acc64eedc094", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/59bc804cfd899a39c5729c21c442acc64eedc094", "message": "Add gcType as an upstream", "committedDate": "2020-10-20T17:20:00Z", "type": "commit"}, {"oid": "fabd6b4c1ebfa25d4446bbfefdbcbf238d17fa4c", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/fabd6b4c1ebfa25d4446bbfefdbcbf238d17fa4c", "message": "Merge branch 'master' into use-gctype-128", "committedDate": "2020-10-22T18:26:37Z", "type": "commit"}, {"oid": "4331a911af764ebc2391dd89b7a4c0f4f2e8a44f", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4331a911af764ebc2391dd89b7a4c0f4f2e8a44f", "message": "Update OldGenReclamationRcaTest.java\n\nAddressed checkstyle issue.", "committedDate": "2020-10-22T20:14:05Z", "type": "commit"}]}