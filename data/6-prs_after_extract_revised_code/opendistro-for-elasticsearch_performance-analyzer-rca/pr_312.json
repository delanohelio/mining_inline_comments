{"pr_number": 312, "pr_title": "Adding Cache Max Size to Node Config Collector and adding Node Config Collector to ElasticSearchAnalysisGraph", "pr_createdAt": "2020-07-28T05:42:47Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312", "timeline": [{"oid": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "message": "Adding Cache Max Size to Node Config Collector and adding Node Config Collector to ElasticSearchAnalysisGraph", "committedDate": "2020-07-28T05:35:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjQ0NQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786445", "bodyText": "is there any specific reason to not follow the naming convention ?", "author": "rguo-aws", "createdAt": "2020-07-28T18:29:02Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/metrics/AllMetrics.java", "diffHunk": "@@ -194,9 +204,9 @@ public String toString() {\n     }\n \n     public static class Constants {\n-      public static final String FIELD_DATA_CACHE_NAME = \"Field_Data_Cache\";", "originalCommit": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NTEyOQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461795129", "bodyText": "As discussed, given this is the column field, we will use the lower case naming convention here.", "author": "khushbr", "createdAt": "2020-07-28T18:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjQ0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjYyMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786620", "bodyText": "remove ?", "author": "rguo-aws", "createdAt": "2020-07-28T18:29:21Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);", "originalCommit": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5Mjk0NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461792944", "bodyText": "Removed.", "author": "khushbr", "createdAt": "2020-07-28T18:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "a0d600d3a3762f675ea714134b4deec40c6c77a3", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\nindex f19d72e4..cb8a9bc4 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\n\n@@ -79,8 +79,6 @@ public class NodeConfigCollector extends EsConfigNode {\n   private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n     double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n             CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n-    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);\n-\n     if (!Double.isNaN(fieldDataCacheMaxSize)) {\n       configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjcyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461786725", "bodyText": "remove this line ?", "author": "rguo-aws", "createdAt": "2020-07-28T18:29:33Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java", "diffHunk": "@@ -69,6 +76,29 @@ private void collectQueueCapacity(MetricFlowUnit flowUnit) {\n     }\n   }\n \n+  private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n+    double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);\n+\n+    if (!Double.isNaN(fieldDataCacheMaxSize)) {\n+      configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n+    }\n+    else {\n+      LOG.error(\"Field Data cache max size is NaN\");\n+    }\n+\n+    double shardRequestCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n+            CACHE_TYPE.getField(), CacheType.SHARD_REQUEST_CACHE.toString(), MetricsDB.MAX);\n+    LOG.info(\"MOCHI, Shard Request cache max size is {}\", shardRequestCacheMaxSize);", "originalCommit": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MzAyNA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461793024", "bodyText": "Removed.", "author": "khushbr", "createdAt": "2020-07-28T18:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NjcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a0d600d3a3762f675ea714134b4deec40c6c77a3", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\nindex f19d72e4..cb8a9bc4 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/collector/NodeConfigCollector.java\n\n@@ -79,8 +79,6 @@ public class NodeConfigCollector extends EsConfigNode {\n   private void collectCacheMaxSize(MetricFlowUnit cacheMaxSize) {\n     double fieldDataCacheMaxSize = SQLParsingUtil.readDataFromSqlResult(cacheMaxSize.getData(),\n             CACHE_TYPE.getField(), CacheType.FIELD_DATA_CACHE.toString(), MetricsDB.MAX);\n-    LOG.info(\"MOCHI, Field Data cache max size is {}\", fieldDataCacheMaxSize);\n-\n     if (!Double.isNaN(fieldDataCacheMaxSize)) {\n       configResult.put(ResourceUtil.FIELD_DATA_CACHE_MAX_SIZE, fieldDataCacheMaxSize);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODY2MQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461788661", "bodyText": "can we also add the node config cluster RCA altogether ?", "author": "rguo-aws", "createdAt": "2020-07-28T18:32:49Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java", "diffHunk": "@@ -180,6 +183,19 @@ public void construct() {\n     queueHealthDecider.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n     queueHealthDecider.addAllUpstreams(Collections.singletonList(queueRejectionClusterRca));\n \n+    // Node Config Collector\n+    ThreadPool_QueueCapacity queueCapacity = new ThreadPool_QueueCapacity();\n+    queueCapacity.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(queueCapacity);\n+\n+    Cache_Max_Size cacheMaxSize =  new Cache_Max_Size(EVALUATION_INTERVAL_SECONDS);\n+    cacheMaxSize.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    addLeaf(cacheMaxSize);\n+\n+    NodeConfigCollector nodeConfigCollector = new NodeConfigCollector(RCA_PERIOD, queueCapacity, cacheMaxSize);\n+    nodeConfigCollector.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n+    nodeConfigCollector.addAllUpstreams(Arrays.asList(threadpool_RejectedReqs, cacheMaxSize));\n+", "originalCommit": "7c33904ea3c377f71bd885b6355c0dfccb5cfba3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDIyNg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/312#discussion_r461790226", "bodyText": "Sure, let me add the Cluster RCA as well.", "author": "khushbr", "createdAt": "2020-07-28T18:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a0d600d3a3762f675ea714134b4deec40c6c77a3", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\nindex 02f48a16..382127ea 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/store/ElasticSearchAnalysisGraph.java\n\n@@ -195,6 +196,10 @@ public class ElasticSearchAnalysisGraph extends AnalysisGraph {\n     NodeConfigCollector nodeConfigCollector = new NodeConfigCollector(RCA_PERIOD, queueCapacity, cacheMaxSize);\n     nodeConfigCollector.addTag(TAG_LOCUS, LOCUS_DATA_MASTER_NODE);\n     nodeConfigCollector.addAllUpstreams(Arrays.asList(threadpool_RejectedReqs, cacheMaxSize));\n+    NodeConfigClusterCollector nodeConfigClusterCollector = new NodeConfigClusterCollector(nodeConfigCollector);\n+    nodeConfigClusterCollector.addTag(TAG_LOCUS, LOCUS_MASTER_NODE);\n+    nodeConfigClusterCollector.addAllUpstreams(Collections.singletonList(nodeConfigCollector));\n+    nodeConfigClusterCollector.addTag(TAG_AGGREGATE_UPSTREAM, LOCUS_DATA_NODE);\n \n     constructShardResourceUsageGraph();\n \n"}}, {"oid": "a0d600d3a3762f675ea714134b4deec40c6c77a3", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/a0d600d3a3762f675ea714134b4deec40c6c77a3", "message": "Addressing the CR comments, adding NodeConfigClusterCollector to Analysis Graph and removing Redundant log statements", "committedDate": "2020-07-28T18:52:02Z", "type": "commit"}, {"oid": "6b370348396b7655826904532b9edac34fd0909b", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6b370348396b7655826904532b9edac34fd0909b", "message": "Address the PR comment, updating the resource description in .proto", "committedDate": "2020-07-28T19:03:11Z", "type": "commit"}]}