{"pr_number": 414, "pr_title": "Add unit tests for JVM decider", "pr_createdAt": "2020-09-08T19:36:01Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414", "timeline": [{"oid": "6291f8c3ac55800b403917253ad9f2dbc4fe2edf", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/6291f8c3ac55800b403917253ad9f2dbc4fe2edf", "message": "Add unit tests for JVM decider", "committedDate": "2020-09-08T19:15:54Z", "type": "commit"}, {"oid": "cd53c6019ebe7ba3c492ab29dc1bcd5d4ecaf13b", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/cd53c6019ebe7ba3c492ab29dc1bcd5d4ecaf13b", "message": "Merge remote-tracking branch 'origin' into rguo-jvm-decider-ut", "committedDate": "2020-09-08T19:41:29Z", "type": "commit"}, {"oid": "8993fe78e18717ffa873e523f1d21419e14d0c26", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/8993fe78e18717ffa873e523f1d21419e14d0c26", "message": "Fix checkstyle", "committedDate": "2020-09-08T22:28:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MTI4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485241286", "bodyText": "What happens when there are more than 2 workload type. If we dont want them in a list, can we use numbers to denote their priority? Also can you update the comment if we are changing it", "author": "sruti1312", "createdAt": "2020-09-08T23:00:55Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.\n  *     \"workload-type\": {\n- *       \"priority-order\": [\"ingest\", \"search\"]\n+ *       \"prefer-ingest\": true,\n+ *       \"prefer-search\": false", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTc1OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485251758", "bodyText": "I actually had a discussion with Vigya on this in my previous PR. The problem with setting workload as a list is we have to maintain the string parsing logic inside the Config object and the priority list does not allow customer to specify the scenario if both search/ingest are equally important to customer or if customer simply don't have any preference.\nSo we created two options here instead so that customer can explicitly specific whether search/ingest is preferable.\nThe comments has been updated in the WorkLoaderConfig.java", "author": "rguo-aws", "createdAt": "2020-09-08T23:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0MTI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\nindex 7e3c4ce5..c3f5dfb6 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\n\n@@ -21,8 +21,9 @@ import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.cor\n \n /**\n  * \"decider-config-settings\": {\n- *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n- *     // Priority order in the list goes from most expected to the lease expected workload type.\n+ *     // Define the type of workload we can expect on the cluster.\n+ *     // User can specify workload preference on ingest/search or skip this setting which implicitly\n+ *     // give equal preference to ingest/search.\n  *     \"workload-type\": {\n  *       \"prefer-ingest\": true,\n  *       \"prefer-search\": false\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTE5Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829196", "bodyText": "step count will be a part of cacheSettingConfig right? Is there a reason why we are moving to actionConfig?\nWill it be common parameter for cache and queue?", "author": "sruti1312", "createdAt": "2020-09-09T18:31:14Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java", "diffHunk": "@@ -68,7 +68,7 @@ public CacheActionConfig(RcaConf conf) {\n     cacheSettingsConfig = new NestedConfig(\"cache-settings\", actionConfig);\n     fieldDataCacheConfig = new FieldDataCacheConfig(cacheSettingsConfig);\n     shardRequestCacheConfig = new ShardRequestCacheConfig(cacheSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, cacheSettingsConfig.getValue(),\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5MDUwNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486590507", "bodyText": "step count is indeed part of the cacheSettingConfig. But here we need to pass the parent Map<> object as a parameter in the constructor of the Config class", "author": "rguo-aws", "createdAt": "2020-09-10T19:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "be12af77c189d05d335b78b0f5dd053f98655f21", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java\nindex 67682f29..9bdc8e6a 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfig.java\n\n@@ -68,7 +68,7 @@ public class CacheActionConfig {\n     cacheSettingsConfig = new NestedConfig(\"cache-settings\", actionConfig);\n     fieldDataCacheConfig = new FieldDataCacheConfig(cacheSettingsConfig);\n     shardRequestCacheConfig = new ShardRequestCacheConfig(cacheSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, cacheSettingsConfig.getValue(),\n         DEFAULT_TOTAL_STEP_COUNT, (s) -> (s > 0), Integer.class);\n     createThresholdConfigMap();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTMwOA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829308", "bodyText": "same as above", "author": "sruti1312", "createdAt": "2020-09-09T18:31:26Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -67,7 +67,7 @@ public QueueActionConfig(RcaConf conf) {\n     queueSettingsConfig = new NestedConfig(\"queue-settings\", actionConfig);\n     searchQueueConfig = new SearchQueueConfig(queueSettingsConfig);\n     writeQueueConfig = new WriteQueueConfig(queueSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, queueSettingsConfig.getValue(),\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "be12af77c189d05d335b78b0f5dd053f98655f21", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java\nindex ffb6aea3..ba1d3c75 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java\n\n@@ -67,7 +67,7 @@ public class QueueActionConfig {\n     queueSettingsConfig = new NestedConfig(\"queue-settings\", actionConfig);\n     searchQueueConfig = new SearchQueueConfig(queueSettingsConfig);\n     writeQueueConfig = new WriteQueueConfig(queueSettingsConfig);\n-    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, actionConfig,\n+    totalStepCount = new Config<>(TOTAL_STEP_COUNT_CONFIG_NAME, queueSettingsConfig.getValue(),\n         DEFAULT_TOTAL_STEP_COUNT, (s) -> (s > 0), Integer.class);\n     createThresholdConfigMap();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTg5NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485829894", "bodyText": "We might need to update this comment right?", "author": "sruti1312", "createdAt": "2020-09-09T18:32:35Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java", "diffHunk": "@@ -26,7 +24,8 @@\n  *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n  *     // Priority order in the list goes from most expected to the lease expected workload type.", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4NjYzNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486586637", "bodyText": "done", "author": "rguo-aws", "createdAt": "2020-09-10T19:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTg5NA=="}], "type": "inlineReview", "revised_code": {"commit": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "chunk": "diff --git a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\nindex 7e3c4ce5..c3f5dfb6 100644\n--- a/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\n+++ b/src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/configs/DeciderConfig.java\n\n@@ -21,8 +21,9 @@ import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.cor\n \n /**\n  * \"decider-config-settings\": {\n- *     // Decreasing order of priority for the type of workload we can expect on the cluster.\n- *     // Priority order in the list goes from most expected to the lease expected workload type.\n+ *     // Define the type of workload we can expect on the cluster.\n+ *     // User can specify workload preference on ingest/search or skip this setting which implicitly\n+ *     // give equal preference to ingest/search.\n  *     \"workload-type\": {\n  *       \"prefer-ingest\": true,\n  *       \"prefer-search\": false\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMDkyOQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485830929", "bodyText": "This is confusing. I notice you have changed to use actionConfig. In that case this should be outside queue-settings block right?", "author": "sruti1312", "createdAt": "2020-09-09T18:34:32Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/QueueActionConfig.java", "diffHunk": "@@ -36,7 +36,7 @@\n  *       \"total-step-count\": 20,", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4NzYxOQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486587619", "bodyText": "this is the step count to divide the range of queue size into steps. We can specify different step count in cache if we want to have different granularity", "author": "rguo-aws", "createdAt": "2020-09-10T19:35:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMDkyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485833283", "bodyText": "As we are using this in test, can we rename to DeciderActionParserUtil or put it under util folder?\nThis can avoid confusion between src files and test files", "author": "sruti1312", "createdAt": "2020-09-09T18:38:57Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders;\n+\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyCacheMaxSizeAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyQueueCapacityAction;\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.grpc.ResourceEnum;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class DeciderActionParser {", "originalCommit": "8993fe78e18717ffa873e523f1d21419e14d0c26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3MDk5OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r485970998", "bodyText": "+1", "author": "sidheart", "createdAt": "2020-09-09T23:11:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4Nzg4Mg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486587882", "bodyText": "good point. Let me rename this class", "author": "rguo-aws", "createdAt": "2020-09-10T19:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMzI4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "chunk": "diff --git a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/test_utils/DeciderActionParserUtil.java\nsimilarity index 95%\nrename from src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java\nrename to src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/test_utils/DeciderActionParserUtil.java\nindex 7698fd2f..def5f550 100644\n--- a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/DeciderActionParser.java\n+++ b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/deciders/test_utils/DeciderActionParserUtil.java\n\n@@ -13,7 +13,7 @@\n  * permissions and limitations under the License.\n  */\n \n-package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders;\n+package com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.deciders.test_utils;\n \n import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.Action;\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.decisionmaker.actions.ModifyCacheMaxSizeAction;\n"}}, {"oid": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "message": "Address PR comments", "committedDate": "2020-09-10T19:43:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwODU4Mg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/414#discussion_r486608582", "bodyText": "As per your comment\nstep count is indeed part of the cacheSettingConfig. But here we need to pass the parent Map<> object as a parameter in the constructor of the Config class\nIn that case this step count might need to be inside the cache-settings block right?", "author": "sruti1312", "createdAt": "2020-09-10T20:17:33Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java", "diffHunk": "@@ -105,4 +105,48 @@ public void testInvalidCacheType() throws Exception {\n     CacheActionConfig cacheActionConfig = new CacheActionConfig(conf);\n     cacheActionConfig.getThresholdConfig(ResourceEnum.SEARCH_THREADPOOL).upperBound();\n   }\n+\n+  @Test\n+  public void testGetStepSize() throws Exception {\n+    String configStr =\n+        \"{\"\n+          + \"\\\"action-config-settings\\\": { \"\n+              + \"\\\"cache-settings\\\": { \"\n+                  + \"\\\"fielddata\\\": { \"\n+                      + \"\\\"upper-bound\\\": 0.8, \"\n+                      + \"\\\"lower-bound\\\": 0.2 \"\n+                  + \"}, \"\n+                  + \"\\\"shard-request\\\": { \"\n+                      + \"\\\"upper-bound\\\": 0.08, \"\n+                      + \"\\\"lower-bound\\\": 0.01 \"\n+                  + \"} \"\n+              + \"} \"\n+          + \"} \"\n+      + \"}\";\n+    RcaConf conf = new RcaConf();\n+    conf.readConfigFromString(configStr);\n+    CacheActionConfig cacheActionConfig = new CacheActionConfig(conf);\n+    assertEquals(0.03, cacheActionConfig.getStepSize(ResourceEnum.FIELD_DATA_CACHE), 0.0001);\n+    assertEquals(0.0035, cacheActionConfig.getStepSize(ResourceEnum.SHARD_REQUEST_CACHE), 0.0001);\n+    configStr =\n+        \"{\"\n+          + \"\\\"action-config-settings\\\": { \"\n+              + \"\\\"total-step-count\\\": 5,\"", "originalCommit": "f6816e2fdddbb778f9bb0b9c124fcf1a7fcad5a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "be12af77c189d05d335b78b0f5dd053f98655f21", "chunk": "diff --git a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java\nindex b85d2a30..a937d9b9 100644\n--- a/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java\n+++ b/src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/decisionmaker/actions/configs/CacheActionConfigTest.java\n\n@@ -131,8 +131,8 @@ public class CacheActionConfigTest {\n     configStr =\n         \"{\"\n           + \"\\\"action-config-settings\\\": { \"\n-              + \"\\\"total-step-count\\\": 5,\"\n               + \"\\\"cache-settings\\\": { \"\n+                  + \"\\\"total-step-count\\\": 5,\"\n                   + \"\\\"fielddata\\\": { \"\n                       + \"\\\"upper-bound\\\": 0.8, \"\n                       + \"\\\"lower-bound\\\": 0.2 \"\n"}}, {"oid": "be12af77c189d05d335b78b0f5dd053f98655f21", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/be12af77c189d05d335b78b0f5dd053f98655f21", "message": "Address more PR comments", "committedDate": "2020-09-10T20:50:31Z", "type": "commit"}]}