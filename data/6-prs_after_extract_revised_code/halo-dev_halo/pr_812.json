{"pr_number": 812, "pr_title": "\u6392\u5e8f\u4f7f\u7528Comparator\u9759\u6001\u65b9\u6cd5\u5b9e\u73b0", "pr_createdAt": "2020-04-30T13:53:58Z", "pr_url": "https://github.com/halo-dev/halo/pull/812", "timeline": [{"oid": "ca886193bb75a85b9398a55f34553702d07be8b9", "url": "https://github.com/halo-dev/halo/commit/ca886193bb75a85b9398a55f34553702d07be8b9", "message": "\u6392\u5e8f\u4f7f\u7528Comparator\u9759\u6001\u65b9\u6cd5\u5b9e\u73b0", "committedDate": "2020-04-30T13:51:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ==", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418034885", "bodyText": "\u8fd9\u91cc\u7684\u6392\u5e8f\u53ef\u80fd\u548c\u672c\u8eab\u7684\u6392\u5e8f\u76f8\u53cd\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u5bb9\u6211\u60f3\u60f3\u3002", "author": "JohnNiang", "createdAt": "2020-04-30T14:03:59Z", "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -190,17 +191,10 @@ public BackupDTO backupWorkDirectory() {\n         // Build backup dto\n         try (Stream<Path> subPathStream = Files.list(backupParentPath)) {\n             return subPathStream\n-                .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n-                .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n-                .sorted((leftBackup, rightBackup) -> {\n-                    // Sort the result\n-                    if (leftBackup.getUpdateTime() < rightBackup.getUpdateTime()) {\n-                        return 1;\n-                    } else if (leftBackup.getUpdateTime() > rightBackup.getUpdateTime()) {\n-                        return -1;\n-                    }\n-                    return 0;\n-                }).collect(Collectors.toList());\n+                    .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n+                    .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n+                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime))", "originalCommit": "ca886193bb75a85b9398a55f34553702d07be8b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0MzU5NQ==", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418043595", "bodyText": "\u8c8c\u4f3c\u597d\u50cf\u662f\u53cd\u7684\n    List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8);\n\n    List<Integer> values = numbers.stream()\n            .sorted(Comparator.comparingLong(Integer::longValue).reversed())\n            .collect(Collectors.toList());\n    System.out.println(values);\n\n    List<Integer> anotherValues = numbers.stream().sorted((prev, next) -> {\n        if (prev < next) {\n            return 1;\n        } else if (prev > next) {\n            return -1;\n        }\n        return 0;\n    }).collect(Collectors.toList());\n\n    System.out.println(anotherValues);\n\u52a0\u4e0areversed\u4e4b\u540e\u7ed3\u679c\u662f\u7b26\u5408\u9884\u671f\u7684\n[8, 7, 6, 5, 4, 3, 2, 1]\n[8, 7, 6, 5, 4, 3, 2, 1]", "author": "liaozan", "createdAt": "2020-04-30T14:16:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0NTYxOQ==", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418045619", "bodyText": "\u5df2\u4fee\u590d", "author": "liaozan", "createdAt": "2020-04-30T14:19:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5c887fd637e9e86ff41ea85947435eae9db13e3", "chunk": "diff --git a/src/main/java/run/halo/app/service/impl/BackupServiceImpl.java b/src/main/java/run/halo/app/service/impl/BackupServiceImpl.java\nindex 333c8de3..74baf619 100644\n--- a/src/main/java/run/halo/app/service/impl/BackupServiceImpl.java\n+++ b/src/main/java/run/halo/app/service/impl/BackupServiceImpl.java\n\n@@ -193,7 +194,7 @@ public class BackupServiceImpl implements BackupService {\n             return subPathStream\n                     .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n                     .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n-                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime))\n+                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime).reversed())\n                     .collect(Collectors.toList());\n         } catch (IOException e) {\n             throw new ServiceException(\"Failed to fetch backups\", e);\n"}}, {"oid": "b5c887fd637e9e86ff41ea85947435eae9db13e3", "url": "https://github.com/halo-dev/halo/commit/b5c887fd637e9e86ff41ea85947435eae9db13e3", "message": "\u4fee\u590d\u6392\u5e8f\u903b\u8f91\u9519\u8bef", "committedDate": "2020-04-30T14:16:57Z", "type": "commit"}, {"oid": "657a5781f6e4399012dd6db221cd039dd39bf71a", "url": "https://github.com/halo-dev/halo/commit/657a5781f6e4399012dd6db221cd039dd39bf71a", "message": "fix compile error", "committedDate": "2020-04-30T14:21:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0ODI0MQ==", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418048241", "bodyText": "\u4f60\u53ef\u80fd\u5c06 Pattern \u63d0\u53d6\u5230\u4e86 DateTimeUtils\uff0c\u4f46\u662f\u5fd8\u8bb0\u6dfb\u52a0\u5230 Git \u4e86\u3002", "author": "JohnNiang", "createdAt": "2020-04-30T14:22:38Z", "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -285,8 +286,8 @@ public BackupDTO exportData() {\n \n         try {\n             String haloDataFileName = HaloConst.HALO_DATA_EXPORT_PREFIX +\n-                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss-\")) +\n-                IdUtil.simpleUUID().hashCode() + \".json\";\n+                    LocalDateTime.now().format(DateTimeUtils.HORIZONTAL_LINE_DATETIME_FORMATTER) +", "originalCommit": "b5c887fd637e9e86ff41ea85947435eae9db13e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}