{"pr_number": 1008, "pr_title": "fix: #988", "pr_createdAt": "2020-08-01T15:20:54Z", "pr_url": "https://github.com/halo-dev/halo/pull/1008", "timeline": [{"oid": "6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "url": "https://github.com/halo-dev/halo/commit/6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "message": "fix: #988", "committedDate": "2020-08-01T15:19:48Z", "type": "commit"}, {"oid": "9fbbe1f1e0ba161a75a94e730b068a0a6194c6bd", "url": "https://github.com/halo-dev/halo/commit/9fbbe1f1e0ba161a75a94e730b068a0a6194c6bd", "message": "refactor: word count", "committedDate": "2020-08-01T15:37:52Z", "type": "commit"}, {"oid": "fcb9dee2c45f7d7dd899bfb10b822ac24600249b", "url": "https://github.com/halo-dev/halo/commit/fcb9dee2c45f7d7dd899bfb10b822ac24600249b", "message": "refactor: word count.", "committedDate": "2020-08-01T15:38:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MzU5NA==", "url": "https://github.com/halo-dev/halo/pull/1008#discussion_r463973594", "bodyText": "\u52a0\u4e0a\u7a7a\u884c\u3002", "author": "JohnNiang", "createdAt": "2020-08-01T15:39:12Z", "path": "src/main/java/run/halo/app/cache/RedisCacheStore.java", "diffHunk": "@@ -32,11 +32,11 @@\n      */\n     private final static ConcurrentHashMap<String, CacheWrapper<String>> CACHE_CONTAINER = new ConcurrentHashMap<>();\n     private volatile static JedisCluster REDIS;\n-    protected HaloProperties haloProperties;\n     /**\n      * Lock.\n      */\n-    private Lock lock = new ReentrantLock();\n+    private final Lock lock = new ReentrantLock();\n+    protected HaloProperties haloProperties;", "originalCommit": "6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "19e015557c184dde74559535b6ef5087d966d77c", "chunk": "diff --git a/src/main/java/run/halo/app/cache/RedisCacheStore.java b/src/main/java/run/halo/app/cache/RedisCacheStore.java\nindex 868f7777..9a196f16 100644\n--- a/src/main/java/run/halo/app/cache/RedisCacheStore.java\n+++ b/src/main/java/run/halo/app/cache/RedisCacheStore.java\n\n@@ -31,11 +31,14 @@ public class RedisCacheStore extends AbstractStringCacheStore {\n      * Cache container.\n      */\n     private final static ConcurrentHashMap<String, CacheWrapper<String>> CACHE_CONTAINER = new ConcurrentHashMap<>();\n+\n     private volatile static JedisCluster REDIS;\n+\n     /**\n      * Lock.\n      */\n     private final Lock lock = new ReentrantLock();\n+\n     protected HaloProperties haloProperties;\n \n     public RedisCacheStore(HaloProperties haloProperties) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MzY4Nw==", "url": "https://github.com/halo-dev/halo/pull/1008#discussion_r463973687", "bodyText": "\u4e3a\u4ec0\u4e48\u8981\u628a id \u964d\u5e8f\u6392\u5e8f\u5220\u9664\u5462\uff1f", "author": "JohnNiang", "createdAt": "2020-08-01T15:40:00Z", "path": "src/main/java/run/halo/app/service/impl/PostServiceImpl.java", "diffHunk": "@@ -804,76 +806,11 @@ public void publishVisitEvent(Integer postId) {\n         eventPublisher.publishEvent(new PostVisitEvent(this, postId));\n     }\n \n-    @Override\n-    public @NotNull AdjacentPostVO getAdjacentPosts(Post currentPost) {\n-        Assert.notNull(currentPost, \"Post must not be null\");\n-\n-        // get pageable post list\n-        List<Post> postList = new ArrayList<>();\n-        // init fist page && default page size\n-        int page = 1;\n-        int defaultPageSize = 500;\n-        boolean needNext = true;\n-\n-        // get custom sort type\n-        Sort sort = getPostDefaultSort();\n-        Pageable pageable = null;\n-        PostStatus postStatus = PostStatus.PUBLISHED;\n-        long totalCount = countByStatus(postStatus);\n-\n-        while (needNext && totalCount > postList.size()) {\n-            pageable = PageRequest\n-                .of(page >= 1 ? page - 1 : page, defaultPageSize, sort);\n-\n-            Page<Post> postPage = pageBy(postStatus, pageable);\n-            List<Post> pageablePostList = postPage.getContent();\n-            if (pageablePostList.size() == 0) {\n-                break;\n-            }\n-            postList.addAll(postPage.getContent());\n-            if (postList.stream().filter(it -> it.getId().equals(currentPost.getId())).count() == 1\n-                && !postList.stream().reduce((first, second) -> second).get().getId()\n-                .equals(currentPost.getId())) {\n-                // contains the post && the post is not in the end\n-                needNext = false;\n-            }\n-\n-            page++;\n-        }\n-\n-        if (CollectionUtils.isEmpty(postList)) {\n-            // if post list is empty, return empty object\n-            return AdjacentPostVO.builder().build();\n-        }\n-\n-        // get current post index in post list\n-        List<Integer> idList = postList.stream().map(Post::getId).collect(Collectors.toList());\n-        int index = idList.indexOf(currentPost.getId());\n-\n-        if (index == -1) {\n-            // if not found, return empty object\n-            return AdjacentPostVO.builder().build();\n-        }\n-\n-        AdjacentPostVO adjacentPostVO = new AdjacentPostVO();\n-\n-        // setup pre\n-        if (index > 0) {\n-            adjacentPostVO.setPrevPost(postList.get(index - 1));\n-        }\n-        // setup next\n-        if (index < postList.size() - 1) {\n-            adjacentPostVO.setNextPost(postList.get(index + 1));\n-        }\n-\n-        return adjacentPostVO;\n-    }\n-\n     @Override\n     public @NotNull Sort getPostDefaultSort() {\n         String indexSort = optionService.getByPropertyOfNonNull(PostProperties.INDEX_SORT)\n             .toString();\n-        return Sort.by(DESC, \"topPriority\").and(Sort.by(DESC, indexSort)).and(Sort.by(DESC, \"id\"));\n+        return Sort.by(DESC, \"topPriority\").and(Sort.by(DESC, indexSort));", "originalCommit": "6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3Mzk3NA==", "url": "https://github.com/halo-dev/halo/pull/1008#discussion_r463973974", "bodyText": "\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u7528\u9014\u3002", "author": "ruibaby", "createdAt": "2020-08-01T15:42:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "19e015557c184dde74559535b6ef5087d966d77c", "chunk": "diff --git a/src/main/java/run/halo/app/service/impl/PostServiceImpl.java b/src/main/java/run/halo/app/service/impl/PostServiceImpl.java\nindex 52c529cb..214c502a 100644\n--- a/src/main/java/run/halo/app/service/impl/PostServiceImpl.java\n+++ b/src/main/java/run/halo/app/service/impl/PostServiceImpl.java\n\n@@ -810,7 +806,7 @@ public class PostServiceImpl extends BasePostServiceImpl<Post> implements PostSe\n     public @NotNull Sort getPostDefaultSort() {\n         String indexSort = optionService.getByPropertyOfNonNull(PostProperties.INDEX_SORT)\n             .toString();\n-        return Sort.by(DESC, \"topPriority\").and(Sort.by(DESC, indexSort));\n+        return Sort.by(DESC, \"topPriority\").and(Sort.by(DESC, indexSort).and(Sort.by(DESC, \"id\")));\n     }\n \n     private String buildFullPath(Post post) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MzY5OQ==", "url": "https://github.com/halo-dev/halo/pull/1008#discussion_r463973699", "bodyText": "\u7a7a\u884c\u3002", "author": "JohnNiang", "createdAt": "2020-08-01T15:40:06Z", "path": "src/main/java/run/halo/app/service/impl/ThemeServiceImpl.java", "diffHunk": "@@ -77,20 +77,17 @@\n     private final RestTemplate restTemplate;\n \n     private final ApplicationEventPublisher eventPublisher;\n-\n+    private final AtomicReference<String> activeThemeId = new AtomicReference<>();", "originalCommit": "6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "19e015557c184dde74559535b6ef5087d966d77c", "chunk": "diff --git a/src/main/java/run/halo/app/service/impl/ThemeServiceImpl.java b/src/main/java/run/halo/app/service/impl/ThemeServiceImpl.java\nindex e4967cb9..7cbb0679 100644\n--- a/src/main/java/run/halo/app/service/impl/ThemeServiceImpl.java\n+++ b/src/main/java/run/halo/app/service/impl/ThemeServiceImpl.java\n\n@@ -77,12 +77,15 @@ public class ThemeServiceImpl implements ThemeService {\n     private final RestTemplate restTemplate;\n \n     private final ApplicationEventPublisher eventPublisher;\n+\n     private final AtomicReference<String> activeThemeId = new AtomicReference<>();\n+\n     /**\n      * Activated theme id.\n      */\n     @Nullable\n     private volatile String activatedThemeId;\n+    \n     /**\n      * Activated theme property.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3MzczNA==", "url": "https://github.com/halo-dev/halo/pull/1008#discussion_r463973734", "bodyText": "\u7a7a\u884c\u3002", "author": "JohnNiang", "createdAt": "2020-08-01T15:40:26Z", "path": "src/main/java/run/halo/app/utils/GithubUtils.java", "diffHunk": "@@ -126,16 +130,14 @@ public static String accessThemeProperty(String uri, String branch) {\n     private static class GithubRelease implements Runnable {\n \n         /**\n-         * The return result is zip url and tag name etc.\n+         * should be in format of \"username/reponame\"\n          */\n-        private HashMap<String, Object> result;\n-\n+        private final String repoUrl;\n+        private final String tagName;", "originalCommit": "6a01f6aeb0b527189e7f815cec90ff285e0a1b74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "19e015557c184dde74559535b6ef5087d966d77c", "chunk": "diff --git a/src/main/java/run/halo/app/utils/GithubUtils.java b/src/main/java/run/halo/app/utils/GithubUtils.java\nindex e469262b..2d5f5f61 100644\n--- a/src/main/java/run/halo/app/utils/GithubUtils.java\n+++ b/src/main/java/run/halo/app/utils/GithubUtils.java\n\n@@ -133,7 +133,12 @@ public class GithubUtils {\n          * should be in format of \"username/reponame\"\n          */\n         private final String repoUrl;\n+\n+        /**\n+         * repository tag name\n+         */\n         private final String tagName;\n+\n         /**\n          * The return result is zip url and tag name etc.\n          */\n"}}, {"oid": "19e015557c184dde74559535b6ef5087d966d77c", "url": "https://github.com/halo-dev/halo/commit/19e015557c184dde74559535b6ef5087d966d77c", "message": "fix: index posts sort field.", "committedDate": "2020-08-01T15:53:07Z", "type": "commit"}]}