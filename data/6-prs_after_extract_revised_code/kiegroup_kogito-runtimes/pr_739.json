{"pr_number": 739, "pr_title": "KOGITO-3236 DMN validation as part of Kogito CodeGen", "pr_createdAt": "2020-09-02T12:05:17Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/739", "timeline": [{"oid": "e9aa5705a8f0e01ce793f6ce9e24ed57b632109b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e9aa5705a8f0e01ce793f6ce9e24ed57b632109b", "message": "refactor to use CollectedResource in preparation for validation work", "committedDate": "2020-09-02T11:25:50Z", "type": "commit"}, {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "message": "plug-in kie-dmn-validation", "committedDate": "2020-09-02T11:25:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExOTU0OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r482119549", "bodyText": "so you are dropping DMN Resource altogether in favor of this CollectedResource? ok", "author": "evacchi", "createdAt": "2020-09-02T14:36:20Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -61,83 +52,29 @@\n import org.kie.kogito.codegen.di.DependencyInjectionAnnotator;\n import org.kie.kogito.codegen.io.CollectedResource;\n import org.kie.kogito.grafana.GrafanaConfigurationWriter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import static java.util.stream.Collectors.toList;\n-import static org.drools.core.util.IoUtils.readBytesFromInputStream;\n-import static org.kie.api.io.ResourceType.determineResourceType;\n import static org.kie.kogito.codegen.ApplicationGenerator.log;\n import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class DecisionCodegen extends AbstractGenerator {\n \n+    public static final Logger LOG = LoggerFactory.getLogger(DecisionCodegen.class);\n+\n     public static String STRONGLY_TYPED_CONFIGURATION_KEY = \"kogito.decisions.stronglytyped\";\n+    public static String VALIDATION_CONFIGURATION_KEY = \"kogito.decisions.validation\";\n \n     public static DecisionCodegen ofCollectedResources(Collection<CollectedResource> resources) {\n-        List<DMNResource> dmnResources = resources.stream()\n+        List<CollectedResource> dmnResources = resources.stream()\n                 .filter(r -> r.resource().getResourceType() == ResourceType.DMN)\n-                .flatMap(r -> parseDecisions(r.basePath(), Collections.singletonList(r.resource())).stream())\n                 .collect(toList());\n-        return ofDecisions(dmnResources);\n-    }\n-\n-    @Deprecated\n-    public static DecisionCodegen ofJar(Path... jarPaths) throws IOException {\n-        List<DMNResource> dmnResources = new ArrayList<>();\n-\n-        for (Path jarPath : jarPaths) {\n-            List<Resource> resources = new ArrayList<>();\n-            try (ZipFile zipFile = new ZipFile(jarPath.toFile())) {\n-                Enumeration<? extends ZipEntry> entries = zipFile.entries();\n-                while (entries.hasMoreElements()) {\n-                    ZipEntry entry = entries.nextElement();\n-                    ResourceType resourceType = determineResourceType(entry.getName());\n-                    if (resourceType == ResourceType.DMN) {\n-                        InternalResource resource = new ByteArrayResource(readBytesFromInputStream(zipFile.getInputStream(entry)));\n-                        resource.setResourceType(resourceType);\n-                        resource.setSourcePath(entry.getName());\n-                        resources.add(resource);\n-                    }\n-                }\n-            }\n-            dmnResources.addAll(parseDecisions(jarPath, resources));\n-        }\n-\n-        return ofDecisions(dmnResources);\n+        return new DecisionCodegen(dmnResources);", "originalCommit": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5ODQzMQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r484198431", "bodyText": "can't drop it, since it represents a compiled DMN model and its original resource; but to make them closer I refactored in such a way should be clearer: https://github.com/kiegroup/kogito-runtimes/pull/745/files#diff-876e266ffe2528ed349c4a20b12d4d23R30", "author": "tarilabs", "createdAt": "2020-09-07T06:01:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExOTU0OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMTI5NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r482121295", "bodyText": "so basically you are introducing this class and isolating the validation logic there; so at some point we may even be able to move it to a shared \"validation\" phase with other type of assets; is this your intention?", "author": "evacchi", "createdAt": "2020-09-02T14:38:33Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -149,17 +86,29 @@ private static DecisionCodegen ofDecisions(List<DMNResource> resources) {\n \n     private DecisionContainerGenerator decisionContainerGenerator;\n \n-    private final List<DMNResource> resources;\n+    private final List<CollectedResource> cResources;\n+    private final List<DMNResource> resources = new ArrayList<>();\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n     private AddonsConfig addonsConfig = AddonsConfig.DEFAULT;\n     private ClassLoader projectClassLoader;\n \n-    public DecisionCodegen(List<DMNResource> resources) {\n-        this.resources = resources;\n+    public DecisionCodegen(List<CollectedResource> cResources) {\n+        this.cResources = cResources;\n \n         // set default package name\n         setPackageName(ApplicationGenerator.DEFAULT_PACKAGE_NAME);\n-        this.decisionContainerGenerator = new DecisionContainerGenerator(applicationCanonicalName, resources);\n+        this.decisionContainerGenerator = new DecisionContainerGenerator(applicationCanonicalName, this.cResources);\n+    }\n+\n+    private void init() {\n+        Map<Resource, CollectedResource> r2cr = cResources.stream().collect(Collectors.toMap(CollectedResource::resource, Function.identity()));\n+        DecisionValidation.dmnValidateResources(context(), r2cr.keySet());", "originalCommit": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5ODcyOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r484198728", "bodyText": "Once Kogito codegen will offer validation infra for all assets, as long as it's compatible, I have no objections if this code is moved there \ud83d\udc4d", "author": "tarilabs", "createdAt": "2020-09-07T06:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMTI5NQ=="}], "type": "inlineReview", "revised_code": null}]}