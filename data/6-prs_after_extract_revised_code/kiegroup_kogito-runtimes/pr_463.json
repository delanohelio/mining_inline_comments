{"pr_number": 463, "pr_title": "KOGITO-1936 Support Typesafe endpoint generation DMN", "pr_createdAt": "2020-04-20T16:15:07Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/463", "timeline": [{"oid": "9243f7604db0ae0196143b64a8693729f8a4fec1", "url": "https://github.com/kiegroup/kogito-runtimes/commit/9243f7604db0ae0196143b64a8693729f8a4fec1", "message": "Bump to 7.37.0.Final", "committedDate": "2020-05-12T12:25:45Z", "type": "forcePushed"}, {"oid": "09d179e4570d7f6410471f8b66408e582325e999", "url": "https://github.com/kiegroup/kogito-runtimes/commit/09d179e4570d7f6410471f8b66408e582325e999", "message": "Bump to 7.37.0.Final", "committedDate": "2020-05-12T16:42:45Z", "type": "forcePushed"}, {"oid": "c84f992021e8c3667d806c6ba6ccddd9895413e9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/c84f992021e8c3667d806c6ba6ccddd9895413e9", "message": "Bump to 7.37.0.Final", "committedDate": "2020-05-13T06:27:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5NzYwMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424297602", "bodyText": "I assume we plan to make this generic in T ? maybe in a future PR? We may have one API for Map and one API for T", "author": "evacchi", "createdAt": "2020-05-13T09:23:44Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java", "diffHunk": "@@ -15,15 +15,13 @@\n \n package org.kie.kogito.decision;\n \n-import java.util.Map;\n-\n import org.kie.dmn.api.core.DMNContext;\n import org.kie.dmn.api.core.DMNModel;\n import org.kie.dmn.api.core.DMNResult;\n \n public interface DecisionModel {\n \n-    DMNContext newContext(Map<String, Object> variables);\n+    DMNContext newContext(Object variables);", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java b/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\nindex 1b5b6bbdd0..d13d8875db 100644\n--- a/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\n+++ b/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\n\n@@ -15,13 +15,18 @@\n \n package org.kie.kogito.decision;\n \n+import java.util.Map;\n+\n import org.kie.dmn.api.core.DMNContext;\n import org.kie.dmn.api.core.DMNModel;\n import org.kie.dmn.api.core.DMNResult;\n+import org.kie.dmn.api.core.FEELPropertyAccessible;\n \n public interface DecisionModel {\n \n-    DMNContext newContext(Object variables);\n+    DMNContext newContext(Map<String, Object> inputSet);\n+\n+    DMNContext newContext(FEELPropertyAccessible inputSet);\n \n     DMNResult evaluateAll(DMNContext context);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTgwNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424299807", "bodyText": "currently all APIs are under bare kogito.* so I would use that for consistency\nnote: I do I think we should move them under quarkus.kogito.*, when quarkus is in use -- but that's especially because of a hard limitation of the config extension API -- when we will do that change, we will fix this too.\nI also think we should kogito.decisions.* is that fine @tarilabs ?\nwhy is it called openapi? why not just call it \"typed\" or something like that?\nwould it make sense to make true the default for kogito?", "author": "evacchi", "createdAt": "2020-05-13T09:27:05Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -53,9 +58,12 @@\n import static org.drools.core.util.IoUtils.readBytesFromInputStream;\n import static org.kie.api.io.ResourceType.determineResourceType;\n import static org.kie.kogito.codegen.ApplicationGenerator.log;\n+import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class DecisionCodegen extends AbstractGenerator {\n \n+    public static String OPEN_API_CONFIGURATION_KEY = \"quarkus.kogito.dmn.openapi\";", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMxNDg0OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424314848", "bodyText": "nope, as there are known issues pending, so we want this flag as experimental", "author": "tarilabs", "createdAt": "2020-05-13T09:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMxNjk1NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424316954", "bodyText": "@evacchi feature is still in progress, therefore the false default but yes, it'd make total sense", "author": "lucamolteni", "createdAt": "2020-05-13T09:55:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java b/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\nindex 7385ab239a..3f14a98a09 100644\n--- a/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\n+++ b/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\n\n@@ -62,7 +62,7 @@ import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class DecisionCodegen extends AbstractGenerator {\n \n-    public static String OPEN_API_CONFIGURATION_KEY = \"quarkus.kogito.dmn.openapi\";\n+    public static String STRONGLY_TYPED_CONFIGURATION_KEY = \"kogito.decisions.stronglytyped\";\n \n     public static DecisionCodegen ofJar(Path jarPath) throws IOException {\n         List<Resource> resources = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwMDUyNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424300525", "bodyText": "I assume this is \"template variable\", so please use the same convention $inputType$)", "author": "evacchi", "createdAt": "2020-05-13T09:28:04Z", "path": "kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java", "diffHunk": "@@ -18,7 +20,7 @@\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n-    public Object dmn(java.util.Map<String, Object> variables) {\n+    public Object dmn(INPUT_TYPE variables) {", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java b/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\nindex 2bb847f5c6..54567e53b8 100644\n--- a/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\n+++ b/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\n\n@@ -20,7 +18,7 @@ public class DMNRestResourceTemplate {\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n-    public Object dmn(INPUT_TYPE variables) {\n+    public Object dmn($inputType$ variables) {\n         org.kie.kogito.decision.DecisionModel decision = application.decisionModels().getDecisionModel(\"$modelNamespace$\", \"$modelName$\");\n         org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decision.evaluateAll(decision.newContext(variables)));\n         return extractContextIfSucceded(result);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwMTgxMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424301810", "bodyText": "how about leaving this one as-it-was, and having the overload accepting FEELPropertyAccessible ?", "author": "tarilabs", "createdAt": "2020-05-13T09:30:10Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java", "diffHunk": "@@ -15,15 +15,13 @@\n \n package org.kie.kogito.decision;\n \n-import java.util.Map;\n-\n import org.kie.dmn.api.core.DMNContext;\n import org.kie.dmn.api.core.DMNModel;\n import org.kie.dmn.api.core.DMNResult;\n \n public interface DecisionModel {\n \n-    DMNContext newContext(Map<String, Object> variables);\n+    DMNContext newContext(Object variables);", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java b/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\nindex 1b5b6bbdd0..d13d8875db 100644\n--- a/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\n+++ b/api/kogito-api/src/main/java/org/kie/kogito/decision/DecisionModel.java\n\n@@ -15,13 +15,18 @@\n \n package org.kie.kogito.decision;\n \n+import java.util.Map;\n+\n import org.kie.dmn.api.core.DMNContext;\n import org.kie.dmn.api.core.DMNModel;\n import org.kie.dmn.api.core.DMNResult;\n+import org.kie.dmn.api.core.FEELPropertyAccessible;\n \n public interface DecisionModel {\n \n-    DMNContext newContext(Object variables);\n+    DMNContext newContext(Map<String, Object> inputSet);\n+\n+    DMNContext newContext(FEELPropertyAccessible inputSet);\n \n     DMNResult evaluateAll(DMNContext context);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwMTk0Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424301943", "bodyText": "dead class?", "author": "tarilabs", "createdAt": "2020-05-13T09:30:23Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/decision/PropertyValueResult.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package org.kie.kogito.decision;", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/decision/PropertyValueResult.java b/api/kogito-api/src/main/java/org/kie/kogito/decision/PropertyValueResult.java\ndeleted file mode 100644\nindex b2f9065763..0000000000\n--- a/api/kogito-api/src/main/java/org/kie/kogito/decision/PropertyValueResult.java\n+++ /dev/null\n\n@@ -1,5 +0,0 @@\n-package org.kie.kogito.decision;\n-\n-public interface PropertyValueResult {\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwMzkxMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424303910", "bodyText": "missing license header", "author": "tarilabs", "createdAt": "2020-05-13T09:33:34Z", "path": "kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/dmn/DMNTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.it.kogito.dmn;", "originalCommit": "83a31698bcaadfffb93398dd7b915da085f270ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/dmn/DMNTest.java b/kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/dmn/DMNTest.java\nindex 9614e8fbef..fca6c7869c 100644\n--- a/kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/dmn/DMNTest.java\n+++ b/kogito-quarkus-extension/integration-test/src/test/java/io/quarkus/it/kogito/dmn/DMNTest.java\n\n@@ -1,3 +1,19 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package io.quarkus.it.kogito.dmn;\n \n import io.quarkus.test.junit.QuarkusTest;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyNTU1MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424325551", "bodyText": "Do we need this import?\nIf it is optional I would prefer to add it if used (or use FQCN) instead of leave an unused import. Wdyt?", "author": "danielezonca", "createdAt": "2020-05-13T10:10:16Z", "path": "kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java", "diffHunk": "@@ -10,6 +10,8 @@\n import org.kie.kogito.dmn.rest.DMNEvaluationErrorException;\n import org.kie.kogito.dmn.rest.DMNResult;\n \n+import org.kie.dmn.api.core.FEELPropertyAccessible;", "originalCommit": "43fccd37d28d3acbb8e6a159040f22be11db1a04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java b/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\nindex cc8792bc1c..54567e53b8 100644\n--- a/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\n+++ b/kogito-codegen/src/main/resources/class-templates/DMNRestResourceTemplate.java\n\n@@ -10,8 +10,6 @@ import org.kie.kogito.Application;\n import org.kie.kogito.dmn.rest.DMNEvaluationErrorException;\n import org.kie.kogito.dmn.rest.DMNResult;\n \n-import org.kie.dmn.api.core.FEELPropertyAccessible;\n-\n @Path(\"/$nameURL$\")\n public class DMNRestResourceTemplate {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyNTYyMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424325622", "bodyText": "When does this happen?\nBtw I think we should just fail and not proceed: it is opt-in so I expect if user switch on this feature and it is not possible to make it work for a problem in the model it should fail. Wdyt?", "author": "danielezonca", "createdAt": "2020-05-13T10:10:25Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -168,6 +188,27 @@ public DecisionContainerGenerator moduleGenerator() {\n         return generatedFiles;\n     }\n \n+    private void tryGenerateStronglyTypedInput(DMNModel model) {\n+        try {\n+            DMNTypeSafePackageName.Factory factory = m -> new DMNTypeSafePackageName(\"\", m.getNamespace(), \"\");\n+            DMNAllTypesIndex index = new DMNAllTypesIndex(factory, model);\n+\n+            Map<String, String> allTypesSourceCode = new DMNTypeSafeTypeGenerator(\n+                    model,\n+                    index, factory )\n+                    .generateSourceCodeOfAllTypes();\n+\n+            allTypesSourceCode.entrySet().stream()\n+                    .map(kv -> {\n+                        String key = kv.getKey().replace(\".\", \"/\") + \".java\";\n+                        return new GeneratedFile(GeneratedFile.Type.CLASS, key, kv.getValue());\n+                    })\n+                    .forEach(generatedFiles::add);\n+        } catch(Exception e) {\n+            logger.error(\"Unable to generate Strongly Typed Input for: {} {}\", model.getNamespace(), model.getName());", "originalCommit": "43fccd37d28d3acbb8e6a159040f22be11db1a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM1Mjk4Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/463#discussion_r424352986", "bodyText": "Agree", "author": "lucamolteni", "createdAt": "2020-05-13T11:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyNTYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "chunk": "diff --git a/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java b/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\nindex 24e3110567..3f14a98a09 100644\n--- a/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\n+++ b/kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java\n\n@@ -206,6 +206,7 @@ public class DecisionCodegen extends AbstractGenerator {\n                     .forEach(generatedFiles::add);\n         } catch(Exception e) {\n             logger.error(\"Unable to generate Strongly Typed Input for: {} {}\", model.getNamespace(), model.getName());\n+            throw e;\n         }\n     }\n \n"}}, {"oid": "d267bf7bb554d548ac47845e61174e532f3a2a4d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d267bf7bb554d548ac47845e61174e532f3a2a4d", "message": "Second round of review", "committedDate": "2020-05-14T14:41:56Z", "type": "forcePushed"}, {"oid": "039e3aec622446783d2a508358c5636255d2e3fd", "url": "https://github.com/kiegroup/kogito-runtimes/commit/039e3aec622446783d2a508358c5636255d2e3fd", "message": "Second round of review", "committedDate": "2020-05-15T13:58:48Z", "type": "forcePushed"}, {"oid": "cd555660bd02b652359538806c1affe62cfc531b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/cd555660bd02b652359538806c1affe62cfc531b", "message": "Fix failing test", "committedDate": "2020-05-20T07:04:09Z", "type": "forcePushed"}, {"oid": "281e109d6b294637d3f6f86d5f0a37c9bdbe42fe", "url": "https://github.com/kiegroup/kogito-runtimes/commit/281e109d6b294637d3f6f86d5f0a37c9bdbe42fe", "message": "Fix failing test", "committedDate": "2020-05-20T15:32:26Z", "type": "forcePushed"}, {"oid": "e7aee90f9810c9a230833fdbc30622b62393d983", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e7aee90f9810c9a230833fdbc30622b62393d983", "message": "Added model and swagger extension\n\nSystem property to enable the DMN Typesafe feature", "committedDate": "2020-05-21T07:56:39Z", "type": "commit"}, {"oid": "8a324f3afb4d964d6221b6ad0810b4b3fd030fd4", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8a324f3afb4d964d6221b6ad0810b4b3fd030fd4", "message": "Fix compilation", "committedDate": "2020-05-21T07:56:42Z", "type": "commit"}, {"oid": "d8b7c3b16def75403a3dc4c7a1f68c161f7454a8", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d8b7c3b16def75403a3dc4c7a1f68c161f7454a8", "message": "Use application.properties, fix DecisionCodegenTest.java", "committedDate": "2020-05-21T07:56:42Z", "type": "commit"}, {"oid": "39b7480aec74b7a4a1fe980c4c8de8912014f572", "url": "https://github.com/kiegroup/kogito-runtimes/commit/39b7480aec74b7a4a1fe980c4c8de8912014f572", "message": "quarkus.kogito.dmn.openapi", "committedDate": "2020-05-21T07:56:42Z", "type": "commit"}, {"oid": "32492ee7a059a30fdf8f29e1da380e6770b50877", "url": "https://github.com/kiegroup/kogito-runtimes/commit/32492ee7a059a30fdf8f29e1da380e6770b50877", "message": "Renamed to Strongly typed", "committedDate": "2020-05-21T07:56:42Z", "type": "commit"}, {"oid": "9d9331c91f19690b28689eaf144f6964ca217d68", "url": "https://github.com/kiegroup/kogito-runtimes/commit/9d9331c91f19690b28689eaf144f6964ca217d68", "message": "Changes after review", "committedDate": "2020-05-21T07:57:08Z", "type": "commit"}, {"oid": "bc06c7d0bb529611ee34364d9d0bd7d89372bac5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/bc06c7d0bb529611ee34364d9d0bd7d89372bac5", "message": "Second round of review", "committedDate": "2020-05-21T07:57:10Z", "type": "commit"}, {"oid": "79343b59ebe1c09d1fab08624098d8c444e3dd8f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/79343b59ebe1c09d1fab08624098d8c444e3dd8f", "message": "Fix failing test", "committedDate": "2020-05-21T07:57:10Z", "type": "commit"}, {"oid": "79343b59ebe1c09d1fab08624098d8c444e3dd8f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/79343b59ebe1c09d1fab08624098d8c444e3dd8f", "message": "Fix failing test", "committedDate": "2020-05-21T07:57:10Z", "type": "forcePushed"}, {"oid": "2a7f1fc365405ce803175bd2a176ac4ce0bf6b1b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2a7f1fc365405ce803175bd2a176ac4ce0bf6b1b", "message": "Fix rebase", "committedDate": "2020-05-21T08:05:31Z", "type": "commit"}]}