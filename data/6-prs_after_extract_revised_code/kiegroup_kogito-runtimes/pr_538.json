{"pr_number": 538, "pr_title": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header", "pr_createdAt": "2020-06-02T19:40:46Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/538", "timeline": [{"oid": "c0b59f9a4e1ba819c956f5f9752dd0c2618fab49", "url": "https://github.com/kiegroup/kogito-runtimes/commit/c0b59f9a4e1ba819c956f5f9752dd0c2618fab49", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-02T19:49:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjk0OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434322948", "bodyText": "This line has a format issue.", "author": "Sgitario", "createdAt": "2020-06-03T05:52:26Z", "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java", "diffHunk": "@@ -73,6 +73,8 @@\n \t\n \tDate getStartDate();\n \n+    void setStartDate(Date date);", "originalCommit": "c0b59f9a4e1ba819c956f5f9752dd0c2618fab49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5MDg1NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434390855", "bodyText": "This format problem appears because the edited file is using tabs and the code style imported from here https://github.com/Sgitario/droolsjbpm-build-bootstrap/blob/master/ide-configuration/eclipse-configuration/code-style/eclipse-code-style-formatter_droolsjbpm-java-conventions.xml, replace tabs by 4 spaces.\nSince the formatter only replaces edited lines and the rest of the files use tab character, hence the discrepancy.  In order to fix it, either I stop using the formatter, either we format the whole file", "author": "fjtirado", "createdAt": "2020-06-03T08:18:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjk0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNTQ0NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434405444", "bodyText": "Actually the file already has a mix of tabs and spaces, in order to align them, I reformat the whole to  use 4 spaces as described in the style.\nThis will cause some changes apparently \"unneeded\" to appear in the diff, but will prevent this \"format\" issue to reappear in the future", "author": "fjtirado", "createdAt": "2020-06-03T08:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "22b4c9901e445c49210e2d71a7a5d929b1306dfd", "chunk": "diff --git a/jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java b/jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java\nindex ddef4120ca..66ff9b1b3a 100755\n--- a/jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java\n+++ b/jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java\n\n@@ -61,25 +61,25 @@ public interface ProcessInstance extends org.kie.api.runtime.process.ProcessInst\n     \n     Map<String, Object> getMetaData();\n \n-\tObject getFaultData();\n-\t\n-\tvoid setSignalCompletion(boolean signalCompletion);\n-\t\n-\tboolean isSignalCompletion();\n-\t\n-\tString getDeploymentId();\n-\t\n-\tvoid setDeploymentId(String deploymentId);\n-\t\n-\tDate getStartDate();\n+    Object getFaultData();\n+\n+    void setSignalCompletion(boolean signalCompletion);\n+\n+    boolean isSignalCompletion();\n+\n+    String getDeploymentId();\n+\n+    void setDeploymentId(String deploymentId);\n+\n+    Date getStartDate();\n \n     void setStartDate(Date date);\n \n-\tint getSlaCompliance();\n-\t\n-\tDate getSlaDueDate();\n-\t\n-\tvoid configureSLA();\n+    int getSlaCompliance();\n+\n+    Date getSlaDueDate();\n+\n+    void configureSLA();\n     \n \tvoid setReferenceId(String referenceId);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMzU2OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434323569", "bodyText": "@cristianonicolai is Kogito following any code format convention for import order and code changes? In jBPM, we configured our IDEs using https://github.com/Sgitario/droolsjbpm-build-bootstrap/tree/master/ide-configuration.", "author": "Sgitario", "createdAt": "2020-06-03T05:54:25Z", "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/marshalling/impl/AbstractProtobufProcessInstanceMarshaller.java", "diffHunk": "@@ -69,8 +70,6 @@\n import org.kie.api.runtime.process.WorkflowProcessInstance;\n import org.kie.api.runtime.rule.FactHandle;\n \n-import com.google.protobuf.ExtensionRegistry;", "originalCommit": "c0b59f9a4e1ba819c956f5f9752dd0c2618fab49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM4NjY2Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434386667", "bodyText": "For imports, I imported this link https://github.com/Sgitario/droolsjbpm-build-bootstrap/blob/master/ide-configuration/eclipse-configuration/code-style/eclipse-code-style-organize-imports_droolsjbpm-java-conventions.importorder\nThe order that appear in ogranize import is\njava, javax, all unmatched type imports, all unmatched static imports\nThis works alphabetically, thats the reason why, when saving and organizing imports, the import is moved from bottom of the list to top.\nI guess that is the expected behaviour, but please let me know which approach I should follow.", "author": "fjtirado", "createdAt": "2020-06-03T08:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMzU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwMDkzMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434400932", "bodyText": "Let's wait for @cristianonicolai to confirm the formatter settings are being used in Kogito (if any). This is mostly to avoid more changes than needed only.", "author": "Sgitario", "createdAt": "2020-06-03T08:35:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMzU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0OTk1OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434449958", "bodyText": "@Sgitario @fjtirado correct, Kogito also follows the same code styling defined in https://github.com/kiegroup/droolsjbpm-build-bootstrap/tree/master/ide-configuration", "author": "cristianonicolai", "createdAt": "2020-06-03T09:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMzU2OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "22b4c9901e445c49210e2d71a7a5d929b1306dfd", "url": "https://github.com/kiegroup/kogito-runtimes/commit/22b4c9901e445c49210e2d71a7a5d929b1306dfd", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-03T08:40:30Z", "type": "forcePushed"}, {"oid": "0010c3a16572382624b69344e2a545d05527ae85", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0010c3a16572382624b69344e2a545d05527ae85", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-03T08:48:40Z", "type": "forcePushed"}, {"oid": "83bd3bc22866c92eb2634829bf4f3cd686e12523", "url": "https://github.com/kiegroup/kogito-runtimes/commit/83bd3bc22866c92eb2634829bf4f3cd686e12523", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-03T17:54:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5OTUzMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/538#discussion_r434999533", "bodyText": "please remove comment out code", "author": "cristianonicolai", "createdAt": "2020-06-04T05:25:34Z", "path": "addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java", "diffHunk": "@@ -76,6 +77,40 @@ public void testBasicFlow() {\n \n         assertThat(processInstance.description()).isEqualTo(\"User Task\");\n \n+        WorkItem workItem = processInstance.workItems(securityPolicy).get(0);\n+        assertThat(workItem).isNotNull();\n+        assertThat(workItem.getParameters().get(\"ActorId\")).isEqualTo(\"john\");\n+        processInstance.completeWorkItem(workItem.getId(), null, securityPolicy);\n+        assertThat(processInstance.status()).isEqualTo(STATE_COMPLETED);\n+\n+        fileSystemBasedStorage = (FileSystemProcessInstances) process.instances();\n+        verify(fileSystemBasedStorage, times(2)).remove(any());\n+    }\n+    \n+    @Test\n+    public void testBasicFlowWithStartFrom() {\n+\n+        BpmnProcess process = (BpmnProcess) BpmnProcess.from(new ClassPathResource(\"BPMN2-UserTask.bpmn2\")).get(0);\n+        process.setProcessInstancesFactory(new FileSystemProcessInstancesFactory());\n+        process.configure();\n+\n+        ProcessInstance<BpmnVariables> processInstance = process.createInstance(BpmnVariables.create(Collections.singletonMap(\"test\", \"test\")));\n+\n+        processInstance.startFrom(\"_2\");\n+        \n+        assertThat(processInstance.status()).isEqualTo(STATE_ACTIVE);\n+        assertThat(processInstance.description()).isEqualTo(\"User Task\");\n+\n+        //assertThat(process.instances().values()).hasSize(1);", "originalCommit": "83bd3bc22866c92eb2634829bf4f3cd686e12523", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72a2260d9ffcea217e8bc55d70a33cbd2a4ef1e", "chunk": "diff --git a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\nindex 6e791503d3..d46850b61f 100644\n--- a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n+++ b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n\n@@ -101,8 +101,6 @@ public class FileSystemProcessInstancesTest {\n         assertThat(processInstance.status()).isEqualTo(STATE_ACTIVE);\n         assertThat(processInstance.description()).isEqualTo(\"User Task\");\n \n-        //assertThat(process.instances().values()).hasSize(1);\n-        \n         FileSystemProcessInstances fileSystemBasedStorage = (FileSystemProcessInstances) process.instances();\n         verify(fileSystemBasedStorage, times(1)).update(any(), any());\n \n"}}, {"oid": "f72a2260d9ffcea217e8bc55d70a33cbd2a4ef1e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f72a2260d9ffcea217e8bc55d70a33cbd2a4ef1e", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-04T08:25:49Z", "type": "commit"}, {"oid": "f72a2260d9ffcea217e8bc55d70a33cbd2a4ef1e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f72a2260d9ffcea217e8bc55d70a33cbd2a4ef1e", "message": "KOGITO-1787 NullPointerException X-KOGITO-StartFromNode header\n\nStart date is now fixed in startFrom method, which means\ninternalSetStartDate is not longer internal.", "committedDate": "2020-06-04T08:25:49Z", "type": "forcePushed"}]}