{"pr_number": 652, "pr_title": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only proc\u2026", "pr_createdAt": "2020-07-27T08:08:33Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/652", "timeline": [{"oid": "bc3f1d0b25d95ce48f9061ac29b525a0f7d7cf48", "url": "https://github.com/kiegroup/kogito-runtimes/commit/bc3f1d0b25d95ce48f9061ac29b525a0f7d7cf48", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-27T08:31:24Z", "type": "forcePushed"}, {"oid": "378fa4bb63445cf1b3e0056801bc7402ab80c0ae", "url": "https://github.com/kiegroup/kogito-runtimes/commit/378fa4bb63445cf1b3e0056801bc7402ab80c0ae", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-27T08:47:46Z", "type": "forcePushed"}, {"oid": "0a1d46d73df7507a5852bf1ab4e54f4434e41a10", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0a1d46d73df7507a5852bf1ab4e54f4434e41a10", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-27T13:33:16Z", "type": "forcePushed"}, {"oid": "53a718fd9071e08dcf5b9cb6d89548075ff8e831", "url": "https://github.com/kiegroup/kogito-runtimes/commit/53a718fd9071e08dcf5b9cb6d89548075ff8e831", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-28T02:29:22Z", "type": "forcePushed"}, {"oid": "16f422952225b0b7b9bf7cf899ba6b9fc9d5f8b6", "url": "https://github.com/kiegroup/kogito-runtimes/commit/16f422952225b0b7b9bf7cf899ba6b9fc9d5f8b6", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-28T02:30:29Z", "type": "forcePushed"}, {"oid": "a34568d6dbcadd680ec5c411e073b0c04d1a2caa", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a34568d6dbcadd680ec5c411e073b0c04d1a2caa", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-28T02:33:21Z", "type": "forcePushed"}, {"oid": "038e2525c4c1e49b63b4d6bb4afdc129fc433a4f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/038e2525c4c1e49b63b4d6bb4afdc129fc433a4f", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-28T15:02:11Z", "type": "forcePushed"}, {"oid": "38e022ac0c7dfca7e931fffc8e8c2647021df6a3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/38e022ac0c7dfca7e931fffc8e8c2647021df6a3", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-28T15:07:02Z", "type": "forcePushed"}, {"oid": "e51183d8ded8b8b6cc88cbc68d086e55ef97b9eb", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e51183d8ded8b8b6cc88cbc68d086e55ef97b9eb", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-29T06:52:07Z", "type": "forcePushed"}, {"oid": "e92de9f934aec12316f5be1db0c1c14c89dfeeb2", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e92de9f934aec12316f5be1db0c1c14c89dfeeb2", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-29T11:28:11Z", "type": "forcePushed"}, {"oid": "cfca1f8d4f42d728f22820454835d7f83dfda044", "url": "https://github.com/kiegroup/kogito-runtimes/commit/cfca1f8d4f42d728f22820454835d7f83dfda044", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-29T13:05:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MTI0Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r462751247", "bodyText": "unable to count process instances :)", "author": "mswiderski", "createdAt": "2020-07-30T05:53:41Z", "path": "addons/persistence/filesystem-persistence-addon/src/main/java/org/kie/kogito/persistence/filesystem/FileSystemProcessInstances.java", "diffHunk": "@@ -64,24 +69,40 @@ public FileSystemProcessInstances(Process<?> process, Path storage, ProcessInsta\n     }\n \n     @Override\n-    public Optional findById(String id) {\n+    public Integer size() {\n+        try (Stream<Path> stream = Files.walk(storage)) {\n+            Long count = stream.filter(file -> !Files.isDirectory(file)).count();\n+            return count.intValue();\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Unable to read process instances \", e);", "originalCommit": "cfca1f8d4f42d728f22820454835d7f83dfda044", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4Mjk1Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r463382957", "bodyText": "oops :)", "author": "cristianonicolai", "createdAt": "2020-07-31T03:11:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MTI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "50af66f78f9f446d10100a760a8e043a0d0702c3", "chunk": "diff --git a/addons/persistence/filesystem-persistence-addon/src/main/java/org/kie/kogito/persistence/filesystem/FileSystemProcessInstances.java b/addons/persistence/filesystem-persistence-addon/src/main/java/org/kie/kogito/persistence/filesystem/FileSystemProcessInstances.java\nindex 69cf055e9f..0791b0e0c2 100644\n--- a/addons/persistence/filesystem-persistence-addon/src/main/java/org/kie/kogito/persistence/filesystem/FileSystemProcessInstances.java\n+++ b/addons/persistence/filesystem-persistence-addon/src/main/java/org/kie/kogito/persistence/filesystem/FileSystemProcessInstances.java\n\n@@ -74,7 +74,7 @@ public class FileSystemProcessInstances implements MutableProcessInstances {\n             Long count = stream.filter(file -> !Files.isDirectory(file)).count();\n             return count.intValue();\n         } catch (IOException e) {\n-            throw new RuntimeException(\"Unable to read process instances \", e);\n+            throw new RuntimeException(\"Unable to count process instances \", e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MTgxOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r462751818", "bodyText": "could we have something else than NullPointerException?", "author": "mswiderski", "createdAt": "2020-07-30T05:55:25Z", "path": "addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java", "diffHunk": "@@ -46,12 +49,46 @@\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n \n-public class FileSystemProcessInstancesTest {\n+class FileSystemProcessInstancesTest {\n \n     private SecurityPolicy securityPolicy = SecurityPolicy.of(new StaticIdentityProvider(\"john\"));\n \n     @Test\n-    public void testBasicFlow() {\n+    void testFindByIdReadMode() {\n+        BpmnProcess process = BpmnProcess.from(new ClassPathResource(\"BPMN2-UserTask.bpmn2\")).get(0);\n+        process.setProcessInstancesFactory(new FileSystemProcessInstancesFactory());\n+        process.configure();\n+\n+        ProcessInstance<BpmnVariables> processInstance = process.createInstance(BpmnVariables.create(Collections.singletonMap(\"test\", \"test\")));\n+\n+        processInstance.start();\n+\n+        ProcessInstances<BpmnVariables> instances = process.instances();\n+        assertThat(instances.size()).isOne();\n+        assertThatNullPointerException().isThrownBy(() -> instances.findById(processInstance.id(), ProcessInstanceReadMode.READ_ONLY).get().abort());", "originalCommit": "cfca1f8d4f42d728f22820454835d7f83dfda044", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4MzExMQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r463383111", "bodyText": "managed to change so now calling any operation on a read only process instance will throw a UnsupportedOperationException.", "author": "cristianonicolai", "createdAt": "2020-07-31T03:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MTgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "50af66f78f9f446d10100a760a8e043a0d0702c3", "chunk": "diff --git a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\nindex a955ed71eb..ca8fc609ab 100644\n--- a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n+++ b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n\n@@ -40,9 +45,11 @@ import org.kie.kogito.uow.UnitOfWork;\n import org.kie.kogito.uow.UnitOfWorkManager;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.assertThatNullPointerException;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+import static org.assertj.core.api.Assertions.entry;\n import static org.kie.api.runtime.process.ProcessInstance.STATE_ACTIVE;\n import static org.kie.api.runtime.process.ProcessInstance.STATE_COMPLETED;\n+import static org.kie.api.runtime.process.ProcessInstance.STATE_ERROR;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.spy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MjIyOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r462752229", "bodyText": "can we add a test case that checks that variables/error info can be easily accessed in readonly mode?", "author": "mswiderski", "createdAt": "2020-07-30T05:56:44Z", "path": "addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java", "diffHunk": "@@ -46,12 +49,46 @@\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n \n-public class FileSystemProcessInstancesTest {\n+class FileSystemProcessInstancesTest {\n \n     private SecurityPolicy securityPolicy = SecurityPolicy.of(new StaticIdentityProvider(\"john\"));\n \n     @Test\n-    public void testBasicFlow() {\n+    void testFindByIdReadMode() {\n+        BpmnProcess process = BpmnProcess.from(new ClassPathResource(\"BPMN2-UserTask.bpmn2\")).get(0);\n+        process.setProcessInstancesFactory(new FileSystemProcessInstancesFactory());\n+        process.configure();\n+\n+        ProcessInstance<BpmnVariables> processInstance = process.createInstance(BpmnVariables.create(Collections.singletonMap(\"test\", \"test\")));\n+\n+        processInstance.start();\n+\n+        ProcessInstances<BpmnVariables> instances = process.instances();\n+        assertThat(instances.size()).isOne();\n+        assertThatNullPointerException().isThrownBy(() -> instances.findById(processInstance.id(), ProcessInstanceReadMode.READ_ONLY).get().abort());\n+        instances.findById(processInstance.id()).get().abort();\n+        assertThat(instances.size()).isZero();\n+    }\n+\n+    @Test\n+    void testValuesReadMode() {", "originalCommit": "cfca1f8d4f42d728f22820454835d7f83dfda044", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4MzIwNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/652#discussion_r463383206", "bodyText": "extended the test case to cover that as well. Thanks", "author": "cristianonicolai", "createdAt": "2020-07-31T03:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1MjIyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "50af66f78f9f446d10100a760a8e043a0d0702c3", "chunk": "diff --git a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\nindex a955ed71eb..ca8fc609ab 100644\n--- a/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n+++ b/addons/persistence/filesystem-persistence-addon/src/test/java/org/kie/persistence/filesystem/FileSystemProcessInstancesTest.java\n\n@@ -40,9 +45,11 @@ import org.kie.kogito.uow.UnitOfWork;\n import org.kie.kogito.uow.UnitOfWorkManager;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.assertThatNullPointerException;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+import static org.assertj.core.api.Assertions.entry;\n import static org.kie.api.runtime.process.ProcessInstance.STATE_ACTIVE;\n import static org.kie.api.runtime.process.ProcessInstance.STATE_COMPLETED;\n+import static org.kie.api.runtime.process.ProcessInstance.STATE_ERROR;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.spy;\n"}}, {"oid": "50af66f78f9f446d10100a760a8e043a0d0702c3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/50af66f78f9f446d10100a760a8e043a0d0702c3", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-31T03:05:40Z", "type": "forcePushed"}, {"oid": "45380862272407d564218fc154ea7e0e0435d309", "url": "https://github.com/kiegroup/kogito-runtimes/commit/45380862272407d564218fc154ea7e0e0435d309", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-31T07:16:04Z", "type": "forcePushed"}, {"oid": "2341415cf136b2dcccd04bc27c3c4e03c0fddb5a", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2341415cf136b2dcccd04bc27c3c4e03c0fddb5a", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-31T08:12:36Z", "type": "forcePushed"}, {"oid": "d8ec755d63d175b7a8d1f84a48429d2390b3247c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d8ec755d63d175b7a8d1f84a48429d2390b3247c", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-07-31T10:05:01Z", "type": "forcePushed"}, {"oid": "1476a7a5415b13684173807a6f0085a8f7dec167", "url": "https://github.com/kiegroup/kogito-runtimes/commit/1476a7a5415b13684173807a6f0085a8f7dec167", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-08-03T14:32:59Z", "type": "forcePushed"}, {"oid": "2f6fc15736b1ff1e8d483f8e7ef6e84ea3d8f057", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2f6fc15736b1ff1e8d483f8e7ef6e84ea3d8f057", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-08-03T15:05:58Z", "type": "commit"}, {"oid": "2f6fc15736b1ff1e8d483f8e7ef6e84ea3d8f057", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2f6fc15736b1ff1e8d483f8e7ef6e84ea3d8f057", "message": "KOGITO-2207 Introduce ProcessInstanceReadMode to allow read only process instances", "committedDate": "2020-08-03T15:05:58Z", "type": "forcePushed"}]}