{"pr_number": 620, "pr_title": "KOGITO-1133 Add support for listing process nodes via management add on", "pr_createdAt": "2020-07-09T15:21:21Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/620", "timeline": [{"oid": "34b4227e6079b59a3d5f731723a7d47aa1072dbb", "url": "https://github.com/kiegroup/kogito-runtimes/commit/34b4227e6079b59a3d5f731723a7d47aa1072dbb", "message": "KOGITO-1133 Add support for listing process nodes via management add on", "committedDate": "2020-07-09T15:22:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5Njk1NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/620#discussion_r453596955", "bodyText": "what about creating a class to encapsulate the attributes instead of creating a Map.", "author": "tiagodolphine", "createdAt": "2020-07-13T11:56:32Z", "path": "addons/process-management/process-management-common/src/main/java/org/kie/kogito/process/management/BaseProcessInstanceManagementResource.java", "diffHunk": "@@ -48,6 +53,21 @@ public BaseProcessInstanceManagementResource(Processes processes, Application ap\n         this.application = application;\n     }\n \n+    public T doGetProcessNodes(String processId) {\n+        return executeOnProcess(processId, process -> {\n+            List<Node> nodes = ((WorkflowProcess) ((AbstractProcess<?>) process).process()).getNodesRecursively();\n+            List<Map<String, Object>> list = nodes.stream().map(n -> {\n+                Map<String, Object> data = new HashMap<>();", "originalCommit": "34b4227e6079b59a3d5f731723a7d47aa1072dbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NDE1Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/620#discussion_r454994153", "bodyText": "@tiagodolphine perhaps a bit overkill just for this transformation? if we have a need for more use of nodes or any consistency issues we can then review this.", "author": "cristianonicolai", "createdAt": "2020-07-15T11:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5Njk1NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5ODU5NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/620#discussion_r453598595", "bodyText": "maybe the @DirtiesContext could be removed, this will avoid recreating all the spring context per method, there was some discussion about this on kogito-examples.", "author": "tiagodolphine", "createdAt": "2020-07-13T11:59:42Z", "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ManagementAddOnTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.integrationtests.springboot;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.CoreMatchers.is;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, classes = KogitoSpringbootApplication.class)\n+@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)", "originalCommit": "34b4227e6079b59a3d5f731723a7d47aa1072dbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5MzY0Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/620#discussion_r454993642", "bodyText": "@tiagodolphine removed from all tests", "author": "cristianonicolai", "createdAt": "2020-07-15T11:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5ODU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8d170a324059483d0f97da8d998baeac71a8b3fa", "chunk": "diff --git a/integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ManagementAddOnTest.java b/integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ManagementAddOnTest.java\nindex 96d2670cf3..b1b44dc66e 100644\n--- a/integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ManagementAddOnTest.java\n+++ b/integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ManagementAddOnTest.java\n\n@@ -20,14 +20,12 @@ import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n import org.junit.jupiter.api.Test;\n import org.springframework.boot.test.context.SpringBootTest;\n-import org.springframework.test.annotation.DirtiesContext;\n \n import static io.restassured.RestAssured.given;\n import static org.hamcrest.CoreMatchers.equalTo;\n import static org.hamcrest.CoreMatchers.is;\n \n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, classes = KogitoSpringbootApplication.class)\n-@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n class ManagementAddOnTest {\n \n     static {\n"}}, {"oid": "8d170a324059483d0f97da8d998baeac71a8b3fa", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8d170a324059483d0f97da8d998baeac71a8b3fa", "message": "KOGITO-1133 Add support for listing process nodes via management add on", "committedDate": "2020-07-15T11:50:37Z", "type": "commit"}, {"oid": "8d170a324059483d0f97da8d998baeac71a8b3fa", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8d170a324059483d0f97da8d998baeac71a8b3fa", "message": "KOGITO-1133 Add support for listing process nodes via management add on", "committedDate": "2020-07-15T11:50:37Z", "type": "forcePushed"}]}