{"pr_number": 499, "pr_title": "KOGITO-2140 - Serverless Workflow - add support for sending event on \u2026", "pr_createdAt": "2020-05-09T04:37:34Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/499", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNDQyMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/499#discussion_r423524422", "bodyText": "Metadata constants are already defined in the Metadata class\nhttps://github.com/kiegroup/kogito-runtimes/blob/master/jbpm/jbpm-flow/src/main/java/org/jbpm/ruleflow/core/Metadata.java#L22", "author": "ruromero", "createdAt": "2020-05-12T07:38:03Z", "path": "jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java", "diffHunk": "@@ -69,6 +69,11 @@\n     public static final String HTP_GROUPID = \"groupid\";\n     public static final String HT_ACTORID = \"actorid\";\n     public static final String RF_GROUP = \"ruleflowgroup\";\n+    public static final String METADATA_TRIGGERREF = \"TriggerRef\";", "originalCommit": "0c00cb8570304042654bd2e7bf7ba0e9ac94c2ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88891d26863703ac5895aa38a875be3d61f6c594", "chunk": "diff --git a/jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java b/jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java\nindex 74db6d5237..7ea3001162 100644\n--- a/jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java\n+++ b/jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java\n\n@@ -69,11 +69,6 @@ public class ServerlessWorkflowFactory {\n     public static final String HTP_GROUPID = \"groupid\";\n     public static final String HT_ACTORID = \"actorid\";\n     public static final String RF_GROUP = \"ruleflowgroup\";\n-    public static final String METADATA_TRIGGERREF = \"TriggerRef\";\n-    public static final String METADATA_MESSAGETYPE = \"MessageType\";\n-    public static final String METADATA_TRIGGERTYPE = \"TriggerType\";\n-    public static final String METADATA_TRIGGERMAPPING = \"TriggerMapping\";\n-    public static final String METADATA_MAPPINGVARIABLE = \"MappingVariable\";\n \n     private WorkflowAppContext workflowAppContext;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNTAzOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/499#discussion_r423525038", "bodyText": "Use constants in Metadata", "author": "ruromero", "createdAt": "2020-05-12T07:39:16Z", "path": "jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java", "diffHunk": "@@ -347,4 +347,22 @@ public void testRuleSetNodeDefaultValues() {\n         assertThat(ruleSetNode.getOutMappings()).isNotNull();\n         assertThat(ruleSetNode.getOutMappings().size()).isEqualTo(1);\n     }\n+\n+    @Test\n+    public void testSendEventNode() {\n+        TestNodeContainer nodeContainer = new TestNodeContainer();\n+\n+        EventDefinition eventDefinition = new EventDefinition().withName(\"testEvent\")\n+                .withSource(\"testSource\").withType(\"testType\");\n+\n+        ActionNode actionNode = testFactory.sendEventNode(1L, eventDefinition, nodeContainer);\n+        assertThat(actionNode).isNotNull();\n+        assertThat(actionNode.getName()).isEqualTo(\"testEvent\");\n+        assertThat(actionNode.getMetaData(\"TriggerType\")).isEqualTo(\"ProduceMessage\");", "originalCommit": "0c00cb8570304042654bd2e7bf7ba0e9ac94c2ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e777902e01dbd0e26c301d51e0f6f1f6f37e185b", "chunk": "diff --git a/jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java b/jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java\nindex a084c4e049..b8422efa6d 100644\n--- a/jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java\n+++ b/jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java\n\n@@ -358,10 +359,10 @@ public class WorkflowFactoryTest extends BaseServerlessTest {\n         ActionNode actionNode = testFactory.sendEventNode(1L, eventDefinition, nodeContainer);\n         assertThat(actionNode).isNotNull();\n         assertThat(actionNode.getName()).isEqualTo(\"testEvent\");\n-        assertThat(actionNode.getMetaData(\"TriggerType\")).isEqualTo(\"ProduceMessage\");\n-        assertThat(actionNode.getMetaData(\"MappingVariable\")).isEqualTo(\"workflowdata\");\n-        assertThat(actionNode.getMetaData(\"TriggerRef\")).isEqualTo(\"testSource\");\n-        assertThat(actionNode.getMetaData(\"MessageType\")).isEqualTo(\"com.fasterxml.jackson.databind.JsonNode\");\n+        assertThat(actionNode.getMetaData(Metadata.TRIGGER_TYPE)).isEqualTo(\"ProduceMessage\");\n+        assertThat(actionNode.getMetaData(Metadata.MAPPING_VARIABLE)).isEqualTo(\"workflowdata\");\n+        assertThat(actionNode.getMetaData(Metadata.TRIGGER_REF)).isEqualTo(\"testSource\");\n+        assertThat(actionNode.getMetaData(Metadata.MESSAGE_TYPE)).isEqualTo(\"com.fasterxml.jackson.databind.JsonNode\");\n \n     }\n \n"}}, {"oid": "88891d26863703ac5895aa38a875be3d61f6c594", "url": "https://github.com/kiegroup/kogito-runtimes/commit/88891d26863703ac5895aa38a875be3d61f6c594", "message": "KOGITO-2140 - Serverless Workflow - add support for sending event on state transitions", "committedDate": "2020-05-12T15:31:57Z", "type": "commit"}, {"oid": "b5269cbd2d5fd651bb26b836d61df957c5722695", "url": "https://github.com/kiegroup/kogito-runtimes/commit/b5269cbd2d5fd651bb26b836d61df957c5722695", "message": "remove unused import", "committedDate": "2020-05-12T15:31:57Z", "type": "commit"}, {"oid": "95330eb85432a9a49a06e73abfeb106554ffd060", "url": "https://github.com/kiegroup/kogito-runtimes/commit/95330eb85432a9a49a06e73abfeb106554ffd060", "message": "fixing codesmells", "committedDate": "2020-05-12T15:31:57Z", "type": "commit"}, {"oid": "9b5490b16f7b2659052bec40f3e062aaa901e42e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/9b5490b16f7b2659052bec40f3e062aaa901e42e", "message": " fixing codesmells", "committedDate": "2020-05-12T15:31:57Z", "type": "commit"}, {"oid": "e777902e01dbd0e26c301d51e0f6f1f6f37e185b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e777902e01dbd0e26c301d51e0f6f1f6f37e185b", "message": "refactorying metadata", "committedDate": "2020-05-12T15:58:06Z", "type": "commit"}, {"oid": "e777902e01dbd0e26c301d51e0f6f1f6f37e185b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e777902e01dbd0e26c301d51e0f6f1f6f37e185b", "message": "refactorying metadata", "committedDate": "2020-05-12T15:58:06Z", "type": "forcePushed"}, {"oid": "d14255b5ea705b23cad9ad56c9da5e916e7d87bb", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d14255b5ea705b23cad9ad56c9da5e916e7d87bb", "message": "formatting change to retrigger build...", "committedDate": "2020-05-12T18:55:40Z", "type": "commit"}]}