{"pr_number": 425, "pr_title": "KOGITO-1732 - Ensure service url is always present in endpoint", "pr_createdAt": "2020-04-08T06:16:20Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/425", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzcxOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/425#discussion_r406143719", "bodyText": "could processId be null?", "author": "tiagodolphine", "createdAt": "2020-04-09T11:39:08Z", "path": "api/kogito-services/src/main/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatch.java", "diffHunk": "@@ -221,23 +215,19 @@ protected VariableInstanceEventBody create(ProcessVariableChangedEvent event) {\n                 .variableName(event.getVariableId())\n                 .variableValue(event.getNewValue())\n                 .variablePreviousValue(event.getOldValue());\n-        \n+\n         if (event.getNodeInstance() != null) {\n             eventBuilder\n-                .changedByNodeId(event.getNodeInstance().getNodeDefinitionId())\n-                .changedByNodeName(event.getNodeInstance().getNodeName())\n-                .changedByNodeType(event.getNodeInstance().getNode().getClass().getSimpleName());\n+                    .changedByNodeId(event.getNodeInstance().getNodeDefinitionId())\n+                    .changedByNodeName(event.getNodeInstance().getNodeName())\n+                    .changedByNodeType(event.getNodeInstance().getNode().getClass().getSimpleName());\n         }\n-        \n+\n         return eventBuilder.build();\n     }\n-    \n-    protected String extractProcessId(Map<String, String> metadata) {\n-        String processId = metadata.get(ProcessInstanceEventBody.PROCESS_ID_META_DATA);\n-        if (processId.contains(\".\")) {\n-            return processId.substring(processId.lastIndexOf('.') + 1);\n-        }\n \n-        return service + \"/\" + processId;\n+    protected String extractRuntimeSource(Map<String, String> metadata) {\n+        String processId = metadata.get(ProcessInstanceEventBody.PROCESS_ID_META_DATA);", "originalCommit": "bde2d09026e32846717c9dcc555eda048b4e7dfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2MTg4OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/425#discussion_r406261888", "bodyText": "it shouldnt but added a check anyway", "author": "cristianonicolai", "createdAt": "2020-04-09T14:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzcxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "chunk": "diff --git a/api/kogito-services/src/main/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatch.java b/api/kogito-services/src/main/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatch.java\nindex 58bbb43e82..37270e0981 100644\n--- a/api/kogito-services/src/main/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatch.java\n+++ b/api/kogito-services/src/main/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatch.java\n\n@@ -228,6 +228,10 @@ public class ProcessInstanceEventBatch implements EventBatch {\n \n     protected String extractRuntimeSource(Map<String, String> metadata) {\n         String processId = metadata.get(ProcessInstanceEventBody.PROCESS_ID_META_DATA);\n-        return service + \"/\" + (processId.contains(\".\") ? processId.substring(processId.lastIndexOf('.') + 1) : processId);\n+        if(processId == null){\n+            return null;\n+        } else {\n+            return service + \"/\" + (processId.contains(\".\") ? processId.substring(processId.lastIndexOf('.') + 1) : processId);\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDE5MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/425#discussion_r406144190", "bodyText": "in case processId is null you can add a test for it.", "author": "tiagodolphine", "createdAt": "2020-04-09T11:40:13Z", "path": "api/kogito-services/src/test/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatchTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.services.event.impl;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.Collections.singletonMap;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.kie.kogito.services.event.impl.ProcessInstanceEventBody.PROCESS_ID_META_DATA;\n+\n+public class ProcessInstanceEventBatchTest {", "originalCommit": "bde2d09026e32846717c9dcc555eda048b4e7dfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2MTk3MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/425#discussion_r406261970", "bodyText": "done", "author": "cristianonicolai", "createdAt": "2020-04-09T14:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "chunk": "diff --git a/api/kogito-services/src/test/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatchTest.java b/api/kogito-services/src/test/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatchTest.java\nindex 68eab71041..0e27a9d4db 100644\n--- a/api/kogito-services/src/test/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatchTest.java\n+++ b/api/kogito-services/src/test/java/org/kie/kogito/services/event/impl/ProcessInstanceEventBatchTest.java\n\n@@ -18,6 +18,7 @@ package org.kie.kogito.services.event.impl;\n \n import org.junit.jupiter.api.Test;\n \n+import static java.util.Collections.emptyMap;\n import static java.util.Collections.singletonMap;\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.kie.kogito.services.event.impl.ProcessInstanceEventBody.PROCESS_ID_META_DATA;\n"}}, {"oid": "5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "message": "KOGITO-1732 - Ensure service url is always present in endpoint", "committedDate": "2020-04-09T14:48:56Z", "type": "commit"}, {"oid": "5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5257ffe5f5b55c52d6b14aa36402a32f8f3d9987", "message": "KOGITO-1732 - Ensure service url is always present in endpoint", "committedDate": "2020-04-09T14:48:56Z", "type": "forcePushed"}]}