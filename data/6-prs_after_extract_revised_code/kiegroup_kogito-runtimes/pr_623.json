{"pr_number": 623, "pr_title": "KOGITO-2730 Refactoring AbstractCodegenTest", "pr_createdAt": "2020-07-10T16:13:27Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/623", "timeline": [{"oid": "d3828f8817885fd18ad2c8623cdfa1d3858deacb", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d3828f8817885fd18ad2c8623cdfa1d3858deacb", "message": "[KOGITO-2730] Refactoring AbstractCodegenTest", "committedDate": "2020-07-10T16:05:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NzUxNA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/623#discussion_r452947514", "bodyText": "If you want to remove it, for me it's fine, but my previous understanding is that this was \"by design\" of codegenerators? possibly @evacchi and @mariofusco can better advise here.", "author": "tarilabs", "createdAt": "2020-07-10T16:28:05Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -104,19 +104,19 @@ public static DecisionCodegen ofPath(Path... paths) throws IOException {\n         return ofDecisions(resources);\n     }\n \n-    public static DecisionCodegen ofFiles(Path basePath, List<File> files) throws IOException {", "originalCommit": "d3828f8817885fd18ad2c8623cdfa1d3858deacb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2OTE2Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/623#discussion_r453469167", "bodyText": "if it never throws, I guess it's ok to drop that. I don't have a strong opinion there :)", "author": "evacchi", "createdAt": "2020-07-13T07:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NzUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MDMzNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/623#discussion_r453570336", "bodyText": "@evacchi @tarilabs\nI think the exception could be dropped since it is not explicitly catch on the code I see.", "author": "gitgabrio", "createdAt": "2020-07-13T11:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NzUxNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "6ac0c91232929a1ab5159ca9706f0edee1ee3987", "url": "https://github.com/kiegroup/kogito-runtimes/commit/6ac0c91232929a1ab5159ca9706f0edee1ee3987", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2730", "committedDate": "2020-07-13T07:40:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxODA1Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/623#discussion_r453518057", "bodyText": "As you mentioned, order is important so can you please add a comment here and also (if possible) a link to the code where this order is defined?", "author": "danielezonca", "createdAt": "2020-07-13T09:29:31Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java", "diffHunk": "@@ -52,10 +52,45 @@\n public class AbstractCodegenTest {\n     \n     private static final Logger logger = LoggerFactory.getLogger(AbstractCodegenTest.class);\n-    \n+\n+    protected enum TYPE {\n+        PROCESS,\n+        RULES,\n+        DECISION,\n+        JAVA,\n+        PREDICTION\n+    }", "originalCommit": "6ac0c91232929a1ab5159ca9706f0edee1ee3987", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYyOTExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/623#discussion_r453629110", "bodyText": "@danielezonca\ndone", "author": "gitgabrio", "createdAt": "2020-07-13T12:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxODA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4ff55d3a6e8dcaf79dac26fb828377a1a5e4ee72", "chunk": "diff --git a/kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java b/kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java\nindex 8ee69ff2b0..ba5a02a458 100644\n--- a/kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java\n+++ b/kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java\n\n@@ -53,6 +53,11 @@ public class AbstractCodegenTest {\n     \n     private static final Logger logger = LoggerFactory.getLogger(AbstractCodegenTest.class);\n \n+    /**\n+     * Order matters here because inside {@link AbstractCodegenTest#generateCode(Map, boolean)} it is the order used to invoke\n+     * \n+     * {@link ApplicationGenerator#withGenerator(Generator) }\n+     */\n     protected enum TYPE {\n         PROCESS,\n         RULES,\n"}}, {"oid": "4ff55d3a6e8dcaf79dac26fb828377a1a5e4ee72", "url": "https://github.com/kiegroup/kogito-runtimes/commit/4ff55d3a6e8dcaf79dac26fb828377a1a5e4ee72", "message": "[KOGITO-2730] Add description as per PR request", "committedDate": "2020-07-13T12:52:11Z", "type": "commit"}]}