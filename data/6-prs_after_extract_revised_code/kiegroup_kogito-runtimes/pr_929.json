{"pr_number": 929, "pr_title": "[KOGITO-3975] Refactor Application and Config API to make them easier to extend", "pr_createdAt": "2020-12-09T17:49:38Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/929", "timeline": [{"oid": "05cbcd566461445dabae2030af29a9beadfdfff3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/05cbcd566461445dabae2030af29a9beadfdfff3", "message": "WIP", "committedDate": "2020-12-05T11:32:46Z", "type": "commit"}, {"oid": "706005c407df0f5f3261d82cc688ffd3a45fe3c4", "url": "https://github.com/kiegroup/kogito-runtimes/commit/706005c407df0f5f3261d82cc688ffd3a45fe3c4", "message": "[KOGITO-3974] PredictionModels and DecisionModels are now using templates + Created AbstractPredictionModels and AbstractDecisionModels with common code", "committedDate": "2020-12-07T17:48:27Z", "type": "commit"}, {"oid": "493c6d44e0de485fa4c41a43586e9f7b89454c8c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/493c6d44e0de485fa4c41a43586e9f7b89454c8c", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tapi/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java\n#\tkogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationContainerGenerator.java\n#\tkogito-codegen/src/main/resources/class-templates/ApplicationTemplate.java\n#\tkogito-codegen/src/main/resources/class-templates/CdiApplicationTemplate.java\n#\tkogito-codegen/src/main/resources/class-templates/DecisionContainerTemplate.java\n#\tkogito-codegen/src/main/resources/class-templates/SpringApplicationTemplate.java", "committedDate": "2020-12-07T17:56:45Z", "type": "commit"}, {"oid": "ccff35b5ae42d0b004dcafac5c4bee67ffc87f4f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/ccff35b5ae42d0b004dcafac5c4bee67ffc87f4f", "message": "[KOGITO-3975] WIP, compile but integration broken tests", "committedDate": "2020-12-07T18:19:44Z", "type": "commit"}, {"oid": "fa17449e1540d66253fcf821cf7f2d33c464e579", "url": "https://github.com/kiegroup/kogito-runtimes/commit/fa17449e1540d66253fcf821cf7f2d33c464e579", "message": "[KOGITO-3975] Fix tests", "committedDate": "2020-12-08T10:56:50Z", "type": "commit"}, {"oid": "ccc8b2778a2094e23cc5f739e69277481daf6355", "url": "https://github.com/kiegroup/kogito-runtimes/commit/ccc8b2778a2094e23cc5f739e69277481daf6355", "message": "[KOGITO-3974] Revert ApplicationContainerGenerator changes and postpone ApplicationTemplate to a different PR", "committedDate": "2020-12-09T09:26:53Z", "type": "commit"}, {"oid": "5bbbbbec2ce2706b1870ed496db19fcef605ce63", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5bbbbbec2ce2706b1870ed496db19fcef605ce63", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tkogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationContainerGenerator.java\n#\tkogito-codegen/src/main/resources/class-templates/ApplicationTemplate.java", "committedDate": "2020-12-09T10:51:34Z", "type": "commit"}, {"oid": "84213694108c1e538ee83dc739c9fa33659d34c8", "url": "https://github.com/kiegroup/kogito-runtimes/commit/84213694108c1e538ee83dc739c9fa33659d34c8", "message": "[KOGITO-3975] Minor", "committedDate": "2020-12-09T10:53:18Z", "type": "commit"}, {"oid": "0b300a420b7fd675c3ef785d8611759c23aaefba", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b300a420b7fd675c3ef785d8611759c23aaefba", "message": "[KOGITO-3974] Fix missing conf use case", "committedDate": "2020-12-09T10:54:54Z", "type": "commit"}, {"oid": "a841c41acb1762d6d18fb2535d3c7e9a079ef5da", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a841c41acb1762d6d18fb2535d3c7e9a079ef5da", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tapi/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java", "committedDate": "2020-12-09T10:55:44Z", "type": "commit"}, {"oid": "3aaaaff98b25df1659a9b116b9f14f670ac348ec", "url": "https://github.com/kiegroup/kogito-runtimes/commit/3aaaaff98b25df1659a9b116b9f14f670ac348ec", "message": "[KOGITO-3975] Fix missing conf use case", "committedDate": "2020-12-09T10:56:20Z", "type": "commit"}, {"oid": "0015e0e655122b0a85f2fe5d48fbd56965da8c10", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0015e0e655122b0a85f2fe5d48fbd56965da8c10", "message": "Merge remote-tracking branch 'upstream/master' into application-config-refactoring", "committedDate": "2020-12-09T17:00:41Z", "type": "commit"}, {"oid": "2c60dcc1182311a4f0fa990d8e6b5fc98a5b57b5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2c60dcc1182311a4f0fa990d8e6b5fc98a5b57b5", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject", "committedDate": "2020-12-09T18:32:54Z", "type": "commit"}, {"oid": "6756417b267b2b9e3ce52383983dc20b241e203e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/6756417b267b2b9e3ce52383983dc20b241e203e", "message": "[KOGITO-3974] Fix test", "committedDate": "2020-12-09T18:49:47Z", "type": "commit"}, {"oid": "0f1d3c685351b97095407148faa4aa242fe80e59", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0f1d3c685351b97095407148faa4aa242fe80e59", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tkogito-codegen/src/test/java/org/kie/kogito/codegen/ApplicationGeneratorTest.java", "committedDate": "2020-12-09T18:50:54Z", "type": "commit"}, {"oid": "34c72010322a151e39c635f70bc36b19a6ef87cc", "url": "https://github.com/kiegroup/kogito-runtimes/commit/34c72010322a151e39c635f70bc36b19a6ef87cc", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject", "committedDate": "2020-12-10T10:48:57Z", "type": "commit"}, {"oid": "2e24f8c9e4112069783e4b58c4be11cb6cff4cdb", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2e24f8c9e4112069783e4b58c4be11cb6cff4cdb", "message": "[KOGITO-3974] Reviewed DecisionModels/PredictionModels templates to move all the code to abstract", "committedDate": "2020-12-10T12:17:39Z", "type": "commit"}, {"oid": "2e8130a635412afe82873d36750533f2c41133f4", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2e8130a635412afe82873d36750533f2c41133f4", "message": "[KOGITO-3974] Fix test", "committedDate": "2020-12-10T13:13:06Z", "type": "commit"}, {"oid": "677168287084dd48cb1e9f3444035143c73fd30e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/677168287084dd48cb1e9f3444035143c73fd30e", "message": "Merge remote-tracking branch 'upstream/master' into application-config-refactoring", "committedDate": "2020-12-10T13:27:04Z", "type": "commit"}, {"oid": "e076e1cc12c9d3b48065a08e83a7973702b6dc27", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e076e1cc12c9d3b48065a08e83a7973702b6dc27", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tdrools/kogito-dmn/src/main/java/org/kie/kogito/dmn/AbstractDecisionModels.java", "committedDate": "2020-12-10T13:27:56Z", "type": "commit"}, {"oid": "cc3199d588bf1b59e0fad3d2a678895698798576", "url": "https://github.com/kiegroup/kogito-runtimes/commit/cc3199d588bf1b59e0fad3d2a678895698798576", "message": "[KOGITO-3975] update", "committedDate": "2020-12-10T13:28:48Z", "type": "commit"}, {"oid": "21e6d6f868f9f869746263e9f8c0c9f3fa104b37", "url": "https://github.com/kiegroup/kogito-runtimes/commit/21e6d6f868f9f869746263e9f8c0c9f3fa104b37", "message": "[KOGITO-3975] Minor", "committedDate": "2020-12-10T13:46:10Z", "type": "commit"}, {"oid": "533c4baaa2f5b5c47a767023ab02c60646de81f9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/533c4baaa2f5b5c47a767023ab02c60646de81f9", "message": "[KOGITO-3972] Fix DMN hot reload", "committedDate": "2020-12-10T17:43:31Z", "type": "commit"}, {"oid": "574cf923f0cce1da08ea0675c4a8ab3c9c0d8cea", "url": "https://github.com/kiegroup/kogito-runtimes/commit/574cf923f0cce1da08ea0675c4a8ab3c9c0d8cea", "message": "Fix DMN hot reload", "committedDate": "2020-12-10T17:44:14Z", "type": "commit"}, {"oid": "2a46411d39a7ea54008dd3956910383ead6ad619", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2a46411d39a7ea54008dd3956910383ead6ad619", "message": "Moved packageName, annotator and addonsConfig to AbstractGenerator + Renamed ApplicationGenerator.withGenerator as ApplicationGenerator.registerAndInitGenerator", "committedDate": "2020-12-11T08:46:49Z", "type": "commit"}, {"oid": "ece772c26ad38bfe561a46cea8b3ec0fdbe9e599", "url": "https://github.com/kiegroup/kogito-runtimes/commit/ece772c26ad38bfe561a46cea8b3ec0fdbe9e599", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject", "committedDate": "2020-12-11T08:47:14Z", "type": "commit"}, {"oid": "3769ea2644548e7e397cb39ee229c316bd759a2c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/3769ea2644548e7e397cb39ee229c316bd759a2c", "message": "Added comment", "committedDate": "2020-12-11T08:49:18Z", "type": "commit"}, {"oid": "b5212fe6aa74496f83876e6b009d6ffe5825cc4c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/b5212fe6aa74496f83876e6b009d6ffe5825cc4c", "message": "Fix tests", "committedDate": "2020-12-11T10:28:05Z", "type": "commit"}, {"oid": "def5ad8c6c4c5423d6bdcc1e4a0b301e23892c4b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/def5ad8c6c4c5423d6bdcc1e4a0b301e23892c4b", "message": "Merge remote-tracking branch 'upstream/master' into application-config-refactoring", "committedDate": "2020-12-11T10:44:27Z", "type": "commit"}, {"oid": "1615bf999a950dc28fda15459f15154bf93b2313", "url": "https://github.com/kiegroup/kogito-runtimes/commit/1615bf999a950dc28fda15459f15154bf93b2313", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring", "committedDate": "2020-12-11T10:45:18Z", "type": "commit"}, {"oid": "0b62c04b10bf2dfedd95306c714a4eb2350eb080", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b62c04b10bf2dfedd95306c714a4eb2350eb080", "message": "Fix after merge", "committedDate": "2020-12-11T11:08:08Z", "type": "commit"}, {"oid": "ab6757ed87ee6dfb7907f3f22e2848dc5b3f7fb1", "url": "https://github.com/kiegroup/kogito-runtimes/commit/ab6757ed87ee6dfb7907f3f22e2848dc5b3f7fb1", "message": "Revert ApplicationGenerator.registerAndInitGenerator to ApplicationGenerator.withGenerator", "committedDate": "2020-12-11T11:13:08Z", "type": "commit"}, {"oid": "efd7579ee1a6c32b84a6ec1a3db9fb28af7e0177", "url": "https://github.com/kiegroup/kogito-runtimes/commit/efd7579ee1a6c32b84a6ec1a3db9fb28af7e0177", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject\n\n# Conflicts:\n#\tkogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionCodegen.java\n#\tkogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "committedDate": "2020-12-11T13:34:02Z", "type": "commit"}, {"oid": "5b458daececbdd894c13e9a4037873c7268eadaf", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5b458daececbdd894c13e9a4037873c7268eadaf", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring\n\n# Conflicts:\n#\tkogito-codegen/src/test/java/org/kie/kogito/codegen/tests/BusinessRuleUnitTest.java", "committedDate": "2020-12-11T14:11:01Z", "type": "commit"}, {"oid": "9c94782d5455c081bfdfd09b93ea1682572d7655", "url": "https://github.com/kiegroup/kogito-runtimes/commit/9c94782d5455c081bfdfd09b93ea1682572d7655", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject\n\n# Conflicts:\n#\tkogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/GenerateModelMojo.java\n#\tkogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java", "committedDate": "2020-12-11T17:41:55Z", "type": "commit"}, {"oid": "e9ae5bd440ea96f8b43bcdbd7bf004f77ccf00ec", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e9ae5bd440ea96f8b43bcdbd7bf004f77ccf00ec", "message": "Postponing moduleGenerator initialization when used (compilationUnit() module) + ApplicationSection.classDeclaration renamed compilationUnit to return the whole template", "committedDate": "2020-12-11T17:50:43Z", "type": "commit"}, {"oid": "45b250167be698163d1bc9c608d24da4df13aac2", "url": "https://github.com/kiegroup/kogito-runtimes/commit/45b250167be698163d1bc9c608d24da4df13aac2", "message": "Minor fixes", "committedDate": "2020-12-11T19:02:02Z", "type": "commit"}, {"oid": "0a1193edd4d88de5e18bdfdd1ea7ee76aede9fdf", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0a1193edd4d88de5e18bdfdd1ea7ee76aede9fdf", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring", "committedDate": "2020-12-11T19:02:34Z", "type": "commit"}, {"oid": "de56f00f83a8fb69f677b4a05c26a75b73554106", "url": "https://github.com/kiegroup/kogito-runtimes/commit/de56f00f83a8fb69f677b4a05c26a75b73554106", "message": "Introduced static AtomicReference in AbstractPredictionModels to make DMN+PMML integration works even if DecisionModels is loaded first + Fix native-image check", "committedDate": "2020-12-14T08:26:51Z", "type": "commit"}, {"oid": "6333968f476681bde3421f71b143573b68e42f37", "url": "https://github.com/kiegroup/kogito-runtimes/commit/6333968f476681bde3421f71b143573b68e42f37", "message": "Merge remote-tracking branch 'upstream/master' into decisionmodels-predictionmodels-inject", "committedDate": "2020-12-14T08:36:47Z", "type": "commit"}, {"oid": "a79cec343d0321a2b2b98c8fdccf31c1e454c867", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a79cec343d0321a2b2b98c8fdccf31c1e454c867", "message": "Merge branch 'decisionmodels-predictionmodels-inject' into application-config-refactoring", "committedDate": "2020-12-14T08:37:10Z", "type": "commit"}, {"oid": "2823d1abd49e67951abc23fccd504b7b4fde26a9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2823d1abd49e67951abc23fccd504b7b4fde26a9", "message": "Merge remote-tracking branch 'upstream/master' into application-config-refactoring\n\n# Conflicts:\n#\tapi/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java\n#\tdrools/kogito-dmn/src/main/java/org/kie/kogito/dmn/AbstractDecisionModels.java\n#\tdrools/kogito-pmml/src/main/java/org/kie/kogito/pmml/AbstractPredictionModels.java\n#\tintegration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java\n#\tintegration-tests/integration-tests-quarkus-predictions/src/main/java/org/kie/kogito/integrationtests/InjectPredictionModels.java\n#\tintegration-tests/integration-tests-quarkus-processes/src/main/java/org/kie/kogito/integrationtests/InjectProcesses.java\n#\tintegration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/main/java/org/kie/kogito/integrationtests/SpringInjectDecisionModels.java\n#\tintegration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/main/java/org/kie/kogito/integrationtests/SpringInjectPredictionModels.java\n#\tintegration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/main/java/org/kie/kogito/integrationtests/SpringInjectProcesses.java\n#\tintegration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/main/java/org/kie/kogito/integrationtests/SpringInjectRuleUnits.java\n#\tkogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationContainerGenerator.java\n#\tkogito-codegen/src/main/resources/class-templates/CdiDecisionContainerTemplate.java\n#\tkogito-codegen/src/main/resources/class-templates/DecisionContainerTemplate.java\n#\tkogito-codegen/src/main/resources/class-templates/spring/SpringDecisionContainerTemplate.java\n#\tkogito-codegen/src/test/java/org/kie/kogito/codegen/ApplicationGeneratorTest.java", "committedDate": "2020-12-14T14:58:48Z", "type": "commit"}, {"oid": "ce55a30505a065f433aa913d8748bb057a9bc56f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/ce55a30505a065f433aa913d8748bb057a9bc56f", "message": "After merge fix", "committedDate": "2020-12-14T15:09:48Z", "type": "commit"}, {"oid": "4d09bce0b91a153415d118275b016761895df717", "url": "https://github.com/kiegroup/kogito-runtimes/commit/4d09bce0b91a153415d118275b016761895df717", "message": "Minor", "committedDate": "2020-12-14T15:32:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5NDYwNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r543194605", "bodyText": "this may be useless", "author": "evacchi", "createdAt": "2020-12-15T09:46:19Z", "path": "kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/DMNCompilationProvider.java", "diffHunk": "@@ -25,6 +25,7 @@\n import org.kie.kogito.codegen.ApplicationGenerator;\n import org.kie.kogito.codegen.Generator;\n import org.kie.kogito.codegen.decision.DecisionCodegen;\n+import org.kie.kogito.codegen.di.CDIDependencyInjectionAnnotator;", "originalCommit": "4d09bce0b91a153415d118275b016761895df717", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2NTQ1OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r543265458", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-12-15T11:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5NDYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e85a15742c563918e2ee617d0ed5afe0218116b5", "chunk": "diff --git a/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/DMNCompilationProvider.java b/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/DMNCompilationProvider.java\nindex e1307d721a..c9b02638f9 100644\n--- a/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/DMNCompilationProvider.java\n+++ b/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/DMNCompilationProvider.java\n\n@@ -25,7 +25,6 @@ import java.util.Set;\n import org.kie.kogito.codegen.ApplicationGenerator;\n import org.kie.kogito.codegen.Generator;\n import org.kie.kogito.codegen.decision.DecisionCodegen;\n-import org.kie.kogito.codegen.di.CDIDependencyInjectionAnnotator;\n import org.kie.kogito.codegen.io.CollectedResource;\n \n public class DMNCompilationProvider extends KogitoCompilationProvider {\n"}}, {"oid": "e85a15742c563918e2ee617d0ed5afe0218116b5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e85a15742c563918e2ee617d0ed5afe0218116b5", "message": "Update DMNCompilationProvider.java", "committedDate": "2020-12-15T11:30:08Z", "type": "commit"}, {"oid": "9c6776b516c04209c7197017a01cf9ec65f8238e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/9c6776b516c04209c7197017a01cf9ec65f8238e", "message": "Update ApplicationContainerGenerator.java", "committedDate": "2020-12-15T12:53:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NTIwMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544355203", "bodyText": "Maybe param description could be added?", "author": "MarianMacik", "createdAt": "2020-12-16T14:45:35Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/Application.java", "diffHunk": "@@ -37,36 +33,13 @@\n     Config config();\n \n     /**\n-     * Returns processes found in the application otherwise null\n-     * @return processes information or null of non found\n+     * Returns the desired KogitoEngine impl or null if not found\n+     * @param clazz\n+     * @param <T>\n+     * @return", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMjExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544602110", "bodyText": "Added a description", "author": "danielezonca", "createdAt": "2020-12-16T20:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/Application.java b/api/kogito-api/src/main/java/org/kie/kogito/Application.java\nindex 60b6bdff5f..2d45a2033f 100644\n--- a/api/kogito-api/src/main/java/org/kie/kogito/Application.java\n+++ b/api/kogito-api/src/main/java/org/kie/kogito/Application.java\n\n@@ -34,8 +34,7 @@ public interface Application {\n \n     /**\n      * Returns the desired KogitoEngine impl or null if not found\n-     * @param clazz\n-     * @param <T>\n+     * @param clazz of the desired KogitoEngine\n      * @return\n      */\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NTM4OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544355388", "bodyText": "Same here.", "author": "MarianMacik", "createdAt": "2020-12-16T14:45:49Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/Config.java", "diffHunk": "@@ -15,43 +15,18 @@\n \n package org.kie.kogito;\n \n-import org.kie.kogito.decision.DecisionConfig;\n-import org.kie.kogito.prediction.PredictionConfig;\n-import org.kie.kogito.process.ProcessConfig;\n-import org.kie.kogito.rules.RuleConfig;\n-\n /**\n  * Provides general configuration of Kogito application\n  */\n public interface Config {\n \n     /**\n-     * Provides process specific configuration\n-     *\n-     * @return process specific configuration or null of no process is found in the application\n-     */\n-    ProcessConfig process();\n-\n-    /**\n-     * Provides rule specific configuration\n-     *\n-     * @return rule specific configuration or null of no rule is found in the application\n-     */\n-    RuleConfig rule();\n-\n-    /**\n-     * Provides decision specific configuration\n-     *\n-     * @return decision specific configuration or null of no decision is found in the application\n-     */\n-    DecisionConfig decision();\n-\n-    /**\n-     * Provides prediction specific configuration\n-     *\n-     * @return prediction specific configuration or null of no prediction is found in the application\n+     * Provides instance of requested KogitoConfig or null if not available\n+     * @param clazz\n+     * @param <T>\n+     * @return", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMjAzNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544602037", "bodyText": "Added a description", "author": "danielezonca", "createdAt": "2020-12-16T20:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NTM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/Config.java b/api/kogito-api/src/main/java/org/kie/kogito/Config.java\nindex 60bf5cca91..70cb7cf50d 100644\n--- a/api/kogito-api/src/main/java/org/kie/kogito/Config.java\n+++ b/api/kogito-api/src/main/java/org/kie/kogito/Config.java\n\n@@ -22,8 +22,7 @@ public interface Config {\n \n     /**\n      * Provides instance of requested KogitoConfig or null if not available\n-     * @param clazz\n-     * @param <T>\n+     * @param clazz clazz of the desired KogitoConfig\n      * @return\n      */\n     <T extends KogitoConfig> T get(Class<T> clazz);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NzgwNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544357806", "bodyText": "Maybe unnecessary org.kie.kogito.process.ProcessConfig.class and could be just ProcessConfig.class.", "author": "MarianMacik", "createdAt": "2020-12-16T14:48:40Z", "path": "api/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java", "diffHunk": "@@ -15,67 +15,59 @@\n \n package org.kie.kogito;\n \n-import org.kie.kogito.decision.DecisionModels;\n-import org.kie.kogito.prediction.PredictionModels;\n-import org.kie.kogito.process.Processes;\n-import org.kie.kogito.rules.RuleUnits;\n+import org.kie.kogito.process.ProcessConfig;\n import org.kie.kogito.uow.UnitOfWorkManager;\n \n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n public class StaticApplication implements Application {\n \n     protected Config config;\n-    protected Processes processes;\n-    protected RuleUnits ruleUnits;\n-    protected DecisionModels decisionModels;\n-    protected PredictionModels predictionModels;\n+    private final Map<Class<? extends KogitoEngine>, KogitoEngine> engineMap = new HashMap<>();\n \n     public StaticApplication() {\n \n     }\n \n     public StaticApplication(\n             Config config,\n-            Processes processes,\n-            RuleUnits ruleUnits,\n-            DecisionModels decisionModels,\n-            PredictionModels predictionModels) {\n+            KogitoEngine ... engines) {\n         this.config = config;\n-        this.processes = processes;\n-        this.ruleUnits = ruleUnits;\n-        this.decisionModels = decisionModels;\n-        this.predictionModels = predictionModels;\n-\n-        if (config() != null && config().process() != null) {\n-            unitOfWorkManager().eventManager().setAddons(config().addons());\n-        }\n+        loadEngines(engines);\n     }\n \n     public Config config() {\n         return config;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public Processes processes() {\n-        return processes;\n+    public <T extends KogitoEngine> T get(Class<T> clazz) {\n+        return (T) engineMap.entrySet().stream()\n+                .filter(entry -> clazz.isAssignableFrom(entry.getKey()))\n+                .map(Map.Entry::getValue)\n+                .findFirst()\n+                .orElse(null);\n     }\n \n-    @Override\n-    public RuleUnits ruleUnits() {\n-        return ruleUnits;\n-    }\n+    protected void loadEngines(KogitoEngine ... engines) {\n+        Arrays.stream(engines).forEach(this::loadEngine);\n \n-    @Override\n-    public DecisionModels decisionModels() {\n-        return decisionModels;\n+        if (config() != null && config().get(org.kie.kogito.process.ProcessConfig.class) != null) {", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMTk3NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544601975", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-12-16T20:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1NzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "chunk": "diff --git a/api/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java b/api/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java\nindex 19cd4a9f22..39e20f9d6d 100644\n--- a/api/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java\n+++ b/api/kogito-api/src/main/java/org/kie/kogito/StaticApplication.java\n\n@@ -55,7 +55,7 @@ public class StaticApplication implements Application {\n     protected void loadEngines(KogitoEngine ... engines) {\n         Arrays.stream(engines).forEach(this::loadEngine);\n \n-        if (config() != null && config().get(org.kie.kogito.process.ProcessConfig.class) != null) {\n+        if (config() != null && config().get(ProcessConfig.class) != null) {\n             unitOfWorkManager().eventManager().setAddons(config().addons());\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NDUyOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544364529", "bodyText": "Wouldn't equals be even better?", "author": "MarianMacik", "createdAt": "2020-12-16T14:55:53Z", "path": "drools/kogito-ruleunits/src/main/java/org/kie/kogito/rules/units/InterpretedRuleUnit.java", "diffHunk": "@@ -73,15 +74,20 @@ public Config config() {\n             return null;\n         }\n \n-        public UnitOfWorkManager unitOfWorkManager() {\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public <T extends KogitoEngine> T get(Class<T> clazz) {\n+            if(clazz.isAssignableFrom(org.kie.kogito.rules.RuleUnits.class)) {", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMTkyMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544601923", "bodyText": "We codegen the real instance so equals is not enough because user code cannot refer it while in this way it is possible to write get(Processes.class) before codegen", "author": "danielezonca", "createdAt": "2020-12-16T20:29:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NDUyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NTQ0Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544365443", "bodyText": "Why no imports here? I thought we do it just in templates.", "author": "MarianMacik", "createdAt": "2020-12-16T14:56:57Z", "path": "integration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java", "diffHunk": "@@ -16,19 +16,16 @@\n \n package org.kie.kogito.integrationtests;\n \n-import io.quarkus.runtime.Startup;\n-import org.kie.kogito.Application;\n-import org.kie.kogito.decision.DecisionModels;\n-\n-import javax.inject.Inject;\n-\n-@Startup\n+@io.quarkus.runtime.Startup", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMTc0Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544601742", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-12-16T20:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NTQ0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "chunk": "diff --git a/integration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java b/integration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java\nindex 9fae457341..e841f3c11b 100644\n--- a/integration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java\n+++ b/integration-tests/integration-tests-quarkus-decisions/src/main/java/org/kie/kogito/integrationtests/InjectDecisionModels.java\n\n@@ -16,15 +16,22 @@\n \n package org.kie.kogito.integrationtests;\n \n-@io.quarkus.runtime.Startup\n+import io.quarkus.runtime.Startup;\n+import org.kie.kogito.Application;\n+import org.kie.kogito.decision.DecisionConfig;\n+import org.kie.kogito.decision.DecisionModels;\n+\n+import javax.inject.Inject;\n+\n+@Startup\n public class InjectDecisionModels {\n \n-    @javax.inject.Inject\n-    public InjectDecisionModels(org.kie.kogito.decision.DecisionModels decisionModels, org.kie.kogito.Application application) {\n-        if(decisionModels != application.get(org.kie.kogito.decision.DecisionModels.class)) {\n+    @Inject\n+    public InjectDecisionModels(DecisionModels decisionModels, Application application) {\n+        if(decisionModels != application.get(DecisionModels.class)) {\n             throw new IllegalStateException(\"DecisionModels should be injectable and same as instance application.get(DecisionModels.class)\");\n         }\n-        if(application.config().get(org.kie.kogito.decision.DecisionConfig.class) == null) {\n+        if(application.config().get(DecisionConfig.class) == null) {\n             throw new IllegalStateException(\"DecisionConfig not available\");\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM3MjYwNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544372606", "bodyText": "and same instance as... :)", "author": "MarianMacik", "createdAt": "2020-12-16T15:05:54Z", "path": "integration-tests/integration-tests-quarkus-rules/src/main/java/org/kie/kogito/integrationtests/InjectRuleUnits.java", "diffHunk": "@@ -16,19 +16,16 @@\n \n package org.kie.kogito.integrationtests;\n \n-import io.quarkus.runtime.Startup;\n-import org.kie.kogito.Application;\n-import org.kie.kogito.rules.RuleUnits;\n-\n-import javax.inject.Inject;\n-\n-@Startup\n+@io.quarkus.runtime.Startup\n public class InjectRuleUnits {\n \n-    @Inject\n-    public InjectRuleUnits(RuleUnits ruleUnits, Application application) {\n-        if (ruleUnits != application.ruleUnits()) {\n-            throw new IllegalStateException(\"RuleUnits should be injectable and same instance as application.ruleUnits()\");\n+    @javax.inject.Inject\n+    public InjectRuleUnits(org.kie.kogito.rules.RuleUnits ruleUnits, org.kie.kogito.Application application) {\n+        if (ruleUnits != application.get(org.kie.kogito.rules.RuleUnits.class)) {\n+            throw new IllegalStateException(\"RuleUnits should be injectable and same instance application.get(RuleUnits.class)\");", "originalCommit": "9c6776b516c04209c7197017a01cf9ec65f8238e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMTY1Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/929#discussion_r544601656", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-12-16T20:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM3MjYwNg=="}], "type": "inlineReview", "revised_code": {"commit": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "chunk": "diff --git a/integration-tests/integration-tests-quarkus-rules/src/main/java/org/kie/kogito/integrationtests/InjectRuleUnits.java b/integration-tests/integration-tests-quarkus-rules/src/main/java/org/kie/kogito/integrationtests/InjectRuleUnits.java\nindex 6194514212..9395f1764e 100644\n--- a/integration-tests/integration-tests-quarkus-rules/src/main/java/org/kie/kogito/integrationtests/InjectRuleUnits.java\n+++ b/integration-tests/integration-tests-quarkus-rules/src/main/java/org/kie/kogito/integrationtests/InjectRuleUnits.java\n\n@@ -16,15 +16,21 @@\n \n package org.kie.kogito.integrationtests;\n \n-@io.quarkus.runtime.Startup\n+import com.google.inject.Inject;\n+import io.quarkus.runtime.Startup;\n+import org.kie.kogito.Application;\n+import org.kie.kogito.rules.RuleConfig;\n+import org.kie.kogito.rules.RuleUnits;\n+\n+@Startup\n public class InjectRuleUnits {\n \n-    @javax.inject.Inject\n-    public InjectRuleUnits(org.kie.kogito.rules.RuleUnits ruleUnits, org.kie.kogito.Application application) {\n-        if (ruleUnits != application.get(org.kie.kogito.rules.RuleUnits.class)) {\n-            throw new IllegalStateException(\"RuleUnits should be injectable and same instance application.get(RuleUnits.class)\");\n+    @Inject(optional = true)\n+    public InjectRuleUnits(RuleUnits ruleUnits, Application application) {\n+        if (ruleUnits != application.get(RuleUnits.class)) {\n+            throw new IllegalStateException(\"RuleUnits should be injectable and same as instance application.get(RuleUnits.class)\");\n         }\n-        if(application.config().get(org.kie.kogito.rules.RuleConfig.class) == null) {\n+        if(application.config().get(RuleConfig.class) == null) {\n             throw new IllegalStateException(\"RuleConfig not available\");\n         }\n     }\n"}}, {"oid": "4f48ccfdbfb2802ef925404c0ef96af0018f4852", "url": "https://github.com/kiegroup/kogito-runtimes/commit/4f48ccfdbfb2802ef925404c0ef96af0018f4852", "message": "Minor changes", "committedDate": "2020-12-16T20:19:43Z", "type": "commit"}, {"oid": "84702ea4c25d6a83723575da2dc57d0013403d55", "url": "https://github.com/kiegroup/kogito-runtimes/commit/84702ea4c25d6a83723575da2dc57d0013403d55", "message": "Merge remote-tracking branch 'origin/application-config-refactoring' into application-config-refactoring", "committedDate": "2020-12-16T20:19:54Z", "type": "commit"}]}