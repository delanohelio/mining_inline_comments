{"pr_number": 855, "pr_title": "FAI-214: add the execution ID as a header in the response", "pr_createdAt": "2020-10-28T12:00:37Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/855", "timeline": [{"oid": "8efadb1613e9a04a2ae7654f578af237bd9cb34f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8efadb1613e9a04a2ae7654f578af237bd9cb34f", "message": "FAI-214: add the execution ID as a header in the response", "committedDate": "2020-10-28T11:48:04Z", "type": "commit"}, {"oid": "3f21d4b79c387783347e200812eae33602524c95", "url": "https://github.com/kiegroup/kogito-runtimes/commit/3f21d4b79c387783347e200812eae33602524c95", "message": "FAI-214: merge 'master' into 'FAI-214'", "committedDate": "2020-10-29T09:23:54Z", "type": "commit"}, {"oid": "5c94a3747b28b68e9de1c9b92f7f4c0d952a4b34", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5c94a3747b28b68e9de1c9b92f7f4c0d952a4b34", "message": "FAI-214: cleaner code", "committedDate": "2020-10-29T10:52:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDAyOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/855#discussion_r514194028", "bodyText": "I think you should swap these two lines and avoid to add Metadata to rest.DMNResult. This object is sent back to user and it should not contain other/external data\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decision.evaluateAll(DMNJSONUtils.ctx(decision, $inputData$)));\n          \n          \n            \n                    enrichResponseHeaders(result);\n          \n          \n            \n                    enrichResponseHeaders(result);\n          \n          \n            \n                    org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decision.evaluateAll(DMNJSONUtils.ctx(decision, $inputData$)));", "author": "danielezonca", "createdAt": "2020-10-29T11:40:56Z", "path": "kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java", "diffHunk": "@@ -39,11 +33,12 @@\n     @io.swagger.v3.oas.annotations.responses.ApiResponse(content = @io.swagger.v3.oas.annotations.media.Content(mediaType = \"application/json\",schema = @io.swagger.v3.oas.annotations.media.Schema(ref = \"/dmnDefinitions.json#/definitions/OutputSet1\")))\n     public $outputType$ dmn($inputType$ variables) {\n         org.kie.kogito.decision.DecisionModel decision = application.decisionModels().getDecisionModel(\"$modelNamespace$\", \"$modelName$\");\n-        OutputSet outputSet = (OutputSet)StronglyTypedUtils.convertToOutputSet(variables, OutputSet.class);\n+        OutputSet outputSet = (OutputSet) StronglyTypedUtils.convertToOutputSet(variables, OutputSet.class);\n         org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decision.evaluateAll(DMNJSONUtils.ctx(decision, $inputData$)));\n+        enrichResponseHeaders(result);", "originalCommit": "5c94a3747b28b68e9de1c9b92f7f4c0d952a4b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIwNTkxNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/855#discussion_r514205915", "bodyText": "I like this as it would imply no modification to DMNResult implementations required \ud83d\udc4d\nOn other hand this just go to highlight there is no clear strategy for \"metadata\" handling on Kogito design", "author": "tarilabs", "createdAt": "2020-10-29T12:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIyNjk5Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/855#discussion_r514226996", "bodyText": "I removed that now...no need for it anymore with the latest changes \ud83d\udc4d", "author": "kostola", "createdAt": "2020-10-29T12:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDAyOA=="}], "type": "inlineReview", "revised_code": {"commit": "7f40be8bb761093e97feee2b49bd62344afae4a5", "chunk": "diff --git a/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java b/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\nindex a0113e7663..4a7af603db 100644\n--- a/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\n+++ b/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\n\n@@ -34,8 +34,9 @@ public class DMNRestResourceTemplate {\n     public $outputType$ dmn($inputType$ variables) {\n         org.kie.kogito.decision.DecisionModel decision = application.decisionModels().getDecisionModel(\"$modelNamespace$\", \"$modelName$\");\n         OutputSet outputSet = (OutputSet) StronglyTypedUtils.convertToOutputSet(variables, OutputSet.class);\n-        org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decision.evaluateAll(DMNJSONUtils.ctx(decision, $inputData$)));\n-        enrichResponseHeaders(result);\n+        org.kie.dmn.api.core.DMNResult decisionResult = decision.evaluateAll(DMNJSONUtils.ctx(decision, $inputData$));\n+        enrichResponseHeaders(decisionResult);\n+        org.kie.kogito.dmn.rest.DMNResult result = new org.kie.kogito.dmn.rest.DMNResult(\"$modelNamespace$\", \"$modelName$\", decisionResult);\n         return $extractContextMethod$(result);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDUzMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/855#discussion_r514194530", "bodyText": "Why return a value that is not used?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private DMNResult enrichResponseHeaders(DMNResult result) {\n          \n          \n            \n                private void enrichResponseHeaders(DMNResult result) {", "author": "danielezonca", "createdAt": "2020-10-29T11:41:56Z", "path": "kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java", "diffHunk": "@@ -102,11 +94,18 @@ private Object extractSingletonDSIfSucceded(DMNResult result) {\n             throw new DMNEvaluationErrorException(result);\n         }\n     }\n-    \n-    private void enrichResponseHeaders(DMNResult result) {\n-        if (!result.getMessages().isEmpty()) {\n+\n+    private DMNResult enrichResponseHeaders(DMNResult result) {", "originalCommit": "5c94a3747b28b68e9de1c9b92f7f4c0d952a4b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIyNzIxNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/855#discussion_r514227216", "bodyText": "It was a leftover from previous changes. Fixed now \ud83d\udc4d", "author": "kostola", "createdAt": "2020-10-29T12:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "7f40be8bb761093e97feee2b49bd62344afae4a5", "chunk": "diff --git a/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java b/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\nindex a0113e7663..4a7af603db 100644\n--- a/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\n+++ b/kogito-codegen/src/main/resources/class-templates/DecisionRestResourceTemplate.java\n\n@@ -95,7 +96,7 @@ public class DMNRestResourceTemplate {\n         }\n     }\n \n-    private DMNResult enrichResponseHeaders(DMNResult result) {\n+    private void enrichResponseHeaders(org.kie.dmn.api.core.DMNResult result) {\n         if (!result.hasErrors() && !result.getMessages().isEmpty()) {\n             String infoWarns = result.getMessages().stream().map(m -> m.getLevel() + \" \" + m.getMessage()).collect(java.util.stream.Collectors.joining(\", \"));\n             httpResponse.getOutputHeaders().add(KOGITO_DECISION_INFOWARN_HEADER, infoWarns);\n"}}, {"oid": "7f40be8bb761093e97feee2b49bd62344afae4a5", "url": "https://github.com/kiegroup/kogito-runtimes/commit/7f40be8bb761093e97feee2b49bd62344afae4a5", "message": "FAI-214: cleaner code pt.2", "committedDate": "2020-10-29T12:29:15Z", "type": "commit"}, {"oid": "0d7861812f146f63c0ecde63eb75d175b83f38a6", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d7861812f146f63c0ecde63eb75d175b83f38a6", "message": "FAI-214: merge branch 'master' into 'FAI-214'", "committedDate": "2020-11-04T15:45:04Z", "type": "commit"}]}