{"pr_number": 729, "pr_title": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus(native image )", "pr_createdAt": "2020-08-26T17:17:21Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/729", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkxOTA3NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r477919074", "bodyText": "@swati-kale I think the solution is good but we shouldnt depend on the mongo client parameter to define if the native items should be produced. I think a better approach would be to check the persistence type. Perhaps extract the logic from the PersistenceGenerator and reuse the type here and as parameter to the generator.", "author": "cristianonicolai", "createdAt": "2020-08-27T02:04:15Z", "path": "kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java", "diffHunk": "@@ -287,6 +288,18 @@ private void generatePersistenceInfo(AppPaths appPaths, IndexView inputIndex) th\n         if (usePersistence) {\n             resource.produce(new NativeImageResourceBuildItem(\"kogito-types.proto\"));\n         }\n+        \n+        if(!parameters.isEmpty() && parameters.contains(\"com.mongodb.client.MongoClient\")) {", "originalCommit": "257c659bd750b2a6627377faf69c02ab5bb1087d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA5NzA1MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r478097050", "bodyText": "ok, done,", "author": "swati-kale", "createdAt": "2020-08-27T04:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkxOTA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "38d642b18d55862ff9d9c773a801bf23a7afe940", "chunk": "diff --git a/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java b/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java\nindex 1347f41ff9..a5661d1cc2 100644\n--- a/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java\n+++ b/kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java\n\n@@ -289,7 +290,8 @@ public class KogitoAssetsProcessor {\n             resource.produce(new NativeImageResourceBuildItem(\"kogito-types.proto\"));\n         }\n         \n-        if(!parameters.isEmpty() && parameters.contains(\"com.mongodb.client.MongoClient\")) {\n+        String persistenceType = context.getApplicationProperty(\"kogito.persistence.type\").orElse(\"\");\n+        if(persistenceType.equals(MONGODB_PERSISTENCE_TYPE)) {\n             addInnerClasses(org.jbpm.marshalling.impl.JBPMMessages.class, reflectiveClass);\n             reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, \"java.lang.String\"));\n         }\n"}}, {"oid": "38d642b18d55862ff9d9c773a801bf23a7afe940", "url": "https://github.com/kiegroup/kogito-runtimes/commit/38d642b18d55862ff9d9c773a801bf23a7afe940", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T04:24:36Z", "type": "forcePushed"}, {"oid": "63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "url": "https://github.com/kiegroup/kogito-runtimes/commit/63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T06:16:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE5MTA2Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r478191067", "bodyText": "just to make it consistent with the other tyes\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n          \n          \n            \n                private static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";\n          \n          \n            \n                public static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n          \n          \n            \n                public static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";", "author": "cristianonicolai", "createdAt": "2020-08-27T06:44:55Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java", "diffHunk": "@@ -66,8 +66,8 @@\n \n     private static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n     private static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";", "originalCommit": "63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "264660e55c61919e7010adbe2e6b5bcd7eb4bc14", "chunk": "diff --git a/kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java b/kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java\nindex 690d6f0241..f0f56c16bd 100644\n--- a/kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java\n+++ b/kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java\n\n@@ -64,8 +64,8 @@ import org.kie.kogito.codegen.process.persistence.proto.ProtoGenerator;\n \n public class PersistenceGenerator extends AbstractGenerator {\n \n-    private static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n-    private static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";\n+    public static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n+    public static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";\n     public static final String DEFAULT_PERSISTENCE_TYPE = INFINISPAN_PERSISTENCE_TYPE;\n     public static final String MONGODB_PERSISTENCE_TYPE = \"mongodb\";\n     \n"}}, {"oid": "264660e55c61919e7010adbe2e6b5bcd7eb4bc14", "url": "https://github.com/kiegroup/kogito-runtimes/commit/264660e55c61919e7010adbe2e6b5bcd7eb4bc14", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T12:28:43Z", "type": "forcePushed"}, {"oid": "0b245b511a6a69c65d64c6db6889244a9994b16c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b245b511a6a69c65d64c6db6889244a9994b16c", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:05:07Z", "type": "commit"}, {"oid": "0b245b511a6a69c65d64c6db6889244a9994b16c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b245b511a6a69c65d64c6db6889244a9994b16c", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:05:07Z", "type": "forcePushed"}]}