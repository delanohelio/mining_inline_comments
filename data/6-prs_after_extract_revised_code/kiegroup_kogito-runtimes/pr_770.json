{"pr_number": 770, "pr_title": "[KOGITO-3078] DMN strongly typed: output definition", "pr_createdAt": "2020-09-16T09:28:02Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/770", "timeline": [{"oid": "979d3d6d85fd15cd4c63ace57b996ac77851c8f9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/979d3d6d85fd15cd4c63ace57b996ac77851c8f9", "message": "[KOGITO-3078] DMN strongly typed: output definition", "committedDate": "2020-09-16T08:11:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNDc4Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/770#discussion_r489334786", "bodyText": "agreed, or you can also consider this approach:\nhttps://github.com/kiegroup/kogito-runtimes/pull/762/files#diff-59003bc182a20b006a260bae9299342aR164\nwhat do you think?\nThat way, it should not detect enumeration somewhere else in the source code (for instance a field name) since the .* should not match line breaking character IIRC ?", "author": "tarilabs", "createdAt": "2020-09-16T10:31:25Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/decision/DecisionCodegenTest.java", "diffHunk": "@@ -161,7 +163,7 @@ public void testNSEW_positive() throws Exception {\n         List<GeneratedFile> generatedFiles = codeGenerator.generate();\n         assertThat(generatedFiles).anyMatch(x -> x.relativePath().endsWith(\"InputSet.java\"));\n         GeneratedFile inputSetFile = generatedFiles.stream().filter(x -> x.relativePath().endsWith(\"InputSet.java\")).findFirst().get();\n-        assertThat(new String(inputSetFile.contents())).contains(\"@org.eclipse.microprofile.openapi.annotations.media.Schema(enumeration\");\n+        assertThat(new String(inputSetFile.contents())).contains(\"@org.eclipse.microprofile.openapi.annotations.media.Schema(\", \"enumeration\");", "originalCommit": "979d3d6d85fd15cd4c63ace57b996ac77851c8f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5NzExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/770#discussion_r489897110", "bodyText": "Thank you! I'll follow your approach.", "author": "tkobayas", "createdAt": "2020-09-17T02:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNDc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "822b7dad576b394babe5e8f99fe1cbf0d5214602", "chunk": "diff --git a/kogito-codegen/src/test/java/org/kie/kogito/codegen/decision/DecisionCodegenTest.java b/kogito-codegen/src/test/java/org/kie/kogito/codegen/decision/DecisionCodegenTest.java\nindex 893642c4d8..c493dd32fc 100644\n--- a/kogito-codegen/src/test/java/org/kie/kogito/codegen/decision/DecisionCodegenTest.java\n+++ b/kogito-codegen/src/test/java/org/kie/kogito/codegen/decision/DecisionCodegenTest.java\n\n@@ -163,7 +163,7 @@ public class DecisionCodegenTest {\n         List<GeneratedFile> generatedFiles = codeGenerator.generate();\n         assertThat(generatedFiles).anyMatch(x -> x.relativePath().endsWith(\"InputSet.java\"));\n         GeneratedFile inputSetFile = generatedFiles.stream().filter(x -> x.relativePath().endsWith(\"InputSet.java\")).findFirst().get();\n-        assertThat(new String(inputSetFile.contents())).contains(\"@org.eclipse.microprofile.openapi.annotations.media.Schema(\", \"enumeration\");\n+        assertThat(new String(inputSetFile.contents())).containsPattern(\"@org\\\\.eclipse\\\\.microprofile\\\\.openapi\\\\.annotations\\\\.media\\\\.Schema\\\\(.*enumeration\");\n     }\n \n     @Test\n"}}, {"oid": "822b7dad576b394babe5e8f99fe1cbf0d5214602", "url": "https://github.com/kiegroup/kogito-runtimes/commit/822b7dad576b394babe5e8f99fe1cbf0d5214602", "message": "[KOGITO-3078] DMN strongly typed: output definition\n- Use InputSet first\n- Fixed assertion", "committedDate": "2020-09-17T02:39:20Z", "type": "commit"}]}