{"pr_number": 2391, "pr_title": "Add Micrometer AutoConfiguration", "pr_createdAt": "2020-05-25T01:41:23Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391", "timeline": [{"oid": "b0b68d6e9f8c6e45b57af8099cc5f5a3d2568152", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b0b68d6e9f8c6e45b57af8099cc5f5a3d2568152", "message": "Add Micrometer AutoConfiguration\n\nThis auto-configuration allows to auto-detect the gcp projectId and\ncredentialsProvider.", "committedDate": "2020-05-25T01:40:36Z", "type": "commit"}, {"oid": "f64c63f5f192822b65fd33f46c4e145d74320acc", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f64c63f5f192822b65fd33f46c4e145d74320acc", "message": "Add configuration properties for metrics", "committedDate": "2020-05-25T01:41:06Z", "type": "commit"}, {"oid": "febc0e9e7397f1f18f288f0f48256d5fa86d6bdd", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/febc0e9e7397f1f18f288f0f48256d5fa86d6bdd", "message": "Add spring-cloud-gcp-starter-metrics", "committedDate": "2020-05-25T04:01:02Z", "type": "commit"}, {"oid": "0c14609a68fb2922a06adcabffcca2bdaf523741", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/0c14609a68fb2922a06adcabffcca2bdaf523741", "message": "Add docs", "committedDate": "2020-05-25T04:32:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTkyNg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432169926", "bodyText": "should this have havingValue = \"true\"?", "author": "saturnism", "createdAt": "2020-05-28T23:01:11Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)\n+@EnableConfigurationProperties({GcpMetricsProperties.class, StackdriverProperties.class})\n+@ConditionalOnProperty(value = \"spring.cloud.gcp.metrics.enabled\", matchIfMissing = true)", "originalCommit": "0c14609a68fb2922a06adcabffcca2bdaf523741", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1ced570d284864208999c4a573ab3b775e586c8", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\nindex 80d94831..57166628 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n\n@@ -37,7 +37,7 @@ import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n \n /**\n- * Provides auto-detection for project.\n+ * Provides auto-detection for `project-id` and `credentials`.\n  *\n  * @author Edd\u00fa Mel\u00e9ndez\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432170625", "bodyText": "do we also need to produce the StackdriverMeterRegistry? Or has Spring Boot Actuator been updated to produce it automatically? (It was an open issue)", "author": "saturnism", "createdAt": "2020-05-28T23:03:14Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)\n+@EnableConfigurationProperties({GcpMetricsProperties.class, StackdriverProperties.class})\n+@ConditionalOnProperty(value = \"spring.cloud.gcp.metrics.enabled\", matchIfMissing = true)\n+public class GcpStackdriverMetricsAutoConfiguration {\n+\n+\tprivate final StackdriverProperties stackdriverProperties;\n+\n+\tprivate final String projectId;\n+\n+\tprivate final CredentialsProvider credentialsProvider;\n+\n+\tpublic GcpStackdriverMetricsAutoConfiguration(GcpMetricsProperties gcpMetricsProperties,\n+\t\t\tStackdriverProperties stackdriverProperties, GcpProjectIdProvider gcpProjectIdProvider,\n+\t\t\tCredentialsProvider credentialsProvider) throws IOException {\n+\t\tthis.stackdriverProperties = stackdriverProperties;\n+\t\tthis.projectId = (gcpMetricsProperties.getProjectId() != null)\n+\t\t\t\t? gcpMetricsProperties.getProjectId() : gcpProjectIdProvider.getProjectId();\n+\t\tthis.credentialsProvider = gcpMetricsProperties.getCredentials().hasKey()\n+\t\t\t\t? new DefaultCredentialsProvider(gcpMetricsProperties) : credentialsProvider;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic StackdriverConfig stackdriverConfig() {", "originalCommit": "0c14609a68fb2922a06adcabffcca2bdaf523741", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4NDAxOQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432184019", "bodyText": "it is not required since we are performing this auto-configuration before the one provided by spring-boot. So, we just need to pre-configure the config so spring-boot takes it", "author": "eddumelendez", "createdAt": "2020-05-28T23:48:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwNDk4Nw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432204987", "bodyText": "just added an assertion to make sure the meterRegistry bean is created", "author": "eddumelendez", "createdAt": "2020-05-29T01:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3Njc3NQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432876775", "bodyText": "last time i used this, i needed to create my own registry bean, and documented here: https://micrometer.io/docs/registry/stackdriver\nmicrometer-metrics/micrometer-docs#115 (review)\nI'm unsure if actuator has been updated to autoconfigure the registry bean", "author": "saturnism", "createdAt": "2020-05-30T18:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3NzU2Ng==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432877566", "bodyText": "this is the current auto-configuration for stackdriver in spring-booot https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/stackdriver/StackdriverMetricsExportAutoConfiguration.java", "author": "eddumelendez", "createdAt": "2020-05-30T18:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODM4Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432878383", "bodyText": "Oh nice!! Fixed in 2.3 \ud83d\udc4f\ud83d\udc4f", "author": "saturnism", "createdAt": "2020-05-30T18:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MDYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b1ced570d284864208999c4a573ab3b775e586c8", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\nindex 80d94831..57166628 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n\n@@ -37,7 +37,7 @@ import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n \n /**\n- * Provides auto-detection for project.\n+ * Provides auto-detection for `project-id` and `credentials`.\n  *\n  * @author Edd\u00fa Mel\u00e9ndez\n  */\n"}}, {"oid": "b4a0c6ce243bc3cd6c71d41c2ddc9cad01c59f00", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b4a0c6ce243bc3cd6c71d41c2ddc9cad01c59f00", "message": "Polish docs", "committedDate": "2020-05-28T23:44:22Z", "type": "commit"}, {"oid": "b1ced570d284864208999c4a573ab3b775e586c8", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b1ced570d284864208999c4a573ab3b775e586c8", "message": "Add havingValue attribute", "committedDate": "2020-05-28T23:46:02Z", "type": "commit"}, {"oid": "cc124814e620595ef9d64d2822e1808f741e13a5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/cc124814e620595ef9d64d2822e1808f741e13a5", "message": "Add assert to ensure meterRegistry bean is created", "committedDate": "2020-05-29T01:01:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNjg4Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432216883", "bodyText": "Do we need to enforce @AutoConfigureAfter on org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, where Clock is provided?", "author": "elefeint", "createdAt": "2020-05-29T02:01:35Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.CredentialsProvider;\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.step.StepMeterRegistry;\n+import io.micrometer.stackdriver.StackdriverConfig;\n+\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverMetricsExportAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.cloud.gcp.core.DefaultCredentialsProvider;\n+import org.springframework.cloud.gcp.core.GcpProjectIdProvider;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-detection for project.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(StackdriverMetricsExportAutoConfiguration.class)\n+@ConditionalOnClass({StepMeterRegistry.class, StackdriverConfig.class})\n+@ConditionalOnBean(Clock.class)", "originalCommit": "0c14609a68fb2922a06adcabffcca2bdaf523741", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0ODE0NA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432248144", "bodyText": "Don't think so. Since all of them are provided for spring-boot once actuator, micrometer and micrometer-stackdriver are declared. When the conditions meet this auto-config triggers just before the one spring-boot provides.", "author": "eddumelendez", "createdAt": "2020-05-29T04:22:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNjg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\nindex 80d94831..57166628 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpStackdriverMetricsAutoConfiguration.java\n\n@@ -37,7 +37,7 @@ import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n \n /**\n- * Provides auto-detection for project.\n+ * Provides auto-detection for `project-id` and `credentials`.\n  *\n  * @author Edd\u00fa Mel\u00e9ndez\n  */\n"}}, {"oid": "2e612ffc60d54f476f50cbb3c59cce606a04c2f9", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/2e612ffc60d54f476f50cbb3c59cce606a04c2f9", "message": "Mention spring-boot-starter-actuator dependency", "committedDate": "2020-05-29T14:00:11Z", "type": "commit"}, {"oid": "3da4e2829a630bffc1059dcd0be8799706f89495", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3da4e2829a630bffc1059dcd0be8799706f89495", "message": "Update docs\n\nCo-authored-by: Elena Felder <41136058+elefeint@users.noreply.github.com>", "committedDate": "2020-05-29T16:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNDc4MA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2391#discussion_r432804780", "bodyText": "Need to add @since 1.2.4. Same goes for all other new class files.", "author": "meltsufin", "createdAt": "2020-05-30T03:12:04Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.metrics;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.NestedConfigurationProperty;\n+import org.springframework.cloud.gcp.core.Credentials;\n+import org.springframework.cloud.gcp.core.CredentialsSupplier;\n+import org.springframework.cloud.gcp.core.GcpScope;\n+\n+@ConfigurationProperties(prefix = \"spring.cloud.gcp.metrics\")\n+public class GcpMetricsProperties implements CredentialsSupplier {", "originalCommit": "3da4e2829a630bffc1059dcd0be8799706f89495", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb40df5997f30835adbba3b640b5cbb09c4f8a9f", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java\nindex 80152a15..70bcc9f0 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/metrics/GcpMetricsProperties.java\n\n@@ -22,6 +22,12 @@ import org.springframework.cloud.gcp.core.Credentials;\n import org.springframework.cloud.gcp.core.CredentialsSupplier;\n import org.springframework.cloud.gcp.core.GcpScope;\n \n+/**\n+ * Settings for Stackdriver Metrics.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ * @since 1.2.4\n+ */\n @ConfigurationProperties(prefix = \"spring.cloud.gcp.metrics\")\n public class GcpMetricsProperties implements CredentialsSupplier {\n \n"}}, {"oid": "eb40df5997f30835adbba3b640b5cbb09c4f8a9f", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/eb40df5997f30835adbba3b640b5cbb09c4f8a9f", "message": "Add since in javadocs", "committedDate": "2020-05-30T16:06:17Z", "type": "commit"}]}