{"pr_number": 2411, "pr_title": "Account for possible concurrent topic creation in PubSub topic auto-c\u2026", "pr_createdAt": "2020-06-02T12:48:20Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411", "timeline": [{"oid": "657298e59554874a4a063b5ad9f5ef6f3c78a462", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/657298e59554874a4a063b5ad9f5ef6f3c78a462", "message": "Account for possible concurrent topic creation in PubSub topic auto-create functionality.", "committedDate": "2020-06-02T12:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0OTAzNg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433849036", "bodyText": "Could you log a warning here?", "author": "elefeint", "createdAt": "2020-06-02T12:49:43Z", "path": "spring-cloud-gcp-pubsub-stream-binder/src/main/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisioner.java", "diffHunk": "@@ -118,7 +120,11 @@ private Topic makeSureTopicExists(String topicName, boolean autoCreate) {\n \t\tTopic topic = this.pubSubAdmin.getTopic(topicName);\n \t\tif (topic == null) {\n \t\t\tif (autoCreate) {\n-\t\t\t\ttopic = this.pubSubAdmin.createTopic(topicName);\n+\t\t\t\ttry {\n+\t\t\t\t\ttopic = this.pubSubAdmin.createTopic(topicName);\n+\t\t\t\t} catch(AlreadyExistsException alreadyExistsException) {\n+\t\t\t\t\t// Ignore concurrent topic creation - we're good as long as topic was created and exists", "originalCommit": "657298e59554874a4a063b5ad9f5ef6f3c78a462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1OTgwNQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433859805", "bodyText": "Sure", "author": "mvmn", "createdAt": "2020-06-02T13:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0OTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4NTY1Ng==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433885656", "bodyText": "Why warning level if it's not a real issue?\nI would go with DEBUG, or at most INFO.", "author": "meltsufin", "createdAt": "2020-06-02T13:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0OTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwNDg4NA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433904884", "bodyText": "Changed level to INFO according to @elefeint comment", "author": "mvmn", "createdAt": "2020-06-02T14:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0OTAzNg=="}], "type": "inlineReview", "revised_code": {"commit": "d0e6814879352d28a063aa451f1eee5b2c8c4a98", "chunk": "diff --git a/spring-cloud-gcp-pubsub-stream-binder/src/main/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisioner.java b/spring-cloud-gcp-pubsub-stream-binder/src/main/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisioner.java\nindex 1ffe5600..6e341e26 100644\n--- a/spring-cloud-gcp-pubsub-stream-binder/src/main/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisioner.java\n+++ b/spring-cloud-gcp-pubsub-stream-binder/src/main/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisioner.java\n\n@@ -124,6 +124,7 @@ public class PubSubChannelProvisioner\n \t\t\t\t\ttopic = this.pubSubAdmin.createTopic(topicName);\n \t\t\t\t} catch(AlreadyExistsException alreadyExistsException) {\n \t\t\t\t\t// Ignore concurrent topic creation - we're good as long as topic was created and exists\n+\t\t\t\t\tLOGGER.warn(\"Failed to auto-create topic '\" + topicName + \"' because it already exists.\");\n \t\t\t\t}\n \t\t\t}\n \t\t\telse {\n"}}, {"oid": "d0e6814879352d28a063aa451f1eee5b2c8c4a98", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/d0e6814879352d28a063aa451f1eee5b2c8c4a98", "message": "Added warning message in case topic already existed when auto-creation was attempted.", "committedDate": "2020-06-02T13:06:51Z", "type": "commit"}, {"oid": "92c9ab6455594f63695c62bc3225ba99c4ae006a", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/92c9ab6455594f63695c62bc3225ba99c4ae006a", "message": "Account for possible concurrent topic creation in PubSub topic auto-create functionality - added unit test for this.", "committedDate": "2020-06-02T13:14:37Z", "type": "commit"}, {"oid": "aebb5868c34e5cdfe097619f92079affccc29520", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/aebb5868c34e5cdfe097619f92079affccc29520", "message": "Fix checkstyle nonsense", "committedDate": "2020-06-02T13:29:07Z", "type": "commit"}, {"oid": "3e2c02541783a56d558a313b4d2d79ad586f1d5b", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3e2c02541783a56d558a313b4d2d79ad586f1d5b", "message": "Fix checkstyle nonsense", "committedDate": "2020-06-02T13:32:44Z", "type": "commit"}, {"oid": "6e51fdf8d965ed03dc4ece907c2006a2607e88b2", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6e51fdf8d965ed03dc4ece907c2006a2607e88b2", "message": "Added warning message in case topic already existed when auto-creation was attempted - changed log level to INFO instead of WARN.", "committedDate": "2020-06-02T14:06:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0Mzk2Mg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433943962", "bodyText": "Extreme nit: replace \"non_existing_topic\" with \"already_existing_topic\".", "author": "elefeint", "createdAt": "2020-06-02T15:00:05Z", "path": "spring-cloud-gcp-pubsub-stream-binder/src/test/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisionerTests.java", "diffHunk": "@@ -176,4 +177,14 @@ public void testAfterUnbindConsumer_nonAnonymous() {\n \n \t\tverify(this.pubSubAdminMock, never()).deleteSubscription(result.getName());\n \t}\n+\n+\t@Test\n+\tpublic void testProvisionConsumerDestination_concurrentTopicCreation() {\n+\t\twhen(this.pubSubAdminMock.createTopic(any())).thenThrow(AlreadyExistsException.class);\n+\t\twhen(this.pubSubAdminMock.getTopic(eq(\"non_existing_topic\"))).thenReturn(null);\n+\n+\t\t// Ensure no exceptions occur if topic already exists on create call\n+\t\tthis.pubSubChannelProvisioner\n+\t\t\t\t.provisionConsumerDestination(\"non_existing_topic\", \"group1\", this.properties);", "originalCommit": "6e51fdf8d965ed03dc4ece907c2006a2607e88b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NTQ5NA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2411#discussion_r433945494", "bodyText": "Done", "author": "mvmn", "createdAt": "2020-06-02T15:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0Mzk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c7280465461eda785ce6bd91ff368b30ba7ebd86", "chunk": "diff --git a/spring-cloud-gcp-pubsub-stream-binder/src/test/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisionerTests.java b/spring-cloud-gcp-pubsub-stream-binder/src/test/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisionerTests.java\nindex e4236ecd..2e47d469 100644\n--- a/spring-cloud-gcp-pubsub-stream-binder/src/test/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisionerTests.java\n+++ b/spring-cloud-gcp-pubsub-stream-binder/src/test/java/org/springframework/cloud/gcp/stream/binder/pubsub/provisioning/PubSubChannelProvisionerTests.java\n\n@@ -181,10 +181,10 @@ public class PubSubChannelProvisionerTests {\n \t@Test\n \tpublic void testProvisionConsumerDestination_concurrentTopicCreation() {\n \t\twhen(this.pubSubAdminMock.createTopic(any())).thenThrow(AlreadyExistsException.class);\n-\t\twhen(this.pubSubAdminMock.getTopic(eq(\"non_existing_topic\"))).thenReturn(null);\n+\t\twhen(this.pubSubAdminMock.getTopic(eq(\"already_existing_topic\"))).thenReturn(null);\n \n \t\t// Ensure no exceptions occur if topic already exists on create call\n \t\tthis.pubSubChannelProvisioner\n-\t\t\t\t.provisionConsumerDestination(\"non_existing_topic\", \"group1\", this.properties);\n+\t\t\t\t.provisionConsumerDestination(\"already_existing_topic\", \"group1\", this.properties);\n \t}\n }\n"}}, {"oid": "c7280465461eda785ce6bd91ff368b30ba7ebd86", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/c7280465461eda785ce6bd91ff368b30ba7ebd86", "message": "Account for possible concurrent topic creation in PubSub topic auto-create functionality - slightly changed unit test for this (better mock topic name).", "committedDate": "2020-06-02T15:01:50Z", "type": "commit"}]}