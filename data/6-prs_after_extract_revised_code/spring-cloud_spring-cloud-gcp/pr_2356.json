{"pr_number": 2356, "pr_title": "Add SpannerOptions auto-configuration for emulator", "pr_createdAt": "2020-05-06T01:40:44Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356", "timeline": [{"oid": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/27bfbe708c03f972bd3e0374e3861a60c4ffe54a", "message": "Add SpannerOptions auto-configuration for emulator\n\nCurrently, in order to execute against the emulator, Spanner relies\non `SPANNER_EMULATOR_HOST` environment variable. This commit introduces\nnew configuration properties in order to enable and set the emulator host.", "committedDate": "2020-05-06T01:38:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420810955", "bodyText": "If we don't set SpannerOptions.emulatorHost, then the client library will connect to the real Spanner instance, which may incur costs.\nI'd rather fail loudly here if emulator host is not available.\n@dmitry-s @meltsufin I recall a discussion recently about using .enabled vs the property used for something. Do you remember which style was decided on?", "author": "elefeint", "createdAt": "2020-05-06T13:56:07Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@Configuration\n+@AutoConfigureBefore(GcpSpannerAutoConfiguration.class)\n+@EnableConfigurationProperties(GcpSpannerProperties.class)\n+@ConditionalOnProperty(prefix = \"spring.cloud.gcp.spanner.emulator\", name = \"enabled\", havingValue = \"true\")\n+public class GcpSpannerEmulatorAutoConfiguration {\n+\n+\tprivate final GcpSpannerProperties properties;\n+\n+\tpublic GcpSpannerEmulatorAutoConfiguration(GcpSpannerProperties properties) {\n+\t\tthis.properties = properties;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic SpannerOptions spannerOptions() {\n+\t\tSpannerOptions.Builder builder = SpannerOptions.newBuilder()\n+\t\t\t\t.setProjectId(this.properties.getProjectId())\n+\t\t\t\t.setCredentials(NoCredentials.getInstance());\n+\t\tif (this.properties.getEmulatorHost() != null) {", "originalCommit": "27bfbe708c03f972bd3e0374e3861a60c4ffe54a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MjUxMg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420852512", "bodyText": "the client library resolves the SPANNER_EMULATOR_HOST environment variable. But, I agree it can be dismiss. I think we can validate if the environment variable or the property is set, otherwise we can fail and say neither environment variable or property was set. WDYT?", "author": "eddumelendez", "createdAt": "2020-05-06T14:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2ODU0OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420868549", "bodyText": "Since we're providing NoCredentials, there is no risk of connecting to the real Spanner and incurring costs.", "author": "meltsufin", "createdAt": "2020-05-06T15:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg5Njg4Nw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420896887", "bodyText": "In regard to  \".enabled vs the property\" - .enabled is the way to go.", "author": "dmitry-s", "createdAt": "2020-05-06T15:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk0MDM2Nw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r420940367", "bodyText": "Yes, let's fail if \"enabled\" is set but \"emulatorHost\" is missing, since there is no way to make that configuration work. Assert.notEmpty should work.", "author": "elefeint", "createdAt": "2020-05-06T16:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxMDk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\nindex d8806774..e250ed36 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\n\n@@ -25,6 +25,7 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.util.Assert;\n \n /**\n  * Provides auto-configuration to use the Spanner emulator if enabled.\n"}}, {"oid": "f1f8394974d87a36100df26057529226ecb2eb5d", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f1f8394974d87a36100df26057529226ecb2eb5d", "message": "Update docs", "committedDate": "2020-05-06T23:47:02Z", "type": "commit"}, {"oid": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "message": "Rename property to host-port and add assert", "committedDate": "2020-05-07T00:21:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNDAwNA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421524004", "bodyText": "Please add\n@since 1.2.3", "author": "meltsufin", "createdAt": "2020-05-07T13:56:15Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.autoconfigure.spanner;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.SpannerOptions;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * Provides auto-configuration to use the Spanner emulator if enabled.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez", "originalCommit": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6353ecab1987b295f8c20c9acef06beb7c6bcb98", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\nindex e250ed36..4e28b82d 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerEmulatorAutoConfiguration.java\n\n@@ -31,6 +31,7 @@ import org.springframework.util.Assert;\n  * Provides auto-configuration to use the Spanner emulator if enabled.\n  *\n  * @author Edd\u00fa Mel\u00e9ndez\n+ * @since 1.3\n  */\n @Configuration\n @AutoConfigureBefore(GcpSpannerAutoConfiguration.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNDYxOA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2356#discussion_r421524618", "bodyText": "Please add a comment above like the other props.", "author": "meltsufin", "createdAt": "2020-05-07T13:56:59Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java", "diffHunk": "@@ -70,6 +71,8 @@\n \t// Otherwise, by default, block until a session becomes available.\n \tprivate boolean failIfPoolExhausted = false;\n \n+\tprivate String hostPort;", "originalCommit": "6c5c52a64307d2d4280fbfcb2da9a03e762ee183", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6353ecab1987b295f8c20c9acef06beb7c6bcb98", "chunk": "diff --git a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java\nindex 6d7c63da..fb788a7a 100644\n--- a/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java\n+++ b/spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/spanner/GcpSpannerProperties.java\n\n@@ -71,6 +71,7 @@ public class GcpSpannerProperties implements CredentialsSupplier {\n \t// Otherwise, by default, block until a session becomes available.\n \tprivate boolean failIfPoolExhausted = false;\n \n+\t// If set, it is used to connect to the emulator.\n \tprivate String hostPort;\n \n \tpublic Credentials getCredentials() {\n"}}, {"oid": "6353ecab1987b295f8c20c9acef06beb7c6bcb98", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6353ecab1987b295f8c20c9acef06beb7c6bcb98", "message": "Polish", "committedDate": "2020-05-07T18:36:03Z", "type": "commit"}, {"oid": "5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/5b6c7de0de0aeeaca7ad8c3fe2286fc6435f5208", "message": "Rename back to emulator-host and give it a default", "committedDate": "2020-05-07T21:35:21Z", "type": "commit"}]}