{"pr_number": 2341, "pr_title": "Add support for Firestore Sort PartTree queries", "pr_createdAt": "2020-04-29T00:35:09Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2341", "timeline": [{"oid": "3a106f224b04a2cce8e89f09c73cf3cbc2f1ed1c", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3a106f224b04a2cce8e89f09c73cf3cbc2f1ed1c", "message": "add support for Firestore sort parttree queries", "committedDate": "2020-04-29T00:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5NzU4Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2341#discussion_r417497583", "bodyText": "Why split into nested if?", "author": "meltsufin", "createdAt": "2020-04-29T17:45:15Z", "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -124,9 +130,16 @@ public Object execute(Object[] parameters) {\n \t\t\tParameterAccessor paramAccessor = new ParametersParameterAccessor(getQueryMethod().getParameters(),\n \t\t\t\t\tparameters);\n \t\t\tPageable pageable = paramAccessor.getPageable();\n-\t\t\tif (pageable != null && pageable.isPaged()) {\n-\t\t\t\tbuilder.setOffset((int) Math.min(Integer.MAX_VALUE, pageable.getOffset()));\n-\t\t\t\tbuilder.setLimit(Int32Value.newBuilder().setValue(pageable.getPageSize()));\n+\t\t\tif (pageable != null) {\n+\t\t\t\tif (pageable.isPaged()) {", "originalCommit": "3a106f224b04a2cce8e89f09c73cf3cbc2f1ed1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUwNTQwOA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2341#discussion_r417505408", "bodyText": "My b, this was an artifact of some experiments we did - reverted.", "author": "dzou", "createdAt": "2020-04-29T17:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5NzU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "45699109995427aad25c12fa83611509cd08b472", "chunk": "diff --git a/spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java b/spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java\nindex 64249c64..d938042b 100644\n--- a/spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java\n+++ b/spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java\n\n@@ -130,11 +130,9 @@ public class PartTreeFirestoreQuery implements RepositoryQuery {\n \t\t\tParameterAccessor paramAccessor = new ParametersParameterAccessor(getQueryMethod().getParameters(),\n \t\t\t\t\tparameters);\n \t\t\tPageable pageable = paramAccessor.getPageable();\n-\t\t\tif (pageable != null) {\n-\t\t\t\tif (pageable.isPaged()) {\n-\t\t\t\t\tbuilder.setOffset((int) Math.min(Integer.MAX_VALUE, pageable.getOffset()));\n-\t\t\t\t\tbuilder.setLimit(Int32Value.newBuilder().setValue(pageable.getPageSize()));\n-\t\t\t\t}\n+\t\t\tif (pageable != null && pageable.isPaged()) {\n+\t\t\t\tbuilder.setOffset((int) Math.min(Integer.MAX_VALUE, pageable.getOffset()));\n+\t\t\t\tbuilder.setLimit(Int32Value.newBuilder().setValue(pageable.getPageSize()));\n \t\t\t}\n \n \t\t\tSort sort = paramAccessor.getSort();\n"}}, {"oid": "45699109995427aad25c12fa83611509cd08b472", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/45699109995427aad25c12fa83611509cd08b472", "message": "revert if-statement change", "committedDate": "2020-04-29T17:51:41Z", "type": "commit"}]}