{"pr_number": 2106, "pr_title": "Add overloaded `createBlob()` method accepting initial file contents.\u2026", "pr_createdAt": "2020-01-03T19:56:42Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106", "timeline": [{"oid": "d1114fca1f5ea850b3230a11eb7f7993f3dabd7c", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/d1114fca1f5ea850b3230a11eb7f7993f3dabd7c", "message": "Add overloaded `createBlob()` method accepting initial file contents. (#2099)\n\n* Add overloaded `createBlob()` method accepting initial file contents.\r\n* changed getOutputStream() to not pre-create the file\r\n\r\nFixes #2097.", "committedDate": "2020-01-03T19:43:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MTMyMg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106#discussion_r362951322", "bodyText": "Doesn't seem right if it's in the 1.2 branch.\nRemove this method?", "author": "meltsufin", "createdAt": "2020-01-03T20:30:30Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResource.java", "diffHunk": "@@ -191,6 +192,20 @@ public Blob createBlob() throws StorageException {\n \t\treturn this.storage.create(BlobInfo.newBuilder(getBlobId()).build());\n \t}\n \n+\t/**\n+\t * Creates the blob that this {@link GoogleStorageResource} represents in Google Cloud\n+\t * Storage and fills it with provided content.\n+\t * @param contents the initial file contents to write\n+\t * @return the created blob object\n+\t * @throws StorageException if any errors during blob creation arise,\n+\t * such as if the blob already exists\n+\t * @throws IllegalStateException if the resource reference is to a bucket, and not a blob.\n+\t * @since 1.3", "originalCommit": "d1114fca1f5ea850b3230a11eb7f7993f3dabd7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MTM2Mg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106#discussion_r362961362", "bodyText": "Hmm. It's useful and does not introduce any breaking changes.\nPerhaps I should remove @since in the master instead?", "author": "elefeint", "createdAt": "2020-01-03T21:06:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2Nzg3MQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106#discussion_r362967871", "bodyText": "AFAIK, only bug-fixes should be introduced in service releases.", "author": "meltsufin", "createdAt": "2020-01-03T21:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3NDY5Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106#discussion_r362974693", "bodyText": "@artembilan Happy New Year! Are Spring Cloud's service releases expected to contain only bugfixes, or are backwards-compatible new features okay?\nThis PR is backporting a 1.3.x change that really contains two changes addressing the same issue:\n\nA bugfix: making resource writing a one-step operation when an output stream is acquired, as the previous behavior of creating the file and then acquiring the stream failed unless the user had a delete permission (because replacement is considered a removal and subsequent addition in GCP storage).\nA new convenience feature allowing the object to be created with content in a single call, without having to acquire an output stream first.\n\nSo, we definitely need to backport (1), but are not sure about (2).", "author": "elefeint", "createdAt": "2020-01-03T21:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3NjAxNQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2106#discussion_r362976015", "bodyText": "We are OK with new feature in the services release as long as they don't break anything and existing application can upgrade without noticing new stuff.\nDo not back port feature is just a choice with less pain during maintenance: such a new feature has to be fixed now in several versions \ud83d\ude04 (if there are going to be bugs of course...)", "author": "artembilan", "createdAt": "2020-01-03T22:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MTMyMg=="}], "type": "inlineReview", "revised_code": {"commit": "7a53899dc7f9647a6cc78cd5e44c942284b8b8f5", "chunk": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResource.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResource.java\nindex a562aa6a9..f8b3cb768 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResource.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResource.java\n\n@@ -200,7 +200,6 @@ public class GoogleStorageResource implements WritableResource {\n \t * @throws StorageException if any errors during blob creation arise,\n \t * such as if the blob already exists\n \t * @throws IllegalStateException if the resource reference is to a bucket, and not a blob.\n-\t * @since 1.3\n \t */\n \tpublic Blob createBlob(byte[] contents) throws StorageException {\n \t\treturn this.storage.create(BlobInfo.newBuilder(getBlobId()).build(), contents);\n"}}, {"oid": "7a53899dc7f9647a6cc78cd5e44c942284b8b8f5", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/7a53899dc7f9647a6cc78cd5e44c942284b8b8f5", "message": "removed @since", "committedDate": "2020-01-07T20:51:07Z", "type": "commit"}]}