{"pr_number": 2468, "pr_title": "spring-cloud-storage: Added GcsLastModifiedFileListFilter", "pr_createdAt": "2020-07-17T07:50:44Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2468", "timeline": [{"oid": "b447464742de7d7e1016756ba6e3dcf1ee775c6a", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b447464742de7d7e1016756ba6e3dcf1ee775c6a", "message": "spring-cloud-storage: Added GcsLastModifiedFileListFilter\nTo be able to filter for newly added files, or files older than x relative to the current system time", "committedDate": "2020-07-16T23:25:19Z", "type": "commit"}, {"oid": "a2722261b427ea37b6ffb9af4f2252866bee16e8", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/a2722261b427ea37b6ffb9af4f2252866bee16e8", "message": "spring-cloud-storage: Added extra GcsLastModifiedFileListFilter test verifications", "committedDate": "2020-07-17T07:58:46Z", "type": "commit"}, {"oid": "a2cdc04739e02eb9ea50f988a46007323d54bfc0", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/a2cdc04739e02eb9ea50f988a46007323d54bfc0", "message": "Added extra coverage in GcsLastModifiedFileListFilterTest\n\nFor supportsSingleFileFiltering()", "committedDate": "2020-07-17T08:17:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTY0MA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2468#discussion_r457401640", "bodyText": "Can you use java.time.Duration instead?", "author": "meltsufin", "createdAt": "2020-07-20T13:49:32Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.storage.integration.filters;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+\n+import com.google.cloud.storage.BlobInfo;\n+\n+import org.springframework.integration.file.filters.DiscardAwareFileListFilter;\n+import org.springframework.integration.file.filters.FileListFilter;\n+import org.springframework.lang.Nullable;\n+\n+/**\n+ * The {@link FileListFilter} implementation to filter those files which\n+ * {@link BlobInfo#getUpdateTime()} is less than the {@link #age} in comparison with the\n+ * current time.\n+ * <p>\n+ * When {@link #discardCallback} is provided, it called for all the rejected files.\n+ *\n+ * @author Hosain Al Ahmad\n+ */\n+public class GcsLastModifiedFileListFilter implements DiscardAwareFileListFilter<BlobInfo> {\n+\n+\tprivate static final long ONE_SECOND = 1000;\n+\n+\tprivate final long age;\n+\n+\t@Nullable\n+\tprivate Consumer<BlobInfo> discardCallback;\n+\n+\t/**\n+\t * Construct a {@link GcsLastModifiedFileListFilter} instance with provided {@link #age}.\n+\t * Defaults to 60 seconds.\n+\t *\n+\t * @param age the age value.\n+\t * @param unit the uunit for the age value.\n+\t */\n+\tpublic GcsLastModifiedFileListFilter(long age, TimeUnit unit) {", "originalCommit": "a2cdc04739e02eb9ea50f988a46007323d54bfc0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMjI5OA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2468#discussion_r457532298", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-07-20T16:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTY0MA=="}], "type": "inlineReview", "revised_code": {"commit": "278b693670916f7ea584d246a12417ee96bf17f8", "chunk": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\nindex 7e58ab8b..0aec4ed1 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\n\n@@ -16,44 +16,41 @@\n \n package org.springframework.cloud.gcp.storage.integration.filters;\n \n+import java.time.Duration;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.concurrent.TimeUnit;\n import java.util.function.Consumer;\n \n import com.google.cloud.storage.BlobInfo;\n \n import org.springframework.integration.file.filters.DiscardAwareFileListFilter;\n-import org.springframework.integration.file.filters.FileListFilter;\n import org.springframework.lang.Nullable;\n \n /**\n- * The {@link FileListFilter} implementation to filter those files which\n- * {@link BlobInfo#getUpdateTime()} is less than the {@link #age} in comparison with the\n- * current time.\n- * <p>\n- * When {@link #discardCallback} is provided, it called for all the rejected files.\n+ * The {@link GcsLastModifiedFileListFilter} is a filter which excludes all files\n+ * that were updated within a specified amount of time.\n+ *\n+ * <p>More specifically, it excludes all files whose {@link BlobInfo#getUpdateTime()} is\n+ * within {@link #age} of the current time.\n+ *\n+ * <p>When {@link #discardCallback} is provided, it called for all the rejected files.\n  *\n  * @author Hosain Al Ahmad\n  */\n public class GcsLastModifiedFileListFilter implements DiscardAwareFileListFilter<BlobInfo> {\n \n-\tprivate static final long ONE_SECOND = 1000;\n-\n-\tprivate final long age;\n+\tprivate final Duration age;\n \n \t@Nullable\n \tprivate Consumer<BlobInfo> discardCallback;\n \n \t/**\n \t * Construct a {@link GcsLastModifiedFileListFilter} instance with provided {@link #age}.\n-\t * Defaults to 60 seconds.\n \t *\n-\t * @param age the age value.\n-\t * @param unit the uunit for the age value.\n+\t * @param age {@link Duration} describing the age of files to filter.\n \t */\n-\tpublic GcsLastModifiedFileListFilter(long age, TimeUnit unit) {\n-\t\tthis.age = unit.toSeconds(age);\n+\tpublic GcsLastModifiedFileListFilter(Duration age) {\n+\t\tthis.age = age;\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMzU2OA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2468#discussion_r457403568", "bodyText": "This if-else-if is duplicated with the accept() method. Can you try refactoring?", "author": "meltsufin", "createdAt": "2020-07-20T13:51:32Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2017-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.cloud.gcp.storage.integration.filters;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+\n+import com.google.cloud.storage.BlobInfo;\n+\n+import org.springframework.integration.file.filters.DiscardAwareFileListFilter;\n+import org.springframework.integration.file.filters.FileListFilter;\n+import org.springframework.lang.Nullable;\n+\n+/**\n+ * The {@link FileListFilter} implementation to filter those files which\n+ * {@link BlobInfo#getUpdateTime()} is less than the {@link #age} in comparison with the\n+ * current time.\n+ * <p>\n+ * When {@link #discardCallback} is provided, it called for all the rejected files.\n+ *\n+ * @author Hosain Al Ahmad\n+ */\n+public class GcsLastModifiedFileListFilter implements DiscardAwareFileListFilter<BlobInfo> {\n+\n+\tprivate static final long ONE_SECOND = 1000;\n+\n+\tprivate final long age;\n+\n+\t@Nullable\n+\tprivate Consumer<BlobInfo> discardCallback;\n+\n+\t/**\n+\t * Construct a {@link GcsLastModifiedFileListFilter} instance with provided {@link #age}.\n+\t * Defaults to 60 seconds.\n+\t *\n+\t * @param age the age value.\n+\t * @param unit the uunit for the age value.\n+\t */\n+\tpublic GcsLastModifiedFileListFilter(long age, TimeUnit unit) {\n+\t\tthis.age = unit.toSeconds(age);\n+\t}\n+\n+\t@Override\n+\tpublic void addDiscardCallback(@Nullable Consumer<BlobInfo> discardCallbackToSet) {\n+\t\tthis.discardCallback = discardCallbackToSet;\n+\t}\n+\n+\t@Override\n+\tpublic List<BlobInfo> filterFiles(BlobInfo[] files) {\n+\t\tList<BlobInfo> list = new ArrayList<>();\n+\t\tlong now = System.currentTimeMillis() / ONE_SECOND;\n+\t\tfor (BlobInfo file : files) {\n+\t\t\tif (fileIsAged(file, now)) {", "originalCommit": "a2cdc04739e02eb9ea50f988a46007323d54bfc0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMjM1OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2468#discussion_r457532359", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-07-20T16:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMzU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "278b693670916f7ea584d246a12417ee96bf17f8", "chunk": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\nindex 7e58ab8b..0aec4ed1 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/filters/GcsLastModifiedFileListFilter.java\n\n@@ -16,44 +16,41 @@\n \n package org.springframework.cloud.gcp.storage.integration.filters;\n \n+import java.time.Duration;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.concurrent.TimeUnit;\n import java.util.function.Consumer;\n \n import com.google.cloud.storage.BlobInfo;\n \n import org.springframework.integration.file.filters.DiscardAwareFileListFilter;\n-import org.springframework.integration.file.filters.FileListFilter;\n import org.springframework.lang.Nullable;\n \n /**\n- * The {@link FileListFilter} implementation to filter those files which\n- * {@link BlobInfo#getUpdateTime()} is less than the {@link #age} in comparison with the\n- * current time.\n- * <p>\n- * When {@link #discardCallback} is provided, it called for all the rejected files.\n+ * The {@link GcsLastModifiedFileListFilter} is a filter which excludes all files\n+ * that were updated within a specified amount of time.\n+ *\n+ * <p>More specifically, it excludes all files whose {@link BlobInfo#getUpdateTime()} is\n+ * within {@link #age} of the current time.\n+ *\n+ * <p>When {@link #discardCallback} is provided, it called for all the rejected files.\n  *\n  * @author Hosain Al Ahmad\n  */\n public class GcsLastModifiedFileListFilter implements DiscardAwareFileListFilter<BlobInfo> {\n \n-\tprivate static final long ONE_SECOND = 1000;\n-\n-\tprivate final long age;\n+\tprivate final Duration age;\n \n \t@Nullable\n \tprivate Consumer<BlobInfo> discardCallback;\n \n \t/**\n \t * Construct a {@link GcsLastModifiedFileListFilter} instance with provided {@link #age}.\n-\t * Defaults to 60 seconds.\n \t *\n-\t * @param age the age value.\n-\t * @param unit the uunit for the age value.\n+\t * @param age {@link Duration} describing the age of files to filter.\n \t */\n-\tpublic GcsLastModifiedFileListFilter(long age, TimeUnit unit) {\n-\t\tthis.age = unit.toSeconds(age);\n+\tpublic GcsLastModifiedFileListFilter(Duration age) {\n+\t\tthis.age = age;\n \t}\n \n \t@Override\n"}}, {"oid": "278b693670916f7ea584d246a12417ee96bf17f8", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/278b693670916f7ea584d246a12417ee96bf17f8", "message": "polish commit", "committedDate": "2020-07-20T16:16:22Z", "type": "commit"}, {"oid": "a4485e64a609673f059bdd161febf0b5cd1b4984", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/a4485e64a609673f059bdd161febf0b5cd1b4984", "message": "rename based off discussions offline", "committedDate": "2020-07-21T17:58:11Z", "type": "commit"}, {"oid": "f94ceb5c2d9c5232ed404a18d995efe96f8aa7e8", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/f94ceb5c2d9c5232ed404a18d995efe96f8aa7e8", "message": "Rename again", "committedDate": "2020-07-21T18:34:09Z", "type": "commit"}]}