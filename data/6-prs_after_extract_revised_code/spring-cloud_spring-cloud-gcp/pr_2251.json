{"pr_number": 2251, "pr_title": "Interpret missing maxMessages as MAX_INT in Pub/Sub PullRequests", "pr_createdAt": "2020-03-16T17:39:05Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251", "timeline": [{"oid": "a9bfd97dc8dfbbe0a370d985fda949738c8641fd", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/a9bfd97dc8dfbbe0a370d985fda949738c8641fd", "message": "Interpret null maxMessages as MAX_INTEGER.", "committedDate": "2020-03-16T17:25:45Z", "type": "commit"}, {"oid": "2be916dae153a39e2c4d896ede0f38bffa80d616", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/2be916dae153a39e2c4d896ede0f38bffa80d616", "message": "Fix formatting.", "committedDate": "2020-03-16T17:29:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNzU5Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393207593", "bodyText": "This is a nit, but can this be a different test? Null and negative numbers are distinct scenarios.", "author": "elefeint", "createdAt": "2020-03-16T17:52:08Z", "path": "spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java", "diffHunk": "@@ -70,4 +71,19 @@ public void testNewDefaultSubscriberFactory_nullProject() {\n \t\tnew DefaultSubscriberFactory(() -> null);\n \t}\n \n+\t@Test\n+\tpublic void testCreatePullRequest_nonZeroMaxMessages() {\n+\t\tDefaultSubscriberFactory factory = new DefaultSubscriberFactory(() -> \"project\");\n+\t\tfactory.setCredentialsProvider(this.credentialsProvider);\n+\n+\t\t// If a maxMessages is null (it was omitted), then set max to MAX_INT\n+\t\tPullRequest request = factory.createPullRequest(\"test\", null, true);\n+\t\tassertThat(request.getMaxMessages()).isEqualTo(Integer.MAX_VALUE);\n+\n+\t\t// If maxMessages < 0, should throw an error.", "originalCommit": "2be916dae153a39e2c4d896ede0f38bffa80d616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDcyOQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393214729", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-03-16T18:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNzU5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e7de728ed97b9423bc7bb1e1605f00832ac15f36", "chunk": "diff --git a/spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java b/spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java\nindex 9e71ffa94..6d4c5a36a 100644\n--- a/spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java\n+++ b/spring-cloud-gcp-pubsub/src/test/java/org/springframework/cloud/gcp/pubsub/support/DefaultSubscriberFactoryTests.java\n\n@@ -72,18 +72,21 @@ public class DefaultSubscriberFactoryTests {\n \t}\n \n \t@Test\n-\tpublic void testCreatePullRequest_nonZeroMaxMessages() {\n+\tpublic void testCreatePullRequest_greaterThanZeroMaxMessages() {\n \t\tDefaultSubscriberFactory factory = new DefaultSubscriberFactory(() -> \"project\");\n \t\tfactory.setCredentialsProvider(this.credentialsProvider);\n \n-\t\t// If a maxMessages is null (it was omitted), then set max to MAX_INT\n-\t\tPullRequest request = factory.createPullRequest(\"test\", null, true);\n-\t\tassertThat(request.getMaxMessages()).isEqualTo(Integer.MAX_VALUE);\n-\n-\t\t// If maxMessages < 0, should throw an error.\n \t\tthis.expectedException.expect(IllegalArgumentException.class);\n \t\tthis.expectedException.expectMessage(\"The maxMessages must be greater than 0.\");\n-\t\trequest = factory.createPullRequest(\"test\", -1, true);\n+\t\tfactory.createPullRequest(\"test\", -1, true);\n \t}\n \n+\t@Test\n+\tpublic void testCreatePullRequest_nonNullMaxMessages() {\n+\t\tDefaultSubscriberFactory factory = new DefaultSubscriberFactory(() -> \"project\");\n+\t\tfactory.setCredentialsProvider(this.credentialsProvider);\n+\n+\t\tPullRequest request = factory.createPullRequest(\"test\", null, true);\n+\t\tassertThat(request.getMaxMessages()).isEqualTo(Integer.MAX_VALUE);\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwODUzNg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393208536", "bodyText": "Would it make sense to replace \"there is no limit\" with \"up to Integer.MAX_VALUE messages will be requested\"? I know that you documented it in refdoc, but for people who read javadoc it would be better to be explicit.", "author": "elefeint", "createdAt": "2020-03-16T17:53:51Z", "path": "spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java", "diffHunk": "@@ -86,7 +86,8 @@\n \t * Pull and auto-acknowledge a number of messages from a Google Cloud Pub/Sub subscription.\n \t * @param subscription canonical subscription name, e.g., \"subscriptionName\", or the fully-qualified\n \t * subscription name in the {@code projects/<project_name>/subscriptions/<subscription_name>} format\n-\t * @param maxMessages the maximum number of pulled messages\n+\t * @param maxMessages the maximum number of pulled messages. If this value is null then there is no limit", "originalCommit": "2be916dae153a39e2c4d896ede0f38bffa80d616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDc3Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2251#discussion_r393214773", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-03-16T18:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwODUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "e7de728ed97b9423bc7bb1e1605f00832ac15f36", "chunk": "diff --git a/spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java b/spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java\nindex e81271fd7..b0bb0247f 100644\n--- a/spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java\n+++ b/spring-cloud-gcp-pubsub/src/main/java/org/springframework/cloud/gcp/pubsub/core/subscriber/PubSubSubscriberOperations.java\n\n@@ -86,8 +86,8 @@ public interface PubSubSubscriberOperations {\n \t * Pull and auto-acknowledge a number of messages from a Google Cloud Pub/Sub subscription.\n \t * @param subscription canonical subscription name, e.g., \"subscriptionName\", or the fully-qualified\n \t * subscription name in the {@code projects/<project_name>/subscriptions/<subscription_name>} format\n-\t * @param maxMessages the maximum number of pulled messages. If this value is null then there is no limit\n-\t * on the number of pulled messages.\n+\t * @param maxMessages the maximum number of pulled messages. If this value is null then\n+\t * up to Integer.MAX_VALUE messages will be requested.\n \t * @param returnImmediately returns immediately even if subscription doesn't contain enough\n \t * messages to satisfy {@code maxMessages}\n \t * @return the list of received messages\n"}}, {"oid": "e7de728ed97b9423bc7bb1e1605f00832ac15f36", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/e7de728ed97b9423bc7bb1e1605f00832ac15f36", "message": "PR Comments", "committedDate": "2020-03-16T18:03:08Z", "type": "commit"}]}