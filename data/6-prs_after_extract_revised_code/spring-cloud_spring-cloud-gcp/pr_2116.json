{"pr_number": 2116, "pr_title": "GcsStreamingMessageSource with comparator", "pr_createdAt": "2020-01-13T09:45:37Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116", "timeline": [{"oid": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b", "message": "added extra constructor", "committedDate": "2020-01-13T09:43:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjcxNw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365872717", "bodyText": "For smooth code flow this ctor has to be first. Because exactly this one calls another.", "author": "artembilan", "createdAt": "2020-01-13T15:42:02Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -35,14 +36,19 @@\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n  * @author Chengyuan Zhao\n+ * @author Lukas Gemela\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tsuper(template, null);\n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {\n+\t\tsuper(template, comparator);\n \t\tdoSetFilter(new GcsPersistentAcceptOnceFileListFilter(new SimpleMetadataStore(), \"gcsStreamingMessageSource\"));\n \t}\n \n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {", "originalCommit": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTU4OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365879589", "bodyText": "updated accordingly", "author": "lukasGemela", "createdAt": "2020-01-13T15:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjcxNw=="}], "type": "inlineReview", "revised_code": {"commit": "bad3345bb535fa0de8163c399d72b2d656cee81a", "chunk": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\nindex 38b957a6..ff189b16 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\n\n@@ -40,15 +40,15 @@ import org.springframework.integration.metadata.SimpleMetadataStore;\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n+\t\tthis(template, null);\n+\t}\n+\n \tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {\n \t\tsuper(template, comparator);\n \t\tdoSetFilter(new GcsPersistentAcceptOnceFileListFilter(new SimpleMetadataStore(), \"gcsStreamingMessageSource\"));\n \t}\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tthis(template, null);\n-\t}\n-\n \t@Override\n \tpublic String getComponentType() {\n \t\treturn \"gcp:gcs-inbound-streaming-channel-adapter\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MzA1OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2116#discussion_r365873059", "bodyText": "Since this ctor is new public API in the class it would be great to have some JavaDoc on it with an appropriate @since.", "author": "artembilan", "createdAt": "2020-01-13T15:42:42Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -35,14 +36,19 @@\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n  * @author Chengyuan Zhao\n+ * @author Lukas Gemela\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tsuper(template, null);\n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {", "originalCommit": "e9e3e5a5d9a8504cb0f69a89dee8d75a06d1057b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bad3345bb535fa0de8163c399d72b2d656cee81a", "chunk": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\nindex 38b957a6..ff189b16 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java\n\n@@ -40,15 +40,15 @@ import org.springframework.integration.metadata.SimpleMetadataStore;\n  */\n public class GcsStreamingMessageSource extends AbstractRemoteFileStreamingMessageSource<BlobInfo> {\n \n+\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n+\t\tthis(template, null);\n+\t}\n+\n \tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template, Comparator<BlobInfo> comparator) {\n \t\tsuper(template, comparator);\n \t\tdoSetFilter(new GcsPersistentAcceptOnceFileListFilter(new SimpleMetadataStore(), \"gcsStreamingMessageSource\"));\n \t}\n \n-\tpublic GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n-\t\tthis(template, null);\n-\t}\n-\n \t@Override\n \tpublic String getComponentType() {\n \t\treturn \"gcp:gcs-inbound-streaming-channel-adapter\";\n"}}, {"oid": "bad3345bb535fa0de8163c399d72b2d656cee81a", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/bad3345bb535fa0de8163c399d72b2d656cee81a", "message": "code review comments", "committedDate": "2020-01-13T15:53:33Z", "type": "commit"}]}