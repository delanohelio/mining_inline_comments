{"pr_number": 2323, "pr_title": "Refactor Pub/sub integration test to reduce duplication", "pr_createdAt": "2020-04-15T21:57:04Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2323", "timeline": [{"oid": "6d0cd7ae191ef1c03fe3ec22f12d3adb0a101905", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6d0cd7ae191ef1c03fe3ec22f12d3adb0a101905", "message": "refactor test", "committedDate": "2020-04-15T21:54:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MDk4NQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2323#discussion_r409160985", "bodyText": "Do we want to do this per test, or once for the whole class?", "author": "meltsufin", "createdAt": "2020-04-15T22:03:30Z", "path": "spring-cloud-gcp-autoconfigure/src/test/java/org/springframework/cloud/gcp/autoconfigure/pubsub/it/PubSubChannelAdaptersIntegrationTests.java", "diffHunk": "@@ -80,103 +72,120 @@\n  *\n  * @author Jo\u00e3o Andr\u00e9 Martins\n  * @author Mike Eltsufin\n+ * @author Elena Felder\n  */\n public class PubSubChannelAdaptersIntegrationTests {\n \n \tprivate static final int RECEIVE_TIMEOUT_MS = 10000;\n \n-\tprivate static PrintStream systemOut;\n+\tstatic PubSubAdmin pubSubAdmin;\n \n-\tprivate static ByteArrayOutputStream baos;\n+\t/** Capture output for verification. */\n+\t@Rule\n+\tpublic OutputCaptureRule outputCaptureRule = new OutputCaptureRule();\n \n-\tprivate ApplicationContextRunner contextRunner = new ApplicationContextRunner()\n-\t\t\t.withConfiguration(AutoConfigurations.of(\n-\t\t\t\t\tGcpContextAutoConfiguration.class,\n-\t\t\t\t\tGcpPubSubAutoConfiguration.class))\n-\t\t\t.withUserConfiguration(PollableConfiguration.class, CommonConfiguration.class);\n+\tString topicName;\n+\n+\tString subscriptionName;\n+\n+\tApplicationContextRunner contextRunner;\n \n \t@BeforeClass\n \tpublic static void enableTests() {\n \t\tassumeThat(System.getProperty(\"it.pubsub\")).isEqualTo(\"true\");\n \t}\n \n \t@BeforeClass\n-\tpublic static void captureStdout() {\n-\t\tsystemOut = System.out;\n-\t\tbaos = new ByteArrayOutputStream();\n-\t\tTeeOutputStream out = new TeeOutputStream(systemOut, baos);\n-\t\tSystem.setOut(new PrintStream(out));\n+\tpublic static void initializePubSubAdmin() throws Exception {\n+\t\tpubSubAdmin = new PubSubAdmin(\n+\t\t\t\tnew DefaultGcpProjectIdProvider(),\n+\t\t\t\tnew DefaultCredentialsProvider(() -> new Credentials())\n+\t\t);\n \t}\n \n-\t@AfterClass\n-\tpublic static void resetStdout() {\n-\t\tSystem.setOut(systemOut);\n+\t@Before", "originalCommit": "6d0cd7ae191ef1c03fe3ec22f12d3adb0a101905", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MzI3Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2323#discussion_r409163273", "bodyText": "I would at least create a subscription per test; otherwise each test has to take care to never have anything redelivered.\nAt that point, might as well create a fresh topic.", "author": "elefeint", "createdAt": "2020-04-15T22:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2NDgwMA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2323#discussion_r409164800", "bodyText": "fair enough... feel free to merge.", "author": "meltsufin", "createdAt": "2020-04-15T22:12:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MDk4NQ=="}], "type": "inlineReview", "revised_code": null}]}