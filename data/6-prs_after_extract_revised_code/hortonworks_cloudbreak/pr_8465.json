{"pr_number": 8465, "pr_title": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly", "pr_createdAt": "2020-06-30T19:33:49Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8465", "timeline": [{"oid": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "url": "https://github.com/hortonworks/cloudbreak/commit/9fe9de0466464fd58d38e26133cc5ca90126ce4d", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly", "committedDate": "2020-06-30T20:32:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4NjM2Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448186362", "bodyText": "Pls. ensure this is NPE safe", "author": "pdarvasi", "createdAt": "2020-07-01T08:00:04Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNjU2OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448226569", "bodyText": "Pls. ensure this is NPE safe", "author": "pdarvasi", "createdAt": "2020-07-01T09:09:48Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDQ4Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230483", "bodyText": "Pls. ensure this is NPE safe", "author": "pdarvasi", "createdAt": "2020-07-01T09:16:34Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMDY3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448230678", "bodyText": "Pls. ensure this is NPE safe", "author": "pdarvasi", "createdAt": "2020-07-01T09:16:57Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMjMxNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448232317", "bodyText": "could you pls add some extra logging here for the different clauses?", "author": "pdarvasi", "createdAt": "2020-07-01T09:19:47Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        if (clusterManagerUpdateNeeded) {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE);\n+        } else {\n+            flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_NOT_NEEDED, currentCmBuildNumber);\n+        }\n+        return clusterManagerUpdateNeeded;\n     }\n \n-    public void upgradeCluster(long stackId, Image image) {\n-        String clusterManagerVersion = image.getVersion();\n+    public boolean upgradeCluster(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        Image targetIm = targetImage.getImage();\n+        Image currentIm = currentImage.getImage();\n+        String currentRuntimeBuildNumber = currentIm.getStackDetails().getStackBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentIm.getCmBuildNumber().equals(targetIm.getCmBuildNumber());\n+        boolean clusterRuntimeUpgradeNeeded = !currentRuntimeBuildNumber.equals(targetIm.getStackDetails().getStackBuildNumber());\n \n-        flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), CLUSTER_MANAGER_UPGRADE_FINISHED, clusterManagerVersion);\n+        if (clusterManagerUpdateNeeded) {", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyMDI2Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448420266", "bodyText": "The flowMessageService.fireEventAndLog() method will log the different kind of messages. I think it should be enough. What do you think?", "author": "schfeca75", "createdAt": "2020-07-01T14:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMjMxNw=="}], "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzMzg0NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448233844", "bodyText": "clusterManagerUpdateNeeded and clusterRuntimeUpgradeNeeded are used twice, could you pls extract those to separate methods?", "author": "pdarvasi", "createdAt": "2020-07-01T09:22:27Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java", "diffHunk": "@@ -32,26 +35,52 @@\n     @Inject\n     private StackUpdater stackUpdater;\n \n-    public void upgradeClusterManager(long stackId, StatedImage targetImage) {\n+    public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n+        String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n+        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\nindex e0a331861d..68bce6ce15 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeService.java\n\n@@ -37,7 +40,7 @@ public class ClusterUpgradeService {\n \n     public boolean upgradeClusterManager(long stackId, StatedImage currentImage, StatedImage targetImage) {\n         String currentCmBuildNumber = currentImage.getImage().getCmBuildNumber();\n-        boolean clusterManagerUpdateNeeded = !currentCmBuildNumber.equals(targetImage.getImage().getCmBuildNumber());\n+        boolean clusterManagerUpdateNeeded = isUpdateNeeded(currentCmBuildNumber, targetImage.getImage().getCmBuildNumber());\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_IN_PROGRESS.name(), DATALAKE_UPGRADE, targetImage.getImage().getUuid());\n         clusterService.updateClusterStatusByStackId(stackId, Status.UPDATE_IN_PROGRESS);\n         if (clusterManagerUpdateNeeded) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNzUyNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448237524", "bodyText": "Nice coverage, well done!", "author": "pdarvasi", "createdAt": "2020-07-01T09:29:05Z", "path": "core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java", "diffHunk": "@@ -43,6 +78,124 @@ public void setUp() {\n         MockitoAnnotations.initMocks(this);\n     }\n \n+    @Test", "originalCommit": "9fe9de0466464fd58d38e26133cc5ca90126ce4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNTEyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8465#discussion_r448435126", "bodyText": "thank you!", "author": "schfeca75", "createdAt": "2020-07-01T15:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNzUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "chunk": "diff --git a/core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java b/core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java\nindex 0b598f6d65..4504a07a52 100644\n--- a/core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java\n+++ b/core/src/test/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/upgrade/ClusterUpgradeServiceTest.java\n\n@@ -73,7 +78,7 @@ public class ClusterUpgradeServiceTest {\n     @InjectMocks\n     private ClusterUpgradeService underTest;\n \n-    @Before\n+    @BeforeEach\n     public void setUp() {\n         MockitoAnnotations.initMocks(this);\n     }\n"}}, {"oid": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "url": "https://github.com/hortonworks/cloudbreak/commit/ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly", "committedDate": "2020-07-01T14:54:51Z", "type": "commit"}, {"oid": "ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "url": "https://github.com/hortonworks/cloudbreak/commit/ec27a0e0fd24d9d867a23da6a06bdc1312ff1a74", "message": "CB-6681 Handle cases when [only CM/only CDH/ neither] changes properly", "committedDate": "2020-07-01T14:54:51Z", "type": "forcePushed"}]}