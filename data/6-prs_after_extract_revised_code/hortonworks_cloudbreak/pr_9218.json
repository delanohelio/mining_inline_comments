{"pr_number": 9218, "pr_title": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure DL external DB", "pr_createdAt": "2020-10-14T09:00:06Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9218", "timeline": [{"oid": "83116d66fd5f5f1d2787b96f06d44c21a76d0ebf", "url": "https://github.com/hortonworks/cloudbreak/commit/83116d66fd5f5f1d2787b96f06d44c21a76d0ebf", "message": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure external DB\n\nTODO\n* Rebased onto #9215\n* List of changes\n* Unit tests", "committedDate": "2020-10-15T15:32:56Z", "type": "forcePushed"}, {"oid": "5ba908535b48e8e3e2abacb753cd6a98b051e6f4", "url": "https://github.com/hortonworks/cloudbreak/commit/5ba908535b48e8e3e2abacb753cd6a98b051e6f4", "message": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure DL external DB\n\n* Rebased onto #9215\n* Enable SSL enforcement for the external DB of data lakes. The list of\n  cloud platforms where this is applied is controlled by the new\n  Datalake service property\n  datalake.supported.externaldb.sslenforcement.platform (see\n  PlatformConfig.dbServiceSslEnforcementSupportedPlatforms).\n  * In AWS, the CF stack is extended with a new\n    AWS::RDS::DBParameterGroup resource that has rds.force_ssl=1.\n    Supported engine versions: 9.5, 9.6, 10.x, 11.x, 12.x, 13.x.\n  * In Azure, the Microsoft.DBforPostgreSQL/servers resource will\n    have sslEnforcement=Enabled and minimalTlsVersion=TLS1_2.\n* Data hub DBs and embedded DBs of any cluster type are not affected.\n* Added new unit tests and updated existing ones to use JUnit 5 and\n  AssertJ.", "committedDate": "2020-10-17T22:52:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjU1MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507186551", "bodyText": "do we need this todo?", "author": "doktoric", "createdAt": "2020-10-18T16:59:02Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/spi/DBStackToDatabaseStackConverter.java", "diffHunk": "@@ -66,6 +68,29 @@ private DatabaseServer buildDatabaseServer(DBStack dbStack) {\n             return null;\n         }\n \n+        Map<String, Object> params = buildParameters(dbStack);\n+        SecurityGroup securityGroup = dbStackDatabaseServer.getSecurityGroup();\n+\n+        DatabaseServer.Builder builder = DatabaseServer.builder()\n+                .serverId(dbStackDatabaseServer.getName())\n+                .flavor(dbStackDatabaseServer.getInstanceType())\n+                .engine(getDatabaseEngine(dbStackDatabaseServer))\n+                .connectionDriver(dbStackDatabaseServer.getConnectionDriver())\n+                .rootUserName(dbStackDatabaseServer.getRootUserName())\n+                .rootPassword(dbStackDatabaseServer.getRootPassword())\n+                .port(dbStackDatabaseServer.getPort())\n+                .useSslEnforcement(determineSslEnforcement(dbStack))\n+                .storageSize(dbStackDatabaseServer.getStorageSize())\n+                .security(securityGroup == null ? null : new Security(Collections.emptyList(), securityGroup.getSecurityGroupIds()))\n+                // TODO / FIXME converter caller decides this?", "originalCommit": "5ba908535b48e8e3e2abacb753cd6a98b051e6f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTA1Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507195057", "bodyText": "It was already there added by the original author. I did not know if the status ever needed to be fixed so left it as is. But can be indeed removed if you say so. \ud83d\ude04", "author": "lajosrodek", "createdAt": "2020-10-18T18:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjU1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNzYyNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507527625", "bodyText": "ah :D ok leave there.", "author": "doktoric", "createdAt": "2020-10-19T07:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjU1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjgxMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507186811", "bodyText": "if (response.sslConfig == null) {\nresponse.setSslConfig(new SslConfigV4Response());\n}\n?", "author": "doktoric", "createdAt": "2020-10-18T17:01:17Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/v4/databaseserver/DatabaseServerConfigToDatabaseServerV4ResponseConverter.java", "diffHunk": "@@ -54,10 +54,13 @@ public DatabaseServerV4Response convert(DatabaseServerConfig source) {\n             }\n         } else if (source.getHost() != null && source.getPort() != null) {\n             response.setStatus(Status.AVAILABLE);\n+            response.setSslConfig(new SslConfigV4Response());\n         } else {\n             response.setStatus(Status.UNKNOWN);\n+            response.setSslConfig(new SslConfigV4Response());\n         }\n ", "originalCommit": "5ba908535b48e8e3e2abacb753cd6a98b051e6f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTczNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507195736", "bodyText": "Oh, good point, I will move this (and the other similar occurrences above) out as a fallback default after the if/else if/else block.", "author": "lajosrodek", "createdAt": "2020-10-18T18:21:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MjY5MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9218#discussion_r507582690", "bodyText": "Done.", "author": "lajosrodek", "createdAt": "2020-10-19T08:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NjgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d6222551351943ea8cfc4599af4c290b8221060", "chunk": "diff --git a/redbeams/src/main/java/com/sequenceiq/redbeams/converter/v4/databaseserver/DatabaseServerConfigToDatabaseServerV4ResponseConverter.java b/redbeams/src/main/java/com/sequenceiq/redbeams/converter/v4/databaseserver/DatabaseServerConfigToDatabaseServerV4ResponseConverter.java\nindex b7243c46e6..416193cbdc 100644\n--- a/redbeams/src/main/java/com/sequenceiq/redbeams/converter/v4/databaseserver/DatabaseServerConfigToDatabaseServerV4ResponseConverter.java\n+++ b/redbeams/src/main/java/com/sequenceiq/redbeams/converter/v4/databaseserver/DatabaseServerConfigToDatabaseServerV4ResponseConverter.java\n\n@@ -49,14 +49,13 @@ public class DatabaseServerConfigToDatabaseServerV4ResponseConverter\n                 sslConfigV4Response.setSslCertificateType(sslConfig.getSslCertificateType());\n                 sslConfigV4Response.setSslMode(NONE.equals(sslConfig.getSslCertificateType()) ? DISABLED : ENABLED);\n                 response.setSslConfig(sslConfigV4Response);\n-            } else {\n-                response.setSslConfig(new SslConfigV4Response());\n             }\n         } else if (source.getHost() != null && source.getPort() != null) {\n             response.setStatus(Status.AVAILABLE);\n-            response.setSslConfig(new SslConfigV4Response());\n         } else {\n             response.setStatus(Status.UNKNOWN);\n+        }\n+        if (response.getSslConfig() == null) {\n             response.setSslConfig(new SslConfigV4Response());\n         }\n \n"}}, {"oid": "3d6222551351943ea8cfc4599af4c290b8221060", "url": "https://github.com/hortonworks/cloudbreak/commit/3d6222551351943ea8cfc4599af4c290b8221060", "message": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure DL external DB\n\n* Rebased onto #9215\n* Enable SSL enforcement for the external DB of data lakes. The list of\n  cloud platforms where this is applied is controlled by the new\n  Datalake service property\n  datalake.supported.externaldb.sslenforcement.platform (see\n  PlatformConfig.dbServiceSslEnforcementSupportedPlatforms).\n  * In AWS, the CF stack is extended with a new\n    AWS::RDS::DBParameterGroup resource that has rds.force_ssl=1.\n    Supported engine versions: 9.5, 9.6, 10.x, 11.x, 12.x, 13.x.\n  * In Azure, the Microsoft.DBforPostgreSQL/servers resource will\n    have sslEnforcement=Enabled and minimalTlsVersion=TLS1_2.\n* Data hub DBs and embedded DBs of any cluster type are not affected.\n* Added new unit tests and updated existing ones to use JUnit 5 and\n  AssertJ.", "committedDate": "2020-10-19T08:53:39Z", "type": "commit"}, {"oid": "3d6222551351943ea8cfc4599af4c290b8221060", "url": "https://github.com/hortonworks/cloudbreak/commit/3d6222551351943ea8cfc4599af4c290b8221060", "message": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure DL external DB\n\n* Rebased onto #9215\n* Enable SSL enforcement for the external DB of data lakes. The list of\n  cloud platforms where this is applied is controlled by the new\n  Datalake service property\n  datalake.supported.externaldb.sslenforcement.platform (see\n  PlatformConfig.dbServiceSslEnforcementSupportedPlatforms).\n  * In AWS, the CF stack is extended with a new\n    AWS::RDS::DBParameterGroup resource that has rds.force_ssl=1.\n    Supported engine versions: 9.5, 9.6, 10.x, 11.x, 12.x, 13.x.\n  * In Azure, the Microsoft.DBforPostgreSQL/servers resource will\n    have sslEnforcement=Enabled and minimalTlsVersion=TLS1_2.\n* Data hub DBs and embedded DBs of any cluster type are not affected.\n* Added new unit tests and updated existing ones to use JUnit 5 and\n  AssertJ.", "committedDate": "2020-10-19T08:53:39Z", "type": "forcePushed"}]}