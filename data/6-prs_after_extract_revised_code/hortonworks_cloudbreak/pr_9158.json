{"pr_number": 9158, "pr_title": "CB-8982 Indefinitely long loop when deleting environment. When we fet\u2026", "pr_createdAt": "2020-10-06T18:38:21Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9158", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500533070", "bodyText": "why do we need to introduce another endpoint for this? the env crn is a query param which can be empty (seemingly). If this param would be missing, the call would go to the simple list endpoint (line 47).\nIMO we shouldn't introduce this endpoint, we just need to extend the original list endpoint with this query param. since the param itself is not a mandatory field, this endpoint extension shouldn't break the compatibility", "author": "gregito", "createdAt": "2020-10-06T19:08:16Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/clustertemplate/ClusterTemplateV4Endpoint.java", "diffHunk": "@@ -46,6 +46,13 @@\n             nickname = \"listClusterTemplatesByWorkspace\")\n     ClusterTemplateViewV4Responses list(@PathParam(\"workspaceId\") Long workspaceId);\n \n+    @GET\n+    @Path(\"get_by_env\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @ApiOperation(value = ClusterTemplateOpDescription.LIST_BY_ENV, produces = MediaType.APPLICATION_JSON,\n+            notes = CLUSTER_TEMPLATE_NOTES, nickname = \"listClusterTemplatesByEnv\")\n+    ClusterTemplateViewV4Responses listByEnv(@PathParam(\"workspaceId\") Long workspaceId, @QueryParam(\"environmentCrn\") String environmentCrn);", "originalCommit": "0467a61aae16e616e13c6e4145f3fb2a614d2324", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI1Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500541256", "bodyText": "I asked Gergo to do that, since original endpoint is for listing in account and this is for listing by env and these are conpletely different from authorization point of view, also this endpoint will called by env service only so it is an internal call right now (later it is possible to authorize it for an env)", "author": "horadla23", "createdAt": "2020-10-06T19:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MTczNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500551735", "bodyText": "I see, but the original endpoint could work in both ways whether the env crn has given or not. If we'd like to follow your mentioned thought about exposing this new endpoint in a \"public\" way somewhere in the future, this exact same question could emerge again (namely: why do we have two endpoints for a seemingly quite identical behavior). And at that point, we may have to deprecate this endpoint which comes with the concern of breaking something that uses this endpoint (but we don't know about it, because it may be some experience or other embedding service).\nBack to the AuthZ. What - component - decides that this given endpoint is an internal or an \"external\" endpoint?\nI mean if the internal kind of behavior means only that we have to implement its mechanism in a different way one (or more) layer lower, I think my suggestion could have more weight.\nIf the decision of which service can call this - new - endpoint and which can't is in another component's hand then I have nothing to say here, it is fine to me.\nThis section is partly because most likely your general knowledge around our AuthN/AuthZ is much deeper than mine.\nI would like to include more people into this if you don't mind to have/obtain a more diverse opinion.", "author": "gregito", "createdAt": "2020-10-06T19:42:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MjA4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500552085", "bodyText": "yes you are right, but we need this because of the authorization. Please talk with @horadla23", "author": "topolyai5", "createdAt": "2020-10-06T19:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NDYxNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500554617", "bodyText": "@doktoric , @biharitomi , @daszabo could you please take a look at the abovementioned topic(s) and leave some opinion about it? thanks guys!", "author": "gregito", "createdAt": "2020-10-06T19:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzU4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500563585", "bodyText": "ok so my point here is that even both of them are identical from developer/code point of view but it is different from user point of view. Original list gives all templates in the account/tenant, this new one gives them back by an environment . This is different from customer point of view and since we are authorizing calls on api, it is completely different from authz point of view. one of them should be authorized based on account and this new one should be authorized on env level. we had so much pain caused by these mixed endpoints during implementation of authorization so we should avoid mixing these slightly different calls into 1 method.\nyou can check readme of authorization-common module about this topic and also we will hold a demo about it.\nwe can involve team into this discussion of course.\n(so this is not about that we need to differentiate them because one of them is internal, rather it is about api design which considers different kind of authorizations)", "author": "horadla23", "createdAt": "2020-10-06T20:05:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2NjkzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500766931", "bodyText": "what if the env crn would be as a path param? Would it be feasible for both side? \ud83d\ude04  @horadla23 @gregito cc: @topolyai5\nOf course this endpoint's responses would be the subset of the list by tenant, but I think it is more acceptable this way.", "author": "biharitomi", "createdAt": "2020-10-07T06:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc3NDM1NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500774354", "bodyText": "using the crn as a path param would emphasize the difference between two endpoints thus this approach would be more acceptable to me \ud83d\udc4d\ud83c\udffb", "author": "gregito", "createdAt": "2020-10-07T06:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc3NDYzMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500774633", "bodyText": "I am also fine with an optional path param. One more thing If we add this ned function probably @andrasfelfoldi and @zoltanzseli can use this in case of DH creation page. This is a kind of optimization.", "author": "doktoric", "createdAt": "2020-10-07T06:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNDgzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500814830", "bodyText": "I don't support the env crn in the path, because we want to filter instead of separate the resource by env. I think the best solution an optional param on the list operation but this is a problem for authz team.", "author": "topolyai5", "createdAt": "2020-10-07T08:03:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgyNTQ5NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500825494", "bodyText": "if UI will use this, then that is one more reason to think about how UI will use it and how we will authorize this.", "author": "horadla23", "createdAt": "2020-10-07T08:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzMzA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "99cbd1ab03d23dd8ed532e74e593996c94b9e9d8", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/clustertemplate/ClusterTemplateV4Endpoint.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/clustertemplate/ClusterTemplateV4Endpoint.java\nindex 7e883c43bc..a6213d5276 100644\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/clustertemplate/ClusterTemplateV4Endpoint.java\n+++ b/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/clustertemplate/ClusterTemplateV4Endpoint.java\n\n@@ -47,11 +47,11 @@ public interface ClusterTemplateV4Endpoint {\n     ClusterTemplateViewV4Responses list(@PathParam(\"workspaceId\") Long workspaceId);\n \n     @GET\n-    @Path(\"get_by_env\")\n+    @Path(\"env/{environmentCrn}\")\n     @Produces(MediaType.APPLICATION_JSON)\n     @ApiOperation(value = ClusterTemplateOpDescription.LIST_BY_ENV, produces = MediaType.APPLICATION_JSON,\n             notes = CLUSTER_TEMPLATE_NOTES, nickname = \"listClusterTemplatesByEnv\")\n-    ClusterTemplateViewV4Responses listByEnv(@PathParam(\"workspaceId\") Long workspaceId, @QueryParam(\"environmentCrn\") String environmentCrn);\n+    ClusterTemplateViewV4Responses listByEnv(@PathParam(\"workspaceId\") Long workspaceId, @PathParam(\"environmentCrn\") String environmentCrn);\n \n     @GET\n     @Path(\"name/{name}\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzNTQ5Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500535493", "bodyText": "if you remove the input-independent solution (the usage of the NameOrCrn object) then please remove the unused environmentName arg also from the method arguments", "author": "gregito", "createdAt": "2020-10-06T19:12:32Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/ClusterTemplateV4Controller.java", "diffHunk": "@@ -139,9 +148,8 @@ public ClusterTemplateV4Responses deleteMultiple(Long workspaceId, @ResourceName\n         if (Objects.nonNull(names) && !names.isEmpty()) {\n             clusterTemplates = clusterTemplateService.deleteMultiple(names, workspaceId);\n         } else {\n-            NameOrCrn environmentNameOrCrn = NameOrCrn.ofCrn(environmentCrn);\n             Set<String> namesByEnv = clusterTemplateService\n-                    .findAllByEnvironment(environmentNameOrCrn)\n+                    .findAllByEnvironment(environmentCrn)", "originalCommit": "0467a61aae16e616e13c6e4145f3fb2a614d2324", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MTQ4NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500551484", "bodyText": "Yes, it could be valid, but:\n\nonly one place where this is called: ClusterTemplateV4Controller.deleteMultiple -> ClusterTemplateService.findAllByEnvironment -> and call this function\nif you see the deleteMultiple function, we never use the name:\n\nNameOrCrn environmentNameOrCrn = NameOrCrn.ofCrn(environmentCrn);\nSet<String> namesByEnv = clusterTemplateService\n        .findAllByEnvironment(environmentNameOrCrn)\n        .stream()\n        .map(ClusterTemplate::getName)\n        .collect(toSet());\n\n\nand this chain references causes this:\nenv service call multiple delete with crn -> we fetch the detailed env with this crn -> and use the name and crn to log , does not look good.\n\nI think nobody call with name because of last change about there January 2020.", "author": "topolyai5", "createdAt": "2020-10-06T19:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzNTQ5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MzYyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9158#discussion_r500553626", "bodyText": "I have nothing against removing the usage of NameOrCrn from this method, my comment just pointed to the fact that we shouldn't let unused method arguments as we do in this case after this change", "author": "gregito", "createdAt": "2020-10-06T19:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzNTQ5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "dd1e0ec6133ee6cf930023406d9f16f3007bceb4", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/ClusterTemplateV4Controller.java b/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/ClusterTemplateV4Controller.java\nindex 82f8f551d3..d528cd5dc0 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/ClusterTemplateV4Controller.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/ClusterTemplateV4Controller.java\n\n@@ -143,7 +141,7 @@ public class ClusterTemplateV4Controller extends NotificationController implemen\n \n     @Override\n     @CheckPermissionByResourceNameList(action = AuthorizationResourceAction.DELETE_CLUSTER_DEFINITION)\n-    public ClusterTemplateV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names, String environmentName, String environmentCrn) {\n+    public ClusterTemplateV4Responses deleteMultiple(Long workspaceId, @ResourceNameList Set<String> names, String environmentCrn) {\n         Set<ClusterTemplate> clusterTemplates;\n         if (Objects.nonNull(names) && !names.isEmpty()) {\n             clusterTemplates = clusterTemplateService.deleteMultiple(names, workspaceId);\n"}}, {"oid": "99cbd1ab03d23dd8ed532e74e593996c94b9e9d8", "url": "https://github.com/hortonworks/cloudbreak/commit/99cbd1ab03d23dd8ed532e74e593996c94b9e9d8", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-07T12:05:57Z", "type": "forcePushed"}, {"oid": "dd1e0ec6133ee6cf930023406d9f16f3007bceb4", "url": "https://github.com/hortonworks/cloudbreak/commit/dd1e0ec6133ee6cf930023406d9f16f3007bceb4", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-12T11:41:31Z", "type": "forcePushed"}, {"oid": "6a8f20e898874a48c9f91c8686cf280c79e5b88b", "url": "https://github.com/hortonworks/cloudbreak/commit/6a8f20e898874a48c9f91c8686cf280c79e5b88b", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-12T14:05:03Z", "type": "forcePushed"}, {"oid": "a10aefbaea040ee77fe9cd775c964d7f76123a3d", "url": "https://github.com/hortonworks/cloudbreak/commit/a10aefbaea040ee77fe9cd775c964d7f76123a3d", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T16:31:45Z", "type": "forcePushed"}, {"oid": "6d24189bd4710f56c7bdace49e17ab3aad0ef337", "url": "https://github.com/hortonworks/cloudbreak/commit/6d24189bd4710f56c7bdace49e17ab3aad0ef337", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T18:14:30Z", "type": "forcePushed"}, {"oid": "b54f6915fb6a2ac316bea880fa4f4753beb8b46f", "url": "https://github.com/hortonworks/cloudbreak/commit/b54f6915fb6a2ac316bea880fa4f4753beb8b46f", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T18:22:24Z", "type": "forcePushed"}, {"oid": "1b22ead6bf16e0c28a05abcc3f111d2e920844db", "url": "https://github.com/hortonworks/cloudbreak/commit/1b22ead6bf16e0c28a05abcc3f111d2e920844db", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T18:23:26Z", "type": "forcePushed"}, {"oid": "2a7294e67fd347c57c11b9ad4f98b5d27e647198", "url": "https://github.com/hortonworks/cloudbreak/commit/2a7294e67fd347c57c11b9ad4f98b5d27e647198", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T18:45:09Z", "type": "forcePushed"}, {"oid": "f08bc7b2d3db7650427a0a20edc9aa7b237a0fa5", "url": "https://github.com/hortonworks/cloudbreak/commit/f08bc7b2d3db7650427a0a20edc9aa7b237a0fa5", "message": "test commit", "committedDate": "2020-10-19T19:58:23Z", "type": "forcePushed"}, {"oid": "580bdc86945b0153facd889e77b0e586188e14ec", "url": "https://github.com/hortonworks/cloudbreak/commit/580bdc86945b0153facd889e77b0e586188e14ec", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-19T20:43:39Z", "type": "forcePushed"}, {"oid": "6dd5e9e763107c5ba964f8ca301f2e480e463aa7", "url": "https://github.com/hortonworks/cloudbreak/commit/6dd5e9e763107c5ba964f8ca301f2e480e463aa7", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-20T06:52:41Z", "type": "forcePushed"}, {"oid": "da54eea04091a16b81a02ece426afbc7a533019f", "url": "https://github.com/hortonworks/cloudbreak/commit/da54eea04091a16b81a02ece426afbc7a533019f", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-20T07:53:02Z", "type": "forcePushed"}, {"oid": "0f616a4b658c87161737103c2600898253254493", "url": "https://github.com/hortonworks/cloudbreak/commit/0f616a4b658c87161737103c2600898253254493", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-20T09:13:37Z", "type": "commit"}, {"oid": "0f616a4b658c87161737103c2600898253254493", "url": "https://github.com/hortonworks/cloudbreak/commit/0f616a4b658c87161737103c2600898253254493", "message": "CB-8982 Indefinitely long loop when deleting environment. When we fetched the cluster definition, we checked the default templates but this step was unnecessary, because we should delete the user managed only.", "committedDate": "2020-10-20T09:13:37Z", "type": "forcePushed"}]}