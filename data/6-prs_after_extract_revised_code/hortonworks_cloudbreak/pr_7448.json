{"pr_number": 7448, "pr_title": "[RE::] CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "pr_createdAt": "2020-03-03T12:52:24Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7448", "timeline": [{"oid": "c3487a57f5592ecadd783cfab58f7cf9e78271b6", "url": "https://github.com/hortonworks/cloudbreak/commit/c3487a57f5592ecadd783cfab58f7cf9e78271b6", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-03T14:28:38Z", "type": "forcePushed"}, {"oid": "644369091aef591dd85497f372adf9a38b2284c1", "url": "https://github.com/hortonworks/cloudbreak/commit/644369091aef591dd85497f372adf9a38b2284c1", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-04T10:11:33Z", "type": "forcePushed"}, {"oid": "bac222abe8c0abb562d0d2c68f452acfb082ad7f", "url": "https://github.com/hortonworks/cloudbreak/commit/bac222abe8c0abb562d0d2c68f452acfb082ad7f", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-04T10:51:00Z", "type": "forcePushed"}, {"oid": "01ea124af29052041439a4d316165c0c330236b6", "url": "https://github.com/hortonworks/cloudbreak/commit/01ea124af29052041439a4d316165c0c330236b6", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-04T12:16:33Z", "type": "forcePushed"}, {"oid": "d20763c05cf3a4ee2ef888f7ee2436c3eceec130", "url": "https://github.com/hortonworks/cloudbreak/commit/d20763c05cf3a4ee2ef888f7ee2436c3eceec130", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-04T16:58:53Z", "type": "forcePushed"}, {"oid": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "url": "https://github.com/hortonworks/cloudbreak/commit/24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-04T17:16:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODM1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388168353", "bodyText": "why do you set the network here?", "author": "topolyai5", "createdAt": "2020-03-05T09:24:20Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MzU3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193577", "bodyText": "see below", "author": "gregito", "createdAt": "2020-03-05T10:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODM1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "085b80c2355fa80154972c2a1dde7226ce8086ed", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java b/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\nindex 69bdfed0bf..35272bb6b0 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\n\n@@ -74,12 +58,6 @@ public class EnvironmentValidationHandler extends EventSenderAwareHandler<Enviro\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n                                 } else {\n-                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n-                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n-                                            environmentDto.getNetwork()));\n-                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n-                                            environmentDto.getNetwork().getSubnetMetas());\n-                                    environmentService.save(environment);\n                                     goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n                             } catch (WebApplicationException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388168839", "bodyText": "why do you set the parent env here?", "author": "topolyai5", "createdAt": "2020-03-05T09:25:09Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java", "diffHunk": "@@ -57,20 +73,36 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                                 validationResult = validationResult.merge(validatorService.validateNetworkWithProvider(environmentDto));\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n+                                } else {\n+                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n+                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n+                                            environmentDto.getNetwork()));\n+                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n+                                            environmentDto.getNetwork().getSubnetMetas());\n+                                    environmentService.save(environment);\n+                                    goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n-                                goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                             } catch (WebApplicationException e) {\n                                 String responseMessage = webApplicationExceptionMessageExtractor.getErrorMessage(e);\n                                 goToFailedState(environmentDtoEvent, e.getMessage() + \". \" + responseMessage);\n                             } catch (Exception e) {\n                                 goToFailedState(environmentDtoEvent, e.getMessage());\n                             }\n-                        }, () -> {\n-                            goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()));\n-                        }\n+                        }, () -> goToFailedState(environmentDtoEvent, String.format(\"Environment was not found with id '%s'.\", environmentDto.getId()))\n                 );\n     }\n \n+    private void setChildEnvironmentNetworkIfItHasParent(EnvironmentDto currentEnvDto) {", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MzM4Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193386", "bodyText": "since from now, we're not setting all the network params (e.g. subnet metas) until this step, and the child env's network has to be the same as far as I know as the parent", "author": "gregito", "createdAt": "2020-03-05T10:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NTMxMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388195311", "bodyText": "it is not a proper solution, it is a validator, the validator should validate smgt and does not set other things. hard to find later", "author": "topolyai5", "createdAt": "2020-03-05T10:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5ODgwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388198803", "bodyText": "make sense, I'll look for some other approach for this state change stuff", "author": "gregito", "createdAt": "2020-03-05T10:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "085b80c2355fa80154972c2a1dde7226ce8086ed", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java b/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\nindex 69bdfed0bf..35272bb6b0 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentValidationHandler.java\n\n@@ -74,12 +58,6 @@ public class EnvironmentValidationHandler extends EventSenderAwareHandler<Enviro\n                                 if (validationResult.hasError()) {\n                                     goToFailedState(environmentDtoEvent, validationResult.getFormattedErrors());\n                                 } else {\n-                                    setChildEnvironmentNetworkIfItHasParent(environmentDto);\n-                                    environmentDto.getNetwork().setSubnetMetas(cloudNetworkService.retrieveSubnetMetadata(environmentDto,\n-                                            environmentDto.getNetwork()));\n-                                    environmentResourceService.createAndSetNetwork(environment, environmentDto.getNetwork(), environment.getAccountId(),\n-                                            environmentDto.getNetwork().getSubnetMetas());\n-                                    environmentService.save(environment);\n                                     goToNetworkCreationState(environmentDtoEvent, environmentDto);\n                                 }\n                             } catch (WebApplicationException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388169830", "bodyText": "I do not see any difference from getIfNotNull", "author": "topolyai5", "createdAt": "2020-03-05T09:26:50Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java", "diffHunk": "@@ -106,11 +107,11 @@ public EnvironmentDto create(EnvironmentCreationDto creationDto) {\n             environmentService.setAdminGroupName(environment, creationDto.getAdminGroupName());\n         }\n         CloudRegions cloudRegions = setLocationAndRegions(creationDto, environment);\n-        Map<String, CloudSubnet> subnetMetas = networkService.retrieveSubnetMetadata(environment, creationDto.getNetwork());\n-        validateCreation(creationDto, environment, cloudRegions, subnetMetas);\n+        validateCreation(creationDto, environment, cloudRegions);\n         try {\n             environment = environmentService.save(environment);\n-            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(), subnetMetas);\n+            environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(),\n+                    getIfNotNullOtherwise(creationDto.getNetwork(), NetworkDto::getSubnetMetas, null));", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NDY2OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388194669", "bodyText": "does it make any issue?", "author": "gregito", "createdAt": "2020-03-05T10:10:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5Njg0Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388196846", "bodyText": "no, but you should reuse the existing code.", "author": "topolyai5", "createdAt": "2020-03-05T10:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTgzMA=="}], "type": "inlineReview", "revised_code": {"commit": "085b80c2355fa80154972c2a1dde7226ce8086ed", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java b/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java\nindex 9255025fce..faff9ba3e9 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentCreationService.java\n\n@@ -111,7 +106,7 @@ public class EnvironmentCreationService {\n         try {\n             environment = environmentService.save(environment);\n             environmentResourceService.createAndSetNetwork(environment, creationDto.getNetwork(), creationDto.getAccountId(),\n-                    getIfNotNullOtherwise(creationDto.getNetwork(), NetworkDto::getSubnetMetas, null));\n+                    getIfNotNull(creationDto.getNetwork(), NetworkDto::getSubnetMetas));\n             createAndSetParameters(environment, creationDto.getParameters());\n             environmentService.save(environment);\n             reactorFlowManager.triggerCreationFlow(environment.getId(), environment.getName(), creationDto.getCreator(), environment.getResourceCrn());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDcwMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388170702", "bodyText": "unnecessary line break", "author": "topolyai5", "createdAt": "2020-03-05T09:28:26Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java", "diffHunk": "@@ -293,4 +293,5 @@ public AuthorizationResourceType getResourceType() {\n     public List<Environment> findAllByAccountIdAndParentEnvIdAndArchivedIsFalse(String accountId, Long parentEnvironmentId) {\n         return environmentRepository.findAllByAccountIdAndParentEnvIdAndArchivedIsFalse(accountId, parentEnvironmentId);\n     }\n+", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b29b602855179d24a72eca6db71556967b328a83", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java b/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java\nindex 460467d2d6..fe4348bf70 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/service/EnvironmentService.java\n\n@@ -294,4 +289,19 @@ public class EnvironmentService implements ResourceIdProvider, ResourceBasedCrnP\n         return environmentRepository.findAllByAccountIdAndParentEnvIdAndArchivedIsFalse(accountId, parentEnvironmentId);\n     }\n \n+    public void assignEnvironmentAdminRole(String userCrn, String environmentCrn) {\n+        try {\n+            grpcUmsClient.assignResourceRole(userCrn, environmentCrn, grpcUmsClient.getBuiltInEnvironmentAdminResourceRoleCrn(), MDCUtils.getRequestId());\n+            LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is successfully assigned to the {} user\", environmentCrn, userCrn);\n+        } catch (StatusRuntimeException ex) {\n+            if (Status.Code.ALREADY_EXISTS.equals(ex.getStatus().getCode())) {\n+                LOGGER.debug(\"EnvironmentAdmin role of {} environemnt is already assigned to the {} user\", environmentCrn, userCrn);\n+            } else {\n+                LOGGER.warn(String.format(\"EnvironmentAdmin role of %s environment cannot be assigned to the %s user\", environmentCrn, userCrn), ex);\n+            }\n+        } catch (RuntimeException rex) {\n+            LOGGER.warn(String.format(\"EnvironmentAdmin role of %s environment cannot be assigned to the %s user\", environmentCrn, userCrn), rex);\n+        }\n+    }\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388188114", "bodyText": "the env edit will not work correctly, please test that function as well", "author": "topolyai5", "createdAt": "2020-03-05T09:58:40Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java", "diffHunk": "@@ -71,18 +63,22 @@ public void validateDuringRequest(\n         }\n     }\n \n+    @Override\n+    public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5Mzk0Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388193942", "bodyText": "why not? how should this edit feature work in this context?", "author": "gregito", "createdAt": "2020-03-05T10:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NTkxMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388195913", "bodyText": "The network edit uses the same validation process without flow. We validated the network edit in request time", "author": "topolyai5", "createdAt": "2020-03-05T10:13:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5NzI1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388197253", "bodyText": "does it have any step which requires provider side communication? if yes, I have to say then the edit function was implemented improperly and it has to be fixed. if not, then it should do its job", "author": "gregito", "createdAt": "2020-03-05T10:15:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5OTMyMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388199323", "bodyText": "The edit function does not use flow even if it has any provider side communications. If you want this functionality, talk with Ricsi.", "author": "topolyai5", "createdAt": "2020-03-05T10:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4ODExNA=="}], "type": "inlineReview", "revised_code": {"commit": "e06cd4f2e8cbf5c8383d0ab97753bd155ec65590", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java b/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java\nindex fc8b9b0a73..4a722ae7bf 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AwsEnvironmentNetworkValidator.java\n\n@@ -65,7 +66,8 @@ public class AwsEnvironmentNetworkValidator implements EnvironmentNetworkValidat\n \n     @Override\n     public void validateDuringRequest(NetworkDto networkDto, ValidationResultBuilder resultBuilder) {\n-        if (networkDto != null) {\n+        if (networkDto != null && isNetworkExisting(networkDto)) {\n+            LOGGER.debug(\"Validation - existing - AWS network param(s) during requiest time\");\n             if (networkDto.getAws() != null) {\n                 if (StringUtils.isEmpty(networkDto.getAws().getVpcId())) {\n                     resultBuilder.error(missingParamErrorMessage(\"VPC identifier(vpcId)\", getCloudPlatform().name()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NjAxMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388246012", "bodyText": "this is the same code as the overloaded method below", "author": "bergerdenes", "createdAt": "2020-03-05T11:52:09Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java", "diffHunk": "@@ -43,12 +41,22 @@ public ValidationResultBuilder validateNetworkEdit(Environment environment, Netw\n         return resultBuilder;\n     }\n \n+    private void validateNetwork(Environment environment, NetworkDto network, ValidationResultBuilder resultBuilder) {\n+        if (network != null) {\n+            EnvironmentNetworkValidator environmentNetworkValidator =\n+                    environmentNetworkValidatorsByCloudPlatform.get(CloudPlatform.valueOf(environment.getCloudPlatform().toUpperCase()));\n+            if (environmentNetworkValidator != null) {\n+                environmentNetworkValidator.validateDuringRequest(network, resultBuilder);\n+            }\n+        }\n+    }\n+", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5NjM5OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388296399", "bodyText": "it's about to change due to gtopolyai's request", "author": "gregito", "createdAt": "2020-03-05T13:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NjAxMg=="}], "type": "inlineReview", "revised_code": {"commit": "085b80c2355fa80154972c2a1dde7226ce8086ed", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java\nindex e1c1766337..099085d754 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/NetworkCreationValidator.java\n\n@@ -34,10 +37,10 @@ public class NetworkCreationValidator {\n         return resultBuilder;\n     }\n \n-    public ValidationResultBuilder validateNetworkEdit(Environment environment, NetworkDto network, Map<String, CloudSubnet> subnetMetas) {\n+    public ValidationResultBuilder validateNetworkEdit(Environment environment, NetworkDto network) {\n         ValidationResultBuilder resultBuilder = new ValidationResultBuilder();\n         resultBuilder.prefix(\"Cannot edit environment\");\n-        validateNetwork(environment, network, subnetMetas, resultBuilder);\n+        validateNetworkToEdit(environment, network, resultBuilder);\n         return resultBuilder;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0NzM5OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7448#discussion_r388247399", "bodyText": "you could return after Line# 95", "author": "bergerdenes", "createdAt": "2020-03-05T11:55:17Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java", "diffHunk": "@@ -88,14 +88,20 @@ private void evaluateProviderNetworkRelation(boolean networkParamExists, String\n         return Optional.ofNullable(o);\n     }\n \n-    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder) {\n-        if (networkDto != null && Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n-            EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n-            if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n-                resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder, EnvironmentDto environmentDto) {\n+        if (networkDto != null) {\n+            if (Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n+                if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n+                    resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+                }\n+            }\n+            if (resultBuilder.build().hasError()) {\n+                return;", "originalCommit": "24d66902ff71ec85ec980b6b6a25d51a1619ca0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "085b80c2355fa80154972c2a1dde7226ce8086ed", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\nindex f27a369a65..329d3860ae 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\n\n@@ -90,12 +90,8 @@ public class EnvironmentNetworkProviderValidator {\n \n     private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder, EnvironmentDto environmentDto) {\n         if (networkDto != null) {\n-            if (Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n-                if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n-                    resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n-                }\n-            }\n-            if (resultBuilder.build().hasError()) {\n+            if (isNullOrEmpty(networkDto.getNetworkCidr()) && (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr()))) {\n+                resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n                 return;\n             }\n             EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n"}}, {"oid": "085b80c2355fa80154972c2a1dde7226ce8086ed", "url": "https://github.com/hortonworks/cloudbreak/commit/085b80c2355fa80154972c2a1dde7226ce8086ed", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-09T10:41:38Z", "type": "forcePushed"}, {"oid": "e9cac35d0451edca8d4c0dbe90508b1fa240fd5e", "url": "https://github.com/hortonworks/cloudbreak/commit/e9cac35d0451edca8d4c0dbe90508b1fa240fd5e", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-09T10:42:28Z", "type": "forcePushed"}, {"oid": "f72ea3eede5bec6575347cdccc6768df7d48f4a8", "url": "https://github.com/hortonworks/cloudbreak/commit/f72ea3eede5bec6575347cdccc6768df7d48f4a8", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-10T10:38:01Z", "type": "forcePushed"}, {"oid": "7f17bc0f00c8ad1edb53288c13d6ee7012ed6879", "url": "https://github.com/hortonworks/cloudbreak/commit/7f17bc0f00c8ad1edb53288c13d6ee7012ed6879", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-12T11:47:24Z", "type": "forcePushed"}, {"oid": "71a3922c23517f115e3f60bbd0e5d0c46421f6d7", "url": "https://github.com/hortonworks/cloudbreak/commit/71a3922c23517f115e3f60bbd0e5d0c46421f6d7", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-12T12:35:58Z", "type": "forcePushed"}, {"oid": "693e2056271db22df9c8e9451873e93f009df437", "url": "https://github.com/hortonworks/cloudbreak/commit/693e2056271db22df9c8e9451873e93f009df437", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-16T10:05:00Z", "type": "forcePushed"}, {"oid": "3f209175d7492e37055998028dcd841aafab8062", "url": "https://github.com/hortonworks/cloudbreak/commit/3f209175d7492e37055998028dcd841aafab8062", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-16T12:01:40Z", "type": "forcePushed"}, {"oid": "e06cd4f2e8cbf5c8383d0ab97753bd155ec65590", "url": "https://github.com/hortonworks/cloudbreak/commit/e06cd4f2e8cbf5c8383d0ab97753bd155ec65590", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-16T21:57:03Z", "type": "forcePushed"}, {"oid": "b29b602855179d24a72eca6db71556967b328a83", "url": "https://github.com/hortonworks/cloudbreak/commit/b29b602855179d24a72eca6db71556967b328a83", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-18T15:03:19Z", "type": "commit"}, {"oid": "b29b602855179d24a72eca6db71556967b328a83", "url": "https://github.com/hortonworks/cloudbreak/commit/b29b602855179d24a72eca6db71556967b328a83", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-03-18T15:03:19Z", "type": "forcePushed"}]}