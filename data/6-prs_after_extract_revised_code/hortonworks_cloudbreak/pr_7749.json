{"pr_number": 7749, "pr_title": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "pr_createdAt": "2020-04-06T12:56:24Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7749", "timeline": [{"oid": "1c004e7aaa27c153eb8b142eebb4c978fc1cb3fe", "url": "https://github.com/hortonworks/cloudbreak/commit/1c004e7aaa27c153eb8b142eebb4c978fc1cb3fe", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-06T13:25:29Z", "type": "forcePushed"}, {"oid": "26b5dbb4badec244782cafb94916e8ee8dcacc05", "url": "https://github.com/hortonworks/cloudbreak/commit/26b5dbb4badec244782cafb94916e8ee8dcacc05", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-06T13:52:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0ODUzNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7749#discussion_r404648534", "bodyText": "Wouldn't it be better to put this logic whole in to our custom Logger class, and it would accept a throwable as a parameter?", "author": "lnardai", "createdAt": "2020-04-07T08:57:43Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -30,8 +32,20 @@ public void onTestFailure(ITestResult tr) {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        Throwable throwable = tr.getThrowable();\n-        Log.log(throwable.getMessage());\n+        if (tr.getThrowable() != null) {", "originalCommit": "26b5dbb4badec244782cafb94916e8ee8dcacc05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b96071f0e15f092e6f80d25d65da2c3282861681", "chunk": "diff --git a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\nindex 07b456c5f2..da8e7ec61c 100644\n--- a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n+++ b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n\n@@ -32,20 +31,7 @@ public class ReportListener extends TestListenerAdapter {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        if (tr.getThrowable() != null) {\n-            try {\n-                final Throwable testResultThrowable = tr.getThrowable();\n-                String message = testResultThrowable.getMessage() != null ? testResultThrowable.getMessage() : testResultThrowable.getCause().getMessage();\n-\n-                if (message == null || message.isEmpty()) {\n-                    Log.log(LOGGER, format(\" Test Case: %s have been failed! \", tr.getMethod().toString()));\n-                } else {\n-                    Log.log(message);\n-                }\n-            } catch (Exception e) {\n-                Log.log(LOGGER, format(\" %s got Unexpected Exception: %s \", tr.getMethod().toString(), e.getMessage()));\n-            }\n-        }\n+        log(tr);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0OTIyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7749#discussion_r404649226", "bodyText": "toString is not required.", "author": "lnardai", "createdAt": "2020-04-07T08:58:43Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -30,8 +32,20 @@ public void onTestFailure(ITestResult tr) {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        Throwable throwable = tr.getThrowable();\n-        Log.log(throwable.getMessage());\n+        if (tr.getThrowable() != null) {\n+            try {\n+                final Throwable testResultThrowable = tr.getThrowable();\n+                String message = testResultThrowable.getMessage() != null ? testResultThrowable.getMessage() : testResultThrowable.getCause().getMessage();\n+\n+                if (message == null || message.isEmpty()) {\n+                    Log.log(LOGGER, format(\" Test Case: %s have been failed! \", tr.getMethod().toString()));\n+                } else {\n+                    Log.log(message);\n+                }\n+            } catch (Exception e) {\n+                Log.log(LOGGER, format(\" %s got Unexpected Exception: %s \", tr.getMethod().toString(), e.getMessage()));", "originalCommit": "26b5dbb4badec244782cafb94916e8ee8dcacc05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b96071f0e15f092e6f80d25d65da2c3282861681", "chunk": "diff --git a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\nindex 07b456c5f2..da8e7ec61c 100644\n--- a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n+++ b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n\n@@ -32,20 +31,7 @@ public class ReportListener extends TestListenerAdapter {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        if (tr.getThrowable() != null) {\n-            try {\n-                final Throwable testResultThrowable = tr.getThrowable();\n-                String message = testResultThrowable.getMessage() != null ? testResultThrowable.getMessage() : testResultThrowable.getCause().getMessage();\n-\n-                if (message == null || message.isEmpty()) {\n-                    Log.log(LOGGER, format(\" Test Case: %s have been failed! \", tr.getMethod().toString()));\n-                } else {\n-                    Log.log(message);\n-                }\n-            } catch (Exception e) {\n-                Log.log(LOGGER, format(\" %s got Unexpected Exception: %s \", tr.getMethod().toString(), e.getMessage()));\n-            }\n-        }\n+        log(tr);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0OTM4Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7749#discussion_r404649387", "bodyText": "toString is not required", "author": "lnardai", "createdAt": "2020-04-07T08:58:58Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java", "diffHunk": "@@ -30,8 +32,20 @@ public void onTestFailure(ITestResult tr) {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        Throwable throwable = tr.getThrowable();\n-        Log.log(throwable.getMessage());\n+        if (tr.getThrowable() != null) {\n+            try {\n+                final Throwable testResultThrowable = tr.getThrowable();\n+                String message = testResultThrowable.getMessage() != null ? testResultThrowable.getMessage() : testResultThrowable.getCause().getMessage();\n+\n+                if (message == null || message.isEmpty()) {\n+                    Log.log(LOGGER, format(\" Test Case: %s have been failed! \", tr.getMethod().toString()));", "originalCommit": "26b5dbb4badec244782cafb94916e8ee8dcacc05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b96071f0e15f092e6f80d25d65da2c3282861681", "chunk": "diff --git a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\nindex 07b456c5f2..da8e7ec61c 100644\n--- a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n+++ b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/listener/ReportListener.java\n\n@@ -32,20 +31,7 @@ public class ReportListener extends TestListenerAdapter {\n         super.onTestFailure(tr);\n         logUrl(tr);\n         logMeasurements(tr);\n-        if (tr.getThrowable() != null) {\n-            try {\n-                final Throwable testResultThrowable = tr.getThrowable();\n-                String message = testResultThrowable.getMessage() != null ? testResultThrowable.getMessage() : testResultThrowable.getCause().getMessage();\n-\n-                if (message == null || message.isEmpty()) {\n-                    Log.log(LOGGER, format(\" Test Case: %s have been failed! \", tr.getMethod().toString()));\n-                } else {\n-                    Log.log(message);\n-                }\n-            } catch (Exception e) {\n-                Log.log(LOGGER, format(\" %s got Unexpected Exception: %s \", tr.getMethod().toString(), e.getMessage()));\n-            }\n-        }\n+        log(tr);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY1MzQ4Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7749#discussion_r404653483", "bodyText": "If it's not a hassle, can you also log the current status the resource is in? Please make sure this is done for all other newly added log messages.", "author": "lnardai", "createdAt": "2020-04-07T09:05:30Z", "path": "integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/WaitUtil.java", "diffHunk": "@@ -300,9 +300,11 @@ private boolean checkFailedStatuses(EnvironmentStatus currentStatus) {\n             if (databaseServerResponse != null && databaseServerResponse.getStatus() != null) {\n                 builder.append(\"statusReason: \").append(databaseServerResponse.getStatusReason());\n             }\n-            throw new RuntimeException(builder.toString());\n+            LOGGER.error(builder.toString());\n+            throw new TestFailException(builder.toString());\n         } else if (waitResult == WaitResult.TIMEOUT) {\n-            throw new RuntimeException(\"Timeout happened\");\n+            LOGGER.error(\"Timeout happened while waiting for {} status at {}\", desiredStatus.name(), crn);", "originalCommit": "26b5dbb4badec244782cafb94916e8ee8dcacc05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b96071f0e15f092e6f80d25d65da2c3282861681", "chunk": "diff --git a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/WaitUtil.java b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/WaitUtil.java\nindex 0290e94b4a..cf5f65eeeb 100644\n--- a/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/WaitUtil.java\n+++ b/integration-test/src/main/java/com/sequenceiq/it/cloudbreak/util/wait/WaitUtil.java\n\n@@ -294,19 +294,20 @@ public class WaitUtil {\n         for (int retryBecauseOfWrongStatusHandlingInCB = 0; retryBecauseOfWrongStatusHandlingInCB < 3; retryBecauseOfWrongStatusHandlingInCB++) {\n             waitResult = waitForStatuses(redbeamsClient, crn, desiredStatus);\n         }\n+        DatabaseServerV4Response databaseServerResponse = redbeamsClient.getEndpoints().databaseServerV4Endpoint().getByCrn(crn);\n         if (waitResult == WaitResult.FAILED) {\n             StringBuilder builder = new StringBuilder(\"The stack has failed: \").append(System.lineSeparator());\n-            DatabaseServerV4Response databaseServerResponse = redbeamsClient.getEndpoints().databaseServerV4Endpoint().getByCrn(crn);\n             if (databaseServerResponse != null && databaseServerResponse.getStatus() != null) {\n                 builder.append(\"statusReason: \").append(databaseServerResponse.getStatusReason());\n             }\n             LOGGER.error(builder.toString());\n             throw new TestFailException(builder.toString());\n         } else if (waitResult == WaitResult.TIMEOUT) {\n-            LOGGER.error(\"Timeout happened while waiting for {} status at {}\", desiredStatus.name(), crn);\n-            throw new TestFailException(\"Timeout happened while waiting for \" + desiredStatus.name() + \" status at \" + crn);\n+            LOGGER.error(\"Timeout happened while waiting for {} status at {}, the current status is {}\", desiredStatus.name(), crn,\n+                    databaseServerResponse.getStatus().name());\n+            throw new TestFailException(\"Timeout happened while waiting for \" + desiredStatus.name() + \" status at \" + crn + \", the current status is \"\n+                    + databaseServerResponse.getStatus().name());\n         } else if (Status.DELETE_COMPLETED != desiredStatus) {\n-            DatabaseServerV4Response databaseServerResponse = redbeamsClient.getEndpoints().databaseServerV4Endpoint().getByCrn(crn);\n             if (databaseServerResponse != null) {\n                 errors = Map.of(\"status\", databaseServerResponse.getStatus().name());\n             }\n"}}, {"oid": "b96071f0e15f092e6f80d25d65da2c3282861681", "url": "https://github.com/hortonworks/cloudbreak/commit/b96071f0e15f092e6f80d25d65da2c3282861681", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T14:51:03Z", "type": "forcePushed"}, {"oid": "33ece8b9fd76b5581f8f9518cf2468481d6abfd5", "url": "https://github.com/hortonworks/cloudbreak/commit/33ece8b9fd76b5581f8f9518cf2468481d6abfd5", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T14:52:28Z", "type": "commit"}, {"oid": "33ece8b9fd76b5581f8f9518cf2468481d6abfd5", "url": "https://github.com/hortonworks/cloudbreak/commit/33ece8b9fd76b5581f8f9518cf2468481d6abfd5", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T14:52:28Z", "type": "forcePushed"}, {"oid": "db965cd9b3d2e5b353ca38b88c9ae6670c871cf3", "url": "https://github.com/hortonworks/cloudbreak/commit/db965cd9b3d2e5b353ca38b88c9ae6670c871cf3", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T20:20:58Z", "type": "forcePushed"}, {"oid": "9dabf671a8de682e0212225a59f2426b2386250c", "url": "https://github.com/hortonworks/cloudbreak/commit/9dabf671a8de682e0212225a59f2426b2386250c", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T20:25:01Z", "type": "forcePushed"}, {"oid": "93dd3d685f865e71e1211cce5b913d76882a5e17", "url": "https://github.com/hortonworks/cloudbreak/commit/93dd3d685f865e71e1211cce5b913d76882a5e17", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T21:18:56Z", "type": "commit"}, {"oid": "93dd3d685f865e71e1211cce5b913d76882a5e17", "url": "https://github.com/hortonworks/cloudbreak/commit/93dd3d685f865e71e1211cce5b913d76882a5e17", "message": "CB-6464 Fixing OnTestFailure ReportListener NullPointerException", "committedDate": "2020-04-07T21:18:56Z", "type": "forcePushed"}]}