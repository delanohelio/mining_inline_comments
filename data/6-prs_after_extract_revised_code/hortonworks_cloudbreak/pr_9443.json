{"pr_number": 9443, "pr_title": "CB-9715 Skip image filtering based on upgrade matrix in case of datahub upgrade", "pr_createdAt": "2020-11-16T20:29:33Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9443", "timeline": [{"oid": "cf855287992b672f84f3047f655b7377e9efbb71", "url": "https://github.com/hortonworks/cloudbreak/commit/cf855287992b672f84f3047f655b7377e9efbb71", "message": "CB-9715 Skip image filtering based on upgrade matrix in case of datahub upgrade", "committedDate": "2020-11-16T20:42:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4NDM0Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527684343", "bodyText": "all of these could be final", "author": "pdarvasi", "createdAt": "2020-11-20T13:18:36Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.cloudbreak.service.upgrade.image;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.catalog.Image;\n+\n+public class ImageFilterParams {\n+    private Image currentImage;", "originalCommit": "cf855287992b672f84f3047f655b7377e9efbb71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5623db55a325b429340f0c3922dc7be3977e1918", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java\nindex e30e6ce007..0a0f2c4bf9 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/image/ImageFilterParams.java\n\n@@ -6,13 +6,13 @@ import java.util.Objects;\n import com.sequenceiq.cloudbreak.cloud.model.catalog.Image;\n \n public class ImageFilterParams {\n-    private Image currentImage;\n+    private final Image currentImage;\n \n-    private boolean lockComponents;\n+    private final boolean lockComponents;\n \n-    private Map<String, String> activatedParcels;\n+    private final Map<String, String> activatedParcels;\n \n-    private boolean checkUpgradeMatrix;\n+    private final boolean checkUpgradeMatrix;\n \n     public ImageFilterParams(Image currentImage, boolean lockComponents, Map<String, String> activatedParcels, boolean checkUpgradeMatrix) {\n         this.currentImage = currentImage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4Nzc0OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527687749", "bodyText": "!checkUpgradeMatrix is not part of the permit logic hence I would extract it to the containing method:\npermitByComponentVersion(currentVersion, newVersion) && (!checkUpgradeMatrix || permitByUpgradeMatrix(currentVersion, newVersion, checkUpgradeMatrix) );", "author": "pdarvasi", "createdAt": "2020-11-20T13:24:40Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java", "diffHunk": "@@ -44,15 +45,15 @@ private boolean permitCmAndStackUpgradeByBuildNumber(Image currentImage, Image i\n         return componentBuildNumberComparator.compare(currentImage, image, buildNumberKey);\n     }\n \n-    boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion) {\n-        return permitByComponentVersion(currentVersion, newVersion) && permitByUpgradeMatrix(currentVersion, newVersion);\n+    boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n+        return permitByComponentVersion(currentVersion, newVersion) && permitByUpgradeMatrix(currentVersion, newVersion, checkUpgradeMatrix);\n     }\n \n     private boolean permitByComponentVersion(String currentVersion, String newVersion) {\n         return componentVersionComparator.permitCmAndStackUpgradeByComponentVersion(currentVersion, newVersion);\n     }\n \n-    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion) {\n-        return upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);\n+    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n+        return !checkUpgradeMatrix || upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);", "originalCommit": "cf855287992b672f84f3047f655b7377e9efbb71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5623db55a325b429340f0c3922dc7be3977e1918", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java\nindex 2fd649763f..9e8df011c1 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProvider.java\n\n@@ -46,14 +46,15 @@ public class UpgradePermissionProvider {\n     }\n \n     boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n-        return permitByComponentVersion(currentVersion, newVersion) && permitByUpgradeMatrix(currentVersion, newVersion, checkUpgradeMatrix);\n+        return permitByComponentVersion(currentVersion, newVersion)\n+                && (!checkUpgradeMatrix || permitByUpgradeMatrix(currentVersion, newVersion));\n     }\n \n     private boolean permitByComponentVersion(String currentVersion, String newVersion) {\n         return componentVersionComparator.permitCmAndStackUpgradeByComponentVersion(currentVersion, newVersion);\n     }\n \n-    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion, boolean checkUpgradeMatrix) {\n-        return !checkUpgradeMatrix || upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);\n+    private boolean permitByUpgradeMatrix(String currentVersion, String newVersion) {\n+        return upgradeMatrixService.permitByUpgradeMatrix(currentVersion, newVersion);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5MDU3Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/9443#discussion_r527690576", "bodyText": "Could you pls add a test covering checkUpgradeMatrix=false here?", "author": "pdarvasi", "createdAt": "2020-11-20T13:29:31Z", "path": "core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java", "diffHunk": "@@ -107,11 +112,12 @@ public void testPermitUpgradeShouldReturnFalseWhenTheUpgradeNotPermittedByTheUpg\n         String targetVersion = \"7.2.2\";\n         Image currentImage = createImage(currentVersion, \"2002\");\n         Image candidateImage = createImage(targetVersion, \"2001\");\n+        ImageFilterParams imageFilterParams = new ImageFilterParams(currentImage, true, Map.of(), true);", "originalCommit": "cf855287992b672f84f3047f655b7377e9efbb71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5623db55a325b429340f0c3922dc7be3977e1918", "chunk": "diff --git a/core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java b/core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java\nindex a91006a807..e1cfc02625 100644\n--- a/core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java\n+++ b/core/src/test/java/com/sequenceiq/cloudbreak/service/upgrade/UpgradePermissionProviderTest.java\n\n@@ -125,6 +126,24 @@ public class UpgradePermissionProviderTest {\n         verifyNoInteractions(componentBuildNumberComparator);\n     }\n \n+    @Test\n+    public void testPermitUpgradeShouldReturnTrueWhenTheUpgradeNotPermittedByTheUpgradeMatrixButUpgradeMatrixCheckSkipped() {\n+        String currentVersion = \"7.2.1\";\n+        String targetVersion = \"7.2.2\";\n+        Image currentImage = createImage(currentVersion, \"2002\");\n+        Image candidateImage = createImage(targetVersion, \"2001\");\n+        ImageFilterParams imageFilterParams = new ImageFilterParams(currentImage, true, Map.of(), false);\n+\n+        when(componentVersionComparator.permitCmAndStackUpgradeByComponentVersion(currentVersion, targetVersion)).thenReturn(true);\n+\n+        boolean actual = underTest.permitCmAndStackUpgrade(imageFilterParams, candidateImage, VERSION_KEY, BUILD_NUMBER_KEY);\n+\n+        assertTrue(actual);\n+        verify(componentVersionComparator).permitCmAndStackUpgradeByComponentVersion(currentVersion, targetVersion);\n+        verify(upgradeMatrixService, never()).permitByUpgradeMatrix(currentVersion, targetVersion);\n+        verifyNoInteractions(componentBuildNumberComparator);\n+    }\n+\n     @Test\n     public void testPermitUpgradeShouldReturnFalseWhenTheCmBuildNumberIsNotAvailable() {\n         Image currentImage = createImage(\"7.2.1\", \"2002\");\n"}}, {"oid": "5623db55a325b429340f0c3922dc7be3977e1918", "url": "https://github.com/hortonworks/cloudbreak/commit/5623db55a325b429340f0c3922dc7be3977e1918", "message": "CB-9715 Skip image filtering based on upgrade matrix in case of datahub upgrade", "committedDate": "2020-11-20T20:36:17Z", "type": "commit"}, {"oid": "5623db55a325b429340f0c3922dc7be3977e1918", "url": "https://github.com/hortonworks/cloudbreak/commit/5623db55a325b429340f0c3922dc7be3977e1918", "message": "CB-9715 Skip image filtering based on upgrade matrix in case of datahub upgrade", "committedDate": "2020-11-20T20:36:17Z", "type": "forcePushed"}]}