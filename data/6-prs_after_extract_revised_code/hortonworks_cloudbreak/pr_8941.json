{"pr_number": 8941, "pr_title": "CB-8629 [ASRG] single RG and custom network: single RG is deleted whe\u2026", "pr_createdAt": "2020-09-07T16:54:05Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8941", "timeline": [{"oid": "fcb85df93e0e20a8862c546ba45913ee5a980d6b", "url": "https://github.com/hortonworks/cloudbreak/commit/fcb85df93e0e20a8862c546ba45913ee5a980d6b", "message": "CB-8629 [ASRG] single RG and custom network: single RG is deleted when network is deleted\n\nOn azure when deleting a network created by cloudbreak the resource group of the network is deleted. In case of single RG the network and deployment resources themselves should be deleted instead of the resource group.", "committedDate": "2020-09-07T19:41:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5ODE1Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8941#discussion_r485098152", "bodyText": "This is the third occurrence of this fragment in this class, let alone the others, could you pls extract this logic?", "author": "pdarvasi", "createdAt": "2020-09-08T17:55:23Z", "path": "cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/AzureNetworkConnector.java", "diffHunk": "@@ -113,21 +113,46 @@ public CreatedCloudNetwork createNetworkWithSubnets(NetworkCreationRequest netwo\n     @Override\n     public void deleteNetworkWithSubnets(NetworkDeletionRequest networkDeletionRequest) {\n         if (!networkDeletionRequest.isExisting()) {\n-            try {\n-                AzureClient azureClient = azureClientService.getClient(networkDeletionRequest.getCloudCredential());\n-                if (resourceGroupExists(azureClient, networkDeletionRequest)) {\n-                    azureClient.deleteTemplateDeployment(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getStackName());\n-                    azureClient.deleteResourceGroup(networkDeletionRequest.getResourceGroup());\n-                }\n-            } catch (CloudException e) {\n-                LOGGER.warn(\"Deletion error, cloud exception happened: \", e);\n-                if (e.body() != null && e.body().details() != null) {\n-                    String details = e.body().details().stream().map(CloudError::message).collect(Collectors.joining(\", \"));\n-                    throw new CloudConnectorException(String.format(\"Network deletion failed, status code %s, error message: %s, details: %s\",\n-                            e.body().code(), e.body().message(), details));\n-                } else {\n-                    throw new CloudConnectorException(String.format(\"Network deletion failed: '%s', please go to Azure Portal for detailed message\", e));\n-                }\n+            if (networkDeletionRequest.isSingleResourceGroup()) {\n+                deleteResources(networkDeletionRequest);\n+            } else {\n+                deleteNetworkResourceGroup(networkDeletionRequest);\n+            }\n+        }\n+    }\n+\n+    private void deleteResources(NetworkDeletionRequest networkDeletionRequest) {\n+        try {\n+            AzureClient azureClient = azureClientService.getClient(networkDeletionRequest.getCloudCredential());\n+            azureClient.deleteNetworkInResourceGroup(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getNetworkId());\n+            azureClient.deleteTemplateDeployment(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getStackName());\n+        } catch (CloudException e) {\n+            LOGGER.warn(\"Deletion error, cloud exception happened: \", e);\n+            if (e.body() != null && e.body().details() != null) {\n+                String details = e.body().details().stream().map(CloudError::message).collect(Collectors.joining(\", \"));\n+                throw new CloudConnectorException(String.format(\"Network deletion failed, status code %s, error message: %s, details: %s\",\n+                        e.body().code(), e.body().message(), details));\n+            } else {\n+                throw new CloudConnectorException(String.format(\"Network deletion failed: '%s', please go to Azure Portal for detailed message\", e));\n+            }\n+        }\n+    }\n+\n+    private void deleteNetworkResourceGroup(NetworkDeletionRequest networkDeletionRequest) {\n+        try {\n+            AzureClient azureClient = azureClientService.getClient(networkDeletionRequest.getCloudCredential());\n+            if (resourceGroupExists(azureClient, networkDeletionRequest)) {\n+                azureClient.deleteTemplateDeployment(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getStackName());\n+                azureClient.deleteResourceGroup(networkDeletionRequest.getResourceGroup());\n+            }\n+        } catch (CloudException e) {\n+            LOGGER.warn(\"Deletion error, cloud exception happened: \", e);\n+            if (e.body() != null && e.body().details() != null) {\n+                String details = e.body().details().stream().map(CloudError::message).collect(Collectors.joining(\", \"));\n+                throw new CloudConnectorException(String.format(\"Network deletion failed, status code %s, error message: %s, details: %s\",\n+                        e.body().code(), e.body().message(), details));\n+            } else {\n+                throw new CloudConnectorException(String.format(\"Network deletion failed: '%s', please go to Azure Portal for detailed message\", e));", "originalCommit": "fcb85df93e0e20a8862c546ba45913ee5a980d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9913ee112b9480b3f199821f52fc12d86cfc32d", "chunk": "diff --git a/cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/AzureNetworkConnector.java b/cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/AzureNetworkConnector.java\nindex cd01047450..aad4dde7bf 100644\n--- a/cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/AzureNetworkConnector.java\n+++ b/cloud-azure/src/main/java/com/sequenceiq/cloudbreak/cloud/azure/AzureNetworkConnector.java\n\n@@ -112,48 +112,47 @@ public class AzureNetworkConnector implements NetworkConnector {\n \n     @Override\n     public void deleteNetworkWithSubnets(NetworkDeletionRequest networkDeletionRequest) {\n-        if (!networkDeletionRequest.isExisting()) {\n-            if (networkDeletionRequest.isSingleResourceGroup()) {\n-                deleteResources(networkDeletionRequest);\n-            } else {\n-                deleteNetworkResourceGroup(networkDeletionRequest);\n-            }\n+        if (StringUtils.isEmpty(networkDeletionRequest.getResourceGroup())) {\n+            LOGGER.debug(\"The deletable network does not contain a valid resource group name, it is null or empty!\");\n+            return;\n+        }\n+        if (networkDeletionRequest.isExisting()) {\n+            LOGGER.debug(\"The network was provided by the user, deleting nothing.\");\n+            return;\n+        }\n+\n+        if (networkDeletionRequest.isSingleResourceGroup()) {\n+            deleteResources(networkDeletionRequest);\n+        } else {\n+            deleteNetworkResourceGroup(networkDeletionRequest);\n         }\n     }\n \n     private void deleteResources(NetworkDeletionRequest networkDeletionRequest) {\n+        if (StringUtils.isEmpty(networkDeletionRequest.getNetworkId())) {\n+            LOGGER.debug(\"The deletable network does not contain a valid network id, it is null or empty!\");\n+            return;\n+        }\n         try {\n+            LOGGER.debug(\"Deleting network id and deployment, preserving the resource group\");\n             AzureClient azureClient = azureClientService.getClient(networkDeletionRequest.getCloudCredential());\n             azureClient.deleteNetworkInResourceGroup(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getNetworkId());\n             azureClient.deleteTemplateDeployment(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getStackName());\n         } catch (CloudException e) {\n-            LOGGER.warn(\"Deletion error, cloud exception happened: \", e);\n-            if (e.body() != null && e.body().details() != null) {\n-                String details = e.body().details().stream().map(CloudError::message).collect(Collectors.joining(\", \"));\n-                throw new CloudConnectorException(String.format(\"Network deletion failed, status code %s, error message: %s, details: %s\",\n-                        e.body().code(), e.body().message(), details));\n-            } else {\n-                throw new CloudConnectorException(String.format(\"Network deletion failed: '%s', please go to Azure Portal for detailed message\", e));\n-            }\n+            throw azureUtils.convertToCloudConnectorException(e, \"Network and template deployment deletion\");\n         }\n     }\n \n     private void deleteNetworkResourceGroup(NetworkDeletionRequest networkDeletionRequest) {\n         try {\n+            LOGGER.debug(\"Deleting network resource group\");\n             AzureClient azureClient = azureClientService.getClient(networkDeletionRequest.getCloudCredential());\n             if (resourceGroupExists(azureClient, networkDeletionRequest)) {\n                 azureClient.deleteTemplateDeployment(networkDeletionRequest.getResourceGroup(), networkDeletionRequest.getStackName());\n                 azureClient.deleteResourceGroup(networkDeletionRequest.getResourceGroup());\n             }\n         } catch (CloudException e) {\n-            LOGGER.warn(\"Deletion error, cloud exception happened: \", e);\n-            if (e.body() != null && e.body().details() != null) {\n-                String details = e.body().details().stream().map(CloudError::message).collect(Collectors.joining(\", \"));\n-                throw new CloudConnectorException(String.format(\"Network deletion failed, status code %s, error message: %s, details: %s\",\n-                        e.body().code(), e.body().message(), details));\n-            } else {\n-                throw new CloudConnectorException(String.format(\"Network deletion failed: '%s', please go to Azure Portal for detailed message\", e));\n-            }\n+            throw azureUtils.convertToCloudConnectorException(e, \"Network resource group deletion\");\n         }\n     }\n \n"}}, {"oid": "0ece7b96f69f6ae96a5a7332e16219bc66a9bf72", "url": "https://github.com/hortonworks/cloudbreak/commit/0ece7b96f69f6ae96a5a7332e16219bc66a9bf72", "message": "CB-8629 [ASRG] single RG and custom network: single RG is deleted when network is deleted\n\nOn azure when deleting a network created by cloudbreak the resource group of the network is deleted. In case of single RG the network and deployment resources themselves should be deleted instead of the resource group.", "committedDate": "2020-09-09T07:36:00Z", "type": "forcePushed"}, {"oid": "d9913ee112b9480b3f199821f52fc12d86cfc32d", "url": "https://github.com/hortonworks/cloudbreak/commit/d9913ee112b9480b3f199821f52fc12d86cfc32d", "message": "CB-8629 [ASRG] single RG and custom network: single RG is deleted when network is deleted\n\nOn azure when deleting a network created by cloudbreak the resource group of the network is deleted. In case of single RG the network and deployment resources themselves should be deleted instead of the resource group.", "committedDate": "2020-09-15T06:58:16Z", "type": "forcePushed"}, {"oid": "522403c65f6c0318715aa033ecd4bac9d5f9d7a6", "url": "https://github.com/hortonworks/cloudbreak/commit/522403c65f6c0318715aa033ecd4bac9d5f9d7a6", "message": "CB-8629 [ASRG] single RG and custom network: single RG is deleted when network is deleted\n\nOn azure when deleting a network created by cloudbreak the resource group of the network is deleted. In case of single RG the network and deployment resources themselves should be deleted instead of the resource group.", "committedDate": "2020-09-15T07:21:08Z", "type": "commit"}, {"oid": "522403c65f6c0318715aa033ecd4bac9d5f9d7a6", "url": "https://github.com/hortonworks/cloudbreak/commit/522403c65f6c0318715aa033ecd4bac9d5f9d7a6", "message": "CB-8629 [ASRG] single RG and custom network: single RG is deleted when network is deleted\n\nOn azure when deleting a network created by cloudbreak the resource group of the network is deleted. In case of single RG the network and deployment resources themselves should be deleted instead of the resource group.", "committedDate": "2020-09-15T07:21:08Z", "type": "forcePushed"}]}