{"pr_number": 9215, "pr_title": "CB-5073 Use wire encryption (TLS) for SDX DB - Phase 1", "pr_createdAt": "2020-10-13T21:10:07Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9215", "timeline": [{"oid": "6b7acbeac07e3963978a2d056a9bf90c871ecd76", "url": "https://github.com/hortonworks/cloudbreak/commit/6b7acbeac07e3963978a2d056a9bf90c871ecd76", "message": "CB-9289 Redbeams ssl integration for supporting cloud provider related certs. This PR also helps to identify that customer would like to use the offical provider cert or they preffer BYO scenario", "committedDate": "2020-10-13T21:35:55Z", "type": "forcePushed"}, {"oid": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "url": "https://github.com/hortonworks/cloudbreak/commit/a51b73b22d0f716cb69ff4b69e887de9f159567f", "message": "CB-9289 Redbeams ssl integration for supporting cloud provider related certs. This PR also helps to identify that customer would like to use the offical provider cert or they preffer BYO scenario", "committedDate": "2020-10-14T09:32:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NjI4OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504556288", "bodyText": "I suggest renaming this to sslCertificateType along with the getter/setter.", "author": "lajosrodek", "createdAt": "2020-10-14T10:03:37Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.redbeams.domain.stack;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Convert;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n+import javax.persistence.Table;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+import com.sequenceiq.redbeams.repository.converter.SslCertificateTypeConverter;\n+\n+@Entity\n+@Table\n+public class SslConfig {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO, generator = \"sslconfig_generator\")\n+    @SequenceGenerator(name = \"sslconfig_generator\", sequenceName = \"sslconfig_id_seq\", allocationSize = 1)\n+    private Long id;\n+\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"sslcertificate_value\")\n+    private Set<String> sslCertificates = new HashSet<>();\n+\n+    @Convert(converter = SslCertificateTypeConverter.class)\n+    private SslCertificateType type = SslCertificateType.NONE;", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java b/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\nindex c004522044..cd40c834e7 100644\n--- a/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\n+++ b/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\n\n@@ -31,7 +31,8 @@ public class SslConfig {\n     private Set<String> sslCertificates = new HashSet<>();\n \n     @Convert(converter = SslCertificateTypeConverter.class)\n-    private SslCertificateType type = SslCertificateType.NONE;\n+    @Column(nullable = false)\n+    private SslCertificateType sslCertificateType = SslCertificateType.NONE;\n \n     public Long getId() {\n         return id;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NzgwNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504557805", "bodyText": "So we are storing the whole certificate text in the DB? Would not it be better to just store some internal cert ID for CLOUD_PROVIDER_OWNED certs to save storage space?", "author": "lajosrodek", "createdAt": "2020-10-14T10:06:12Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java", "diffHunk": "@@ -160,9 +170,19 @@ public DBStack convert(AllocateDatabaseServerV4Request source, String ownerCrnSt\n         dbStack.setDBStackStatus(new DBStackStatus(dbStack, DetailedDBStackStatus.PROVISION_REQUESTED, now.toEpochMilli()));\n         dbStack.setResourceCrn(crnService.createCrn(dbStack));\n         dbStack.setTags(getTags(dbStack, source.getClusterCrn(), environment));\n+        dbStack.setSslConfig(getSslConfig(source, dbStack));\n         return dbStack;\n     }\n \n+    public SslConfig getSslConfig(AllocateDatabaseServerV4Request source, DBStack dbStack) {\n+        SslConfig sslConfig = new SslConfig();\n+        if (sslEnabled && source.getSslConfiguration() != null && SslMode.isEnabled(source.getSslConfiguration().getMode())) {\n+            sslConfig.setSslCertificates(databaseServerSSlCertificateConfig.getCertsByPlatform(dbStack.getCloudPlatform()));", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU4Mjc1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504582758", "bodyText": "we do the same in CB codebase as well", "author": "doktoric", "createdAt": "2020-10-14T10:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NzgwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java b/redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java\nindex 29919d41dc..f68c156fc2 100644\n--- a/redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java\n+++ b/redbeams/src/main/java/com/sequenceiq/redbeams/converter/stack/AllocateDatabaseServerV4RequestToDBStackConverter.java\n\n@@ -176,9 +176,9 @@ public class AllocateDatabaseServerV4RequestToDBStackConverter {\n \n     public SslConfig getSslConfig(AllocateDatabaseServerV4Request source, DBStack dbStack) {\n         SslConfig sslConfig = new SslConfig();\n-        if (sslEnabled && source.getSslConfiguration() != null && SslMode.isEnabled(source.getSslConfiguration().getMode())) {\n+        if (sslEnabled && source.getSslConfiguration() != null && SslMode.isEnabled(source.getSslConfiguration().getSslMode())) {\n             sslConfig.setSslCertificates(databaseServerSSlCertificateConfig.getCertsByPlatform(dbStack.getCloudPlatform()));\n-            sslConfig.setType(SslCertificateType.CLOUD_PROVIDER_OWNED);\n+            sslConfig.setSslCertificateType(SslCertificateType.CLOUD_PROVIDER_OWNED);\n         }\n         return sslConfig;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjI4Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504562287", "bodyText": "I suggest renaming this to SslConfigurationV4Request to be consistent with other request classes.", "author": "lajosrodek", "createdAt": "2020-10-14T10:13:51Z", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SslConfigurationRequest {", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\nsimilarity index 63%\nrename from redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java\nrename to redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\nindex 27c7bcbcc0..6a3e80d5ba 100644\n--- a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java\n+++ b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\n\n@@ -8,15 +8,15 @@ import io.swagger.annotations.ApiModel;\n \n @ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class SslConfigurationRequest {\n+public class SslConfigurationV4Request {\n \n-    private SslMode mode;\n+    private SslMode sslMode;\n \n-    public SslMode getMode() {\n-        return mode;\n+    public SslMode getSslMode() {\n+        return sslMode;\n     }\n \n-    public void setMode(SslMode mode) {\n-        this.mode = mode;\n+    public void setSslMode(SslMode sslMode) {\n+        this.sslMode = sslMode;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjY5MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504562690", "bodyText": "Please rename this to sslMode, along with the getter/setter.", "author": "lajosrodek", "createdAt": "2020-10-14T10:14:35Z", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SslConfigurationRequest {\n+\n+    private SslMode mode;", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\nsimilarity index 63%\nrename from redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java\nrename to redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\nindex 27c7bcbcc0..6a3e80d5ba 100644\n--- a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationRequest.java\n+++ b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/requests/SslConfigurationV4Request.java\n\n@@ -8,15 +8,15 @@ import io.swagger.annotations.ApiModel;\n \n @ApiModel(description = ModelDescriptions.SSL_CONFIGURATION_REQUEST)\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class SslConfigurationRequest {\n+public class SslConfigurationV4Request {\n \n-    private SslMode mode;\n+    private SslMode sslMode;\n \n-    public SslMode getMode() {\n-        return mode;\n+    public SslMode getSslMode() {\n+        return sslMode;\n     }\n \n-    public void setMode(SslMode mode) {\n-        this.mode = mode;\n+    public void setSslMode(SslMode sslMode) {\n+        this.sslMode = sslMode;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDY5Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504564697", "bodyText": "I suggest renaming this to SslConfigV4Response to be consistent with other request/response classes.", "author": "lajosrodek", "createdAt": "2020-10-14T10:18:11Z", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses;\n+\n+import java.util.Set;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests.SslMode;\n+import com.sequenceiq.redbeams.doc.ModelDescriptions;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+@ApiModel(description = ModelDescriptions.SSL_CONFIG_RESPONSE)\n+public class SslConfigResponse {", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigV4Response.java\nsimilarity index 93%\nrename from redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java\nrename to redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigV4Response.java\nindex 1b19dfe2be..591ee4d346 100644\n--- a/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigResponse.java\n+++ b/redbeams-api/src/main/java/com/sequenceiq/redbeams/api/endpoint/v4/databaseserver/responses/SslConfigV4Response.java\n\n@@ -1,5 +1,6 @@\n package com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses;\n \n+import java.io.Serializable;\n import java.util.Set;\n \n import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.requests.SslMode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NTI2Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504565263", "bodyText": "SSL.", "author": "lajosrodek", "createdAt": "2020-10-14T10:19:08Z", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "diffHunk": "@@ -3,6 +3,7 @@\n public final class ModelDescriptions {\n \n     public static final String ALLOCATE_DATABASE_SERVER_REQUEST = \"Request for allocating a new database server in a provider\";\n+    public static final String SSL_CONFIGURATION_REQUEST = \"Request for ssl configuration\";", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java b/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\nindex b2de13322f..27f6be210e 100644\n--- a/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\n+++ b/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\n\n@@ -3,7 +3,7 @@ package com.sequenceiq.redbeams.doc;\n public final class ModelDescriptions {\n \n     public static final String ALLOCATE_DATABASE_SERVER_REQUEST = \"Request for allocating a new database server in a provider\";\n-    public static final String SSL_CONFIGURATION_REQUEST = \"Request for ssl configuration\";\n+    public static final String SSL_CONFIGURATION_REQUEST = \"Request for SSL configuration\";\n     public static final String CREATE_DATABASE_REQUEST = \"Request for creating a new database on a registered database server\";\n     public static final String CREATE_DATABASE_RESPONSE = \"Response for creating a new database on a registered database server\";\n     public static final String DATABASE_IDENTIFIERS = \"Identifiers that together identify a database in an environment\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NTM0OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504565349", "bodyText": "SSL.", "author": "lajosrodek", "createdAt": "2020-10-14T10:19:18Z", "path": "redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java", "diffHunk": "@@ -13,6 +14,7 @@\n     public static final String DATABASE_SERVER_RESPONSE = \"Response containing information about a database server that was acted upon, e.g., retrieved, \"\n         + \"deleted, listed\";\n     public static final String DATABASE_SERVER_RESPONSES = \"A set of multiple database server responses\";\n+    public static final String SSL_CONFIG_RESPONSE = \"Ssl Config response\";", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java b/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\nindex b2de13322f..27f6be210e 100644\n--- a/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\n+++ b/redbeams-api/src/main/java/com/sequenceiq/redbeams/doc/ModelDescriptions.java\n\n@@ -14,7 +14,7 @@ public final class ModelDescriptions {\n     public static final String DATABASE_SERVER_RESPONSE = \"Response containing information about a database server that was acted upon, e.g., retrieved, \"\n         + \"deleted, listed\";\n     public static final String DATABASE_SERVER_RESPONSES = \"A set of multiple database server responses\";\n-    public static final String SSL_CONFIG_RESPONSE = \"Ssl Config response\";\n+    public static final String SSL_CONFIG_RESPONSE = \"SSL Config response\";\n     public static final String DATABASE_SERVER_STATUS_RESPONSE = \"Response containing status information about a database server\";\n     public static final String DATABASE_SERVER_TEST_REQUEST = \"Request for testing connectivity to a database server\";\n     public static final String DATABASE_SERVER_TEST_RESPONSE = \"Response for testing connectivity to a database server\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MjI1MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504572250", "bodyText": "Not sure this is a safe default for unknown DB values. Would not NONE be a better choice?", "author": "lajosrodek", "createdAt": "2020-10-14T10:32:02Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.sequenceiq.redbeams.repository.converter;\n+\n+import com.sequenceiq.cloudbreak.converter.DefaultEnumConverter;\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+\n+public class SslCertificateTypeConverter extends DefaultEnumConverter<SslCertificateType> {\n+\n+    @Override\n+    public SslCertificateType getDefault() {\n+        return SslCertificateType.CLOUD_PROVIDER_OWNED;", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java b/redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java\nindex 9558819223..954d311406 100644\n--- a/redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java\n+++ b/redbeams/src/main/java/com/sequenceiq/redbeams/repository/converter/SslCertificateTypeConverter.java\n\n@@ -7,6 +7,6 @@ public class SslCertificateTypeConverter extends DefaultEnumConverter<SslCertifi\n \n     @Override\n     public SslCertificateType getDefault() {\n-        return SslCertificateType.CLOUD_PROVIDER_OWNED;\n+        return SslCertificateType.NONE;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3ODEwMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r504578101", "bodyText": "In accordance with the DB schema change, if you agree, this should be extended with @Column(nullable = false).", "author": "lajosrodek", "createdAt": "2020-10-14T10:42:52Z", "path": "redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.sequenceiq.redbeams.domain.stack;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Convert;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n+import javax.persistence.Table;\n+\n+import com.sequenceiq.redbeams.api.endpoint.v4.databaseserver.responses.SslCertificateType;\n+import com.sequenceiq.redbeams.repository.converter.SslCertificateTypeConverter;\n+\n+@Entity\n+@Table\n+public class SslConfig {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO, generator = \"sslconfig_generator\")\n+    @SequenceGenerator(name = \"sslconfig_generator\", sequenceName = \"sslconfig_id_seq\", allocationSize = 1)\n+    private Long id;\n+\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"sslcertificate_value\")\n+    private Set<String> sslCertificates = new HashSet<>();\n+\n+    @Convert(converter = SslCertificateTypeConverter.class)", "originalCommit": "a51b73b22d0f716cb69ff4b69e887de9f159567f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "chunk": "diff --git a/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java b/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\nindex c004522044..cd40c834e7 100644\n--- a/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\n+++ b/redbeams/src/main/java/com/sequenceiq/redbeams/domain/stack/SslConfig.java\n\n@@ -31,7 +31,8 @@ public class SslConfig {\n     private Set<String> sslCertificates = new HashSet<>();\n \n     @Convert(converter = SslCertificateTypeConverter.class)\n-    private SslCertificateType type = SslCertificateType.NONE;\n+    @Column(nullable = false)\n+    private SslCertificateType sslCertificateType = SslCertificateType.NONE;\n \n     public Long getId() {\n         return id;\n"}}, {"oid": "cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "url": "https://github.com/hortonworks/cloudbreak/commit/cdbf51bc9acce988260909f8b4dfe3fd37811d6a", "message": "CB-9289 Redbeams ssl integration for supporting cloud provider related certs. This PR also helps to identify that customer would like to use the offical provider cert or they preffer BYO scenario", "committedDate": "2020-10-14T11:35:24Z", "type": "forcePushed"}, {"oid": "1bd08a0a2b229e215feed231e6a6aba23b52cc78", "url": "https://github.com/hortonworks/cloudbreak/commit/1bd08a0a2b229e215feed231e6a6aba23b52cc78", "message": "CB-9289 Redbeams ssl integration for supporting cloud provider related certs. This PR also helps to identify that customer would like to use the offical provider cert or they preffer BYO scenario", "committedDate": "2020-10-14T11:43:32Z", "type": "forcePushed"}, {"oid": "6f7173b38675ff676574920ec9728afeae0ce3f9", "url": "https://github.com/hortonworks/cloudbreak/commit/6f7173b38675ff676574920ec9728afeae0ce3f9", "message": "CB-8114 unit tests for RedbeamsDbCertificateProvider.java", "committedDate": "2020-10-20T16:32:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MDE5Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9215#discussion_r508690197", "bodyText": "@gergopapi2  I have also catch null pointers here as @lajosrodek's tests triggered them here:\nhttps://github.com/hortonworks/cloudbreak/pull/9215/files#diff-e423493453802c8a45d0f78a802ad3b997f9905f5a473ea9641185d1e17e3ea6R93-R103", "author": "biharitomi", "createdAt": "2020-10-20T16:56:32Z", "path": "common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java", "diffHunk": "@@ -22,7 +22,7 @@\n     public static EndpointType safeValueOf(String value) {\n         try {\n             return valueOf(value);\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | NullPointerException e) {", "originalCommit": "6f7173b38675ff676574920ec9728afeae0ce3f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc15cebb9ec113f16005bee640c9c2435753b249", "chunk": "diff --git a/common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java b/common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java\nindex 4f2fda4864..ca35c7ba23 100644\n--- a/common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java\n+++ b/common-model/src/main/java/com/sequenceiq/common/model/EndpointType.java\n\n@@ -22,7 +22,7 @@ public enum EndpointType {\n     public static EndpointType safeValueOf(String value) {\n         try {\n             return valueOf(value);\n-        } catch (IllegalArgumentException | NullPointerException e) {\n+        } catch (IllegalArgumentException e) {\n             return NONE;\n         }\n     }\n"}}, {"oid": "58a095edc223774db97905e65988053db2371c16", "url": "https://github.com/hortonworks/cloudbreak/commit/58a095edc223774db97905e65988053db2371c16", "message": "CB-8114 unit tests for RedbeamsDbCertificateProvider.java", "committedDate": "2020-10-20T17:04:23Z", "type": "forcePushed"}, {"oid": "f9a1df878d70fe42448c0894710284775edc6ae8", "url": "https://github.com/hortonworks/cloudbreak/commit/f9a1df878d70fe42448c0894710284775edc6ae8", "message": "CB-8114 unit tests for RedbeamsDbCertificateProvider.java", "committedDate": "2020-10-21T07:26:54Z", "type": "forcePushed"}, {"oid": "cb2beb0dc074eb44599ffb565817ce93f263f0e3", "url": "https://github.com/hortonworks/cloudbreak/commit/cb2beb0dc074eb44599ffb565817ce93f263f0e3", "message": "CB-8789 Configure DB TLS for DL cluster services & DH HMS\n\n* Persist DB SSL status in RDSConfig\n  * Currently populated for external DBs only\n* Return DB SSL status in RDSDetails\n* Additions to RdsView:\n  * DB SSL status\n  * SSL certificate file path; empty when not using SSL\n  * ConnectionURL extended wit SSL options as necessary\n* Add new compile dependency to\n  template-manager-cmtemplate/build.gradle:\n  org.apache.commons:commons-text:1.5\n* Inject DB SSL configs for HMS and Ranger Admin\n* Honor custom HMS DB settings in cluster template\n* Add new unit tests and migrate existing ones to JUnit 5 & AssertJ", "committedDate": "2020-10-27T13:29:51Z", "type": "forcePushed"}, {"oid": "fc15cebb9ec113f16005bee640c9c2435753b249", "url": "https://github.com/hortonworks/cloudbreak/commit/fc15cebb9ec113f16005bee640c9c2435753b249", "message": "CB-9289 Redbeams ssl integration for supporting cloud provider related certs. This PR also helps to identify that customer would like to use the offical provider cert or they preffer BYO scenario", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "3b255adff19f9a4583fd0b90dce1b4b75e46f8f8", "url": "https://github.com/hortonworks/cloudbreak/commit/3b255adff19f9a4583fd0b90dce1b4b75e46f8f8", "message": "CB-8107 CB-8108 Enable SSL enforcement for AWS & Azure DL external DB\n\n* Rebased onto #9215\n* Enable SSL enforcement for the external DB of data lakes. The list of\n  cloud platforms where this is applied is controlled by the new\n  Datalake service property\n  datalake.supported.externaldb.sslenforcement.platform (see\n  PlatformConfig.dbServiceSslEnforcementSupportedPlatforms).\n  * In AWS, the CF stack is extended with a new\n    AWS::RDS::DBParameterGroup resource that has rds.force_ssl=1.\n    Supported engine versions: 9.5, 9.6, 10.x, 11.x, 12.x, 13.x.\n  * In Azure, the Microsoft.DBforPostgreSQL/servers resource will\n    have sslEnforcement=Enabled and minimalTlsVersion=TLS1_2.\n* Data hub DBs and embedded DBs of any cluster type are not affected.\n* Added new unit tests and updated existing ones to use JUnit 5 and\n  AssertJ.", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "0abe1b974ef36b9398b9274df72386a68b098228", "url": "https://github.com/hortonworks/cloudbreak/commit/0abe1b974ef36b9398b9274df72386a68b098228", "message": "Fix of SQL migration scripts", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "d2cacf276625f963bfe8c3ca174336aeeab29321", "url": "https://github.com/hortonworks/cloudbreak/commit/d2cacf276625f963bfe8c3ca174336aeeab29321", "message": "CB-8114 save related remote databases' root SSL certificates to cluster", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "fa3839b31a1637945394c5a26f54c581d95d751d", "url": "https://github.com/hortonworks/cloudbreak/commit/fa3839b31a1637945394c5a26f54c581d95d751d", "message": "CB-8114 save gathered certs into separated pillar and save it to file on every node", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "7b59c0b817451c6f8bb18163931dbabec69a9290", "url": "https://github.com/hortonworks/cloudbreak/commit/7b59c0b817451c6f8bb18163931dbabec69a9290", "message": "CB-8107 CB-8108 Apply DL external DB SSL enforcement only for >= 7.2.2", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "d8ee4cbaa42a934c1407f8a2c89abbf831c6a843", "url": "https://github.com/hortonworks/cloudbreak/commit/d8ee4cbaa42a934c1407f8a2c89abbf831c6a843", "message": "CB-8788 replace/append CM's JDBC connection URL in db.properties in case of client side remote database root certificate validation", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "d8450af25d06dad443acf659eddca5b49a9b2953", "url": "https://github.com/hortonworks/cloudbreak/commit/d8450af25d06dad443acf659eddca5b49a9b2953", "message": "CB-8107 CB-8108 Check for DB param group only when using SSL enforcement", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "bd8fd3ba7cb749baaa2a608149dfdf4b984eb5b0", "url": "https://github.com/hortonworks/cloudbreak/commit/bd8fd3ba7cb749baaa2a608149dfdf4b984eb5b0", "message": "CB-8114 unit tests for RedbeamsDbCertificateProvider.java", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "1b1e5dcef548f112a2ee573e6baf5434dc3ed1a2", "url": "https://github.com/hortonworks/cloudbreak/commit/1b1e5dcef548f112a2ee573e6baf5434dc3ed1a2", "message": "CB-8789 Configure DB TLS for DL cluster services & DH HMS\n\n* Persist DB SSL status in RDSConfig\n  * Currently populated for external DBs only\n* Return DB SSL status in RDSDetails\n* Additions to RdsView:\n  * DB SSL status\n  * SSL certificate file path; empty when not using SSL\n  * ConnectionURL extended wit SSL options as necessary\n* Add new compile dependency to\n  template-manager-cmtemplate/build.gradle:\n  org.apache.commons:commons-text:1.5\n* Inject DB SSL configs for HMS and Ranger Admin\n* Honor custom HMS DB settings in cluster template\n* Add new unit tests and migrate existing ones to JUnit 5 & AssertJ", "committedDate": "2020-10-28T10:50:43Z", "type": "commit"}, {"oid": "740ef72b79c971ebf1c2bf25a823d62e857ded4e", "url": "https://github.com/hortonworks/cloudbreak/commit/740ef72b79c971ebf1c2bf25a823d62e857ded4e", "message": "CB-9434 CB-9437 Entitlement check for DB TLS\n\n* Apply DL external DB SSL enforcement only if entitlement\n  CDP_CB_DATABASE_WIRE_ENCRYPTION has been granted.\n* The presence of CDP_CB_DATABASE_WIRE_ENCRYPTION in\n  MockUserManagementService.getAccount() is conditional, depending on\n  the app system property auth.mock.database.wire.encryption.enable .\n* Minor Redbeams SSL API cleanup: SslConfigurationV4Request renamed to\n  SslConfigV4Request, AllocateDatabaseServerV4Request.sslConfiguration\n  renamed to sslConfig, correct field / type descriptions.\n* Add & enhance unit tests.", "committedDate": "2020-10-28T10:50:44Z", "type": "commit"}, {"oid": "740ef72b79c971ebf1c2bf25a823d62e857ded4e", "url": "https://github.com/hortonworks/cloudbreak/commit/740ef72b79c971ebf1c2bf25a823d62e857ded4e", "message": "CB-9434 CB-9437 Entitlement check for DB TLS\n\n* Apply DL external DB SSL enforcement only if entitlement\n  CDP_CB_DATABASE_WIRE_ENCRYPTION has been granted.\n* The presence of CDP_CB_DATABASE_WIRE_ENCRYPTION in\n  MockUserManagementService.getAccount() is conditional, depending on\n  the app system property auth.mock.database.wire.encryption.enable .\n* Minor Redbeams SSL API cleanup: SslConfigurationV4Request renamed to\n  SslConfigV4Request, AllocateDatabaseServerV4Request.sslConfiguration\n  renamed to sslConfig, correct field / type descriptions.\n* Add & enhance unit tests.", "committedDate": "2020-10-28T10:50:44Z", "type": "forcePushed"}]}