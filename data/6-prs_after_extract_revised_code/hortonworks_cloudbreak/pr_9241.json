{"pr_number": 9241, "pr_title": "CB-9374: Use last FreeIPA cookie when there are multiple", "pr_createdAt": "2020-10-19T20:22:04Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9241", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQxNTcwMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9241#discussion_r509415702", "bodyText": "Lets add this comment block from the canonical freeipa client for reference\n\nA cookie string may contain multiple cookies, parse the cookie\nstring and return the last cookie in the string matching the\ncookie name or None if not found.\nmethod which iterates over what parse() returns looking for\nthe specific cookie.\nWhen cookie_name appears more than once the last instance is\nreturned rather than the first because the ordering sequence\nmakes the last instance the current value.", "author": "kmanamcheri", "createdAt": "2020-10-21T16:07:44Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java", "diffHunk": "@@ -231,7 +231,10 @@ private CookieAndStickyId connect(String user, String pass, String apiAddress, i\n                         response.getStatusLine().getStatusCode()));\n             }\n         }\n-        Cookie sessionCookie = cookieStore.getCookies().stream().filter(cookie -> \"ipa_session\".equalsIgnoreCase(cookie.getName())).findFirst().get();\n+        Cookie sessionCookie = cookieStore.getCookies().stream()", "originalCommit": "0716e26c054669a70be981927927f1646544fc22", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "865c9d05b03a675e0169b5fa3f17efcbd1c5d98d", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java b/freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java\nindex 74edc9f5ca..0659762538 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/client/FreeIpaClientBuilder.java\n\n@@ -231,13 +231,34 @@ public class FreeIpaClientBuilder {\n                         response.getStatusLine().getStatusCode()));\n             }\n         }\n-        Cookie sessionCookie = cookieStore.getCookies().stream()\n-                .filter(cookie -> \"ipa_session\".equalsIgnoreCase(cookie.getName()))\n-                .reduce((first, second) -> second)\n-                .get();\n+        Cookie sessionCookie = extractIpaSessionCookie(cookieStore);\n         return new CookieAndStickyId(sessionCookie.getValue(), stickyId);\n     }\n \n+    private Cookie extractIpaSessionCookie(CookieStore cookieStore) throws FreeIpaClientException {\n+        List<Cookie> sortedCookies = cookieStore.getCookies().stream()\n+                .filter(cookie -> \"ipa_session\".equalsIgnoreCase(cookie.getName()))\n+                .collect(Collectors.toList());\n+        if (sortedCookies.isEmpty()) {\n+            throw new FreeIpaClientException(\"Unable to obtain FreeIPA session cookie\");\n+        } else if (sortedCookies.size() > 1) {\n+            List<String> cookieDetails = sortedCookies.stream()\n+                            .map(this::cookieString)\n+                            .collect(Collectors.toList());\n+            LOGGER.debug(\"Found multiple cookies [{}]\", cookieDetails);\n+        }\n+        return sortedCookies.get(0);\n+    }\n+\n+    private String cookieString(Cookie cookie) {\n+        return \"{\" +\n+                \"\\\"name\\\":\\\"\" + cookie.getName() + \"\\\",\" +\n+                \"\\\"domain\\\":\\\"\" + cookie.getDomain() + \"\\\",\" +\n+                \"\\\"path\\\":\\\"\" + cookie.getPath() + \"\\\",\" +\n+                \"\\\"expiry\\\":\\\"\" + cookie.getExpiryDate() + \"\\\"\" +\n+                \"}\";\n+    }\n+\n     private SSLContext setupSSLContext(String clientCert, String clientKey, String serverCert) throws Exception {\n         Security.addProvider(new BouncyCastleProvider());\n         SSLContext context;\n"}}, {"oid": "865c9d05b03a675e0169b5fa3f17efcbd1c5d98d", "url": "https://github.com/hortonworks/cloudbreak/commit/865c9d05b03a675e0169b5fa3f17efcbd1c5d98d", "message": "CB-9374: Use last FreeIPA cookie when there are multiple\n\nWhen there are multiple FreeIPA ipa_session cookies, use the last one.\nThis is the same behavior as FreeIPA does.\nSee https://github.com/freeipa/freeipa/blob/139d60d74706d2ba9855db5faefee322b23b0ba5/ipapython/cookie.py#L322-L349\nfor details.", "committedDate": "2020-10-21T20:29:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NDU3Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9241#discussion_r509674573", "bodyText": "Don't you have to use it somewhere? Like when you are sorting above, you have to use this comparator, no?", "author": "kmanamcheri", "createdAt": "2020-10-21T20:37:54Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.sequenceiq.freeipa.util;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+import java.util.Date;\n+\n+import org.apache.http.cookie.Cookie;\n+import org.apache.http.cookie.CookieIdentityComparator;\n+\n+// Sort preceidence:\n+//   1. Cookie name (backwards - doesn't matter)\n+//   2. Domain name (backwards - doesn't matter)\n+//   3. Cookie path (more specific path is listed first) per RFC-6265 section 5.4.2\n+//   4. Expiration (no expiratation is listed first, latest expiration is listed next)\n+public class CookieComparator implements Serializable, Comparator<Cookie> {", "originalCommit": "865c9d05b03a675e0169b5fa3f17efcbd1c5d98d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NzgxOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9241#discussion_r509677818", "bodyText": "The FreeIpaCookeieStore is already sorted:\n\n  \n    \n      cloudbreak/freeipa/src/main/java/com/sequenceiq/freeipa/util/FreeIpaCookieStore.java\n    \n    \n         Line 15\n      in\n      865c9d0\n    \n    \n    \n    \n\n        \n          \n           private final Set<Cookie> cookies = new TreeSet<>(new CookieComparator()); \n        \n    \n  \n\n\nprivate final Set<Cookie> cookies = new TreeSet<>(new CookieComparator());", "author": "jamisonbennett", "createdAt": "2020-10-21T20:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NDU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3OTEzOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9241#discussion_r509679138", "bodyText": "I see that this is already used in \n  \n    \n      cloudbreak/freeipa/src/main/java/com/sequenceiq/freeipa/util/FreeIpaCookieStore.java\n    \n    \n         Line 15\n      in\n      865c9d0\n    \n    \n    \n    \n\n        \n          \n           private final Set<Cookie> cookies = new TreeSet<>(new CookieComparator());", "author": "kmanamcheri", "createdAt": "2020-10-21T20:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NDU3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java b/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\nindex b71b246231..e6d1bc997b 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\n\n@@ -7,7 +7,7 @@ import java.util.Date;\n import org.apache.http.cookie.Cookie;\n import org.apache.http.cookie.CookieIdentityComparator;\n \n-// Sort preceidence:\n+// Sort precedence:\n //   1. Cookie name (backwards - doesn't matter)\n //   2. Domain name (backwards - doesn't matter)\n //   3. Cookie path (more specific path is listed first) per RFC-6265 section 5.4.2\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3ODkxNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9241#discussion_r509678916", "bodyText": "nit: typo", "author": "kmanamcheri", "createdAt": "2020-10-21T20:42:31Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.sequenceiq.freeipa.util;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+import java.util.Date;\n+\n+import org.apache.http.cookie.Cookie;\n+import org.apache.http.cookie.CookieIdentityComparator;\n+\n+// Sort preceidence:", "originalCommit": "865c9d05b03a675e0169b5fa3f17efcbd1c5d98d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java b/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\nindex b71b246231..e6d1bc997b 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/util/CookieComparator.java\n\n@@ -7,7 +7,7 @@ import java.util.Date;\n import org.apache.http.cookie.Cookie;\n import org.apache.http.cookie.CookieIdentityComparator;\n \n-// Sort preceidence:\n+// Sort precedence:\n //   1. Cookie name (backwards - doesn't matter)\n //   2. Domain name (backwards - doesn't matter)\n //   3. Cookie path (more specific path is listed first) per RFC-6265 section 5.4.2\n"}}, {"oid": "f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "url": "https://github.com/hortonworks/cloudbreak/commit/f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "message": "CB-9374: Use last FreeIPA cookie when there are multiple\n\nWhen there are multiple FreeIPA ipa_session cookies, use the last one.\nThis is the same behavior as FreeIPA does.\nSee https://github.com/freeipa/freeipa/blob/139d60d74706d2ba9855db5faefee322b23b0ba5/ipapython/cookie.py#L322-L349\nfor details.", "committedDate": "2020-10-21T20:45:04Z", "type": "commit"}, {"oid": "f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "url": "https://github.com/hortonworks/cloudbreak/commit/f181c41e3e1261c1b2744360f7cac5a9c8eff7b9", "message": "CB-9374: Use last FreeIPA cookie when there are multiple\n\nWhen there are multiple FreeIPA ipa_session cookies, use the last one.\nThis is the same behavior as FreeIPA does.\nSee https://github.com/freeipa/freeipa/blob/139d60d74706d2ba9855db5faefee322b23b0ba5/ipapython/cookie.py#L322-L349\nfor details.", "committedDate": "2020-10-21T20:45:04Z", "type": "forcePushed"}]}