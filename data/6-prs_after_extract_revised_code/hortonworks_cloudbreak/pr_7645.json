{"pr_number": 7645, "pr_title": "CB-5660 Respect declared Role Config Groups in Data Hub template gene\u2026", "pr_createdAt": "2020-03-25T10:02:25Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7645", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDE1NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397914155", "bodyText": "I think it would be nice to see somewhere what are the configs", "author": "doktoric", "createdAt": "2020-03-25T14:48:44Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -35,6 +38,23 @@\n     @Inject\n     private List<CmHostGroupRoleConfigProvider> providers;\n \n+    @Value(\"#{'${cb.cm.sharedComponents:}'.split(';')}\")\n+    private List<String> sharedComponentsList;\n+\n+    private Map<String, String> sharedComponents = new HashMap<>();\n+\n+    @PostConstruct\n+    private void parseSharedComponents() {\n+        sharedComponentsList.forEach(s -> {\n+            try {\n+                String[] split = s.split(\"=\");", "originalCommit": "5ef067f442c6beb8e5f965c4ba0b122fd7755183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNTcwMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397915702", "bodyText": "Do you mean a log message?", "author": "topolyai5", "createdAt": "2020-03-25T14:50:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzIwNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397917205", "bodyText": "yep", "author": "doktoric", "createdAt": "2020-03-25T14:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\nindex f453187520..40fa4f6ae9 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n\n@@ -38,21 +41,17 @@ public class CmHostGroupRoleConfigProviderProcessor {\n     @Inject\n     private List<CmHostGroupRoleConfigProvider> providers;\n \n-    @Value(\"#{'${cb.cm.sharedComponents:}'.split(';')}\")\n-    private List<String> sharedComponentsList;\n-\n-    private Map<String, String> sharedComponents = new HashMap<>();\n+    private List<SharedComponent> sharedComponents = new ArrayList<>();\n \n     @PostConstruct\n     private void parseSharedComponents() {\n-        sharedComponentsList.forEach(s -> {\n-            try {\n-                String[] split = s.split(\"=\");\n-                sharedComponents.put(split[0].trim(), split[1].trim());\n-            } catch (Exception e) {\n-                LOGGER.warn(\"Cannot parse shared component: {}. Message: {}\", s, e.getMessage());\n-            }\n-        });\n+        try {\n+            String configJson = readFileFromClasspath(\"shared-components-config.json\");\n+            sharedComponents = asList(new Json(configJson).get(SharedComponent[].class));\n+            LOGGER.info(\"shared components are loaded: {}\", sharedComponents);\n+        } catch (Exception e) {\n+            LOGGER.warn(\"Cannot read shared components from: `shared-components-config.json`. Message: {}\", e.getMessage());\n+        }\n     }\n \n     public void process(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjAzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397916030", "bodyText": "maybe isEqual ?", "author": "doktoric", "createdAt": "2020-03-25T14:51:08Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +65,40 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (serviceComponent != null\n+                        && isSameByServiceTypeAndRoleType(provider, serviceComponent)\n+                        && !serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()))) {\n+                    Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n+                    configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n+                            .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n                 }\n             }\n         }\n-        return configsByRoleConfigGroup;\n+    }\n+\n+    private boolean isSameByServiceTypeAndRoleType(CmHostGroupRoleConfigProvider provider, ServiceComponent serviceComponent) {", "originalCommit": "5ef067f442c6beb8e5f965c4ba0b122fd7755183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNjk4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397936985", "bodyText": "is this better? isEqualsByServiceTypeAndRoleType", "author": "topolyai5", "createdAt": "2020-03-25T15:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NDAxMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397984012", "bodyText": "I think so yes", "author": "doktoric", "createdAt": "2020-03-25T16:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4OTk2OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397989969", "bodyText": "ok, changed", "author": "topolyai5", "createdAt": "2020-03-25T16:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\nindex f453187520..40fa4f6ae9 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n\n@@ -86,9 +85,7 @@ public class CmHostGroupRoleConfigProviderProcessor {\n         for (String roleConfigGroup : roleConfigGroups) {\n             for (CmHostGroupRoleConfigProvider provider : providers) {\n                 ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-                if (serviceComponent != null\n-                        && isSameByServiceTypeAndRoleType(provider, serviceComponent)\n-                        && !serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()))) {\n+                if (isEqualsAndNotSharedComponent(provider, serviceComponent)) {\n                     Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n                     configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n                             .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzA2MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397917061", "bodyText": "Very large if condition. Can you please extract it?", "author": "attilapalfi92", "createdAt": "2020-03-25T14:52:22Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +65,40 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (serviceComponent != null", "originalCommit": "5ef067f442c6beb8e5f965c4ba0b122fd7755183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxOTQ1OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397919459", "bodyText": "what is your proposal? I need to check all the three condition in the same if", "author": "topolyai5", "createdAt": "2020-03-25T14:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NjgxMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397946812", "bodyText": "just extract this to a method an name it like areComponentsEqual or something like that", "author": "attilapalfi92", "createdAt": "2020-03-25T15:29:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MTI3OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r397951279", "bodyText": "done", "author": "topolyai5", "createdAt": "2020-03-25T15:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNzA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\nindex f453187520..40fa4f6ae9 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n\n@@ -86,9 +85,7 @@ public class CmHostGroupRoleConfigProviderProcessor {\n         for (String roleConfigGroup : roleConfigGroups) {\n             for (CmHostGroupRoleConfigProvider provider : providers) {\n                 ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-                if (serviceComponent != null\n-                        && isSameByServiceTypeAndRoleType(provider, serviceComponent)\n-                        && !serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()))) {\n+                if (isEqualsAndNotSharedComponent(provider, serviceComponent)) {\n                     Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n                     configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n                             .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n"}}, {"oid": "32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "url": "https://github.com/hortonworks/cloudbreak/commit/32b5e54b14f2895f8ae6d07ebf3d749b463ef658", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation", "committedDate": "2020-03-25T19:21:32Z", "type": "forcePushed"}, {"oid": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "url": "https://github.com/hortonworks/cloudbreak/commit/df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation", "committedDate": "2020-03-25T19:25:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NDE5Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7645#discussion_r398354196", "bodyText": "can we remove this?", "author": "doktoric", "createdAt": "2020-03-26T07:05:35Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -45,35 +64,50 @@ public void process(CmTemplateProcessor templateProcessor, TemplatePreparationOb\n         return ofNullable(templateProcessor.getTemplate().getHostTemplates()).orElseGet(List::of);\n     }\n \n-    private Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n+    @VisibleForTesting\n+    Map<String, Map<String, List<ApiClusterTemplateConfig>>> generateConfigs(CmTemplateProcessor templateProcessor, TemplatePreparationObject source) {\n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup = new HashMap<>();\n-\n-        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream()\n-                .collect(toMap(HostgroupView::getName, Function.identity()));\n+        Map<String, HostgroupView> hostGroups = source.getHostgroupViews().stream().collect(toMap(HostgroupView::getName, Function.identity()));\n         List<ApiClusterTemplateHostTemplate> hostTemplates = getHostTemplates(templateProcessor);\n         Map<String, ServiceComponent> serviceComponents = templateProcessor.mapRoleRefsToServiceComponents();\n \n         for (ApiClusterTemplateHostTemplate hostTemplate : hostTemplates) {\n             String hostGroupName = hostTemplate.getRefName();\n             List<String> roleConfigGroups = ofNullable(hostTemplate.getRoleConfigGroupsRefNames()).orElseGet(List::of);\n             HostgroupView hostgroupView = hostGroups.get(hostGroupName);\n+            groupByHostGroupName(source, configsByRoleConfigGroup, serviceComponents, hostGroupName, roleConfigGroups, hostgroupView);\n+        }\n+        return configsByRoleConfigGroup;\n+    }\n \n-            for (String roleConfigGroup : roleConfigGroups) {\n-                for (CmHostGroupRoleConfigProvider provider : providers) {\n-                    ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n-\n-                    if (serviceComponent != null\n-                            && Objects.equals(provider.getServiceType(), serviceComponent.getService())\n-                            && provider.getRoleTypes().contains(serviceComponent.getComponent())) {\n-\n-                        configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>())\n-                                .computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n-                                .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n-                    }\n+    private void groupByHostGroupName(TemplatePreparationObject source, Map<String, Map<String, List<ApiClusterTemplateConfig>>> configsByRoleConfigGroup,\n+            Map<String, ServiceComponent> serviceComponents, String hostGroupName, List<String> roleConfigGroups, HostgroupView hostgroupView) {\n+        for (String roleConfigGroup : roleConfigGroups) {\n+            for (CmHostGroupRoleConfigProvider provider : providers) {\n+                ServiceComponent serviceComponent = serviceComponents.get(roleConfigGroup);\n+                if (isEqualsAndNotSharedComponent(provider, serviceComponent)) {\n+                    Map<String, List<ApiClusterTemplateConfig>> configs = configsByRoleConfigGroup.computeIfAbsent(roleConfigGroup, __ -> new HashMap<>());\n+                    configs.computeIfAbsent(hostGroupName, __ -> new ArrayList<>())\n+                            .addAll(provider.getRoleConfigs(serviceComponent.getComponent(), hostgroupView, source));\n                 }\n             }\n         }\n-        return configsByRoleConfigGroup;\n+    }\n+\n+    private boolean isEqualsAndNotSharedComponent(CmHostGroupRoleConfigProvider provider, ServiceComponent serviceComponent) {\n+        return serviceComponent != null\n+                && isEqualsByServiceTypeAndRoleType(provider, serviceComponent)\n+                && !isSharedComponent(serviceComponent);\n+    }\n+\n+    private boolean isSharedComponent(ServiceComponent serviceComponent) {\n+        return sharedComponents.stream().anyMatch(s -> s.getComponentName().equals(serviceComponent.getComponent())\n+                && s.getServiceType().equals(serviceComponent.getService()));\n+//        return serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()));", "originalCommit": "df710f2c0e6beab2e756ca4aa916b6293f5b65d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8632c316f9e7af37273d374ae30a8ce48cf0fe38", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\nindex 40fa4f6ae9..664dd904fc 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java\n\n@@ -103,7 +103,6 @@ public class CmHostGroupRoleConfigProviderProcessor {\n     private boolean isSharedComponent(ServiceComponent serviceComponent) {\n         return sharedComponents.stream().anyMatch(s -> s.getComponentName().equals(serviceComponent.getComponent())\n                 && s.getServiceType().equals(serviceComponent.getService()));\n-//        return serviceComponent.getComponent().equals(sharedComponents.get(serviceComponent.getService()));\n     }\n \n     private boolean isEqualsByServiceTypeAndRoleType(CmHostGroupRoleConfigProvider provider, ServiceComponent serviceComponent) {\n"}}, {"oid": "8632c316f9e7af37273d374ae30a8ce48cf0fe38", "url": "https://github.com/hortonworks/cloudbreak/commit/8632c316f9e7af37273d374ae30a8ce48cf0fe38", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation", "committedDate": "2020-03-26T07:56:46Z", "type": "commit"}, {"oid": "8632c316f9e7af37273d374ae30a8ce48cf0fe38", "url": "https://github.com/hortonworks/cloudbreak/commit/8632c316f9e7af37273d374ae30a8ce48cf0fe38", "message": "CB-5660 Respect declared Role Config Groups in Data Hub template generation", "committedDate": "2020-03-26T07:56:46Z", "type": "forcePushed"}]}