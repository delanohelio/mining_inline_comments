{"pr_number": 9650, "pr_title": "CB-9744 Export Ranger on gateway for SDX HA.", "pr_createdAt": "2020-12-14T22:29:23Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9650", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543235013", "bodyText": "this doesn't seems to be a good long term solution. I would suggest to fetch the gateways' hostnames/fqdns and filter in them instead of the magic gateway string", "author": "lacikaaa", "createdAt": "2020-12-15T10:43:00Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));", "originalCommit": "cc426dff5988d3c06f8150b2572cf742d70722f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4ODQ5Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543488492", "bodyText": "The gateways are called gateway in Medium duty.  But I can change it to that instead.", "author": "frozenwizard", "createdAt": "2020-12-15T16:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxNDU2OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543514568", "bodyText": "I think you can filter on stack.getPrimaryGatewayInstance().getInstanceGroup().getGroupName(). For medium duty the group name should be \"gateway\", and for light duty it would be \"master\".", "author": "hreeve-cloudera", "createdAt": "2020-12-15T16:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNTAxMw=="}], "type": "inlineReview", "revised_code": {"commit": "b13f52c4f669073c44dcafd076344867eac17caa", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\nindex 55a2e01d9b..4a86e155f5 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\n\n@@ -601,13 +600,13 @@ public class ClusterHostServiceRunner {\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n-\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n-                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n-            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n-                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));\n-            }\n+            String gatewayGroupName = cluster.getStack().getPrimaryGatewayInstance().getInstanceGroup().getGroupName();\n+            List<String> rangerGatewayHosts = rangerLocations\n+                    .stream()\n+                    .filter(s -> s.contains(gatewayGroupName))\n+                    .collect(Collectors.toList());\n+            serviceLocations.put(rangerService.getServiceName(), rangerGatewayHosts);\n         }\n         serviceLocations.put(exposedServiceCollector.getClouderaManagerService().getServiceName(), asList(gatewayConfig.getHostname()));\n         gateway.put(\"location\", serviceLocations);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNjU3MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543236570", "bodyText": "as this must match with the other SdxClusterShape it must be ensured via unit tests", "author": "lacikaaa", "createdAt": "2020-12-15T10:45:15Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sequenceiq.cloudbreak.api.endpoint.v4.common;\n+\n+public enum SdxClusterShape {", "originalCommit": "cc426dff5988d3c06f8150b2572cf742d70722f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b13f52c4f669073c44dcafd076344867eac17caa", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java\ndeleted file mode 100644\nindex c2ac2c6b47..0000000000\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/common/SdxClusterShape.java\n+++ /dev/null\n\n@@ -1,8 +0,0 @@\n-package com.sequenceiq.cloudbreak.api.endpoint.v4.common;\n-\n-public enum SdxClusterShape {\n-    NOT_APPLICABLE,\n-    CUSTOM,\n-    LIGHT_DUTY,\n-    MEDIUM_DUTY_HA\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543240839", "bodyText": "is it possible to have multiple gateway node for LIGHT_DUTY? I mean do we need this if-else at all? couldn't be it like all gateway node has ranger and LIGHT_DUTY has only one GW while MEDIUM has multiple and the result would be the same. In this case we won't need the cluster shape on CB side", "author": "lacikaaa", "createdAt": "2020-12-15T10:51:26Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java", "diffHunk": "@@ -600,8 +601,13 @@ private void saveGatewayPillar(GatewayConfig gatewayConfig, Cluster cluster,\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n+\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n+                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n+            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {", "originalCommit": "cc426dff5988d3c06f8150b2572cf742d70722f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MDkzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543470931", "bodyText": "No, medium has multiple nodes called gateway, light duty has none.", "author": "frozenwizard", "createdAt": "2020-12-15T15:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI5NjczMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r544296730", "bodyText": "but in case of LIGHT_DUTY the master is GATEWAY type, while in case of MEDIUM_DUTY_HA not the master is the gateway. We could depend on that information and select those FQDNs. Stack has a method: getGatewayInstanceMetadata which could be used to get all the gateway instances.", "author": "lacikaaa", "createdAt": "2020-12-16T13:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI0MDgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b13f52c4f669073c44dcafd076344867eac17caa", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\nindex 55a2e01d9b..4a86e155f5 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/bootstrap/service/host/ClusterHostServiceRunner.java\n\n@@ -601,13 +600,13 @@ public class ClusterHostServiceRunner {\n \n         ExposedService rangerService = exposedServiceCollector.getRangerService();\n         List<String> rangerLocations = serviceLocations.get(rangerService.getServiceName());\n-\n         if (!CollectionUtils.isEmpty(rangerLocations)) {\n-            if (SdxClusterShape.LIGHT_DUTY.equals(cluster.getStack().getSdxClusterShape())) {\n-                serviceLocations.put(rangerService.getServiceName(), getSingleRangerFqdn(gatewayConfig.getHostname(), rangerLocations));\n-            } else if (SdxClusterShape.MEDIUM_DUTY_HA.equals(cluster.getStack().getSdxClusterShape())) {\n-                serviceLocations.put(rangerService.getServiceName(), rangerLocations.stream().filter(s -> s.contains(\"gateway\")).collect(Collectors.toList()));\n-            }\n+            String gatewayGroupName = cluster.getStack().getPrimaryGatewayInstance().getInstanceGroup().getGroupName();\n+            List<String> rangerGatewayHosts = rangerLocations\n+                    .stream()\n+                    .filter(s -> s.contains(gatewayGroupName))\n+                    .collect(Collectors.toList());\n+            serviceLocations.put(rangerService.getServiceName(), rangerGatewayHosts);\n         }\n         serviceLocations.put(exposedServiceCollector.getClouderaManagerService().getServiceName(), asList(gatewayConfig.getHostname()));\n         gateway.put(\"location\", serviceLocations);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwODExNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9650#discussion_r543508117", "bodyText": "This is a very basic description. Can you add more information, like explaining what a cluster shape is?", "author": "hreeve-cloudera", "createdAt": "2020-12-15T16:45:35Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java", "diffHunk": "@@ -241,6 +241,7 @@ private ModelDescriptions() {\n         public static final String TUNNEL = \"Configuration that the connection going directly or with cluster proxy or with ccm and cluster proxy.\";\n         public static final String FLOW_ID = \"Flow identifier for the current stack creation. Only returned during the stack create request/response.\";\n         public static final String EXTERNAL_DATABASE = \"External database parameters for the stack.\";\n+        public static final String SDX_CLUSTER_SHAPE = \"SDX Cluster Shape\";", "originalCommit": "cc426dff5988d3c06f8150b2572cf742d70722f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b13f52c4f669073c44dcafd076344867eac17caa", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java\nindex 58ebe1e0c7..9dd6a2c5ec 100644\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java\n+++ b/core-api/src/main/java/com/sequenceiq/cloudbreak/doc/ModelDescriptions.java\n\n@@ -241,7 +241,6 @@ public class ModelDescriptions {\n         public static final String TUNNEL = \"Configuration that the connection going directly or with cluster proxy or with ccm and cluster proxy.\";\n         public static final String FLOW_ID = \"Flow identifier for the current stack creation. Only returned during the stack create request/response.\";\n         public static final String EXTERNAL_DATABASE = \"External database parameters for the stack.\";\n-        public static final String SDX_CLUSTER_SHAPE = \"SDX Cluster Shape\";\n     }\n \n     public static class ClusterModelDescription {\n"}}, {"oid": "b13f52c4f669073c44dcafd076344867eac17caa", "url": "https://github.com/hortonworks/cloudbreak/commit/b13f52c4f669073c44dcafd076344867eac17caa", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the gateway nodes.", "committedDate": "2020-12-16T21:05:58Z", "type": "forcePushed"}, {"oid": "7a8b08dd3553638282c1057032674bdc6333907a", "url": "https://github.com/hortonworks/cloudbreak/commit/7a8b08dd3553638282c1057032674bdc6333907a", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the gateway nodes.", "committedDate": "2020-12-16T21:30:01Z", "type": "forcePushed"}, {"oid": "3872d1382929050c1ef0569b98ab531c985ca25d", "url": "https://github.com/hortonworks/cloudbreak/commit/3872d1382929050c1ef0569b98ab531c985ca25d", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-04T17:03:13Z", "type": "forcePushed"}, {"oid": "6cc7d758b8bf9e768c90afaf4745d52f89ebdd6e", "url": "https://github.com/hortonworks/cloudbreak/commit/6cc7d758b8bf9e768c90afaf4745d52f89ebdd6e", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-04T20:57:48Z", "type": "forcePushed"}, {"oid": "51ed0ce2b640f9e2e74d46aa2e60cbf49711c42e", "url": "https://github.com/hortonworks/cloudbreak/commit/51ed0ce2b640f9e2e74d46aa2e60cbf49711c42e", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-04T22:02:15Z", "type": "forcePushed"}, {"oid": "6d63089b084371ecd570330d7df0158bdd367439", "url": "https://github.com/hortonworks/cloudbreak/commit/6d63089b084371ecd570330d7df0158bdd367439", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-04T23:13:02Z", "type": "forcePushed"}, {"oid": "719b42e517e4203448ed727cfc4cf47d86f3634d", "url": "https://github.com/hortonworks/cloudbreak/commit/719b42e517e4203448ed727cfc4cf47d86f3634d", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-05T16:44:54Z", "type": "forcePushed"}, {"oid": "7fdd1498e0ac114e3aeab72a17fcfb9e6bf18e78", "url": "https://github.com/hortonworks/cloudbreak/commit/7fdd1498e0ac114e3aeab72a17fcfb9e6bf18e78", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-05T21:46:03Z", "type": "forcePushed"}, {"oid": "9077e17ce39112327eaf92bf1aae340889e96dbc", "url": "https://github.com/hortonworks/cloudbreak/commit/9077e17ce39112327eaf92bf1aae340889e96dbc", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-05T22:56:04Z", "type": "forcePushed"}, {"oid": "8426838a6ecc629024f7519dd246401fef1cefdf", "url": "https://github.com/hortonworks/cloudbreak/commit/8426838a6ecc629024f7519dd246401fef1cefdf", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-06T03:58:17Z", "type": "commit"}, {"oid": "8426838a6ecc629024f7519dd246401fef1cefdf", "url": "https://github.com/hortonworks/cloudbreak/commit/8426838a6ecc629024f7519dd246401fef1cefdf", "message": "CB-9744 Export Ranger on gateway for SDX HA.\n\nThis exports all of the Ranger nodes for Knox on the Gateway nodes.", "committedDate": "2021-01-06T03:58:17Z", "type": "forcePushed"}]}