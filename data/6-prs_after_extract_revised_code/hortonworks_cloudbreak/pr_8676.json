{"pr_number": 8676, "pr_title": "CDPCP-2678. Support syncing service principle cloud ids", "pr_createdAt": "2020-07-30T18:29:02Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8676", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNjQ1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463806458", "bodyText": "typo: environmentCrn", "author": "handavid", "createdAt": "2020-07-31T20:00:57Z", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -272,6 +273,26 @@ public void deleteMachineUser(String machineUserName, String userCrn, Optional<S\n         }\n     }\n \n+    /**\n+     * Retrieves list of an environments service principal cloud identities from UMS.\n+     *\n+     * @param accountId       the account Id\n+     * @param envrionmentCrn  the envrionment crn\n+     * @param requestId       an optional request Id\n+     * @return list of service principal cloud identities\n+     */\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String actorCrn, String accountId, String envrionmentCrn,", "originalCommit": "e546ed674dd398abccb980e7e3c5dce0fd39a183", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e37326ad3c9217c9bbc7672299510acc2e6a0b78", "chunk": "diff --git a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java\nindex 2b8ea52bac..c0d3caed07 100644\n--- a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java\n+++ b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java\n\n@@ -274,23 +274,32 @@ public class GrpcUmsClient {\n     }\n \n     /**\n-     * Retrieves list of an environments service principal cloud identities from UMS.\n+     * Retrieves list of service principal cloud identities for an environment from UMS.\n      *\n      * @param accountId       the account Id\n-     * @param envrionmentCrn  the envrionment crn\n+     * @param environmentCrn  the environment crn\n      * @param requestId       an optional request Id\n-     * @return list of service principal cloud identities\n+     * @return list of service principal cloud identities for an environment\n      */\n-    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String actorCrn, String accountId, String envrionmentCrn,\n-        Optional<String> requestId) {\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(\n+            String actorCrn, String accountId, String environmentCrn, Optional<String> requestId) {\n+\n+        List<ServicePrincipalCloudIdentities> spCloudIds = new ArrayList<>();\n+\n         try (ManagedChannelWrapper channelWrapper = makeWrapper()) {\n             UmsClient client = makeClient(channelWrapper.getChannel(), actorCrn);\n             LOGGER.debug(\"Listing service principal cloud identities for account {} using request ID {}\", accountId, requestId);\n-            List<ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities = client.listServicePrincipalCloudIdentities(\n-                    requestId.orElse(UUID.randomUUID().toString()), accountId, envrionmentCrn);\n-            LOGGER.debug(\"{} ServicePrincipalCloudIdentities found for account {}\", servicePrincipalCloudIdentities.size(), accountId);\n-            return servicePrincipalCloudIdentities;\n+            UserManagementProto.ListServicePrincipalCloudIdentitiesResponse response;\n+            Optional<PagingProto.PageToken> pageToken = Optional.empty();\n+            do {\n+                response = client.listServicePrincipalCloudIdentities(\n+                        requestId.orElse(UUID.randomUUID().toString()), accountId, environmentCrn, pageToken);\n+                spCloudIds.addAll(response.getServicePrincipalCloudIdentitiesList());\n+                pageToken = Optional.ofNullable(response.getNextPageToken());\n+            } while (response.hasNextPageToken());\n         }\n+        LOGGER.debug(\"{} ServicePrincipalCloudIdentities found for account {}\", spCloudIds.size(), accountId);\n+        return spCloudIds;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwODM3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463808378", "bodyText": "I recently added paging to the listWorkloadAdministrationGroupsForMember API. I put the paging support in the GrpcUmsClient class instead of the UmsClient class because it was pretty much impossible to unit test in the UmsClient. I suggest moving the paging code to GrpcUmsClient", "author": "handavid", "createdAt": "2020-07-31T20:03:33Z", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -329,6 +332,33 @@ public void deleteMachineUser(String requestId, String userCrn, String machineUs\n         }\n     }\n \n+    /**\n+     * Wraps calls to ListServicePrincipalCloudIdentities with an Account ID.\n+     *\n+     * @param requestId       the request ID for the request\n+     * @param accountId       the account ID\n+     * @param environmentCrn  the crn of the environment to list service prinnciples for\n+     * @return the list of service principal cloud identities\n+     */\n+    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String requestId, String accountId, String environmentCrn) {\n+        checkNotNull(requestId);\n+        checkNotNull(accountId);\n+\n+        List<ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities = new ArrayList<>();\n+\n+        ListServicePrincipalCloudIdentitiesRequest.Builder requestBuilder = ListServicePrincipalCloudIdentitiesRequest.newBuilder()\n+                .setAccountId(accountId)\n+                .setEnvironmentCrn(environmentCrn);\n+\n+        UserManagementProto.ListServicePrincipalCloudIdentitiesResponse response;\n+        do {", "originalCommit": "e546ed674dd398abccb980e7e3c5dce0fd39a183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzMzc1Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r464233756", "bodyText": "Ahh I see. I've moved it there and added a unit test.", "author": "aarman-cloudera", "createdAt": "2020-08-03T07:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwODM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "e37326ad3c9217c9bbc7672299510acc2e6a0b78", "chunk": "diff --git a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\nindex cebeb3197f..b420c6baae 100644\n--- a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\n+++ b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\n\n@@ -333,30 +332,23 @@ public class UmsClient {\n     }\n \n     /**\n-     * Wraps calls to ListServicePrincipalCloudIdentities with an Account ID.\n+     * Wraps a call to ListServicePrincipalCloudIdentities.\n      *\n-     * @param requestId       the request ID for the request\n-     * @param accountId       the account ID\n-     * @param environmentCrn  the crn of the environment to list service prinnciples for\n+     * @param requestId   the request ID for the request\n+     * @param accountId   the account id\n+     * @param environmentCrn   the environment crn\n      * @return the list of service principal cloud identities\n      */\n-    public List<ServicePrincipalCloudIdentities> listServicePrincipalCloudIdentities(String requestId, String accountId, String environmentCrn) {\n-        checkNotNull(requestId);\n-        checkNotNull(accountId);\n-\n-        List<ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities = new ArrayList<>();\n-\n+    public ListServicePrincipalCloudIdentitiesResponse listServicePrincipalCloudIdentities(\n+            String requestId, String accountId, String environmentCrn, Optional<PagingProto.PageToken> pageToken) {\n         ListServicePrincipalCloudIdentitiesRequest.Builder requestBuilder = ListServicePrincipalCloudIdentitiesRequest.newBuilder()\n                 .setAccountId(accountId)\n-                .setEnvironmentCrn(environmentCrn);\n-\n-        UserManagementProto.ListServicePrincipalCloudIdentitiesResponse response;\n-        do {\n-            response = newStub(requestId).listServicePrincipalCloudIdentities(requestBuilder.build());\n-            servicePrincipalCloudIdentities.addAll(response.getServicePrincipalCloudIdentitiesList());\n-            requestBuilder.setPageToken(response.getNextPageToken());\n-        } while (response.hasNextPageToken());\n-        return servicePrincipalCloudIdentities;\n+                .setEnvironmentCrn(environmentCrn)\n+                .setPageSize(umsClientConfig.getListServicePrincipalCloudIdentitiesPageSize());\n+        if (pageToken.isPresent()) {\n+            requestBuilder.setPageToken(pageToken.get());\n+        }\n+        return newStub(requestId).listServicePrincipalCloudIdentities(requestBuilder.build());\n     }\n \n     private <T> void checkSingleUserResponse(List<T> users, String crnResource) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwOTMyMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r463809323", "bodyText": "what's this method for?", "author": "handavid", "createdAt": "2020-07-31T20:04:51Z", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java", "diffHunk": "@@ -685,6 +715,14 @@ public String getIdentityProviderMetadataXml(String requestId, String accountId)\n                 .build());\n     }\n \n+    public ListServicePrincipalCloudIdentitiesResponse listServicePrincipalCloudIdentities2(String requestId, String accountId, String environmentCrn) {", "originalCommit": "e546ed674dd398abccb980e7e3c5dce0fd39a183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzMzg3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8676#discussion_r464233878", "bodyText": "Good catch, I meant to delete that one.", "author": "aarman-cloudera", "createdAt": "2020-08-03T07:15:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwOTMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "e37326ad3c9217c9bbc7672299510acc2e6a0b78", "chunk": "diff --git a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\nindex cebeb3197f..b420c6baae 100644\n--- a/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\n+++ b/auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/UmsClient.java\n\n@@ -715,14 +707,6 @@ public class UmsClient {\n                 .build());\n     }\n \n-    public ListServicePrincipalCloudIdentitiesResponse listServicePrincipalCloudIdentities2(String requestId, String accountId, String environmentCrn) {\n-        checkNotNull(accountId);\n-        return newStub(requestId).listServicePrincipalCloudIdentities(UserManagementProto.ListServicePrincipalCloudIdentitiesRequest.newBuilder()\n-                .setAccountId(accountId)\n-                .setEnvironmentCrn(environmentCrn)\n-                .build());\n-    }\n-\n     public UserManagementProto.SetWorkloadAdministrationGroupNameResponse setWorkloadAdministrationGroupName(String requestId, String accountId,\n             String right, String resource) {\n         checkNotNull(accountId);\n"}}, {"oid": "e37326ad3c9217c9bbc7672299510acc2e6a0b78", "url": "https://github.com/hortonworks/cloudbreak/commit/e37326ad3c9217c9bbc7672299510acc2e6a0b78", "message": "CDPCP-2678. Support syncing service principle cloud ids\n\nThe ums client has been updated to allow listing cloud id assignments\nfor service principles This is used to sync the azure object ids\nassociated with service principles.", "committedDate": "2020-08-03T07:23:17Z", "type": "forcePushed"}, {"oid": "2adcb3e46de85b9d9e4abfdba927d484809a14b3", "url": "https://github.com/hortonworks/cloudbreak/commit/2adcb3e46de85b9d9e4abfdba927d484809a14b3", "message": "CDPCP-2678. Support syncing service principle cloud ids\n\nThe ums client has been updated to allow listing cloud id assignments\nfor service principles This is used to sync the azure object ids\nassociated with service principles.", "committedDate": "2020-08-03T23:11:27Z", "type": "forcePushed"}, {"oid": "8fca2d24a7c13727b407ef8239404cbff48707c8", "url": "https://github.com/hortonworks/cloudbreak/commit/8fca2d24a7c13727b407ef8239404cbff48707c8", "message": "CDPCP-2678. Support syncing service principle cloud ids\n\nThe ums client has been updated to allow listing cloud id assignments\nfor service principles This is used to sync the azure object ids\nassociated with service principles.", "committedDate": "2020-08-03T23:54:24Z", "type": "forcePushed"}, {"oid": "89575a177b7ee67ab8b8a75291c7478cf498a1b0", "url": "https://github.com/hortonworks/cloudbreak/commit/89575a177b7ee67ab8b8a75291c7478cf498a1b0", "message": "CDPCP-2678. Support syncing service principle cloud ids\n\nThe ums client has been updated to allow listing cloud id assignments\nfor service principles This is used to sync the azure object ids\nassociated with service principles.", "committedDate": "2020-08-05T09:14:23Z", "type": "commit"}, {"oid": "89575a177b7ee67ab8b8a75291c7478cf498a1b0", "url": "https://github.com/hortonworks/cloudbreak/commit/89575a177b7ee67ab8b8a75291c7478cf498a1b0", "message": "CDPCP-2678. Support syncing service principle cloud ids\n\nThe ums client has been updated to allow listing cloud id assignments\nfor service principles This is used to sync the azure object ids\nassociated with service principles.", "committedDate": "2020-08-05T09:14:23Z", "type": "forcePushed"}]}