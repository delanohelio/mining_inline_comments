{"pr_number": 8048, "pr_title": "DISTX-399 Introduce Periscope DataHub Autoscaling (Part 1)", "pr_createdAt": "2020-05-14T08:46:27Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8048", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NTk0Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428575947", "bodyText": "findAliveOnesWithAmbari -> findAliveOnesWithClusterManager", "author": "doktoric", "createdAt": "2020-05-21T10:38:36Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java", "diffHunk": "@@ -172,8 +175,7 @@\n             + \"WHERE ig.instanceGroupType = 'GATEWAY' \"\n             + \"AND im.instanceMetadataType = 'GATEWAY_PRIMARY' \"\n             + \"AND s.terminated = null \"\n-            + \"AND c.clusterManagerIp IS NOT NULL \"\n-            + \"AND c.status = 'AVAILABLE' \"\n+            + \"AND c.status in ('AVAILABLE', 'REQUESTED', 'UPDATE_IN_PROGRESS') \"\n             + \"AND (s.type is not 'TEMPLATE' OR s.type is null)\")\n     Set<AutoscaleStack> findAliveOnesWithAmbari();", "originalCommit": "5d7ac7c895068f8d20f2d5f4f0e0965c3a756df9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3ODIwNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428578206", "bodyText": "ack", "author": "smaniraju", "createdAt": "2020-05-21T10:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NTk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "357ddeef61767a5fae92991965e42eb2d006ee1f", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java b/core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java\nindex 02242924c3..2cc003f30a 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/repository/StackRepository.java\n\n@@ -177,7 +177,7 @@ public interface StackRepository extends WorkspaceResourceRepository<Stack, Long\n             + \"AND s.terminated = null \"\n             + \"AND c.status in ('AVAILABLE', 'REQUESTED', 'UPDATE_IN_PROGRESS') \"\n             + \"AND (s.type is not 'TEMPLATE' OR s.type is null)\")\n-    Set<AutoscaleStack> findAliveOnesWithAmbari();\n+    Set<AutoscaleStack> findAliveOnesWithClusterManager();\n \n     @Query(\"SELECT s.id as id, s.name as name FROM Stack s WHERE s.network = :network\")\n     Set<StackIdView> findByNetwork(@Param(\"network\") Network network);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjA2NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428576064", "bodyText": "why we removed this ?", "author": "doktoric", "createdAt": "2020-05-21T10:38:52Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/StackCommonService.java", "diffHunk": "@@ -254,7 +253,6 @@ public GeneratedBlueprintV4Response postStackForBlueprint(StackV4Request stackRe\n         return response;\n     }\n \n-    @PreAuthorize(\"hasRole('AUTOSCALE')\")", "originalCommit": "5d7ac7c895068f8d20f2d5f4f0e0965c3a756df9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4NzUxNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428587515", "bodyText": "AutoscaleV4Controller::getCertificate already has @PreAuthorize(\"hasRole('AUTOSCALE')\"). Hence this was duplicate check.", "author": "smaniraju", "createdAt": "2020-05-21T11:07:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjA2NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjEzNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428576134", "bodyText": "why we removed this?", "author": "doktoric", "createdAt": "2020-05-21T10:39:09Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/StackService.java", "diffHunk": "@@ -261,18 +259,6 @@ public StackClusterStatusView getStatusByNameOrCrn(NameOrCrn nameOrCrn, Long wor\n         return foundStack.orElseThrow(() -> new NotFoundException(String.format(STACK_NOT_FOUND_BY_NAME_OR_CRN_EXCEPTION_MESSAGE, nameOrCrn)));\n     }\n \n-    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n-    public Long getWorkspaceId(String crn) {\n-        return stackRepository.findWorkspaceIdByCrn(crn);\n-    }\n-\n-    @PreAuthorize(\"hasRole('AUTOSCALE')\")\n-    public Tenant getTenant(String crn) {\n-        Workspace workspace = stackRepository.findWorkspaceByCrn(crn).orElseThrow(notFound(\"workspace\", crn));\n-        return workspace.getTenant();\n-    }\n-\n-    @PreAuthorize(\"hasRole('AUTOSCALE')\")", "originalCommit": "5d7ac7c895068f8d20f2d5f4f0e0965c3a756df9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4ODY5Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8048#discussion_r428588692", "bodyText": "This was again duplicate check, since AutoscaleV4Controller::getAllForAutoscale has     @PreAuthorize(\"hasRole('AUTOSCALE')\"). The remaining two methods getTenant/getWorkspaceId was only used in AutoscaleV4Controller flow.", "author": "smaniraju", "createdAt": "2020-05-21T11:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "357ddeef61767a5fae92991965e42eb2d006ee1f", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/StackService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/StackService.java\nindex af0242d4a0..ae7c61f3ed 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/StackService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/StackService.java\n\n@@ -262,7 +262,7 @@ public class StackService implements ResourceIdProvider {\n     public Set<AutoscaleStackV4Response> getAllForAutoscale() {\n         try {\n             return transactionService.required(() -> {\n-                Set<AutoscaleStack> aliveOnes = stackRepository.findAliveOnesWithAmbari();\n+                Set<AutoscaleStack> aliveOnes = stackRepository.findAliveOnesWithClusterManager();\n                 Set<AutoscaleStack> aliveNotUnderDeletion = Optional.ofNullable(aliveOnes).orElse(Set.of()).stream()\n                         .filter(stack -> !DELETE_IN_PROGRESS.equals(stack.getStackStatus()))\n                         .collect(Collectors.toSet());\n"}}, {"oid": "357ddeef61767a5fae92991965e42eb2d006ee1f", "url": "https://github.com/hortonworks/cloudbreak/commit/357ddeef61767a5fae92991965e42eb2d006ee1f", "message": "DISTX-399 CB Changes to suport Load Based Autoscaling", "committedDate": "2020-05-21T11:03:24Z", "type": "commit"}, {"oid": "357ddeef61767a5fae92991965e42eb2d006ee1f", "url": "https://github.com/hortonworks/cloudbreak/commit/357ddeef61767a5fae92991965e42eb2d006ee1f", "message": "DISTX-399 CB Changes to suport Load Based Autoscaling", "committedDate": "2020-05-21T11:03:24Z", "type": "forcePushed"}]}