{"pr_number": 9174, "pr_title": "CB-8228: Implement the mechanics to specify the upgrade matrix", "pr_createdAt": "2020-10-08T12:15:23Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9174", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3MzgwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9174#discussion_r501673804", "bodyText": "Can this field be private?", "author": "keyki", "createdAt": "2020-10-08T12:17:17Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/conf/UpgradeMatrixConfig.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.sequenceiq.cloudbreak.conf;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import com.sequenceiq.cloudbreak.service.upgrade.matrix.UpgradeMatrixDefinition;\n+import com.sequenceiq.cloudbreak.service.upgrade.matrix.UpgradeMatrixDefinitionProvider;\n+\n+@Configuration\n+public class UpgradeMatrixConfig {\n+\n+    @Inject\n+    UpgradeMatrixDefinitionProvider upgradeMatrixDefinitionProvider;", "originalCommit": "c966190ac96ad6ce25e8739836890bab7170fa20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc6be452829f5fce687d21c736a88fba367e2d17", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/conf/UpgradeMatrixConfig.java b/core/src/main/java/com/sequenceiq/cloudbreak/conf/UpgradeMatrixConfig.java\nindex 6115178aad..11e8c4e76d 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/conf/UpgradeMatrixConfig.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/conf/UpgradeMatrixConfig.java\n\n@@ -14,7 +14,7 @@ import com.sequenceiq.cloudbreak.service.upgrade.matrix.UpgradeMatrixDefinitionP\n public class UpgradeMatrixConfig {\n \n     @Inject\n-    UpgradeMatrixDefinitionProvider upgradeMatrixDefinitionProvider;\n+    private UpgradeMatrixDefinitionProvider upgradeMatrixDefinitionProvider;\n \n     @Bean\n     public UpgradeMatrixDefinition upgradeMatrixDefinition() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3NzY0Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9174#discussion_r501677642", "bodyText": "Can we rename this to show when does this permit the newVersion? It's hard to figure out what actually this method does. If we can't find a meaningful name we should add some java doc to it.", "author": "keyki", "createdAt": "2020-10-08T12:23:51Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ComponentVersionComparator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.sequenceiq.cloudbreak.service.upgrade;\n+\n+import static com.sequenceiq.cloudbreak.cloud.PrefixMatchLength.MAJOR;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.VersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.VersionPrefix;\n+\n+@Component\n+class ComponentVersionComparator {\n+\n+    boolean permitCmAndStackUpgradeByComponentVersion(String currentVersion, String newVersion) {", "originalCommit": "c966190ac96ad6ce25e8739836890bab7170fa20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5Njk4OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9174#discussion_r501696989", "bodyText": "patter typo", "author": "keyki", "createdAt": "2020-10-08T12:55:13Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/matrix/UpgradeMatrixService.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.sequenceiq.cloudbreak.service.upgrade.matrix;\n+\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.regex.PatternSyntaxException;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class UpgradeMatrixService {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(UpgradeMatrixService.class);\n+\n+    @Inject\n+    private UpgradeMatrixDefinition upgradeMatrixDefinition;\n+\n+    public boolean permitByUpgradeMatrix(String currentVersion, String targetVersion) {\n+        Set<RuntimeUpgradeMatrix> upgradeMatrix = getUpgradeMatrix();\n+        return upgradeMatrix.stream()\n+                .filter(matrix -> matchesTargetVersion(targetVersion, matrix))\n+                .anyMatch(matchesCurrentVersion(currentVersion));\n+    }\n+\n+    private Set<RuntimeUpgradeMatrix> getUpgradeMatrix() {\n+        return upgradeMatrixDefinition.getRuntimeUpgradeMatrix();\n+    }\n+\n+    private boolean matchesTargetVersion(String targetVersion, RuntimeUpgradeMatrix matrix) {\n+        return matches(targetVersion, matrix.getTargetRuntime().getVersion());\n+    }\n+\n+    private Predicate<RuntimeUpgradeMatrix> matchesCurrentVersion(String currentVersion) {\n+        return matrix -> matrix.getSourceRuntime().stream()\n+                .anyMatch(sourceRuntime -> matches(currentVersion, sourceRuntime.getVersion()));\n+    }\n+\n+    private boolean matches(String version, String patter) {", "originalCommit": "c966190ac96ad6ce25e8739836890bab7170fa20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc6be452829f5fce687d21c736a88fba367e2d17", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/matrix/UpgradeMatrixService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/matrix/UpgradeMatrixService.java\nindex f78ca9425c..9484eec702 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/matrix/UpgradeMatrixService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/matrix/UpgradeMatrixService.java\n\n@@ -38,11 +38,11 @@ public class UpgradeMatrixService {\n                 .anyMatch(sourceRuntime -> matches(currentVersion, sourceRuntime.getVersion()));\n     }\n \n-    private boolean matches(String version, String patter) {\n+    private boolean matches(String version, String pattern) {\n         try {\n-            return version.matches(patter);\n+            return version.matches(pattern);\n         } catch (PatternSyntaxException e) {\n-            LOGGER.warn(\"Failed to process regular expression {}\", patter, e);\n+            LOGGER.warn(\"Failed to process regular expression {}\", pattern, e);\n             return false;\n         }\n     }\n"}}, {"oid": "fc6be452829f5fce687d21c736a88fba367e2d17", "url": "https://github.com/hortonworks/cloudbreak/commit/fc6be452829f5fce687d21c736a88fba367e2d17", "message": "CB-8228: Implement the mechanics to specify the upgrade matrix", "committedDate": "2020-10-08T13:43:56Z", "type": "forcePushed"}, {"oid": "21f5725ec1cb74d42558b73cfa3626c0c06af616", "url": "https://github.com/hortonworks/cloudbreak/commit/21f5725ec1cb74d42558b73cfa3626c0c06af616", "message": "CB-8228: Implement the mechanics to specify the upgrade matrix", "committedDate": "2020-10-08T14:56:09Z", "type": "commit"}, {"oid": "21f5725ec1cb74d42558b73cfa3626c0c06af616", "url": "https://github.com/hortonworks/cloudbreak/commit/21f5725ec1cb74d42558b73cfa3626c0c06af616", "message": "CB-8228: Implement the mechanics to specify the upgrade matrix", "committedDate": "2020-10-08T14:56:09Z", "type": "forcePushed"}]}