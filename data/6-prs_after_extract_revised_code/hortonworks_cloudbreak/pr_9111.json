{"pr_number": 9111, "pr_title": "CB-9061 Accounttag validation should check existing expressions", "pr_createdAt": "2020-09-30T13:39:28Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9111", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzUxOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9111#discussion_r497583519", "bodyText": "isAccountTagContainsTemplate(accountTag.getTagKey()) && isAccountTagInvalid(accountTag.getTagKey()) is the same", "author": "topolyai5", "createdAt": "2020-09-30T15:03:40Z", "path": "environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java", "diffHunk": "@@ -100,6 +101,30 @@ public void validate(List<AccountTag> accountTags) {\n                 throw new BadRequestException(\n                         String.format(\"The value '%s' can only can not start with microsoft or azure or aws or windows or space\", accountTag.getTagValue()));\n             }\n+            if (isAccountTagContainsTemplate(accountTag.getTagKey())) {\n+                if (isAccountTagInvalid(accountTag.getTagKey())) {", "originalCommit": "1aff5f96d272778268a04892a11519b8e4aa5475", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java b/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\nindex 3392be68e7..5bc33352f0 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\n\n@@ -101,17 +101,13 @@ public class DefaultInternalAccountTagService {\n                 throw new BadRequestException(\n                         String.format(\"The value '%s' can only can not start with microsoft or azure or aws or windows or space\", accountTag.getTagValue()));\n             }\n-            if (isAccountTagContainsTemplate(accountTag.getTagKey())) {\n-                if (isAccountTagInvalid(accountTag.getTagKey())) {\n-                    throw new BadRequestException(\n-                            String.format(\"The key '%s' of the tag contains invalid templates\", accountTag.getTagKey()));\n-                }\n+            if (isAccountTagContainsTemplate(accountTag.getTagKey()) && isAccountTagInvalid(accountTag.getTagKey())) {\n+                throw new BadRequestException(\n+                        String.format(\"The key '%s' of the tag contains invalid templates\", accountTag.getTagKey()));\n             }\n-            if (isAccountTagContainsTemplate(accountTag.getTagValue())) {\n-                if (isAccountTagInvalid(accountTag.getTagValue())) {\n-                    throw new BadRequestException(\n-                            String.format(\"The value '%s' of the tag contains invalid templates\", accountTag.getTagValue()));\n-                }\n+            if (isAccountTagContainsTemplate(accountTag.getTagValue()) && isAccountTagInvalid(accountTag.getTagValue())) {\n+                throw new BadRequestException(\n+                        String.format(\"The value '%s' of the tag contains invalid templates\", accountTag.getTagValue()));\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzkwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9111#discussion_r497583903", "bodyText": "same like the prev same", "author": "topolyai5", "createdAt": "2020-09-30T15:04:08Z", "path": "environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java", "diffHunk": "@@ -100,6 +101,30 @@ public void validate(List<AccountTag> accountTags) {\n                 throw new BadRequestException(\n                         String.format(\"The value '%s' can only can not start with microsoft or azure or aws or windows or space\", accountTag.getTagValue()));\n             }\n+            if (isAccountTagContainsTemplate(accountTag.getTagKey())) {\n+                if (isAccountTagInvalid(accountTag.getTagKey())) {\n+                    throw new BadRequestException(\n+                            String.format(\"The key '%s' of the tag contains invalid templates\", accountTag.getTagKey()));\n+                }\n+            }\n+            if (isAccountTagContainsTemplate(accountTag.getTagValue())) {", "originalCommit": "1aff5f96d272778268a04892a11519b8e4aa5475", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java b/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\nindex 3392be68e7..5bc33352f0 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/tags/service/DefaultInternalAccountTagService.java\n\n@@ -101,17 +101,13 @@ public class DefaultInternalAccountTagService {\n                 throw new BadRequestException(\n                         String.format(\"The value '%s' can only can not start with microsoft or azure or aws or windows or space\", accountTag.getTagValue()));\n             }\n-            if (isAccountTagContainsTemplate(accountTag.getTagKey())) {\n-                if (isAccountTagInvalid(accountTag.getTagKey())) {\n-                    throw new BadRequestException(\n-                            String.format(\"The key '%s' of the tag contains invalid templates\", accountTag.getTagKey()));\n-                }\n+            if (isAccountTagContainsTemplate(accountTag.getTagKey()) && isAccountTagInvalid(accountTag.getTagKey())) {\n+                throw new BadRequestException(\n+                        String.format(\"The key '%s' of the tag contains invalid templates\", accountTag.getTagKey()));\n             }\n-            if (isAccountTagContainsTemplate(accountTag.getTagValue())) {\n-                if (isAccountTagInvalid(accountTag.getTagValue())) {\n-                    throw new BadRequestException(\n-                            String.format(\"The value '%s' of the tag contains invalid templates\", accountTag.getTagValue()));\n-                }\n+            if (isAccountTagContainsTemplate(accountTag.getTagValue()) && isAccountTagInvalid(accountTag.getTagValue())) {\n+                throw new BadRequestException(\n+                        String.format(\"The value '%s' of the tag contains invalid templates\", accountTag.getTagValue()));\n             }\n         }\n     }\n"}}, {"oid": "2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "url": "https://github.com/hortonworks/cloudbreak/commit/2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "message": "CB-9061 Accounttag validation should check existing expressions", "committedDate": "2020-09-30T20:21:20Z", "type": "commit"}, {"oid": "2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "url": "https://github.com/hortonworks/cloudbreak/commit/2ae42aa37d73acf5b38f206c91f20aab2974b7c2", "message": "CB-9061 Accounttag validation should check existing expressions", "committedDate": "2020-09-30T20:21:20Z", "type": "forcePushed"}]}