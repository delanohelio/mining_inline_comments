{"pr_number": 7224, "pr_title": "CB-5303. Add stop telemetry agents action before termination.", "pr_createdAt": "2020-02-05T15:44:23Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7224", "timeline": [{"oid": "eb3c032ebc9dffb55284c061c22cc5bf1a4f5338", "url": "https://github.com/hortonworks/cloudbreak/commit/eb3c032ebc9dffb55284c061c22cc5bf1a4f5338", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-05T16:03:12Z", "type": "forcePushed"}, {"oid": "9a50e33c8c01ef3ef32c70d48dc8e4be19ac2e66", "url": "https://github.com/hortonworks/cloudbreak/commit/9a50e33c8c01ef3ef32c70d48dc8e4be19ac2e66", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-05T16:28:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwNjY5NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7224#discussion_r375706694", "bodyText": "this doesn't seem right in case of CCM. if we deregister freeipa from CCM and CP we won't be able to communicate with it anymore.", "author": "lacikaaa", "createdAt": "2020-02-06T08:54:40Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/flow/stack/termination/StackTerminationFlowConfig.java", "diffHunk": "@@ -32,7 +34,8 @@\n                     .defaultFailureEvent(TERMINATION_FAILED_EVENT)\n                     .from(INIT_STATE).to(DEREGISTER_CLUSTERPROXY_STATE).event(TERMINATION_EVENT).noFailureEvent()\n                     .from(DEREGISTER_CLUSTERPROXY_STATE).to(DEREGISTER_CCMKEY_STATE).event(CLUSTER_PROXY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n-                    .from(DEREGISTER_CCMKEY_STATE).to(REMOVE_MACHINE_USER_STATE).event(CCM_KEY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n+                    .from(DEREGISTER_CCMKEY_STATE).to(STOP_TELEMETRY_AGENT_STATE).event(CCM_KEY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n+                    .from(STOP_TELEMETRY_AGENT_STATE).to(REMOVE_MACHINE_USER_STATE).event(STOP_TELEMETRY_AGENT_FINISHED_EVENT).noFailureEvent()", "originalCommit": "9a50e33c8c01ef3ef32c70d48dc8e4be19ac2e66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f70f3fc322ea51a13eef97e2212b1024b7e099d4", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/flow/stack/termination/StackTerminationFlowConfig.java b/freeipa/src/main/java/com/sequenceiq/freeipa/flow/stack/termination/StackTerminationFlowConfig.java\nindex e328bf8f20..0bb687bac6 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/flow/stack/termination/StackTerminationFlowConfig.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/flow/stack/termination/StackTerminationFlowConfig.java\n\n@@ -32,10 +32,10 @@ public class StackTerminationFlowConfig extends AbstractFlowConfiguration<StackT\n     private static final List<Transition<StackTerminationState, StackTerminationEvent>> TRANSITIONS =\n             new Builder<StackTerminationState, StackTerminationEvent>()\n                     .defaultFailureEvent(TERMINATION_FAILED_EVENT)\n-                    .from(INIT_STATE).to(DEREGISTER_CLUSTERPROXY_STATE).event(TERMINATION_EVENT).noFailureEvent()\n+                    .from(INIT_STATE).to(STOP_TELEMETRY_AGENT_STATE).event(TERMINATION_EVENT).noFailureEvent()\n+                    .from(STOP_TELEMETRY_AGENT_STATE).to(DEREGISTER_CLUSTERPROXY_STATE).event(STOP_TELEMETRY_AGENT_FINISHED_EVENT).noFailureEvent()\n                     .from(DEREGISTER_CLUSTERPROXY_STATE).to(DEREGISTER_CCMKEY_STATE).event(CLUSTER_PROXY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n-                    .from(DEREGISTER_CCMKEY_STATE).to(STOP_TELEMETRY_AGENT_STATE).event(CCM_KEY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n-                    .from(STOP_TELEMETRY_AGENT_STATE).to(REMOVE_MACHINE_USER_STATE).event(STOP_TELEMETRY_AGENT_FINISHED_EVENT).noFailureEvent()\n+                    .from(DEREGISTER_CCMKEY_STATE).to(REMOVE_MACHINE_USER_STATE).event(CCM_KEY_DEREGISTRATION_FINISHED_EVENT).noFailureEvent()\n                     .from(REMOVE_MACHINE_USER_STATE).to(TERMINATION_STATE).event(REMOVE_MACHINE_USER_FINISHED_EVENT).noFailureEvent()\n                     .from(TERMINATION_STATE).to(TERMINATION_FINISHED_STATE).event(TERMINATION_FINISHED_EVENT).defaultFailureEvent()\n                     .from(TERMINATION_FINISHED_STATE).to(FINAL_STATE).event(TERMINATION_FINALIZED_EVENT).defaultFailureEvent()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwNzcwMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7224#discussion_r375707701", "bodyText": "could you move this out?", "author": "lacikaaa", "createdAt": "2020-02-06T08:56:46Z", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java", "diffHunk": "@@ -195,6 +195,27 @@ public String submit(SaltConnector saltConnector) {\n         }\n     }\n \n+    @Override\n+    public void stopTelemetryAgent(List<GatewayConfig> allGateway, Set<Node> nodes, ExitCriteriaModel exitModel)\n+            throws CloudbreakOrchestratorFailedException {\n+        GatewayConfig primaryGateway = getPrimaryGatewayConfig(allGateway);\n+        Set<String> gatewayTargets = getGatewayPrivateIps(allGateway);\n+        try (SaltConnector sc = createSaltConnector(primaryGateway)) {\n+            BaseSaltJobRunner baseSaltJobRunner = new BaseSaltJobRunner(gatewayTargets, nodes) {", "originalCommit": "9a50e33c8c01ef3ef32c70d48dc8e4be19ac2e66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69b8274f956aa6abd16876e3246e665ed8e4d447", "chunk": "diff --git a/orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java b/orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java\nindex eff763e9bf..172630f682 100644\n--- a/orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java\n+++ b/orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltOrchestrator.java\n\n@@ -201,13 +197,8 @@ public class SaltOrchestrator implements HostOrchestrator {\n         GatewayConfig primaryGateway = getPrimaryGatewayConfig(allGateway);\n         Set<String> gatewayTargets = getGatewayPrivateIps(allGateway);\n         try (SaltConnector sc = createSaltConnector(primaryGateway)) {\n-            BaseSaltJobRunner baseSaltJobRunner = new BaseSaltJobRunner(gatewayTargets, nodes) {\n-                @Override\n-                public String submit(SaltConnector saltConnector) {\n-                    return SaltStates.stopTelemetryAgents(saltConnector);\n-                }\n-            };\n-            OrchestratorBootstrap saltJobIdTracker = new SaltJobIdTracker(sc, baseSaltJobRunner);\n+            StateAllRunner stateAllJobRunner = new StateAllRunner(gatewayTargets, nodes, \"fluent.agent-stop\");\n+            OrchestratorBootstrap saltJobIdTracker = new SaltJobIdTracker(sc, stateAllJobRunner);\n             Callable<Boolean> saltJobRunBootstrapRunner = runner(saltJobIdTracker, exitCriteria, exitModel);\n             saltJobRunBootstrapRunner.call();\n         } catch (Exception e) {\n"}}, {"oid": "f70f3fc322ea51a13eef97e2212b1024b7e099d4", "url": "https://github.com/hortonworks/cloudbreak/commit/f70f3fc322ea51a13eef97e2212b1024b7e099d4", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-06T09:25:21Z", "type": "forcePushed"}, {"oid": "69b8274f956aa6abd16876e3246e665ed8e4d447", "url": "https://github.com/hortonworks/cloudbreak/commit/69b8274f956aa6abd16876e3246e665ed8e4d447", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-06T09:53:54Z", "type": "forcePushed"}, {"oid": "b86a500d87104be48a41aba2468ab8ea4174b4c8", "url": "https://github.com/hortonworks/cloudbreak/commit/b86a500d87104be48a41aba2468ab8ea4174b4c8", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-06T12:32:41Z", "type": "forcePushed"}, {"oid": "9163f2524f79f5f6475e207068b4bc5997fc2046", "url": "https://github.com/hortonworks/cloudbreak/commit/9163f2524f79f5f6475e207068b4bc5997fc2046", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-06T18:00:56Z", "type": "commit"}, {"oid": "9163f2524f79f5f6475e207068b4bc5997fc2046", "url": "https://github.com/hortonworks/cloudbreak/commit/9163f2524f79f5f6475e207068b4bc5997fc2046", "message": "CB-5303. Add stop telemetry agent action before termination.", "committedDate": "2020-02-06T18:00:56Z", "type": "forcePushed"}]}