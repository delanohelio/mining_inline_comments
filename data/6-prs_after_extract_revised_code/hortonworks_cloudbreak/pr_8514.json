{"pr_number": 8514, "pr_title": "CB-6680: repair after upgrade", "pr_createdAt": "2020-07-08T20:52:18Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8514", "timeline": [{"oid": "59d4d631eaaadb49311fb10d671f5b6f9ee58bc6", "url": "https://github.com/hortonworks/cloudbreak/commit/59d4d631eaaadb49311fb10d671f5b6f9ee58bc6", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-08T21:57:20Z", "type": "forcePushed"}, {"oid": "296ef6b0f7f6ed8e90d923ac38a76ca191c080ab", "url": "https://github.com/hortonworks/cloudbreak/commit/296ef6b0f7f6ed8e90d923ac38a76ca191c080ab", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-16T19:46:58Z", "type": "forcePushed"}, {"oid": "76d6e620ac7e3a358234cdcc3f2164f71503d48b", "url": "https://github.com/hortonworks/cloudbreak/commit/76d6e620ac7e3a358234cdcc3f2164f71503d48b", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-16T20:21:36Z", "type": "forcePushed"}, {"oid": "4a5fae1676f40c43841cbb78c38e90591c746a66", "url": "https://github.com/hortonworks/cloudbreak/commit/4a5fae1676f40c43841cbb78c38e90591c746a66", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-16T20:27:16Z", "type": "forcePushed"}, {"oid": "b07a95dfcd3f09fdd1363066f1d563e991fd019d", "url": "https://github.com/hortonworks/cloudbreak/commit/b07a95dfcd3f09fdd1363066f1d563e991fd019d", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-16T20:47:34Z", "type": "forcePushed"}, {"oid": "2b42ec24b150d1c5ea83758f4c66d4f25a69adf2", "url": "https://github.com/hortonworks/cloudbreak/commit/2b42ec24b150d1c5ea83758f4c66d4f25a69adf2", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-17T12:35:05Z", "type": "forcePushed"}, {"oid": "616d4bcc9baaeef022f2893f3042167cd98a29de", "url": "https://github.com/hortonworks/cloudbreak/commit/616d4bcc9baaeef022f2893f3042167cd98a29de", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-17T21:15:35Z", "type": "forcePushed"}, {"oid": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "url": "https://github.com/hortonworks/cloudbreak/commit/e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-18T07:43:19Z", "type": "forcePushed"}, {"oid": "5768b8adaea6f02802cdd369d5c611c7547cf9ef", "url": "https://github.com/hortonworks/cloudbreak/commit/5768b8adaea6f02802cdd369d5c611c7547cf9ef", "message": "CB-8043 Fix Flink Azure template master nodecount", "committedDate": "2020-07-20T06:50:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDA3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457134077", "bodyText": "!true we can use false?", "author": "keyki", "createdAt": "2020-07-20T07:35:01Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/validation/UpgradeRequestValidator.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.sequenceiq.cloudbreak.validation;\n+\n+import java.util.Objects;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.tags.upgrade.UpgradeV4Request;\n+\n+public class UpgradeRequestValidator implements ConstraintValidator<ValidUpgradeRequest, UpgradeV4Request> {\n+\n+    @Override\n+    public boolean isValid(UpgradeV4Request value, ConstraintValidatorContext context) {\n+        if (Objects.isNull(value)) {\n+            return false;\n+        }\n+        return isOsUpgrade(value) || isRuntimeUpgrade(value);\n+    }\n+\n+    private boolean isOsUpgrade(UpgradeV4Request request) {\n+        return Boolean.TRUE.equals(request.getLockComponents()) && StringUtils.isEmpty(request.getRuntime());\n+    }\n+\n+    private boolean isRuntimeUpgrade(UpgradeV4Request request) {\n+        return !Boolean.TRUE.equals(request.getLockComponents())", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMjExMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457422111", "bodyText": "This handles \"null\" value as Runtime upgrade", "author": "pdarvasi", "createdAt": "2020-07-20T14:11:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3973ca8c19459adbc816d772ab8b3b46a40af85f", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/validation/UpgradeRequestValidator.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/validation/UpgradeRequestValidator.java\ndeleted file mode 100644\nindex 8dbd881112..0000000000\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/validation/UpgradeRequestValidator.java\n+++ /dev/null\n\n@@ -1,31 +0,0 @@\n-package com.sequenceiq.cloudbreak.validation;\n-\n-import java.util.Objects;\n-\n-import javax.validation.ConstraintValidator;\n-import javax.validation.ConstraintValidatorContext;\n-\n-import org.apache.commons.lang3.StringUtils;\n-\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.tags.upgrade.UpgradeV4Request;\n-\n-public class UpgradeRequestValidator implements ConstraintValidator<ValidUpgradeRequest, UpgradeV4Request> {\n-\n-    @Override\n-    public boolean isValid(UpgradeV4Request value, ConstraintValidatorContext context) {\n-        if (Objects.isNull(value)) {\n-            return false;\n-        }\n-        return isOsUpgrade(value) || isRuntimeUpgrade(value);\n-    }\n-\n-    private boolean isOsUpgrade(UpgradeV4Request request) {\n-        return Boolean.TRUE.equals(request.getLockComponents()) && StringUtils.isEmpty(request.getRuntime());\n-    }\n-\n-    private boolean isRuntimeUpgrade(UpgradeV4Request request) {\n-        return !Boolean.TRUE.equals(request.getLockComponents())\n-                && ((!StringUtils.isEmpty(request.getRuntime()) && StringUtils.isEmpty(request.getImageId()))\n-                || (!StringUtils.isEmpty(request.getImageId()) && StringUtils.isEmpty(request.getRuntime())));\n-    }\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0MTUzMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457141532", "bodyText": "Can you add some parentheses, what are we comparing or even better to extract them to methods to better understand what are the conditions.", "author": "keyki", "createdAt": "2020-07-20T07:46:12Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java", "diffHunk": "@@ -72,6 +74,17 @@ private ImageFilterResult filterImages(List<Image> availableImages, Image curren\n         return new ImageFilterResult(new Images(null, images, null), getReason(images));\n     }\n \n+    private Predicate<Image> filterPreviousImages(Image currentImage, boolean lockComponents) {\n+        return image -> {\n+            boolean result = !lockComponents", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3973ca8c19459adbc816d772ab8b3b46a40af85f", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java\nindex 056f5d57a7..fb5be5aaa9 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/upgrade/ClusterUpgradeImageFilter.java\n\n@@ -74,17 +68,6 @@ public class ClusterUpgradeImageFilter {\n         return new ImageFilterResult(new Images(null, images, null), getReason(images));\n     }\n \n-    private Predicate<Image> filterPreviousImages(Image currentImage, boolean lockComponents) {\n-        return image -> {\n-            boolean result = !lockComponents\n-                    || (Objects.nonNull(image.getCreated())\n-                    && Objects.nonNull(currentImage.getCreated())\n-                    && image.getCreated() > currentImage.getCreated());\n-            setReason(result, \"There are no newer images available than \" + currentImage.getDate() + \".\");\n-            return result;\n-        };\n-    }\n-\n     private Predicate<Image> filterCurrentImage(Image currentImage) {\n         return image -> {\n             boolean result = !image.getUuid().equals(currentImage.getUuid());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0Mjg1Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457142852", "bodyText": "!true = false", "author": "keyki", "createdAt": "2020-07-20T07:48:06Z", "path": "datalake-api/src/main/java/com/sequenceiq/sdx/validation/UpgradeRequestValidator.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.sequenceiq.sdx.validation;\n+\n+import java.util.Objects;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.sequenceiq.sdx.api.model.SdxUpgradeRequest;\n+\n+public class UpgradeRequestValidator implements ConstraintValidator<ValidUpgradeRequest, SdxUpgradeRequest> {\n+\n+    @Override\n+    public boolean isValid(SdxUpgradeRequest value, ConstraintValidatorContext context) {\n+        if (Objects.isNull(value)) {\n+            return false;\n+        }\n+        return isOsUpgrade(value) || isRuntimeUpgrade(value);\n+    }\n+\n+    private boolean isOsUpgrade(SdxUpgradeRequest request) {\n+        return Boolean.TRUE.equals(request.getLockComponents()) && StringUtils.isEmpty(request.getRuntime());\n+    }\n+\n+    private boolean isRuntimeUpgrade(SdxUpgradeRequest request) {\n+        return !Boolean.TRUE.equals(request.getLockComponents())", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMjIyMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457422222", "bodyText": "This handles \"null\" value as Runtime upgrade", "author": "pdarvasi", "createdAt": "2020-07-20T14:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0Mjg1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3973ca8c19459adbc816d772ab8b3b46a40af85f", "chunk": "diff --git a/datalake-api/src/main/java/com/sequenceiq/sdx/validation/UpgradeRequestValidator.java b/datalake-api/src/main/java/com/sequenceiq/sdx/validation/UpgradeRequestValidator.java\ndeleted file mode 100644\nindex 9f12630da2..0000000000\n--- a/datalake-api/src/main/java/com/sequenceiq/sdx/validation/UpgradeRequestValidator.java\n+++ /dev/null\n\n@@ -1,31 +0,0 @@\n-package com.sequenceiq.sdx.validation;\n-\n-import java.util.Objects;\n-\n-import javax.validation.ConstraintValidator;\n-import javax.validation.ConstraintValidatorContext;\n-\n-import org.apache.commons.lang3.StringUtils;\n-\n-import com.sequenceiq.sdx.api.model.SdxUpgradeRequest;\n-\n-public class UpgradeRequestValidator implements ConstraintValidator<ValidUpgradeRequest, SdxUpgradeRequest> {\n-\n-    @Override\n-    public boolean isValid(SdxUpgradeRequest value, ConstraintValidatorContext context) {\n-        if (Objects.isNull(value)) {\n-            return false;\n-        }\n-        return isOsUpgrade(value) || isRuntimeUpgrade(value);\n-    }\n-\n-    private boolean isOsUpgrade(SdxUpgradeRequest request) {\n-        return Boolean.TRUE.equals(request.getLockComponents()) && StringUtils.isEmpty(request.getRuntime());\n-    }\n-\n-    private boolean isRuntimeUpgrade(SdxUpgradeRequest request) {\n-        return !Boolean.TRUE.equals(request.getLockComponents())\n-                && ((!StringUtils.isEmpty(request.getRuntime()) && StringUtils.isEmpty(request.getImageId()))\n-                || (!StringUtils.isEmpty(request.getImageId()) && StringUtils.isEmpty(request.getRuntime())));\n-    }\n-}\n\\ No newline at end of file\n"}}, {"oid": "3973ca8c19459adbc816d772ab8b3b46a40af85f", "url": "https://github.com/hortonworks/cloudbreak/commit/3973ca8c19459adbc816d772ab8b3b46a40af85f", "message": "Merge pull request #8592 from hortonworks/CB-8043\n\nCB-8043 Fix Flink Azure template master nodecount", "committedDate": "2020-07-20T08:30:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE4NTc1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457185753", "bodyText": "messagesService is not used anymore", "author": "keyki", "createdAt": "2020-07-20T08:45:34Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxUpgradeService.java", "diffHunk": "@@ -290,8 +241,4 @@ private boolean stackAndClusterAvailable(StackV4Response stackV4Response, Cluste\n                 && cluster.getStatus() != null\n                 && cluster.getStatus().isAvailable();\n     }\n-\n-    private String getMessage(String imageId) {\n-        return messagesService.getMessage(ResourceEvent.DATALAKE_UPGRADE.getMessage(), Collections.singletonList(imageId));", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "53650b5006e91f3502fb59e97d1353f874edb00d", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxUpgradeService.java b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxUpgradeService.java\nindex 49bdd16ada..0945eebf4c 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxUpgradeService.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxUpgradeService.java\n\n@@ -241,4 +290,8 @@ public class SdxUpgradeService {\n                 && cluster.getStatus() != null\n                 && cluster.getStatus().isAvailable();\n     }\n+\n+    private String getMessage(String imageId) {\n+        return messagesService.getMessage(ResourceEvent.DATALAKE_UPGRADE.getMessage(), Collections.singletonList(imageId));\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI3MjEwNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457272106", "bodyText": "Please rename the logger class to SdxRuntimeUpgradeService", "author": "tiborpopovics", "createdAt": "2020-07-20T10:46:39Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java", "diffHunk": "@@ -24,18 +27,23 @@\n import com.sequenceiq.cloudbreak.event.ResourceEvent;\n import com.sequenceiq.cloudbreak.logger.MDCBuilder;\n import com.sequenceiq.cloudbreak.message.CloudbreakMessagesService;\n+import com.sequenceiq.cloudbreak.util.NullUtil;\n import com.sequenceiq.datalake.controller.exception.BadRequestException;\n import com.sequenceiq.datalake.controller.sdx.SdxUpgradeClusterConverter;\n+import com.sequenceiq.datalake.controller.sdx.SdxUpgradeController;\n import com.sequenceiq.datalake.entity.SdxCluster;\n import com.sequenceiq.datalake.flow.SdxReactorFlowManager;\n import com.sequenceiq.datalake.service.sdx.SdxService;\n import com.sequenceiq.flow.api.model.FlowIdentifier;\n+import com.sequenceiq.sdx.api.model.SdxUpgradeReplaceVms;\n import com.sequenceiq.sdx.api.model.SdxUpgradeRequest;\n import com.sequenceiq.sdx.api.model.SdxUpgradeResponse;\n \n @Component\n public class SdxRuntimeUpgradeService {\n \n+    private static final Logger LOGGER = LoggerFactory.getLogger(SdxUpgradeController.class);", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecc7999925fd86507efed1d3e1d82475d13d67f9", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java b/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\nindex d16a040d91..37d6ae0615 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\n\n@@ -30,7 +30,6 @@ import com.sequenceiq.cloudbreak.message.CloudbreakMessagesService;\n import com.sequenceiq.cloudbreak.util.NullUtil;\n import com.sequenceiq.datalake.controller.exception.BadRequestException;\n import com.sequenceiq.datalake.controller.sdx.SdxUpgradeClusterConverter;\n-import com.sequenceiq.datalake.controller.sdx.SdxUpgradeController;\n import com.sequenceiq.datalake.entity.SdxCluster;\n import com.sequenceiq.datalake.flow.SdxReactorFlowManager;\n import com.sequenceiq.datalake.service.sdx.SdxService;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI3MzM3NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8514#discussion_r457273375", "bodyText": "Please remove this empty line", "author": "tiborpopovics", "createdAt": "2020-07-20T10:48:37Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java", "diffHunk": "@@ -56,51 +64,63 @@\n     @Inject\n     private EntitlementService entitlementService;\n \n-    public SdxUpgradeResponse checkForRuntimeUpgradeByName(String userCrn, String name, SdxUpgradeRequest upgradeSdxClusterRequest) {\n-        verifyRuntimeUpgradeEntitlement(userCrn);\n-        UpgradeV4Response upgradeV4Response = stackV4Endpoint.checkForClusterUpgradeByName(0L, name,\n-                sdxUpgradeClusterConverter.sdxUpgradeRequestToUpgradeV4Request(upgradeSdxClusterRequest));\n-        return sdxUpgradeClusterConverter.upgradeResponseToSdxUpgradeResponse(upgradeV4Response);\n+    public SdxUpgradeResponse checkForUpgradeByName(String userCrn, String clusterName, SdxUpgradeRequest upgradeSdxClusterRequest) {\n+        SdxUpgradeResponse sdxUpgradeResponse = checkForSdxUpgradeResponse(userCrn, upgradeSdxClusterRequest, clusterName);\n+        validateUpgradeCandidates(clusterName, sdxUpgradeResponse);\n+        return sdxUpgradeResponse;\n     }\n \n-    public SdxUpgradeResponse checkForRuntimeUpgradeByCrn(String userCrn, String crn, SdxUpgradeRequest upgradeSdxClusterRequest) {\n-        verifyRuntimeUpgradeEntitlement(userCrn);\n-        SdxCluster sdxCluster = sdxService.getByCrn(userCrn, crn);\n-        UpgradeV4Response upgradeV4Response = stackV4Endpoint.checkForClusterUpgradeByName(WORKSPACE_ID, sdxCluster.getClusterName(),\n-                sdxUpgradeClusterConverter.sdxUpgradeRequestToUpgradeV4Request(upgradeSdxClusterRequest));\n-        return sdxUpgradeClusterConverter.upgradeResponseToSdxUpgradeResponse(upgradeV4Response);\n+    public SdxUpgradeResponse checkForUpgradeByCrn(String userCrn, String crn, SdxUpgradeRequest upgradeSdxClusterRequest) {\n+", "originalCommit": "e4ab30e06962d9f138bbf8d1070a9e5e141b13a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecc7999925fd86507efed1d3e1d82475d13d67f9", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java b/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\nindex d16a040d91..37d6ae0615 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/upgrade/SdxRuntimeUpgradeService.java\n\n@@ -71,7 +70,6 @@ public class SdxRuntimeUpgradeService {\n     }\n \n     public SdxUpgradeResponse checkForUpgradeByCrn(String userCrn, String crn, SdxUpgradeRequest upgradeSdxClusterRequest) {\n-\n         SdxCluster cluster = sdxService.getByCrn(userCrn, crn);\n         String clusterName = cluster.getClusterName();\n         SdxUpgradeResponse sdxUpgradeResponse = checkForSdxUpgradeResponse(userCrn, upgradeSdxClusterRequest, clusterName);\n"}}, {"oid": "ecc7999925fd86507efed1d3e1d82475d13d67f9", "url": "https://github.com/hortonworks/cloudbreak/commit/ecc7999925fd86507efed1d3e1d82475d13d67f9", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-20T14:37:03Z", "type": "forcePushed"}, {"oid": "53650b5006e91f3502fb59e97d1353f874edb00d", "url": "https://github.com/hortonworks/cloudbreak/commit/53650b5006e91f3502fb59e97d1353f874edb00d", "message": "CB-6795 - Remove incorrectly generated swagger field", "committedDate": "2020-07-20T16:39:38Z", "type": "commit"}, {"oid": "3c64ae5c444ef31c568b3b65d11c6ea142eebe17", "url": "https://github.com/hortonworks/cloudbreak/commit/3c64ae5c444ef31c568b3b65d11c6ea142eebe17", "message": "Merge remote-tracking branch 'origin/CB-2.26.0'", "committedDate": "2020-07-20T16:46:27Z", "type": "commit"}, {"oid": "df3ea071bc7753920c3c66b638bfc8190b74085e", "url": "https://github.com/hortonworks/cloudbreak/commit/df3ea071bc7753920c3c66b638bfc8190b74085e", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-20T16:48:21Z", "type": "forcePushed"}, {"oid": "b41917e1047e1b848c59672dd8e7f16bd097a568", "url": "https://github.com/hortonworks/cloudbreak/commit/b41917e1047e1b848c59672dd8e7f16bd097a568", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-20T17:01:06Z", "type": "commit"}, {"oid": "b41917e1047e1b848c59672dd8e7f16bd097a568", "url": "https://github.com/hortonworks/cloudbreak/commit/b41917e1047e1b848c59672dd8e7f16bd097a568", "message": "CB-6680: repair after upgrade", "committedDate": "2020-07-20T17:01:06Z", "type": "forcePushed"}]}