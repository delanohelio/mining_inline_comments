{"pr_number": 9046, "pr_title": "CB-8636 move cloud related validation into a flow step which improves\u2026", "pr_createdAt": "2020-09-19T20:29:37Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9046", "timeline": [{"oid": "ea3baa01d32ff160a3c6a07ed1bfae94adf85912", "url": "https://github.com/hortonworks/cloudbreak/commit/ea3baa01d32ff160a3c6a07ed1bfae94adf85912", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-21T14:16:39Z", "type": "forcePushed"}, {"oid": "d421a1a39fee6d48aab23a0a3f83f933bbb64c8f", "url": "https://github.com/hortonworks/cloudbreak/commit/d421a1a39fee6d48aab23a0a3f83f933bbb64c8f", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-22T07:11:48Z", "type": "forcePushed"}, {"oid": "ff97e9c297ea665a4c408a1b84586a617615636c", "url": "https://github.com/hortonworks/cloudbreak/commit/ff97e9c297ea665a4c408a1b84586a617615636c", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-22T13:55:04Z", "type": "forcePushed"}, {"oid": "40a0e10f463eba9b9482f6f65c4e9d33670f458f", "url": "https://github.com/hortonworks/cloudbreak/commit/40a0e10f463eba9b9482f6f65c4e9d33670f458f", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-23T10:22:32Z", "type": "forcePushed"}, {"oid": "0913fbf35d85e3f97ea8c37de736a5e236e36c96", "url": "https://github.com/hortonworks/cloudbreak/commit/0913fbf35d85e3f97ea8c37de736a5e236e36c96", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-23T10:24:39Z", "type": "forcePushed"}, {"oid": "e61d288657a1531dfe87d4a1083808fa3f1be8fd", "url": "https://github.com/hortonworks/cloudbreak/commit/e61d288657a1531dfe87d4a1083808fa3f1be8fd", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-23T21:51:02Z", "type": "forcePushed"}, {"oid": "9c7cb06003fd86190f5383ba0ccf8202e4c96d03", "url": "https://github.com/hortonworks/cloudbreak/commit/9c7cb06003fd86190f5383ba0ccf8202e4c96d03", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-24T06:56:18Z", "type": "forcePushed"}, {"oid": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "url": "https://github.com/hortonworks/cloudbreak/commit/c04365b2d399769cc8f16fb088b52e4ea0d4610e", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-24T14:53:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEyNTc4OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r494125789", "bodyText": "is it need?", "author": "topolyai5", "createdAt": "2020-09-24T08:17:46Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java", "diffHunk": "@@ -406,15 +360,14 @@ private void createClusterIfNeed(User user, StackV4Request stackRequest, Stack s\n     }\n \n     private void ensureStackDoesNotExists(String stackName, Workspace workspace) {\n-        try {\n-            stackService.getIdByNameInWorkspace(stackName, workspace.getId());\n-        } catch (NotFoundException e) {\n-            return;\n+        Optional<StackView> byName = stackViewService.findByName(stackName, workspace.getId());\n+        if (byName.isPresent()) {\n+            throw new BadRequestException(\"Cluster already exists: \" + stackName);\n         }\n-        throw new BadRequestException(\"Cluster already exists: \" + stackName);\n     }\n \n     private Blueprint determineBlueprint(StackV4Request stackRequest, Workspace workspace) {\n+        //blueprintService.updateDefaultBlueprintCollection(workspace.getId());", "originalCommit": "9c7cb06003fd86190f5383ba0ccf8202e4c96d03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java b/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\nindex fb53aaeac4..fe1ee1b0f3 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\n\n@@ -367,7 +366,7 @@ public class StackCreatorService {\n     }\n \n     private Blueprint determineBlueprint(StackV4Request stackRequest, Workspace workspace) {\n-        //blueprintService.updateDefaultBlueprintCollection(workspace.getId());\n+        blueprintService.updateDefaultBlueprintCollection(workspace.getId());\n         if (stackRequest.getCluster() == null) {\n             return null;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5MjQ3Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495692472", "bodyText": "what kind of grpc call?", "author": "topolyai5", "createdAt": "2020-09-28T05:12:54Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java", "diffHunk": "@@ -301,23 +273,12 @@ public StackV4Response createStack(User user, Workspace workspace, StackV4Reques\n     }\n \n     private void assignOwnerRoleOnDataHub(User user, StackV4Request stackRequest, Stack newStack) {\n+        // TODO grpc call", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java b/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\nindex fb53aaeac4..fe1ee1b0f3 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/controller/StackCreatorService.java\n\n@@ -273,7 +273,6 @@ public class StackCreatorService {\n     }\n \n     private void assignOwnerRoleOnDataHub(User user, StackV4Request stackRequest, Stack newStack) {\n-        // TODO grpc call\n         if (StackType.WORKLOAD.equals(stackRequest.getType())) {\n             grpcUmsClient.assignResourceOwnerRoleIfEntitled(user.getUserCrn(), newStack.getResourceCrn(), ThreadBasedUserCrnProvider.getAccountId());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5Mjk0MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495692941", "bodyText": "Maybe this validation runs in the flow", "author": "topolyai5", "createdAt": "2020-09-28T05:14:59Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/InstanceTemplateValidator.java", "diffHunk": "@@ -4,23 +4,22 @@\n \n import org.springframework.stereotype.Component;\n \n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.instancegroup.template.InstanceTemplateV4Request;\n+import com.sequenceiq.cloudbreak.domain.Template;\n import com.sequenceiq.cloudbreak.validation.ValidationResult;\n import com.sequenceiq.cloudbreak.validation.ValidationResult.ValidationResultBuilder;\n import com.sequenceiq.cloudbreak.validation.Validator;\n \n @Component\n-public class InstanceTemplateV4RequestValidator implements Validator<InstanceTemplateV4Request> {\n+public class InstanceTemplateValidator implements Validator<Template> {\n \n     @Override\n-    public ValidationResult validate(InstanceTemplateV4Request subject) {\n+    public ValidationResult validate(Template subject) {\n         ValidationResultBuilder resultBuilder = ValidationResult.builder();\n         if (Objects.isNull(subject)) {\n             resultBuilder.error(\"Template request cannot be null in the instance group request.\");", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxNDk0NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495714944", "bodyText": "there is no provider related validation", "author": "doktoric", "createdAt": "2020-09-28T06:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5Mjk0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyMjY4MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r498922680", "bodyText": "I mean request in the message", "author": "topolyai5", "createdAt": "2020-10-02T16:23:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5Mjk0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3824946636c197e050b1d4f91d736ab420c56056", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/InstanceTemplateValidator.java b/core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/InstanceTemplateValidator.java\nindex 4a6853bbba..6666b95d1f 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/InstanceTemplateValidator.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/controller/validation/template/InstanceTemplateValidator.java\n\n@@ -16,7 +16,7 @@ public class InstanceTemplateValidator implements Validator<Template> {\n     public ValidationResult validate(Template subject) {\n         ValidationResultBuilder resultBuilder = ValidationResult.builder();\n         if (Objects.isNull(subject)) {\n-            resultBuilder.error(\"Template request cannot be null in the instance group request.\");\n+            resultBuilder.error(\"Template cannot be null in the instance group request.\");\n         } else {\n             resultBuilder.ifError(() -> subject.getRootVolumeSize() != null\n                             && subject.getRootVolumeSize() < 1,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5MzI4Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495693286", "bodyText": "Please rename the test class, and check all the test names in the PR", "author": "topolyai5", "createdAt": "2020-09-28T05:16:27Z", "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackV4RequestValidatorTest.java", "diffHunk": "@@ -14,25 +15,21 @@\n import org.mockito.junit.MockitoJUnitRunner;\n import org.slf4j.LoggerFactory;\n \n-import com.sequenceiq.cloudbreak.api.endpoint.v4.database.base.DatabaseType;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.StackV4Request;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.cluster.ClusterV4Request;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.environment.placement.PlacementSettingsV4Request;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.instancegroup.InstanceGroupV4Request;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.instancegroup.template.InstanceTemplateV4Request;\n-import com.sequenceiq.cloudbreak.api.endpoint.v4.stacks.request.instancegroup.template.volume.VolumeV4Request;\n+import com.google.common.collect.Sets;\n import com.sequenceiq.cloudbreak.cloud.model.CloudRegions;\n-import com.sequenceiq.cloudbreak.controller.validation.template.InstanceTemplateV4RequestValidator;\n+import com.sequenceiq.cloudbreak.controller.validation.template.InstanceTemplateValidator;\n import com.sequenceiq.cloudbreak.domain.Blueprint;\n-import com.sequenceiq.cloudbreak.domain.RDSConfig;\n+import com.sequenceiq.cloudbreak.domain.Template;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.cluster.Cluster;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n import com.sequenceiq.cloudbreak.dto.credential.Credential;\n import com.sequenceiq.cloudbreak.ldap.LdapConfigService;\n-import com.sequenceiq.cloudbreak.structuredevent.CloudbreakRestRequestThreadLocalService;\n import com.sequenceiq.cloudbreak.service.blueprint.BlueprintService;\n import com.sequenceiq.cloudbreak.service.environment.EnvironmentClientService;\n import com.sequenceiq.cloudbreak.service.rdsconfig.RdsConfigService;\n+import com.sequenceiq.cloudbreak.structuredevent.CloudbreakRestRequestThreadLocalService;\n import com.sequenceiq.cloudbreak.validation.ValidationResult;\n-import com.sequenceiq.cloudbreak.validation.ValidationResult.State;\n \n @RunWith(MockitoJUnitRunner.class)\n public class StackV4RequestValidatorTest extends StackRequestValidatorTestBase {", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackV4RequestValidatorTest.java b/core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackValidatorTest.java\nsimilarity index 74%\nrename from core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackV4RequestValidatorTest.java\nrename to core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackValidatorTest.java\nindex c3ec996063..4298631af4 100644\n--- a/core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackV4RequestValidatorTest.java\n+++ b/core/src/test/java/com/sequenceiq/cloudbreak/controller/validation/stack/StackValidatorTest.java\n\n@@ -32,7 +32,7 @@ import com.sequenceiq.cloudbreak.structuredevent.CloudbreakRestRequestThreadLoca\n import com.sequenceiq.cloudbreak.validation.ValidationResult;\n \n @RunWith(MockitoJUnitRunner.class)\n-public class StackV4RequestValidatorTest extends StackRequestValidatorTestBase {\n+public class StackValidatorTest extends StackRequestValidatorTestBase {\n \n     private static final Long WORKSPACE_ID = 1L;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5MzUzOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495693539", "bodyText": "please rename the field", "author": "topolyai5", "createdAt": "2020-09-28T05:17:31Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/validate/cloud/CloudConfigValidationActions.java", "diffHunk": "@@ -0,0 +1,181 @@\n+package com.sequenceiq.cloudbreak.core.flow2.validate.cloud;\n+\n+import static com.sequenceiq.cloudbreak.util.Benchmark.measure;\n+import static com.sequenceiq.common.api.type.CdpResourceType.fromStackType;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.statemachine.StateContext;\n+import org.springframework.statemachine.action.Action;\n+\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.common.DetailedStackStatus;\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.common.StackType;\n+import com.sequenceiq.cloudbreak.cloud.event.validation.ParametersValidationRequest;\n+import com.sequenceiq.cloudbreak.cloud.model.CloudCredential;\n+import com.sequenceiq.cloudbreak.common.event.Selectable;\n+import com.sequenceiq.cloudbreak.controller.validation.ParametersValidator;\n+import com.sequenceiq.cloudbreak.controller.validation.datalake.DataLakeValidator;\n+import com.sequenceiq.cloudbreak.controller.validation.environment.ClusterCreationEnvironmentValidator;\n+import com.sequenceiq.cloudbreak.controller.validation.stack.StackValidator;\n+import com.sequenceiq.cloudbreak.controller.validation.template.TemplateValidator;\n+import com.sequenceiq.cloudbreak.converter.spi.CredentialToCloudCredentialConverter;\n+import com.sequenceiq.cloudbreak.core.flow2.externaldatabase.StackUpdaterService;\n+import com.sequenceiq.cloudbreak.core.flow2.stack.AbstractStackFailureAction;\n+import com.sequenceiq.cloudbreak.core.flow2.stack.StackContext;\n+import com.sequenceiq.cloudbreak.core.flow2.stack.StackFailureContext;\n+import com.sequenceiq.cloudbreak.core.flow2.stack.provision.action.AbstractStackCreationAction;\n+import com.sequenceiq.cloudbreak.core.flow2.validate.cloud.config.CloudConfigValidationEvent;\n+import com.sequenceiq.cloudbreak.core.flow2.validate.cloud.config.CloudConfigValidationState;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.domain.stack.instance.InstanceGroup;\n+import com.sequenceiq.cloudbreak.domain.view.StackView;\n+import com.sequenceiq.cloudbreak.dto.credential.Credential;\n+import com.sequenceiq.cloudbreak.event.ResourceEvent;\n+import com.sequenceiq.cloudbreak.logger.MDCBuilder;\n+import com.sequenceiq.cloudbreak.reactor.api.event.StackEvent;\n+import com.sequenceiq.cloudbreak.reactor.api.event.StackFailureEvent;\n+import com.sequenceiq.cloudbreak.service.environment.EnvironmentClientService;\n+import com.sequenceiq.cloudbreak.service.environment.credential.CredentialConverter;\n+import com.sequenceiq.cloudbreak.service.stack.StackViewService;\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+import com.sequenceiq.environment.api.v1.environment.model.response.DetailedEnvironmentResponse;\n+import com.sequenceiq.flow.core.Flow;\n+import com.sequenceiq.flow.core.FlowParameters;\n+\n+@Configuration\n+public class CloudConfigValidationActions {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(CloudConfigValidationActions.class);\n+\n+    @Inject\n+    private StackUpdaterService stackUpdaterService;\n+\n+    @Inject\n+    private EnvironmentClientService environmentClientService;\n+\n+    @Inject\n+    private CredentialToCloudCredentialConverter credentialToCloudCredentialConverter;\n+\n+    @Inject\n+    private CredentialConverter credentialConverter;\n+\n+    @Inject\n+    private StackViewService stackViewService;\n+\n+    @Inject\n+    private ParametersValidator parametersValidator;\n+\n+    @Inject\n+    private StackValidator stackRequestValidator;", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/validate/cloud/CloudConfigValidationActions.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/validate/cloud/CloudConfigValidationActions.java\nindex 61db5e6f6a..ad2f38609c 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/validate/cloud/CloudConfigValidationActions.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/validate/cloud/CloudConfigValidationActions.java\n\n@@ -73,7 +73,7 @@ public class CloudConfigValidationActions {\n     private ParametersValidator parametersValidator;\n \n     @Inject\n-    private StackValidator stackRequestValidator;\n+    private StackValidator stackValidator;\n \n     @Inject\n     private TemplateValidator templateValidator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5NTAxOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495695018", "bodyText": "please remove the slash or delete the code", "author": "topolyai5", "createdAt": "2020-09-28T05:23:48Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/BlueprintService.java", "diffHunk": "@@ -206,7 +206,7 @@ public ScaleRecommendation getScaleRecommendation(Long workspaceId, String bluep\n     }\n \n     public Set<Blueprint> getAllAvailableInWorkspace(Workspace workspace) {\n-        updateDefaultBlueprintCollection(workspace);\n+        //updateDefaultBlueprintCollection(workspace);", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/BlueprintService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/BlueprintService.java\nindex d2349b028a..fd65a39f98 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/BlueprintService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/blueprint/BlueprintService.java\n\n@@ -206,7 +206,7 @@ public class BlueprintService extends AbstractWorkspaceAwareResourceService<Blue\n     }\n \n     public Set<Blueprint> getAllAvailableInWorkspace(Workspace workspace) {\n-        //updateDefaultBlueprintCollection(workspace);\n+        updateDefaultBlueprintCollection(workspace);\n         return blueprintRepository.findAllByNotDeletedInWorkspace(workspace.getId());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5NjA4MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r495696081", "bodyText": "remove comment section", "author": "topolyai5", "createdAt": "2020-09-28T05:27:46Z", "path": "core/src/test/java/com/sequenceiq/cloudbreak/controller/StackCreatorServiceTest.java", "diffHunk": "@@ -201,8 +183,8 @@ public void shouldThrowBadRequestWhenRecipeIsMissing() {\n         instanceGroupV4Request.setRecipeNames(Set.of(RECIPE_NAME));\n         stackRequest.setInstanceGroups(List.of(instanceGroupV4Request));\n \n-        when(validationResult.getState()).thenReturn(State.VALID);\n-        when(stackRequestValidator.validate(stackRequest)).thenReturn(validationResult);\n+        //when(validationResult.getState()).thenReturn(State.VALID);", "originalCommit": "c04365b2d399769cc8f16fb088b52e4ea0d4610e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "chunk": "diff --git a/core/src/test/java/com/sequenceiq/cloudbreak/controller/StackCreatorServiceTest.java b/core/src/test/java/com/sequenceiq/cloudbreak/controller/StackCreatorServiceTest.java\nindex 2ae9cf949b..c1d3398959 100644\n--- a/core/src/test/java/com/sequenceiq/cloudbreak/controller/StackCreatorServiceTest.java\n+++ b/core/src/test/java/com/sequenceiq/cloudbreak/controller/StackCreatorServiceTest.java\n\n@@ -183,9 +183,6 @@ public class StackCreatorServiceTest {\n         instanceGroupV4Request.setRecipeNames(Set.of(RECIPE_NAME));\n         stackRequest.setInstanceGroups(List.of(instanceGroupV4Request));\n \n-        //when(validationResult.getState()).thenReturn(State.VALID);\n-        //when(stackRequestValidator.validate(stackRequest)).thenReturn(validationResult);\n-\n         doThrow(new NotFoundException(\"missing recipe\"))\n                 .when(recipeService).get(NameOrCrn.ofName(RECIPE_NAME), WORKSPACE_ID);\n \n"}}, {"oid": "fcd12314171be2fdd8197c93a0e11ff027023ce7", "url": "https://github.com/hortonworks/cloudbreak/commit/fcd12314171be2fdd8197c93a0e11ff027023ce7", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-28T06:40:05Z", "type": "forcePushed"}, {"oid": "85b0ec7b70c53a02a5c959738b72385361028728", "url": "https://github.com/hortonworks/cloudbreak/commit/85b0ec7b70c53a02a5c959738b72385361028728", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-09-28T14:37:56Z", "type": "forcePushed"}, {"oid": "e006cfc44e6af90c7cdbb42070ad17c190175495", "url": "https://github.com/hortonworks/cloudbreak/commit/e006cfc44e6af90c7cdbb42070ad17c190175495", "message": "init", "committedDate": "2020-10-02T15:21:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyMzQ4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9046#discussion_r498923485", "bodyText": "it will conflict with my change", "author": "topolyai5", "createdAt": "2020-10-02T16:25:10Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/converter/stack/CreateFreeIpaRequestToStackConverter.java", "diffHunk": "@@ -218,7 +218,7 @@ private Json getTags(CreateFreeIpaRequest source, Stack stack, String userCrn, S\n             // userdefined tags comming from environment service\n             return new Json(new StackTags(userDefined, new HashMap<>(), getDefaultTags(stack, userCrn, userName)));\n         } catch (Exception ignored) {\n-            throw new BadRequestException(\"Failed to convert dynamic tags.\");\n+            throw new BadRequestException(\"Failed to convert dynamic tags.\" + ignored.getMessage());", "originalCommit": "e006cfc44e6af90c7cdbb42070ad17c190175495", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1763169d91ed3c8030c3264d4fe7008b39078377", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/converter/stack/CreateFreeIpaRequestToStackConverter.java b/freeipa/src/main/java/com/sequenceiq/freeipa/converter/stack/CreateFreeIpaRequestToStackConverter.java\nindex 2b9a15224d..5b49fbc632 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/converter/stack/CreateFreeIpaRequestToStackConverter.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/converter/stack/CreateFreeIpaRequestToStackConverter.java\n\n@@ -218,7 +218,7 @@ public class CreateFreeIpaRequestToStackConverter {\n             // userdefined tags comming from environment service\n             return new Json(new StackTags(userDefined, new HashMap<>(), getDefaultTags(stack, userCrn, userName)));\n         } catch (Exception ignored) {\n-            throw new BadRequestException(\"Failed to convert dynamic tags.\" + ignored.getMessage());\n+            throw new BadRequestException(\"Failed to convert dynamic tags: \" + ignored.getMessage(), ignored);\n         }\n     }\n \n"}}, {"oid": "3824946636c197e050b1d4f91d736ab420c56056", "url": "https://github.com/hortonworks/cloudbreak/commit/3824946636c197e050b1d4f91d736ab420c56056", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-10-03T10:44:51Z", "type": "forcePushed"}, {"oid": "aaa2074e0580f601d5c131a072f6e79488de96f6", "url": "https://github.com/hortonworks/cloudbreak/commit/aaa2074e0580f601d5c131a072f6e79488de96f6", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-10-05T20:07:35Z", "type": "forcePushed"}, {"oid": "1763169d91ed3c8030c3264d4fe7008b39078377", "url": "https://github.com/hortonworks/cloudbreak/commit/1763169d91ed3c8030c3264d4fe7008b39078377", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-10-06T22:47:03Z", "type": "commit"}, {"oid": "1763169d91ed3c8030c3264d4fe7008b39078377", "url": "https://github.com/hortonworks/cloudbreak/commit/1763169d91ed3c8030c3264d4fe7008b39078377", "message": "CB-8636 move cloud related validation into a flow step which improves the request response times. Moved group validation, template validation, parameters like encryption keys, DL and ENV validation. Also moved kerberos config generation under the kerberos validation.", "committedDate": "2020-10-06T22:47:03Z", "type": "forcePushed"}]}