{"pr_number": 7231, "pr_title": "CB-5271: get images from cm for stack upgrade", "pr_createdAt": "2020-02-06T10:16:11Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7231", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNzI3NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7231#discussion_r375827275", "bodyText": "According to the name of this class, when we eventually will support minor and major upgrades, new comparators will be needed for those, which smells like code duplication. I would advise to extend the already existing Version class with segment-specific comparison reusing parts of the code there.", "author": "daszabo", "createdAt": "2020-02-06T13:18:08Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/cloud/MaintenanceVersionComparator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.sequenceiq.cloudbreak.cloud;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * This comparator supports only the three-part version number format like 1.2.3\n+ */\n+@Component\n+public class MaintenanceVersionComparator {", "originalCommit": "ff2374836b74e9654472c94e862cf25100261ae9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99f710d9abf18d5753aaee00cd863adebb47d5c3", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/cloud/MaintenanceVersionComparator.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/cloud/MaintenanceVersionComparator.java\ndeleted file mode 100644\nindex 2509b5bef5..0000000000\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/cloud/MaintenanceVersionComparator.java\n+++ /dev/null\n\n@@ -1,44 +0,0 @@\n-package com.sequenceiq.cloudbreak.cloud;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.stereotype.Component;\n-\n-/**\n- * This comparator supports only the three-part version number format like 1.2.3\n- */\n-@Component\n-public class MaintenanceVersionComparator {\n-\n-    public static final String SPLIT_PATTERN = \"[.\\\\-]\";\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(MaintenanceVersionComparator.class);\n-\n-    public boolean isGreaterVersion(String version1, String version2) {\n-        try {\n-            if (version1 != null && version2 != null) {\n-                LOGGER.debug(String.format(\"Comparing %s and %s\", version1, version2));\n-                return compareVersions(version1, version2);\n-            } else {\n-                return false;\n-            }\n-        } catch (Exception e) {\n-            LOGGER.warn(\"Comparison failed.\", e);\n-            return false;\n-        }\n-    }\n-\n-    private boolean equals(String v1, String v2) {\n-        return Integer.parseInt(v1) == Integer.parseInt(v2);\n-    }\n-\n-    private boolean compareVersions(String version1, String version2) {\n-        String[] v1Parts = version1.split(SPLIT_PATTERN);\n-        String[] v2Parts = version2.split(SPLIT_PATTERN);\n-        return equals(v1Parts[0], v2Parts[0]) && equals(v1Parts[1], v2Parts[1]) && isMaintenanceVersionGreater(v1Parts[2], v2Parts[2]);\n-    }\n-\n-    private boolean isMaintenanceVersionGreater(String v1, String v2) {\n-        return Integer.parseInt(v1) < Integer.parseInt(v2);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyOTg0Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7231#discussion_r375829846", "bodyText": "Shouldn't this filter images also based on supported cb versions?", "author": "daszabo", "createdAt": "2020-02-06T13:23:57Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImageFilter.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package com.sequenceiq.cloudbreak.service.image;\n+\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.MaintenanceVersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.model.Image;\n+import com.sequenceiq.cloudbreak.cloud.model.catalog.Images;\n+\n+@Component\n+public class StackUpgradeImageFilter {\n+\n+    private static final String CM_PACKAGE_KEY = \"cm\";\n+\n+    private static final String STACK_PACKAGE_KEY = \"stack\";\n+\n+    private static final String CFM_PACKAGE_KEY = \"cfm\";\n+\n+    private static final String CSP_PACKAGE_KEY = \"csp\";\n+\n+    private static final String SALT_PACKAGE_KEY = \"salt\";\n+\n+    @Inject\n+    private MaintenanceVersionComparator maintenanceVersionComparator;\n+\n+    Images filter(Images availableImages, Image currentImage, String cloudPlatform) {\n+        return new Images(null, null, null, availableImages.getCdhImages().stream()\n+                .filter(validateCmVersion(currentImage).or(validateStackVersion(currentImage)))\n+                .filter(validateCloudPlatform(cloudPlatform))\n+                .filter(validateOsVersion(currentImage))\n+                .filter(validateCfmVersion(currentImage))\n+                .filter(validateCspVersion(currentImage))\n+                .filter(validateSaltVersion(currentImage))\n+                .filter(filterCurrentImage(currentImage))\n+                .collect(Collectors.toList()), null);", "originalCommit": "ff2374836b74e9654472c94e862cf25100261ae9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99f710d9abf18d5753aaee00cd863adebb47d5c3", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImageFilter.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImageFilter.java\nindex 3619d12ff9..58c6ff4df9 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImageFilter.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImageFilter.java\n\n@@ -1,19 +1,28 @@\n package com.sequenceiq.cloudbreak.service.image;\n \n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n import java.util.function.Predicate;\n import java.util.stream.Collectors;\n \n import javax.inject.Inject;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n \n-import com.sequenceiq.cloudbreak.cloud.MaintenanceVersionComparator;\n+import com.sequenceiq.cloudbreak.cloud.CompareLevel;\n+import com.sequenceiq.cloudbreak.cloud.CustomVersionComparator;\n import com.sequenceiq.cloudbreak.cloud.model.Image;\n import com.sequenceiq.cloudbreak.cloud.model.catalog.Images;\n \n @Component\n public class StackUpgradeImageFilter {\n \n+    private static final Logger LOGGER = LoggerFactory.getLogger(StackUpgradeImageFilter.class);\n+\n     private static final String CM_PACKAGE_KEY = \"cm\";\n \n     private static final String STACK_PACKAGE_KEY = \"stack\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzMDI0Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7231#discussion_r375830246", "bodyText": "This only filters CDH images. Might as-well only pass that list to the filter method.", "author": "daszabo", "createdAt": "2020-02-06T13:24:47Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImagesService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.sequenceiq.cloudbreak.service.image;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.model.Image;\n+import com.sequenceiq.cloudbreak.cloud.model.catalog.Images;\n+import com.sequenceiq.cloudbreak.core.CloudbreakImageCatalogException;\n+import com.sequenceiq.cloudbreak.core.CloudbreakImageNotFoundException;\n+import com.sequenceiq.cloudbreak.domain.stack.Stack;\n+import com.sequenceiq.cloudbreak.service.stack.StackService;\n+\n+@Component\n+public class StackUpgradeImagesService {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(StackUpgradeImagesService.class);\n+\n+    @Inject\n+    private StackService stackService;\n+\n+    @Inject\n+    private ImageCatalogProvider imageCatalogProvider;\n+\n+    @Inject\n+    private ImageService imageService;\n+\n+    @Inject\n+    private StackUpgradeImageFilter stackUpgradeImageFilter;\n+\n+    public Images getImagesToUpgrade(Long workspaceId, String stackName) {\n+        Images filteredImages = null;\n+        try {\n+            LOGGER.info(String.format(\"Retrieving images for upgrade stack %s\", stackName));\n+            Stack stack = getStack(workspaceId, stackName);\n+            Image currentImage = getImage(stack);\n+            Images imagesFromCatalog = getImagesFromCatalog(currentImage.getImageCatalogUrl());\n+            filteredImages = filterImages(imagesFromCatalog, currentImage, stack.cloudPlatform());\n+            LOGGER.info(String.format(\"%d possible image found for stack upgrade.\", filteredImages.getCdhImages().size()));\n+        } catch (CloudbreakImageNotFoundException | CloudbreakImageCatalogException e) {\n+            LOGGER.error(\"Failed to get images\", e);\n+        }\n+        return filteredImages;\n+    }\n+\n+    private Stack getStack(Long workspaceId, String stackName) {\n+        return stackService.getByNameInWorkspace(stackName, workspaceId);\n+    }\n+\n+    private Image getImage(Stack stack) throws CloudbreakImageNotFoundException {\n+        return imageService.getImage(stack.getId());\n+    }\n+\n+    private Images getImagesFromCatalog(String imageCatalogUrl) throws CloudbreakImageCatalogException {\n+        return imageCatalogProvider.getImageCatalogV2(imageCatalogUrl).getImages();\n+    }\n+\n+    private Images filterImages(Images images, Image currentImage, String cloudPlatform) {\n+        return stackUpgradeImageFilter.filter(images, currentImage, cloudPlatform);", "originalCommit": "ff2374836b74e9654472c94e862cf25100261ae9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99f710d9abf18d5753aaee00cd863adebb47d5c3", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImagesService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImagesService.java\nindex fdff6f915b..f91df1a4ac 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImagesService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/image/StackUpgradeImagesService.java\n\n@@ -58,6 +58,6 @@ public class StackUpgradeImagesService {\n     }\n \n     private Images filterImages(Images images, Image currentImage, String cloudPlatform) {\n-        return stackUpgradeImageFilter.filter(images, currentImage, cloudPlatform);\n+        return stackUpgradeImageFilter.filter(images.getCdhImages(), images.getSuppertedVersions(), currentImage, cloudPlatform);\n     }\n }\n"}}, {"oid": "99f710d9abf18d5753aaee00cd863adebb47d5c3", "url": "https://github.com/hortonworks/cloudbreak/commit/99f710d9abf18d5753aaee00cd863adebb47d5c3", "message": "CB-5271: get images from cm for stack upgrade", "committedDate": "2020-02-11T09:42:35Z", "type": "forcePushed"}, {"oid": "f183c3f99a25f66685fc75c0ccb6540c41a1ccb1", "url": "https://github.com/hortonworks/cloudbreak/commit/f183c3f99a25f66685fc75c0ccb6540c41a1ccb1", "message": "CB-5271: get images from cm for stack upgrade", "committedDate": "2020-02-11T09:43:20Z", "type": "forcePushed"}, {"oid": "6a6796baaf934ba42ad0eab9197fcfb0ea52c4fb", "url": "https://github.com/hortonworks/cloudbreak/commit/6a6796baaf934ba42ad0eab9197fcfb0ea52c4fb", "message": "CB-5271: get images from cm for stack upgrade", "committedDate": "2020-02-11T10:13:52Z", "type": "forcePushed"}, {"oid": "22cde33c4ea79224af9244c7dfe11504af991d50", "url": "https://github.com/hortonworks/cloudbreak/commit/22cde33c4ea79224af9244c7dfe11504af991d50", "message": "CB-5540: get images from cm for stack upgrade", "committedDate": "2020-02-13T10:24:38Z", "type": "forcePushed"}, {"oid": "4fa27f263645f10ab3dea620b9c3da6c63afa12a", "url": "https://github.com/hortonworks/cloudbreak/commit/4fa27f263645f10ab3dea620b9c3da6c63afa12a", "message": "CB-5540: get images from cm for stack upgrade", "committedDate": "2020-02-13T13:51:39Z", "type": "commit"}, {"oid": "4fa27f263645f10ab3dea620b9c3da6c63afa12a", "url": "https://github.com/hortonworks/cloudbreak/commit/4fa27f263645f10ab3dea620b9c3da6c63afa12a", "message": "CB-5540: get images from cm for stack upgrade", "committedDate": "2020-02-13T13:51:39Z", "type": "forcePushed"}]}