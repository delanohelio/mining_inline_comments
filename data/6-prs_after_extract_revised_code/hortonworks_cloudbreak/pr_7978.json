{"pr_number": 7978, "pr_title": "CB-6576 Azure single RG: env service RG validations", "pr_createdAt": "2020-05-06T07:53:38Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7978", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3MzEyNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421373125", "bodyText": "This should be with @OverRide", "author": "pdarvasi", "createdAt": "2020-05-07T09:37:43Z", "path": "environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java", "diffHunk": "@@ -24,15 +27,17 @@\n \n     private final ParametersService parametersService;\n \n-    public AwsParameterProcessor(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,\n+    public AwsParameterValidator(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,\n             ParametersService parametersService) {\n         this.noSqlTableCreationModeDeterminerService = noSqlTableCreationModeDeterminerService;\n         this.parametersService = parametersService;\n     }\n \n-    public ValidationResult processAwsParameters(EnvironmentDto environmentDto, ParametersDto parametersDto) {\n-        ValidationResultBuilder validationResultBuilder = new ValidationResultBuilder();\n+    public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {", "originalCommit": "5928ef95c8dbd59a1d8a29dafab4922fee13afeb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ae1717672813a5dc2670f13b576c70b345ab333", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\nindex 740589f6e7..42177af073 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n\n@@ -33,12 +37,16 @@ public class AwsParameterValidator implements ParameterValidator {\n         this.parametersService = parametersService;\n     }\n \n+    @Override\n     public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {\n+        LOGGER.debug(\"ParametersDto: {}\", parametersDto);\n         AwsParametersDto awsParametersDto = parametersDto.getAwsParametersDto();\n         if (Objects.isNull(awsParametersDto)) {\n+            LOGGER.debug(\"No aws parameters defined.\");\n             return validationResultBuilder.build();\n         }\n         if (StringUtils.isNotBlank(awsParametersDto.getS3GuardTableName())) {\n+            LOGGER.debug(\"S3Guard table name defined: {}\", awsParametersDto.getS3GuardTableName());\n             boolean tableAlreadyAttached = isTableAlreadyAttached(environmentDto, awsParametersDto);\n             if (tableAlreadyAttached) {\n                 validationResultBuilder.error(String.format(\"S3Guard table '%s' is already attached to another active environment. \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3NjM4Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421376383", "bodyText": "We should add some log to the validation process", "author": "pdarvasi", "createdAt": "2020-05-07T09:43:03Z", "path": "environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java", "diffHunk": "@@ -24,15 +27,17 @@\n \n     private final ParametersService parametersService;\n \n-    public AwsParameterProcessor(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,\n+    public AwsParameterValidator(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,", "originalCommit": "5928ef95c8dbd59a1d8a29dafab4922fee13afeb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ae1717672813a5dc2670f13b576c70b345ab333", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\nindex 740589f6e7..42177af073 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n\n@@ -33,12 +37,16 @@ public class AwsParameterValidator implements ParameterValidator {\n         this.parametersService = parametersService;\n     }\n \n+    @Override\n     public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {\n+        LOGGER.debug(\"ParametersDto: {}\", parametersDto);\n         AwsParametersDto awsParametersDto = parametersDto.getAwsParametersDto();\n         if (Objects.isNull(awsParametersDto)) {\n+            LOGGER.debug(\"No aws parameters defined.\");\n             return validationResultBuilder.build();\n         }\n         if (StringUtils.isNotBlank(awsParametersDto.getS3GuardTableName())) {\n+            LOGGER.debug(\"S3Guard table name defined: {}\", awsParametersDto.getS3GuardTableName());\n             boolean tableAlreadyAttached = isTableAlreadyAttached(environmentDto, awsParametersDto);\n             if (tableAlreadyAttached) {\n                 validationResultBuilder.error(String.format(\"S3Guard table '%s' is already attached to another active environment. \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3NjQ2Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421376466", "bodyText": "We should add some log to the validation process", "author": "pdarvasi", "createdAt": "2020-05-07T09:43:10Z", "path": "environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.sequenceiq.environment.parameters.validation.validators.parameter;\n+\n+import static com.sequenceiq.environment.parameters.dao.domain.ResourceGroupCreation.USE_EXISTING;\n+import static com.sequenceiq.environment.parameters.dao.domain.ResourceGroupUsagePattern.USE_MULTIPLE;\n+\n+import java.util.Objects;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClient;\n+import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClientService;\n+import com.sequenceiq.cloudbreak.cloud.init.CloudPlatformConnectors;\n+import com.sequenceiq.cloudbreak.cloud.model.CloudCredential;\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.cloudbreak.featureswitch.AzureSingleResourceGroupFeatureSwitch;\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+import com.sequenceiq.cloudbreak.validation.ValidationResult.ValidationResultBuilder;\n+import com.sequenceiq.environment.credential.v1.converter.CredentialToCloudCredentialConverter;\n+import com.sequenceiq.environment.environment.dto.EnvironmentDto;\n+import com.sequenceiq.environment.parameters.dto.AzureParametersDto;\n+import com.sequenceiq.environment.parameters.dto.AzureResourceGroupDto;\n+import com.sequenceiq.environment.parameters.dto.ParametersDto;\n+\n+@Component\n+public class AzureParameterValidator implements ParameterValidator {\n+\n+    @Inject\n+    private CloudPlatformConnectors cloudPlatformConnectors;\n+\n+    @Inject\n+    private AzureClientService azureClientService;\n+\n+    @Inject\n+    private CredentialToCloudCredentialConverter credentialToCloudCredentialConverter;\n+\n+    @Inject\n+    private AzureSingleResourceGroupFeatureSwitch azureSingleResourceGroupFeatureSwitch;\n+\n+    @Override\n+    public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {", "originalCommit": "5928ef95c8dbd59a1d8a29dafab4922fee13afeb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ae1717672813a5dc2670f13b576c70b345ab333", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\nindex d96c828ae9..234370ce74 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\n\n@@ -7,6 +7,8 @@ import java.util.Objects;\n \n import javax.inject.Inject;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClient;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3ODMxNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421378315", "bodyText": "We should use ValidationResult.empty() instead", "author": "pdarvasi", "createdAt": "2020-05-07T09:46:06Z", "path": "environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.sequenceiq.environment.parameters.validation.validators.parameter;\n+\n+import static com.sequenceiq.environment.parameters.dao.domain.ResourceGroupCreation.USE_EXISTING;\n+import static com.sequenceiq.environment.parameters.dao.domain.ResourceGroupUsagePattern.USE_MULTIPLE;\n+\n+import java.util.Objects;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClient;\n+import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClientService;\n+import com.sequenceiq.cloudbreak.cloud.init.CloudPlatformConnectors;\n+import com.sequenceiq.cloudbreak.cloud.model.CloudCredential;\n+import com.sequenceiq.cloudbreak.common.mappable.CloudPlatform;\n+import com.sequenceiq.cloudbreak.featureswitch.AzureSingleResourceGroupFeatureSwitch;\n+import com.sequenceiq.cloudbreak.validation.ValidationResult;\n+import com.sequenceiq.cloudbreak.validation.ValidationResult.ValidationResultBuilder;\n+import com.sequenceiq.environment.credential.v1.converter.CredentialToCloudCredentialConverter;\n+import com.sequenceiq.environment.environment.dto.EnvironmentDto;\n+import com.sequenceiq.environment.parameters.dto.AzureParametersDto;\n+import com.sequenceiq.environment.parameters.dto.AzureResourceGroupDto;\n+import com.sequenceiq.environment.parameters.dto.ParametersDto;\n+\n+@Component\n+public class AzureParameterValidator implements ParameterValidator {\n+\n+    @Inject\n+    private CloudPlatformConnectors cloudPlatformConnectors;\n+\n+    @Inject\n+    private AzureClientService azureClientService;\n+\n+    @Inject\n+    private CredentialToCloudCredentialConverter credentialToCloudCredentialConverter;\n+\n+    @Inject\n+    private AzureSingleResourceGroupFeatureSwitch azureSingleResourceGroupFeatureSwitch;\n+\n+    @Override\n+    public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {\n+        AzureParametersDto azureParametersDto = parametersDto.azureParametersDto();\n+        if (!azureSingleResourceGroupFeatureSwitch.isActive() || Objects.isNull(azureParametersDto)) {\n+            return validationResultBuilder.build();\n+        }\n+\n+        AzureResourceGroupDto azureResourceGroupDto = azureParametersDto.getAzureResourceGroupDto();\n+        if (Objects.isNull(azureResourceGroupDto)\n+                || USE_MULTIPLE.equals(azureResourceGroupDto.getResourceGroupUsagePattern())\n+                || !USE_EXISTING.equals(azureResourceGroupDto.getResourceGroupCreation())) {\n+            return validationResultBuilder.build();", "originalCommit": "5928ef95c8dbd59a1d8a29dafab4922fee13afeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NjkyNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421956925", "bodyText": "Since the validationResultBuilder is passed in as a parameter, we cannot be sure that there is no validation result in it. Currently it would be ok to use as you suggest, but later on if a validation is added before the invocation of the method I think a developer can easily forget about downstream used ValidationResult.empty usages.\nWhat do you think?", "author": "gergopapi2", "createdAt": "2020-05-08T06:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3ODMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA1NTUwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r422055504", "bodyText": "Ok", "author": "pdarvasi", "createdAt": "2020-05-08T09:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3ODMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3ae1717672813a5dc2670f13b576c70b345ab333", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\nindex d96c828ae9..234370ce74 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AzureParameterValidator.java\n\n@@ -7,6 +7,8 @@ import java.util.Objects;\n \n import javax.inject.Inject;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import com.sequenceiq.cloudbreak.cloud.azure.client.AzureClient;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3ODQzOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421378438", "bodyText": "We should use ValidationResult.empty() instead", "author": "pdarvasi", "createdAt": "2020-05-07T09:46:17Z", "path": "environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java", "diffHunk": "@@ -24,15 +27,17 @@\n \n     private final ParametersService parametersService;\n \n-    public AwsParameterProcessor(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,\n+    public AwsParameterValidator(NoSqlTableCreationModeDeterminerService noSqlTableCreationModeDeterminerService,\n             ParametersService parametersService) {\n         this.noSqlTableCreationModeDeterminerService = noSqlTableCreationModeDeterminerService;\n         this.parametersService = parametersService;\n     }\n \n-    public ValidationResult processAwsParameters(EnvironmentDto environmentDto, ParametersDto parametersDto) {\n-        ValidationResultBuilder validationResultBuilder = new ValidationResultBuilder();\n+    public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {\n         AwsParametersDto awsParametersDto = parametersDto.getAwsParametersDto();\n+        if (Objects.isNull(awsParametersDto)) {\n+            return validationResultBuilder.build();", "originalCommit": "5928ef95c8dbd59a1d8a29dafab4922fee13afeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1Njk3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7978#discussion_r421956977", "bodyText": "Please see above", "author": "gergopapi2", "createdAt": "2020-05-08T06:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3ODQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "3ae1717672813a5dc2670f13b576c70b345ab333", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\nindex 740589f6e7..42177af073 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/parameters/validation/validators/parameter/AwsParameterValidator.java\n\n@@ -33,12 +37,16 @@ public class AwsParameterValidator implements ParameterValidator {\n         this.parametersService = parametersService;\n     }\n \n+    @Override\n     public ValidationResult validate(EnvironmentDto environmentDto, ParametersDto parametersDto, ValidationResultBuilder validationResultBuilder) {\n+        LOGGER.debug(\"ParametersDto: {}\", parametersDto);\n         AwsParametersDto awsParametersDto = parametersDto.getAwsParametersDto();\n         if (Objects.isNull(awsParametersDto)) {\n+            LOGGER.debug(\"No aws parameters defined.\");\n             return validationResultBuilder.build();\n         }\n         if (StringUtils.isNotBlank(awsParametersDto.getS3GuardTableName())) {\n+            LOGGER.debug(\"S3Guard table name defined: {}\", awsParametersDto.getS3GuardTableName());\n             boolean tableAlreadyAttached = isTableAlreadyAttached(environmentDto, awsParametersDto);\n             if (tableAlreadyAttached) {\n                 validationResultBuilder.error(String.format(\"S3Guard table '%s' is already attached to another active environment. \"\n"}}, {"oid": "3ae1717672813a5dc2670f13b576c70b345ab333", "url": "https://github.com/hortonworks/cloudbreak/commit/3ae1717672813a5dc2670f13b576c70b345ab333", "message": "CB-6576 Azure single RG: env service RG validations", "committedDate": "2020-05-08T06:53:06Z", "type": "commit"}, {"oid": "3ae1717672813a5dc2670f13b576c70b345ab333", "url": "https://github.com/hortonworks/cloudbreak/commit/3ae1717672813a5dc2670f13b576c70b345ab333", "message": "CB-6576 Azure single RG: env service RG validations", "committedDate": "2020-05-08T06:53:06Z", "type": "forcePushed"}]}