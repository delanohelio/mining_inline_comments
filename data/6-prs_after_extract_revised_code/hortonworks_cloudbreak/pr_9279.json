{"pr_number": 9279, "pr_title": "CB-9449 if AWS returns that DBInstance does not exsist, then we shall\u2026", "pr_createdAt": "2020-10-23T09:12:12Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9279", "timeline": [{"oid": "c4e94063f7ce8635bd399aa3158f7a63c6f24803", "url": "https://github.com/hortonworks/cloudbreak/commit/c4e94063f7ce8635bd399aa3158f7a63c6f24803", "message": "CB-9449 if AWS returns that DBInstance does not exist, then we shall consider this as the termination protection is not enabled.\n\nBefore this change if somebody went to AWS console and removed the protection and deleted the DB instance, that caused Environment/SDX/DH delete failures, since Redbeams would just thorw a CloudConnectorException for delete call and Environment/SDX/DH deletion stuck forever. After this change Redbeams realises that DB does not exsist anymore and it just proceeds and Environment/SDX/DH deletion will be successful.\n\nI have intentionally changed the unit test as well, to make sure that it reflects the the expected behaviour.", "committedDate": "2020-10-23T09:14:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgwNTI1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9279#discussion_r511805258", "bodyText": "Typo: exists => exist\n\n\nPossible typo: therefor is a legit word, however after looking it up I found it has a different meaning: for it, for that.\nhttps://www.grammarly.com/blog/therefore-vs-therefor/\n\n\nI THINK therefore would be better here.", "author": "gergopapi2", "createdAt": "2020-10-26T09:01:36Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java", "diffHunk": "@@ -61,6 +62,9 @@ public boolean isDeleteProtectionEnabled(AuthenticatedContext ac, DatabaseStack\n         try {\n             LOGGER.debug(\"RDS Checking if delete protection is enabled\");\n             describeDBInstancesResult = rdsClient.describeDBInstances(describeDBInstancesRequest);\n+        } catch (DBInstanceNotFoundException ex) {\n+            LOGGER.debug(\"DB Instance does not exists! Therefor termination protection check is not relevant anymore: {}\", ex.getMessage());", "originalCommit": "c4e94063f7ce8635bd399aa3158f7a63c6f24803", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57b1cfedac7d1e13959d3dcffa74c959f8716037", "chunk": "diff --git a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\nindex 93e7a6a60c..7663392817 100644\n--- a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\n+++ b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\n\n@@ -63,7 +63,7 @@ public class AwsRdsStatusLookupService {\n             LOGGER.debug(\"RDS Checking if delete protection is enabled\");\n             describeDBInstancesResult = rdsClient.describeDBInstances(describeDBInstancesRequest);\n         } catch (DBInstanceNotFoundException ex) {\n-            LOGGER.debug(\"DB Instance does not exists! Therefor termination protection check is not relevant anymore: {}\", ex.getMessage());\n+            LOGGER.debug(\"DB Instance does not exist! Therefore termination protection check is not relevant anymore: {}\", ex.getMessage());\n             return false;\n         } catch (RuntimeException ex) {\n             throw new CloudConnectorException(ex.getMessage(), ex);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NjAyMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9279#discussion_r511886023", "bodyText": "typo: exists => exist", "author": "gergopapi2", "createdAt": "2020-10-26T11:18:16Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java", "diffHunk": "@@ -37,6 +37,7 @@ public ExternalDatabaseStatus getStatus(AuthenticatedContext ac, DatabaseStack d\n         try {\n             describeDBInstancesResult = rdsClient.describeDBInstances(describeDBInstancesRequest);\n         } catch (DBInstanceNotFoundException ex) {\n+            LOGGER.debug(\"DB Instance does not exists: {}\", ex.getMessage());", "originalCommit": "c4e94063f7ce8635bd399aa3158f7a63c6f24803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkwNDk4Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9279#discussion_r511904982", "bodyText": "Fixed", "author": "akanto", "createdAt": "2020-10-26T11:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NjAyMw=="}], "type": "inlineReview", "revised_code": {"commit": "57b1cfedac7d1e13959d3dcffa74c959f8716037", "chunk": "diff --git a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\nindex 93e7a6a60c..7663392817 100644\n--- a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\n+++ b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/connector/resource/AwsRdsStatusLookupService.java\n\n@@ -37,7 +37,7 @@ public class AwsRdsStatusLookupService {\n         try {\n             describeDBInstancesResult = rdsClient.describeDBInstances(describeDBInstancesRequest);\n         } catch (DBInstanceNotFoundException ex) {\n-            LOGGER.debug(\"DB Instance does not exists: {}\", ex.getMessage());\n+            LOGGER.debug(\"DB Instance does not exist: {}\", ex.getMessage());\n             return ExternalDatabaseStatus.DELETED;\n         } catch (RuntimeException ex) {\n             throw new CloudConnectorException(ex.getMessage(), ex);\n"}}, {"oid": "57b1cfedac7d1e13959d3dcffa74c959f8716037", "url": "https://github.com/hortonworks/cloudbreak/commit/57b1cfedac7d1e13959d3dcffa74c959f8716037", "message": "CB-9449 if AWS returns that DBInstance does not exist, then we shall consider this as the termination protection is not enabled.\n\nBefore this change if somebody went to AWS console and removed the protection and deleted the DB instance, that caused Environment/SDX/DH delete failures, since Redbeams would just thorw a CloudConnectorException for delete call and Environment/SDX/DH deletion stuck forever. After this change Redbeams realises that DB does not exsist anymore and it just proceeds and Environment/SDX/DH deletion will be successful.\n\nI have intentionally changed the unit test as well, to make sure that it reflects the the expected behaviour.", "committedDate": "2020-10-26T11:54:48Z", "type": "forcePushed"}, {"oid": "9629f800006a95f4ffa71305ed31379e49be1143", "url": "https://github.com/hortonworks/cloudbreak/commit/9629f800006a95f4ffa71305ed31379e49be1143", "message": "CB-9449 if AWS returns that DBInstance does not exist, then we shall consider this as the termination protection is not enabled.\n\nBefore this change if somebody went to AWS console and removed the protection and deleted the DB instance, that caused Environment/SDX/DH delete failures, since Redbeams would just throw a CloudConnectorException for delete call and Environment/SDX/DH deletion stuck forever. After this change Redbeams realises that DB does not exist anymore and it just proceeds and Environment/SDX/DH deletion will be successful.\n\nI have intentionally changed the unit test as well, to make sure that it reflects the the expected behaviour.", "committedDate": "2020-10-26T13:05:08Z", "type": "forcePushed"}, {"oid": "7f6e3ab33ca8bb8cf2203802b851dff346220c93", "url": "https://github.com/hortonworks/cloudbreak/commit/7f6e3ab33ca8bb8cf2203802b851dff346220c93", "message": "CB-9449 if AWS returns that DBInstance does not exist, then we shall consider this as the termination protection is not enabled.\n\nBefore this change if somebody went to AWS console and removed the protection and deleted the DB instance, that caused Environment/SDX/DH delete failures, since Redbeams would just throw a CloudConnectorException for delete call and Environment/SDX/DH deletion stuck forever. After this change Redbeams realises that DB does not exist anymore and it just proceeds and Environment/SDX/DH deletion will be successful.\n\nI have intentionally changed the unit test as well, to make sure that it reflects the the expected behaviour.", "committedDate": "2020-10-26T13:05:44Z", "type": "commit"}, {"oid": "7f6e3ab33ca8bb8cf2203802b851dff346220c93", "url": "https://github.com/hortonworks/cloudbreak/commit/7f6e3ab33ca8bb8cf2203802b851dff346220c93", "message": "CB-9449 if AWS returns that DBInstance does not exist, then we shall consider this as the termination protection is not enabled.\n\nBefore this change if somebody went to AWS console and removed the protection and deleted the DB instance, that caused Environment/SDX/DH delete failures, since Redbeams would just throw a CloudConnectorException for delete call and Environment/SDX/DH deletion stuck forever. After this change Redbeams realises that DB does not exist anymore and it just proceeds and Environment/SDX/DH deletion will be successful.\n\nI have intentionally changed the unit test as well, to make sure that it reflects the the expected behaviour.", "committedDate": "2020-10-26T13:05:44Z", "type": "forcePushed"}]}