{"pr_number": 9445, "pr_title": "CB-9811: Configure Ranger with custom cloud storage path for HBase da\u2026", "pr_createdAt": "2020-11-17T04:26:20Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9445", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI1NDMwNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9445#discussion_r525254305", "bodyText": "I agree making this check is a good idea in general, but this config provider is explicitly for Ranger Admin that is supposed to exist in one place only, namely in the DL (or multiple DLs if we ever happen to support that in any environment). See isConfigurationNeeded() below, it explicitly checks for the presence of Ranger Admin in the cluster template, so the rest of this config provider (including the encompassing getServiceConfigs() method) will not be executed for DH clusters.\nIn short: I suggest removing the additional check for the cluster kind and let it just assume DL.", "author": "lajosrodek", "createdAt": "2020-11-17T15:32:14Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -58,6 +65,12 @@\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n \n+            if (datalakeCluster) {", "originalCommit": "afd0025e7ddcce0edcaf4c3b7bb55d6ea40d7645", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\nindex 2b300ff553..73f7ebea90 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n\n@@ -65,11 +61,10 @@ public class RangerCloudStorageServiceConfigProvider implements CmTemplateCompon\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n \n-            if (datalakeCluster) {\n-                // only add HBase root at DataLake\n-                ConfigUtils.getStorageLocationForServiceProperty(templatePreparationObject, HBASE_ROOT_DIR)\n-                        .ifPresent(location -> cloudPaths.add(HBASE_ROOT.name() + \"=\" + location.getValue()));\n-            }\n+            // only add HBase root at DataLake\n+            ConfigUtils.getStorageLocationForServiceProperty(templatePreparationObject, HBASE_ROOT_DIR)\n+                    .ifPresent(location -> cloudPaths.add(HBASE_ROOT.name() + \"=\" + location.getValue()));\n+\n \n             String cloudPath = cloudPaths.stream().collect(Collectors.joining(\",\"));\n             return List.of(getRangerAuditConfig(templateProcessor, templatePreparationObject), config(CLOUD_STORAGE_PATHS, cloudPath));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI1NzA1Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9445#discussion_r525257052", "bodyText": "This thing might not be needed as per my earlier comment.", "author": "lajosrodek", "createdAt": "2020-11-17T15:34:48Z", "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java", "diffHunk": "@@ -164,16 +167,22 @@ public void defaultRangerHdfsAuditUrlWithSingleNamenode() {\n                     \"abfs://data@your-san.dfs.core.windows.net/hive_replica_functions_dir\")));\n             locations.add(new StorageLocationView(buildStorageLocation(\"hive.metastore.warehouse.external.dir\",\n                     \"abfs://data@your-san.dfs.core.windows.net/warehouse/tablespace/external/hive\")));\n+            locations.add(new StorageLocationView(buildStorageLocation(\"hbase.rootdir\",\n+                    \"abfs://data@your-san.dfs.core.windows.net/hbase\")));\n         }\n         AdlsGen2FileSystemConfigurationsView fileSystemConfigurationsView =\n                 new AdlsGen2FileSystemConfigurationsView(new AdlsGen2FileSystem(), locations, false);\n \n         GeneralClusterConfigs generalClusterConfigs =  new GeneralClusterConfigs();\n         generalClusterConfigs.setPrimaryGatewayInstanceDiscoveryFQDN(Optional.of(\"fqdn\"));\n \n+        SharedServiceConfigsView sharedServicesConfigsView = new SharedServiceConfigsView();", "originalCommit": "afd0025e7ddcce0edcaf4c3b7bb55d6ea40d7645", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "chunk": "diff --git a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\nindex d198aac9d3..0fa20db9ee 100644\n--- a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\n+++ b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\n\n@@ -176,13 +175,9 @@ public class RangerCloudStorageServiceConfigProviderTest {\n         GeneralClusterConfigs generalClusterConfigs =  new GeneralClusterConfigs();\n         generalClusterConfigs.setPrimaryGatewayInstanceDiscoveryFQDN(Optional.of(\"fqdn\"));\n \n-        SharedServiceConfigsView sharedServicesConfigsView = new SharedServiceConfigsView();\n-        sharedServicesConfigsView.setDatalakeCluster(true);\n-\n         return Builder.builder()\n                 .withFileSystemConfigurationView(fileSystemConfigurationsView)\n                 .withHostgroupViews(Set.of(gateway, master, worker))\n-                .withSharedServiceConfigs(sharedServicesConfigsView)\n                 .withGeneralClusterConfigs(generalClusterConfigs);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI1NzU5NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9445#discussion_r525257594", "bodyText": "Not needed this one either.", "author": "lajosrodek", "createdAt": "2020-11-17T15:35:24Z", "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java", "diffHunk": "@@ -201,9 +212,13 @@ public void defaultRangerHdfsAuditUrlWithSingleNamenode() {\n         GeneralClusterConfigs generalClusterConfigs =  new GeneralClusterConfigs();\n         generalClusterConfigs.setPrimaryGatewayInstanceDiscoveryFQDN(Optional.of(\"fqdn\"));\n \n+        SharedServiceConfigsView sharedServicesConfigsView = new SharedServiceConfigsView();", "originalCommit": "afd0025e7ddcce0edcaf4c3b7bb55d6ea40d7645", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "chunk": "diff --git a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\nindex d198aac9d3..0fa20db9ee 100644\n--- a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\n+++ b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProviderTest.java\n\n@@ -212,13 +207,9 @@ public class RangerCloudStorageServiceConfigProviderTest {\n         GeneralClusterConfigs generalClusterConfigs =  new GeneralClusterConfigs();\n         generalClusterConfigs.setPrimaryGatewayInstanceDiscoveryFQDN(Optional.of(\"fqdn\"));\n \n-        SharedServiceConfigsView sharedServicesConfigsView = new SharedServiceConfigsView();\n-        sharedServicesConfigsView.setDatalakeCluster(true);\n-\n         return Builder.builder()\n                 .withFileSystemConfigurationView(fileSystemConfigurationsView)\n                 .withHostgroupViews(Set.of(gateway, master, worker))\n-                .withSharedServiceConfigs(sharedServicesConfigsView)\n                 .withGeneralClusterConfigs(generalClusterConfigs);\n     }\n \n"}}, {"oid": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "url": "https://github.com/hortonworks/cloudbreak/commit/04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "message": "CB-9811: Configure Ranger with custom cloud storage path for HBase data at DataLake", "committedDate": "2020-11-17T17:19:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUyMDQyNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9445#discussion_r525520425", "bodyText": "nit: Don't leave two blank lines.", "author": "kmanamcheri", "createdAt": "2020-11-17T20:59:02Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -58,6 +61,11 @@\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n \n+            // only add HBase root at DataLake\n+            ConfigUtils.getStorageLocationForServiceProperty(templatePreparationObject, HBASE_ROOT_DIR)\n+                    .ifPresent(location -> cloudPaths.add(HBASE_ROOT.name() + \"=\" + location.getValue()));\n+", "originalCommit": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6244c15b5a85387f144050b01e78aaf5b420184c", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\nindex 73f7ebea90..ff81cb63e0 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n\n@@ -60,12 +60,9 @@ public class RangerCloudStorageServiceConfigProvider implements CmTemplateCompon\n                     .map(location -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + location.getValue()))\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n-\n-            // only add HBase root at DataLake\n             ConfigUtils.getStorageLocationForServiceProperty(templatePreparationObject, HBASE_ROOT_DIR)\n                     .ifPresent(location -> cloudPaths.add(HBASE_ROOT.name() + \"=\" + location.getValue()));\n \n-\n             String cloudPath = cloudPaths.stream().collect(Collectors.joining(\",\"));\n             return List.of(getRangerAuditConfig(templateProcessor, templatePreparationObject), config(CLOUD_STORAGE_PATHS, cloudPath));\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUyMDg1OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9445#discussion_r525520858", "bodyText": "Remove this comment. This comment doesn't add any explanation. Ranger by definition is only in the Datalake.", "author": "kmanamcheri", "createdAt": "2020-11-17T20:59:47Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java", "diffHunk": "@@ -58,6 +61,11 @@\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n \n+            // only add HBase root at DataLake", "originalCommit": "04d0cf143ab09eea60e0e7ffccd5ae08081698c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6244c15b5a85387f144050b01e78aaf5b420184c", "chunk": "diff --git a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\nindex 73f7ebea90..ff81cb63e0 100644\n--- a/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n+++ b/template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerCloudStorageServiceConfigProvider.java\n\n@@ -60,12 +60,9 @@ public class RangerCloudStorageServiceConfigProvider implements CmTemplateCompon\n                     .map(location -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + location.getValue()))\n                     .orElseGet(() -> cloudPaths.add(RANGER_AUDIT.name() + \"=\" + getDefaultRangerAuditUrl(templateProcessor, templatePreparationObject)));\n \n-\n-            // only add HBase root at DataLake\n             ConfigUtils.getStorageLocationForServiceProperty(templatePreparationObject, HBASE_ROOT_DIR)\n                     .ifPresent(location -> cloudPaths.add(HBASE_ROOT.name() + \"=\" + location.getValue()));\n \n-\n             String cloudPath = cloudPaths.stream().collect(Collectors.joining(\",\"));\n             return List.of(getRangerAuditConfig(templateProcessor, templatePreparationObject), config(CLOUD_STORAGE_PATHS, cloudPath));\n         } else {\n"}}, {"oid": "6244c15b5a85387f144050b01e78aaf5b420184c", "url": "https://github.com/hortonworks/cloudbreak/commit/6244c15b5a85387f144050b01e78aaf5b420184c", "message": "CB-9811: Configure Ranger with custom cloud storage path for HBase data at DataLake\n\nUpdated unit test for Hbase root directory and the unit test has past.", "committedDate": "2020-11-17T21:31:22Z", "type": "commit"}, {"oid": "6244c15b5a85387f144050b01e78aaf5b420184c", "url": "https://github.com/hortonworks/cloudbreak/commit/6244c15b5a85387f144050b01e78aaf5b420184c", "message": "CB-9811: Configure Ranger with custom cloud storage path for HBase data at DataLake\n\nUpdated unit test for Hbase root directory and the unit test has past.", "committedDate": "2020-11-17T21:31:22Z", "type": "forcePushed"}]}