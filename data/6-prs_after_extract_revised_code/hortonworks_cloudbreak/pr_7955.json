{"pr_number": 7955, "pr_title": "CB-6862 Zookeeper is not configured with external volume", "pr_createdAt": "2020-05-01T09:43:08Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7955", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzgzNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933836", "bodyText": "This is a complex method, I think we shall increase the test coverage", "author": "akanto", "createdAt": "2020-05-02T09:01:35Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessor.java", "diffHunk": "@@ -124,54 +122,48 @@ private void updateConfigsInTemplate(CmTemplateProcessor templateProcessor, Map<\n         for (Map.Entry<String, Map<String, List<ApiClusterTemplateConfig>>> entry : newConfigsByRCG.entrySet()) {\n             String configGroupName = entry.getKey();\n             ApiClusterTemplateRoleConfigGroup configGroup = roleConfigGroupByName.get(configGroupName);\n+            ApiClusterTemplateService templateService = serviceByRCG.get(configGroupName);\n             Map<String, List<ApiClusterTemplateConfig>> configsByHostGroup = entry.getValue();\n             int groupCount = configsByHostGroup.size();\n-            switch (groupCount) {\n-                case 1:\n-                    templateProcessor.mergeRoleConfigs(configGroup, configsByHostGroup.values().iterator().next());\n-                    break;\n-                case 0:\n-                    // noop\n-                    break;\n-                default:\n-                    LOGGER.debug(\"Cloning config group {} into {} host groups: {}\", configGroupName, groupCount, configsByHostGroup.keySet());\n-\n-                    // \"clone\" config group for each host group\n-                    Map<String, ApiClusterTemplateRoleConfigGroup> clonesByHostGroup = configsByHostGroup.keySet().stream()\n-                            .map(hostGroupName -> Pair.of(hostGroupName, copyForHostGroup(configGroup, hostGroupName)))\n-                            .collect(toMap(Pair::getKey, Pair::getValue));\n-\n-                    // add host group-specific configs to clones\n-                    configsByHostGroup.forEach((hostGroupName, newConfigs) ->\n-                            templateProcessor.mergeRoleConfigs(clonesByHostGroup.get(hostGroupName), newConfigs));\n-\n-                    // remove original from service\n-                    ApiClusterTemplateService service = serviceByRCG.get(configGroupName);\n-                    service.getRoleConfigGroups().removeIf(group -> Objects.equals(group.getRefName(), configGroupName));\n-\n-                    // remove original from instantiator\n-                    if (instantiatorRoleConfigGroups != null) {\n-                        instantiatorRoleConfigGroups.removeIf(groupInfo -> Objects.equals(groupInfo.getRcgRefName(), configGroupName));\n-                    }\n+            if (groupCount == 1 || isSharedComponent(templateService.getServiceType(), configGroup.getRoleType())) {", "originalCommit": "377e5a8741a1cd3cd24668c285c19509678817fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxOTQ2OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r419219469", "bodyText": "This is a complex method, I think we shall increase the test coverage\n\nTest coverage is 91% in this class. I read other tests and the expression is well-tested.", "author": "topolyai5", "createdAt": "2020-05-04T05:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzgzNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzkzMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r418933933", "bodyText": "I do not see such test which especially covers the ZK case", "author": "akanto", "createdAt": "2020-05-02T09:02:33Z", "path": "template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java", "diffHunk": "@@ -226,22 +226,25 @@ public void testGenerateConfigsWhenHdfsJournalNodeNotNull() {\n         setup(\"input/cb5660.bp\", Builder.builder().withHostgroupViews(Set.of(master1, master2, worker, compute, quorum)));\n \n         Map<String, Map<String, List<ApiClusterTemplateConfig>>> actual = underTest.generateConfigs(templateProcessor, templatePreparator);\n-        assertNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n+        assertNotNull(actual.get(\"hdfs-JOURNALNODE-BASE\"));\n     }\n \n     @Test\n-    public void testGenerateConfigsWhenHdfsJournalNodeIsNotNull() {\n-        List<SharedComponent> sharedComponents = List.of();\n+    public void testProcessWhenSharedConfigThenAddVolumeConfig() {", "originalCommit": "377e5a8741a1cd3cd24668c285c19509678817fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxOTcxNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7955#discussion_r419219714", "bodyText": "done", "author": "topolyai5", "createdAt": "2020-05-04T05:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "71bee22e66ab230de8446a611c6818829bb863d6", "chunk": "diff --git a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java\nindex 1218abc010..48ce51ebec 100644\n--- a/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java\n+++ b/template-manager-cmtemplate/src/test/java/com/sequenceiq/cloudbreak/cmtemplate/CmHostGroupRoleConfigProviderProcessorTest.java\n\n@@ -231,7 +232,8 @@ public class CmHostGroupRoleConfigProviderProcessorTest {\n \n     @Test\n     public void testProcessWhenSharedConfigThenAddVolumeConfig() {\n-        List<SharedComponent> sharedComponents = List.of(new SharedComponent(\"HDFS\", \"JOURNALNODE\"));\n+        List<SharedComponent> sharedComponents = List.of(new SharedComponent(\"ZOOKEEPER\", \"SERVER\"),\n+                new SharedComponent(\"HDFS\", \"JOURNALNODE\"));\n         ReflectionTestUtils.setField(underTest, \"sharedComponents\", sharedComponents);\n         HostgroupView master1 = new HostgroupView(\"master1\", 1, InstanceGroupType.GATEWAY, 1);\n         HostgroupView master2 = new HostgroupView(\"master2\", 1, InstanceGroupType.GATEWAY, 1);\n"}}, {"oid": "71bee22e66ab230de8446a611c6818829bb863d6", "url": "https://github.com/hortonworks/cloudbreak/commit/71bee22e66ab230de8446a611c6818829bb863d6", "message": "CB-6862 Zookeeper is not configured with external volume", "committedDate": "2020-05-04T05:31:31Z", "type": "commit"}, {"oid": "71bee22e66ab230de8446a611c6818829bb863d6", "url": "https://github.com/hortonworks/cloudbreak/commit/71bee22e66ab230de8446a611c6818829bb863d6", "message": "CB-6862 Zookeeper is not configured with external volume", "committedDate": "2020-05-04T05:31:31Z", "type": "forcePushed"}]}