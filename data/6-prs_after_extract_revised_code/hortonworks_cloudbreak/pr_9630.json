{"pr_number": 9630, "pr_title": "CB-10291 & CB-10292: Fix the FreeIPA health check API", "pr_createdAt": "2020-12-11T05:55:37Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9630", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NDQ2MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9630#discussion_r540964461", "bodyText": "we have 3 checks here, either of them fails we will set the status to unhealthy. Will it be obvious from the logs while we set it to unhealthy or shall we add some extra log here?\nI'm just worried we will have to dig deep why it's unhealthy, but maybe it's covered by other logs.", "author": "lacikaaa", "createdAt": "2020-12-11T13:57:06Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java", "diffHunk": "@@ -109,17 +111,29 @@ private void addUnreachableResponse(InstanceMetaData instance, HealthDetailsFree\n         response.addNodeHealthDetailsFreeIpaResponses(nodeResponse);\n         nodeResponse.setName(instance.getDiscoveryFQDN());\n         nodeResponse.setStatus(InstanceStatus.UNREACHABLE);\n+        nodeResponse.setInstanceId(instance.getInstanceId());\n         nodeResponse.addIssue(issue);\n     }\n \n     private HealthDetailsFreeIpaResponse updateResponse(Stack stack, HealthDetailsFreeIpaResponse response) {\n         response.setEnvironmentCrn(stack.getEnvironmentCrn());\n         response.setCrn(stack.getResourceCrn());\n         response.setName(stack.getName());\n-        if (isOverallHealthy(response)) {\n-            response.setStatus(DetailedStackStatus.PROVISIONED.getStatus());\n+\n+        Set<String> notTermiatedStackInstanceIds = stack.getAllInstanceMetaDataList().stream()\n+                .filter(not(InstanceMetaData::isTerminated))\n+                .map(InstanceMetaData::getInstanceId)\n+                .filter(Objects::nonNull)\n+                .collect(Collectors.toSet());\n+        List<InstanceStatus> nonTerminatedStatuses = response.getNodeHealthDetails().stream()\n+                .filter(nodeHealthDetails -> notTermiatedStackInstanceIds.contains(nodeHealthDetails.getInstanceId()))\n+                .map(NodeHealthDetails::getStatus)\n+                .collect(Collectors.toList());\n+        if (!nonTerminatedStatuses.isEmpty() &&\n+                areAllStatusTheSame(nonTerminatedStatuses) && !hasMissingStatus(nonTerminatedStatuses, notTermiatedStackInstanceIds)) {", "originalCommit": "8c73f39329c783b235352776a3c649f30548b0e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7fb04c544dd910d8b8dbd97f4954ad206b2c6349", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java b/freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java\nindex 7c5d271627..8afed310c5 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java\n\n@@ -129,11 +129,17 @@ public class FreeIpaHealthDetailsService {\n                 .filter(nodeHealthDetails -> notTermiatedStackInstanceIds.contains(nodeHealthDetails.getInstanceId()))\n                 .map(NodeHealthDetails::getStatus)\n                 .collect(Collectors.toList());\n-        if (!nonTerminatedStatuses.isEmpty() &&\n-                areAllStatusTheSame(nonTerminatedStatuses) && !hasMissingStatus(nonTerminatedStatuses, notTermiatedStackInstanceIds)) {\n-            response.setStatus(toStatus(nonTerminatedStatuses.get(0)));\n-        } else {\n+        if (nonTerminatedStatuses.isEmpty()) {\n+            LOGGER.debug(\"FreeIPA is unhealthy because all instances are terminated\");\n+            response.setStatus(Status.UNHEALTHY);\n+        } else if (!areAllStatusTheSame(nonTerminatedStatuses)) {\n+            LOGGER.debug(\"There are different health statuses for FreeIPA so the the overall health is unhealthy\");\n             response.setStatus(Status.UNHEALTHY);\n+        } else if (hasMissingStatus(nonTerminatedStatuses, notTermiatedStackInstanceIds)) {\n+            LOGGER.debug(\"There are missing health checks for some instances of FreeIPA so the overall health is unhealthy\");\n+            response.setStatus(Status.UNHEALTHY);\n+        } else {\n+            response.setStatus(toStatus(nonTerminatedStatuses.get(0)));\n         }\n         updateResponseWithInstanceIds(response, stack);\n         return response;\n"}}, {"oid": "7fb04c544dd910d8b8dbd97f4954ad206b2c6349", "url": "https://github.com/hortonworks/cloudbreak/commit/7fb04c544dd910d8b8dbd97f4954ad206b2c6349", "message": "CB-10291 & CB-10292: Fix the FreeIPA health check API\n\nFix FreeIPA health summary status on the health API. The summary\ncorrectly reports unreachable, stopped, available, and unhealthy now.\n\nFix the FreeIPA health check API's instance status when the health\ncheck fails.\n\nPopulate the missing instance ID for the FreeIPA health check.\n\nTested with unit tests and also with a local instance of cloudbreak.", "committedDate": "2020-12-11T18:16:02Z", "type": "commit"}, {"oid": "7fb04c544dd910d8b8dbd97f4954ad206b2c6349", "url": "https://github.com/hortonworks/cloudbreak/commit/7fb04c544dd910d8b8dbd97f4954ad206b2c6349", "message": "CB-10291 & CB-10292: Fix the FreeIPA health check API\n\nFix FreeIPA health summary status on the health API. The summary\ncorrectly reports unreachable, stopped, available, and unhealthy now.\n\nFix the FreeIPA health check API's instance status when the health\ncheck fails.\n\nPopulate the missing instance ID for the FreeIPA health check.\n\nTested with unit tests and also with a local instance of cloudbreak.", "committedDate": "2020-12-11T18:16:02Z", "type": "forcePushed"}]}