{"pr_number": 8047, "pr_title": "CB-7058 Cluster is not in proper state", "pr_createdAt": "2020-05-14T08:27:16Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8047", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4NjE5OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8047#discussion_r424986198", "bodyText": "I would gladly eliminate this part of the message: \"cluster is not in proper state\"", "author": "akanto", "createdAt": "2020-05-14T09:09:06Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java", "diffHunk": "@@ -224,7 +224,8 @@ public void waitCloudbreakClusterCreation(Long id, PollingConfig pollingConfig)\n                                     if (FINISHED.equals(flowState)) {\n                                         LOGGER.warn(\"Stack is in improper state! FlowState: {}, stackV4Response: {}\",\n                                                 flowState, JsonUtil.writeValueAsStringSilent(stackV4Response));\n-                                        return sdxCreationFailed(sdxCluster, \"cluster is not in proper state\");\n+                                        return sdxCreationFailed(sdxCluster, \"cluster is not in proper state (\" + stackV4Response.getStatus() +", "originalCommit": "499db1770447e359a4cb52de8e67119febcd7f5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1NDExOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8047#discussion_r425054118", "bodyText": "also it would be nice to use the right term so because we are in the sdx app use Data Lake (this is what we show to customers)", "author": "doktoric", "createdAt": "2020-05-14T11:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4NjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNTI1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8047#discussion_r425305253", "bodyText": "Error message is improved, please check if you see any more misleading messages", "author": "sodre90", "createdAt": "2020-05-14T17:20:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4NjE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "ee239ce4726e823a9184d9bc9cf7823408609671", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java\nindex ef00c8365a..661ef33c42 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/ProvisionerService.java\n\n@@ -216,15 +216,15 @@ public class ProvisionerService {\n                             } else {\n                                 if (Status.CREATE_FAILED.equals(stackV4Response.getStatus())) {\n                                     LOGGER.info(\"Stack creation failed {}\", stackV4Response.getName());\n-                                    return sdxCreationFailed(sdxCluster, stackV4Response.getStatusReason());\n+                                    return sdxCreationFailed(stackV4Response.getStatusReason());\n                                 } else if (Status.CREATE_FAILED.equals(stackV4Response.getCluster().getStatus())) {\n                                     LOGGER.info(\"Cluster creation failed {}\", stackV4Response.getCluster().getName());\n-                                    return sdxCreationFailed(sdxCluster, stackV4Response.getCluster().getStatusReason());\n+                                    return sdxCreationFailed(stackV4Response.getCluster().getStatusReason());\n                                 } else {\n                                     if (FINISHED.equals(flowState)) {\n-                                        LOGGER.warn(\"Stack is in improper state! FlowState: {}, stackV4Response: {}\",\n+                                        LOGGER.warn(\"Flow finished but stack is in improper state! FlowState: {}, stackV4Response: {}\",\n                                                 flowState, JsonUtil.writeValueAsStringSilent(stackV4Response));\n-                                        return sdxCreationFailed(sdxCluster, \"cluster is not in proper state (\" + stackV4Response.getStatus() +\n+                                        return sdxCreationFailed(\"Provisioning failed (\" + stackV4Response.getStatus() +\n                                                 \"), reason: \" + stackV4Response.getStatusReason());\n                                     } else {\n                                         return AttemptResults.justContinue();\n"}}, {"oid": "ee239ce4726e823a9184d9bc9cf7823408609671", "url": "https://github.com/hortonworks/cloudbreak/commit/ee239ce4726e823a9184d9bc9cf7823408609671", "message": "CB-7058 Cluster is not in proper state", "committedDate": "2020-05-14T17:14:46Z", "type": "commit"}, {"oid": "ee239ce4726e823a9184d9bc9cf7823408609671", "url": "https://github.com/hortonworks/cloudbreak/commit/ee239ce4726e823a9184d9bc9cf7823408609671", "message": "CB-7058 Cluster is not in proper state", "committedDate": "2020-05-14T17:14:46Z", "type": "forcePushed"}]}