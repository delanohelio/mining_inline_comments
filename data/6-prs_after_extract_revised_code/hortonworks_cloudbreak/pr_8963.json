{"pr_number": 8963, "pr_title": "CB-8659 restart services after repair", "pr_createdAt": "2020-09-09T17:32:05Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8963", "timeline": [{"oid": "bd519bc7f139e1bb455ce3fc5d8a6e175bc65656", "url": "https://github.com/hortonworks/cloudbreak/commit/bd519bc7f139e1bb455ce3fc5d8a6e175bc65656", "message": "CB-8659 restart services after repair", "committedDate": "2020-09-10T10:19:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMjQ1MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r486402451", "bodyText": "Is this going to work if both master and idbroker are down? I think after we replace the master we will try to restart the services which is going to fail.", "author": "keyki", "createdAt": "2020-09-10T14:45:16Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java", "diffHunk": "@@ -103,6 +103,14 @@ public void installServicesOnNewHosts(Long stackId, String hostGroupName) throws\n         recipeEngine.executePostAmbariStartRecipes(stack, hostGroup.getRecipes());\n         ClusterApi connector = clusterApiConnectors.getConnector(stack);\n         List<String> upscaledHosts = connector.upscaleCluster(hostGroup, runningInstanceMetaDataSet);\n+        if (repair) {", "originalCommit": "bd519bc7f139e1bb455ce3fc5d8a6e175bc65656", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MDc0MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r486790741", "bodyText": "Yes, it will fail because CM will not be able to start every service, but it won't cause any problem. It will spend some time here to restart the node for sure which can be avoided. I can try to find out somehow if it is the last node we are trying to recover. Another solution can be if we check every other node are fine and if yes, then we can do a restart.", "author": "sodre90", "createdAt": "2020-09-11T05:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMjQ1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMjY0OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r491822649", "bodyText": "How much is the \"spend some time\" in minutes? Do we need to consider this for e2e tests?", "author": "lnardai", "createdAt": "2020-09-21T06:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMjQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "769a8de31b28c95f181644be17b62b8d694ad215", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java\nindex b1286fb9ff..35238ec755 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java\n\n@@ -94,16 +94,16 @@ public class ClusterUpscaleService {\n         recipeEngine.uploadUpscaleRecipes(stack, hostGroup, hostGroups);\n     }\n \n-    public void installServicesOnNewHosts(Long stackId, String hostGroupName, Boolean repair) throws CloudbreakException {\n+    public void installServicesOnNewHosts(Long stackId, String hostGroupName, Boolean repair, Boolean restartServices) throws CloudbreakException {\n         Stack stack = stackService.getByIdWithClusterInTransaction(stackId);\n-        LOGGER.debug(\"Start installing Ambari services\");\n+        LOGGER.debug(\"Start installing CM services\");\n         HostGroup hostGroup = Optional.ofNullable(hostGroupService.getByClusterIdAndNameWithRecipes(stack.getCluster().getId(), hostGroupName))\n                 .orElseThrow(NotFoundException.notFound(\"hostgroup\", hostGroupName));\n         Set<InstanceMetaData> runningInstanceMetaDataSet = hostGroup.getInstanceGroup().getRunningInstanceMetaDataSet();\n         recipeEngine.executePostAmbariStartRecipes(stack, hostGroup.getRecipes());\n         ClusterApi connector = clusterApiConnectors.getConnector(stack);\n         List<String> upscaledHosts = connector.upscaleCluster(hostGroup, runningInstanceMetaDataSet);\n-        if (repair) {\n+        if (shouldRestartServices(repair, restartServices, stack)) {\n             try {\n                 LOGGER.info(\"Trying to restart services\");\n                 connector.restartAll();\n"}}, {"oid": "769a8de31b28c95f181644be17b62b8d694ad215", "url": "https://github.com/hortonworks/cloudbreak/commit/769a8de31b28c95f181644be17b62b8d694ad215", "message": "CB-8824 Can't repair SDX if both hostgroup is stopped", "committedDate": "2020-09-22T10:04:58Z", "type": "forcePushed"}, {"oid": "0242a3a3d402ce37dbb53d0ac0cf5889647c998b", "url": "https://github.com/hortonworks/cloudbreak/commit/0242a3a3d402ce37dbb53d0ac0cf5889647c998b", "message": "CB-8824 Can't repair SDX if both hostgroup is stopped", "committedDate": "2020-09-22T10:29:23Z", "type": "forcePushed"}, {"oid": "2d25a0c803931c997454c0cfb8b431931e1e3dd2", "url": "https://github.com/hortonworks/cloudbreak/commit/2d25a0c803931c997454c0cfb8b431931e1e3dd2", "message": "CB-8659 restart services after repair", "committedDate": "2020-09-23T15:08:57Z", "type": "forcePushed"}, {"oid": "988c3ac64232023b3ebfd81a2243f60d485e0b97", "url": "https://github.com/hortonworks/cloudbreak/commit/988c3ac64232023b3ebfd81a2243f60d485e0b97", "message": "CB-8659 restart services after repair", "committedDate": "2020-09-24T08:16:54Z", "type": "forcePushed"}, {"oid": "59478ff8d9834ab659f8092d2ee85665ee94d439", "url": "https://github.com/hortonworks/cloudbreak/commit/59478ff8d9834ab659f8092d2ee85665ee94d439", "message": "CB-8659 restart services after repair", "committedDate": "2020-09-24T13:49:40Z", "type": "commit"}, {"oid": "59478ff8d9834ab659f8092d2ee85665ee94d439", "url": "https://github.com/hortonworks/cloudbreak/commit/59478ff8d9834ab659f8092d2ee85665ee94d439", "message": "CB-8659 restart services after repair", "committedDate": "2020-09-24T13:49:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMzODQ3Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497338472", "bodyText": "Why the wrapper type instead of the primitive?", "author": "foldik", "createdAt": "2020-09-30T08:37:07Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/upscale/ClusterUpscaleContext.java", "diffHunk": "@@ -16,14 +16,20 @@\n \n     private final ClusterManagerType clusterManagerType;\n \n+    private final Boolean repair;", "originalCommit": "59478ff8d9834ab659f8092d2ee85665ee94d439", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0OTU2OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497449568", "bodyText": "because singlePrimaryGateway was Boolean also :D", "author": "sodre90", "createdAt": "2020-09-30T11:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMzODQ3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0MDg2Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497340867", "bodyText": "How much time does it take to restart all the services? Does it make the repair a lot longer?", "author": "foldik", "createdAt": "2020-09-30T08:40:51Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java", "diffHunk": "@@ -94,15 +94,23 @@ public void uploadRecipesOnNewHosts(Long stackId, String hostGroupName) throws C\n         recipeEngine.uploadUpscaleRecipes(stack, hostGroup, hostGroups);\n     }\n \n-    public void installServicesOnNewHosts(Long stackId, String hostGroupName) throws CloudbreakException {\n+    public void installServicesOnNewHosts(Long stackId, String hostGroupName, Boolean repair, Boolean restartServices) throws CloudbreakException {\n         Stack stack = stackService.getByIdWithClusterInTransaction(stackId);\n-        LOGGER.debug(\"Start installing Ambari services\");\n+        LOGGER.debug(\"Start installing CM services\");\n         HostGroup hostGroup = Optional.ofNullable(hostGroupService.getByClusterIdAndNameWithRecipes(stack.getCluster().getId(), hostGroupName))\n                 .orElseThrow(NotFoundException.notFound(\"hostgroup\", hostGroupName));\n         Set<InstanceMetaData> runningInstanceMetaDataSet = hostGroup.getInstanceGroup().getRunningInstanceMetaDataSet();\n         recipeEngine.executePostAmbariStartRecipes(stack, hostGroup.getRecipes());\n         ClusterApi connector = clusterApiConnectors.getConnector(stack);\n         List<String> upscaledHosts = connector.upscaleCluster(hostGroup, runningInstanceMetaDataSet);\n+        if (shouldRestartServices(repair, restartServices, stack)) {\n+            try {\n+                LOGGER.info(\"Trying to restart services\");\n+                connector.restartAll();", "originalCommit": "59478ff8d9834ab659f8092d2ee85665ee94d439", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0MjI0Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497442243", "bodyText": "around 3-4 minutes", "author": "sodre90", "createdAt": "2020-09-30T11:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0MDg2Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0MjA4NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497342084", "bodyText": "What if all restartAll fail? Will we show the cluster as healthy or the flow will fail later?", "author": "foldik", "createdAt": "2020-09-30T08:42:53Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/cluster/ClusterUpscaleService.java", "diffHunk": "@@ -94,15 +94,23 @@ public void uploadRecipesOnNewHosts(Long stackId, String hostGroupName) throws C\n         recipeEngine.uploadUpscaleRecipes(stack, hostGroup, hostGroups);\n     }\n \n-    public void installServicesOnNewHosts(Long stackId, String hostGroupName) throws CloudbreakException {\n+    public void installServicesOnNewHosts(Long stackId, String hostGroupName, Boolean repair, Boolean restartServices) throws CloudbreakException {\n         Stack stack = stackService.getByIdWithClusterInTransaction(stackId);\n-        LOGGER.debug(\"Start installing Ambari services\");\n+        LOGGER.debug(\"Start installing CM services\");\n         HostGroup hostGroup = Optional.ofNullable(hostGroupService.getByClusterIdAndNameWithRecipes(stack.getCluster().getId(), hostGroupName))\n                 .orElseThrow(NotFoundException.notFound(\"hostgroup\", hostGroupName));\n         Set<InstanceMetaData> runningInstanceMetaDataSet = hostGroup.getInstanceGroup().getRunningInstanceMetaDataSet();\n         recipeEngine.executePostAmbariStartRecipes(stack, hostGroup.getRecipes());\n         ClusterApi connector = clusterApiConnectors.getConnector(stack);\n         List<String> upscaledHosts = connector.upscaleCluster(hostGroup, runningInstanceMetaDataSet);\n+        if (shouldRestartServices(repair, restartServices, stack)) {\n+            try {\n+                LOGGER.info(\"Trying to restart services\");\n+                connector.restartAll();\n+            } catch (RuntimeException e) {\n+                LOGGER.info(\"Restart services failed\", e);", "originalCommit": "59478ff8d9834ab659f8092d2ee85665ee94d439", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0MjQ1NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8963#discussion_r497442454", "bodyText": "it will be healthy", "author": "sodre90", "createdAt": "2020-09-30T11:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0MjA4NA=="}], "type": "inlineReview", "revised_code": null}]}