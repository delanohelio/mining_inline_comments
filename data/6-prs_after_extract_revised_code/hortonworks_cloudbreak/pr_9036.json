{"pr_number": 9036, "pr_title": "CB-8700 optimizations for IT test", "pr_createdAt": "2020-09-18T07:41:46Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9036", "timeline": [{"oid": "f9aef7e453e6a134a5ea845629c813da59ca1df1", "url": "https://github.com/hortonworks/cloudbreak/commit/f9aef7e453e6a134a5ea845629c813da59ca1df1", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-18T08:53:23Z", "type": "forcePushed"}, {"oid": "92809f062341ba9c6dce97f47d3deb9924ca7a8e", "url": "https://github.com/hortonworks/cloudbreak/commit/92809f062341ba9c6dce97f47d3deb9924ca7a8e", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-18T10:40:49Z", "type": "forcePushed"}, {"oid": "427a20838f4e3d3ddd87725e9c310e611689529c", "url": "https://github.com/hortonworks/cloudbreak/commit/427a20838f4e3d3ddd87725e9c310e611689529c", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-18T13:35:28Z", "type": "forcePushed"}, {"oid": "55010396285a2dc56763e63b41e670c282d3a144", "url": "https://github.com/hortonworks/cloudbreak/commit/55010396285a2dc56763e63b41e670c282d3a144", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-21T07:39:49Z", "type": "forcePushed"}, {"oid": "b697a52a8f97fc158d10b817f70edb8310754d6a", "url": "https://github.com/hortonworks/cloudbreak/commit/b697a52a8f97fc158d10b817f70edb8310754d6a", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-21T09:37:46Z", "type": "forcePushed"}, {"oid": "854f02cd5fdedb7976660328f269d7ace57df790", "url": "https://github.com/hortonworks/cloudbreak/commit/854f02cd5fdedb7976660328f269d7ace57df790", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-21T10:36:09Z", "type": "commit"}, {"oid": "854f02cd5fdedb7976660328f269d7ace57df790", "url": "https://github.com/hortonworks/cloudbreak/commit/854f02cd5fdedb7976660328f269d7ace57df790", "message": "CB-8700 optimizations for IT test", "committedDate": "2020-09-21T10:36:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492494064", "bodyText": "little bit looks weird. The map is static final but modifies the content of the map. Why is it static final?", "author": "topolyai5", "createdAt": "2020-09-22T06:15:04Z", "path": "common/src/main/java/com/sequenceiq/cloudbreak/certificate/PkiUtil.java", "diffHunk": "@@ -118,15 +137,22 @@ public static String generateSignature(String privateKeyPem, byte[] data) {\n                 RSAPrivateKeySpec privKeySpec = factory.getKeySpec(kp.getPrivate(), RSAPrivateKeySpec.class);\n                 rsaKeyParameters = new RSAKeyParameters(true, privKeySpec.getModulus(), privKeySpec.getPrivateExponent());\n \n-                CACHE.put(privateKeyPem, rsaKeyParameters);\n+                RSA_KEY_PARAMS_CACHE.put(privateKeyPem, rsaKeyParameters);\n             } catch (NoSuchAlgorithmException | IOException | InvalidKeySpecException e) {\n                 throw new SecurityException(e);\n             }\n         }\n \n-        Signer signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n-        signer.init(true, rsaKeyParameters);\n-        signer.update(data, 0, data.length);\n+        Signer signer = PSS_SIGNER_CACHE.get(rsaKeyParameters);\n+\n+        if (signer == null) {\n+            signer = new PSSSigner(new RSAEngine(), new SHA256Digest(), SALT_LENGTH);\n+            signer.init(true, rsaKeyParameters);\n+            signer.update(data, 0, data.length);\n+\n+            PSS_SIGNER_CACHE.put(rsaKeyParameters, signer);", "originalCommit": "854f02cd5fdedb7976660328f269d7ace57df790", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NTk5NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492495995", "bodyText": "the reference is final and I can initialize it in static initializer block", "author": "sodre90", "createdAt": "2020-09-22T06:20:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NjQ5NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492496494", "bodyText": "I understand that, but why do you create the map as static final?", "author": "topolyai5", "createdAt": "2020-09-22T06:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5Nzk2Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9036#discussion_r492497963", "bodyText": "because if it is not static then I can not initialize it in static block\nIt is static because I wanted one instance per JVM\nI followed the previous CACHE solution :)", "author": "sodre90", "createdAt": "2020-09-22T06:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NDA2NA=="}], "type": "inlineReview", "revised_code": null}]}