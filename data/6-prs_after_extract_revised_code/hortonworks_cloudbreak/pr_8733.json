{"pr_number": 8733, "pr_title": "CB-8152 stopped stack sync wont state delete failed status when insta\u2026", "pr_createdAt": "2020-08-06T10:37:31Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8733", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r466890751", "bodyText": "what if every nodes are stopped?", "author": "sodre90", "createdAt": "2020-08-07T08:11:58Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n+                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {", "originalCommit": "48a03d20956d4d30c5873138e10985ae29867019", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzODI4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r467838285", "bodyText": "it will remain stopped. Did I miss something?", "author": "afarsang", "createdAt": "2020-08-10T11:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDM2NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468450365", "bodyText": "Which if clause handles that use-case? Why was the original \"else if\" deleted?", "author": "pdarvasi", "createdAt": "2020-08-11T09:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5MDE1NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468590154", "bodyText": "I thought it will be the same as I did, I can fix that", "author": "afarsang", "createdAt": "2020-08-11T13:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1f66245ab00404099d4fbfd1d5ca4e693a6e431e", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\nindex 44fd4204e7..a832c33a93 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n\n@@ -206,21 +206,27 @@ public class StackSyncService {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n+        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n+        boolean someInstancesRunningOrDeletedOnProviderSide = (instanceStateCounts.get(InstanceSyncState.RUNNING)\n+                + instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE)) > 0;\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n-                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if (someInstancesRunningOrDeletedOnProviderSide && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else {\n+        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {\n+            updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.STOPPED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n+            eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n+                    cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n+        }  else {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.DELETE_FAILED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), DELETE_FAILED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDg3MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468450870", "bodyText": "I thought we agreed to put the status to STOPPED_FAILED if we find deleted instances. https://jira.cloudera.com/browse/ENGESC-3354?focusedCommentId=3950763&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-3950763\nHas this changed?", "author": "pdarvasi", "createdAt": "2020-08-11T09:32:41Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -206,24 +206,20 @@ private void deleteResourceIfNeeded(Stack stack, InstanceMetaData instance) {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n-        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0 && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))", "originalCommit": "48a03d20956d4d30c5873138e10985ae29867019", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU4OTUxMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r468589512", "bodyText": "No, we agreed it remain STOPPED", "author": "afarsang", "createdAt": "2020-08-11T13:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "1f66245ab00404099d4fbfd1d5ca4e693a6e431e", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\nindex 44fd4204e7..a832c33a93 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n\n@@ -206,21 +206,27 @@ public class StackSyncService {\n     }\n \n     private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> instanceStateCounts, boolean stackStatusUpdateEnabled) {\n+        Set<InstanceMetaData> instances = instanceMetaDataRepository.findNotTerminatedForStack(stack.getId());\n+        boolean someInstancesRunningOrDeletedOnProviderSide = (instanceStateCounts.get(InstanceSyncState.RUNNING)\n+                + instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE)) > 0;\n         if (instanceStateCounts.get(InstanceSyncState.UNKNOWN) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATUS_COULDNT_DETERMINE.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.IN_PROGRESS) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_OPERATION_IN_PROGRESS.code()));\n-        } else if ((instanceStateCounts.get(InstanceSyncState.RUNNING) >= 0 || (instanceStateCounts.get(InstanceSyncState.DELETED_ON_PROVIDER_SIDE) >= 0))\n-                && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n+        } else if (someInstancesRunningOrDeletedOnProviderSide && instanceStateCounts.get(InstanceSyncState.STOPPED) > 0) {\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STOPPED_ON_PROVIDER.code()));\n         } else if (instanceStateCounts.get(InstanceSyncState.RUNNING) > 0) {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.AVAILABLE, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), AVAILABLE.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else {\n+        } else if (instanceStateCounts.get(InstanceSyncState.STOPPED).equals(instances.size())) {\n+            updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.STOPPED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n+            eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n+                    cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n+        }  else {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.DELETE_FAILED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), DELETE_FAILED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n"}}, {"oid": "1f66245ab00404099d4fbfd1d5ca4e693a6e431e", "url": "https://github.com/hortonworks/cloudbreak/commit/1f66245ab00404099d4fbfd1d5ca4e693a6e431e", "message": "CB-8152 stopped stack sync wont state delete failed status when instances deleted on provider side", "committedDate": "2020-08-11T14:24:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MTM0Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8733#discussion_r469741343", "bodyText": "whitespace added", "author": "sodre90", "createdAt": "2020-08-13T07:08:12Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java", "diffHunk": "@@ -224,7 +226,7 @@ private void handleSyncResult(Stack stack, Map<InstanceSyncState, Integer> insta\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.STOPPED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        } else {\n+        }  else {", "originalCommit": "1f66245ab00404099d4fbfd1d5ca4e693a6e431e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d18d6a46fb15a891a6f2f4f9f1a252314f99acc7", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\nindex a832c33a93..228c8a3c17 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/StackSyncService.java\n\n@@ -226,7 +226,7 @@ public class StackSyncService {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.STOPPED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), STOPPED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n-        }  else {\n+        } else {\n             updateStackStatusIfEnabled(stack.getId(), DetailedStackStatus.DELETE_FAILED, SYNC_STATUS_REASON, stackStatusUpdateEnabled);\n             eventService.fireCloudbreakEvent(stack.getId(), DELETE_FAILED.name(),\n                     cloudbreakMessagesService.getMessage(Msg.STACK_SYNC_INSTANCE_STATE_SYNCED.code()));\n"}}, {"oid": "d18d6a46fb15a891a6f2f4f9f1a252314f99acc7", "url": "https://github.com/hortonworks/cloudbreak/commit/d18d6a46fb15a891a6f2f4f9f1a252314f99acc7", "message": "CB-8152 stopped stack sync wont state delete failed status when instances deleted on provider side", "committedDate": "2020-08-14T10:35:40Z", "type": "commit"}, {"oid": "d18d6a46fb15a891a6f2f4f9f1a252314f99acc7", "url": "https://github.com/hortonworks/cloudbreak/commit/d18d6a46fb15a891a6f2f4f9f1a252314f99acc7", "message": "CB-8152 stopped stack sync wont state delete failed status when instances deleted on provider side", "committedDate": "2020-08-14T10:35:40Z", "type": "forcePushed"}]}