{"pr_number": 7733, "pr_title": "CB-6110 Update DL API with external rds options", "pr_createdAt": "2020-04-03T12:00:03Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7733", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk1OTg4OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7733#discussion_r402959888", "bodyText": "SdxDatabaseAvailabilityType.NONE.equals(sdxCluster.getDatabaseAvailabilityType())\n\nis a re-occuring code, maybe in SDXcluster a new method cna be intoduce with this logic", "author": "keyki", "createdAt": "2020-04-03T12:10:35Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/flow/delete/handler/RdsDeletionHandler.java", "diffHunk": "@@ -54,7 +55,7 @@ protected void doAccept(HandlerEvent event) {\n         Selectable response;\n         try {\n             sdxClusterRepository.findById(sdxId).ifPresent(sdxCluster -> {\n-                if (sdxCluster.isCreateDatabase() && Strings.isNotEmpty(sdxCluster.getDatabaseCrn())) {\n+                if (!SdxDatabaseAvailabilityType.NONE.equals(sdxCluster.getDatabaseAvailabilityType()) && Strings.isNotEmpty(sdxCluster.getDatabaseCrn())) {", "originalCommit": "944b33f6fb56838be33fc2470694201c90de4f31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56d85298eae3ff5afc7e46088b2bcc7a020125f6", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/flow/delete/handler/RdsDeletionHandler.java b/datalake/src/main/java/com/sequenceiq/datalake/flow/delete/handler/RdsDeletionHandler.java\nindex cb3da346ca..9fca91a2fe 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/flow/delete/handler/RdsDeletionHandler.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/flow/delete/handler/RdsDeletionHandler.java\n\n@@ -55,7 +54,7 @@ public class RdsDeletionHandler extends ExceptionCatcherEventHandler<RdsDeletion\n         Selectable response;\n         try {\n             sdxClusterRepository.findById(sdxId).ifPresent(sdxCluster -> {\n-                if (!SdxDatabaseAvailabilityType.NONE.equals(sdxCluster.getDatabaseAvailabilityType()) && Strings.isNotEmpty(sdxCluster.getDatabaseCrn())) {\n+                if (sdxCluster.hasExternalDatabase() && Strings.isNotEmpty(sdxCluster.getDatabaseCrn())) {\n                     LOGGER.debug(\"start polling database termination for sdx: {}\", sdxId);\n                     databaseService.terminate(sdxCluster, rdsWaitRequest.isForced());\n                 } else {\n"}}, {"oid": "56d85298eae3ff5afc7e46088b2bcc7a020125f6", "url": "https://github.com/hortonworks/cloudbreak/commit/56d85298eae3ff5afc7e46088b2bcc7a020125f6", "message": "CB-6110 Support HA, not HA as external database and embedded database.", "committedDate": "2020-04-03T12:20:40Z", "type": "commit"}, {"oid": "56d85298eae3ff5afc7e46088b2bcc7a020125f6", "url": "https://github.com/hortonworks/cloudbreak/commit/56d85298eae3ff5afc7e46088b2bcc7a020125f6", "message": "CB-6110 Support HA, not HA as external database and embedded database.", "committedDate": "2020-04-03T12:20:40Z", "type": "forcePushed"}]}