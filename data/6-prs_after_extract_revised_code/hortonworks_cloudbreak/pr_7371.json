{"pr_number": 7371, "pr_title": "CB-4812 create external DB for Azure SDX by default", "pr_createdAt": "2020-02-24T14:35:25Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7371", "timeline": [{"oid": "bbe7e4f3c8a83984254ea81d8cbdb26edcbfa0ae", "url": "https://github.com/hortonworks/cloudbreak/commit/bbe7e4f3c8a83984254ea81d8cbdb26edcbfa0ae", "message": "CB-4812 create external DB for Azure SDX by default", "committedDate": "2020-02-25T13:41:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3OTI4NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7371#discussion_r383979285", "bodyText": "Typo: permitterd -> permitted", "author": "lajosrodek", "createdAt": "2020-02-25T16:09:03Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java", "diffHunk": "@@ -50,4 +59,24 @@ private void setExperimentalForCreateDatabaseIfNeeded(SdxDatabaseRequest sdxData\n             sdxCluster.setCreateDatabase(true);\n         }\n     }\n+\n+    private boolean isCMExternalDbSupported(CloudPlatform cloudPlatform, SdxCluster sdxCluster) {\n+        if (CloudPlatform.AZURE == cloudPlatform) {\n+            String runtime = sdxCluster.getRuntime();\n+            if (StringUtils.isBlank(runtime)) {\n+                LOGGER.info(\"Runtime is not specified, external DB is permitted on Azure\");\n+                return true;\n+            }\n+            boolean permitted = isVersionNewerOrEqualThan(sdxCluster::getRuntime, () -> AZURE_EXT_DB_MIN_RUNTIME_VERSION);\n+            LOGGER.info(\"External DB {} permitterd on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);", "originalCommit": "bbe7e4f3c8a83984254ea81d8cbdb26edcbfa0ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58f568f9bd7e46f390683f79b9ee00366235190c", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\nindex 06e04b8d50..8429629c5f 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\n\n@@ -68,7 +74,7 @@ public class SdxExternalDatabaseConfigurer {\n                 return true;\n             }\n             boolean permitted = isVersionNewerOrEqualThan(sdxCluster::getRuntime, () -> AZURE_EXT_DB_MIN_RUNTIME_VERSION);\n-            LOGGER.info(\"External DB {} permitterd on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);\n+            LOGGER.info(\"External DB {} permitted on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);\n             return permitted;\n         }\n         return true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk4MTMwMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7371#discussion_r383981301", "bodyText": "Since VersionComparator is stateless, I suggest instantiating it only once as a bean or field initializer in this class, instead of creating a new instance each time this method is invoked.", "author": "lajosrodek", "createdAt": "2020-02-25T16:12:06Z", "path": "datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java", "diffHunk": "@@ -50,4 +59,24 @@ private void setExperimentalForCreateDatabaseIfNeeded(SdxDatabaseRequest sdxData\n             sdxCluster.setCreateDatabase(true);\n         }\n     }\n+\n+    private boolean isCMExternalDbSupported(CloudPlatform cloudPlatform, SdxCluster sdxCluster) {\n+        if (CloudPlatform.AZURE == cloudPlatform) {\n+            String runtime = sdxCluster.getRuntime();\n+            if (StringUtils.isBlank(runtime)) {\n+                LOGGER.info(\"Runtime is not specified, external DB is permitted on Azure\");\n+                return true;\n+            }\n+            boolean permitted = isVersionNewerOrEqualThan(sdxCluster::getRuntime, () -> AZURE_EXT_DB_MIN_RUNTIME_VERSION);\n+            LOGGER.info(\"External DB {} permitterd on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);\n+            return permitted;\n+        }\n+        return true;\n+    }\n+\n+    private boolean isVersionNewerOrEqualThan(Versioned currentVersion, Versioned baseVersion) {\n+        LOGGER.info(\"Compared: version {} with new version {}\", currentVersion.getVersion(), baseVersion.getVersion());\n+        Comparator<Versioned> versionComparator = new VersionComparator();\n+        return versionComparator.compare(currentVersion, baseVersion) > -1;", "originalCommit": "bbe7e4f3c8a83984254ea81d8cbdb26edcbfa0ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58f568f9bd7e46f390683f79b9ee00366235190c", "chunk": "diff --git a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\nindex 06e04b8d50..8429629c5f 100644\n--- a/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\n+++ b/datalake/src/main/java/com/sequenceiq/datalake/service/sdx/SdxExternalDatabaseConfigurer.java\n\n@@ -68,7 +74,7 @@ public class SdxExternalDatabaseConfigurer {\n                 return true;\n             }\n             boolean permitted = isVersionNewerOrEqualThan(sdxCluster::getRuntime, () -> AZURE_EXT_DB_MIN_RUNTIME_VERSION);\n-            LOGGER.info(\"External DB {} permitterd on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);\n+            LOGGER.info(\"External DB {} permitted on Azure with runtime version: {}\", permitted ? \"is\" : \"is NOT\", runtime);\n             return permitted;\n         }\n         return true;\n"}}, {"oid": "58f568f9bd7e46f390683f79b9ee00366235190c", "url": "https://github.com/hortonworks/cloudbreak/commit/58f568f9bd7e46f390683f79b9ee00366235190c", "message": "CB-4812 create external DB for Azure SDX by default", "committedDate": "2020-02-25T16:28:39Z", "type": "commit"}, {"oid": "58f568f9bd7e46f390683f79b9ee00366235190c", "url": "https://github.com/hortonworks/cloudbreak/commit/58f568f9bd7e46f390683f79b9ee00366235190c", "message": "CB-4812 create external DB for Azure SDX by default", "committedDate": "2020-02-25T16:28:39Z", "type": "forcePushed"}]}