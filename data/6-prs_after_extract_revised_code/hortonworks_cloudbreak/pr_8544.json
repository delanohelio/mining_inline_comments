{"pr_number": 8544, "pr_title": "CDPCP-2598 Add logs around major user sync tasks", "pr_createdAt": "2020-07-13T21:38:04Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8544", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5OTA4Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8544#discussion_r453999083", "bodyText": "Is there a request ID in this context? If there is, is it included in the message? Maybe add the operation ID?", "author": "giladwolff", "createdAt": "2020-07-13T23:13:32Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -208,8 +208,10 @@ private void internalSynchronizeUsers(String operationId, String accountId, Stri\n                     umsEventGenerationIdsProvider.getEventGenerationIds(accountId, requestId) :\n                     null;\n \n+            LOGGER.debug(\"Starting RETRIEVE_{}_UMS_STATE for environments {} ...\", fullSync ? \"FULL\" : \"PARTIAL\", environmentCrns);", "originalCommit": "d791df24f2daf7eb978b554e6f37a987b7ad9fd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2NjI4Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8544#discussion_r454466282", "bodyText": "the request id and operation id (exposed as \"flow\") are part of the MDC.\n2020-07-13 14:42:58,291 [usersyncExecutor-1] lambda$internalSynchronizeUsers$7:204 DEBUG c.s.f.s.f.u.UserSyncService - [instance:default] [type:springLog] [crn:] [name:] [flow:ab77043f-84e5-49d1-9e57-fa27e8393a9f] [requestid:2bc3eed0-77ff-4ab2-b5a2-2ce4fd17da4c] [tenant:] [userCrn:] [environment:] [traceId:] [spanId:] Starting RETRIEVE_FULL_UMS_STATE for environments [crn:cdp:environments:us-west-1:foo:environment:8813ff3f-b25b-40f8-9999-569804d48396] ...", "author": "handavid", "createdAt": "2020-07-14T16:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5OTA4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\nindex be273835f0..f95ddca419 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n\n@@ -208,10 +227,13 @@ public class UserSyncService {\n                     umsEventGenerationIdsProvider.getEventGenerationIds(accountId, requestId) :\n                     null;\n \n-            LOGGER.debug(\"Starting RETRIEVE_{}_UMS_STATE for environments {} ...\", fullSync ? \"FULL\" : \"PARTIAL\", environmentCrns);\n+            LogEvent logUserSyncEvent = fullSync ? LogEvent.FULL_USER_SYNC : LogEvent.PARTIAL_USER_SYNC;\n+            LOGGER.info(\"Starting {} for environments {} with operationId {} ...\", logUserSyncEvent, environmentCrns, operationId);\n+            LogEvent logRetrieveUmsEvent = fullSync ? LogEvent.RETRIEVE_FULL_UMS_STATE : LogEvent.RETRIEVE_PARTIAL_UMS_STATE;\n+            LOGGER.debug(\"Starting {} for environments {} ...\", logRetrieveUmsEvent, environmentCrns);\n             Map<String, UmsUsersState> envToUmsStateMap = umsUsersStateProvider\n                     .getEnvToUmsUsersStateMap(accountId, actorCrn, environmentCrns, userCrnFilter, machineUserCrnFilter, requestId);\n-            LOGGER.debug(\"Finished RETRIEVE_{}_UMS_STATE.\", fullSync ? \"FULL\" : \"PARTIAL\");\n+            LOGGER.debug(\"Finished {}.\", logRetrieveUmsEvent);\n \n             List<SuccessDetails> success = new ArrayList<>();\n             List<FailureDetails> failure = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5OTEyNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8544#discussion_r453999127", "bodyText": "and here?", "author": "giladwolff", "createdAt": "2020-07-13T23:13:42Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -208,8 +208,10 @@ private void internalSynchronizeUsers(String operationId, String accountId, Stri\n                     umsEventGenerationIdsProvider.getEventGenerationIds(accountId, requestId) :\n                     null;\n \n+            LOGGER.debug(\"Starting RETRIEVE_{}_UMS_STATE for environments {} ...\", fullSync ? \"FULL\" : \"PARTIAL\", environmentCrns);\n             Map<String, UmsUsersState> envToUmsStateMap = umsUsersStateProvider\n                     .getEnvToUmsUsersStateMap(accountId, actorCrn, environmentCrns, userCrnFilter, machineUserCrnFilter, requestId);\n+            LOGGER.debug(\"Finished RETRIEVE_{}_UMS_STATE.\", fullSync ? \"FULL\" : \"PARTIAL\");", "originalCommit": "d791df24f2daf7eb978b554e6f37a987b7ad9fd5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\nindex be273835f0..f95ddca419 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n\n@@ -208,10 +227,13 @@ public class UserSyncService {\n                     umsEventGenerationIdsProvider.getEventGenerationIds(accountId, requestId) :\n                     null;\n \n-            LOGGER.debug(\"Starting RETRIEVE_{}_UMS_STATE for environments {} ...\", fullSync ? \"FULL\" : \"PARTIAL\", environmentCrns);\n+            LogEvent logUserSyncEvent = fullSync ? LogEvent.FULL_USER_SYNC : LogEvent.PARTIAL_USER_SYNC;\n+            LOGGER.info(\"Starting {} for environments {} with operationId {} ...\", logUserSyncEvent, environmentCrns, operationId);\n+            LogEvent logRetrieveUmsEvent = fullSync ? LogEvent.RETRIEVE_FULL_UMS_STATE : LogEvent.RETRIEVE_PARTIAL_UMS_STATE;\n+            LOGGER.debug(\"Starting {} for environments {} ...\", logRetrieveUmsEvent, environmentCrns);\n             Map<String, UmsUsersState> envToUmsStateMap = umsUsersStateProvider\n                     .getEnvToUmsUsersStateMap(accountId, actorCrn, environmentCrns, userCrnFilter, machineUserCrnFilter, requestId);\n-            LOGGER.debug(\"Finished RETRIEVE_{}_UMS_STATE.\", fullSync ? \"FULL\" : \"PARTIAL\");\n+            LOGGER.debug(\"Finished {}.\", logRetrieveUmsEvent);\n \n             List<SuccessDetails> success = new ArrayList<>();\n             List<FailureDetails> failure = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE2NTk3Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8544#discussion_r454165973", "bodyText": "this FULL vs PARTIAL is duplicated. maybe it should be move to a variable or a method", "author": "lacikaaa", "createdAt": "2020-07-14T07:42:58Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java", "diffHunk": "@@ -276,18 +278,26 @@ private SyncStatusDetail internalSynchronizeStack(Stack stack, UmsUsersState ums\n         Multimap<String, String> warnings = ArrayListMultimap.create();\n         try {\n             FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n+            LOGGER.debug(\"Starting RETRIEVE_{}_IPA_STATE ...\", fullSync ? \"FULL\" : \"PARTIAL\");\n             UsersState ipaUsersState = getIpaUserState(freeIpaClient, umsUsersState, fullSync);\n-            LOGGER.debug(\"IPA UsersState, found {} users and {} groups\", ipaUsersState.getUsers().size(), ipaUsersState.getGroups().size());\n+            LOGGER.debug(\"Finished RETRIEVE_{}_IPA_STATE, found {} users and {} groups.\", fullSync ? \"FULL\" : \"PARTIAL\",", "originalCommit": "d791df24f2daf7eb978b554e6f37a987b7ad9fd5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "chunk": "diff --git a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\nindex be273835f0..f95ddca419 100644\n--- a/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n+++ b/freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UserSyncService.java\n\n@@ -278,31 +300,34 @@ public class UserSyncService {\n         Multimap<String, String> warnings = ArrayListMultimap.create();\n         try {\n             FreeIpaClient freeIpaClient = freeIpaClientFactory.getFreeIpaClientForStack(stack);\n-            LOGGER.debug(\"Starting RETRIEVE_{}_IPA_STATE ...\", fullSync ? \"FULL\" : \"PARTIAL\");\n+            LogEvent logEvent = fullSync ? LogEvent.RETRIEVE_FULL_IPA_STATE : LogEvent.RETRIEVE_PARTIAL_IPA_STATE;\n+            LOGGER.debug(\"Starting {} ...\", logEvent);\n             UsersState ipaUsersState = getIpaUserState(freeIpaClient, umsUsersState, fullSync);\n-            LOGGER.debug(\"Finished RETRIEVE_{}_IPA_STATE, found {} users and {} groups.\", fullSync ? \"FULL\" : \"PARTIAL\",\n+            LOGGER.debug(\"Finished {}, found {} users and {} groups.\", logEvent,\n                     ipaUsersState.getUsers().size(), ipaUsersState.getGroups().size());\n \n-            LOGGER.debug(\"Starting CALCULATE_UMS_IPA_DIFFERENCE ...\");\n+            LOGGER.debug(\"Starting {} ...\", LogEvent.CALCULATE_UMS_IPA_DIFFERENCE);\n             UsersStateDifference usersStateDifference = UsersStateDifference.fromUmsAndIpaUsersStates(umsUsersState, ipaUsersState);\n-            LOGGER.debug(\"Finished CALCULATE_UMS_IPA_DIFFERENCE.\");\n+            LOGGER.debug(\"Finished {}.\", LogEvent.CALCULATE_UMS_IPA_DIFFERENCE);\n \n-            LOGGER.debug(\"Starting APPLY_TO_IPA ...\");\n+            LOGGER.debug(\"Starting {} ...\", LogEvent.APPLY_DIFFERENCE_TO_IPA);\n             applyStateDifferenceToIpa(stack.getEnvironmentCrn(), freeIpaClient, usersStateDifference, warnings::put);\n-            LOGGER.debug(\"Finished APPLY_TO_IPA.\");\n+            LOGGER.debug(\"Finished {}.\", LogEvent.APPLY_DIFFERENCE_TO_IPA);\n \n             if (!FreeIpaCapabilities.hasSetPasswordHashSupport(freeIpaClient.getConfig())) {\n                 LOGGER.debug(\"IPA doesn't have password hash support, no credentials sync required for env:{}\", environmentCrn);\n             } else {\n                 // Sync credentials for all users and not just diff. At present there is no way to identify that there is a change in password for a user\n-                LOGGER.debug(\"Starting SET_WORKLOAD_CREDENTIALS for {} users ...\", umsUsersState.getUsersWorkloadCredentialMap().size());\n+                LOGGER.debug(\"Starting {} for {} users ...\", LogEvent.SET_WORKLOAD_CREDENTIALS, umsUsersState.getUsersWorkloadCredentialMap().size());\n                 workloadCredentialService.setWorkloadCredentials(freeIpaClient, umsUsersState.getUsersWorkloadCredentialMap(), warnings::put);\n-                LOGGER.debug(\"Finished SET_WORKLOAD_CREDENTIALS.\");\n+                LOGGER.debug(\"Finished {}.\", LogEvent.SET_WORKLOAD_CREDENTIALS);\n             }\n \n             // TODO For now we only sync cloud ids during full sync. We should eventually allow more granular syncs (actor level and group level sync).\n             if (fullSync && entitlementService.cloudIdentityMappingEnabled(INTERNAL_ACTOR_CRN, stack.getAccountId())) {\n+                LOGGER.debug(\"Starting {} ...\", LogEvent.SYNC_CLOUD_IDENTITIES);\n                 cloudIdentitySyncService.syncCloudIdentites(stack, umsUsersState, warnings::put);\n+                LOGGER.debug(\"Finished {}.\", LogEvent.SYNC_CLOUD_IDENTITIES);\n             }\n \n             if (warnings.isEmpty()) {\n"}}, {"oid": "b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "url": "https://github.com/hortonworks/cloudbreak/commit/b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "message": "CDPCP-2598 Add logs around major user sync tasks\n\nAdd logs around the major user sync tasks so that we can\neasily determine duration of these tasks from the logs.", "committedDate": "2020-07-15T17:28:15Z", "type": "commit"}, {"oid": "b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "url": "https://github.com/hortonworks/cloudbreak/commit/b2b34640fb97d3b7fb29a1ccb885cb4d1af99d77", "message": "CDPCP-2598 Add logs around major user sync tasks\n\nAdd logs around the major user sync tasks so that we can\neasily determine duration of these tasks from the logs.", "committedDate": "2020-07-15T17:28:15Z", "type": "forcePushed"}]}