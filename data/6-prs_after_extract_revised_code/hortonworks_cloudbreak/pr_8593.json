{"pr_number": 8593, "pr_title": "Log collection api for datahub and datalake", "pr_createdAt": "2020-07-20T10:56:49Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8593", "timeline": [{"oid": "585e637c27b8963389937c4d06cef75370b8b966", "url": "https://github.com/hortonworks/cloudbreak/commit/585e637c27b8963389937c4d06cef75370b8b966", "message": "CB-8045. Resolve references in VM log path fields", "committedDate": "2020-07-20T12:06:57Z", "type": "forcePushed"}, {"oid": "c702d45dc42d8599aa7f6a9f8b3aebf6f778e796", "url": "https://github.com/hortonworks/cloudbreak/commit/c702d45dc42d8599aa7f6a9f8b3aebf6f778e796", "message": "CB-8045. Resolve references in VM log path fields", "committedDate": "2020-07-20T13:01:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTA4NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8593#discussion_r457421084", "bodyText": "what happens if you use this on distrox api? i think it will fail because it check for datalake", "author": "horadla23", "createdAt": "2020-07-20T14:10:03Z", "path": "core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/diagnostics/model/DiagnosticsCollectionRequest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.sequenceiq.cloudbreak.api.endpoint.v4.diagnostics.model;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.sequenceiq.authorization.annotation.ResourceObjectField;\n+import com.sequenceiq.authorization.resource.AuthorizationResourceAction;\n+import com.sequenceiq.authorization.resource.AuthorizationVariableType;\n+import com.sequenceiq.cloudbreak.doc.ModelDescriptions;\n+import com.sequenceiq.common.api.diagnostics.BaseDiagnosticsCollectionRequest;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+@ApiModel(\"DiagnosticsCollectionRequest\")\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class DiagnosticsCollectionRequest extends BaseDiagnosticsCollectionRequest {\n+\n+    @NotNull\n+    @ApiModelProperty(ModelDescriptions.StackModelDescription.CRN)\n+    @ResourceObjectField(action = AuthorizationResourceAction.DATALAKE_READ, variableType = AuthorizationVariableType.CRN)", "originalCommit": "c702d45dc42d8599aa7f6a9f8b3aebf6f778e796", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1NTI5MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8593#discussion_r457455291", "bodyText": "Yea I think it would fail. I don't think it's a good idea to check datahub operations with datalake resource type", "author": "attilapalfi92", "createdAt": "2020-07-20T14:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1NzM0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8593#discussion_r457457348", "bodyText": "ohh sry its an old comment, not relevant, browser kept it", "author": "horadla23", "createdAt": "2020-07-20T14:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "fb66d9d29bd06bf4d0d62edd62104be80bb46b5c", "chunk": "diff --git a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/diagnostics/model/DiagnosticsCollectionRequest.java b/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/diagnostics/model/DiagnosticsCollectionRequest.java\nindex ba1aa361e0..c7a355de6d 100644\n--- a/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/diagnostics/model/DiagnosticsCollectionRequest.java\n+++ b/core-api/src/main/java/com/sequenceiq/cloudbreak/api/endpoint/v4/diagnostics/model/DiagnosticsCollectionRequest.java\n\n@@ -13,14 +13,14 @@ import com.sequenceiq.common.api.diagnostics.BaseDiagnosticsCollectionRequest;\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n-@ApiModel(\"DiagnosticsCollectionRequest\")\n+@ApiModel(\"DiagnosticsCollectionV4Request\")\n @JsonIgnoreProperties(ignoreUnknown = true)\n @JsonInclude(JsonInclude.Include.NON_NULL)\n public class DiagnosticsCollectionRequest extends BaseDiagnosticsCollectionRequest {\n \n     @NotNull\n     @ApiModelProperty(ModelDescriptions.StackModelDescription.CRN)\n-    @ResourceObjectField(action = AuthorizationResourceAction.DATALAKE_READ, variableType = AuthorizationVariableType.CRN)\n+    @ResourceObjectField(action = AuthorizationResourceAction.ENVIRONMENT_READ, variableType = AuthorizationVariableType.CRN)\n     private String stackCrn;\n \n     public String getStackCrn() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0OTEwOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8593#discussion_r457449108", "bodyText": "as discussed, pls authorize this as it is done in related controller of datalake service", "author": "horadla23", "createdAt": "2020-07-20T14:40:04Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/DiagnosticsV4Controller.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.sequenceiq.cloudbreak.controller.v4;\n+\n+import javax.inject.Inject;\n+import javax.validation.Valid;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Controller;\n+\n+import com.sequenceiq.authorization.annotation.DisableCheckPermissions;\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.diagnostics.DiagnosticsV4Endpoint;\n+import com.sequenceiq.cloudbreak.api.endpoint.v4.diagnostics.model.DiagnosticsCollectionRequest;\n+import com.sequenceiq.cloudbreak.core.flow2.service.DiagnosticsTriggerService;\n+import com.sequenceiq.cloudbreak.service.CloudbreakRestRequestThreadLocalService;\n+import com.sequenceiq.cloudbreak.telemetry.VmLogsService;\n+import com.sequenceiq.cloudbreak.telemetry.converter.VmLogsToVmLogsResponseConverter;\n+import com.sequenceiq.common.api.telemetry.response.VmLogsResponse;\n+\n+@Controller\n+@DisableCheckPermissions\n+public class DiagnosticsV4Controller implements DiagnosticsV4Endpoint {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DiagnosticsV4Controller.class);\n+\n+    @Inject\n+    private CloudbreakRestRequestThreadLocalService crnService;\n+\n+    @Inject\n+    private DiagnosticsTriggerService diagnosticsTriggerService;\n+\n+    @Inject\n+    private VmLogsService vmLogsService;\n+\n+    @Inject\n+    private VmLogsToVmLogsResponseConverter vmlogsConverter;\n+\n+    @Override\n+    public void collectDiagnostics(@Valid DiagnosticsCollectionRequest request) {", "originalCommit": "c702d45dc42d8599aa7f6a9f8b3aebf6f778e796", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f868441c9726e9e8356d4215716478bf32d8f5c", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/DiagnosticsV4Controller.java b/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/DiagnosticsV4Controller.java\nindex 9b528120c7..b07b1743ad 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/DiagnosticsV4Controller.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/controller/v4/DiagnosticsV4Controller.java\n\n@@ -7,7 +7,10 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Controller;\n \n+import com.sequenceiq.authorization.annotation.AuthorizationResource;\n+import com.sequenceiq.authorization.annotation.CheckPermissionByResourceObject;\n import com.sequenceiq.authorization.annotation.DisableCheckPermissions;\n+import com.sequenceiq.authorization.annotation.ResourceObject;\n import com.sequenceiq.cloudbreak.api.endpoint.v4.diagnostics.DiagnosticsV4Endpoint;\n import com.sequenceiq.cloudbreak.api.endpoint.v4.diagnostics.model.DiagnosticsCollectionRequest;\n import com.sequenceiq.cloudbreak.core.flow2.service.DiagnosticsTriggerService;\n"}}, {"oid": "6f868441c9726e9e8356d4215716478bf32d8f5c", "url": "https://github.com/hortonworks/cloudbreak/commit/6f868441c9726e9e8356d4215716478bf32d8f5c", "message": "CB-7979 - created diagnostics api for datalake", "committedDate": "2020-07-20T15:00:14Z", "type": "forcePushed"}, {"oid": "cb0864af6042983259a05c3b7b6cd285cb13c3f1", "url": "https://github.com/hortonworks/cloudbreak/commit/cb0864af6042983259a05c3b7b6cd285cb13c3f1", "message": "CB-7979 - created diagnostics api for datalake", "committedDate": "2020-07-21T09:02:07Z", "type": "forcePushed"}, {"oid": "fb66d9d29bd06bf4d0d62edd62104be80bb46b5c", "url": "https://github.com/hortonworks/cloudbreak/commit/fb66d9d29bd06bf4d0d62edd62104be80bb46b5c", "message": "CB-7978 - Added diagnostics collection flow for CM in cloudbreak. Some code that is shared with FreeIpa is extracted to common modules. Added diagnostics collection endpoints to both Cloudbreak and DistroX APIs. The endpoint in Cloudbreak will be used by Datalake.", "committedDate": "2020-07-21T12:16:21Z", "type": "commit"}, {"oid": "b08256612e57b18194a410c3dfc5dfe6adaac340", "url": "https://github.com/hortonworks/cloudbreak/commit/b08256612e57b18194a410c3dfc5dfe6adaac340", "message": "CB-8032 - added UI notifications to cloudbreak's diagnostics flow steps", "committedDate": "2020-07-21T12:16:21Z", "type": "commit"}, {"oid": "492fe29d9e4aca4686c19f45445cddef29e68edd", "url": "https://github.com/hortonworks/cloudbreak/commit/492fe29d9e4aca4686c19f45445cddef29e68edd", "message": "CB-8045 - Resolve references in VM log path fields. For freeipa static log paths were used, but for CM, references have to resolved from the vm-logs.json.\n\nSigned-off-by: attilapalfi92 <apalfi@cloudera.com>", "committedDate": "2020-07-21T12:16:21Z", "type": "commit"}, {"oid": "cda7bb743bd672a78dbb34d91d77eefd2d11bcd8", "url": "https://github.com/hortonworks/cloudbreak/commit/cda7bb743bd672a78dbb34d91d77eefd2d11bcd8", "message": "CB-7979 - created diagnostics api for datalake", "committedDate": "2020-07-21T12:16:21Z", "type": "commit"}, {"oid": "cda7bb743bd672a78dbb34d91d77eefd2d11bcd8", "url": "https://github.com/hortonworks/cloudbreak/commit/cda7bb743bd672a78dbb34d91d77eefd2d11bcd8", "message": "CB-7979 - created diagnostics api for datalake", "committedDate": "2020-07-21T12:16:21Z", "type": "forcePushed"}]}