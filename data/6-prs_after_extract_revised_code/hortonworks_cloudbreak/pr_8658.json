{"pr_number": 8658, "pr_title": "CB-7729 Retrieve errors from Data Lake Database backup/restore failures", "pr_createdAt": "2020-07-28T14:19:36Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8658", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1ODAzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8658#discussion_r461658037", "bodyText": "Perhaps worth extracting as a (private) constant. \ud83d\ude04", "author": "lajosrodek", "createdAt": "2020-07-28T15:08:43Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/BackupRestoreStatusService.java", "diffHunk": "@@ -61,7 +61,15 @@ public void restoreDatabaseFinished(long stackId) {\n \n     public void handleDatabaseRestoreFailure(long stackId, String errorReason, DetailedStackStatus detailedStatus) {\n         clusterService.updateClusterStatusByStackId(stackId, Status.RESTORE_FAILED, errorReason);\n-        stackUpdater.updateStackStatus(stackId, detailedStatus);\n+        stackUpdater.updateStackStatus(stackId, detailedStatus, extractSaltErrorIfAvailable(errorReason));\n         flowMessageService.fireEventAndLog(stackId, Status.UPDATE_FAILED.name(), DATALAKE_DATABASE_RESTORE_FAILED, errorReason);\n     }\n+\n+    private String extractSaltErrorIfAvailable(String errorReason) {\n+        String errors = \"Error(s): \";", "originalCommit": "17dd626c6d4cbc749ef7f1e8b91a1585f3ad8d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3MTQ3Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/8658#discussion_r461671476", "bodyText": "Curse you, you found the one thing where I was like, \"Should I make this a constant? Eh, it's not a big deal.\" \ud83d\ude06\nI'll fix it in the next patch, but waiting to see if there are any other comments first.", "author": "hreeve-cloudera", "createdAt": "2020-07-28T15:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1ODAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0NTU2MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8658#discussion_r462345561", "bodyText": "Sure, definitely not a burning issue. \ud83d\ude1b", "author": "lajosrodek", "createdAt": "2020-07-29T14:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1ODAzNw=="}], "type": "inlineReview", "revised_code": {"commit": "6c9f755615191990a7fcd5532a78fda1290953fb", "chunk": "diff --git a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/BackupRestoreStatusService.java b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/BackupRestoreStatusService.java\nindex 3c9f1adfa1..e53e3e6eea 100644\n--- a/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/BackupRestoreStatusService.java\n+++ b/core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/cluster/datalake/dr/BackupRestoreStatusService.java\n\n@@ -66,9 +68,8 @@ public class BackupRestoreStatusService {\n     }\n \n     private String extractSaltErrorIfAvailable(String errorReason) {\n-        String errors = \"Error(s): \";\n-        if (errorReason.contains(errors)) {\n-            return errorReason.substring(errorReason.indexOf(errors) + errors.length()).replaceAll(\"\\n\", \"; \");\n+        if (errorReason.contains(ERRORS_STRING)) {\n+            return errorReason.substring(errorReason.indexOf(ERRORS_STRING) + ERRORS_STRING.length()).replaceAll(\"\\n\", \"; \");\n         }\n         return errorReason;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MDM3NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8658#discussion_r461680375", "bodyText": "Do we know when the error is available in salt/errormessages.yaml and salt/stderrcommands.yaml files?", "author": "kkalvagadda1", "createdAt": "2020-07-28T15:39:49Z", "path": "orchestrator-salt/src/main/java/com/sequenceiq/cloudbreak/orchestrator/salt/SaltErrorResolver.java", "diffHunk": "@@ -49,12 +55,15 @@ public void init() {\n             String file = FileReaderUtils.readFileFromClasspath(\"salt/errormessages.yaml\");\n             errorMessages = new Yaml().load(file);\n             LOGGER.info(\"Error messages for salt: {}\", errorMessages);\n+            file = FileReaderUtils.readFileFromClasspath(\"salt/stderrcommands.yaml\");\n+            commandsWithStderrFailures = new Yaml().load(file);\n+            LOGGER.info(\"Salt commands that will pull the failure from stderr: {}\", commandsWithStderrFailures);", "originalCommit": "17dd626c6d4cbc749ef7f1e8b91a1585f3ad8d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczODQyOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8658#discussion_r461738429", "bodyText": "I'm not sure I understand the question. In errormessages.yaml, the code is basically replacing any errors run by the listed processes with the error in the YAML file. In stderrcommands.yaml we're just listing some processes, and the error comes from the stderr output. If the stderr output doesn't exist, then it defaults to a message that just says, \"Failed to execute: \"", "author": "hreeve-cloudera", "createdAt": "2020-07-28T17:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MDM3NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "6c9f755615191990a7fcd5532a78fda1290953fb", "url": "https://github.com/hortonworks/cloudbreak/commit/6c9f755615191990a7fcd5532a78fda1290953fb", "message": "CB-7729 Retrieve errors from Data Lake Database backup/restore failures\n\nPulls the status reason for failed database backup/restore operations from the\nsalt stderr ouput, instead of from the command comment. The is achieved by\nadding a new YAML file used by SaltErrorResolver, stderrcommands.yaml. When a\ncommand listed in that file is run, the stderr output will be used as the\nresolved error message. The getErrorResultSummary() method in RunnerInfo now\nreturns the summary in map form for simpler parsing in SaltErrorResolver.\n\nTested with unit tests and by testing in my local cloudbreak dev environment.", "committedDate": "2020-07-28T15:25:03Z", "type": "forcePushed"}, {"oid": "0d4b4c6a18fa830ce9c32b109b8960308c36b261", "url": "https://github.com/hortonworks/cloudbreak/commit/0d4b4c6a18fa830ce9c32b109b8960308c36b261", "message": "CB-7729 Retrieve errors from Data Lake Database backup/restore failures\n\nPulls the status reason for failed database backup/restore operations from the\nsalt stderr ouput, instead of from the command comment. The is achieved by\nadding a new YAML file used by SaltErrorResolver, stderrcommands.yaml. When a\ncommand listed in that file is run, the stderr output will be used as the\nresolved error message. The getErrorResultSummary() method in RunnerInfo now\nreturns the summary in map form for simpler parsing in SaltErrorResolver.\n\nTested with unit tests and by testing in my local cloudbreak dev environment.", "committedDate": "2020-08-03T18:13:40Z", "type": "commit"}, {"oid": "0d4b4c6a18fa830ce9c32b109b8960308c36b261", "url": "https://github.com/hortonworks/cloudbreak/commit/0d4b4c6a18fa830ce9c32b109b8960308c36b261", "message": "CB-7729 Retrieve errors from Data Lake Database backup/restore failures\n\nPulls the status reason for failed database backup/restore operations from the\nsalt stderr ouput, instead of from the command comment. The is achieved by\nadding a new YAML file used by SaltErrorResolver, stderrcommands.yaml. When a\ncommand listed in that file is run, the stderr output will be used as the\nresolved error message. The getErrorResultSummary() method in RunnerInfo now\nreturns the summary in map form for simpler parsing in SaltErrorResolver.\n\nTested with unit tests and by testing in my local cloudbreak dev environment.", "committedDate": "2020-08-03T18:13:40Z", "type": "forcePushed"}]}