{"pr_number": 9042, "pr_title": "CB-8809 verify that AWS credentials' role is assumable without external Id", "pr_createdAt": "2020-09-18T13:07:01Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9042", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1OTg2MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9042#discussion_r491159860", "bodyText": "I am not sure but should we somehow show what is the external id which is missing ? I guess not but lets check", "author": "doktoric", "createdAt": "2020-09-18T19:53:09Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java", "diffHunk": "@@ -168,6 +184,29 @@ private CloudCredentialStatus verifyAccessKeySecretKeyIsAssumable(CloudCredentia\n         return credentialStatus;\n     }\n \n+    private void checkRoleIsAssumableWithoutExternalId(CredentialVerificationContext credentialVerificationContext, AwsCredentialView awsCredential) {\n+        if (credentialVerificationContext.getCreationVerification()) {\n+            String roleArn = awsCredential.getRoleArn();\n+            try {\n+                credentialClient.retrieveSessionCredentialsWithoutExternalId(awsCredential);\n+                String message = String.format(\"CDP Control Pane is able to perform 'sts:AssumeRole' on '%s' role without external id. \" +", "originalCommit": "09f62f1e1e1bebb3e64ebec7e0a88762e547e852", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "chunk": "diff --git a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\nindex 9da9f1ef48..8b74548e17 100644\n--- a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\n+++ b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\n\n@@ -194,7 +194,7 @@ public class AwsCredentialConnector implements CredentialConnector {\n                         \"Please update the role's trust relationship to have a condition on external id \" +\n                         \"or re-create the role with external id configured in the create role wizard.\", roleArn);\n                 LOGGER.warn(message);\n-                throw new AwsPossibleConfusedDeputyException(message);\n+                throw new AwsConfusedDeputyException(message);\n             } catch (AmazonClientException ae) {\n                 if (ae.getMessage().contains(ROLE_IS_NOT_ASSUMABLE_ERROR_MESSAGE_INDICATOR)) {\n                     String msg = String.format(\"Consider the specified role as secured. \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MDIzNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9042#discussion_r491160234", "bodyText": "I think here the problem is not the missing external id right ?", "author": "doktoric", "createdAt": "2020-09-18T19:54:08Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java", "diffHunk": "@@ -168,6 +184,29 @@ private CloudCredentialStatus verifyAccessKeySecretKeyIsAssumable(CloudCredentia\n         return credentialStatus;\n     }\n \n+    private void checkRoleIsAssumableWithoutExternalId(CredentialVerificationContext credentialVerificationContext, AwsCredentialView awsCredential) {\n+        if (credentialVerificationContext.getCreationVerification()) {\n+            String roleArn = awsCredential.getRoleArn();\n+            try {\n+                credentialClient.retrieveSessionCredentialsWithoutExternalId(awsCredential);\n+                String message = String.format(\"CDP Control Pane is able to perform 'sts:AssumeRole' on '%s' role without external id. \" +\n+                        \"The role is vulnerable and could be exploited by confused deputy attacks. \" +\n+                        \"Please update the role's trust relationship to have a condition on external id \" +\n+                        \"or re-create the role with external id configured in the create role wizard.\", roleArn);\n+                LOGGER.warn(message);\n+                throw new AwsPossibleConfusedDeputyException(message);\n+            } catch (AmazonClientException ae) {\n+                if (ae.getMessage().contains(ROLE_IS_NOT_ASSUMABLE_ERROR_MESSAGE_INDICATOR)) {\n+                    String msg = String.format(\"Consider the specified role as secured. \" +\n+                            \"CDP Control Pane is not authorized to perform sts:AssumeRole on '%s' role without external Id.\", roleArn);", "originalCommit": "09f62f1e1e1bebb3e64ebec7e0a88762e547e852", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1ODQxMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9042#discussion_r491858413", "bodyText": "That's a happy path and only a log is called to leave a sign about it.", "author": "biharitomi", "createdAt": "2020-09-21T08:08:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MDIzNA=="}], "type": "inlineReview", "revised_code": {"commit": "571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "chunk": "diff --git a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\nindex 9da9f1ef48..8b74548e17 100644\n--- a/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\n+++ b/cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsCredentialConnector.java\n\n@@ -194,7 +194,7 @@ public class AwsCredentialConnector implements CredentialConnector {\n                         \"Please update the role's trust relationship to have a condition on external id \" +\n                         \"or re-create the role with external id configured in the create role wizard.\", roleArn);\n                 LOGGER.warn(message);\n-                throw new AwsPossibleConfusedDeputyException(message);\n+                throw new AwsConfusedDeputyException(message);\n             } catch (AmazonClientException ae) {\n                 if (ae.getMessage().contains(ROLE_IS_NOT_ASSUMABLE_ERROR_MESSAGE_INDICATOR)) {\n                     String msg = String.format(\"Consider the specified role as secured. \" +\n"}}, {"oid": "571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "url": "https://github.com/hortonworks/cloudbreak/commit/571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "message": "CB-8809 verify AWS credentials' role is assumable without external Id", "committedDate": "2020-09-21T08:18:18Z", "type": "commit"}, {"oid": "571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "url": "https://github.com/hortonworks/cloudbreak/commit/571bee7a6a537c549c1b5d6ddd1abc41b6d52db3", "message": "CB-8809 verify AWS credentials' role is assumable without external Id", "committedDate": "2020-09-21T08:18:18Z", "type": "forcePushed"}]}