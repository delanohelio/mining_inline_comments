{"pr_number": 7307, "pr_title": "CB-5298 \u2013 Azure environment creation: result of subnet fetch not fully checked", "pr_createdAt": "2020-02-17T16:25:22Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7307", "timeline": [{"oid": "c9b7c1fcfda3cb820fe9dde5ed12217ad24dc6f0", "url": "https://github.com/hortonworks/cloudbreak/commit/c9b7c1fcfda3cb820fe9dde5ed12217ad24dc6f0", "message": "asd", "committedDate": "2020-02-17T16:26:12Z", "type": "forcePushed"}, {"oid": "a158944f4af0a0f0b4c4e9e671c8c7054b6ac4e6", "url": "https://github.com/hortonworks/cloudbreak/commit/a158944f4af0a0f0b4c4e9e671c8c7054b6ac4e6", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-17T16:28:05Z", "type": "forcePushed"}, {"oid": "63de530040779f42e688a6589643a6e3eb1f1a34", "url": "https://github.com/hortonworks/cloudbreak/commit/63de530040779f42e688a6589643a6e3eb1f1a34", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-17T19:09:59Z", "type": "forcePushed"}, {"oid": "720bdd384241f3aaa84e6f70ebb27e6af5090e42", "url": "https://github.com/hortonworks/cloudbreak/commit/720bdd384241f3aaa84e6f70ebb27e6af5090e42", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-17T21:38:49Z", "type": "forcePushed"}, {"oid": "0c8e5d335a8f948336ac537e112c0c107a93a718", "url": "https://github.com/hortonworks/cloudbreak/commit/0c8e5d335a8f948336ac537e112c0c107a93a718", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-18T13:29:17Z", "type": "forcePushed"}, {"oid": "7bd29eadb1f7bee77daa4006fca3775b3755b0eb", "url": "https://github.com/hortonworks/cloudbreak/commit/7bd29eadb1f7bee77daa4006fca3775b3755b0eb", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-18T13:33:52Z", "type": "forcePushed"}, {"oid": "1bca5fb01c79ed7bb65b8449737a59d74a5d0e67", "url": "https://github.com/hortonworks/cloudbreak/commit/1bca5fb01c79ed7bb65b8449737a59d74a5d0e67", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-18T13:35:04Z", "type": "forcePushed"}, {"oid": "5dc8ac7c2f9a18b06f8342661482f56bd95ac0b2", "url": "https://github.com/hortonworks/cloudbreak/commit/5dc8ac7c2f9a18b06f8342661482f56bd95ac0b2", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-18T13:36:53Z", "type": "forcePushed"}, {"oid": "b2e69bf074a9bd60e4862ed1785f74225b031351", "url": "https://github.com/hortonworks/cloudbreak/commit/b2e69bf074a9bd60e4862ed1785f74225b031351", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-18T13:38:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0ODEwMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380948101", "bodyText": "is it used somewhere ?", "author": "doktoric", "createdAt": "2020-02-18T21:33:59Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/repository/EnvironmentRepository.java", "diffHunk": "@@ -59,4 +59,9 @@\n     @CheckPermission(action = ResourceAction.READ)\n     @Query(\"SELECT e.resourceCrn FROM Environment e WHERE e.name = :name AND e.accountId = :accountId\")\n     Optional<String> findResourceCrnByNameAndAccountId(@Param(\"name\") String name, @Param(\"accountId\") String accountId);\n+\n+    @CheckPermission(action = ResourceAction.READ)\n+    @Query(\"SELECT e FROM Environment e WHERE e.network.id = :networkId\")\n+    Optional<Environment> findByNetworkId(@Param(\"networkId\") Long networkId);", "originalCommit": "b2e69bf074a9bd60e4862ed1785f74225b031351", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2NDM3NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380964374", "bodyText": "Most likely not, seems like a leftover method from the beginning. Going to remove it also, thanks", "author": "gregito", "createdAt": "2020-02-18T22:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0ODEwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "b610b779feb0c72db948a242c5fb941d181ae2f3", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/repository/EnvironmentRepository.java b/environment/src/main/java/com/sequenceiq/environment/environment/repository/EnvironmentRepository.java\nindex 26c441eb93..8bc582776b 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/repository/EnvironmentRepository.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/repository/EnvironmentRepository.java\n\n@@ -60,8 +60,4 @@ public interface EnvironmentRepository extends BaseJpaRepository<Environment, Lo\n     @Query(\"SELECT e.resourceCrn FROM Environment e WHERE e.name = :name AND e.accountId = :accountId\")\n     Optional<String> findResourceCrnByNameAndAccountId(@Param(\"name\") String name, @Param(\"accountId\") String accountId);\n \n-    @CheckPermission(action = ResourceAction.READ)\n-    @Query(\"SELECT e FROM Environment e WHERE e.network.id = :networkId\")\n-    Optional<Environment> findByNetworkId(@Param(\"networkId\") Long networkId);\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0ODc1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380948753", "bodyText": "do not use the word vpc in case of azure", "author": "doktoric", "createdAt": "2020-02-18T21:35:21Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AzureEnvironmentNetworkValidator.java", "diffHunk": "@@ -91,8 +88,43 @@ private void checkExistingNetworkParamsProvidedWhenSubnetsPresent(NetworkDto net\n         }\n     }\n \n+    private void checkNetworkIdIsSpecifiedWhenSubnetIdsArePresent(ValidationResultBuilder resultBuilder,\n+            AzureParams azureParams, NetworkDto networkDto) {\n+        if (StringUtils.isEmpty(azureParams.getNetworkId()) && CollectionUtils.isNotEmpty(networkDto.getSubnetIds())) {\n+            resultBuilder.error(\"If subnetIds are specified, then networkId must be specified too.\");\n+        }\n+    }\n+\n+    private void checkSubnetsProvidedWhenExistingNetwork(ValidationResultBuilder resultBuilder,\n+            AzureParams azureParams, Map<String, CloudSubnet> subnetMetas) {\n+        if (StringUtils.isNotEmpty(azureParams.getNetworkId()) && StringUtils.isNotEmpty(azureParams.getResourceGroupName())\n+                && MapUtils.isEmpty(subnetMetas)) {\n+            String message = String.format(\"If networkId (%s) and resourceGroupName (%s) are specified then subnet ids must be specified as well.\",\n+                    azureParams.getNetworkId(), azureParams.getResourceGroupName());\n+            LOGGER.info(message);\n+            resultBuilder.error(message);\n+        }\n+    }\n+\n+    private void checkSubnetIdsAreTheSameAsTheSubnetMetasFromProvider(EnvironmentDto environmentDto, NetworkDto networkDto,\n+            ValidationResultBuilder resultBuilder) {\n+        if (environmentDto == null || networkDto == null) {\n+            LOGGER.warn(\"EnvironmentDto or NetworkDto. Neither them can be null!\");\n+            resultBuilder.error(\"Internal validation error\");\n+            return;\n+        }\n+        Map<String, CloudSubnet> cloudmetadata = cloudNetworkService.retrieveSubnetMetadata(environmentDto, networkDto);\n+        if (networkDto.getSubnetMetas().size() != cloudmetadata.size()) {\n+            String message = String.format(\"Subnets of the environment (%s) are not found in the vpc (%s).\",", "originalCommit": "b2e69bf074a9bd60e4862ed1785f74225b031351", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk3MDA3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380970078", "bodyText": "vnet would be more suitable in this context?", "author": "gregito", "createdAt": "2020-02-18T22:19:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0ODc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NjA0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r381196048", "bodyText": "networkid is fine", "author": "doktoric", "createdAt": "2020-02-19T10:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0ODc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b610b779feb0c72db948a242c5fb941d181ae2f3", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AzureEnvironmentNetworkValidator.java b/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AzureEnvironmentNetworkValidator.java\nindex 23a8a71354..e32f523b94 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AzureEnvironmentNetworkValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/validation/network/AzureEnvironmentNetworkValidator.java\n\n@@ -115,8 +115,8 @@ public class AzureEnvironmentNetworkValidator implements EnvironmentNetworkValid\n         }\n         Map<String, CloudSubnet> cloudmetadata = cloudNetworkService.retrieveSubnetMetadata(environmentDto, networkDto);\n         if (networkDto.getSubnetMetas().size() != cloudmetadata.size()) {\n-            String message = String.format(\"Subnets of the environment (%s) are not found in the vpc (%s).\",\n-                    environmentDto.getName(), String.join(\", \", getSubnetDiff(networkDto.getSubnetIds(), cloudmetadata.keySet())));\n+            String message = String.format(\"The following network id(s) couldn't be found on provider side: %s\",\n+                    String.join(\", \", getSubnetDiff(networkDto.getSubnetIds(), cloudmetadata.keySet())));\n             LOGGER.info(message);\n             resultBuilder.error(message);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0OTA1NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380949054", "bodyText": "I dont think we need '...' in LOGGER", "author": "doktoric", "createdAt": "2020-02-18T21:36:01Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java", "diffHunk": "@@ -88,14 +88,20 @@ private void evaluateProviderNetworkRelation(boolean networkParamExists, String\n         return Optional.ofNullable(o);\n     }\n \n-    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder) {\n-        if (networkDto != null && Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n-            EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n-            if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n-                resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+    private void validateNetwork(NetworkDto networkDto, String cloudPlatform, ValidationResultBuilder resultBuilder, EnvironmentDto environmentDto) {\n+        if (networkDto != null) {\n+            if (Strings.isNullOrEmpty(networkDto.getNetworkCidr())) {\n+                if (networkDto.getNetworkCidr() != null && isInvalidNetworkMask(networkDto.getNetworkCidr())) {\n+                    resultBuilder.error(String.format(\"The netmask must be /%s.\", EXPECTED_NETWORK_MASK));\n+                }\n+            }\n+            if (resultBuilder.build().hasError()) {\n+                return;\n             }\n+            EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n             if (environmentNetworkValidator != null) {\n-                environmentNetworkValidator.validateDuringFlow(networkDto, resultBuilder);\n+                LOGGER.debug(\"Going to validate environment ({}) network in flow...\", environmentDto.getName());", "originalCommit": "b2e69bf074a9bd60e4862ed1785f74225b031351", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2ODYwNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7307#discussion_r380968607", "bodyText": "Hehe okey. It\u2019s just a \u201cmy kind of\u201d informal stuff, usually I add this triple dot in the logs where something is about to happen which could take a while.\nBut hae it y'r way :)", "author": "gregito", "createdAt": "2020-02-18T22:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0OTA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "b610b779feb0c72db948a242c5fb941d181ae2f3", "chunk": "diff --git a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\nindex f2283289e8..f27a369a65 100644\n--- a/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\n+++ b/environment/src/main/java/com/sequenceiq/environment/environment/validation/validators/EnvironmentNetworkProviderValidator.java\n\n@@ -100,7 +100,7 @@ public class EnvironmentNetworkProviderValidator {\n             }\n             EnvironmentNetworkValidator environmentNetworkValidator = environmentNetworkValidatorsByCloudPlatform.get(valueOf(cloudPlatform));\n             if (environmentNetworkValidator != null) {\n-                LOGGER.debug(\"Going to validate environment ({}) network in flow...\", environmentDto.getName());\n+                LOGGER.debug(\"Going to validate environment ({}) network in flow\", environmentDto.getName());\n                 environmentNetworkValidator.validateDuringFlow(environmentDto, networkDto, resultBuilder);\n             } else {\n                 resultBuilder.error(String.format(\"Environment specific network is not supported for cloud platform: '%s'!\", cloudPlatform));\n"}}, {"oid": "b610b779feb0c72db948a242c5fb941d181ae2f3", "url": "https://github.com/hortonworks/cloudbreak/commit/b610b779feb0c72db948a242c5fb941d181ae2f3", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-19T10:19:44Z", "type": "forcePushed"}, {"oid": "cad3b4cfba9b854e36ed58295b36737f5e2fd18d", "url": "https://github.com/hortonworks/cloudbreak/commit/cad3b4cfba9b854e36ed58295b36737f5e2fd18d", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-19T11:30:15Z", "type": "forcePushed"}, {"oid": "f81681f4cfe7ff4552df5817737fc1f48ada918b", "url": "https://github.com/hortonworks/cloudbreak/commit/f81681f4cfe7ff4552df5817737fc1f48ada918b", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-21T16:35:13Z", "type": "commit"}, {"oid": "f81681f4cfe7ff4552df5817737fc1f48ada918b", "url": "https://github.com/hortonworks/cloudbreak/commit/f81681f4cfe7ff4552df5817737fc1f48ada918b", "message": "CB-5298 - Azure environment creation: result of subnet fetch not fully checked", "committedDate": "2020-02-21T16:35:13Z", "type": "forcePushed"}]}