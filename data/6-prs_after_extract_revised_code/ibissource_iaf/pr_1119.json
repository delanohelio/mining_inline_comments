{"pr_number": 1119, "pr_title": "Fix #1070 improve file system rename", "pr_createdAt": "2020-10-02T10:39:18Z", "pr_url": "https://github.com/ibissource/iaf/pull/1119", "timeline": [{"oid": "77ec03c022648cb731ab89bc1e665a2ae37f619e", "url": "https://github.com/ibissource/iaf/commit/77ec03c022648cb731ab89bc1e665a2ae37f619e", "message": "First commit", "committedDate": "2020-09-30T12:53:54Z", "type": "commit"}, {"oid": "0477086cc00fdc467c158938b7366de4f9440e09", "url": "https://github.com/ibissource/iaf/commit/0477086cc00fdc467c158938b7366de4f9440e09", "message": "Merge branch 'master' into fix_#1070_improve_FileSystem_rename", "committedDate": "2020-10-01T14:47:42Z", "type": "commit"}, {"oid": "866572e8205a84ed7b8afc3b40247f378c205666", "url": "https://github.com/ibissource/iaf/commit/866572e8205a84ed7b8afc3b40247f378c205666", "message": "second commit", "committedDate": "2020-10-02T06:54:36Z", "type": "commit"}, {"oid": "16ee44c1ee9420f6b56b5a0eb7407b6b203aab7f", "url": "https://github.com/ibissource/iaf/commit/16ee44c1ee9420f6b56b5a0eb7407b6b203aab7f", "message": "Simplify filesystems", "committedDate": "2020-10-02T10:38:50Z", "type": "commit"}, {"oid": "9b0bb0b00d3cf240c74575a0a9873194a6e38f05", "url": "https://github.com/ibissource/iaf/commit/9b0bb0b00d3cf240c74575a0a9873194a6e38f05", "message": "Add comments", "committedDate": "2020-10-02T11:57:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNDYwMg==", "url": "https://github.com/ibissource/iaf/pull/1119#discussion_r498824602", "bodyText": "of contains  \\\\", "author": "nielsm5", "createdAt": "2020-10-02T13:34:30Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -380,34 +384,28 @@ protected void finalize() throws Throwable {\n \t\t\t\tfileSystem.removeFolder(folder);\n \t\t\t\treturn folder;\n \t\t\t} else if (action.equalsIgnoreCase(ACTION_RENAME)) {\n-\t\t\t\tF file=getFile(input, pvl);\n-\t\t\t\tString destination = determineDestination(pvl);\n-\t\t\t\tif (destination == null) {\n-\t\t\t\t\tthrow new FileSystemException(\"unknown destination [\" + destination + \"]\");\n+\t\t\t\tF source=getFile(input, pvl);\n+\t\t\t\tString destinationName = determineDestination(pvl);\n+\t\t\t\tF destination;\n+\t\t\t\tif (destinationName.contains(\"/\")) {", "originalCommit": "9b0bb0b00d3cf240c74575a0a9873194a6e38f05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9282928b2a793f8965b7440738a2e2c7a6b00564", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\nindex 07e0271f9..327e2cfbe 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\n\n@@ -387,7 +387,7 @@ public class FileSystemActor<F, FS extends IBasicFileSystem<F>> implements IOutp\n \t\t\t\tF source=getFile(input, pvl);\n \t\t\t\tString destinationName = determineDestination(pvl);\n \t\t\t\tF destination;\n-\t\t\t\tif (destinationName.contains(\"/\")) {\n+\t\t\t\tif (destinationName.contains(\"/\") || destinationName.contains(\"\\\\\")) {\n \t\t\t\t\tdestination = fileSystem.toFile(destinationName);\n \t\t\t\t} else {\n \t\t\t\t\tString sourceName = fileSystem.getCanonicalName(source);\n"}}, {"oid": "9282928b2a793f8965b7440738a2e2c7a6b00564", "url": "https://github.com/ibissource/iaf/commit/9282928b2a793f8965b7440738a2e2c7a6b00564", "message": "fix slash issue", "committedDate": "2020-10-02T13:43:34Z", "type": "commit"}, {"oid": "d3b4da3cd189093c758cced241c706cdab328aba", "url": "https://github.com/ibissource/iaf/commit/d3b4da3cd189093c758cced241c706cdab328aba", "message": "Fix ExchangeFileSystem support", "committedDate": "2020-10-06T13:34:15Z", "type": "commit"}, {"oid": "4bd08a2735d661089b2b9b518ce689a942d88d2f", "url": "https://github.com/ibissource/iaf/commit/4bd08a2735d661089b2b9b518ce689a942d88d2f", "message": "Fix small issue", "committedDate": "2020-10-06T13:53:09Z", "type": "commit"}, {"oid": "d628518200fdc1ff2e4f92175cc3520315a283f6", "url": "https://github.com/ibissource/iaf/commit/d628518200fdc1ff2e4f92175cc3520315a283f6", "message": "Add overwrite attribute to FileSystemSender and FileSystemPipe", "committedDate": "2020-10-06T15:21:38Z", "type": "commit"}, {"oid": "e5becb486dc93721a536a82af4925e107f85ec0d", "url": "https://github.com/ibissource/iaf/commit/e5becb486dc93721a536a82af4925e107f85ec0d", "message": "Clarify contract of move, copy and rename", "committedDate": "2020-10-07T06:47:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMDkxNw==", "url": "https://github.com/ibissource/iaf/pull/1119#discussion_r501830917", "bodyText": "dit kan weg toch?", "author": "nielsm5", "createdAt": "2020-10-08T15:54:15Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java", "diffHunk": "@@ -271,37 +273,47 @@ public Item toFile(String folder, String filename) throws FileSystemException {\n \t\tthrow new NotImplementedException(\"Cannot make item for [\"+filename+\"] file in Exchange folder [\"+folder+\"]\");\n \t}\n \n-\n-\t@Override\n-\tpublic boolean exists(Item f) throws FileSystemException {\n+\tprivate boolean itemExistsInFolder(FolderId folderId, String itemId) throws FileSystemException{\n \t\ttry {\n \t\t\tItemView view = new ItemView(1);\n \t\t\tview.getOrderBy().add(ItemSchema.DateTimeReceived, SortDirection.Ascending);\n-\t\t\tSearchFilter searchFilter =  new SearchFilter.IsEqualTo(ItemSchema.Id, f.getId().toString());\n+\t\t\tSearchFilter searchFilter =  new SearchFilter.IsEqualTo(ItemSchema.Id, itemId);\n \t\t\tFindItemsResults<Item> findResults;\n-\t\t\tfindResults = exchangeService.findItems(basefolderId,searchFilter, view);\n+\t\t\tfindResults = exchangeService.findItems(folderId,searchFilter, view);\n \t\t\treturn findResults.getTotalCount()!=0;\n \t\t} catch (Exception e) {\n \t\t\tthrow new FileSystemException(e);\n \t\t}\n \t}\n \n-\tpublic Item extractNestedItem(Item item) throws Exception {\n-\t\tIterator<Attachment> attachments = listAttachments(item);\n-\t\tif (attachments!=null) {\n-\t\t\twhile (attachments.hasNext()) {\n-\t\t\t\tAttachment attachment=attachments.next();\n-\t\t\t\tif (attachment instanceof ItemAttachment) {\n-\t\t\t\t\tItemAttachment itemAttachment = (ItemAttachment)attachment;\n-\t\t\t\t\titemAttachment.load();\n-\t\t\t\t\treturn itemAttachment.getItem();\n-\t\t\t\t}\n+\t@Override\n+\tpublic boolean exists(Item f) throws FileSystemException {\n+\t\ttry {\n+\t\t\tEmailMessage emailMessage = EmailMessage.bind(exchangeService, f.getId());\n+\t\t\treturn itemExistsInFolder(emailMessage.getParentFolderId(), f.getId().toString());\n+\t\t} catch (ServiceResponseException e) {\n+\t\t\tServiceError errorCode = e.getErrorCode();\n+\t\t\tif (errorCode == ServiceError.ErrorItemNotFound) {\n+\t\t\t\treturn false;\n \t\t\t}\n+\t\t\tthrow new FileSystemException(e);\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new FileSystemException(e);\n \t\t}\n-\t\treturn null;\n \t}\n-\t\n-\t\n+\n+\t//\t@Override\n+//\tpublic boolean filenameExistsInFolder(String folder, String filename) throws FileSystemException{\n+//\t\ttry {\n+//\t\t\tFolderId folderId = findFolder(folder);\n+//\t\t\treturn itemExistsInFolder(folderId, filename);\n+//\t\t} catch (Exception e) {\n+//\t\t\tthrow new FileSystemException(e);\n+//\t\t}\n+//\t}", "originalCommit": "e5becb486dc93721a536a82af4925e107f85ec0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3da8174833c2450e6bb14141e8ba7a027b46c283", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\nindex fe8b43faa..ae82c5be9 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n\n@@ -302,16 +302,6 @@ public class ExchangeFileSystem implements IWithAttachments<Item,Attachment> {\n \t\t}\n \t}\n \n-\t//\t@Override\n-//\tpublic boolean filenameExistsInFolder(String folder, String filename) throws FileSystemException{\n-//\t\ttry {\n-//\t\t\tFolderId folderId = findFolder(folder);\n-//\t\t\treturn itemExistsInFolder(folderId, filename);\n-//\t\t} catch (Exception e) {\n-//\t\t\tthrow new FileSystemException(e);\n-//\t\t}\n-//\t}\n-\n \n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMTk0Mw==", "url": "https://github.com/ibissource/iaf/pull/1119#discussion_r501831943", "bodyText": "Ik snap dat je er nu niets mee wilt doen maar hier is de base64 pipe toch voor, dit moet weg!", "author": "nielsm5", "createdAt": "2020-10-08T15:55:39Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -609,4 +599,12 @@ public int getNumberOfBackups() {\n \t\treturn numberOfBackups;\n \t}\n \n+\t@IbisDoc({\"9\", \"Can be set to 'encode' or 'decode' for actions \"+ACTION_READ1+\", \"+ACTION_WRITE1+\" and \"+ACTION_APPEND+\". When set the stream is base64 encoded or decoded, respectively\", \"\"})\n+\tpublic void setBase64(String base64) {\n+\t\tthis.base64 = base64;\n+\t}\n+\tpublic String getBase64() {\n+\t\treturn base64;\n+\t}", "originalCommit": "e5becb486dc93721a536a82af4925e107f85ec0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3da8174833c2450e6bb14141e8ba7a027b46c283", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\nindex 9ee54c4fd..6beb93244 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java\n\n@@ -600,6 +600,7 @@ public class FileSystemActor<F, FS extends IBasicFileSystem<F>> implements IOutp\n \t}\n \n \t@IbisDoc({\"9\", \"Can be set to 'encode' or 'decode' for actions \"+ACTION_READ1+\", \"+ACTION_WRITE1+\" and \"+ACTION_APPEND+\". When set the stream is base64 encoded or decoded, respectively\", \"\"})\n+\t@Deprecated\n \tpublic void setBase64(String base64) {\n \t\tthis.base64 = base64;\n \t}\n"}}, {"oid": "3da8174833c2450e6bb14141e8ba7a027b46c283", "url": "https://github.com/ibissource/iaf/commit/3da8174833c2450e6bb14141e8ba7a027b46c283", "message": "Addressed comments", "committedDate": "2020-10-09T06:45:58Z", "type": "commit"}]}