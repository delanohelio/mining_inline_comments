{"pr_number": 355, "pr_title": "Ibisdoc(v5)", "pr_createdAt": "2020-01-13T14:04:23Z", "pr_url": "https://github.com/ibissource/iaf/pull/355", "timeline": [{"oid": "f9c6afb6b8a56cdef435fe9bee02dce0f23f4793", "url": "https://github.com/ibissource/iaf/commit/f9c6afb6b8a56cdef435fe9bee02dce0f23f4793", "message": "Put classes menu higher so all classes can be viewed", "committedDate": "2020-01-13T14:01:55Z", "type": "commit"}, {"oid": "28f6a2d3a8a6d7d0b17e06585fb3eca593bba8be", "url": "https://github.com/ibissource/iaf/commit/28f6a2d3a8a6d7d0b17e06585fb3eca593bba8be", "message": "Refactor @Ibisdoc extraction (json file is now 3.3MB instead of 7.9MB)", "committedDate": "2020-01-13T14:01:57Z", "type": "commit"}, {"oid": "816cf17f2f3aabbbffd556bba4a1b7c04e1530da", "url": "https://github.com/ibissource/iaf/commit/816cf17f2f3aabbbffd556bba4a1b7c04e1530da", "message": "Refactor classes IbisdocPipe", "committedDate": "2020-01-13T14:02:00Z", "type": "commit"}, {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "url": "https://github.com/ibissource/iaf/commit/c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "message": "Show if a method (attribute) is deprecated", "committedDate": "2020-01-13T14:02:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjEwMw==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365872103", "bodyText": "Waarom voeg je de index aan de naam toe? De lijst is toch op dezelfde volgorde als de index?", "author": "gvanbrakel", "createdAt": "2020-01-13T15:40:56Z", "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);", "originalCommit": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODMyOQ==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298329", "bodyText": "Klopt, ik heb het in eerste instantie op een inefficiente manier gedaan maar dat is nu gefixt.", "author": "celmoussaoui", "createdAt": "2020-01-14T11:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjEwMw=="}], "type": "inlineReview", "revised_code": {"commit": "72cfdf056b3beb3e05bacaf144839d987f5adbd9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java b/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\nindex 15127f1a4..a68da5c20 100644\n--- a/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\n\n@@ -397,11 +394,11 @@ public class IbisDocPipe extends FixedForwardPipe {\n \t\twhile (clazz.getSuperclass() != null) {\n \n \t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n-\t\t\tString str = Integer.toString(index);\n-\t\t\tsuperClasses.add(clazz.getSimpleName() + str);\n+\t\t\tsuperClasses.add(clazz.getSuperclass().getSimpleName());\n \t\t\tclazz = clazz.getSuperclass();\n \t\t\tindex++;\n \t\t}\n+\t\t\n \t\treturn superClasses;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3NTE2Nw==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365875167", "bodyText": "Waarom is er hier een method om speciaal voor de FileSender de properties van de FilePipe te kopieren?\nEr zijn dan toch veel meer senders die zo'n behandeling zouden willen?", "author": "gvanbrakel", "createdAt": "2020-01-13T15:46:22Z", "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);\n+\t\t\tclazz = clazz.getSuperclass();\n+\t\t\tindex++;\n+\t\t}\n+\t\treturn superClasses;\n+\t}\n+\n+\t/**\n+\t * Gets the IbisDoc values.\n+\t *\n+\t * @param ibisDocValues - The String[] containing all the ibisDocValues\n+\t * @return The needed ibisDocValues\n+\t */\n+\tprivate String[] getValues(String[] ibisDocValues) {\n+\t\tint order;\n+\t\tint desc;\n+\t\tint def;\n+\n+\t\tif (ibisDocValues[0].matches(\"\\\\d+\")) {\n+\t\t\torder = Integer.parseInt(ibisDocValues[0]);\n+\t\t\tdesc = 1;\n+\t\t\tdef = 2;\n+\t\t} else {\n+\t\t\torder = 999;\n+\t\t\tdesc = 0;\n+\t\t\tdef = 1;\n+\t\t}\n+\t\tif (ibisDocValues.length > def)\n+\t\t\treturn new String[]{ibisDocValues[desc], ibisDocValues[def], \"\" + order };\n+\t\telse\n+\t\t\treturn new String[]{ibisDocValues[desc], \"\", \"\" + order };\n+\t}\n+\n+\t/**\n+\t * Add properties of the FilePipe to the FileSender.\n+\t *\n+\t * @param ibisBean       - The IbisBean that should be the FilePipe\n+\t * @param groups         - Contains all information\n+\t * @param beanProperties - The properties of a class (in this case the FilePipe)\n+\t */\n+\tprivate void addPropertiesFileSender(IbisBean ibisBean, Map<String, TreeSet<IbisBean>> groups, Map<String, Method> beanProperties) {\n+\t\tif (ibisBean.getName().equals(\"FilePipe\")) {", "originalCommit": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMTcyOA==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366331728", "bodyText": "We hebben afgesproken dat dit in een volgende ronde aangepakt gaat worden, door middel van annotaties waarmee de instructie gegeven kan worden de ibisdoc op te halen van een method van een andere class", "author": "gvanbrakel", "createdAt": "2020-01-14T13:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3NTE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "72cfdf056b3beb3e05bacaf144839d987f5adbd9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java b/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\nindex 15127f1a4..a68da5c20 100644\n--- a/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java\n\n@@ -397,11 +394,11 @@ public class IbisDocPipe extends FixedForwardPipe {\n \t\twhile (clazz.getSuperclass() != null) {\n \n \t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n-\t\t\tString str = Integer.toString(index);\n-\t\t\tsuperClasses.add(clazz.getSimpleName() + str);\n+\t\t\tsuperClasses.add(clazz.getSuperclass().getSimpleName());\n \t\t\tclazz = clazz.getSuperclass();\n \t\t\tindex++;\n \t\t}\n+\t\t\n \t\treturn superClasses;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3ODMwMQ==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365878301", "bodyText": "Moeten className, originalClassName en foldername niet attributen zijn van AClass in plaats van van AMethod?\nEn dat AMethod dan een verwijzing heeft naar AMethod?", "author": "gvanbrakel", "createdAt": "2020-01-13T15:51:44Z", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import java.util.ArrayList;\n+\n+public class AMethod {\n+\n+    private String name;\n+    private String className;\n+    private String originalClassName;\n+    private String folderName;", "originalCommit": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODU5Nw==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298597", "bodyText": "className en folderName kunnen inderdaan beter een attribuut zijn van AClass. originalClassName verschilt echter per method, dus blijft het een attribuut van AMethod", "author": "celmoussaoui", "createdAt": "2020-01-14T11:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3ODMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "72cfdf056b3beb3e05bacaf144839d987f5adbd9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java b/core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java\nindex 0fa36d57e..dbba03f3c 100644\n--- a/core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java\n+++ b/core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java\n\n@@ -10,22 +10,18 @@ public class AMethod {\n     private String folderName;\n     private String description;\n     private String defaultValue;\n-    private String javadocLink;\n     private int order;\n-    private ArrayList<String> superClasses;\n     private boolean deprecated;\n \n \n-    public AMethod(String name, String className, String originalClassName, String folderName, String description, String defaultValue, String javadocLink, int order, ArrayList<String> superClasses, boolean deprecated) {\n+    public AMethod(String name, String className, String originalClassName, String folderName, String description, String defaultValue, int order, boolean deprecated) {\n         this.name = name;\n         this.className = className;\n         this.originalClassName = originalClassName;\n         this.folderName = folderName;\n         this.description = description;\n         this.defaultValue = defaultValue;\n-        this.javadocLink = javadocLink;\n         this.order = order;\n-        this.superClasses = superClasses;\n         this.deprecated = deprecated;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTI1MA==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365879250", "bodyText": "Wat doet deze class?", "author": "gvanbrakel", "createdAt": "2020-01-13T15:53:25Z", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/DigesterXmlHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+public class DigesterXmlHandler extends DefaultHandler {", "originalCommit": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODkwNw==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298907", "bodyText": "Ik heb dit niet geschreven, enkel verplaatst om de IbisDocPipe.class wat overzichtelijker te maken zodat er niet meerder classes zijn in een file.", "author": "celmoussaoui", "createdAt": "2020-01-14T11:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTI1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365879600", "bodyText": "Wat representeert deze class?", "author": "gvanbrakel", "createdAt": "2020-01-13T15:54:01Z", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/IbisBean.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+public class IbisBean implements Comparable<IbisBean> {", "originalCommit": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODkzOA==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298938", "bodyText": "Ik heb dit niet geschreven, enkel verplaatst om de IbisDocPipe.class wat overzichtelijker te maken zodat er niet meerder classes zijn in een file.", "author": "celmoussaoui", "createdAt": "2020-01-14T11:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5OTI2Ng==", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366299266", "bodyText": "Het representeert tevens een Class Object", "author": "celmoussaoui", "createdAt": "2020-01-14T11:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "72cfdf056b3beb3e05bacaf144839d987f5adbd9", "url": "https://github.com/ibissource/iaf/commit/72cfdf056b3beb3e05bacaf144839d987f5adbd9", "message": "Put the superClasses and JavadocLink attribute within the AClass object\n\n- This is done instead of the AMethod object to decrease the size of the json file", "committedDate": "2020-01-14T11:31:59Z", "type": "commit"}, {"oid": "74ddf899917cd3bad3891e845b0198dfe16e82bc", "url": "https://github.com/ibissource/iaf/commit/74ddf899917cd3bad3891e845b0198dfe16e82bc", "message": "Delete unused properties of the AMethod object\n\n- Also add some documentation to the code", "committedDate": "2020-01-14T12:23:28Z", "type": "commit"}, {"oid": "0ecdeb835bcaff251bb54e4292ad4e3a3a814213", "url": "https://github.com/ibissource/iaf/commit/0ecdeb835bcaff251bb54e4292ad4e3a3a814213", "message": "Do not add an attribute to a class that does not exist in the IbisDoc.", "committedDate": "2020-01-14T13:30:57Z", "type": "commit"}]}