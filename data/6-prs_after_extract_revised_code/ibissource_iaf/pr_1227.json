{"pr_number": 1227, "pr_title": "Use Path instead of File in LocalFileSystem", "pr_createdAt": "2020-11-03T11:19:33Z", "pr_url": "https://github.com/ibissource/iaf/pull/1227", "timeline": [{"oid": "278f50c42dfa6a6846a1f2157b987d80b44e72bd", "url": "https://github.com/ibissource/iaf/commit/278f50c42dfa6a6846a1f2157b987d80b44e72bd", "message": "Use Path instead of File in LocalFileSystem", "committedDate": "2020-11-03T11:18:51Z", "type": "commit"}, {"oid": "8f7f2f3830d30588c09214176d3cb1509166f3a9", "url": "https://github.com/ibissource/iaf/commit/8f7f2f3830d30588c09214176d3cb1509166f3a9", "message": "remove semicolon", "committedDate": "2020-11-03T11:30:20Z", "type": "commit"}, {"oid": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "url": "https://github.com/ibissource/iaf/commit/e64d33a9ab267dab39823533653d8ee69e9bb7f3", "message": "remove unused import", "committedDate": "2020-11-03T11:51:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MjcxMg==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517142712", "bodyText": "These two try statements can be combined. The getFileSystem() need not be inside the try.", "author": "gvanbrakel", "createdAt": "2020-11-04T07:32:07Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java", "diffHunk": "@@ -166,39 +168,40 @@ public FS getFileSystem() {\n \tpublic synchronized F getRawMessage(Map<String,Object> threadContext) throws ListenerException {\n \t\ttry {\n \t\t\tFS fileSystem=getFileSystem();\n-\t\t\tIterator<F> it = fileSystem.listFiles(getInputFolder());\n-\t\t\tif (it==null || !it.hasNext()) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\t\n-\t\t\tlong stabilityLimit = getMinStableTime();\n-\t\t\tif (stabilityLimit>0) {\n-\t\t\t\tstabilityLimit=System.currentTimeMillis()-stabilityLimit;\n-\t\t\t}\n-\t\t\twhile (it.hasNext()) {\n-\t\t\t\tF file = it.next();\n+\t\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(getInputFolder())) {\n+\t\t\t\tIterator<F> it = ds.iterator();", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\nindex 8bc479569..be878b637 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n\n@@ -163,43 +163,38 @@ public abstract class FileSystemListener<F, FS extends IBasicFileSystem<F>> impl\n \t\treturn fileSystem;\n \t}\n \n-\n \t@Override\n \tpublic synchronized F getRawMessage(Map<String,Object> threadContext) throws ListenerException {\n-\t\ttry {\n-\t\t\tFS fileSystem=getFileSystem();\n-\t\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(getInputFolder())) {\n-\t\t\t\tIterator<F> it = ds.iterator();\n-\t\t\t\tif (it==null || !it.hasNext()) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tlong stabilityLimit = getMinStableTime();\n+\t\tFS fileSystem=getFileSystem();\n+\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(getInputFolder())) {\n+\t\t\tIterator<F> it = ds.iterator();\n+\t\t\tif (it==null || !it.hasNext()) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tlong stabilityLimit = getMinStableTime();\n+\t\t\tif (stabilityLimit>0) {\n+\t\t\t\tstabilityLimit=System.currentTimeMillis()-stabilityLimit;\n+\t\t\t}\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tF file = it.next();\n \t\t\t\tif (stabilityLimit>0) {\n-\t\t\t\t\tstabilityLimit=System.currentTimeMillis()-stabilityLimit;\n-\t\t\t\t}\n-\t\t\t\twhile (it.hasNext()) {\n-\t\t\t\t\tF file = it.next();\n-\t\t\t\t\tif (stabilityLimit>0) {\n-\t\t\t\t\t\tlong filemodtime=fileSystem.getModificationTime(file).getTime();\n-\t\t\t\t\t\tif (filemodtime>stabilityLimit) {\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t}\n+\t\t\t\t\tlong filemodtime=fileSystem.getModificationTime(file).getTime();\n+\t\t\t\t\tif (filemodtime>stabilityLimit) {\n+\t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n-\t\t\t\t\tif (StringUtils.isNotEmpty(getInProcessFolder())) {\n-\t\t\t\t\t\tF inprocessFile = FileSystemUtils.moveFile(fileSystem, file, getInProcessFolder(), false, 0, isCreateFolders());\n-\t\t\t\t\t\treturn inprocessFile;\n-\t\t\t\t\t} \n-\t\t\t\t\treturn file;\n \t\t\t\t}\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new ListenerException(e);\n+\t\t\t\tif (StringUtils.isNotEmpty(getInProcessFolder())) {\n+\t\t\t\t\tF inprocessFile = FileSystemUtils.moveFile(fileSystem, file, getInProcessFolder(), false, 0, isCreateFolders());\n+\t\t\t\t\treturn inprocessFile;\n+\t\t\t\t}\n+\t\t\t\treturn file;\n \t\t\t}\n-\t\t\t\n-\t\t\treturn null;\n-\t\t} catch (FileSystemException e) {\n+\t\t} catch (IOException | FileSystemException e) {\n \t\t\tthrow new ListenerException(e);\n \t\t}\n+\n+\t\treturn null;\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0MzA5MA==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517143090", "bodyText": "These two try statements can be combined.", "author": "gvanbrakel", "createdAt": "2020-11-04T07:33:06Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemMessageBrowser.java", "diffHunk": "@@ -102,8 +104,12 @@ public void deleteMessage(String messageId) throws ListenerException {\n \tpublic int getMessageCount() throws ListenerException {\n \t\ttry {\n \t\t\tint count = 0;\n-\t\t\tfor (Iterator<F> it = fileSystem.listFiles(folder); it.hasNext(); it.next()) {\n-\t\t\t\tcount++;\n+\t\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(folder)) {", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemMessageBrowser.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemMessageBrowser.java\nindex c5629d71f..b3e6e1622 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemMessageBrowser.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemMessageBrowser.java\n\n@@ -102,19 +102,15 @@ public class FileSystemMessageBrowser<F, FS extends IBasicFileSystem<F>> impleme\n \n \t@Override\n \tpublic int getMessageCount() throws ListenerException {\n-\t\ttry {\n-\t\t\tint count = 0;\n-\t\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(folder)) {\n-\t\t\t\tfor (Iterator<F> it = ds.iterator(); it.hasNext(); it.next()) {\n-\t\t\t\t\tcount++;\n-\t\t\t\t}\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new ListenerException(e);\n+\t\tint count = 0;\n+\t\ttry(DirectoryStream<F> ds = fileSystem.listFiles(folder)) {\n+\t\t\tfor (Iterator<F> it = ds.iterator(); it.hasNext(); it.next()) {\n+\t\t\t\tcount++;\n \t\t\t}\n-\t\t\treturn count;\n-\t\t} catch (FileSystemException e) {\n+\t\t} catch (IOException | FileSystemException e) {\n \t\t\tthrow new ListenerException(e);\n \t\t}\n+\t\treturn count;\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NjQ0Nw==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517146447", "bodyText": "Please add \"Cannot create folder [\"+ foldername +\"]\"", "author": "gvanbrakel", "createdAt": "2020-11-04T07:40:39Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java", "diffHunk": "@@ -165,7 +147,11 @@ public boolean folderExists(String folder) throws FileSystemException {\n \t@Override\n \tpublic void createFolder(String folder) throws FileSystemException {\n \t\tif (!folderExists(folder)) {\n-\t\t\ttoFile(folder).mkdir();\n+\t\t\ttry {\n+\t\t\t\tFiles.createDirectories(toFile(folder));\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tthrow new FileSystemException(e);", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\nindex 88312032a..64b12348f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n\n@@ -150,7 +150,7 @@ public class LocalFileSystem implements IWritableFileSystem<Path> {\n \t\t\ttry {\n \t\t\t\tFiles.createDirectories(toFile(folder));\n \t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t\tthrow new FileSystemException(\"Cannot create folder [\"+ folder +\"]\", e);\n \t\t\t}\n \t\t} else {\n \t\t\tthrow new FileSystemException(\"Create directory for [\" + folder + \"] has failed. Directory already exists.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NjY4Mg==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517146682", "bodyText": "Please add \"Cannot remove folder [\"+ foldername +\"]\"", "author": "gvanbrakel", "createdAt": "2020-11-04T07:41:10Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java", "diffHunk": "@@ -174,66 +160,79 @@ public void createFolder(String folder) throws FileSystemException {\n \t@Override\n \tpublic void removeFolder(String folder) throws FileSystemException {\n \t\tif (folderExists(folder)) {\n-\t\t\ttoFile(folder).delete();\n+\t\t\ttry {\n+\t\t\t\tFiles.delete(toFile(folder));\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tthrow new FileSystemException(e);", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\nindex 88312032a..64b12348f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n\n@@ -163,7 +163,7 @@ public class LocalFileSystem implements IWritableFileSystem<Path> {\n \t\t\ttry {\n \t\t\t\tFiles.delete(toFile(folder));\n \t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t\tthrow new FileSystemException(\"Cannot remove folder [\"+ folder +\"]\",e);\n \t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzA1OA==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517147058", "bodyText": "Please add \"Cannot rename folder [\"+ foldername +\"] to [\"+ destination+\"]\"", "author": "gvanbrakel", "createdAt": "2020-11-04T07:41:57Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java", "diffHunk": "@@ -174,66 +160,79 @@ public void createFolder(String folder) throws FileSystemException {\n \t@Override\n \tpublic void removeFolder(String folder) throws FileSystemException {\n \t\tif (folderExists(folder)) {\n-\t\t\ttoFile(folder).delete();\n+\t\t\ttry {\n+\t\t\t\tFiles.delete(toFile(folder));\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n \t\t}\n \t}\n \n \t@Override\n-\tpublic File renameFile(File source, File destination) throws FileSystemException {\n-\t\tif (!source.renameTo(destination)) {\n-\t\t\tthrow new FileSystemException(\"Could not rename [\"+source.getPath()+\"] to [\"+destination.getPath()+\"]\");\n+\tpublic Path renameFile(Path source, Path destination) throws FileSystemException {\n+\t\ttry {\n+\t\t\treturn Files.move(source, destination);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new FileSystemException(e);", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\nindex 88312032a..64b12348f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n\n@@ -163,7 +163,7 @@ public class LocalFileSystem implements IWritableFileSystem<Path> {\n \t\t\ttry {\n \t\t\t\tFiles.delete(toFile(folder));\n \t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t\tthrow new FileSystemException(\"Cannot remove folder [\"+ folder +\"]\",e);\n \t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzU3NQ==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517147575", "bodyText": "Please add \"Cannot move file  [\"+ f.getFileName()+\"] to [\"+ destinationFolder+\"]\"", "author": "gvanbrakel", "createdAt": "2020-11-04T07:43:03Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java", "diffHunk": "@@ -174,66 +160,79 @@ public void createFolder(String folder) throws FileSystemException {\n \t@Override\n \tpublic void removeFolder(String folder) throws FileSystemException {\n \t\tif (folderExists(folder)) {\n-\t\t\ttoFile(folder).delete();\n+\t\t\ttry {\n+\t\t\t\tFiles.delete(toFile(folder));\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n \t\t}\n \t}\n \n \t@Override\n-\tpublic File renameFile(File source, File destination) throws FileSystemException {\n-\t\tif (!source.renameTo(destination)) {\n-\t\t\tthrow new FileSystemException(\"Could not rename [\"+source.getPath()+\"] to [\"+destination.getPath()+\"]\");\n+\tpublic Path renameFile(Path source, Path destination) throws FileSystemException {\n+\t\ttry {\n+\t\t\treturn Files.move(source, destination);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new FileSystemException(e);\n \t\t}\n-\t\treturn destination;\n \t}\n \t\n \t@Override\n-\tpublic File moveFile(File f, String destinationFolder, boolean createFolder) throws FileSystemException {\n-\t\tFile target = toFile(destinationFolder, f.getName());\n-\t\tif (!f.renameTo(target)) {\n-\t\t\tthrow new FileSystemException(\"cannot move file [\"+f.getPath()+\"] to [\"+target.getPath()+\"]\");\n+\tpublic Path moveFile(Path f, String destinationFolder, boolean createFolder) throws FileSystemException {\n+\t\ttry {\n+\t\t\treturn Files.move(f, toFile(destinationFolder, f.getFileName().toString()));\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new FileSystemException(e);", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\nindex 88312032a..64b12348f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n\n@@ -163,7 +163,7 @@ public class LocalFileSystem implements IWritableFileSystem<Path> {\n \t\t\ttry {\n \t\t\t\tFiles.delete(toFile(folder));\n \t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t\tthrow new FileSystemException(\"Cannot remove folder [\"+ folder +\"]\",e);\n \t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0Nzc4MA==", "url": "https://github.com/ibissource/iaf/pull/1227#discussion_r517147780", "bodyText": "Please add \"Cannot copy file  [\"+ f.getFileName()+\"] to [\"+ destinationFolder+\"]\"", "author": "gvanbrakel", "createdAt": "2020-11-04T07:43:35Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java", "diffHunk": "@@ -174,66 +160,79 @@ public void createFolder(String folder) throws FileSystemException {\n \t@Override\n \tpublic void removeFolder(String folder) throws FileSystemException {\n \t\tif (folderExists(folder)) {\n-\t\t\ttoFile(folder).delete();\n+\t\t\ttry {\n+\t\t\t\tFiles.delete(toFile(folder));\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n \t\t}\n \t}\n \n \t@Override\n-\tpublic File renameFile(File source, File destination) throws FileSystemException {\n-\t\tif (!source.renameTo(destination)) {\n-\t\t\tthrow new FileSystemException(\"Could not rename [\"+source.getPath()+\"] to [\"+destination.getPath()+\"]\");\n+\tpublic Path renameFile(Path source, Path destination) throws FileSystemException {\n+\t\ttry {\n+\t\t\treturn Files.move(source, destination);\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new FileSystemException(e);\n \t\t}\n-\t\treturn destination;\n \t}\n \t\n \t@Override\n-\tpublic File moveFile(File f, String destinationFolder, boolean createFolder) throws FileSystemException {\n-\t\tFile target = toFile(destinationFolder, f.getName());\n-\t\tif (!f.renameTo(target)) {\n-\t\t\tthrow new FileSystemException(\"cannot move file [\"+f.getPath()+\"] to [\"+target.getPath()+\"]\");\n+\tpublic Path moveFile(Path f, String destinationFolder, boolean createFolder) throws FileSystemException {\n+\t\ttry {\n+\t\t\treturn Files.move(f, toFile(destinationFolder, f.getFileName().toString()));\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new FileSystemException(e);\n \t\t}\n-\t\treturn target;\n \t}\n \t@Override\n-\tpublic File copyFile(File f, String destinationFolder, boolean createFolder) throws FileSystemException {\n-\t\tFile target = toFile(destinationFolder, f.getName());\n+\tpublic Path copyFile(Path f, String destinationFolder, boolean createFolder) throws FileSystemException {\n+\t\tPath target = toFile(destinationFolder, f.getFileName().toString());\n \t\ttry {\n-\t\t\tFileUtils.copyFile(f, target);\n+\t\t\tFiles.copy(f, target);\n \t\t} catch (IOException e) {\n-\t\t\tthrow new FileSystemException(\"cannot copy file [\"+f.getPath()+\"] to [\"+target.getPath()+\"]\",e);\n+\t\t\tthrow new FileSystemException(e);", "originalCommit": "e64d33a9ab267dab39823533653d8ee69e9bb7f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\nindex 88312032a..64b12348f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/LocalFileSystem.java\n\n@@ -163,7 +163,7 @@ public class LocalFileSystem implements IWritableFileSystem<Path> {\n \t\t\ttry {\n \t\t\t\tFiles.delete(toFile(folder));\n \t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new FileSystemException(e);\n+\t\t\t\tthrow new FileSystemException(\"Cannot remove folder [\"+ folder +\"]\",e);\n \t\t\t}\n \t\t}else {\n \t\t\tthrow new FileSystemException(\"Remove directory for [\" + folder + \"] has failed. Directory does not exist.\");\n"}}, {"oid": "ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "url": "https://github.com/ibissource/iaf/commit/ca02863672b10633dcb5ae35a5bad6a6ee7df0f3", "message": "work on PR comments", "committedDate": "2020-11-04T08:55:31Z", "type": "commit"}, {"oid": "3478b1741ee2429b5225c4629bd4fa18a1547178", "url": "https://github.com/ibissource/iaf/commit/3478b1741ee2429b5225c4629bd4fa18a1547178", "message": "Merge branch 'master' into io_to_nio", "committedDate": "2020-11-06T07:57:32Z", "type": "commit"}]}