{"pr_number": 1196, "pr_title": "Extend suppression of config warnings ", "pr_createdAt": "2020-10-23T10:47:05Z", "pr_url": "https://github.com/ibissource/iaf/pull/1196", "timeline": [{"oid": "26c10d21355418668653bdc60db6295a6d1e1f88", "url": "https://github.com/ibissource/iaf/commit/26c10d21355418668653bdc60db6295a6d1e1f88", "message": "extend configuration warnings", "committedDate": "2020-10-23T10:28:53Z", "type": "commit"}, {"oid": "596ce307e96f44e2e2e092228303731c73760084", "url": "https://github.com/ibissource/iaf/commit/596ce307e96f44e2e2e092228303731c73760084", "message": "introduce transaction suppressionkey", "committedDate": "2020-10-23T10:38:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5NTY3OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r511795679", "bodyText": "Maybe it's time for this to become an Enum", "author": "nielsm5", "createdAt": "2020-10-26T08:44:57Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -36,7 +36,8 @@\n \tpublic static final String SQL_INJECTION_SUPPRESS_KEY = \"warnings.suppress.sqlInjections\";\n \tpublic static final String DEPRECATION_SUPPRESS_KEY=\"warnings.suppress.deprecated\";\n \tpublic static final String DEFAULT_VALUE_SUPPRESS_KEY = \"warnings.suppress.defaultvalue\";\n-\n+\tpublic static final String TRANSACTION_SUPPRESS_KEY = \"warnings.suppress.transaction\";", "originalCommit": "596ce307e96f44e2e2e092228303731c73760084", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\nindex 8c8817223..3dfd51532 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n\n@@ -33,11 +33,7 @@ import nl.nn.adapterframework.util.ClassUtils;\n public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \tprivate static ConfigurationWarnings self = null;\n \tprivate Configuration activeConfiguration = null;\n-\tpublic static final String SQL_INJECTION_SUPPRESS_KEY = \"warnings.suppress.sqlInjections\";\n-\tpublic static final String DEPRECATION_SUPPRESS_KEY=\"warnings.suppress.deprecated\";\n-\tpublic static final String DEFAULT_VALUE_SUPPRESS_KEY = \"warnings.suppress.defaultvalue\";\n-\tpublic static final String TRANSACTION_SUPPRESS_KEY = \"warnings.suppress.transaction\";\n-\t\n+\n \t/**\n \t * Add configuration independent warning\n \t */\n"}}, {"oid": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "url": "https://github.com/ibissource/iaf/commit/c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "message": "suppressKeys enum, cover more configuration warnings for suppression", "committedDate": "2020-10-26T16:01:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxMTU0Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512511547", "bodyText": "Shouldn't you put this in the MqttFacade? It already has a configure, just no IConfigurable interface", "author": "nielsm5", "createdAt": "2020-10-27T08:52:29Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java", "diffHunk": "@@ -171,4 +171,9 @@ public Message extractMessage(MqttMessage rawMessage, Map<String, Object> contex\n \t@Override\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\nindex 02a3caf11..78a7f77bd 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\n\n@@ -172,8 +172,4 @@ public class MqttListener extends MqttFacade implements ReceiverAware<MqttMessag\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n \n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn super.getClassLoader();\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxMjUzNw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512512537", "bodyText": "\ud83d\udc4d", "author": "nielsm5", "createdAt": "2020-10-27T08:54:08Z", "path": "core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java", "diffHunk": "@@ -92,7 +93,7 @@ public void configure() throws ConfigurationException {\n \n \t\tif (StringUtils.isEmpty(getServiceNamespaceURI()) && StringUtils.isEmpty(getAddress())) {\n \t\t\tString msg = \"calling webservices via de ServiceDispatcher_ServiceProxy is deprecated. Please specify an address or serviceNamespaceURI and modify the call accordingly\";\n-\t\t\tConfigurationWarnings.add(this, log, msg);\n+\t\t\tConfigurationWarnings.add(this, log, msg, SuppressKeys.DEPRECATION_SUPPRESS_KEY, null);", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ef6d9f625fffd9fc41cbe0343c930a2044b2b27", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java b/core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java\nindex c17960f2d..2000d5215 100644\n--- a/core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java\n\n@@ -95,15 +101,15 @@ public class WebServiceListener extends PushingListenerAdapter<String> implement\n \t\t\tString msg = \"calling webservices via de ServiceDispatcher_ServiceProxy is deprecated. Please specify an address or serviceNamespaceURI and modify the call accordingly\";\n \t\t\tConfigurationWarnings.add(this, log, msg, SuppressKeys.DEPRECATION_SUPPRESS_KEY, null);\n \t\t}\n+\n+\t\tif(cxfBus == null) {\n+\t\t\tthrow new ConfigurationException(\"unable to find SpringBus, cannot register \"+this.getClass().getSimpleName());\n+\t\t}\n \t}\n \n \t@Override\n \tpublic void open() throws ListenerException {\n \t\tif (StringUtils.isNotEmpty(getAddress())) {\n-\t\t\tBus cxfBus = BusFactory.getDefaultBus(false);\n-\t\t\tif(cxfBus == null) {\n-\t\t\t\tthrow new ListenerException(\"unable to find SpringBus\");\n-\t\t\t}\n \t\t\tlog.debug(\"registering listener [\"+getName()+\"] with JAX-WS CXF Dispatcher on SpringBus [\"+cxfBus.getId()+\"]\");\n \t\t\tendpoint = new EndpointImpl(cxfBus, new MessageProvider(this, getMultipartXmlSessionKey()));\n \t\t\tendpoint.publish(\"/\"+getAddress());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxNTQxNg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512515416", "bodyText": "This class already has a configure method, If you add the IConfigurable interface here you don't have to add it on it's children.", "author": "nielsm5", "createdAt": "2020-10-27T08:58:26Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -68,6 +68,7 @@\n  */\n public class FtpSession {\n \tprotected Logger log = LogUtil.getLogger(this);\n+\tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\nindex 38dc3793f..144784b8f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n+++ b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n\n@@ -66,7 +67,7 @@ import com.sshtools.j2ssh.transport.publickey.SshPrivateKeyFile;\n  * \n  * @author John Dekker\n  */\n-public class FtpSession {\n+public class FtpSession implements IConfigurable{\n \tprotected Logger log = LogUtil.getLogger(this);\n \tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n \n"}}, {"oid": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "url": "https://github.com/ibissource/iaf/commit/12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "message": "move method to parent class", "committedDate": "2020-10-27T09:24:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzE4MQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923181", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:55:23Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java", "diffHunk": "@@ -326,4 +327,9 @@ public void setTpnummer(String newTpnummer) {\n \tpublic String getTpnummer() {\n \t\treturn tpnummer;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java b/core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java\nindex 03422e4ef..9859e7dc2 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java\n\n@@ -327,9 +329,4 @@ public class Afm2EdiFactSender implements ISender {\n \tpublic String getTpnummer() {\n \t\treturn tpnummer;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzcwMQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923701", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:56:37Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java", "diffHunk": "@@ -228,4 +231,9 @@ public void setAuthAlias(String authAlias) {\n \tpublic String getAuthAlias() {\n \t\treturn authAlias;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java\nindex 2bb3679c4..4eedf020b 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java\n\n@@ -231,9 +233,4 @@ public class MqttFacade implements HasPhysicalDestination, IConfigurable {\n \tpublic String getAuthAlias() {\n \t\treturn authAlias;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzg0NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923845", "bodyText": "Unnecessary change, please remove file from PR", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:01Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java", "diffHunk": "@@ -171,4 +171,5 @@ public Message extractMessage(MqttMessage rawMessage, Map<String, Object> contex\n \t@Override\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\nindex 78a7f77bd..ff2bca69d 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java\n\n@@ -171,5 +171,4 @@ public class MqttListener extends MqttFacade implements ReceiverAware<MqttMessag\n \t@Override\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzk4OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923989", "bodyText": "Unnecessary change, please remove file from PR", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:26Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java", "diffHunk": "@@ -116,4 +116,5 @@ public Message sendMessage(Message message, IPipeLineSession session, String soa\n \tpublic boolean isSynchronous() {\n \t\treturn false;\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\nindex 23793ca97..fd60c15bb 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\n\n@@ -116,5 +116,4 @@ public class MqttSender extends MqttFacade implements ISenderWithParameters {\n \tpublic boolean isSynchronous() {\n \t\treturn false;\n \t}\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNDE5MA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514924190", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:59Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java", "diffHunk": "@@ -150,6 +151,10 @@ public void closeThread(Map<String,Object> threadContext) throws ListenerExcepti\n \t\t// nothing special here\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\nindex 450259208..5f4c0fcf8 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n\n@@ -151,10 +152,6 @@ public abstract class FileSystemListener<F, FS extends IBasicFileSystem<F>> impl\n \t\t// nothing special here\n \t}\n \n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n \t@Override\n \tpublic String getPhysicalDestinationName() {\n \t\tString result=getFileSystem() instanceof HasPhysicalDestination?((HasPhysicalDestination)getFileSystem()).getPhysicalDestinationName()+\" \":\"\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNTE4NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514925185", "bodyText": "In this case this has to be 'Name of the listener or sender'", "author": "gvanbrakel", "createdAt": "2020-10-30T08:00:13Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -953,4 +957,19 @@ public boolean isKeyboardInteractive() {\n \tpublic void setKeyboardInteractive(boolean keyboardInteractive) {\n \t\tthis.keyboardInteractive = keyboardInteractive;\n \t}\n+\n+\t@Override\n+\t@IbisDoc({\"name of the listener\", \"\"})", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\nindex 144784b8f..42d793529 100644\n--- a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n+++ b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n\n@@ -959,7 +961,7 @@ public class FtpSession implements IConfigurable{\n \t}\n \n \t@Override\n-\t@IbisDoc({\"name of the listener\", \"\"})\n+\t@IbisDoc({\"name of the listener or sender\", \"\"})\n \tpublic void setName(String name) {\n \t\tthis.name = name;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNTM3NA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514925374", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:00:41Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -953,4 +957,19 @@ public boolean isKeyboardInteractive() {\n \tpublic void setKeyboardInteractive(boolean keyboardInteractive) {\n \t\tthis.keyboardInteractive = keyboardInteractive;\n \t}\n+\n+\t@Override\n+\t@IbisDoc({\"name of the listener\", \"\"})\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\nindex 144784b8f..42d793529 100644\n--- a/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n+++ b/core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java\n\n@@ -959,7 +961,7 @@ public class FtpSession implements IConfigurable{\n \t}\n \n \t@Override\n-\t@IbisDoc({\"name of the listener\", \"\"})\n+\t@IbisDoc({\"name of the listener or sender\", \"\"})\n \tpublic void setName(String name) {\n \t\tthis.name = name;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNjM3OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514926379", "bodyText": "Please let this class extend SenderBase, and inherit name and classloader from that class", "author": "gvanbrakel", "createdAt": "2020-10-30T08:03:05Z", "path": "core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java", "diffHunk": "@@ -40,6 +40,7 @@\n  * @since 4.2\n  */\n public class IbisWebServiceSender implements ISender, HasPhysicalDestination {\n+\tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java b/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\nindex 634bf7245..75ff4bcc4 100644\n--- a/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\n\n@@ -39,10 +40,8 @@ import nl.nn.adapterframework.util.AppConstants;\n  * @author Gerrit van Brakel\n  * @since 4.2\n  */\n-public class IbisWebServiceSender implements ISender, HasPhysicalDestination {\n-\tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+public class IbisWebServiceSender extends SenderBase implements ISender, HasPhysicalDestination {\n \n-\tprivate String name;\n \tprivate String ibisHost = \"localhost\";\n \tprivate String ibisInstance = null;\n \tprivate String serviceName = \"serviceListener\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNjUyOA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514926528", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:03:30Z", "path": "core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java", "diffHunk": "@@ -141,4 +142,9 @@ public void setRunning(boolean running) {\n \t\tthis.running = running;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java b/core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java\nindex 780324fb1..d4383a5cb 100644\n--- a/core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java\n+++ b/core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java\n\n@@ -141,10 +142,4 @@ public class PushingListenerAdapter<M extends String> implements IPushingListene\n \tpublic void setRunning(boolean running) {\n \t\tthis.running = running;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzE2Mg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927162", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:02Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java", "diffHunk": "@@ -284,6 +284,11 @@ public Map openThread() throws ListenerException {\n \t\treturn array.iterator();\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java b/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\nindex ab9e9d4e0..48d194ab1 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\n\n@@ -284,11 +285,6 @@ public class FileRecordListener implements IPullingListener {\n \t\treturn array.iterator();\n \t}\n \n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n-\n \tpublic void setSender(ISender sender) {\n \t\tthis.sender = sender;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzMzNg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927336", "bodyText": "unnecessary change", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:23Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java", "diffHunk": "@@ -366,4 +371,5 @@ public void setStoreFileNameInSessionKey(String storeFileNameInSessionKey) {\n \tpublic String getStoreFileNameInSessionKey() {\n \t\treturn storeFileNameInSessionKey;\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java b/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\nindex ab9e9d4e0..48d194ab1 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java\n\n@@ -371,5 +367,4 @@ public class FileRecordListener implements IPullingListener {\n \tpublic String getStoreFileNameInSessionKey() {\n \t\treturn storeFileNameInSessionKey;\n \t}\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzQyNA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927424", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:33Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java", "diffHunk": "@@ -216,6 +217,11 @@ public Message extractMessage(String rawMessage, Map<String,Object> context) thr\n \t\treturn new Message(rawMessage);\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java b/core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java\nindex 3c0f5a53e..d3e14010f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java\n\n@@ -217,11 +218,6 @@ public class JavaListener implements IPushingListener<String>, RequestProcessor,\n \t\treturn new Message(rawMessage);\n \t}\n \n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n-\n \t@Override\n \tpublic String getPhysicalDestinationName() {\n \t\tif (StringUtils.isNotEmpty(getServiceName())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzU2NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927565", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:51Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java", "diffHunk": "@@ -2305,4 +2306,8 @@ public String getHideMethod() {\n \t\treturn hideMethod;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\nindex 245e3c26e..596a99ec6 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n\n@@ -2305,9 +2306,4 @@ public class ReceiverBase<M> implements IReceiver<M>, IReceiverStatistics, IMess\n \tpublic String getHideMethod() {\n \t\treturn hideMethod;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn classLoader;\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyODA1OA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514928058", "bodyText": "This shouldn't be necessary. Solve this in the super class", "author": "gvanbrakel", "createdAt": "2020-10-30T08:06:57Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -92,4 +92,9 @@ public ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6017576876c165d169d85060f0672376d119d93", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\nindex 63a3684d8..213e3b0e4 100644\n--- a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n\n@@ -91,10 +91,4 @@ public class FileSender extends FileHandler implements ISenderWithParameters {\n \tpublic ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn super.getClassLoader();\n-\t}\n-\n }\n"}}, {"oid": "c6017576876c165d169d85060f0672376d119d93", "url": "https://github.com/ibissource/iaf/commit/c6017576876c165d169d85060f0672376d119d93", "message": "tidy up", "committedDate": "2020-10-30T09:31:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3Mjk1Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514972957", "bodyText": "Please remove this file from the PR, nothing has changed", "author": "gvanbrakel", "createdAt": "2020-10-30T09:37:04Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2017 Integration Partners\n+   Copyright 2017 - 2020 WeAreFrank!", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\nindex fd60c15bb..bbd823d2c 100644\n--- a/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java\n\n@@ -1,5 +1,5 @@\n /*\n-   Copyright 2017 - 2020 WeAreFrank!\n+   Copyright 2017 Integration Partners\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3Mzg5OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514973899", "bodyText": "This should not be necessaray", "author": "gvanbrakel", "createdAt": "2020-10-30T09:38:44Z", "path": "core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java", "diffHunk": "@@ -1347,4 +1347,9 @@ public void setReplyNotFound(boolean b) {\n \tpublic boolean isReplyNotFound() {\n \t\treturn replyNotFound;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java b/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\nindex d6b0af789..1de81ea1a 100644\n--- a/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\n\n@@ -1347,9 +1347,4 @@ public class LdapSender extends JNDIBase implements ISenderWithParameters {\n \tpublic boolean isReplyNotFound() {\n \t\treturn replyNotFound;\n \t}\n-\n-\t@Override\n-\tpublic ClassLoader getConfigurationClassLoader() {\n-\t\treturn super.getClassLoader();\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3NDc4OA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514974788", "bodyText": "Please remove this file from the PR, nothing has changed", "author": "gvanbrakel", "createdAt": "2020-10-30T09:40:17Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013 Nationale-Nederlanden\n+   Copyright 2013 Nationale-Nederlanden, 2020 WeAreFrank!", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\nindex 213e3b0e4..968c15dc2 100644\n--- a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n\n@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013 Nationale-Nederlanden, 2020 WeAreFrank!\n+   Copyright 2013 Nationale-Nederlanden\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n"}}, {"oid": "0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "url": "https://github.com/ibissource/iaf/commit/0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "message": "feedback", "committedDate": "2020-10-30T10:01:22Z", "type": "commit"}, {"oid": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "url": "https://github.com/ibissource/iaf/commit/d13d46d973da783d237be5333f9ae363b3fa5b7c", "message": "more on feedabck", "committedDate": "2020-10-30T10:09:19Z", "type": "commit"}, {"oid": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "url": "https://github.com/ibissource/iaf/commit/f39c4acd389ef7a0693e44aecf433376a1454c3c", "message": "Merge branch 'master' into extend_config_warnings", "committedDate": "2020-10-30T10:13:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDUxMA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514994510", "bodyText": "Please remove this file from the PR, it has not changed", "author": "gvanbrakel", "createdAt": "2020-10-30T10:16:16Z", "path": "core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013, 2020 Nationale-Nederlanden\n+   Copyright 2013, 2020 Nationale-Nederlanden, 2020 WeAreFrank!", "originalCommit": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java b/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\nindex 1de81ea1a..50afcc259 100644\n--- a/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java\n\n@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013, 2020 Nationale-Nederlanden, 2020 WeAreFrank!\n+   Copyright 2013, 2020 Nationale-Nederlanden\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NTAxOQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514995019", "bodyText": "Please remove this file from the PR, it has not changed", "author": "gvanbrakel", "createdAt": "2020-10-30T10:17:18Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -91,5 +91,4 @@ public void addParameter(Parameter p) {\n \tpublic ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n-", "originalCommit": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\nindex 968c15dc2..0a6e9fe56 100644\n--- a/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/senders/FileSender.java\n\n@@ -91,4 +91,5 @@ public class FileSender extends FileHandler implements ISenderWithParameters {\n \tpublic ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n+\n }\n"}}, {"oid": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "url": "https://github.com/ibissource/iaf/commit/7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "message": "remove 2 files from the PR", "committedDate": "2020-10-30T10:35:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2Mjg0Ng==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r515062846", "bodyText": "We suggest to add an option 'noGlobal', that, when set true, it inhibits suppression at the global level,", "author": "gvanbrakel", "createdAt": "2020-10-30T12:28:27Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\"),\n+\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\"),\n+\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\"),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\"),\n+\tINTEGRITY_CHECK_SUPPRESS_KEY(\"warnings.suppress.integrityCheck\");\n+\n+\tprivate @Getter String key;\n+", "originalCommit": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96fbd50e06bc97a17e932b3ab4928f11843a6d54", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\nindex b09292aec..d212a2504 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n\n@@ -25,13 +25,19 @@ import lombok.Getter;\n  */\n public enum SuppressKeys {\n \n-\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\"),\n-\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\"),\n-\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\"),\n-\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\"),\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),\n+\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\", true),\n+\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\", true),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\", true),\n \tINTEGRITY_CHECK_SUPPRESS_KEY(\"warnings.suppress.integrityCheck\");\n \n \tprivate @Getter String key;\n+\tprivate @Getter boolean allowGlobalSuppression = false;\n+\n+\tprivate SuppressKeys(String key, boolean allowGlobalSuppression) {\n+\t\tthis.key = key;\n+\t\tthis.allowGlobalSuppression = allowGlobalSuppression;\n+\t}\n \n \tprivate SuppressKeys(String key) {\n \t\tthis.key = key;\n"}}, {"oid": "61e2320c8cb7f2cea65ce72d627642e9d1b500e9", "url": "https://github.com/ibissource/iaf/commit/61e2320c8cb7f2cea65ce72d627642e9d1b500e9", "message": "Merge branch 'master' of https://github.com/ibissource/iaf into extend_config_warnings", "committedDate": "2020-10-30T13:23:34Z", "type": "commit"}, {"oid": "96fbd50e06bc97a17e932b3ab4928f11843a6d54", "url": "https://github.com/ibissource/iaf/commit/96fbd50e06bc97a17e932b3ab4928f11843a6d54", "message": "finalize", "committedDate": "2020-10-30T15:09:07Z", "type": "commit"}, {"oid": "f4a06af80d67b6ff8d74b253698b678902edef09", "url": "https://github.com/ibissource/iaf/commit/f4a06af80d67b6ff8d74b253698b678902edef09", "message": "add adapter information to config warnings where applicable", "committedDate": "2020-11-02T08:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MTY2NA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516541664", "bodyText": "A configuration should not add a Global Warning, only configuration warnings. You're also displaying the objectname twice, see getObjectName(currObj, name).", "author": "nielsm5", "createdAt": "2020-11-03T09:52:51Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java", "diffHunk": "@@ -268,18 +267,28 @@ private String getObjectName(Object o, String name) {\n \t}\n \n \tprivate void addSetToDefaultConfigWarning(Object currObj, String name, String key, String value) {\n-\t\tif(!suppressDefaultValueWarnings) {\n+\t\tClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+\t\tif(!ConfigurationWarnings.isSuppressed(SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, null, classLoader)) {\n \t\t\tString mergedKey = getDigester().getCurrentElementName() + \"/\" + (name==null?\"\":name) + \"/\" + key;\n \t\t\tif (!configWarnings.containsDefaultValueException(mergedKey)) {\n-\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\");\n+\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\", SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, classLoader);\n \t\t\t}\n \t\t}\n \t}\n \n \tprivate void addConfigWarning(Object currObj, String name, String message) {\n+\t\taddConfigWarning(currObj, name, message, null, null);\n+\t}\n+\n+\tprivate void addConfigWarning(Object currObj, String name, String message, SuppressKeys key, ClassLoader cl) {\n \t\tLocator loc = getDigester().getDocumentLocator();\n \t\tString msg = \"line \"+loc.getLineNumber()+\", col \"+loc.getColumnNumber()+\": \"+getObjectName(currObj, name)+\": \"+message;\n-\t\tConfigurationWarnings.add(null, log, msg);\n+\t\tif(currObj instanceof INamedObject) {\n+\t\t\tConfigurationWarnings.add((INamedObject) currObj, log, msg);\n+\t\t} else { \n+\t\t\tConfigurationWarnings.addGlobalWarning(log, msg, key, cl);", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java b/core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java\nindex 969d8d8d6..87ecb3883 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java\n\n@@ -271,24 +270,20 @@ public abstract class AbstractSpringPoweredDigesterFactory extends AbstractObjec\n \t\tif(!ConfigurationWarnings.isSuppressed(SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, null, classLoader)) {\n \t\t\tString mergedKey = getDigester().getCurrentElementName() + \"/\" + (name==null?\"\":name) + \"/\" + key;\n \t\t\tif (!configWarnings.containsDefaultValueException(mergedKey)) {\n-\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\", SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, classLoader);\n+\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\");\n \t\t\t}\n \t\t}\n \t}\n \n \tprivate void addConfigWarning(Object currObj, String name, String message) {\n-\t\taddConfigWarning(currObj, name, message, null, null);\n-\t}\n-\n-\tprivate void addConfigWarning(Object currObj, String name, String message, SuppressKeys key, ClassLoader cl) {\n \t\tLocator loc = getDigester().getDocumentLocator();\n-\t\tString msg = \"line \"+loc.getLineNumber()+\", col \"+loc.getColumnNumber()+\": \"+getObjectName(currObj, name)+\": \"+message;\n \t\tif(currObj instanceof INamedObject) {\n+\t\t\tString msg = \"line \"+loc.getLineNumber()+\", col \"+loc.getColumnNumber()+\": \"+message;\n \t\t\tConfigurationWarnings.add((INamedObject) currObj, log, msg);\n \t\t} else { \n-\t\t\tConfigurationWarnings.addGlobalWarning(log, msg, key, cl);\n+\t\t\tString msg = \"line \"+loc.getLineNumber()+\", col \"+loc.getColumnNumber()+\": \"+getObjectName(currObj, name)+\": \"+message;\n+\t\t\tConfigurationWarnings.add(null, log, msg);\n \t\t}\n-\t\t\n \t}\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MjU0Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516542547", "bodyText": "This should be in the log? not in the warning", "author": "nielsm5", "createdAt": "2020-11-03T09:54:10Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -61,8 +71,16 @@ public static void add(INamedObject object, Logger log, String message) {\n \t/**\n \t * Adds configuration warning in case warning is not suppressed\n \t */\n-\tpublic static void add(IConfigurable object, Logger log, String message, String suppressionKey, IAdapter adapter) {\n+\tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n+\t\t\tif(adapter != null) {\n+\t\t\t\tmessage = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\tmessage += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t}\n+\t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\tmessage += \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t}", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\nindex a19aaf78f..6e83ecabe 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n\n@@ -73,15 +73,18 @@ public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \t */\n \tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n+\t\t\tadd(object, log, message, null);\n+\t\t\t// provide suppression hint as info \n \t\t\tif(adapter != null) {\n-\t\t\t\tmessage = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\tString messageWithHint = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n \t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n-\t\t\t\t\tmessage += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\tmessageWithHint += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n \t\t\t\t}\n+\t\t\t\tlog.info(messageWithHint);\n \t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n-\t\t\t\tmessage += \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\tString messageWithHint = message + \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\tlog.info(messageWithHint);\n \t\t\t}\n-\t\t\tadd(object, log, message, null);\n \t\t}\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MzIzNA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516543234", "bodyText": "should be false", "author": "nielsm5", "createdAt": "2020-11-03T09:55:07Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\nindex d212a2504..717a7968a 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n\n@@ -25,10 +25,10 @@ import lombok.Getter;\n  */\n public enum SuppressKeys {\n \n-\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\"),\n \tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\", true),\n \tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\", true),\n-\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\", true),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\"),\n \tINTEGRITY_CHECK_SUPPRESS_KEY(\"warnings.suppress.integrityCheck\");\n \n \tprivate @Getter String key;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MzMwMw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516543303", "bodyText": "should be false", "author": "nielsm5", "createdAt": "2020-11-03T09:55:13Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),\n+\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\", true),\n+\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\", true),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\", true),", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\nindex d212a2504..717a7968a 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java\n\n@@ -25,10 +25,10 @@ import lombok.Getter;\n  */\n public enum SuppressKeys {\n \n-\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\"),\n \tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\", true),\n \tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\", true),\n-\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\", true),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\"),\n \tINTEGRITY_CHECK_SUPPRESS_KEY(\"warnings.suppress.integrityCheck\");\n \n \tprivate @Getter String key;\n"}}, {"oid": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "url": "https://github.com/ibissource/iaf/commit/834a01f6d27b63ba5a6dae6032585949eb4d10b9", "message": "work on the feedback", "committedDate": "2020-11-04T08:03:23Z", "type": "commit"}, {"oid": "d120a41241bad390b7b6988608afa997190dbf2d", "url": "https://github.com/ibissource/iaf/commit/d120a41241bad390b7b6988608afa997190dbf2d", "message": "log hint in case info enabled", "committedDate": "2020-11-04T09:37:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NTI5Mw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518585293", "bodyText": "Now msg is logged twice: first without the hint in addGlobalWarning(), then here with the hint.\nThis should not happen. The message should be logged only once, (with or without hint, depending on log.isInfoEnabled())", "author": "gvanbrakel", "createdAt": "2020-11-06T08:12:22Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -33,9 +33,19 @@\n public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \tprivate static ConfigurationWarnings self = null;\n \tprivate Configuration activeConfiguration = null;\n-\tpublic static final String SQL_INJECTION_SUPPRESS_KEY = \"warnings.suppress.sqlInjections\";\n-\tpublic static final String DEPRECATION_SUPPRESS_KEY=\"warnings.suppress.deprecated\";\n-\tpublic static final String DEFAULT_VALUE_SUPPRESS_KEY = \"warnings.suppress.defaultvalue\";\n+\n+\tpublic static void addGlobalWarning(Logger log, String msg, SuppressKeys suppressionKey, ClassLoader classLoader) {\n+\t\tif(suppressionKey == null) {\n+\t\t\taddGlobalWarning(log, msg, null);\n+\t\t} else if(!isSuppressed(suppressionKey, null, classLoader)) {\n+\t\t\taddGlobalWarning(log, msg, null);\n+\t\t\t// provide suppression hint as info\n+\t\t\tif(log.isInfoEnabled() && suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\tString msgWithHint = msg + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\tlog.info(msgWithHint);\n+\t\t\t}", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc800730edcbb425773074d463d896ce7a1f12eb", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\nindex 83903825d..7f5e9cd06 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n\n@@ -40,13 +40,18 @@ public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \t\t} else if(!isSuppressed(suppressionKey, null, classLoader)) {\n \t\t\taddGlobalWarning(log, msg, null);\n \t\t\t// provide suppression hint as info\n+\t\t\tString hint = null;\n \t\t\tif(log.isInfoEnabled() && suppressionKey.isAllowGlobalSuppression()) {\n-\t\t\t\tString msgWithHint = msg + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n-\t\t\t\tlog.info(msgWithHint);\n+\t\t\t\thint = \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n \t\t\t}\n+\t\t\taddGlobalWarning(log, msg, null, hint);\n \t\t}\n \t}\n \n+\tprivate static void addGlobalWarning(Logger log, String msg, Throwable t, String messageSuffixForLog) {\n+\t\tgetInstance().addConfigurationIndependentWarning(log, msg, t, messageSuffixForLog, (t==null));\n+\t}\n+\n \t/**\n \t * Add configuration independent warning\n \t */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NTc5MA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518585790", "bodyText": "Now msg is logged twice: first without the hint in add(), then here with the hint.\nThis should not happen. The message should be logged only once, (with or without hint, depending on log.isInfoEnabled())", "author": "gvanbrakel", "createdAt": "2020-11-06T08:13:30Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -61,9 +71,22 @@ public static void add(INamedObject object, Logger log, String message) {\n \t/**\n \t * Adds configuration warning in case warning is not suppressed\n \t */\n-\tpublic static void add(IConfigurable object, Logger log, String message, String suppressionKey, IAdapter adapter) {\n+\tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n \t\t\tadd(object, log, message, null);\n+\t\t\t// provide suppression hint as info \n+\t\t\tif(log.isInfoEnabled()) {\n+\t\t\t\tif(adapter != null) {\n+\t\t\t\t\tString messageWithHint = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\t\tmessageWithHint += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\t}\n+\t\t\t\t\tlog.info(messageWithHint);\n+\t\t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\tString messageWithHint = message + \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\tlog.info(messageWithHint);", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc800730edcbb425773074d463d896ce7a1f12eb", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\nindex 83903825d..7f5e9cd06 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java\n\n@@ -73,29 +78,33 @@ public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \t */\n \tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n-\t\t\tadd(object, log, message, null);\n \t\t\t// provide suppression hint as info \n+\t\t\tString hint = null;\n \t\t\tif(log.isInfoEnabled()) {\n \t\t\t\tif(adapter != null) {\n-\t\t\t\t\tString messageWithHint = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\t\thint = \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n \t\t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n-\t\t\t\t\t\tmessageWithHint += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\t\thint += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n \t\t\t\t\t}\n-\t\t\t\t\tlog.info(messageWithHint);\n \t\t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n-\t\t\t\t\tString messageWithHint = message + \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n-\t\t\t\t\tlog.info(messageWithHint);\n+\t\t\t\t\thint = \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n \t\t\t\t}\n \t\t\t}\n+\t\t\tadd(object, log, message, null, hint);\n \t\t}\n \t}\n \n+\tprivate static void add(IConfigurable object, Logger log, String message, Throwable t, String messageSuffixForLog) {\n+\t\tString msg = (object==null?\"\":ClassUtils.nameOf(object) +\" [\"+object.getName()+\"]\")+\" \"+message;\n+\t\tgetInstance().doAdd(log, msg, t, messageSuffixForLog);\n+\t}\n+\n \t/**\n \t * Add configuration warning with INamedObject prefix and log the exception stack\n \t */\n \tpublic static void add(INamedObject object, Logger log, String message, Throwable t) {\n \t\tString msg = (object==null?\"\":ClassUtils.nameOf(object) +\" [\"+object.getName()+\"]\")+\" \"+message;\n-\t\tgetInstance().doAdd(log, msg, t);\n+\t\tgetInstance().doAdd(log, msg, t, null);\n \t}\n \n \tpublic static synchronized ConfigurationWarnings getInstance() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4Njk1MQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518586951", "bodyText": "When it extends SenderBase, it is not necessary to explicitly implement ISender, that comes with SenderBase", "author": "gvanbrakel", "createdAt": "2020-11-06T08:16:05Z", "path": "core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java", "diffHunk": "@@ -39,9 +40,8 @@\n  * @author Gerrit van Brakel\n  * @since 4.2\n  */\n-public class IbisWebServiceSender implements ISender, HasPhysicalDestination {\n+public class IbisWebServiceSender extends SenderBase implements ISender, HasPhysicalDestination {", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a45ef9e400dc4e03cf2c76eee962cab13a438a49", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java b/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\nindex 75ff4bcc4..e86b5aaab 100644\n--- a/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java\n\n@@ -40,7 +39,7 @@ import nl.nn.adapterframework.util.AppConstants;\n  * @author Gerrit van Brakel\n  * @since 4.2\n  */\n-public class IbisWebServiceSender extends SenderBase implements ISender, HasPhysicalDestination {\n+public class IbisWebServiceSender extends SenderBase implements HasPhysicalDestination {\n \n \tprivate String ibisHost = \"localhost\";\n \tprivate String ibisInstance = null;\n"}}, {"oid": "cc800730edcbb425773074d463d896ce7a1f12eb", "url": "https://github.com/ibissource/iaf/commit/cc800730edcbb425773074d463d896ce7a1f12eb", "message": "provide hint with the message in the same log line", "committedDate": "2020-11-06T11:08:39Z", "type": "commit"}, {"oid": "a45ef9e400dc4e03cf2c76eee962cab13a438a49", "url": "https://github.com/ibissource/iaf/commit/a45ef9e400dc4e03cf2c76eee962cab13a438a49", "message": "remove redundant inheritance in the subclass", "committedDate": "2020-11-06T11:10:59Z", "type": "commit"}, {"oid": "9ef6d9f625fffd9fc41cbe0343c930a2044b2b27", "url": "https://github.com/ibissource/iaf/commit/9ef6d9f625fffd9fc41cbe0343c930a2044b2b27", "message": "Merge branch 'master' into extend_config_warnings", "committedDate": "2020-11-06T15:52:41Z", "type": "commit"}]}