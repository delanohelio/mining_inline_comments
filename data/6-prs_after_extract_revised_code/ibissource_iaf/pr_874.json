{"pr_number": 874, "pr_title": "Add Hex as binary to text encoding option for HashPipe", "pr_createdAt": "2020-06-24T08:28:10Z", "pr_url": "https://github.com/ibissource/iaf/pull/874", "timeline": [{"oid": "06b744e156d590c199cf96561463354cbbd6c9b5", "url": "https://github.com/ibissource/iaf/commit/06b744e156d590c199cf96561463354cbbd6c9b5", "message": "Add Hex as binary to text encoding option", "committedDate": "2020-06-24T08:25:11Z", "type": "commit"}, {"oid": "81c98c466a82a55f375e60590fb8c94e7502daeb", "url": "https://github.com/ibissource/iaf/commit/81c98c466a82a55f375e60590fb8c94e7502daeb", "message": "Fix Codacy issues", "committedDate": "2020-06-24T14:13:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjMxNg==", "url": "https://github.com/ibissource/iaf/pull/874#discussion_r445986316", "bodyText": "Ik zou ook graag hierbij een test zien dat er een duidelijke foutmelding is.", "author": "gvanbrakel", "createdAt": "2020-06-26T06:11:00Z", "path": "core/src/test/java/nl/nn/adapterframework/pipes/HashPipeTest.java", "diffHunk": "@@ -47,6 +47,15 @@ public void wrongAlgorithm() throws ConfigurationException, PipeStartException,\n \t\tpipe.configure();\n \t}\n \n+\t@Test\n+\tpublic void wrongBinaryToTextEncoding() throws ConfigurationException, PipeStartException, IOException, PipeRunException {\n+\t\texception.expect(ConfigurationException.class);", "originalCommit": "81c98c466a82a55f375e60590fb8c94e7502daeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA5NTU4MA==", "url": "https://github.com/ibissource/iaf/pull/874#discussion_r446095580", "bodyText": "Gedaan, ook voor de wrongAlgorithm-test.", "author": "ricardovh", "createdAt": "2020-06-26T10:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjMxNg=="}], "type": "inlineReview", "revised_code": {"commit": "c27e4455449b6422e52d69cf836f177f9c54a3ab", "chunk": "diff --git a/core/src/test/java/nl/nn/adapterframework/pipes/HashPipeTest.java b/core/src/test/java/nl/nn/adapterframework/pipes/HashPipeTest.java\nindex 331c38f0f..cbcd11cdd 100644\n--- a/core/src/test/java/nl/nn/adapterframework/pipes/HashPipeTest.java\n+++ b/core/src/test/java/nl/nn/adapterframework/pipes/HashPipeTest.java\n\n@@ -37,10 +37,11 @@ public class HashPipeTest extends PipeTestBase<HashPipe> {\n \tpublic HashPipe createPipe() {\n \t\treturn new HashPipe();\n \t}\n-\n+\t\n \t@Test\n \tpublic void wrongAlgorithm() throws ConfigurationException, PipeStartException, IOException, PipeRunException {\n \t\texception.expect(ConfigurationException.class);\n+\t\texception.expectMessage(\"illegal value for algorithm [dummy], must be one of \" + pipe.algorithms.toString());\n \n \t\tpipe.setSecret(\"Potato\");\n \t\tpipe.setAlgorithm(\"dummy\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4OTQwNw==", "url": "https://github.com/ibissource/iaf/pull/874#discussion_r445989407", "bodyText": "Om ook zonder veel geheugengebruik hashes van grote files te kunnen bepalen zou het goed zijn om hier geen message.asByteArray() te gebruiken, maar een loop met message.asInputStream()", "author": "gvanbrakel", "createdAt": "2020-06-26T06:21:11Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java", "diffHunk": "@@ -94,7 +101,16 @@ public PipeRunResult doPipe (Message message, IPipeLineSession session) throws P\n \t\t\tSecretKeySpec secretkey = new SecretKeySpec(cfSecret.getBytes(getCharset()), \"algorithm\");\n \t\t\tmac.init(secretkey);\n \n-\t\t\tString hash = Base64.encodeBase64String(mac.doFinal(message.asByteArray()));\n+\t\t\tString hash = \"\";\n+\t\t\tif (\"base64\".equalsIgnoreCase(getBinaryToTextEncoding())) {\n+\t\t\t\thash = Base64.encodeBase64String(mac.doFinal(message.asByteArray()));\n+\t\t\t} else if (\"hex\".equalsIgnoreCase(getBinaryToTextEncoding())) {\n+\t\t\t\thash = Hex.encodeHexString(mac.doFinal(message.asByteArray()));", "originalCommit": "81c98c466a82a55f375e60590fb8c94e7502daeb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eeac251ba9644f5ccaf068eab69c0a9d62392e0e", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java b/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\nindex ccf9b1e77..f00201273 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\n\n@@ -101,11 +102,18 @@ public class HashPipe extends FixedForwardPipe {\n \t\t\tSecretKeySpec secretkey = new SecretKeySpec(cfSecret.getBytes(getCharset()), \"algorithm\");\n \t\t\tmac.init(secretkey);\n \n+\t\t\tInputStream inputStream = message.asInputStream();\n+\t\t\tbyte[] byteArray = new byte[1024];\n+\t\t\tint readLength;\n+\t\t\twhile ((readLength = inputStream.read(byteArray)) != -1) {\n+\t\t\t\tmac.update(byteArray, 0, readLength);\n+\t\t\t}\n+\t\t\t\n \t\t\tString hash = \"\";\n \t\t\tif (\"base64\".equalsIgnoreCase(getBinaryToTextEncoding())) {\n-\t\t\t\thash = Base64.encodeBase64String(mac.doFinal(message.asByteArray()));\n+\t\t\t\thash = Base64.encodeBase64String(mac.doFinal());\n \t\t\t} else if (\"hex\".equalsIgnoreCase(getBinaryToTextEncoding())) {\n-\t\t\t\thash = Hex.encodeHexString(mac.doFinal(message.asByteArray()));\n+\t\t\t\thash = Hex.encodeHexString(mac.doFinal());\n \t\t\t}else {\n \t\t\t\t// Should never happen, as a ConfigurationException is thrown during configuration if another method is tried\n \t\t\t\tthrow new PipeRunException(this, getLogPrefix(session) + \"error determining binaryToText method\");\n"}}, {"oid": "594ede25869116abfd287f8b0d5608d4305d569f", "url": "https://github.com/ibissource/iaf/commit/594ede25869116abfd287f8b0d5608d4305d569f", "message": "Change lists to protected for accessing in tests", "committedDate": "2020-06-26T07:26:57Z", "type": "commit"}, {"oid": "c27e4455449b6422e52d69cf836f177f9c54a3ab", "url": "https://github.com/ibissource/iaf/commit/c27e4455449b6422e52d69cf836f177f9c54a3ab", "message": "Make configuration exceptions in line with other exceptions and test message", "committedDate": "2020-06-26T07:29:25Z", "type": "commit"}, {"oid": "eeac251ba9644f5ccaf068eab69c0a9d62392e0e", "url": "https://github.com/ibissource/iaf/commit/eeac251ba9644f5ccaf068eab69c0a9d62392e0e", "message": "Use loop over inputstream to convert to hash", "committedDate": "2020-06-26T10:11:59Z", "type": "commit"}, {"oid": "e2a258fa305b80ae78d005fe181bb912e9d4ffb6", "url": "https://github.com/ibissource/iaf/commit/e2a258fa305b80ae78d005fe181bb912e9d4ffb6", "message": "Add test cases for large files", "committedDate": "2020-06-26T10:12:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMTM2OA==", "url": "https://github.com/ibissource/iaf/pull/874#discussion_r446801368", "bodyText": "Je moet als je klaar bent met de inputStream hem wel sluiten.\nJe kan daar het beste een 'try with resource' voor gebruiken:\ntry (InputStream inputStream = message.asInputStream()) {\n ...\n}", "author": "gvanbrakel", "createdAt": "2020-06-29T06:35:40Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java", "diffHunk": "@@ -94,7 +102,23 @@ public PipeRunResult doPipe (Message message, IPipeLineSession session) throws P\n \t\t\tSecretKeySpec secretkey = new SecretKeySpec(cfSecret.getBytes(getCharset()), \"algorithm\");\n \t\t\tmac.init(secretkey);\n \n-\t\t\tString hash = Base64.encodeBase64String(mac.doFinal(message.asByteArray()));\n+\t\t\tInputStream inputStream = message.asInputStream();\n+\t\t\tbyte[] byteArray = new byte[1024];\n+\t\t\tint readLength;\n+\t\t\twhile ((readLength = inputStream.read(byteArray)) != -1) {\n+\t\t\t\tmac.update(byteArray, 0, readLength);\n+\t\t\t}", "originalCommit": "e2a258fa305b80ae78d005fe181bb912e9d4ffb6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16e51a07a5d231056e33975e8f3867725b45b516", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java b/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\nindex f00201273..0488a2f0a 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/HashPipe.java\n\n@@ -102,11 +102,12 @@ public class HashPipe extends FixedForwardPipe {\n \t\t\tSecretKeySpec secretkey = new SecretKeySpec(cfSecret.getBytes(getCharset()), \"algorithm\");\n \t\t\tmac.init(secretkey);\n \n-\t\t\tInputStream inputStream = message.asInputStream();\n-\t\t\tbyte[] byteArray = new byte[1024];\n-\t\t\tint readLength;\n-\t\t\twhile ((readLength = inputStream.read(byteArray)) != -1) {\n-\t\t\t\tmac.update(byteArray, 0, readLength);\n+\t\t\ttry (InputStream inputStream = message.asInputStream()) {\n+\t\t\t\tbyte[] byteArray = new byte[1024];\n+\t\t\t\tint readLength;\n+\t\t\t\twhile ((readLength = inputStream.read(byteArray)) != -1) {\n+\t\t\t\t\tmac.update(byteArray, 0, readLength);\n+\t\t\t\t}\n \t\t\t}\n \t\t\t\n \t\t\tString hash = \"\";\n"}}, {"oid": "16e51a07a5d231056e33975e8f3867725b45b516", "url": "https://github.com/ibissource/iaf/commit/16e51a07a5d231056e33975e8f3867725b45b516", "message": "Close inputstream", "committedDate": "2020-06-29T06:52:58Z", "type": "commit"}]}