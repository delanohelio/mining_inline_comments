{"pr_number": 1359, "pr_title": "Impl #1340 ErrorMessageFormatter returning Message instead of String", "pr_createdAt": "2020-12-23T16:06:11Z", "pr_url": "https://github.com/ibissource/iaf/pull/1359", "timeline": [{"oid": "c194fe34a1eb992327ec51776cba8af2e400bc30", "url": "https://github.com/ibissource/iaf/commit/c194fe34a1eb992327ec51776cba8af2e400bc30", "message": "Impl #1340 ErrorMessageFormatter returning Message instead of String", "committedDate": "2020-12-23T16:05:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc4MzEyNQ==", "url": "https://github.com/ibissource/iaf/pull/1359#discussion_r550783125", "bodyText": "Dit kan ook messageToReturn zijn toch? Ik zie niet in waarom onderstaande XmlUtils.transformXml(...) niet met een message zou kunnen.", "author": "nielsm5", "createdAt": "2021-01-01T16:24:39Z", "path": "core/src/main/java/nl/nn/adapterframework/errormessageformatters/FixedErrorMessage.java", "diffHunk": "@@ -58,7 +59,11 @@ public String format(String errorMessage, Throwable t, INamedObject location, Me\n \t\t\t}\n \t\t}  \n \t\tif (StringUtils.isEmpty(stringToReturn)) {\n-\t\t\tstringToReturn = super.format(errorMessage, t, location, originalMessage, messageId, receivedTime);\n+\t\t\ttry {\n+\t\t\t\tstringToReturn = super.format(errorMessage, t, location, originalMessage, messageId, receivedTime).asString();", "originalCommit": "c194fe34a1eb992327ec51776cba8af2e400bc30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "592f12ed83b2be0655088fdd82d439bc4979886c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/errormessageformatters/FixedErrorMessage.java b/core/src/main/java/nl/nn/adapterframework/errormessageformatters/FixedErrorMessage.java\nindex 4d1eb4725..321a17ac4 100644\n--- a/core/src/main/java/nl/nn/adapterframework/errormessageformatters/FixedErrorMessage.java\n+++ b/core/src/main/java/nl/nn/adapterframework/errormessageformatters/FixedErrorMessage.java\n\n@@ -47,44 +47,44 @@ public class FixedErrorMessage extends ErrorMessageFormatter {\n \t@Override\n \tpublic Message format(String errorMessage, Throwable t, INamedObject location, Message originalMessage, String messageId, long receivedTime) {\n \n-\t\tString stringToReturn = getReturnString();\n-\t\tif (stringToReturn==null) {\n-\t\t\tstringToReturn=\"\";\n+\t\tMessage messageToReturn = new Message(getReturnString());\n+\t\tif (messageToReturn.isEmpty()) {\n+\t\t\tmessageToReturn=new Message(\"\");\n \t\t}\n \t\tif (StringUtils.isNotEmpty(getFileName())) {\n \t\t\ttry {\n-\t\t\t\tstringToReturn += Misc.resourceToString(ClassUtils.getResourceURL(classLoader, getFileName()), SystemUtils.LINE_SEPARATOR);\n+\t\t\t\tmessageToReturn = new Message(messageToReturn.asString() + Misc.resourceToString(ClassUtils.getResourceURL(classLoader, getFileName()), SystemUtils.LINE_SEPARATOR));\n \t\t\t} catch (Throwable e) {\n \t\t\t\tlog.error(\"got exception loading error message file [\" + getFileName() + \"]\", e);\n \t\t\t}\n-\t\t}  \n-\t\tif (StringUtils.isEmpty(stringToReturn)) {\n+\t\t}\n+\t\tif (messageToReturn.isEmpty()) {\n+\t\t\tmessageToReturn = super.format(errorMessage, t, location, originalMessage, messageId, receivedTime);\n+\t\t}\n+\n+\t\tif (StringUtils.isNotEmpty(getReplaceFrom())) {\n \t\t\ttry {\n-\t\t\t\tstringToReturn = super.format(errorMessage, t, location, originalMessage, messageId, receivedTime).asString();\n+\t\t\t\tmessageToReturn = new Message(Misc.replace(messageToReturn.asString(), getReplaceFrom(), getReplaceTo()));\n \t\t\t} catch (IOException e) {\n \t\t\t\tlog.error(\"got error formatting errorMessage\", e);\n \t\t\t}\n \t\t}\n \n-\t\tif (StringUtils.isNotEmpty(getReplaceFrom())) {\n-\t\t\tstringToReturn = Misc.replace(stringToReturn, getReplaceFrom(), getReplaceTo() );\n-\t\t}\n-\n \t\tif (StringUtils.isNotEmpty(styleSheetName)) {\n \t\t\tURL xsltSource = ClassUtils.getResourceURL(classLoader, styleSheetName);\n \t\t\tif (xsltSource!=null) {\n \t\t\t\ttry{\n \t\t\t\t\tString xsltResult = null;\n \t\t\t\t\tTransformer transformer = XmlUtils.createTransformer(xsltSource);\n-\t\t\t\t\txsltResult = XmlUtils.transformXml(transformer, stringToReturn);\n-\t\t\t\t\tstringToReturn = xsltResult;\n+\t\t\t\t\txsltResult = XmlUtils.transformXml(transformer, messageToReturn.asSource());\n+\t\t\t\t\tmessageToReturn = new Message(xsltResult);\n \t\t\t\t} catch (Throwable e) {\n \t\t\t\t\tlog.error(\"got error transforming resource [\" + xsltSource.toString() + \"] from [\" + styleSheetName + \"]\", e);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\n-\t\treturn new Message(stringToReturn);\n+\t\treturn messageToReturn;\n \t}\n \n \n"}}, {"oid": "592f12ed83b2be0655088fdd82d439bc4979886c", "url": "https://github.com/ibissource/iaf/commit/592f12ed83b2be0655088fdd82d439bc4979886c", "message": "use Message in FixedErrorMessage", "committedDate": "2021-01-04T08:15:25Z", "type": "commit"}, {"oid": "25caaf3b8234ab463b98158fd76ba057bdcbb711", "url": "https://github.com/ibissource/iaf/commit/25caaf3b8234ab463b98158fd76ba057bdcbb711", "message": "remove unused method", "committedDate": "2021-01-04T09:06:02Z", "type": "commit"}, {"oid": "e919da5783e3f9403bae980ec79198a3e9a056e1", "url": "https://github.com/ibissource/iaf/commit/e919da5783e3f9403bae980ec79198a3e9a056e1", "message": "Add change to PR", "committedDate": "2021-01-04T09:14:47Z", "type": "commit"}]}