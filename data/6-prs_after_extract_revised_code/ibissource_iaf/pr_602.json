{"pr_number": 602, "pr_title": "configuration to set proxy to AmazonS3FileSystem class was added", "pr_createdAt": "2020-04-14T10:15:03Z", "pr_url": "https://github.com/ibissource/iaf/pull/602", "timeline": [{"oid": "a17c86f0137dc9d62bd1b34df98c4aaa137de641", "url": "https://github.com/ibissource/iaf/commit/a17c86f0137dc9d62bd1b34df98c4aaa137de641", "message": "configuration to set proxy to AmazonS3FileSystem class was added", "committedDate": "2020-04-14T10:11:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NDk1MQ==", "url": "https://github.com/ibissource/iaf/pull/602#discussion_r408864951", "bodyText": "I can imagine that you should only add the client configuration if the proxy configuration has really been set,\nand that if no proxy is configured, it should not be added.", "author": "gvanbrakel", "createdAt": "2020-04-15T14:00:23Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java", "diffHunk": "@@ -110,7 +114,8 @@ public void open() {\n \t\tAmazonS3ClientBuilder s3ClientBuilder = AmazonS3ClientBuilder.standard()\n \t\t\t\t.withChunkedEncodingDisabled(isChunkedEncodingDisabled())\n \t\t\t\t.withForceGlobalBucketAccessEnabled(isForceGlobalBucketAccessEnabled()).withRegion(getClientRegion())\n-\t\t\t\t.withCredentials(new AWSStaticCredentialsProvider(awsCreds));\n+\t\t\t\t.withCredentials(new AWSStaticCredentialsProvider(awsCreds))\n+\t\t\t\t.withClientConfiguration(this.getProxyConfig());", "originalCommit": "a17c86f0137dc9d62bd1b34df98c4aaa137de641", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg3NDM2NA==", "url": "https://github.com/ibissource/iaf/pull/602#discussion_r408874364", "bodyText": "if getProxyConfig is null, the connection will be without proxy. we are not going to get a nullPointerException o something like that.", "author": "ccamiletti", "createdAt": "2020-04-15T14:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NDk1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NTA0Mg==", "url": "https://github.com/ibissource/iaf/pull/602#discussion_r408865042", "bodyText": "You'll have to create two separate setters for this: one for proxyHost and one for proxyPort.\nCreating these two setters results in the possibility to set values in the configuration.xml, like:\nproxyHost=\"hq.proxy.insim.biz\" proxyPort=\"9400\"", "author": "gvanbrakel", "createdAt": "2020-04-15T14:00:29Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java", "diffHunk": "@@ -603,5 +608,19 @@ public void setBucketCreationEnabled(boolean bucketCreationEnabled) {\n \tpublic boolean isBucketExistsThrowException() {\n \t\treturn bucketExistsThrowException;\n \t}\n+\n+\tpublic ClientConfiguration getProxyConfig() {\n+\t\treturn proxyConfig;\n+\t}\n+\n+\tpublic void setProxyConfig(String proxyHost, Integer proxyPort) {\n+\t\tif (proxyHost != null && proxyPort != null) {\n+\t\t\tproxyConfig = new ClientConfiguration();\n+\t\t\tproxyConfig.setProtocol(Protocol.HTTPS);\n+\t\t\tproxyConfig.setProxyHost(proxyHost);\n+\t\t\tproxyConfig.setProxyPort(proxyPort);\n+\t\t}\n+\t}", "originalCommit": "a17c86f0137dc9d62bd1b34df98c4aaa137de641", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg3NDQwMA==", "url": "https://github.com/ibissource/iaf/pull/602#discussion_r408874400", "bodyText": "ok, i will change it", "author": "ccamiletti", "createdAt": "2020-04-15T14:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NTA0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "67908d688df737151278e3f51b6803cd3d1ce434", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java\nindex 20d79ecfe..a1726c35e 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/AmazonS3FileSystem.java\n\n@@ -610,16 +611,30 @@ public class AmazonS3FileSystem implements IWritableFileSystem<S3Object> {\n \t}\n \n \tpublic ClientConfiguration getProxyConfig() {\n-\t\treturn proxyConfig;\n-\t}\n-\n-\tpublic void setProxyConfig(String proxyHost, Integer proxyPort) {\n-\t\tif (proxyHost != null && proxyPort != null) {\n+\t\tClientConfiguration proxyConfig = null;\n+\t\tif (this.getProxyHost() != null && this.getProxyPort() != null) {\n \t\t\tproxyConfig = new ClientConfiguration();\n \t\t\tproxyConfig.setProtocol(Protocol.HTTPS);\n-\t\t\tproxyConfig.setProxyHost(proxyHost);\n-\t\t\tproxyConfig.setProxyPort(proxyPort);\n+\t\t\tproxyConfig.setProxyHost(this.getProxyHost());\n+\t\t\tproxyConfig.setProxyPort(this.getProxyPort());\n \t\t}\n+\t\treturn proxyConfig;\n+\t}\n+\n+\tpublic String getProxyHost() {\n+\t\treturn proxyHost;\n+\t}\n+\n+\tpublic void setProxyHost(String proxyHost) {\n+\t\tthis.proxyHost = proxyHost;\n+\t}\n+\n+\tpublic Integer getProxyPort() {\n+\t\treturn proxyPort;\n+\t}\n+\n+\tpublic void setProxyPort(Integer proxyPort) {\n+\t\tthis.proxyPort = proxyPort;\n \t}\n \n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NzE2Mg==", "url": "https://github.com/ibissource/iaf/pull/602#discussion_r408867162", "bodyText": "Could you show in a test that it works both with and without a proxy configured?", "author": "gvanbrakel", "createdAt": "2020-04-15T14:03:24Z", "path": "test-integration/src/test/java/nl/nn/adapterframework/filesystem/AmazonS3SenderTest.java", "diffHunk": "@@ -78,6 +81,7 @@ public AmazonS3Sender createFileSystemSender(){\n \t\ts3.setAccessKey(accessKey);\n \t\ts3.setSecretKey(secretKey);\n \t\ts3.setBucketName(bucketName);\n+\t\ts3.setProxyConfig(proxyHost, proxyPort);\n \t\treturn s3;\n \t}\n ", "originalCommit": "a17c86f0137dc9d62bd1b34df98c4aaa137de641", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67908d688df737151278e3f51b6803cd3d1ce434", "chunk": "diff --git a/test-integration/src/test/java/nl/nn/adapterframework/filesystem/AmazonS3SenderTest.java b/test-integration/src/test/java/nl/nn/adapterframework/filesystem/AmazonS3SenderTest.java\nindex 921040804..083a776a8 100644\n--- a/test-integration/src/test/java/nl/nn/adapterframework/filesystem/AmazonS3SenderTest.java\n+++ b/test-integration/src/test/java/nl/nn/adapterframework/filesystem/AmazonS3SenderTest.java\n\n@@ -81,7 +81,8 @@ public class AmazonS3SenderTest extends FileSystemSenderTest<AmazonS3Sender, S3O\n \t\ts3.setAccessKey(accessKey);\n \t\ts3.setSecretKey(secretKey);\n \t\ts3.setBucketName(bucketName);\n-\t\ts3.setProxyConfig(proxyHost, proxyPort);\n+\t\ts3.setProxyHost(proxyHost);\n+\t\ts3.setProxyPort(proxyPort);\n \t\treturn s3;\n \t}\n \n"}}, {"oid": "67908d688df737151278e3f51b6803cd3d1ce434", "url": "https://github.com/ibissource/iaf/commit/67908d688df737151278e3f51b6803cd3d1ce434", "message": "attributes ProxyHost and ProxyPort were added", "committedDate": "2020-04-15T16:27:38Z", "type": "commit"}, {"oid": "9c525394ff64331139468d80a8e1915b30b5c2bd", "url": "https://github.com/ibissource/iaf/commit/9c525394ff64331139468d80a8e1915b30b5c2bd", "message": "creating setter and getters proxy host and port", "committedDate": "2020-04-16T07:48:44Z", "type": "commit"}, {"oid": "db50c2738e0953a09f150872d2f5aad1eb4a727c", "url": "https://github.com/ibissource/iaf/commit/db50c2738e0953a09f150872d2f5aad1eb4a727c", "message": "remove accessKey", "committedDate": "2020-04-16T09:27:03Z", "type": "commit"}, {"oid": "e29dab8d9eccc88c53094b3d25e5481e9aab0d7e", "url": "https://github.com/ibissource/iaf/commit/e29dab8d9eccc88c53094b3d25e5481e9aab0d7e", "message": "Merge branch 'master' into http_proxy_as3file", "committedDate": "2020-04-22T06:04:13Z", "type": "commit"}]}