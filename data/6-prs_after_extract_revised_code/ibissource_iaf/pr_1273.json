{"pr_number": 1273, "pr_title": "Use log4j for logging configs", "pr_createdAt": "2020-11-18T14:19:57Z", "pr_url": "https://github.com/ibissource/iaf/pull/1273", "timeline": [{"oid": "26ad5ab25ed6b51e0a29a052d946b8579769c5ef", "url": "https://github.com/ibissource/iaf/commit/26ad5ab25ed6b51e0a29a052d946b8579769c5ef", "message": "Use log4j for logging configs", "committedDate": "2020-11-18T14:19:36Z", "type": "commit"}, {"oid": "213b1673be0a830ef7c5beef0a7768730236aaca", "url": "https://github.com/ibissource/iaf/commit/213b1673be0a830ef7c5beef0a7768730236aaca", "message": "hardcoded 1mb size", "committedDate": "2020-11-18T14:23:57Z", "type": "commit"}, {"oid": "8c48e59eb335a55dde8e7fad5d9f10b1a36137af", "url": "https://github.com/ibissource/iaf/commit/8c48e59eb335a55dde8e7fad5d9f10b1a36137af", "message": "keep the formatting in xml", "committedDate": "2020-11-18T15:24:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1Mjc1Mg==", "url": "https://github.com/ibissource/iaf/pull/1273#discussion_r526252752", "bodyText": "Why do we need a special layout for this?", "author": "gvanbrakel", "createdAt": "2020-11-18T17:01:59Z", "path": "core/src/main/java/nl/nn/adapterframework/logging/IbisConfigurationXmlLayout.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.logging;\n+\n+import java.nio.charset.Charset;\n+import java.util.List;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.Configuration;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.config.plugins.PluginAttribute;\n+import org.apache.logging.log4j.core.config.plugins.PluginConfiguration;\n+import org.apache.logging.log4j.core.config.plugins.PluginFactory;\n+import org.apache.logging.log4j.message.Message;\n+import org.jdom2.Attribute;\n+import org.jdom2.Document;\n+import org.jdom2.Element;\n+import org.jdom2.Namespace;\n+import org.jdom2.output.Format;\n+import org.jdom2.output.XMLOutputter;\n+\n+/**\n+ * Implementation of {@link IbisMaskingLayout} to serialize given log events \n+ * in the following format: <br/>\n+ * <pre> {@code\n+ * <log4j:event timestamp=\"1605705678703\" thread=\"thread-1\">\n+ * <log4j:configuration>my message here</log4j:configuration>\n+ * </log4j:event>\n+ * } </pre>\n+ */\n+@Plugin(name = \"IbisConfigurationXmlLayout\", category = \"Core\", elementType = \"layout\", printObject = true)\n+public class IbisConfigurationXmlLayout extends IbisMaskingLayout {", "originalCommit": "8c48e59eb335a55dde8e7fad5d9f10b1a36137af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f808dd17d7d8ef5bc14335b682c33062aec94fcf", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/logging/IbisConfigurationXmlLayout.java b/core/src/main/java/nl/nn/adapterframework/logging/IbisConfigurationXmlLayout.java\ndeleted file mode 100644\nindex b9de59d1c..000000000\n--- a/core/src/main/java/nl/nn/adapterframework/logging/IbisConfigurationXmlLayout.java\n+++ /dev/null\n\n@@ -1,136 +0,0 @@\n-/*\n-   Copyright 2020 WeAreFrank!\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n-*/\n-package nl.nn.adapterframework.logging;\n-\n-import java.nio.charset.Charset;\n-import java.util.List;\n-\n-import org.apache.commons.lang.StringUtils;\n-import org.apache.logging.log4j.core.LogEvent;\n-import org.apache.logging.log4j.core.config.Configuration;\n-import org.apache.logging.log4j.core.config.plugins.Plugin;\n-import org.apache.logging.log4j.core.config.plugins.PluginAttribute;\n-import org.apache.logging.log4j.core.config.plugins.PluginConfiguration;\n-import org.apache.logging.log4j.core.config.plugins.PluginFactory;\n-import org.apache.logging.log4j.message.Message;\n-import org.jdom2.Attribute;\n-import org.jdom2.Document;\n-import org.jdom2.Element;\n-import org.jdom2.Namespace;\n-import org.jdom2.output.Format;\n-import org.jdom2.output.XMLOutputter;\n-\n-/**\n- * Implementation of {@link IbisMaskingLayout} to serialize given log events \n- * in the following format: <br/>\n- * <pre> {@code\n- * <log4j:event timestamp=\"1605705678703\" thread=\"thread-1\">\n- * <log4j:configuration>my message here</log4j:configuration>\n- * </log4j:event>\n- * } </pre>\n- */\n-@Plugin(name = \"IbisConfigurationXmlLayout\", category = \"Core\", elementType = \"layout\", printObject = true)\n-public class IbisConfigurationXmlLayout extends IbisMaskingLayout {\n-\n-\tprotected IbisConfigurationXmlLayout(final Configuration config, final Charset charset) {\n-\t\tsuper(config, charset);\n-\t}\n-\n-\t@Override\n-\tprotected String serializeEvent(LogEvent event) {\n-\t\tXmlBuilder eventBuilder = XmlBuilder.create(\"event\");\n-\t\teventBuilder.addAttribute(\"timestamp\", \"\"+event.getTimeMillis());\n-\t\teventBuilder.addAttribute(\"thread\", event.getThreadName());\n-\n-\t\tMessage message = event.getMessage();\n-\t\tXmlBuilder messageBuilder = XmlBuilder.create(\"configuration\");\n-\t\tmessageBuilder.setElementContent(message.getFormattedMessage());\n-\t\teventBuilder.setSubElement(messageBuilder);\n-\n-\t\treturn eventBuilder.toString()+System.lineSeparator();\n-\t}\n-\n-\t@PluginFactory\n-\tpublic static IbisConfigurationXmlLayout createLayout(\n-\t\t\t@PluginConfiguration final Configuration config,\n-\t\t\t// LOG4J2-783 use platform default by default, so do not specify defaultString for charset\n-\t\t\t@PluginAttribute(value = \"charset\") final Charset charset) {\n-\t\treturn new IbisConfigurationXmlLayout(config, charset);\n-\t}\n-\n-\tprivate static class XmlBuilder {\n-\t\tprivate Element element;\n-\n-\t\tpublic static XmlBuilder create(String tagName) {\n-\t\t\treturn new XmlBuilder(tagName);\n-\t\t}\n-\n-\t\tprivate XmlBuilder(String tagName) {\n-\t\t\telement = new Element(tagName);\n-\t\t}\n-\n-\t\tpublic void setElementContent(String value) {\n-\t\t\tif (value != null) {\n-\t\t\t\telement.setText(value);\n-\t\t\t}\n-\t\t}\n-\n-\t\tpublic void setSubElement(XmlBuilder newElement) {\n-\t\t\taddSubElement(newElement, true);\n-\t\t}\n-\n-\t\tpublic void addSubElement(XmlBuilder newElement, boolean adoptNamespace) {\n-\t\t\tif (newElement != null) {\n-\t\t\t\tif (adoptNamespace && StringUtils.isNotEmpty(element.getNamespaceURI())) {\n-\t\t\t\t\taddNamespaces(newElement.element, element.getNamespace());\n-\t\t\t\t}\n-\t\t\t\telement.addContent(newElement.element);\n-\t\t\t}\n-\t\t}\n-\n-\t\tprivate void addNamespaces(Element element, Namespace namespace) {\n-\t\t\tif (StringUtils.isEmpty(element.getNamespaceURI())) {\n-\t\t\t\telement.setNamespace(namespace);\n-\t\t\t\tList<Element> childList = element.getChildren();\n-\t\t\t\tif (!childList.isEmpty()) {\n-\t\t\t\t\tfor (Element child : childList) {\n-\t\t\t\t\t\taddNamespaces(child, namespace);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tpublic void addAttribute(String name, String value) {\n-\t\t\tif (value != null) {\n-\t\t\t\tif (name.equalsIgnoreCase(\"xmlns\")) {\n-\t\t\t\t\telement.setNamespace(Namespace.getNamespace(value));\n-\t\t\t\t} else if (StringUtils.startsWithIgnoreCase(name, \"xmlns:\")) {\n-\t\t\t\t\tString prefix = name.substring(6);\n-\t\t\t\t\telement.addNamespaceDeclaration(Namespace.getNamespace(prefix, value));\n-\t\t\t\t} else {\n-\t\t\t\t\telement.setAttribute(new Attribute(name, value));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\tDocument document = new Document(element.detach());\n-\t\t\tXMLOutputter xmlOutputter = new XMLOutputter(Format. getPrettyFormat().setOmitDeclaration(true));\n-\t\t\treturn xmlOutputter.outputString(document);\n-\t\t}\n-\t}\n-}\n"}}, {"oid": "f808dd17d7d8ef5bc14335b682c33062aec94fcf", "url": "https://github.com/ibissource/iaf/commit/f808dd17d7d8ef5bc14335b682c33062aec94fcf", "message": "extend existing layout for configuration logging", "committedDate": "2020-11-19T10:22:15Z", "type": "commit"}, {"oid": "01d634b676798559ecf0dfe9bf1541e6cfb638bc", "url": "https://github.com/ibissource/iaf/commit/01d634b676798559ecf0dfe9bf1541e6cfb638bc", "message": "use pattern layout to avoid xml escaping", "committedDate": "2020-11-24T13:29:48Z", "type": "commit"}, {"oid": "cc99ab195b1783060113e3d34f0d04cd7e8b6356", "url": "https://github.com/ibissource/iaf/commit/cc99ab195b1783060113e3d34f0d04cd7e8b6356", "message": "remove the testcase", "committedDate": "2020-11-24T13:35:59Z", "type": "commit"}]}