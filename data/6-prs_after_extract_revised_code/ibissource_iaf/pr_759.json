{"pr_number": 759, "pr_title": "Fix#752 elements with simple content and attributes", "pr_createdAt": "2020-05-25T19:33:28Z", "pr_url": "https://github.com/ibissource/iaf/pull/759", "timeline": [{"oid": "8ea6cf291332c981db58f2029b92396f28d54bda", "url": "https://github.com/ibissource/iaf/commit/8ea6cf291332c981db58f2029b92396f28d54bda", "message": "Add support for label value elements with attribute labels", "committedDate": "2020-05-25T19:25:30Z", "type": "commit"}, {"oid": "1ba6b2db00cb658ddf016c0bd7045fc43fe25112", "url": "https://github.com/ibissource/iaf/commit/1ba6b2db00cb658ddf016c0bd7045fc43fe25112", "message": "Add option to store name of parsed root element", "committedDate": "2020-05-25T19:28:47Z", "type": "commit"}, {"oid": "8abe460e65d021233a55d84541cacd27abfb3692", "url": "https://github.com/ibissource/iaf/commit/8abe460e65d021233a55d84541cacd27abfb3692", "message": "Add RootElementToSessionKeyFilter", "committedDate": "2020-05-25T19:30:15Z", "type": "commit"}, {"oid": "c15a680f4c8b7794c32784e22e87149b46bed5a3", "url": "https://github.com/ibissource/iaf/commit/c15a680f4c8b7794c32784e22e87149b46bed5a3", "message": "Fix compilation issue", "committedDate": "2020-05-25T19:44:58Z", "type": "commit"}, {"oid": "3e6964d7ae9beb54391b949194f42e3292d733b6", "url": "https://github.com/ibissource/iaf/commit/3e6964d7ae9beb54391b949194f42e3292d733b6", "message": "Disable failing test for Map2Xml", "committedDate": "2020-05-25T19:52:34Z", "type": "commit"}, {"oid": "decc509dee83d1cc6e67c3ee93e5b2a546ddde5e", "url": "https://github.com/ibissource/iaf/commit/decc509dee83d1cc6e67c3ee93e5b2a546ddde5e", "message": "Use '#text' as attribute for element contents", "committedDate": "2020-05-26T07:06:00Z", "type": "commit"}, {"oid": "6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "url": "https://github.com/ibissource/iaf/commit/6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "message": "Remove getters and setters for attributePrefix and mixedContentLabel", "committedDate": "2020-05-26T07:14:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxMTcyNQ==", "url": "https://github.com/ibissource/iaf/pull/759#discussion_r430211725", "bodyText": "Als het dan toch niet altijd nodig is, vind ik het persoonlijk passend om er trace logging van te maken.\nDie kan je dan lokaal aanzetten en zelfs naar je system.out laten printen voor snellere debugging...", "author": "nielsm5", "createdAt": "2020-05-26T07:34:33Z", "path": "core/src/main/java/nl/nn/adapterframework/align/ToXml.java", "diffHunk": "@@ -209,9 +209,9 @@ public void handleElement(XSElementDeclaration elementDeclaration, N node) throw\n \t\t\t\t\tXSAttributeUse attributeUse=(XSAttributeUse)attributeUses.item(i);\n \t\t\t\t\t//if (DEBUG) log.debug(\"startElement [\"+localName+\"] attributeUse [\"+ToStringBuilder.reflectionToString(attributeUse)+\"]\");\n \t\t\t\t\tXSAttributeDeclaration attributeDeclaration=attributeUse.getAttrDeclaration();\n-\t\t\t\t\tif (DEBUG) log.debug(\"node [\"+name+\"] attributeDeclaration [\"+ToStringBuilder.reflectionToString(attributeDeclaration)+\"]\");\n+\t\t\t\t\t//if (DEBUG) log.debug(\"node [\"+name+\"] attributeDeclaration [\"+ToStringBuilder.reflectionToString(attributeDeclaration)+\"]\");\n \t\t\t\t\tXSSimpleTypeDefinition attTypeDefinition=attributeDeclaration.getTypeDefinition();\n-\t\t\t\t\tif (DEBUG) log.debug(\"node [\"+name+\"] attTypeDefinition [\"+ToStringBuilder.reflectionToString(attTypeDefinition)+\"]\");\n+\t\t\t\t\t//if (DEBUG) log.debug(\"node [\"+name+\"] attTypeDefinition [\"+ToStringBuilder.reflectionToString(attTypeDefinition)+\"]\");\n \t\t\t\t\tString attName=attributeDeclaration.getName();", "originalCommit": "6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/align/ToXml.java b/core/src/main/java/nl/nn/adapterframework/align/ToXml.java\nindex 4453ac673..9f4a5f7f2 100644\n--- a/core/src/main/java/nl/nn/adapterframework/align/ToXml.java\n+++ b/core/src/main/java/nl/nn/adapterframework/align/ToXml.java\n\n@@ -207,18 +206,16 @@ public abstract class ToXml<C,N> extends XmlAligner {\n \t\t\t} else {\n \t\t\t\tfor (int i=0;i<attributeUses.getLength(); i++) {\n \t\t\t\t\tXSAttributeUse attributeUse=(XSAttributeUse)attributeUses.item(i);\n-\t\t\t\t\t//if (DEBUG) log.debug(\"startElement [\"+localName+\"] attributeUse [\"+ToStringBuilder.reflectionToString(attributeUse)+\"]\");\n \t\t\t\t\tXSAttributeDeclaration attributeDeclaration=attributeUse.getAttrDeclaration();\n-\t\t\t\t\t//if (DEBUG) log.debug(\"node [\"+name+\"] attributeDeclaration [\"+ToStringBuilder.reflectionToString(attributeDeclaration)+\"]\");\n-\t\t\t\t\tXSSimpleTypeDefinition attTypeDefinition=attributeDeclaration.getTypeDefinition();\n-\t\t\t\t\t//if (DEBUG) log.debug(\"node [\"+name+\"] attTypeDefinition [\"+ToStringBuilder.reflectionToString(attTypeDefinition)+\"]\");\n+\t\t\t\t\t//XSSimpleTypeDefinition attTypeDefinition=attributeDeclaration.getTypeDefinition();\n+\t\t\t\t\t//if (log.isTraceEnabled()) log.trace(\"node [\"+name+\"] attTypeDefinition [\"+ToStringBuilder.reflectionToString(attTypeDefinition)+\"]\");\n \t\t\t\t\tString attName=attributeDeclaration.getName();\n \t\t\t\t\tif (nodeAttributes.containsKey(attName)) {\n \t\t\t\t\t\tString value=nodeAttributes.remove(attName);\n \t\t\t\t\t\tString uri=attributeDeclaration.getNamespace();\n \t\t\t\t\t\tString attqname=getQName(uri,attName);\n \t\t\t\t\t\tString type=null;\n-\t\t\t\t\t\tif (DEBUG) log.debug(\"node [\"+name+\"] adding attribute [\"+attName+\"] value [\"+value+\"]\");\n+\t\t\t\t\t\tif (log.isTraceEnabled()) log.trace(\"node [\"+name+\"] adding attribute [\"+attName+\"] value [\"+value+\"]\");\n \t\t\t\t\t\tattributes.addAttribute(uri, attName, attqname, type, value);\n \t\t\t\t\t}\n \t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNDExNw==", "url": "https://github.com/ibissource/iaf/pull/759#discussion_r430214117", "bodyText": "Dit moet apache commons lang3 zijn.", "author": "nielsm5", "createdAt": "2020-05-26T07:39:10Z", "path": "core/src/main/java/nl/nn/adapterframework/align/content/JsonElementContainer.java", "diffHunk": "@@ -26,9 +26,11 @@\n import org.apache.commons.lang3.text.translate.LookupTranslator;\n import org.apache.logging.log4j.Logger;\n import org.apache.xerces.impl.dv.XSSimpleType;\n+import org.apache.xerces.xs.XSComplexTypeDefinition;\n import org.apache.xerces.xs.XSSimpleTypeDefinition;\n import org.apache.xerces.xs.XSTypeDefinition;\n \n+import liquibase.util.StringUtils;", "originalCommit": "6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/align/content/JsonElementContainer.java b/core/src/main/java/nl/nn/adapterframework/align/content/JsonElementContainer.java\nindex 45d69c8ba..d5be37ff3 100644\n--- a/core/src/main/java/nl/nn/adapterframework/align/content/JsonElementContainer.java\n+++ b/core/src/main/java/nl/nn/adapterframework/align/content/JsonElementContainer.java\n\n@@ -20,6 +20,7 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.text.translate.AggregateTranslator;\n import org.apache.commons.lang3.text.translate.CharSequenceTranslator;\n import org.apache.commons.lang3.text.translate.EntityArrays;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNTUzOQ==", "url": "https://github.com/ibissource/iaf/pull/759#discussion_r430215539", "bodyText": "Apache commons lang3", "author": "nielsm5", "createdAt": "2020-05-26T07:41:49Z", "path": "core/src/main/java/nl/nn/adapterframework/xml/RootElementToSessionKeyFilter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.xml;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+\n+import liquibase.util.StringUtils;", "originalCommit": "6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/xml/RootElementToSessionKeyFilter.java b/core/src/main/java/nl/nn/adapterframework/xml/RootElementToSessionKeyFilter.java\nindex 7fc80ac4d..ba2f29f7f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/xml/RootElementToSessionKeyFilter.java\n+++ b/core/src/main/java/nl/nn/adapterframework/xml/RootElementToSessionKeyFilter.java\n\n@@ -15,10 +15,10 @@\n */\n package nl.nn.adapterframework.xml;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n \n-import liquibase.util.StringUtils;\n import nl.nn.adapterframework.core.IPipeLineSession;\n \n public class RootElementToSessionKeyFilter extends FullXmlFilter {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNjA2Nw==", "url": "https://github.com/ibissource/iaf/pull/759#discussion_r430216067", "bodyText": "Hier hebben we toch TestFileUtils voor?", "author": "nielsm5", "createdAt": "2020-05-26T07:42:50Z", "path": "core/src/test/java/nl/nn/adapterframework/align/AlignTestBase.java", "diffHunk": "@@ -25,7 +27,11 @@ public void testFiles(String schemaFile, String namespace, String rootElement, S\n \t}\n \n \tpublic URL getSchemaURL(String schemaFile) {\n-\t\t return AlignTestBase.class.getResource(BASEDIR+schemaFile);\n+\t\tURL result=AlignTestBase.class.getResource(BASEDIR+schemaFile);\n+\t\tif (result==null) {\n+\t\t\tfail(\"cannot find schema [\"+schemaFile+\"]\");\n+\t\t}\n+\t return result;\n \t}", "originalCommit": "6f3b781d0f6ecc742b9401d0cec5f201f1a6c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "chunk": "diff --git a/core/src/test/java/nl/nn/adapterframework/align/AlignTestBase.java b/core/src/test/java/nl/nn/adapterframework/align/AlignTestBase.java\nindex 636bf8de2..eb26b112c 100644\n--- a/core/src/test/java/nl/nn/adapterframework/align/AlignTestBase.java\n+++ b/core/src/test/java/nl/nn/adapterframework/align/AlignTestBase.java\n\n@@ -26,8 +26,8 @@ public abstract class AlignTestBase {\n \t\ttestFiles(schemaFile, namespace, rootElement, inputFile, false, null);\n \t}\n \n-\tpublic URL getSchemaURL(String schemaFile) {\n-\t\tURL result=AlignTestBase.class.getResource(BASEDIR+schemaFile);\n+\tpublic URL getSchemaURL(String schemaFile) throws IOException {\n+\t\tURL result=TestFileUtils.getTestFileURL(BASEDIR+schemaFile);\n \t\tif (result==null) {\n \t\t\tfail(\"cannot find schema [\"+schemaFile+\"]\");\n \t\t}\n"}}, {"oid": "07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "url": "https://github.com/ibissource/iaf/commit/07ae8d1b8f8ee7b034b515e9c2a3ad92b24ce299", "message": "Use trace instead of DEBUG", "committedDate": "2020-05-26T08:19:29Z", "type": "commit"}, {"oid": "744ec86b8fbb097e410d1860f57fb4c4dd5ed655", "url": "https://github.com/ibissource/iaf/commit/744ec86b8fbb097e410d1860f57fb4c4dd5ed655", "message": "Fix filter setting", "committedDate": "2020-05-26T08:21:28Z", "type": "commit"}, {"oid": "4cd530d2509f23d48aabeef688365d45ca30cb9e", "url": "https://github.com/ibissource/iaf/commit/4cd530d2509f23d48aabeef688365d45ca30cb9e", "message": "Remove ToDo", "committedDate": "2020-05-26T08:24:10Z", "type": "commit"}, {"oid": "43652907aac880aa2aa3bc3364c5e5add0a2199f", "url": "https://github.com/ibissource/iaf/commit/43652907aac880aa2aa3bc3364c5e5add0a2199f", "message": "Fix validator failure", "committedDate": "2020-05-26T08:53:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMzOTE5MQ==", "url": "https://github.com/ibissource/iaf/pull/759#discussion_r430339191", "bodyText": "Heeft deze nu nog nut?", "author": "nielsm5", "createdAt": "2020-05-26T11:21:20Z", "path": "core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java", "diffHunk": "@@ -363,8 +371,8 @@ private void handleCompositorChoice(JsonObjectBuilder builder, XSObjectList part\n \t\n \tprivate void handleElementDeclaration(JsonObjectBuilder builder, XSElementDeclaration elementDeclaration, boolean multiOccurring, boolean shouldCreateReferences){\t\n \t\tString elementName=elementDeclaration.getName();\n-\t\t//if (DEBUG) log.debug(\"XSElementDeclaration name [\"+elementName+\"]\");\n-\t\tif (DEBUG) log.debug(\"XSElementDeclaration element [\"+elementName+\"][\"+ToStringBuilder.reflectionToString(elementDeclaration,ToStringStyle.MULTI_LINE_STYLE)+\"]\");\n+\t\t//if (log.isTraceEnabled()) log.trace(\"XSElementDeclaration name [\"+elementName+\"]\");", "originalCommit": "43652907aac880aa2aa3bc3364c5e5add0a2199f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "51f863459196bc6fcdd8ed549f1cc3b721197f27", "url": "https://github.com/ibissource/iaf/commit/51f863459196bc6fcdd8ed549f1cc3b721197f27", "message": "Use getter for invalidRootNamespaces", "committedDate": "2020-05-26T11:56:26Z", "type": "commit"}]}