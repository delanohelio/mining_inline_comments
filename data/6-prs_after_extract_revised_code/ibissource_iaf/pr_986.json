{"pr_number": 986, "pr_title": "Fix V8 IllegalThread Access", "pr_createdAt": "2020-08-14T08:58:02Z", "pr_url": "https://github.com/ibissource/iaf/pull/986", "timeline": [{"oid": "35bc58285b2080dcb159fec3f58761168360ba0f", "url": "https://github.com/ibissource/iaf/commit/35bc58285b2080dcb159fec3f58761168360ba0f", "message": "Fix V8 threadaccess", "committedDate": "2020-08-14T08:56:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkzNTQ0NQ==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r471935445", "bodyText": "waarom niet: log.error(\"Caught exception in handling API call\", exception); ?", "author": "gvanbrakel", "createdAt": "2020-08-18T06:08:37Z", "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/api/ApiExceptionHandler.java", "diffHunk": "@@ -44,6 +50,8 @@ public Response toResponse(Exception exception) {\n \t\t\treturn ((ApiException) exception).getResponse();\n \t\t}\n \n+\t\tlog.error(exception.getLocalizedMessage(), exception);", "originalCommit": "35bc58285b2080dcb159fec3f58761168360ba0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82169034c80c5c5f204bc860da19e47528df1634", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/webcontrol/api/ApiExceptionHandler.java b/core/src/main/java/nl/nn/adapterframework/webcontrol/api/ApiExceptionHandler.java\nindex 086075f32..1c743a47d 100644\n--- a/core/src/main/java/nl/nn/adapterframework/webcontrol/api/ApiExceptionHandler.java\n+++ b/core/src/main/java/nl/nn/adapterframework/webcontrol/api/ApiExceptionHandler.java\n\n@@ -50,7 +50,7 @@ public class ApiExceptionHandler implements ExceptionMapper<Exception> {\n \t\t\treturn ((ApiException) exception).getResponse();\n \t\t}\n \n-\t\tlog.error(exception.getLocalizedMessage(), exception);\n+\t\tlog.error(\"Caught exception in handling FF!API call\", exception);\n \n \t\tResponseBuilder response = Response.status(Status.INTERNAL_SERVER_ERROR);\n \t\tString message = exception.getMessage();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkzNTcyNA==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r471935724", "bodyText": "Waar is dit nodig?", "author": "gvanbrakel", "createdAt": "2020-08-18T06:09:29Z", "path": "core/src/main/java/nl/nn/adapterframework/util/StreamUtil.java", "diffHunk": "@@ -147,6 +147,11 @@ public static Reader getCharsetDetectingInputStreamReader(InputStream inputStrea\n \t\tBOMInputStream bOMInputStream = new BOMInputStream(inputStream,ByteOrderMark.UTF_8, ByteOrderMark.UTF_16LE, ByteOrderMark.UTF_16BE);\n \t\tByteOrderMark bom = bOMInputStream.getBOM();\n \t\tString charsetName = bom == null ? defaultCharset : bom.getCharsetName();\n+\n+\t\tif(StringUtils.isEmpty(charsetName)) {\n+\t\t\tcharsetName = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\t\t}", "originalCommit": "35bc58285b2080dcb159fec3f58761168360ba0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkzNjMxNQ==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r471936315", "bodyText": "Waarom zit dit in een ThreadLocal?", "author": "gvanbrakel", "createdAt": "2020-08-18T06:11:17Z", "path": "core/src/main/java/nl/nn/adapterframework/util/flow/V8FlowGenerator.java", "diffHunk": "@@ -31,13 +31,13 @@\n public class V8FlowGenerator implements IFlowGenerator {\n \tprivate static Logger log = LogUtil.getLogger(V8FlowGenerator.class);\n \n-\tprivate GraphvizEngine engine;\n+\tprivate ThreadLocal<GraphvizEngine> engines = new ThreadLocal<>();", "originalCommit": "35bc58285b2080dcb159fec3f58761168360ba0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NjkzNA==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r484366934", "bodyText": "Omdat dat de stomme v8 engine van google threadsafe maakt...", "author": "nielsm5", "createdAt": "2020-09-07T11:16:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkzNjMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "88a76fa64fe6cbf33ef6c8942aaa68aaedf33ba4", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/util/flow/V8FlowGenerator.java b/core/src/main/java/nl/nn/adapterframework/util/flow/V8FlowGenerator.java\nindex 17962d040..6c3b44950 100644\n--- a/core/src/main/java/nl/nn/adapterframework/util/flow/V8FlowGenerator.java\n+++ b/core/src/main/java/nl/nn/adapterframework/util/flow/V8FlowGenerator.java\n\n@@ -31,13 +31,14 @@ import nl.nn.adapterframework.util.LogUtil;\n public class V8FlowGenerator implements IFlowGenerator {\n \tprivate static Logger log = LogUtil.getLogger(V8FlowGenerator.class);\n \n-\tprivate ThreadLocal<GraphvizEngine> engines = new ThreadLocal<>();\n+\tprivate GraphvizEngine engine;\n \tprivate Options options = Options.create();\n \tprivate String jsFormat = AppConstants.getInstance().getProperty(\"graphviz.js.format\", \"SVG\");\n \n \t@Override\n-\tpublic void afterPropertiesSet() throws IOException {\n-\t\tgetGraphvizEngine(); //Test to see if a V8 instance can be created\n+\tpublic void afterPropertiesSet() throws Exception {\n+\t\tif(log.isTraceEnabled()) log.trace(\"creating V8FlowEngine\");\n+\t\tengine = new GraphvizEngine();\n \n \t\tFormat format;\n \t\ttry {\n"}}, {"oid": "88a76fa64fe6cbf33ef6c8942aaa68aaedf33ba4", "url": "https://github.com/ibissource/iaf/commit/88a76fa64fe6cbf33ef6c8942aaa68aaedf33ba4", "message": "Create timer based IFlowEngine", "committedDate": "2020-09-01T09:01:39Z", "type": "commit"}, {"oid": "34475e2bef3fe775d1bd476f7b00f4b99a1b17cd", "url": "https://github.com/ibissource/iaf/commit/34475e2bef3fe775d1bd476f7b00f4b99a1b17cd", "message": "Remove sysout", "committedDate": "2020-09-01T09:02:07Z", "type": "commit"}, {"oid": "ff21ed031658705012e66fef9880f81904e2d611", "url": "https://github.com/ibissource/iaf/commit/ff21ed031658705012e66fef9880f81904e2d611", "message": "Fix test", "committedDate": "2020-09-01T11:05:29Z", "type": "commit"}, {"oid": "8b189e95b21cd6d609e28af8d057f3a96bb120fc", "url": "https://github.com/ibissource/iaf/commit/8b189e95b21cd6d609e28af8d057f3a96bb120fc", "message": "Add SoftReference to threadlocals", "committedDate": "2020-09-07T11:00:10Z", "type": "commit"}, {"oid": "82169034c80c5c5f204bc860da19e47528df1634", "url": "https://github.com/ibissource/iaf/commit/82169034c80c5c5f204bc860da19e47528df1634", "message": "Change exception message", "committedDate": "2020-09-07T11:13:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMzg0OQ==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r484723849", "bodyText": "Is het zeker dat het resultaat van getFlowGenerator hier nooit null is?", "author": "gvanbrakel", "createdAt": "2020-09-08T07:57:13Z", "path": "core/src/main/java/nl/nn/adapterframework/util/flow/FlowDiagramManager.java", "diffHunk": "@@ -248,7 +280,7 @@ private void generateFlowDiagram(String name, String dot, File destination) thro\n \t\tlong start = System.currentTimeMillis();\n \n \t\ttry (FileOutputStream outputStream = new FileOutputStream(destination)) {\n-\t\t\tgenerator.generateFlow(name, dot, outputStream);\n+\t\t\tgetFlowGenerator().generateFlow(name, dot, outputStream);", "originalCommit": "82169034c80c5c5f204bc860da19e47528df1634", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3MzA4OQ==", "url": "https://github.com/ibissource/iaf/pull/986#discussion_r484873089", "bodyText": "Hij kan zeker null zijn, maar de nullcheck zit in de methodes die deze methode aanroepen... zie regel 261", "author": "nielsm5", "createdAt": "2020-09-08T12:21:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMzg0OQ=="}], "type": "inlineReview", "revised_code": null}]}