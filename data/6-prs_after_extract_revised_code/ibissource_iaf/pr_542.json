{"pr_number": 542, "pr_title": "Create new ConfigWarning annotation", "pr_createdAt": "2020-03-25T16:19:48Z", "pr_url": "https://github.com/ibissource/iaf/pull/542", "timeline": [{"oid": "8cbb40932c3b8be979aed4575d9b9fb38787021d", "url": "https://github.com/ibissource/iaf/commit/8cbb40932c3b8be979aed4575d9b9fb38787021d", "message": "Create new ConfigWarning annotation", "committedDate": "2020-03-25T16:19:18Z", "type": "commit"}, {"oid": "eef0808bfa0a0681fa962a3994d2b5ad38d35bcf", "url": "https://github.com/ibissource/iaf/commit/eef0808bfa0a0681fa962a3994d2b5ad38d35bcf", "message": "Add configuration warnings for deprecated classes", "committedDate": "2020-03-25T17:56:38Z", "type": "commit"}, {"oid": "368f03774eae91ea2199aba5e537c8268d841f06", "url": "https://github.com/ibissource/iaf/commit/368f03774eae91ea2199aba5e537c8268d841f06", "message": "Add java generics", "committedDate": "2020-03-25T17:57:15Z", "type": "commit"}, {"oid": "004161795d92157677f98cc5ad6cdde8ca0ed18b", "url": "https://github.com/ibissource/iaf/commit/004161795d92157677f98cc5ad6cdde8ca0ed18b", "message": "Change getinstance to static add", "committedDate": "2020-03-25T19:46:51Z", "type": "commit"}, {"oid": "6262c9eeb2fb33b0553c6ac5212d183134afbcfe", "url": "https://github.com/ibissource/iaf/commit/6262c9eeb2fb33b0553c6ac5212d183134afbcfe", "message": "Convert more configurationwarnings", "committedDate": "2020-03-29T16:01:19Z", "type": "commit"}, {"oid": "15bf7fdf6aa0e5a9b0eda31316dfe1610c9782e9", "url": "https://github.com/ibissource/iaf/commit/15bf7fdf6aa0e5a9b0eda31316dfe1610c9782e9", "message": "Fix first test", "committedDate": "2020-03-29T17:09:49Z", "type": "commit"}, {"oid": "4980b89e5992dfba6f88929257198f1eb8d26603", "url": "https://github.com/ibissource/iaf/commit/4980b89e5992dfba6f88929257198f1eb8d26603", "message": "Fix jUnit tests", "committedDate": "2020-03-29T19:07:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5NzQ4OQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r399997489", "bodyText": "Volgens mij wil je dit niet: nog een name-attribute om te zetten.", "author": "gvanbrakel", "createdAt": "2020-03-30T08:02:58Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -860,4 +858,14 @@ public void setAdapterToRunBeforeOnEmptyInput(String s) {\n \tpublic String getAdapterToRunBeforeOnEmptyInput() {\n \t\treturn adapterToRunBeforeOnEmptyInput;\n \t}\n+\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\t@Override\n+\tpublic void setName(String name) {", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/core/PipeLine.java b/core/src/main/java/nl/nn/adapterframework/core/PipeLine.java\nindex c818336dc..070605741 100644\n--- a/core/src/main/java/nl/nn/adapterframework/core/PipeLine.java\n+++ b/core/src/main/java/nl/nn/adapterframework/core/PipeLine.java\n\n@@ -859,13 +854,11 @@ public class PipeLine implements ICacheEnabled<String,String>, HasStatistics, IN\n \t\treturn adapterToRunBeforeOnEmptyInput;\n \t}\n \n-\t@Override\n-\tpublic String getName() {\n-\t\treturn name;\n-\t}\n-\n-\t@Override\n-\tpublic void setName(String name) {\n-\t\tthis.name = name;\n+\tprivate String getLogPrefix() {\n+\t\tString prefix = \"PipeLine\";\n+\t\tif(owner != null) {\n+\t\t\tprefix += \" of [\" + owner.getName() + \"]\";\n+\t\t}\n+\t\treturn prefix + \" \";\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5OTkwOQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r399999909", "bodyText": "Deze melding moeten we toch ook wat aan doen.\nMinimaal wijzen op het gevaar van SQL injection.", "author": "gvanbrakel", "createdAt": "2020-03-30T08:07:24Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java", "diffHunk": "@@ -46,9 +46,7 @@ public void configure() throws ConfigurationException {\n \tpublic void configure(boolean trust) throws ConfigurationException {\n \t\tsuper.configure();\n \t\tif (!trust) {\n-\t\t\tConfigurationWarnings configWarnings = ConfigurationWarnings.getInstance();\n-\t\t\tString msg = \"The class [\"+getClass().getName()+\"] is used one or more times. Please change to [\"+FixedQuerySender.class.getName()+\"] for better security\";\n-\t\t\tconfigWarnings.add(log, msg, true);\n+\t\t\tConfigurationWarnings.add(log, \"The class [\"+getClass().getName()+\"] is used one or more times. Please change to [\"+FixedQuerySender.class.getName()+\"] for better security\");", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java b/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\nindex 359ca13f5..726d09f8c 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\n\n@@ -46,7 +46,7 @@ public class DirectQuerySender extends JdbcQuerySenderBase {\n \tpublic void configure(boolean trust) throws ConfigurationException {\n \t\tsuper.configure();\n \t\tif (!trust) {\n-\t\t\tConfigurationWarnings.add(log, \"The class [\"+getClass().getName()+\"] is used one or more times. Please change to [\"+FixedQuerySender.class.getName()+\"] for better security\");\n+\t\t\tConfigurationWarnings.add(log, \"The class [\"+getClass().getName()+\"] is used one or more times. Please change to [\"+FixedQuerySender.class.getName()+\"] to avoid potential SQL injections!\");\n \t\t}\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwNDE5OA==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400004198", "bodyText": "Misschien moeten we hier 'replace by' gebruiken in plaats van 'use'", "author": "gvanbrakel", "createdAt": "2020-03-30T08:14:25Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java", "diffHunk": "@@ -39,6 +40,7 @@\n  * @deprecated Please use LocalFileSystemPipe with action=\"move\"\n  */\n @Deprecated\n+@ConfigurationWarning(\"Please use LocalFileSystemPipe with action=\\\"move\\\"\")", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java b/core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java\nindex 5f2b00b82..68ef1bb79 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java\n\n@@ -40,7 +40,7 @@ import nl.nn.adapterframework.util.FileUtils;\n  * @deprecated Please use LocalFileSystemPipe with action=\"move\"\n  */\n @Deprecated\n-@ConfigurationWarning(\"Please use LocalFileSystemPipe with action=\\\"move\\\"\")\n+@ConfigurationWarning(\"Please replace with LocalFileSystemPipe and action=\\\"move\\\"\")\n public class MoveFilePipe extends FixedForwardPipe {\n \n \tprivate String directory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwNTU0NQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400005545", "bodyText": "Hier ook (zoals overal) vierkant haken gebruiken in plaats van enkele quotes", "author": "gvanbrakel", "createdAt": "2020-03-30T08:16:42Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "diffHunk": "@@ -780,10 +778,7 @@ private void checkRootValidation(List<String> path, Set<XSD> xsds) throws Config\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (!found) {\n-\t\t\t\t\tConfigurationWarnings configWarnings = ConfigurationWarnings.getInstance();\n-\t\t\t\t\tString msg = getLogPrefix(null) + \"Element '\" + validElement +\n-\t\t\t\t\t\"' not in list of available root elements \" + allRootTags;\n-\t\t\t\t\tconfigWarnings.add(log, msg);\n+\t\t\t\t\tConfigurationWarnings.add(this, log, \"Element '\"+validElement+\"' not in list of available root elements \"+allRootTags);", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java b/core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java\nindex 4f196ac7a..56bc914c5 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java\n\n@@ -778,7 +778,7 @@ public class XmlValidator extends FixedForwardPipe implements SchemasProvider, H\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (!found) {\n-\t\t\t\t\tConfigurationWarnings.add(this, log, \"Element '\"+validElement+\"' not in list of available root elements \"+allRootTags);\n+\t\t\t\t\tConfigurationWarnings.add(this, log, \"Element [\"+validElement+\"] not in list of available root elements \"+allRootTags);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwOTU2NQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400009565", "bodyText": "Snap niet waarom hier een newline in zou kunnen zitten", "author": "gvanbrakel", "createdAt": "2020-03-30T08:23:43Z", "path": "core/src/test/java/nl/nn/adapterframework/senders/mail/MailSenderTestBase.java", "diffHunk": "@@ -80,7 +80,8 @@ public void compare(String file, MimeMessage message) throws Exception {\n \t\t\trawResult = rawResult.replace(boundary, \"BOUNDARY\");\n \t\t}\n \n-\t\tTestAssertions.assertEqualsIgnoreCRLF(expected, rawResult);\n+\t\t//Make sure there is always a newline, otherwise test assertions will fail\n+\t\tTestAssertions.assertEqualsIgnoreCRLF(expected, rawResult.replace(\"/mixed; boundary\", \"/mixed; \\n\\tboundary\"));\n \t}", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2MzM3OA==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400263378", "bodyText": "Tja het is niet fout als er een newline in zit... de test kan er alleen niet mee overweg", "author": "nielsm5", "createdAt": "2020-03-30T15:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwOTU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/test/java/nl/nn/adapterframework/senders/mail/MailSenderTestBase.java b/core/src/test/java/nl/nn/adapterframework/senders/mail/MailSenderTestBase.java\nindex 57775fac6..3e100b75d 100644\n--- a/core/src/test/java/nl/nn/adapterframework/senders/mail/MailSenderTestBase.java\n+++ b/core/src/test/java/nl/nn/adapterframework/senders/mail/MailSenderTestBase.java\n\n@@ -80,7 +80,7 @@ public abstract class MailSenderTestBase<S extends ISenderWithParameters> extend\n \t\t\trawResult = rawResult.replace(boundary, \"BOUNDARY\");\n \t\t}\n \n-\t\t//Make sure there is always a newline, otherwise test assertions will fail\n+\t\t//Make sure there is always a newline, otherwise test assertions may sometimes fail\n \t\tTestAssertions.assertEqualsIgnoreCRLF(expected, rawResult.replace(\"/mixed; boundary\", \"/mixed; \\n\\tboundary\"));\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMzkyMw==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400013923", "bodyText": "Is er geen warning meer als er xslt2=true gezet wordt?\nIdee hier is ook dat als de test verandert wordt van gebruik van 'xst2=true' naar 'xsltVersion=2', dat je dan deze variabele van 1 op 0 kan zetten.", "author": "gvanbrakel", "createdAt": "2020-03-30T08:31:03Z", "path": "core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java", "diffHunk": "@@ -35,7 +35,7 @@\n \tprotected TestAppender testAppender;\n \tprivate ErrorOutputStream errorOutputStream;\n \tprivate PrintStream prevStdErr;\n-\tpublic static int EXPECTED_CONFIG_WARNINGS_FOR_XSLT2_SETTING=1;\n+\tpublic static int EXPECTED_CONFIG_WARNINGS_FOR_XSLT2_SETTING=0;", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODA0Mg==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400268042", "bodyText": "Dit wordt nu op een andere manier weergegeven, en komt dus niet meer in de test voor.", "author": "nielsm5", "createdAt": "2020-03-30T15:08:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMzkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "10502be0a97118bda9746bc39f3903ea2bf33072", "chunk": "diff --git a/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java b/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\nindex c82725819..8ad8c70f7 100644\n--- a/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\n+++ b/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\n\n@@ -35,7 +35,6 @@ public abstract class XsltErrorTestBase<P extends StreamingPipe> extends XsltTes\n \tprotected TestAppender testAppender;\n \tprivate ErrorOutputStream errorOutputStream;\n \tprivate PrintStream prevStdErr;\n-\tpublic static int EXPECTED_CONFIG_WARNINGS_FOR_XSLT2_SETTING=0;\n \tpublic static int EXPECTED_NUMBER_OF_DUPLICATE_LOGGINGS=1; // this should be one, but for the time being we're happy that there is logging\n \t\n \tprivate final String FILE_NOT_FOUND_EXCEPTION=\"Cannot get resource for href [\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNDg2OQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400014869", "bodyText": "Ik zie geen getMultiplicity() meer in het verwachte aantal alerts. Dat is goed, lijkt me: geen duplicate messages", "author": "gvanbrakel", "createdAt": "2020-03-30T08:32:40Z", "path": "core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java", "diffHunk": "@@ -277,7 +277,7 @@ public void notifyXalanExtensionsIllegalForSaxon() throws SenderException, TimeO\n \t\t\terrorMessage = e.getMessage();\n \t\t\tassertThat(errorMessage,containsString(\"Cannot find a matching 2-argument function named {http://exslt.org/strings}tokenize()\"));\n \t\t}\n-\t\tassertThat(testAppender.getNumberOfAlerts(),is(getMultiplicity()+1+EXPECTED_NUMBER_OF_DUPLICATE_LOGGINGS));\n+\t\tassertThat(testAppender.getNumberOfAlerts(),is(1+EXPECTED_NUMBER_OF_DUPLICATE_LOGGINGS));", "originalCommit": "4980b89e5992dfba6f88929257198f1eb8d26603", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "245130467035f50e4b0372163c7300d2e7d52b54", "url": "https://github.com/ibissource/iaf/commit/245130467035f50e4b0372163c7300d2e7d52b54", "message": "Add the finishing touch!", "committedDate": "2020-03-30T14:47:11Z", "type": "commit"}, {"oid": "10502be0a97118bda9746bc39f3903ea2bf33072", "url": "https://github.com/ibissource/iaf/commit/10502be0a97118bda9746bc39f3903ea2bf33072", "message": "Solve code review issues", "committedDate": "2020-03-30T15:34:15Z", "type": "commit"}, {"oid": "487acef8ae87247d94d16498463f460ef968aaec", "url": "https://github.com/ibissource/iaf/commit/487acef8ae87247d94d16498463f460ef968aaec", "message": "Change error message", "committedDate": "2020-03-30T15:42:12Z", "type": "commit"}, {"oid": "a8fb08d80d147a73c8dfb6b9c2f86652bf5ba2b9", "url": "https://github.com/ibissource/iaf/commit/a8fb08d80d147a73c8dfb6b9c2f86652bf5ba2b9", "message": "Revert jUnit test", "committedDate": "2020-03-30T15:58:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5ODc4MQ==", "url": "https://github.com/ibissource/iaf/pull/542#discussion_r400298781", "bodyText": "Moet volgens mij zijn:\ncheckTestAppender(0,null);", "author": "gvanbrakel", "createdAt": "2020-03-30T15:48:08Z", "path": "core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java", "diffHunk": "@@ -225,7 +213,7 @@ public void documentIncludedInSourceNotFoundXslt2() throws Exception {\n \t\t\terrorMessage = e.getMessage();\n \t\t\tassertThat(errorMessage,containsString(FILE_NOT_FOUND_EXCEPTION));\n \t\t}\n-\t\tcheckTestAppender(EXPECTED_CONFIG_WARNINGS_FOR_XSLT2_SETTING,null);\n+", "originalCommit": "487acef8ae87247d94d16498463f460ef968aaec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8fb08d80d147a73c8dfb6b9c2f86652bf5ba2b9", "chunk": "diff --git a/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java b/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\nindex 8ad8c70f7..c20f9b3fd 100644\n--- a/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\n+++ b/core/src/test/java/nl/nn/adapterframework/xslt/XsltErrorTestBase.java\n\n@@ -214,6 +223,7 @@ public abstract class XsltErrorTestBase<P extends StreamingPipe> extends XsltTes\n \t\t\tassertThat(errorMessage,containsString(FILE_NOT_FOUND_EXCEPTION));\n \t\t}\n \n+\t\tcheckTestAppender(0,null);\n \t\tSystem.out.println(\"ErrorMessage: \"+errorMessage);\n \t\tif (testForEmptyOutputStream) {\n \t\t\tSystem.out.println(\"ErrorStream(=stderr): \"+errorOutputStream.toString());\n"}}]}