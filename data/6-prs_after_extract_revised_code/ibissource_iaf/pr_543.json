{"pr_number": 543, "pr_title": "Add type definitions to JSON schema generator", "pr_createdAt": "2020-03-26T10:02:19Z", "pr_url": "https://github.com/ibissource/iaf/pull/543", "timeline": [{"oid": "c6e7f684c2995c44b1df704965a5b654a9775865", "url": "https://github.com/ibissource/iaf/commit/c6e7f684c2995c44b1df704965a5b654a9775865", "message": "Add facets in JSON schema converter", "committedDate": "2020-03-25T17:57:49Z", "type": "commit"}, {"oid": "9333cefc4b6abcd44f754ba9a07e981d6f9d0882", "url": "https://github.com/ibissource/iaf/commit/9333cefc4b6abcd44f754ba9a07e981d6f9d0882", "message": "Improve handling different data types", "committedDate": "2020-03-25T19:45:48Z", "type": "commit"}, {"oid": "35bba0cfd149b14743a5bef8b2734db3ef7cf9ce", "url": "https://github.com/ibissource/iaf/commit/35bba0cfd149b14743a5bef8b2734db3ef7cf9ce", "message": "Handle date types as strings with format attribute", "committedDate": "2020-03-26T09:29:44Z", "type": "commit"}, {"oid": "d781e1fe4d4def01091815d0abefe653f5d11e68", "url": "https://github.com/ibissource/iaf/commit/d781e1fe4d4def01091815d0abefe653f5d11e68", "message": "Fix handling different data types correctly", "committedDate": "2020-03-26T09:43:21Z", "type": "commit"}, {"oid": "206aab0cef3805ebf3efe70d338c6825b47ae60c", "url": "https://github.com/ibissource/iaf/commit/206aab0cef3805ebf3efe70d338c6825b47ae60c", "message": "Improve handling numeric types", "committedDate": "2020-03-26T09:49:41Z", "type": "commit"}, {"oid": "4678fddd0cae054e634e5368bb77c1e1b2f6d35a", "url": "https://github.com/ibissource/iaf/commit/4678fddd0cae054e634e5368bb77c1e1b2f6d35a", "message": "Update tests", "committedDate": "2020-03-26T09:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4MjA4Ng==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398482086", "bodyText": "Voor nu in elk geval een warning loggen naar de log file, en zo mogelijk een commentaar in het gegenereerde schema opnemen.\nEffectief wordt er dan geen constraint aan het schema toegevoegd, maar is het wel een valide schema.\nZou wel goed zijn om er een test voor te maken,", "author": "gvanbrakel", "createdAt": "2020-03-26T10:56:45Z", "path": "core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java", "diffHunk": "@@ -340,4 +367,82 @@ public JsonStructure nillable(JsonStructure type) {\n \t\treturn typeBuilder.build();\n \t}\n \n-}\n+\tprivate void applyFacet(XSSimpleTypeDefinition simpleTypeDefinition, JsonObjectBuilder builder, String key, short facet){\n+\t\tif(simpleTypeDefinition.getFacet(facet) != null){\n+\t\t\tif(simpleTypeDefinition.getLexicalFacetValue(facet) != null){\n+\t\t\t\tswitch(facet){\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXINCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MININCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXEXCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MINEXCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXLENGTH:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MINLENGTH:\n+\t\t\t\t\t\t/*\n+\t\t\t\t\t\t\tNot sure about this.. \n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tsimpleTypeDefinition.getLexicalFacetValue(facet) returns a numeric value as string\n+\t\t\t\t\t\t\tif value > MAX_INT, Integer.parseInt(value) will throw NumberFormatException\n+\n+\t\t\t\t\t\t\tcurrently this exception is catched and retried as Long.ParseLong(value)\n+\t\t\t\t\t\t\tbut what if this throws NumberFormatException?\n+\n+\t\t\t\t\t\t\thow to deal with this properly?\n+\t\t\t\t\t\t*/\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tbuilder.add(key, Integer.parseInt(simpleTypeDefinition.getLexicalFacetValue(facet)));\n+\t\t\t\t\t\t} catch (NumberFormatException nfe) {\n+\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tbuilder.add(key, Long.parseLong(simpleTypeDefinition.getLexicalFacetValue(facet)));\n+\t\t\t\t\t\t\t} catch (NumberFormatException nfex) {\n+\t\t\t\t\t\t\t\t", "originalCommit": "4678fddd0cae054e634e5368bb77c1e1b2f6d35a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTM3MQ==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398541371", "bodyText": "Ik log nu elke poging om te parsen naar een bepaald formaat dat faalt en probeer de waarde vervolgens te parsen in een ander formaat dat grotere values ondersteunt.\nZie mijn ge-update comment in de code. Er is een test case dat succes gaf omdat de exceptie niet gegooid werd. Blijkbaar ging het om 20 digits numeric value dat een BigInt vereist.", "author": "Laurens-makel", "createdAt": "2020-03-26T12:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4MjA4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "879e02c5920910fc3e2ab681046de93711ce8d9c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\nindex ef9e5c7d4..c8724c986 100644\n--- a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n+++ b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n\n@@ -369,7 +370,8 @@ public class XmlTypeToJsonSchemaConverter  {\n \n \tprivate void applyFacet(XSSimpleTypeDefinition simpleTypeDefinition, JsonObjectBuilder builder, String key, short facet){\n \t\tif(simpleTypeDefinition.getFacet(facet) != null){\n-\t\t\tif(simpleTypeDefinition.getLexicalFacetValue(facet) != null){\n+\t\t\tString lexicalFacetValue = simpleTypeDefinition.getLexicalFacetValue(facet);\n+\t\t\tif(lexicalFacetValue != null){\n \t\t\t\tswitch(facet){\n \t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXINCLUSIVE:\n \t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MININCLUSIVE:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4MjU0Ng==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398482546", "bodyText": "kan je niet gewoon meteen deze value als een Long parsen? Gaat er dan iets mis?", "author": "gvanbrakel", "createdAt": "2020-03-26T10:57:34Z", "path": "core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java", "diffHunk": "@@ -340,4 +367,82 @@ public JsonStructure nillable(JsonStructure type) {\n \t\treturn typeBuilder.build();\n \t}\n \n-}\n+\tprivate void applyFacet(XSSimpleTypeDefinition simpleTypeDefinition, JsonObjectBuilder builder, String key, short facet){\n+\t\tif(simpleTypeDefinition.getFacet(facet) != null){\n+\t\t\tif(simpleTypeDefinition.getLexicalFacetValue(facet) != null){\n+\t\t\t\tswitch(facet){\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXINCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MININCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXEXCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MINEXCLUSIVE:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXLENGTH:\n+\t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MINLENGTH:\n+\t\t\t\t\t\t/*\n+\t\t\t\t\t\t\tNot sure about this.. \n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tsimpleTypeDefinition.getLexicalFacetValue(facet) returns a numeric value as string\n+\t\t\t\t\t\t\tif value > MAX_INT, Integer.parseInt(value) will throw NumberFormatException\n+\n+\t\t\t\t\t\t\tcurrently this exception is catched and retried as Long.ParseLong(value)\n+\t\t\t\t\t\t\tbut what if this throws NumberFormatException?\n+\n+\t\t\t\t\t\t\thow to deal with this properly?\n+\t\t\t\t\t\t*/\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tbuilder.add(key, Integer.parseInt(simpleTypeDefinition.getLexicalFacetValue(facet)));\n+\t\t\t\t\t\t} catch (NumberFormatException nfe) {", "originalCommit": "4678fddd0cae054e634e5368bb77c1e1b2f6d35a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjA5MA==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398542090", "bodyText": "Zie de update, ik zou in principe direct naar een BigInt kunnen parsen.\nIk weet alleen niet wat effici\u00ebnter is, het try/catchen of direct als BigInt lezen.", "author": "Laurens-makel", "createdAt": "2020-03-26T12:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4MjU0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "879e02c5920910fc3e2ab681046de93711ce8d9c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\nindex ef9e5c7d4..c8724c986 100644\n--- a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n+++ b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n\n@@ -369,7 +370,8 @@ public class XmlTypeToJsonSchemaConverter  {\n \n \tprivate void applyFacet(XSSimpleTypeDefinition simpleTypeDefinition, JsonObjectBuilder builder, String key, short facet){\n \t\tif(simpleTypeDefinition.getFacet(facet) != null){\n-\t\t\tif(simpleTypeDefinition.getLexicalFacetValue(facet) != null){\n+\t\t\tString lexicalFacetValue = simpleTypeDefinition.getLexicalFacetValue(facet);\n+\t\t\tif(lexicalFacetValue != null){\n \t\t\t\tswitch(facet){\n \t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MAXINCLUSIVE:\n \t\t\t\t\tcase XSSimpleTypeDefinition.FACET_MININCLUSIVE:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4Njk2Ng==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398486966", "bodyText": "Zou je nog een test kunnen maken (of Datatypes uitbreiden) voor 'pattern' en 'enumeration'? Die kom ik niet tegen in de test resultaten, en ik zie de applyFacet() ervoor hierboven twee keer.", "author": "gvanbrakel", "createdAt": "2020-03-26T11:05:01Z", "path": "core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java", "diffHunk": "@@ -145,14 +146,40 @@ public JsonStructure getDefinition(XSTypeDefinition typeDefinition) {\n \t\t\treturn builder.build();\n \t\t} else {\n \t\t\tXSSimpleTypeDefinition simpleTypeDefinition = (XSSimpleTypeDefinition)typeDefinition;\n-\t\t\tif (DEBUG) log.debug(\"typeDefinition.name [\"+typeDefinition.getName()+\"]\");\n+\t\t\tif (DEBUG) log.debug(\"typeDefinition.name [\"+typeDefinition.getName()+\"]\");;\n+\t\t\tif (DEBUG) log.debug(\"simpleTypeDefinition.getBuiltInKind [\"+simpleTypeDefinition.getBuiltInKind()+\"]\");\n \t\t\tif (DEBUG) log.debug(ToStringBuilder.reflectionToString(typeDefinition,ToStringStyle.MULTI_LINE_STYLE));\n+\n  \t\t\tJsonObjectBuilder builder = Json.createObjectBuilder();\n-\t\t\tif (simpleTypeDefinition.getNumeric()) {\n-\t\t\t\tbuilder.add(\"type\", \"number\");\n-\t\t\t} else if (simpleTypeDefinition.getBuiltInKind() == XSConstants.BOOLEAN_DT) {\n+\t\t\tshort builtInKind = simpleTypeDefinition.getBuiltInKind();\n+\t\t\tString dataType = getJsonDataType(builtInKind);\n+\t\t\t\n+\t\t\tif (dataType.equalsIgnoreCase(\"integer\") || dataType.equalsIgnoreCase(\"number\")) {\n+\t\t\t\tbuilder.add(\"type\", dataType.toLowerCase());\n+\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"maximum\", XSSimpleTypeDefinition.FACET_MAXINCLUSIVE);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"minimum\", XSSimpleTypeDefinition.FACET_MININCLUSIVE);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"exclusiveMaximum\", XSSimpleTypeDefinition.FACET_MAXEXCLUSIVE);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"exclusiveMinimum\", XSSimpleTypeDefinition.FACET_MINEXCLUSIVE);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"enumeration\", XSSimpleTypeDefinition.FACET_ENUMERATION);\n+\t\t\t} else if (dataType.equalsIgnoreCase(\"boolean\")) {\n \t\t\t\tbuilder.add(\"type\", \"boolean\");\n+\t\t\t} else if (dataType.equalsIgnoreCase(\"string\")) {\t\n+\t\t\t\tbuilder.add(\"type\", \"string\");\n+\t\t\t\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"maxLength\", XSSimpleTypeDefinition.FACET_MAXLENGTH);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"minLength\", XSSimpleTypeDefinition.FACET_MINLENGTH);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"pattern\", XSSimpleTypeDefinition.FACET_PATTERN);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"enumeration\", XSSimpleTypeDefinition.FACET_ENUMERATION);\n+\t\t\t} else if (dataType.equalsIgnoreCase(\"date\") || dataType.equalsIgnoreCase(\"date-time\") || dataType.equalsIgnoreCase(\"time\")) {\t\t\n+\t\t\t\tbuilder.add(\"type\", \"string\");\n+\t\t\t\t\n+\t\t\t\tbuilder.add(\"format\", dataType);\n+\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"pattern\", XSSimpleTypeDefinition.FACET_PATTERN);\n+\t\t\t\tapplyFacet(simpleTypeDefinition, builder, \"enumeration\", XSSimpleTypeDefinition.FACET_ENUMERATION);", "originalCommit": "4678fddd0cae054e634e5368bb77c1e1b2f6d35a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MzExMw==", "url": "https://github.com/ibissource/iaf/pull/543#discussion_r398543113", "bodyText": "Ik zie het, ik ben even gaan kijken en het klopt.\nIn eerste instantie werden alleen single valued facets behandeld. Ik heb de method applyFacet() aangepast om ook multi valued facets aan te kunnen.\nIn de aanwezige tests zijn inmiddels dus ook tests cases voor pattern en enumeration.", "author": "Laurens-makel", "createdAt": "2020-03-26T12:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4Njk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "879e02c5920910fc3e2ab681046de93711ce8d9c", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\nindex ef9e5c7d4..c8724c986 100644\n--- a/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n+++ b/core/src/main/java/nl/nn/adapterframework/align/XmlTypeToJsonSchemaConverter.java\n\n@@ -146,7 +147,7 @@ public class XmlTypeToJsonSchemaConverter  {\n \t\t\treturn builder.build();\n \t\t} else {\n \t\t\tXSSimpleTypeDefinition simpleTypeDefinition = (XSSimpleTypeDefinition)typeDefinition;\n-\t\t\tif (DEBUG) log.debug(\"typeDefinition.name [\"+typeDefinition.getName()+\"]\");;\n+\t\t\tif (DEBUG) log.debug(\"typeDefinition.name [\"+typeDefinition.getName()+\"]\");\n \t\t\tif (DEBUG) log.debug(\"simpleTypeDefinition.getBuiltInKind [\"+simpleTypeDefinition.getBuiltInKind()+\"]\");\n \t\t\tif (DEBUG) log.debug(ToStringBuilder.reflectionToString(typeDefinition,ToStringStyle.MULTI_LINE_STYLE));\n \n"}}, {"oid": "879e02c5920910fc3e2ab681046de93711ce8d9c", "url": "https://github.com/ibissource/iaf/commit/879e02c5920910fc3e2ab681046de93711ce8d9c", "message": "Fix support for bigints, patterns and enums", "committedDate": "2020-03-26T12:39:16Z", "type": "commit"}, {"oid": "2ec163e7ae3a1a2b0aca4dc882227db90d2e3293", "url": "https://github.com/ibissource/iaf/commit/2ec163e7ae3a1a2b0aca4dc882227db90d2e3293", "message": "Remove name attribute from simpleType", "committedDate": "2020-03-26T12:55:40Z", "type": "commit"}]}