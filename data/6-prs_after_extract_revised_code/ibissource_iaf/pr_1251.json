{"pr_number": 1251, "pr_title": "Fix #1060 use internet MessageID for ExchangeMailListener", "pr_createdAt": "2020-11-10T11:29:46Z", "pr_url": "https://github.com/ibissource/iaf/pull/1251", "timeline": [{"oid": "7466daeafab03470b50a8c7f9915bc9b9e5d0787", "url": "https://github.com/ibissource/iaf/commit/7466daeafab03470b50a8c7f9915bc9b9e5d0787", "message": "Fix #160 use Internet MessageID for refactored ExchangeMailListener", "committedDate": "2020-11-10T11:26:18Z", "type": "commit"}, {"oid": "1ed9de30895835c081884bb436f1ef8016ec78fe", "url": "https://github.com/ibissource/iaf/commit/1ed9de30895835c081884bb436f1ef8016ec78fe", "message": "add test file", "committedDate": "2020-11-10T11:28:02Z", "type": "commit"}, {"oid": "ec9b8035338eb452e790533e94e0aa919f8e1cd6", "url": "https://github.com/ibissource/iaf/commit/ec9b8035338eb452e790533e94e0aa919f8e1cd6", "message": "Add ExchangeFolderSender to PR", "committedDate": "2020-11-10T12:06:49Z", "type": "commit"}, {"oid": "d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "url": "https://github.com/ibissource/iaf/commit/d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "message": "Fix Codacy issue", "committedDate": "2020-11-10T12:31:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5MjMyMQ==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r520692321", "bodyText": "Dit hoort meer thuis in een MailFileSystemUtils... We moeten er voor zorgen dat de util classes niet uit de klauwen gaan lopen qua compliciteit en grootte.", "author": "nielsm5", "createdAt": "2020-11-10T16:20:52Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java", "diffHunk": "@@ -201,4 +206,63 @@ public void close() throws IOException {\n \t\t}\n \t}\n \n+\tpublic static <M,A> void addEmailInfoSimple(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {", "originalCommit": "d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3db18f7e51ec4ad3a716d05e4948b7c005733871", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\nindex cc6976a72..62809831f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\n\n@@ -206,63 +201,4 @@ public class FileSystemUtils {\n \t\t}\n \t}\n \n-\tpublic static <M,A> void addEmailInfoSimple(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n-\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n-\t}\n-\n-\tpublic static <M,A> void addEmailInfo(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n-\t\ttry (SaxElementBuilder recipientsXml = emailXml.startElement(\"recipients\")) {\n-\t\t\tfor(String address:fileSystem.getToRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"to\", address);\n-\t\t\t}\n-\t\t\tfor(String address:fileSystem.getCCRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"cc\", address);\n-\t\t\t}\n-\t\t\tfor(String address:fileSystem.getBCCRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"bcc\", address);\n-\t\t\t}\n-\t\t}\n-\t\temailXml.addElement(\"from\", fileSystem.getFrom(emailMessage));\n-\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n-\t\temailXml.addElement(\"message\", fileSystem.getMessageBody(emailMessage));\n-\t\ttry (SaxElementBuilder attachmentsXml = emailXml.startElement(\"attachments\")) {\n-\t\t\tfor (Iterator<A> it = fileSystem.listAttachments(emailMessage); it.hasNext();) {\n-\t\t\t\tfileSystem.extractAttachment(it.next(), attachmentsXml);\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new FileSystemException(\"Cannot extract attachment\",e);\n-\t\t}\n-\t\ttry (SaxElementBuilder headersXml = emailXml.startElement(\"headers\")) {\n-\t\t\tMap<String,Object> properties = fileSystem.getAdditionalFileProperties(emailMessage);\n-\t\t\tif (properties != null) {\n-\t\t\t\tfor (Map.Entry<String,Object> header: properties.entrySet()) {\n-\t\t\t\t\tif (header.getValue() instanceof List) {\n-\t\t\t\t\t\tfor(Object value:(List<?>)header.getValue()) {\n-\t\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)value);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)header.getValue());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-\t\temailXml.addElement(\"dateTimeSent\", sdf.format(fileSystem.getDateTimeSent(emailMessage)));\n-\t\temailXml.addElement(\"dateTimeReceived\", sdf.format(fileSystem.getDateTimeReceived(emailMessage)));\n-\t}\n-\n-\tpublic static <M,A> void addAttachmentInfo(IMailFileSystem<M,A> fileSystem, A attachment, SaxElementBuilder attachmentsXml) throws FileSystemException, SAXException {\n-\t\ttry (SaxElementBuilder attachmentXml = attachmentsXml.startElement(\"attachment\")) {\n-\t\t\tattachmentXml.addAttribute(\"name\", fileSystem.getAttachmentName(attachment));\n-\t\t\tString filename = fileSystem.getAttachmentFileName(attachment);\n-\t\t\tif (filename!=null) {\n-\t\t\t\tattachmentXml.addAttribute(\"filename\", fileSystem.getAttachmentFileName(attachment));\n-\t\t\t}\n-\t\t\tM emailMessage = fileSystem.getFileFromAttachment(attachment);\n-\t\t\tif (emailMessage!=null) {\n-\t\t\t\tfileSystem.extractEmail(emailMessage, attachmentXml);\n-\t\t\t}\n-\t\t}\n-\t}\n-\t\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5Mjk2MQ==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r520692961", "bodyText": "Kan je hier niet beter attachmentXml.addAttribute(\"filename\", filename); gebruiken?", "author": "nielsm5", "createdAt": "2020-11-10T16:21:47Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java", "diffHunk": "@@ -201,4 +206,63 @@ public void close() throws IOException {\n \t\t}\n \t}\n \n+\tpublic static <M,A> void addEmailInfoSimple(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n+\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n+\t}\n+\n+\tpublic static <M,A> void addEmailInfo(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n+\t\ttry (SaxElementBuilder recipientsXml = emailXml.startElement(\"recipients\")) {\n+\t\t\tfor(String address:fileSystem.getToRecipients(emailMessage)) {\n+\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"to\", address);\n+\t\t\t}\n+\t\t\tfor(String address:fileSystem.getCCRecipients(emailMessage)) {\n+\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"cc\", address);\n+\t\t\t}\n+\t\t\tfor(String address:fileSystem.getBCCRecipients(emailMessage)) {\n+\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"bcc\", address);\n+\t\t\t}\n+\t\t}\n+\t\temailXml.addElement(\"from\", fileSystem.getFrom(emailMessage));\n+\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n+\t\temailXml.addElement(\"message\", fileSystem.getMessageBody(emailMessage));\n+\t\ttry (SaxElementBuilder attachmentsXml = emailXml.startElement(\"attachments\")) {\n+\t\t\tfor (Iterator<A> it = fileSystem.listAttachments(emailMessage); it.hasNext();) {\n+\t\t\t\tfileSystem.extractAttachment(it.next(), attachmentsXml);\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new FileSystemException(\"Cannot extract attachment\",e);\n+\t\t}\n+\t\ttry (SaxElementBuilder headersXml = emailXml.startElement(\"headers\")) {\n+\t\t\tMap<String,Object> properties = fileSystem.getAdditionalFileProperties(emailMessage);\n+\t\t\tif (properties != null) {\n+\t\t\t\tfor (Map.Entry<String,Object> header: properties.entrySet()) {\n+\t\t\t\t\tif (header.getValue() instanceof List) {\n+\t\t\t\t\t\tfor(Object value:(List<?>)header.getValue()) {\n+\t\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)value);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)header.getValue());\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n+\t\temailXml.addElement(\"dateTimeSent\", sdf.format(fileSystem.getDateTimeSent(emailMessage)));\n+\t\temailXml.addElement(\"dateTimeReceived\", sdf.format(fileSystem.getDateTimeReceived(emailMessage)));\n+\t}\n+\n+\tpublic static <M,A> void addAttachmentInfo(IMailFileSystem<M,A> fileSystem, A attachment, SaxElementBuilder attachmentsXml) throws FileSystemException, SAXException {\n+\t\ttry (SaxElementBuilder attachmentXml = attachmentsXml.startElement(\"attachment\")) {\n+\t\t\tattachmentXml.addAttribute(\"name\", fileSystem.getAttachmentName(attachment));\n+\t\t\tString filename = fileSystem.getAttachmentFileName(attachment);\n+\t\t\tif (filename!=null) {\n+\t\t\t\tattachmentXml.addAttribute(\"filename\", fileSystem.getAttachmentFileName(attachment));", "originalCommit": "d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2MjI0NQ==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r522262245", "bodyText": "oeps", "author": "gvanbrakel", "createdAt": "2020-11-12T16:57:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5Mjk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3db18f7e51ec4ad3a716d05e4948b7c005733871", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\nindex cc6976a72..62809831f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemUtils.java\n\n@@ -206,63 +201,4 @@ public class FileSystemUtils {\n \t\t}\n \t}\n \n-\tpublic static <M,A> void addEmailInfoSimple(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n-\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n-\t}\n-\n-\tpublic static <M,A> void addEmailInfo(IMailFileSystem<M,A> fileSystem, M emailMessage, SaxElementBuilder emailXml) throws FileSystemException, SAXException {\n-\t\ttry (SaxElementBuilder recipientsXml = emailXml.startElement(\"recipients\")) {\n-\t\t\tfor(String address:fileSystem.getToRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"to\", address);\n-\t\t\t}\n-\t\t\tfor(String address:fileSystem.getCCRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"cc\", address);\n-\t\t\t}\n-\t\t\tfor(String address:fileSystem.getBCCRecipients(emailMessage)) {\n-\t\t\t\trecipientsXml.addElement(\"recipient\", \"type\", \"bcc\", address);\n-\t\t\t}\n-\t\t}\n-\t\temailXml.addElement(\"from\", fileSystem.getFrom(emailMessage));\n-\t\temailXml.addElement(\"subject\", fileSystem.getSubject(emailMessage));\n-\t\temailXml.addElement(\"message\", fileSystem.getMessageBody(emailMessage));\n-\t\ttry (SaxElementBuilder attachmentsXml = emailXml.startElement(\"attachments\")) {\n-\t\t\tfor (Iterator<A> it = fileSystem.listAttachments(emailMessage); it.hasNext();) {\n-\t\t\t\tfileSystem.extractAttachment(it.next(), attachmentsXml);\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new FileSystemException(\"Cannot extract attachment\",e);\n-\t\t}\n-\t\ttry (SaxElementBuilder headersXml = emailXml.startElement(\"headers\")) {\n-\t\t\tMap<String,Object> properties = fileSystem.getAdditionalFileProperties(emailMessage);\n-\t\t\tif (properties != null) {\n-\t\t\t\tfor (Map.Entry<String,Object> header: properties.entrySet()) {\n-\t\t\t\t\tif (header.getValue() instanceof List) {\n-\t\t\t\t\t\tfor(Object value:(List<?>)header.getValue()) {\n-\t\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)value);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\theadersXml.addElement(\"header\", \"name\", header.getKey(), (String)header.getValue());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-\t\temailXml.addElement(\"dateTimeSent\", sdf.format(fileSystem.getDateTimeSent(emailMessage)));\n-\t\temailXml.addElement(\"dateTimeReceived\", sdf.format(fileSystem.getDateTimeReceived(emailMessage)));\n-\t}\n-\n-\tpublic static <M,A> void addAttachmentInfo(IMailFileSystem<M,A> fileSystem, A attachment, SaxElementBuilder attachmentsXml) throws FileSystemException, SAXException {\n-\t\ttry (SaxElementBuilder attachmentXml = attachmentsXml.startElement(\"attachment\")) {\n-\t\t\tattachmentXml.addAttribute(\"name\", fileSystem.getAttachmentName(attachment));\n-\t\t\tString filename = fileSystem.getAttachmentFileName(attachment);\n-\t\t\tif (filename!=null) {\n-\t\t\t\tattachmentXml.addAttribute(\"filename\", fileSystem.getAttachmentFileName(attachment));\n-\t\t\t}\n-\t\t\tM emailMessage = fileSystem.getFileFromAttachment(attachment);\n-\t\t\tif (emailMessage!=null) {\n-\t\t\t\tfileSystem.extractEmail(emailMessage, attachmentXml);\n-\t\t\t}\n-\t\t}\n-\t}\n-\t\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMzc3Mw==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r521523773", "bodyText": "Ik snap niet waarom je dit hier doet", "author": "nielsm5", "createdAt": "2020-11-11T17:34:31Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java", "diffHunk": "@@ -332,7 +330,20 @@ public boolean exists(Item f) throws FileSystemException {\n \t\t\tif (findResults.getTotalCount() == 0) {\n \t\t\t\treturn FileSystemUtils.getDirectoryStream(null);\n \t\t\t} else {\n-\t\t\t\treturn FileSystemUtils.getDirectoryStream(findResults.getItems().iterator());\n+\t\t\t\tIterator<Item> itemIterator = findResults.getItems().iterator();\n+\t\t\t\treturn FileSystemUtils.getDirectoryStream(new Iterator<EmailMessage>() {", "originalCommit": "d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2MjMxMw==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r522262313", "bodyText": "must cast  to  separately, cannot cast Iterator to Iterator", "author": "gvanbrakel", "createdAt": "2020-11-12T16:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMzc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3db18f7e51ec4ad3a716d05e4948b7c005733871", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\nindex b1c9f8b39..c69f98fef 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n\n@@ -340,6 +340,7 @@ public class ExchangeFileSystem implements IMailFileSystem<EmailMessage,Attachme\n \n \t\t\t\t\t@Override\n \t\t\t\t\tpublic EmailMessage next() {\n+\t\t\t\t\t\t// must cast <Items> to <EmailMessage> separately, cannot cast Iterator<Item> to Iterator<EmailMessage> \n \t\t\t\t\t\treturn (EmailMessage)itemIterator.next();\n \t\t\t\t\t}\n \t\t\t\t\t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyNDY5NQ==", "url": "https://github.com/ibissource/iaf/pull/1251#discussion_r521524695", "bodyText": "Hier ook een log.warn oid neerzetten dat een onverwacht attachment ding opgegeven is?", "author": "nielsm5", "createdAt": "2020-11-11T17:35:43Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java", "diffHunk": "@@ -555,6 +569,18 @@ public InputStream readAttachment(Attachment a) throws FileSystemException, IOEx\n \t\treturn binaryInputStream;\n \t}\n \n+\t@Override\n+\tpublic EmailMessage getFileFromAttachment(Attachment a) throws FileSystemException {\n+\t\tif (a instanceof ItemAttachment) {\n+\t\t\tItemAttachment ia = (ItemAttachment) a;\n+\t\t\tItem aItem = ia.getItem();\n+\t\t\tif (aItem instanceof EmailMessage) {\n+\t\t\t\treturn (EmailMessage) aItem;\n+\t\t\t}\n+\t\t}\n+\t\treturn null;", "originalCommit": "d2dff84feeacc29c9ccbd2df3bdb47f654bb4ff9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3db18f7e51ec4ad3a716d05e4948b7c005733871", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\nindex b1c9f8b39..c69f98fef 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java\n\n@@ -570,14 +571,14 @@ public class ExchangeFileSystem implements IMailFileSystem<EmailMessage,Attachme\n \t}\n \n \t@Override\n-\tpublic EmailMessage getFileFromAttachment(Attachment a) throws FileSystemException {\n-\t\tif (a instanceof ItemAttachment) {\n-\t\t\tItemAttachment ia = (ItemAttachment) a;\n-\t\t\tItem aItem = ia.getItem();\n-\t\t\tif (aItem instanceof EmailMessage) {\n-\t\t\t\treturn (EmailMessage) aItem;\n+\tpublic EmailMessage getFileFromAttachment(Attachment attachment) throws FileSystemException {\n+\t\tif (attachment instanceof ItemAttachment) {\n+\t\t\tItem item = ((ItemAttachment) attachment).getItem();\n+\t\t\tif (item instanceof EmailMessage) {\n+\t\t\t\treturn (EmailMessage) item;\n \t\t\t}\n \t\t}\n+\t\t// Attachment is not an EmailMessage itself, no need to parse further, can just return null\n \t\treturn null;\n \t}\n \n"}}, {"oid": "3db18f7e51ec4ad3a716d05e4948b7c005733871", "url": "https://github.com/ibissource/iaf/commit/3db18f7e51ec4ad3a716d05e4948b7c005733871", "message": "Fix issues, add separate MailListener and MailFileSystemUtils", "committedDate": "2020-11-12T17:27:12Z", "type": "commit"}]}