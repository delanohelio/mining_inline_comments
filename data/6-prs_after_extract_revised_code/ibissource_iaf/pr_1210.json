{"pr_number": 1210, "pr_title": "Show liquibase exceptions in configuration warnings", "pr_createdAt": "2020-10-27T12:17:08Z", "pr_url": "https://github.com/ibissource/iaf/pull/1210", "timeline": [{"oid": "f359abea32a47ef5049716e0a6935572a4c84d5b", "url": "https://github.com/ibissource/iaf/commit/f359abea32a47ef5049716e0a6935572a4c84d5b", "message": "Show liquibase exceptions in configuration warnings", "committedDate": "2020-10-27T12:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3NzU1Mw==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r512677553", "bodyText": "I don't think it is a good idea to log this message in the ConfigurationWarnings as well as in the MessageKeeper.", "author": "gvanbrakel", "createdAt": "2020-10-27T13:10:43Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java", "diffHunk": "@@ -351,6 +351,7 @@ private void digestClassLoaderConfiguration(ClassLoader classLoader,\n \t\t\t\t\t\tdatabaseMigrator.close();\n \t\t\t\t\t}\n \t\t\t\t\tcatch (Exception e) {\n+\t\t\t\t\t\tConfigurationWarnings.add(LOG, e.getMessage());", "originalCommit": "f359abea32a47ef5049716e0a6935572a4c84d5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1MjYzMA==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r512752630", "bodyText": "I do agree", "author": "alisihab", "createdAt": "2020-10-27T14:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3NzU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0b6ca07e2e01ea0f26fd05dbc1821f5b7bd0940d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java b/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\nindex 281fdf2e9..7d90c68ad 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\n\n@@ -351,8 +351,9 @@ public class IbisContext extends IbisApplicationContext {\n \t\t\t\t\t\tdatabaseMigrator.close();\n \t\t\t\t\t}\n \t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\tConfigurationWarnings.add(LOG, e.getMessage());\n-\t\t\t\t\t\tlog(currentConfigurationName, currentConfigurationVersion, e.getMessage(), MessageKeeperLevel.ERROR);\n+\t\t\t\t\t\tString errorMsg = \"Error configuring LiquiBase for configuration [\"+currentConfigurationName+\"]. \";\n+\t\t\t\t\t\terrorMsg += e.getMessage();\n+\t\t\t\t\t\tConfigurationWarnings.add(LOG, errorMsg, e);\n \t\t\t\t\t}\n \t\t\t\t}\n \n"}}, {"oid": "0b6ca07e2e01ea0f26fd05dbc1821f5b7bd0940d", "url": "https://github.com/ibissource/iaf/commit/0b6ca07e2e01ea0f26fd05dbc1821f5b7bd0940d", "message": "do not show the message in the configuration messages only show it in configuration warnings", "committedDate": "2020-10-27T14:44:53Z", "type": "commit"}, {"oid": "084ed6c23e25c710ecb4ca4d846d99792ec095dc", "url": "https://github.com/ibissource/iaf/commit/084ed6c23e25c710ecb4ca4d846d99792ec095dc", "message": "rename add method for global warnings, show liquibase exceptions as config warnings", "committedDate": "2020-10-28T10:06:18Z", "type": "commit"}, {"oid": "7707e88a076b649f5fb14bb1a88cd6beca5dec4e", "url": "https://github.com/ibissource/iaf/commit/7707e88a076b649f5fb14bb1a88cd6beca5dec4e", "message": "remove unused import", "committedDate": "2020-10-28T12:39:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYxNzk2NA==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r513617964", "bodyText": "These warnings are very configuration specific. If you pass the Configuration that is parsed in the constructor of XmlErrorHandler, than you can make these warnings configuration specific", "author": "gvanbrakel", "createdAt": "2020-10-28T17:09:31Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationDigester.java", "diffHunk": "@@ -100,15 +100,15 @@\n \tprivate class XmlErrorHandler implements ErrorHandler  {\n \t\t@Override\n \t\tpublic void warning(SAXParseException exception) throws SAXParseException {\n-\t\t\tConfigurationWarnings.add(log, \"Warning when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n+\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Warning when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());", "originalCommit": "7707e88a076b649f5fb14bb1a88cd6beca5dec4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationDigester.java b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationDigester.java\nindex 59d906a79..fa8682c3c 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationDigester.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationDigester.java\n\n@@ -98,17 +98,21 @@ public class ConfigurationDigester {\n \tString lastResolvedEntity = null;\n \n \tprivate class XmlErrorHandler implements ErrorHandler  {\n+\t\tprivate Configuration configuration;\n+\t\tpublic XmlErrorHandler(Configuration configuration) {\n+\t\t\tthis.configuration = configuration;\n+\t\t}\n \t\t@Override\n \t\tpublic void warning(SAXParseException exception) throws SAXParseException {\n-\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Warning when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n+\t\t\tConfigurationWarnings.add(configuration, log, \"Warning when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n \t\t}\n \t\t@Override\n \t\tpublic void error(SAXParseException exception) throws SAXParseException {\n-\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Error when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n+\t\t\tConfigurationWarnings.add(configuration, log, \"Error when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n \t\t}\n \t\t@Override\n \t\tpublic void fatalError(SAXParseException exception) throws SAXParseException {\n-\t\t\tConfigurationWarnings.addGlobalWarning(log, \"FatalError when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n+\t\t\tConfigurationWarnings.add(configuration, log, \"FatalError when validating against schema [\"+CONFIGURATION_VALIDATION_SCHEMA+\"] at line,column [\"+exception.getLineNumber()+\",\"+exception.getColumnNumber()+\"]: \" + exception.getMessage());\n \t\t}\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyNTUwNQ==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r513625505", "bodyText": "LiquibaseImpl is not really a named object, so this is a tricky/hacky way to pass the name.\nI suggest you pass the Configuration as an argument to databaseMigrator.configure() in IbisContext line 349, and use that as the named object", "author": "gvanbrakel", "createdAt": "2020-10-28T17:20:13Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/migration/LiquibaseImpl.java", "diffHunk": "@@ -37,7 +38,7 @@\n  * @since\t7.0-B4\n  *\n  */\n-public class LiquibaseImpl {\n+public class LiquibaseImpl implements INamedObject{", "originalCommit": "7707e88a076b649f5fb14bb1a88cd6beca5dec4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/LiquibaseImpl.java b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/LiquibaseImpl.java\nindex c86ac5771..b4fd260aa 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/LiquibaseImpl.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/LiquibaseImpl.java\n\n@@ -38,18 +38,18 @@ import liquibase.resource.ClassLoaderResourceAccessor;\n  * @since\t7.0-B4\n  *\n  */\n-public class LiquibaseImpl implements INamedObject{\n+public class LiquibaseImpl {\n \n \tprivate Liquibase liquibase = null;\n \tprivate Contexts contexts;\n \tprivate LabelExpression labelExpression = new LabelExpression();\n \tprivate IbisContext ibisContext = null;\n-\tprivate String configurationName = null;\n+\tprivate Configuration configuration = null;\n \tprotected Logger log = LogUtil.getLogger(this);\n \n-\tpublic LiquibaseImpl(IbisContext ibisContext, ClassLoader classLoader, JdbcConnection connection, String configurationName, String changeLogFile) throws LiquibaseException {\n+\tpublic LiquibaseImpl(IbisContext ibisContext, ClassLoader classLoader, JdbcConnection connection, Configuration configuration, String changeLogFile) throws LiquibaseException {\n \t\tthis.ibisContext = ibisContext;\n-\t\tthis.configurationName = configurationName;\n+\t\tthis.configuration = configuration;\n \n \t\tClassLoaderResourceAccessor resourceOpener = new ClassLoaderResourceAccessor(classLoader);\n \n"}}, {"oid": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "url": "https://github.com/ibissource/iaf/commit/f40a8386a092ee6d24e943c6202385d1cc5f124f", "message": "work on the feedback", "committedDate": "2020-10-29T12:49:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1MTA1Nw==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514251057", "bodyText": "You don't need to specify the ClassLoader as you can retrieve this from the Configuration.", "author": "nielsm5", "createdAt": "2020-10-29T13:19:16Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java", "diffHunk": "@@ -41,19 +42,16 @@ public Migrator() {\n \n \t@Override\n \tpublic void configure() throws ConfigurationException {\n-\t\tconfigure(null, null, null);\n+\t\tthrow new IllegalStateException(\"No configuration is specified!\");\n \t}\n \n-\tpublic void configure(String configurationName) throws ConfigurationException {\n-\t\tconfigure(configurationName, null, null);\n+\tpublic void configure(Configuration configuration, ClassLoader classLoader) throws ConfigurationException {\n+\t\tconfigure(configuration, classLoader, null);\n \t}\n \n-\tpublic void configure(String configurationName, ClassLoader classLoader) throws ConfigurationException {\n-\t\tconfigure(configurationName, classLoader, null);\n-\t}\n-\n-\tpublic synchronized void configure(String configurationName, ClassLoader classLoader, String changeLogFile) throws ConfigurationException {\n-\t\tsetName(\"JdbcMigrator for configuration[\"+configurationName+\"]\");\n+\tpublic synchronized void configure(Configuration configuration, ClassLoader classLoader, String changeLogFile) throws ConfigurationException {\n+\t\tsetName(\"JdbcMigrator for configuration[\"+ configuration.getName() +\"]\");\n+\t\tsuper.configure();", "originalCommit": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df5d019b5a86320502aee1aef0ea510974826b3e", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\nindex 9000881da..5d4ced52d 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\n\n@@ -45,24 +46,24 @@ public class Migrator extends JdbcFacade {\n \t\tthrow new IllegalStateException(\"No configuration is specified!\");\n \t}\n \n-\tpublic void configure(Configuration configuration, ClassLoader classLoader) throws ConfigurationException {\n-\t\tconfigure(configuration, classLoader, null);\n+\tpublic void configure(Configuration configuration) throws ConfigurationException {\n+\t\tconfigure(configuration, null);\n \t}\n \n-\tpublic synchronized void configure(Configuration configuration, ClassLoader classLoader, String changeLogFile) throws ConfigurationException {\n+\tpublic synchronized void configure(Configuration configuration, String changeLogFile) throws ConfigurationException {\n \t\tsetName(\"JdbcMigrator for configuration[\"+ configuration.getName() +\"]\");\n \t\tsuper.configure();\n \n-\t\tAppConstants appConstants = AppConstants.getInstance(classLoader);\n+\t\tAppConstants appConstants = AppConstants.getInstance(configuration.getClassLoader());\n \n \t\tif(changeLogFile == null)\n \t\t\tchangeLogFile = appConstants.getString(\"liquibase.changeLogFile\", \"DatabaseChangelog.xml\");\n \n-\t\tLiquibaseClassLoaderWrapper cl = new LiquibaseClassLoaderWrapper(classLoader);\n+\t\tLiquibaseClassLoaderWrapper cl = new LiquibaseClassLoaderWrapper(configuration.getClassLoader());\n \t\tif(cl.getResource(changeLogFile) == null) {\n \t\t\tString msg = \"unable to find database changelog file [\"+changeLogFile+\"]\";\n \t\t\tif(configuration.getName() != null)\n-\t\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(classLoader)+\"]\";\n+\t\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(configuration.getClassLoader())+\"]\";\n \n \t\t\tlog.debug(msg);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1MjYzNg==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514252636", "bodyText": "This can be a configuration warning", "author": "nielsm5", "createdAt": "2020-10-29T13:21:41Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java", "diffHunk": "@@ -50,7 +50,7 @@ public void configure() throws ConfigurationException {\n \tpublic void configure(boolean trust) throws ConfigurationException {\n \t\tsuper.configure();\n \t\tif (!trust) {\n-\t\t\tConfigurationWarnings.add(log, \"The class [\"+ClassUtils.nameOf(this)+\"] is used one or more times. This may cause potential SQL injections!\");\n+\t\t\tConfigurationWarnings.addGlobalWarning(log, \"The class [\"+ClassUtils.nameOf(this)+\"] is used one or more times. This may cause potential SQL injections!\");", "originalCommit": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df5d019b5a86320502aee1aef0ea510974826b3e", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java b/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\nindex 08e316a45..8cb9854e4 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/DirectQuerySender.java\n\n@@ -50,7 +50,7 @@ public class DirectQuerySender extends JdbcQuerySenderBase<Connection>{\n \tpublic void configure(boolean trust) throws ConfigurationException {\n \t\tsuper.configure();\n \t\tif (!trust) {\n-\t\t\tConfigurationWarnings.addGlobalWarning(log, \"The class [\"+ClassUtils.nameOf(this)+\"] is used one or more times. This may cause potential SQL injections!\");\n+\t\t\tConfigurationWarnings.add(this, log, \"The class [\"+ClassUtils.nameOf(this)+\"] is used one or more times. This may cause potential SQL injections!\");\n \t\t}\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1Mzk1OA==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514253958", "bodyText": "Might be best to leave this in the try/catch, as otherwise it can prevent the configuration from starting up.", "author": "nielsm5", "createdAt": "2020-10-29T13:23:43Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java", "diffHunk": "@@ -343,15 +343,15 @@ private void digestClassLoaderConfiguration(ClassLoader classLoader,\n \t\t\t\tConfigurationWarnings.getInstance().setActiveConfiguration(configuration);\n \n \t\t\t\tif(AppConstants.getInstance(classLoader).getBoolean(\"jdbc.migrator.active\", false)) {\n+\t\t\t\t\tMigrator databaseMigrator = getBean(\"jdbcMigrator\", Migrator.class);", "originalCommit": "f40a8386a092ee6d24e943c6202385d1cc5f124f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df5d019b5a86320502aee1aef0ea510974826b3e", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java b/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\nindex afb1d228f..f3aaa42a2 100644\n--- a/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\n+++ b/core/src/main/java/nl/nn/adapterframework/configuration/IbisContext.java\n\n@@ -343,15 +343,14 @@ public class IbisContext extends IbisApplicationContext {\n \t\t\t\tConfigurationWarnings.getInstance().setActiveConfiguration(configuration);\n \n \t\t\t\tif(AppConstants.getInstance(classLoader).getBoolean(\"jdbc.migrator.active\", false)) {\n-\t\t\t\t\tMigrator databaseMigrator = getBean(\"jdbcMigrator\", Migrator.class);\n \t\t\t\t\ttry {\n+\t\t\t\t\t\tMigrator databaseMigrator = getBean(\"jdbcMigrator\", Migrator.class);\n \t\t\t\t\t\tdatabaseMigrator.setIbisContext(this);\n-\t\t\t\t\t\tdatabaseMigrator.configure(configuration, classLoader);\n+\t\t\t\t\t\tdatabaseMigrator.configure(configuration);\n \t\t\t\t\t\tdatabaseMigrator.update();\n \t\t\t\t\t\tdatabaseMigrator.close();\n-\t\t\t\t\t}\n-\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\tConfigurationWarnings.add(databaseMigrator, LOG, e.getMessage(), e);\n+\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t\tlog(currentConfigurationName, currentConfigurationVersion, e.getMessage(), MessageKeeperLevel.ERROR);\n \t\t\t\t\t}\n \t\t\t\t}\n \n"}}, {"oid": "df5d019b5a86320502aee1aef0ea510974826b3e", "url": "https://github.com/ibissource/iaf/commit/df5d019b5a86320502aee1aef0ea510974826b3e", "message": "feedback fixes", "committedDate": "2020-10-29T14:29:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMDgzNw==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514920837", "bodyText": "The null check is not necessary here anymore", "author": "gvanbrakel", "createdAt": "2020-10-30T07:49:34Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java", "diffHunk": "@@ -41,30 +43,27 @@ public Migrator() {\n \n \t@Override\n \tpublic void configure() throws ConfigurationException {\n-\t\tconfigure(null, null, null);\n+\t\tthrow new IllegalStateException(\"No configuration is specified!\");\n \t}\n \n-\tpublic void configure(String configurationName) throws ConfigurationException {\n-\t\tconfigure(configurationName, null, null);\n+\tpublic void configure(Configuration configuration) throws ConfigurationException {\n+\t\tconfigure(configuration, null);\n \t}\n \n-\tpublic void configure(String configurationName, ClassLoader classLoader) throws ConfigurationException {\n-\t\tconfigure(configurationName, classLoader, null);\n-\t}\n-\n-\tpublic synchronized void configure(String configurationName, ClassLoader classLoader, String changeLogFile) throws ConfigurationException {\n-\t\tsetName(\"JdbcMigrator for configuration[\"+configurationName+\"]\");\n+\tpublic synchronized void configure(Configuration configuration, String changeLogFile) throws ConfigurationException {\n+\t\tsetName(\"JdbcMigrator for configuration[\"+ configuration.getName() +\"]\");\n+\t\tsuper.configure();\n \n-\t\tAppConstants appConstants = AppConstants.getInstance(classLoader);\n+\t\tAppConstants appConstants = AppConstants.getInstance(configuration.getClassLoader());\n \n \t\tif(changeLogFile == null)\n \t\t\tchangeLogFile = appConstants.getString(\"liquibase.changeLogFile\", \"DatabaseChangelog.xml\");\n \n-\t\tLiquibaseClassLoaderWrapper cl = new LiquibaseClassLoaderWrapper(classLoader);\n+\t\tLiquibaseClassLoaderWrapper cl = new LiquibaseClassLoaderWrapper(configuration.getClassLoader());\n \t\tif(cl.getResource(changeLogFile) == null) {\n \t\t\tString msg = \"unable to find database changelog file [\"+changeLogFile+\"]\";\n-\t\t\tif(configurationName != null)\n-\t\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(classLoader)+\"]\";\n+\t\t\tif(configuration.getName() != null)\n+\t\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(configuration.getClassLoader())+\"]\";", "originalCommit": "df5d019b5a86320502aee1aef0ea510974826b3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcaebe8dee36660134b095c7166b81c7340d279b", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\nindex 5d4ced52d..6d8af0243 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/migration/Migrator.java\n\n@@ -62,9 +62,7 @@ public class Migrator extends JdbcFacade {\n \t\tLiquibaseClassLoaderWrapper cl = new LiquibaseClassLoaderWrapper(configuration.getClassLoader());\n \t\tif(cl.getResource(changeLogFile) == null) {\n \t\t\tString msg = \"unable to find database changelog file [\"+changeLogFile+\"]\";\n-\t\t\tif(configuration.getName() != null)\n-\t\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(configuration.getClassLoader())+\"]\";\n-\n+\t\t\tmsg += \" classLoader [\"+ClassUtils.nameOf(configuration.getClassLoader())+\"]\";\n \t\t\tlog.debug(msg);\n \t\t}\n \t\telse {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMTYwNA==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514921604", "bodyText": "This can be a configuration warning", "author": "gvanbrakel", "createdAt": "2020-10-30T07:51:35Z", "path": "core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java", "diffHunk": "@@ -119,7 +119,7 @@ private void updateFlowDiagram(Configuration configuration) {\n \t\t\ttry {\n \t\t\t\tflowDiagramManager.generate(configuration);\n \t\t\t} catch (IOException e) {\n-\t\t\t\tConfigurationWarnings.add(log, \"Error generating flow diagram for configuration [\"+configuration.getName()+\"]\", e);\n+\t\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Error generating flow diagram for configuration [\"+configuration.getName()+\"]\", e);", "originalCommit": "df5d019b5a86320502aee1aef0ea510974826b3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcaebe8dee36660134b095c7166b81c7340d279b", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java b/core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java\nindex c2f377d12..fed2fd6ad 100644\n--- a/core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java\n+++ b/core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java\n\n@@ -119,7 +119,7 @@ public class DefaultIbisManager implements IbisManager, InitializingBean {\n \t\t\ttry {\n \t\t\t\tflowDiagramManager.generate(configuration);\n \t\t\t} catch (IOException e) {\n-\t\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Error generating flow diagram for configuration [\"+configuration.getName()+\"]\", e);\n+\t\t\t\tConfigurationWarnings.add(configuration, log, \"Error generating flow diagram for configuration [\"+configuration.getName()+\"]\", e);\n \t\t\t}\n \t\t}\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMTY5MQ==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514921691", "bodyText": "This can be a configuration warning", "author": "gvanbrakel", "createdAt": "2020-10-30T07:51:47Z", "path": "core/src/main/java/nl/nn/adapterframework/validation/XercesXmlValidator.java", "diffHunk": "@@ -132,7 +132,7 @@\n \t\t\t\tcache.open();\n \t\t\t} catch (ConfigurationException e) {\n \t\t\t\tcache = null;\n-\t\t\t\tConfigurationWarnings.add(log, \"Could not configure EhCache for XercesXmlValidator (xmlValidator.maxInitialised will be ignored)\", e);\n+\t\t\t\tConfigurationWarnings.addGlobalWarning(log, \"Could not configure EhCache for XercesXmlValidator (xmlValidator.maxInitialised will be ignored)\", e);", "originalCommit": "df5d019b5a86320502aee1aef0ea510974826b3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3MTc2MQ==", "url": "https://github.com/ibissource/iaf/pull/1210#discussion_r514971761", "bodyText": "it is in a static block where we don't have the configuration info", "author": "alisihab", "createdAt": "2020-10-30T09:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMTY5MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fcaebe8dee36660134b095c7166b81c7340d279b", "url": "https://github.com/ibissource/iaf/commit/fcaebe8dee36660134b095c7166b81c7340d279b", "message": "work on the feedback", "committedDate": "2020-10-30T09:38:08Z", "type": "commit"}]}