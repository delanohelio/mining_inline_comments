{"pr_number": 1356, "pr_title": "Introduction of ProcessState", "pr_createdAt": "2020-12-23T13:39:22Z", "pr_url": "https://github.com/ibissource/iaf/pull/1356", "timeline": [{"oid": "fd49a37b2c3c7ce64191d89e67f506d2c8640553", "url": "https://github.com/ibissource/iaf/commit/fd49a37b2c3c7ce64191d89e67f506d2c8640553", "message": "Introduction of ProcessState", "committedDate": "2020-12-23T13:38:11Z", "type": "commit"}, {"oid": "847ee3fff18e602b36984c80dc518c26157b4896", "url": "https://github.com/ibissource/iaf/commit/847ee3fff18e602b36984c80dc518c26157b4896", "message": "Merge branch 'master' into Approach_to_#1321_generalised_message_browsers", "committedDate": "2021-01-04T13:43:23Z", "type": "commit"}, {"oid": "587b403d0dc0671fb88ecc2b46d9b9e9023a16cc", "url": "https://github.com/ibissource/iaf/commit/587b403d0dc0671fb88ecc2b46d9b9e9023a16cc", "message": "Fix #1363 make move to inProcess more robust", "committedDate": "2021-01-05T13:54:05Z", "type": "commit"}, {"oid": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "url": "https://github.com/ibissource/iaf/commit/6e7f16e3605bed599ab1701f116743fb189f3e4e", "message": "Deprecate JdbcQueryListener in favor of JdbcTableListener", "committedDate": "2021-01-05T14:03:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3ODg1OA==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r551978858", "bodyText": "manageability", "author": "nielsm5", "createdAt": "2021-01-05T14:50:00Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQueryListener.java", "diffHunk": "@@ -28,6 +29,8 @@\n  *\n  * @since   4.7\n  */\n+@Deprecated\n+@ConfigurationWarning(\"Please replace with JdbcTableListener for ease of configuration and improved managebility\")", "originalCommit": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQueryListener.java b/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQueryListener.java\nindex ef3b6b9c8..1bc836e26 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQueryListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQueryListener.java\n\n@@ -30,7 +30,7 @@ import nl.nn.adapterframework.doc.IbisDoc;\n  * @since   4.7\n  */\n @Deprecated\n-@ConfigurationWarning(\"Please replace with JdbcTableListener for ease of configuration and improved managebility\")\n+@ConfigurationWarning(\"Please replace with JdbcTableListener for ease of configuration and improved manageability\")\n public class JdbcQueryListener extends JdbcListener {\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MDY5Mw==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r551980693", "bodyText": "oeps?", "author": "nielsm5", "createdAt": "2021-01-05T14:53:03Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1954,21 +1993,22 @@ public void setMessageLog(ITransactionalStorage<Serializable> messageLog) {\n \t * returns the {@link ITransactionalStorage} if it is provided in the configuration. It is used to store messages that have been processed successfully. If present, this storage will be managed by the Receiver.\n \t */\n \tpublic ITransactionalStorage<Serializable> getMessageLog() {\n-\t\treturn messageLog!=null && messageLog instanceof ITransactionalStorage ? (ITransactionalStorage)messageLog: null;\n-\t}\n-\t/**\n-\t * returns a browser for the messageLog, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage messageLog} in the configuration. \n-\t */\n-\tpublic IMessageBrowser<Serializable> getMessageLogBrowser() {\n-\t\treturn messageLog;\n-\t}\n-\n-\t/**\n-\t * returns a browser of messages inProcess, if provided as a {@link IMessageBrowser} by the listener itself. \n-\t */\n-\tpublic IMessageBrowser<Serializable> getInProcessBrowser() {\n-\t\treturn inProcessBrowser;\n-\t}\n+\t\tIMessageBrowser<?> messageLog =  messageBrowsers.get(ProcessState.DONE);\n+\t\treturn messageLog instanceof ITransactionalStorage ? (ITransactionalStorage)messageLog: null;\n+\t}\n+//\t/**\n+//\t * returns a browser for the messageLog, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage messageLog} in the configuration. \n+//\t */\n+//\tpublic IMessageBrowser<Serializable> getMessageLogBrowser() {\n+//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.DONE);\n+//\t}\n+//\n+//\t/**\n+//\t * returns a browser of messages inProcess, if provided as a {@link IMessageBrowser} by the listener itself. \n+//\t */\n+//\tpublic IMessageBrowser<Serializable> getInProcessBrowser() {\n+//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.INPROCESS);\n+//\t}", "originalCommit": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java b/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\nindex 5454ebda6..0840c6c20 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\n\n@@ -1996,20 +1984,6 @@ public class Receiver<M> implements IManagable, IReceiverStatistics, IMessageHan\n \t\tIMessageBrowser<?> messageLog =  messageBrowsers.get(ProcessState.DONE);\n \t\treturn messageLog instanceof ITransactionalStorage ? (ITransactionalStorage)messageLog: null;\n \t}\n-//\t/**\n-//\t * returns a browser for the messageLog, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage messageLog} in the configuration. \n-//\t */\n-//\tpublic IMessageBrowser<Serializable> getMessageLogBrowser() {\n-//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.DONE);\n-//\t}\n-//\n-//\t/**\n-//\t * returns a browser of messages inProcess, if provided as a {@link IMessageBrowser} by the listener itself. \n-//\t */\n-//\tpublic IMessageBrowser<Serializable> getInProcessBrowser() {\n-//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.INPROCESS);\n-//\t}\n-\n \n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MTQ1Nw==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r551981457", "bodyText": "oeps", "author": "nielsm5", "createdAt": "2021-01-05T14:54:12Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1929,20 +1967,21 @@ public void setErrorStorage(ITransactionalStorage<Serializable> errorStorage) {\n \t * returns the {@link ITransactionalStorage} if it is provided in the configuration. It is used to store failed messages. If present, this storage will be managed by the Receiver.\n \t */\n \tpublic ITransactionalStorage<Serializable> getErrorStorage() {\n-\t\treturn errorStorage!=null && errorStorage instanceof ITransactionalStorage ? (ITransactionalStorage)errorStorage: null;\n-\t}\n-\t/**\n-\t * returns a browser for the errorStorage, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage} in the configuration. \n-\t */\n-\tpublic IMessageBrowser<Serializable> getErrorStorageBrowser() {\n-\t\treturn errorStorage;\n-\t}\n+\t\tIMessageBrowser<?> errorStorage =  messageBrowsers.get(ProcessState.ERROR);\n+\t\treturn errorStorage instanceof ITransactionalStorage ? (ITransactionalStorage)errorStorage: null;\n+\t}\n+//\t/**\n+//\t * returns a browser for the errorStorage, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage} in the configuration. \n+//\t */\n+//\tpublic IMessageBrowser<Serializable> getErrorStorageBrowser() {\n+//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.ERROR);\n+//\t}", "originalCommit": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java b/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\nindex 5454ebda6..0840c6c20 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\n\n@@ -1970,14 +1964,8 @@ public class Receiver<M> implements IManagable, IReceiverStatistics, IMessageHan\n \t\tIMessageBrowser<?> errorStorage =  messageBrowsers.get(ProcessState.ERROR);\n \t\treturn errorStorage instanceof ITransactionalStorage ? (ITransactionalStorage)errorStorage: null;\n \t}\n-//\t/**\n-//\t * returns a browser for the errorStorage, either provided as a {@link IMessageBrowser} by the listener itself, or as a {@link ITransactionalStorage} in the configuration. \n-//\t */\n-//\tpublic IMessageBrowser<Serializable> getErrorStorageBrowser() {\n-//\t\treturn (IMessageBrowser<Serializable>)messageBrowsers.get(ProcessState.ERROR);\n-//\t}\n-\t\n-\t\n+\n+\n \t@IbisDoc({\"50\", \"Storage to keep track of all messages processed correctly\"})\n \tpublic void setMessageLog(ITransactionalStorage<Serializable> messageLog) {\n \t\tif (messageLog.isActive()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAwMTc4Mw==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r552001783", "bodyText": "changeProcessState", "author": "nielsm5", "createdAt": "2021-01-05T15:25:43Z", "path": "core/src/main/java/nl/nn/adapterframework/core/IHasProcessState.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.core;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Interface that can be implemented by Listeners that provide their own management of\n+ * messages processed and in error.\n+ * \n+ * @see IUsesInProcessState\n+ */\n+public interface IHasProcessState<M> {\n+\n+\t/**\n+\t * Provides the set of ProcessStates used by this listener.\n+\t */\n+\tpublic Set<ProcessState> knownProcessStates();\n+\t\n+\t/**\n+\t * Provides the set of ProcessStates that a message in the specified state can be moved to, e.g. from a MessageBrowser for that state.\n+\t */\n+\tpublic Map<ProcessState,Set<ProcessState>> targetProcessStates();\n+\n+\t/**\n+\t * Change the processState of the message.\n+\t * If it returns <code>true</code>, this signals that the active transaction must be committed to make other threads aware of the state change.\n+\t */\n+\tpublic boolean moveToProcessState(M message, ProcessState toState, Map<String,Object> context) throws ListenerException;", "originalCommit": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAwNTg4Ng==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r552005886", "bodyText": "Misschien ook iets beter documenteren", "author": "nielsm5", "createdAt": "2021-01-05T15:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAwMTc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/core/IHasProcessState.java b/core/src/main/java/nl/nn/adapterframework/core/IHasProcessState.java\nindex 76af6e2bf..45d5503ff 100644\n--- a/core/src/main/java/nl/nn/adapterframework/core/IHasProcessState.java\n+++ b/core/src/main/java/nl/nn/adapterframework/core/IHasProcessState.java\n\n@@ -1,5 +1,5 @@\n /*\n-   Copyright 2020 WeAreFrank!\n+   Copyright 2020, 2021 WeAreFrank!\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAwNjc0Ng==", "url": "https://github.com/ibissource/iaf/pull/1356#discussion_r552006746", "bodyText": "Check if stateFolder != null", "author": "nielsm5", "createdAt": "2021-01-05T15:32:41Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java", "diffHunk": "@@ -314,28 +339,42 @@ public String getIdFromRawMessage(F rawMessage, Map<String, Object> threadContex\n \t\t}\n \t}\n \n-\tprotected IMessageBrowser<F> getMessageBrowser(String folder) {\n-\t\tif (isDisableMessageBrowsers() || StringUtils.isEmpty(folder)) {\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn new FileSystemMessageBrowser<F, FS>(fileSystem, folder, getMessageIdPropertyKey());\n-\t}\t\n-\t\n \t@Override\n-\tpublic IMessageBrowser<F> getInProcessBrowser() {\n-\t\treturn getMessageBrowser(getInProcessFolder());\n+\tpublic boolean moveToProcessState(F message, ProcessState toState, Map<String,Object> context) throws ListenerException {\n+\t\ttry {\n+\t\t\tgetFileSystem().moveFile(message, getStateFolder(toState), false);", "originalCommit": "6e7f16e3605bed599ab1701f116743fb189f3e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\nindex 1ba1dfd26..09cbe2e82 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java\n\n@@ -340,9 +340,11 @@ public abstract class FileSystemListener<F, FS extends IBasicFileSystem<F>> impl\n \t}\n \n \t@Override\n-\tpublic boolean moveToProcessState(F message, ProcessState toState, Map<String,Object> context) throws ListenerException {\n+\tpublic boolean changeProcessState(F message, ProcessState toState, Map<String,Object> context) throws ListenerException {\n \t\ttry {\n-\t\t\tgetFileSystem().moveFile(message, getStateFolder(toState), false);\n+\t\t\tif (knownProcessStates().contains(toState)) {\n+\t\t\t\tgetFileSystem().moveFile(message, getStateFolder(toState), false);\n+\t\t\t}\n \t\t\treturn false;\n \t\t} catch (FileSystemException e) {\n \t\t\tthrow new ListenerException(\"Cannot change processState to [\"+toState+\"] for [\"+getFileSystem().getName(message)+\"]\", e);\n"}}, {"oid": "e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "url": "https://github.com/ibissource/iaf/commit/e396c169f8e3b594fb95f5daa1a6c3ac36d057b9", "message": "Fix issues", "committedDate": "2021-01-05T16:30:55Z", "type": "commit"}, {"oid": "c3c037ca7d55296e9b2f4741065c59c869ed8b8f", "url": "https://github.com/ibissource/iaf/commit/c3c037ca7d55296e9b2f4741065c59c869ed8b8f", "message": "Fix issues", "committedDate": "2021-01-05T16:48:23Z", "type": "commit"}, {"oid": "69d29d8a71981b1e0355f7d49b7acea3fd929a47", "url": "https://github.com/ibissource/iaf/commit/69d29d8a71981b1e0355f7d49b7acea3fd929a47", "message": "Merge branch 'master' into Approach_to_#1321_generalised_message_browsers", "committedDate": "2021-01-05T16:50:39Z", "type": "commit"}, {"oid": "c48452041807c63ed98cce710d1a28fcda356685", "url": "https://github.com/ibissource/iaf/commit/c48452041807c63ed98cce710d1a28fcda356685", "message": "Merge branch 'Approach_to_#1321_generalised_message_browsers' of https://github.com/ibissource/iaf.git into Approach_to_#1321_generalised_message_browsers", "committedDate": "2021-01-05T19:58:33Z", "type": "commit"}, {"oid": "3b1e4d269b3bdcbc47b2bc9ee868c1d90cdb29dc", "url": "https://github.com/ibissource/iaf/commit/3b1e4d269b3bdcbc47b2bc9ee868c1d90cdb29dc", "message": "Fix merge problem", "committedDate": "2021-01-05T20:01:43Z", "type": "commit"}, {"oid": "e05ebd1d492dc5dad993968531b52f1b0774246d", "url": "https://github.com/ibissource/iaf/commit/e05ebd1d492dc5dad993968531b52f1b0774246d", "message": "Add move from Error to Available", "committedDate": "2021-01-07T10:16:21Z", "type": "commit"}]}