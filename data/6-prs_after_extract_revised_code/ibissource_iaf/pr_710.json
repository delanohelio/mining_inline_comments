{"pr_number": 710, "pr_title": "Parameterize Receiver and Listener types", "pr_createdAt": "2020-05-13T08:11:35Z", "pr_url": "https://github.com/ibissource/iaf/pull/710", "timeline": [{"oid": "c90fa90a0a20bf69fdc0c7b358942e7ebe6db552", "url": "https://github.com/ibissource/iaf/commit/c90fa90a0a20bf69fdc0c7b358942e7ebe6db552", "message": "Parameterize Receiver and Listener types", "committedDate": "2020-05-13T08:10:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMzUzMA==", "url": "https://github.com/ibissource/iaf/pull/710#discussion_r424633530", "bodyText": "Wat als sobj hier een MessageWrapper is?", "author": "nielsm5", "createdAt": "2020-05-13T18:08:48Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java", "diffHunk": "@@ -852,7 +852,7 @@ private void moveInProcessToError(String originalMessageId, String correlationId\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (errorStorage!=null) {\n-\t\t\t\terrorStorage.storeMessage(originalMessageId, correlationId, receivedDate, comments, null, sobj);\n+\t\t\t\terrorStorage.storeMessage(originalMessageId, correlationId, receivedDate, comments, null, (M)sobj);", "originalCommit": "c90fa90a0a20bf69fdc0c7b358942e7ebe6db552", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "53f9879d4bf0523dd3f606e3d79def8901bd3758", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\nindex 86cb5f3f9..0a24f1173 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n\n@@ -852,7 +852,7 @@ public class ReceiverBase<M> implements IReceiver<M>, IReceiverStatistics, IMess\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (errorStorage!=null) {\n-\t\t\t\terrorStorage.storeMessage(originalMessageId, correlationId, receivedDate, comments, null, (M)sobj);\n+\t\t\t\terrorStorage.storeMessage(originalMessageId, correlationId, receivedDate, comments, null, sobj);\n \t\t\t} \n \t\t\ttxManager.commit(txStatus);\n \t\t} catch (Exception e) {\n"}}, {"oid": "53f9879d4bf0523dd3f606e3d79def8901bd3758", "url": "https://github.com/ibissource/iaf/commit/53f9879d4bf0523dd3f606e3d79def8901bd3758", "message": "ITransactionalStorage M extends Serializable", "committedDate": "2020-05-18T16:24:54Z", "type": "commit"}, {"oid": "b1210230267f303b4948b7da4bb7086e8b1c2d98", "url": "https://github.com/ibissource/iaf/commit/b1210230267f303b4948b7da4bb7086e8b1c2d98", "message": "Create separate JmsBrowser", "committedDate": "2020-05-19T11:46:30Z", "type": "commit"}, {"oid": "173cffffc1bf5dffe1f4ee32242ee7216a387a31", "url": "https://github.com/ibissource/iaf/commit/173cffffc1bf5dffe1f4ee32242ee7216a387a31", "message": "Rename <M> to <S> for TransactionalStorage", "committedDate": "2020-05-19T13:06:58Z", "type": "commit"}, {"oid": "18806f2f3abcb171ce9db740491c7d522469b818", "url": "https://github.com/ibissource/iaf/commit/18806f2f3abcb171ce9db740491c7d522469b818", "message": "Improve IbisDoc", "committedDate": "2020-05-19T14:05:15Z", "type": "commit"}, {"oid": "3310a859c6e88edcf81c2ba9bdb43b0259877e95", "url": "https://github.com/ibissource/iaf/commit/3310a859c6e88edcf81c2ba9bdb43b0259877e95", "message": "Anticipate for MessageWrapper in processing message", "committedDate": "2020-05-19T14:22:39Z", "type": "commit"}, {"oid": "2714929442eb1102c1dad69aeb33d40988b6b5a3", "url": "https://github.com/ibissource/iaf/commit/2714929442eb1102c1dad69aeb33d40988b6b5a3", "message": "Parameterize all M methods", "committedDate": "2020-05-19T14:35:03Z", "type": "commit"}, {"oid": "a314c95ef34776ceb265745384501afd0d80c527", "url": "https://github.com/ibissource/iaf/commit/a314c95ef34776ceb265745384501afd0d80c527", "message": "Merge branch 'master' into ReceiverParametrization", "committedDate": "2020-05-20T08:51:19Z", "type": "commit"}, {"oid": "5798edd7e9e5d10f45bfca40ae6ba0c0fb8fd133", "url": "https://github.com/ibissource/iaf/commit/5798edd7e9e5d10f45bfca40ae6ba0c0fb8fd133", "message": "Merge branch 'master' into ReceiverParametrization", "committedDate": "2020-05-29T12:38:59Z", "type": "commit"}, {"oid": "3f392328bf6ac1b9ac64037bfbec06d209cd754e", "url": "https://github.com/ibissource/iaf/commit/3f392328bf6ac1b9ac64037bfbec06d209cd754e", "message": "Merge branch 'master' into ReceiverParametrization", "committedDate": "2020-06-02T11:36:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgxOTkzNg==", "url": "https://github.com/ibissource/iaf/pull/710#discussion_r435819936", "bodyText": "Misschien toch wel handig om ipv een import hier javax.jms.Message te gebruiken?", "author": "nielsm5", "createdAt": "2020-06-05T10:00:54Z", "path": "core/src/main/java/nl/nn/adapterframework/jms/JmsBrowser.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+   Copyright 2013 Nationale-Nederlanden, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.jms;\n+\n+import javax.jms.Message;\n+\n+import nl.nn.adapterframework.core.ListenerException;\n+\n+/**\n+ * Basic browser of JMS Messages.\n+ * @author  Gerrit van Brakel\n+ */\n+public class JmsBrowser<M extends Message> extends JmsMessageBrowser<M,M> {", "originalCommit": "3f392328bf6ac1b9ac64037bfbec06d209cd754e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec46c3d73985ba9179ec7e68887dc88c5b93bf2a", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jms/JmsBrowser.java b/core/src/main/java/nl/nn/adapterframework/jms/JmsBrowser.java\nindex b0b438e7d..bbc0d45e8 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jms/JmsBrowser.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jms/JmsBrowser.java\n\n@@ -15,15 +15,13 @@\n */\n package nl.nn.adapterframework.jms;\n \n-import javax.jms.Message;\n-\n import nl.nn.adapterframework.core.ListenerException;\n \n /**\n  * Basic browser of JMS Messages.\n  * @author  Gerrit van Brakel\n  */\n-public class JmsBrowser<M extends Message> extends JmsMessageBrowser<M,M> {\n+public class JmsBrowser<M extends javax.jms.Message> extends JmsMessageBrowser<M,M> {\n \n \tpublic JmsBrowser() {\n \t\tsuper();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgyMDYzNQ==", "url": "https://github.com/ibissource/iaf/pull/710#discussion_r435820635", "bodyText": "Wat is M en wat is J?", "author": "nielsm5", "createdAt": "2020-06-05T10:02:11Z", "path": "core/src/main/java/nl/nn/adapterframework/jms/JmsMessageBrowser.java", "diffHunk": "@@ -35,22 +35,23 @@\n import nl.nn.adapterframework.core.IMessageBrowsingIteratorItem;\n import nl.nn.adapterframework.core.ListenerException;\n import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.doc.IbisDocRef;\n import nl.nn.adapterframework.util.DateUtils;\n import nl.nn.adapterframework.util.Misc;\n \n /**\n- * Get the messages on a queue without deleting them\n- * @author  Johan Verrips / Gerrit van Brakel\n- * @see nl.nn.adapterframework.webcontrol.action.BrowseQueue\n+ * Basic browser of JMS Messages.\n+ * @author  Johan Verrips\n  */\n-public class JmsMessageBrowser extends JMSFacade implements IMessageBrowser {\n+public abstract class JmsMessageBrowser<M, J extends Message> extends JMSFacade implements IMessageBrowser<M> {", "originalCommit": "3f392328bf6ac1b9ac64037bfbec06d209cd754e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec46c3d73985ba9179ec7e68887dc88c5b93bf2a", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jms/JmsMessageBrowser.java b/core/src/main/java/nl/nn/adapterframework/jms/JmsMessageBrowser.java\nindex 4c03912ce..6590ebb79 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jms/JmsMessageBrowser.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jms/JmsMessageBrowser.java\n\n@@ -41,9 +40,12 @@ import nl.nn.adapterframework.util.Misc;\n \n /**\n  * Basic browser of JMS Messages.\n+ * @param <M> the payload message type as used by IMessageBrowser.\n+ * @param <J> the physical JMS message to carry the payload.\n+ * \n  * @author  Johan Verrips\n  */\n-public abstract class JmsMessageBrowser<M, J extends Message> extends JMSFacade implements IMessageBrowser<M> {\n+public abstract class JmsMessageBrowser<M, J extends javax.jms.Message> extends JMSFacade implements IMessageBrowser<M> {\n \n \tprivate long timeOut = 3000;\n \tprivate String selector=null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2MzI0Mw==", "url": "https://github.com/ibissource/iaf/pull/710#discussion_r435863243", "bodyText": "Je kan toch zomaar een string naar een M casten?", "author": "nielsm5", "createdAt": "2020-06-05T11:36:42Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java", "diffHunk": "@@ -908,27 +908,27 @@ public String processRequest(IListener origin, String correlationId, String mess\n \t\t\t\ttsSent = DateUtils.parseToDate((String) tsSentObj, DateUtils.FORMAT_FULL_GENERIC);\n \t\t\t}\n \t\t} else {\n-\t\t\tcontext=new HashMap();\n+\t\t\tcontext=new HashMap<>();\n \t\t}\n \n \t\tPipeLineSessionBase.setListenerParameters(context, null, correlationId, tsReceived, tsSent);\n \t\tString messageId = (String) context.get(\"id\");\n-\t\treturn processMessageInAdapter(origin, message, message, messageId, correlationId, context, waitingTime, false);\n+\t\treturn processMessageInAdapter(origin, (M)message, message, messageId, correlationId, context, waitingTime, false);", "originalCommit": "3f392328bf6ac1b9ac64037bfbec06d209cd754e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c10d6467902715ed5835ac517e5386f89fe2d98", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\nindex 30f2eaf92..2c7f4936e 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n\n@@ -913,18 +912,18 @@ public class ReceiverBase<M> implements IReceiver<M>, IReceiverStatistics, IMess\n \n \t\tPipeLineSessionBase.setListenerParameters(context, null, correlationId, tsReceived, tsSent);\n \t\tString messageId = (String) context.get(\"id\");\n-\t\treturn processMessageInAdapter(origin, (M)message, message, messageId, correlationId, context, waitingTime, false);\n+\t\treturn processMessageInAdapter(origin, rawMessage, message, messageId, correlationId, context, waitingTime, false);\n \t}\n \n \n \n \t@Override\n-\tpublic void processRawMessage(IListener<M> origin, M message) throws ListenerException {\n-\t\tprocessRawMessage(origin, message, null, -1);\n+\tpublic void processRawMessage(IListener<M> origin, M rawMessage) throws ListenerException {\n+\t\tprocessRawMessage(origin, rawMessage, null, -1);\n \t}\n \t@Override\n-\tpublic void processRawMessage(IListener<M> origin, M message, Map<String,Object> context) throws ListenerException {\n-\t\tprocessRawMessage(origin, message, context, -1);\n+\tpublic void processRawMessage(IListener<M> origin, M rawMessage, Map<String,Object> context) throws ListenerException {\n+\t\tprocessRawMessage(origin, rawMessage, context, -1);\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2MzcyNw==", "url": "https://github.com/ibissource/iaf/pull/710#discussion_r435863727", "bodyText": "Moet rawmessage dan geen M zijn?", "author": "nielsm5", "createdAt": "2020-06-05T11:37:46Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java", "diffHunk": "@@ -938,19 +938,19 @@ public void processRawMessage(IListener origin, Object rawMessage, Map threadCon\n \n \t * Assumes that a transation has been started where necessary.\n \t */\n-\tprivate void processRawMessage(IListener origin, Object rawMessage, Map threadContext, long waitingDuration, boolean manualRetry) throws ListenerException {\n+\tprivate void processRawMessage(IListener<M> origin, Object rawMessage, Map<String,Object>threadContext, long waitingDuration, boolean manualRetry) throws ListenerException {", "originalCommit": "3f392328bf6ac1b9ac64037bfbec06d209cd754e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c10d6467902715ed5835ac517e5386f89fe2d98", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\nindex 30f2eaf92..2c7f4936e 100644\n--- a/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n+++ b/core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java\n\n@@ -938,7 +937,7 @@ public class ReceiverBase<M> implements IReceiver<M>, IReceiverStatistics, IMess\n \n \t * Assumes that a transation has been started where necessary.\n \t */\n-\tprivate void processRawMessage(IListener<M> origin, Object rawMessage, Map<String,Object>threadContext, long waitingDuration, boolean manualRetry) throws ListenerException {\n+\tprivate void processRawMessage(IListener<M> origin, M rawMessage, Map<String,Object>threadContext, long waitingDuration, boolean manualRetry) throws ListenerException {\n \t\tif (rawMessage==null) {\n \t\t\tlog.debug(getLogPrefix()+\"received null message, returning directly\");\n \t\t\treturn;\n"}}, {"oid": "ec46c3d73985ba9179ec7e68887dc88c5b93bf2a", "url": "https://github.com/ibissource/iaf/commit/ec46c3d73985ba9179ec7e68887dc88c5b93bf2a", "message": "Use explicit javax.jms.message in JmsBrowsers", "committedDate": "2020-06-08T14:35:56Z", "type": "commit"}, {"oid": "7c10d6467902715ed5835ac517e5386f89fe2d98", "url": "https://github.com/ibissource/iaf/commit/7c10d6467902715ed5835ac517e5386f89fe2d98", "message": "Add rawMessage to processRequest", "committedDate": "2020-06-08T15:59:16Z", "type": "commit"}, {"oid": "c38d73e646a15c335710995f4ed27a6d7afb9b63", "url": "https://github.com/ibissource/iaf/commit/c38d73e646a15c335710995f4ed27a6d7afb9b63", "message": "Better traceable handling of raw messages and wrappers", "committedDate": "2020-06-10T17:16:26Z", "type": "commit"}, {"oid": "65cdaaf54a2238868098ad3fa764676065948498", "url": "https://github.com/ibissource/iaf/commit/65cdaaf54a2238868098ad3fa764676065948498", "message": "Revert change in IMessageHandler interface", "committedDate": "2020-06-12T08:19:35Z", "type": "commit"}, {"oid": "a0e60eaf46f4ad749e5686965a54266d82e31f4c", "url": "https://github.com/ibissource/iaf/commit/a0e60eaf46f4ad749e5686965a54266d82e31f4c", "message": "Optimizations", "committedDate": "2020-06-12T09:28:05Z", "type": "commit"}, {"oid": "134669c4cfaff070eabedc3e58c0ff1c71cfd2a9", "url": "https://github.com/ibissource/iaf/commit/134669c4cfaff070eabedc3e58c0ff1c71cfd2a9", "message": "Fix Codacy issues", "committedDate": "2020-06-12T09:50:46Z", "type": "commit"}, {"oid": "8e6605b9fbd7bc80729c8d470cc582aedfa41242", "url": "https://github.com/ibissource/iaf/commit/8e6605b9fbd7bc80729c8d470cc582aedfa41242", "message": "nakomertje", "committedDate": "2020-06-12T09:53:13Z", "type": "commit"}]}