{"pr_number": 1281, "pr_title": "Change outputType default from string to stream", "pr_createdAt": "2020-11-20T15:00:20Z", "pr_url": "https://github.com/ibissource/iaf/pull/1281", "timeline": [{"oid": "9c8fce309899fd7d762a54486bbaef22e52463e3", "url": "https://github.com/ibissource/iaf/commit/9c8fce309899fd7d762a54486bbaef22e52463e3", "message": "Change outputType default from string to stream", "committedDate": "2020-11-20T14:54:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMTA4NA==", "url": "https://github.com/ibissource/iaf/pull/1281#discussion_r527811084", "bodyText": "Het charset veld in Message is bedoeld als 'originalCharset', dus:\nJe krijgt bytes binnen van een listener, en die zegt er bij: \"dit waren bytes in deze charset.\nAls je dan naar String gaat converteren, dan moet je die charset gebruiken, (als hij gedefinieerd is).\"\nHet veld wordt ook alleen maar gezet vanuit constructors met een binary request type.\nJij gebruikt nu charset als 'compatibleCharset': \"Ik heb hier een string met bepaalde vreemde characters, als je deze string naar bytes wil converteren, dan zou je deze charset kunnen gebruiken.\"\nHet is maar de vraag of dat zinvol is. Ik denk eigenlijk van niet.\nIn beide gevallen van het gebruik zou het niet zo moeten zijn dat als je string of bytes leest, er iets\nzou moeten veranderen aan de oorspronkelijke charset.\nStel je hebt een message met bytes en je vraagt message.asReader(defaultCharset):\nDan moet je message.originalCharset gebruiken als die er is, of anders defaultCharset, of anders UTF-8.\nAls message.originalCharset leeg was, kan je je afvragen of dat na afloop nog steeds zo moet zijn:\nA) Na afloop moet message.originalCharset niet veranderd zijn, want wat doet het er toe dat je die bytes een keer gelezen hebt met 'defaultCharset' of UTF-8?\nB) Als je message.originalCharset zet op de charset die gebruikt is, dan zal je de volgende keer weer dezelfde charset gebruiken, dat is consistent.\nDe huidge asReader() (elders in Message.java) doet optie B). Ik neig er naar nu te zeggen dat dat eigenlijk niet goed is, dat het eigenlijk A) moet zijn.\nStel (in het geval van gebruik als 'compatibleCharset') je hebt een message met een string en je vraagt message.asStream(defaultCharset):\nDan moet je message.compatibleCharset gebruiken (als die er is), of anders defaultCharset, of anders UTF-8.\nNa afloop moet message.compatibleCharset niet veranderd zijn, want wat doet het er toe dat je die string een keer geschreven hebt met 'defaultCharset' of UTF-8?\nWaarom zou ik een andere keer die string niet met een andere charset mogen schrijven?\nIn jouw implementatie wordt nu de charset wel aangepast. Dat is niet goed.\nAls je wijzigingen maakt aan Message, dan moet je daar ook unit tests voor maken die falen op de oude code en goed gaan op de nieuwe.", "author": "gvanbrakel", "createdAt": "2020-11-20T16:33:15Z", "path": "core/src/main/java/nl/nn/adapterframework/stream/Message.java", "diffHunk": "@@ -209,19 +209,19 @@ public InputStream asInputStream(String defaultCharset) throws IOException {\n \t\t\t\tthrow new IOException(\"Cannot open file [\"+((File)request).getPath()+\"]\");\n \t\t\t}\n \t\t}\n-\t\tif (StringUtils.isEmpty(defaultCharset)) {\n-\t\t\tdefaultCharset=StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\t\tif (StringUtils.isEmpty(charset)) {\n+\t\t\tcharset=StringUtils.isNotEmpty(defaultCharset)?defaultCharset:StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;", "originalCommit": "9c8fce309899fd7d762a54486bbaef22e52463e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bf96f457d5d4cb89b72fa46a8ba9ec2419bb2455", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/stream/Message.java b/core/src/main/java/nl/nn/adapterframework/stream/Message.java\nindex 057b59d2e..43bd6843a 100644\n--- a/core/src/main/java/nl/nn/adapterframework/stream/Message.java\n+++ b/core/src/main/java/nl/nn/adapterframework/stream/Message.java\n\n@@ -209,19 +213,19 @@ public class Message implements Serializable {\n \t\t\t\tthrow new IOException(\"Cannot open file [\"+((File)request).getPath()+\"]\");\n \t\t\t}\n \t\t}\n-\t\tif (StringUtils.isEmpty(charset)) {\n-\t\t\tcharset=StringUtils.isNotEmpty(defaultCharset)?defaultCharset:StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\t\tif (StringUtils.isEmpty(defaultCharset)) {\n+\t\t\tdefaultCharset=StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n \t\t}\n \t\tif (request instanceof Reader) {\n \t\t\tlog.debug(\"returning Reader as InputStream\");\n-\t\t\treturn new ReaderInputStream((Reader) request, charset);\n+\t\t\treturn new ReaderInputStream((Reader) request, defaultCharset);\n \t\t}\n \t\tif (request instanceof byte[]) {\n \t\t\tlog.debug(\"returning byte[] as InputStream\");\n \t\t\treturn new ByteArrayInputStream((byte[]) request);\n \t\t}\n \t\tlog.debug(\"returning String as InputStream\");\n-\t\treturn new ByteArrayInputStream(request.toString().getBytes(charset));\n+\t\treturn new ByteArrayInputStream(request.toString().getBytes(defaultCharset));\n \t}\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1NDk2MQ==", "url": "https://github.com/ibissource/iaf/pull/1281#discussion_r527854961", "bodyText": "Charset kan worden gezet bij 'encode', reading from string, any outputtype: om de juiste karakters uit de string te krijgen.\nCharset kan worden gezet bij 'decode', om aan te geven wat de juiste string representatie van de binary data is.\nCharset zou alleen gebruikt moeten worden aan de binary kant van de codec, aan de base64 kant zou altijd de default charset gebruikt moeten worden (dus geen charset moeten worden opgegeven).\nOutputtype zou je eventueel helemaal weg kunnen laten.\nDus volgens mij:\n\ncharset alleen gebruiken aan de binary kant;\noutputtype deprecaten", "author": "gvanbrakel", "createdAt": "2020-11-20T17:35:04Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java", "diffHunk": "@@ -89,6 +91,15 @@ public void configure() throws ConfigurationException {\n \t\tif(!convertToString && getDirection().equals(\"decode\")) {\n \t\t\tsetOutputType(\"bytes\");\n \t\t}\n+\n+\t\tif(charset == null) {\n+\t\t\tif(outputType.equals(\"string\")) {\n+\t\t\t\tcharset = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing the output type to bytes or stream instead\"); //if charset not set, why use strings?\n+\t\t\t}\n+\t\t} else if(!outputType.equals(\"string\")) {\n+\t\t\tConfigurationWarnings.add(this, log, \"charset can only be set when outputType='string'\");", "originalCommit": "9c8fce309899fd7d762a54486bbaef22e52463e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bf96f457d5d4cb89b72fa46a8ba9ec2419bb2455", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java b/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\nindex 5c1d770d6..f51a32086 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\n\n@@ -95,7 +94,7 @@ public class Base64Pipe extends StreamingPipe {\n \t\tif(charset == null) {\n \t\t\tif(outputType.equals(\"string\")) {\n \t\t\t\tcharset = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n-\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing the output type to bytes or stream instead\"); //if charset not set, why use strings?\n+\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing to the default output type 'stream' instead\"); //if charset not set, why use strings?\n \t\t\t}\n \t\t} else if(!outputType.equals(\"string\")) {\n \t\t\tConfigurationWarnings.add(this, log, \"charset can only be set when outputType='string'\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1NzAzMw==", "url": "https://github.com/ibissource/iaf/pull/1281#discussion_r527857033", "bodyText": "eigenlijk: consider om de default output-type te gebruiken.", "author": "gvanbrakel", "createdAt": "2020-11-20T17:37:34Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java", "diffHunk": "@@ -89,6 +91,15 @@ public void configure() throws ConfigurationException {\n \t\tif(!convertToString && getDirection().equals(\"decode\")) {\n \t\t\tsetOutputType(\"bytes\");\n \t\t}\n+\n+\t\tif(charset == null) {\n+\t\t\tif(outputType.equals(\"string\")) {\n+\t\t\t\tcharset = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing the output type to bytes or stream instead\"); //if charset not set, why use strings?", "originalCommit": "9c8fce309899fd7d762a54486bbaef22e52463e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bf96f457d5d4cb89b72fa46a8ba9ec2419bb2455", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java b/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\nindex 5c1d770d6..f51a32086 100644\n--- a/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java\n\n@@ -95,7 +94,7 @@ public class Base64Pipe extends StreamingPipe {\n \t\tif(charset == null) {\n \t\t\tif(outputType.equals(\"string\")) {\n \t\t\t\tcharset = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n-\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing the output type to bytes or stream instead\"); //if charset not set, why use strings?\n+\t\t\t\tConfigurationWarnings.add(this, log, \"please consider changing to the default output type 'stream' instead\"); //if charset not set, why use strings?\n \t\t\t}\n \t\t} else if(!outputType.equals(\"string\")) {\n \t\t\tConfigurationWarnings.add(this, log, \"charset can only be set when outputType='string'\");\n"}}, {"oid": "bf96f457d5d4cb89b72fa46a8ba9ec2419bb2455", "url": "https://github.com/ibissource/iaf/commit/bf96f457d5d4cb89b72fa46a8ba9ec2419bb2455", "message": "Revert changes to Message asInputStream", "committedDate": "2020-11-23T13:58:09Z", "type": "commit"}, {"oid": "b4b1663df0e38fe0715b33ab07bb93b04ec4bdfc", "url": "https://github.com/ibissource/iaf/commit/b4b1663df0e38fe0715b33ab07bb93b04ec4bdfc", "message": "set default back to string", "committedDate": "2020-11-24T14:08:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI0MTIzNw==", "url": "https://github.com/ibissource/iaf/pull/1281#discussion_r530241237", "bodyText": "De default moet steam zijn, en alleen string gebruiken als charset gezet is.", "author": "nielsm5", "createdAt": "2020-11-25T09:52:08Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/Base64Pipe.java", "diffHunk": "@@ -55,7 +55,7 @@\n \tprivate int lineLength = 76;\n \tprivate String lineSeparator = \"auto\";\n \tprivate String charset = null;\n-\tprivate String outputType = \"stream\";\n+\tprivate String outputType = \"string\";", "originalCommit": "b4b1663df0e38fe0715b33ab07bb93b04ec4bdfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "5e4d37caf16a548cd005e1063164a3be1e263c02", "url": "https://github.com/ibissource/iaf/commit/5e4d37caf16a548cd005e1063164a3be1e263c02", "message": "restore original test input and output", "committedDate": "2020-11-27T10:53:08Z", "type": "commit"}, {"oid": "bbcda9427ab6ee984a2b17fb1e87d00cb0a0177a", "url": "https://github.com/ibissource/iaf/commit/bbcda9427ab6ee984a2b17fb1e87d00cb0a0177a", "message": "Suppress warnings", "committedDate": "2020-11-27T10:59:11Z", "type": "commit"}]}