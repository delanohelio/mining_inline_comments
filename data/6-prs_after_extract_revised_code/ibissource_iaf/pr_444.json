{"pr_number": 444, "pr_title": "Senders using message", "pr_createdAt": "2020-02-21T12:27:54Z", "pr_url": "https://github.com/ibissource/iaf/pull/444", "timeline": [{"oid": "5027d1c6661720c973d2feed8940aa12832989b3", "url": "https://github.com/ibissource/iaf/commit/5027d1c6661720c973d2feed8940aa12832989b3", "message": "Make all Senders Message-in Message-out", "committedDate": "2020-02-11T09:22:53Z", "type": "commit"}, {"oid": "4493ed072cc5484af2c22def81a2c13b35bd16e7", "url": "https://github.com/ibissource/iaf/commit/4493ed072cc5484af2c22def81a2c13b35bd16e7", "message": "Support for Senders Message-in Message-out", "committedDate": "2020-02-11T09:27:51Z", "type": "commit"}, {"oid": "aac88ebcde03192fae3f8c2e10056079d691576e", "url": "https://github.com/ibissource/iaf/commit/aac88ebcde03192fae3f8c2e10056079d691576e", "message": "Remove PostboxSenderPipe", "committedDate": "2020-02-11T16:46:42Z", "type": "commit"}, {"oid": "14b8f43b00c61ff730f7df7be735f12effa46116", "url": "https://github.com/ibissource/iaf/commit/14b8f43b00c61ff730f7df7be735f12effa46116", "message": "Simplify ParameterResolutionContext", "committedDate": "2020-02-14T09:29:54Z", "type": "commit"}, {"oid": "ad74d8eca187d0990adec7b125ef03ab54e517ac", "url": "https://github.com/ibissource/iaf/commit/ad74d8eca187d0990adec7b125ef03ab54e517ac", "message": "Merge branch 'master' into SendersUsingMessage", "committedDate": "2020-02-14T09:44:09Z", "type": "commit"}, {"oid": "4eda5a24a3c7335b289b8b91967f0f723ad8338a", "url": "https://github.com/ibissource/iaf/commit/4eda5a24a3c7335b289b8b91967f0f723ad8338a", "message": "ISenderWithParameters met session i.p.v. ParameterResolutionContext", "committedDate": "2020-02-17T14:08:50Z", "type": "commit"}, {"oid": "3e5b93b787b86a2d8ba6c5eee6eabc85425ed65b", "url": "https://github.com/ibissource/iaf/commit/3e5b93b787b86a2d8ba6c5eee6eabc85425ed65b", "message": "Make sendMessage of ISender and ISenderWithParameters equal", "committedDate": "2020-02-17T16:23:14Z", "type": "commit"}, {"oid": "181b50ae962200a1135a5528e2281aacf589e7cf", "url": "https://github.com/ibissource/iaf/commit/181b50ae962200a1135a5528e2281aacf589e7cf", "message": "Merge branch 'master' into SendersUsingMessage\n\nConflicts:\n\tcore/src/test/java/nl/nn/adapterframework/http/HttpSenderTest.java", "committedDate": "2020-02-17T16:36:00Z", "type": "commit"}, {"oid": "79ab02135f9bf1620c345db0dc17fc7d253cb528", "url": "https://github.com/ibissource/iaf/commit/79ab02135f9bf1620c345db0dc17fc7d253cb528", "message": "Merge master", "committedDate": "2020-02-21T11:18:38Z", "type": "commit"}, {"oid": "5f1cc0186a75adec4082a9c2a9299bf71912c686", "url": "https://github.com/ibissource/iaf/commit/5f1cc0186a75adec4082a9c2a9299bf71912c686", "message": "Leftovers from merge", "committedDate": "2020-02-21T12:25:15Z", "type": "commit"}, {"oid": "51d1056f627c0b828548a1ba7d16338553c80e71", "url": "https://github.com/ibissource/iaf/commit/51d1056f627c0b828548a1ba7d16338553c80e71", "message": "Another leftover from merging", "committedDate": "2020-02-21T12:31:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU2NDcwNg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r382564706", "bodyText": "Let op: equalsIgnoreCase", "author": "gvanbrakel", "createdAt": "2020-02-21T12:51:24Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/EtagHandlerPipe.java", "diffHunk": "@@ -90,10 +90,9 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\t\ttry {\n \t\t\t\tpvl = prc.getValues(getParameterList());\n \t\t\t\tif (pvl != null) {\n-\t\t\t\t\tfor (int i = 0; i < parameterList.size(); i++) {\n-\t\t\t\t\t\tParameter parameter = parameterList.getParameter(i);\n-\t\t\t\t\t\tif(\"uriPattern\".equalsIgnoreCase(parameter.getName()))", "originalCommit": "51d1056f627c0b828548a1ba7d16338553c80e71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "fe65a8623dbd0b08d82a9c5e07e51a52d4160adf", "url": "https://github.com/ibissource/iaf/commit/fe65a8623dbd0b08d82a9c5e07e51a52d4160adf", "message": "Some small fixes", "committedDate": "2020-02-21T14:29:10Z", "type": "commit"}, {"oid": "d962d41f877cf1b718f596b64d191646f1cec823", "url": "https://github.com/ibissource/iaf/commit/d962d41f877cf1b718f596b64d191646f1cec823", "message": "fix cmis refactor bug", "committedDate": "2020-02-21T14:59:11Z", "type": "commit"}, {"oid": "85fdd6900dd21d07ab473310170e6068bf511a3f", "url": "https://github.com/ibissource/iaf/commit/85fdd6900dd21d07ab473310170e6068bf511a3f", "message": "Streaming senders without correlationID", "committedDate": "2020-03-02T10:03:16Z", "type": "commit"}, {"oid": "ce07cbe390d6d0aa16117e49fe21fdba72a4d3ef", "url": "https://github.com/ibissource/iaf/commit/ce07cbe390d6d0aa16117e49fe21fdba72a4d3ef", "message": "Fix unit test", "committedDate": "2020-03-02T10:32:31Z", "type": "commit"}, {"oid": "0ad80fc6d57456359cf57a1422e374467eea376e", "url": "https://github.com/ibissource/iaf/commit/0ad80fc6d57456359cf57a1422e374467eea376e", "message": "Merge branch 'master' into SendersUsingMessage", "committedDate": "2020-03-02T12:34:54Z", "type": "commit"}, {"oid": "ccdc548c4d9b4fd11b2832a57279c72c3f66080d", "url": "https://github.com/ibissource/iaf/commit/ccdc548c4d9b4fd11b2832a57279c72c3f66080d", "message": "Fix merge issues", "committedDate": "2020-03-02T12:38:54Z", "type": "commit"}, {"oid": "54635785b991987b6ec4daafb00e713d23738f05", "url": "https://github.com/ibissource/iaf/commit/54635785b991987b6ec4daafb00e713d23738f05", "message": "remove correlationId parameter from sender.sendMessage()", "committedDate": "2020-03-02T17:11:48Z", "type": "commit"}, {"oid": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "url": "https://github.com/ibissource/iaf/commit/c0f991da12ebdf4fe5119d4209081341cd2ab96f", "message": "Dangling commits", "committedDate": "2020-03-03T09:06:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1Mzk2Ng==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390453966", "bodyText": "Hier zat, maar nu niet meer, een null check op prc!", "author": "nielsm5", "createdAt": "2020-03-10T16:40:28Z", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQuerySenderBase.java", "diffHunk": "@@ -262,18 +262,18 @@ protected String sendMessage(Connection connection, String correlationID, Messag\n \t\t\t\tif (StringUtils.isEmpty(getBlobSessionKey())) {\n \t\t\t\t\treturn executeUpdateBlobQuery(statement,message.asInputStream());\n \t\t\t\t} \n-\t\t\t\treturn executeUpdateBlobQuery(statement,prc==null?null:prc.getSession().get(getBlobSessionKey()));\n+\t\t\t\treturn executeUpdateBlobQuery(statement,session.get(getBlobSessionKey()));\n \t\t\t} \n \t\t\tif (\"updateClob\".equalsIgnoreCase(queryContext.getQueryType())) {\n \t\t\t\tif (StringUtils.isEmpty(getClobSessionKey())) {\n \t\t\t\t\treturn executeUpdateClobQuery(statement,message.asReader());\n \t\t\t\t} \n-\t\t\t\treturn executeUpdateClobQuery(statement,prc==null?null:prc.getSession().get(getClobSessionKey()));\n+\t\t\t\treturn executeUpdateClobQuery(statement,session.get(getClobSessionKey()));", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkyNDkxNg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390924916", "bodyText": "Fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1Mzk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQuerySenderBase.java b/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQuerySenderBase.java\nindex 382027657..b18735b7f 100644\n--- a/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQuerySenderBase.java\n+++ b/core/src/main/java/nl/nn/adapterframework/jdbc/JdbcQuerySenderBase.java\n\n@@ -262,13 +262,13 @@ public abstract class JdbcQuerySenderBase extends JdbcSenderBase {\n \t\t\t\tif (StringUtils.isEmpty(getBlobSessionKey())) {\n \t\t\t\t\treturn executeUpdateBlobQuery(statement,message.asInputStream());\n \t\t\t\t} \n-\t\t\t\treturn executeUpdateBlobQuery(statement,session.get(getBlobSessionKey()));\n+\t\t\t\treturn executeUpdateBlobQuery(statement,session==null?null:session.get(getBlobSessionKey()));\n \t\t\t} \n \t\t\tif (\"updateClob\".equalsIgnoreCase(queryContext.getQueryType())) {\n \t\t\t\tif (StringUtils.isEmpty(getClobSessionKey())) {\n \t\t\t\t\treturn executeUpdateClobQuery(statement,message.asReader());\n \t\t\t\t} \n-\t\t\t\treturn executeUpdateClobQuery(statement,session.get(getClobSessionKey()));\n+\t\t\t\treturn executeUpdateClobQuery(statement,session==null?null:session.get(getClobSessionKey()));\n \t\t\t} \n \t\t\tif (\"package\".equalsIgnoreCase(queryContext.getQueryType())) {\n \t\t\t\treturn executePackageQuery(connection, statement, queryContext.getQuery());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MDk4MQ==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390460981", "bodyText": "De session mag niet leeg zijn, anders gaat de hele sender kaduuk...", "author": "nielsm5", "createdAt": "2020-03-10T16:50:39Z", "path": "core/src/main/java/nl/nn/adapterframework/http/HttpSender.java", "diffHunk": "@@ -435,7 +434,7 @@ protected FormBodyPart elementToFormBodyPart(Element element, IPipeLineSession s\n \t}\n \n \t@Override\n-\tprotected String extractResult(HttpResponseHandler responseHandler, ParameterResolutionContext prc) throws SenderException, IOException {\n+\tprotected String extractResult(HttpResponseHandler responseHandler, IPipeLineSession session) throws SenderException, IOException {", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MjY3Mw==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390462673", "bodyText": "Waarom hier null ipv message input ?", "author": "nielsm5", "createdAt": "2020-03-10T16:53:08Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemPipe.java", "diffHunk": "@@ -122,12 +122,11 @@ public MessageOutputStream provideOutputStream(String correlationID, IPipeLineSe\n \t@Override\n \tpublic PipeRunResult doPipe (Object input, IPipeLineSession session, IOutputStreamingSupport next) throws PipeRunException {\n \t\tParameterList paramList = getParameterList();\n-\t\tParameterResolutionContext prc = new ParameterResolutionContext(input, session);\n \t\tParameterValueList pvl=null;\n \t\t\n \t\ttry {\n \t\t\tif (paramList != null) {\n-\t\t\t\tpvl = prc.getValues(paramList);\n+\t\t\t\tpvl = paramList.getValues(null, session);", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkyNTk1MQ==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390925951", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MjY3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemPipe.java b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemPipe.java\nindex 20087bf31..18da455a6 100644\n--- a/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemPipe.java\n+++ b/core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemPipe.java\n\n@@ -123,10 +123,10 @@ public class FileSystemPipe<F, FS extends IBasicFileSystem<F>> extends Streaming\n \tpublic PipeRunResult doPipe (Object input, IPipeLineSession session, IOutputStreamingSupport next) throws PipeRunException {\n \t\tParameterList paramList = getParameterList();\n \t\tParameterValueList pvl=null;\n-\t\t\n+\t\tMessage message = new Message(input);\n \t\ttry {\n \t\t\tif (paramList != null) {\n-\t\t\t\tpvl = paramList.getValues(null, session);\n+\t\t\t\tpvl = paramList.getValues(message, session);\n \t\t\t}\n \t\t} catch (ParameterException e) {\n \t\t\tthrow new PipeRunException(this,getLogPrefix(session) + \"Pipe [\" + getName() + \"] caught exception evaluating parameters\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MjA0Ng==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390892046", "bodyText": "Hier wel een mooie spatie!", "author": "nielsm5", "createdAt": "2020-03-11T10:58:58Z", "path": "core/src/test/java/nl/nn/adapterframework/pipes/ForEachChildElementPipeTest.java", "diffHunk": "@@ -125,12 +125,12 @@ protected ISender getElementRenderer(final SwitchCounter sc, final Exception e)\n     \tEchoSender sender = new EchoSender() {\n \n \t\t\t@Override\n-\t\t\tpublic String sendMessage(String correlationID, String message, ParameterResolutionContext prc) throws SenderException, TimeOutException {\n+\t\t\tpublic Message sendMessage(Message message, IPipeLineSession session) throws SenderException, TimeOutException, IOException {\n \t\t\t\tif (sc!=null) sc.mark(\"out\");\n-\t\t\t\tif (message.contains(\"error\")) {\n-\t\t\t\t\tthrow new SenderException(\"Exception triggered\",e);\n+\t\t\t\tif (message.asString().contains(\"error\")) {\n+\t\t\t\t\tthrow new SenderException(\"Exception triggered\", e);", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MzMwMg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390893302", "bodyText": "Deze moet weg!", "author": "nielsm5", "createdAt": "2020-03-11T11:01:16Z", "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ShowConfig.java", "diffHunk": "@@ -143,9 +144,8 @@ private String retrieveAllConfigs(IPipeLineSession session)\n \t\t\t\tqs.setIncludeFieldDefinition(false);\n \t\t\t\tqs.configure();\n \t\t\t\tqs.open();\n-\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext(\n-\t\t\t\t\t\t\"dummy\", session);\n-\t\t\t\tString queryResult = qs.sendMessage(\"dummy\", \"dummy\", prc);\n+\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext (\"dummy\", session);", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkyNzE4MA==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390927180", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MzMwMg=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ShowConfig.java b/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ShowConfig.java\nindex 9b7875c50..91be1e61c 100644\n--- a/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ShowConfig.java\n+++ b/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ShowConfig.java\n\n@@ -144,12 +140,10 @@ public class ShowConfig extends TimeoutGuardPipe {\n \t\t\t\tqs.setIncludeFieldDefinition(false);\n \t\t\t\tqs.configure();\n \t\t\t\tqs.open();\n-\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext (\"dummy\", session);\n \t\t\t\tString queryResult = qs.sendMessage(new Message(\"dummy\"), session).asString();\n \t\t\t\tconfigXML.setValue(queryResult, false);\n \t\t\t} catch (Throwable t) {\n-\t\t\t\tthrow new PipeRunException(this, getLogPrefix(session)\n-\t\t\t\t\t\t+ \"Error occured on executing jdbc query\", t);\n+\t\t\t\tthrow new PipeRunException(this, getLogPrefix(session) + \"Error occured on executing jdbc query\", t);\n \t\t\t} finally {\n \t\t\t\tqs.close();\n \t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MzUzOA==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390893538", "bodyText": "Deze moet weg!", "author": "nielsm5", "createdAt": "2020-03-11T11:01:43Z", "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ExecuteJdbcProperties.java", "diffHunk": "@@ -167,9 +167,9 @@ private String doPost(IPipeLineSession session) throws PipeRunException {\n \t\t\t\tqs.addParameter(param);\n \t\t\t\tqs.configure();\n \t\t\t\tqs.open();\n-\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext(\n+\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext (", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkyNzQwNg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390927406", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:11:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5MzUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ExecuteJdbcProperties.java b/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ExecuteJdbcProperties.java\nindex 6e0d8703c..dbd608568 100644\n--- a/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ExecuteJdbcProperties.java\n+++ b/core/src/main/java/nl/nn/adapterframework/webcontrol/pipes/ExecuteJdbcProperties.java\n\n@@ -167,8 +163,6 @@ public class ExecuteJdbcProperties extends TimeoutGuardPipe {\n \t\t\t\tqs.addParameter(param);\n \t\t\t\tqs.configure();\n \t\t\t\tqs.open();\n-\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext (\n-\t\t\t\t\t\t\"\", session);\n \t\t\t\tresult = qs.sendMessage(new Message(\"\"), session).asString();\n \t\t\t} catch (Throwable t) {\n \t\t\t\tthrow new PipeRunException(this,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5NTgwNg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390895806", "bodyText": "Wat is id? Waarom hebben we id, messageId, cid en tcid!?", "author": "nielsm5", "createdAt": "2020-03-11T11:06:04Z", "path": "ifsa/src/main/java/nl/nn/adapterframework/webcontrol/pipes/TestIfsaService.java", "diffHunk": "@@ -181,7 +183,9 @@ private String processMessage(String applicationId, String serviceId,\n \t\tsender.setMessageProtocol(messageProtocol);\n \t\tsender.configure();\n \t\tsender.open();\n-\t\treturn sender.sendMessage(\"testmsg_\" + Misc.createUUID(), message);\n+\t\tPipeLineSessionBase session = new PipeLineSessionBase();\n+\t\tsession.put(\"id\", \"testmsg_\" + Misc.createUUID());", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzMzA5NA==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390933094", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:23:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5NTgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/ifsa/src/main/java/nl/nn/adapterframework/webcontrol/pipes/TestIfsaService.java b/ifsa/src/main/java/nl/nn/adapterframework/webcontrol/pipes/TestIfsaService.java\nindex 1e3968afb..617f87287 100644\n--- a/ifsa/src/main/java/nl/nn/adapterframework/webcontrol/pipes/TestIfsaService.java\n+++ b/ifsa/src/main/java/nl/nn/adapterframework/webcontrol/pipes/TestIfsaService.java\n\n@@ -184,7 +184,7 @@ public class TestIfsaService extends TimeoutGuardPipe {\n \t\tsender.configure();\n \t\tsender.open();\n \t\tPipeLineSessionBase session = new PipeLineSessionBase();\n-\t\tsession.put(\"id\", \"testmsg_\" + Misc.createUUID());\n+\t\tsession.put(IPipeLineSession.messageIdKey, \"testmsg_\" + Misc.createUUID());\n \t\treturn sender.sendMessage(new Message(message), session).asString();\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMDE5NA==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390900194", "bodyText": "Hier moet je de message meegeven. je maakt er nu een string van, en 2 regels later weer een message", "author": "nielsm5", "createdAt": "2020-03-11T11:14:48Z", "path": "sap/src/main/java/nl/nn/adapterframework/extensions/sap/jco2/IdocSender.java", "diffHunk": "@@ -65,14 +66,16 @@\n \n \t\n \t@Override\n-\tpublic String sendMessage(String correlationID, String message, ParameterResolutionContext prc) throws SenderException, TimeOutException {\n+\tpublic Message sendMessage(Message message, IPipeLineSession session) throws SenderException, TimeOutException {\n \t\tString tid=null;\n \t\ttry {\n \t\t\tParameterValueList pvl = null;\n-\t\t\tpvl=prc.getValues(paramList);\n+\t\t\tif (paramList!=null) {\n+\t\t\t\tpvl = paramList.getValues(message, session);\n+\t\t\t}\n \t\t\tSapSystem sapSystem = getSystem(pvl);\n \t\t\t\n-\t\t\tIDoc.Document idoc = parseIdoc(sapSystem,message);\n+\t\t\tIDoc.Document idoc = parseIdoc(sapSystem,message.asString());", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDQzMw==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390934433", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMDE5NA=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/sap/src/main/java/nl/nn/adapterframework/extensions/sap/jco2/IdocSender.java b/sap/src/main/java/nl/nn/adapterframework/extensions/sap/jco2/IdocSender.java\nindex 10a288a47..537ab27b2 100644\n--- a/sap/src/main/java/nl/nn/adapterframework/extensions/sap/jco2/IdocSender.java\n+++ b/sap/src/main/java/nl/nn/adapterframework/extensions/sap/jco2/IdocSender.java\n\n@@ -75,7 +75,7 @@ public class IdocSender extends SapSenderBase {\n \t\t\t}\n \t\t\tSapSystem sapSystem = getSystem(pvl);\n \t\t\t\n-\t\t\tIDoc.Document idoc = parseIdoc(sapSystem,message.asString());\n+\t\t\tIDoc.Document idoc = parseIdoc(sapSystem,message);\n \t\t\t\n \t\t\ttry {\n \t\t\t\tlog.debug(getLogPrefix()+\"checking syntax\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMTY3MA==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390901670", "bodyText": "Dit moet opgeschoond worden. Je doet 2x het zelfde, ook al is de session null", "author": "nielsm5", "createdAt": "2020-03-11T11:17:42Z", "path": "larva/src/main/java/nl/nn/adapterframework/testtool/SenderThread.java", "diffHunk": "@@ -34,22 +39,26 @@\n \t\tlog.debug(\"Request: \" + request);\n     }\n \n-\tSenderThread(ISenderWithParameters senderWithParameters, String request, ParameterResolutionContext parameterResolutionContext, boolean convertExceptionToMessage) {\n+\tSenderThread(ISenderWithParameters senderWithParameters, String request, IPipeLineSession session, boolean convertExceptionToMessage) {\n \t\tname = senderWithParameters.getName();\n \t\tthis.senderWithParameters = senderWithParameters;\n-\t\tthis.parameterResolutionContext = parameterResolutionContext;\n \t\tthis.request = request;\n+\t\tthis.session = session;\n \t\tthis.convertExceptionToMessage = convertExceptionToMessage;\n \t\tlog.debug(\"Creating SenderThread for ISenderWithParameters '\" + name + \"'\");\n \t\tlog.debug(\"Request: \" + request);\n \t}\n \n     public void run() {\n         try {\n+        \tif (session==null) {\n+        \t\tsession = new PipeLineSessionBase();\n+        \t}\n+        \tsession.put(IPipeLineSession.businessCorrelationIdKey, TestTool.TESTTOOL_CORRELATIONID);\n         \tif (senderWithParameters == null) {\n-\t\t\t\tresponse = sender.sendMessage(TestTool.TESTTOOL_CORRELATIONID, request);\n+\t\t\t\tresponse = sender.sendMessage(new Message(request), session).asString();\n         \t} else {\n-\t\t\t\tresponse = senderWithParameters.sendMessage(TestTool.TESTTOOL_CORRELATIONID, request, parameterResolutionContext);\n+\t\t\t\tresponse = senderWithParameters.sendMessage(new Message(request),  session).asString();", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNzI5Ng==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390937296", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMTY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/larva/src/main/java/nl/nn/adapterframework/testtool/SenderThread.java b/larva/src/main/java/nl/nn/adapterframework/testtool/SenderThread.java\nindex 373c12960..9a604fc7b 100644\n--- a/larva/src/main/java/nl/nn/adapterframework/testtool/SenderThread.java\n+++ b/larva/src/main/java/nl/nn/adapterframework/testtool/SenderThread.java\n\n@@ -17,31 +17,21 @@ import nl.nn.adapterframework.util.LogUtil;\n  * @author Jaco de Groot\n  */\n public class SenderThread extends Thread {\n-    private static Logger log = LogUtil.getLogger(SenderThread.class);\n-    \n-    private String name;\n-    private ISender sender;\n-\tprivate ISenderWithParameters senderWithParameters;\n+\tprivate static Logger log = LogUtil.getLogger(SenderThread.class);\n+\n+\tprivate String name;\n+\tprivate ISender sender;\n \tprivate IPipeLineSession session;\n-    private String request;\n-    private String response;\n-    private SenderException senderException;\n-    private IOException ioException;\n-    private TimeOutException timeOutException;\n-    private boolean convertExceptionToMessage = false;\n+\tprivate String request;\n+\tprivate String response;\n+\tprivate SenderException senderException;\n+\tprivate IOException ioException;\n+\tprivate TimeOutException timeOutException;\n+\tprivate boolean convertExceptionToMessage = false;\n \n-    SenderThread(ISender sender, String request, boolean convertExceptionToMessage) {\n+\tSenderThread(ISender sender, String request, IPipeLineSession session, boolean convertExceptionToMessage) {\n \t\tname = sender.getName();\n \t\tthis.sender = sender;\n-        this.request = request;\n-        this.convertExceptionToMessage = convertExceptionToMessage;\n-\t\tlog.debug(\"Creating SenderThread for ISender '\" + name + \"'\");\n-\t\tlog.debug(\"Request: \" + request);\n-    }\n-\n-\tSenderThread(ISenderWithParameters senderWithParameters, String request, IPipeLineSession session, boolean convertExceptionToMessage) {\n-\t\tname = senderWithParameters.getName();\n-\t\tthis.senderWithParameters = senderWithParameters;\n \t\tthis.request = request;\n \t\tthis.session = session;\n \t\tthis.convertExceptionToMessage = convertExceptionToMessage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMTkwMQ==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390901901", "bodyText": "Dit klopt ook niet. Moet 1 functie zijn met session, ongeacht of hij leeg is.", "author": "nielsm5", "createdAt": "2020-03-11T11:18:12Z", "path": "larva/src/main/java/nl/nn/adapterframework/testtool/TestTool.java", "diffHunk": "@@ -2494,12 +2500,12 @@ private static int executeSenderWrite(String stepDisplayName, Map<String, Map<St\n \t\tMap senderInfo = (Map)queues.get(queueName);\n \t\tISender sender = (ISender)senderInfo.get(senderType + \"Sender\");\n \t\tBoolean convertExceptionToMessage = (Boolean)senderInfo.get(\"convertExceptionToMessage\");\n-\t\tParameterResolutionContext parameterResolutionContext = (ParameterResolutionContext)senderInfo.get(\"parameterResolutionContext\");\n+\t\tIPipeLineSession session = (IPipeLineSession)senderInfo.get(\"session\");\n \t\tSenderThread senderThread;\n-\t\tif (parameterResolutionContext == null) {\n+\t\tif (session == null) {", "originalCommit": "c0f991da12ebdf4fe5119d4209081341cd2ab96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNzUyNg==", "url": "https://github.com/ibissource/iaf/pull/444#discussion_r390937526", "bodyText": "fixed", "author": "gvanbrakel", "createdAt": "2020-03-11T12:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwMTkwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c47d7412d083da366ec8b04025202bdd35b4cca3", "chunk": "diff --git a/larva/src/main/java/nl/nn/adapterframework/testtool/TestTool.java b/larva/src/main/java/nl/nn/adapterframework/testtool/TestTool.java\nindex 455f1ab37..5d7a49bd5 100644\n--- a/larva/src/main/java/nl/nn/adapterframework/testtool/TestTool.java\n+++ b/larva/src/main/java/nl/nn/adapterframework/testtool/TestTool.java\n\n@@ -2501,12 +2501,7 @@ public class TestTool {\n \t\tISender sender = (ISender)senderInfo.get(senderType + \"Sender\");\n \t\tBoolean convertExceptionToMessage = (Boolean)senderInfo.get(\"convertExceptionToMessage\");\n \t\tIPipeLineSession session = (IPipeLineSession)senderInfo.get(\"session\");\n-\t\tSenderThread senderThread;\n-\t\tif (session == null) {\n-\t\t\tsenderThread = new SenderThread(sender, fileContent, convertExceptionToMessage.booleanValue());\n-\t\t} else {\n-\t\t\tsenderThread = new SenderThread((ISenderWithParameters)sender, fileContent, session, convertExceptionToMessage.booleanValue());\n-\t\t}\n+\t\tSenderThread senderThread = new SenderThread(sender, fileContent, session, convertExceptionToMessage.booleanValue());\n \t\tsenderThread.start();\n \t\tsenderInfo.put(senderType + \"SenderThread\", senderThread);\n \t\tdebugPipelineMessage(stepDisplayName, \"Successfully started thread writing to '\" + queueName + \"':\", fileContent, writers);\n"}}, {"oid": "c47d7412d083da366ec8b04025202bdd35b4cca3", "url": "https://github.com/ibissource/iaf/commit/c47d7412d083da366ec8b04025202bdd35b4cca3", "message": "Fixed issues", "committedDate": "2020-03-11T12:49:41Z", "type": "commit"}]}