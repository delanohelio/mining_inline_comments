{"pr_number": 765, "pr_title": "Fix#525 support single pipeline soap and rest json/xml", "pr_createdAt": "2020-05-27T15:21:57Z", "pr_url": "https://github.com/ibissource/iaf/pull/765", "timeline": [{"oid": "421872e88f4704ec1f72c4ff84d3b2d24429c3b9", "url": "https://github.com/ibissource/iaf/commit/421872e88f4704ec1f72c4ff84d3b2d24429c3b9", "message": "Fix #525 auto detect soap version and allow plain xml", "committedDate": "2020-05-27T10:05:54Z", "type": "commit"}, {"oid": "86b88a64604c4d78083e9dcd43f8b6fec4928a76", "url": "https://github.com/ibissource/iaf/commit/86b88a64604c4d78083e9dcd43f8b6fec4928a76", "message": "fix #525 Automatic detection of soap version or plain xml", "committedDate": "2020-05-27T15:21:14Z", "type": "commit"}, {"oid": "74c7167ed8ac87318dd35bf97f7dd5921b017c2a", "url": "https://github.com/ibissource/iaf/commit/74c7167ed8ac87318dd35bf97f7dd5921b017c2a", "message": "Fix Codacy issues", "committedDate": "2020-05-27T15:32:31Z", "type": "commit"}, {"oid": "b26c28e016835d22bee75ccb6abee8b75aab2453", "url": "https://github.com/ibissource/iaf/commit/b26c28e016835d22bee75ccb6abee8b75aab2453", "message": "Update RELEASES.md", "committedDate": "2020-05-28T06:41:04Z", "type": "commit"}, {"oid": "40c825184db9b4b5c476fbb4b9f80a3886f392aa", "url": "https://github.com/ibissource/iaf/commit/40c825184db9b4b5c476fbb4b9f80a3886f392aa", "message": "Use single validator", "committedDate": "2020-05-29T05:55:42Z", "type": "commit"}, {"oid": "09db0d8fdc031d168c69d3d47e50d73544d6eade", "url": "https://github.com/ibissource/iaf/commit/09db0d8fdc031d168c69d3d47e50d73544d6eade", "message": "Cleanup config", "committedDate": "2020-05-29T06:06:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0MjgwNg==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432342806", "bodyText": "Deze mag weg toch? Heb je hier boven anders uitgeschreven?", "author": "nielsm5", "createdAt": "2020-05-29T08:45:14Z", "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java", "diffHunk": "@@ -125,19 +126,37 @@ public void checkForSoapFault(String responseBody, Throwable nested) throws Send\n \t}\n \n \tpublic String getBody(String message) throws SAXException, TransformerException, IOException  {\n-\t\tString result = extractBody.transform(message,null,true);\n-\t\tif (StringUtils.isNotEmpty(result))\n-\t\t\treturn result;\n-\t\treturn extractBody2.transform(message,null,true);\n+\t\treturn getBody(message, false, null, null);\n \t}\n-\n-\tpublic String getBody(InputStream request) throws TransformerException, IOException {\n-\t\tString result = extractBody.transform(new StreamSource(request));\n-\t\tif (StringUtils.isNotEmpty(result))\n+\t\n+\tpublic String getBody(String message, boolean allowPlainXml, IPipeLineSession session, String soapNamespaceSessionKey) throws SAXException, TransformerException, IOException  {\n+\t\tString result = extractBodySoap11.transform(message,null,true);\n+\t\tif (StringUtils.isNotEmpty(result)) {\n+\t\t\tif (session!=null && StringUtils.isNotEmpty(soapNamespaceSessionKey)) {\n+\t\t\t\tsession.put(soapNamespaceSessionKey, SoapVersion.SOAP11.namespace);\n+\t\t\t}\n+\t\t\treturn result;\n+\t\t}\n+\t\tresult = extractBodySoap12.transform(message,null,true);\n+\t\tif (StringUtils.isNotEmpty(result)) {\n+\t\t\tif (session!=null && StringUtils.isNotEmpty(soapNamespaceSessionKey)) {\n+\t\t\t\tsession.put(soapNamespaceSessionKey, SoapVersion.SOAP12.namespace);\n+\t\t\t}\n \t\t\treturn result;\n-\t\treturn extractBody2.transform(new StreamSource(request));\n+\t\t}\n+\t\tif (session!=null && StringUtils.isNotEmpty(soapNamespaceSessionKey)) {\n+\t\t\tsession.put(soapNamespaceSessionKey, SoapVersion.NONE.namespace);\n+\t\t}\n+\t\treturn allowPlainXml ? message : \"\";\n \t}\n \n+//\tpublic String getBody(InputStream request) throws TransformerException, IOException {\n+//\t\tString result = extractBodySoap11.transform(new StreamSource(request));\n+//\t\tif (StringUtils.isNotEmpty(result))\n+//\t\t\treturn result;\n+//\t\treturn extractBodySoap12.transform(new StreamSource(request));\n+//\t}\n+", "originalCommit": "09db0d8fdc031d168c69d3d47e50d73544d6eade", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4Nzc0OA==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432387748", "bodyText": "Hij was er eerst, ik had hem uit gecomment om te zien of er iets stuk ging. Niet dus.", "author": "gvanbrakel", "createdAt": "2020-05-29T10:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0MjgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "cb1f4e33ae435c9a3c667d308b7719741e44ea9d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java b/core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java\nindex e4aff508d..264dec8d8 100644\n--- a/core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java\n+++ b/core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java\n\n@@ -150,12 +150,6 @@ public class SoapWrapper {\n \t\treturn allowPlainXml ? message : \"\";\n \t}\n \n-//\tpublic String getBody(InputStream request) throws TransformerException, IOException {\n-//\t\tString result = extractBodySoap11.transform(new StreamSource(request));\n-//\t\tif (StringUtils.isNotEmpty(result))\n-//\t\t\treturn result;\n-//\t\treturn extractBodySoap12.transform(new StreamSource(request));\n-//\t}\n \n \tpublic String getHeader(String message) throws SAXException, TransformerException, IOException {\n \t\treturn extractHeader.transform(message, null, true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0ODY0NQ==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432348645", "bodyText": "Ik vind het erg onduidelijk. Moest twee keer kijken wat er nou precies gebeurde. Er zijn dus twee namespaces voor de twee soap versies? Als er een inputvalidator is en hij is soap versie 2, alleen dan krijg je soap2? Zijn er ook andere manieren om deze wsdl klasse aan te roepen en is het handig die ook de mogelijkheid te geven soap1.2 te gebruiken?", "author": "nielsm5", "createdAt": "2020-05-29T08:55:47Z", "path": "core/src/main/java/nl/nn/adapterframework/soap/Wsdl.java", "diffHunk": "@@ -305,10 +305,9 @@ public Wsdl(PipeLine pipeLine, String generationInfo) {\n         }\n         this.fileName = fileName;\n         this.targetNamespace = WsdlUtils.validUri(tns);\n-        if (inputValidator instanceof SoapValidator\n-                && \"1.2\".equals(((SoapValidator)inputValidator).getSoapVersion())) {\n-            soapNamespace = SOAP12_NAMESPACE;\n-            soapPrefix = SOAP12_NAMESPACE_PREFIX;\n+        if (inputValidator instanceof SoapValidator && ((SoapValidator)inputValidator).getSoapVersionEnum()==SoapVersion.SOAP12) {\n+            wsdlSoapNamespace = WSDL_SOAP12_NAMESPACE;\n+            wsdlSoapPrefix = WSDL_SOAP12_NAMESPACE_PREFIX;", "originalCommit": "09db0d8fdc031d168c69d3d47e50d73544d6eade", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5MzQxNw==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432393417", "bodyText": "Weet het ook niet precies, heb in deze class alleen de naam SOAP_NAMESPACE verandert in WSDL_SOAP_NAMESPACE (en dat ook voor een paar andere constants), zodat hij beter weergeeft wat het is.\nHad de definitie eerst bijna vervangen door een referentie naar SoapVersion.namespace.", "author": "gvanbrakel", "createdAt": "2020-05-29T10:22:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1OTU4Nw==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432459587", "bodyText": "Moet opgelost worden in #774", "author": "gvanbrakel", "createdAt": "2020-05-29T12:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0ODY0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MDY1OQ==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432350659", "bodyText": "Misschien kunnen deze namespaces ook aan de SoapVersion enum toegevoegd worden?", "author": "nielsm5", "createdAt": "2020-05-29T08:59:25Z", "path": "core/src/main/java/nl/nn/adapterframework/soap/Wsdl.java", "diffHunk": "@@ -122,8 +122,8 @@\n \n     private final String targetNamespace;\n     private String targetNamespacePrefix = TARGET_NAMESPACE_PREFIX;\n-    private String soapNamespace = SOAP_NAMESPACE;\n-    private String soapPrefix = SOAP_NAMESPACE_PREFIX;\n+    private String wsdlSoapNamespace = WSDL_SOAP_NAMESPACE;\n+    private String wsdlSoapPrefix = WSDL_SOAP_NAMESPACE_PREFIX;", "originalCommit": "09db0d8fdc031d168c69d3d47e50d73544d6eade", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5MTg3OA==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432391878", "bodyText": "Dat zou toch niet nodig moeten zijn? Zo'n prefix is niet iets officieels, alleen een lokale placeholder", "author": "gvanbrakel", "createdAt": "2020-05-29T10:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MDY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1OTc3Mw==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432459773", "bodyText": "Ook meenemen in #774", "author": "gvanbrakel", "createdAt": "2020-05-29T12:49:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MDY1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MjA2Mw==", "url": "https://github.com/ibissource/iaf/pull/765#discussion_r432352063", "bodyText": "Misschien handig SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE te gebruiken?", "author": "nielsm5", "createdAt": "2020-05-29T09:01:52Z", "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapVersion.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.soap;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.apache.commons.lang.StringUtils;\n+\n+\n+public enum SoapVersion {\n+\t\n+\tSOAP11(\"1.1\", \"http://schemas.xmlsoap.org/soap/envelope/\", \"/xml/xsd/soap/envelope.xsd\"),\n+\tSOAP12(\"1.2\", \"http://www.w3.org/2003/05/soap-envelope\",   \"/xml/xsd/soap/envelope-1.2.xsd\"),", "originalCommit": "09db0d8fdc031d168c69d3d47e50d73544d6eade", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb1f4e33ae435c9a3c667d308b7719741e44ea9d", "chunk": "diff --git a/core/src/main/java/nl/nn/adapterframework/soap/SoapVersion.java b/core/src/main/java/nl/nn/adapterframework/soap/SoapVersion.java\nindex 979a30f32..15c623190 100644\n--- a/core/src/main/java/nl/nn/adapterframework/soap/SoapVersion.java\n+++ b/core/src/main/java/nl/nn/adapterframework/soap/SoapVersion.java\n\n@@ -18,13 +18,15 @@ package nl.nn.adapterframework.soap;\n import java.util.HashSet;\n import java.util.Set;\n \n+import javax.xml.soap.SOAPConstants;\n+\n import org.apache.commons.lang.StringUtils;\n \n \n public enum SoapVersion {\n \t\n-\tSOAP11(\"1.1\", \"http://schemas.xmlsoap.org/soap/envelope/\", \"/xml/xsd/soap/envelope.xsd\"),\n-\tSOAP12(\"1.2\", \"http://www.w3.org/2003/05/soap-envelope\",   \"/xml/xsd/soap/envelope-1.2.xsd\"),\n+\tSOAP11(\"1.1\", SOAPConstants.URI_NS_SOAP_ENVELOPE,     \"/xml/xsd/soap/envelope.xsd\"),\n+\tSOAP12(\"1.2\", SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE, \"/xml/xsd/soap/envelope-1.2.xsd\"),\n \tNONE(\"none\", null, null),\n \tAUTO(\"auto\", null, null);\n \n"}}, {"oid": "cb1f4e33ae435c9a3c667d308b7719741e44ea9d", "url": "https://github.com/ibissource/iaf/commit/cb1f4e33ae435c9a3c667d308b7719741e44ea9d", "message": "Optimizations", "committedDate": "2020-05-29T10:23:16Z", "type": "commit"}]}