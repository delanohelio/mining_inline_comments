{"pr_number": 925, "pr_title": "Increase task result limit", "pr_createdAt": "2020-04-01T15:34:09Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/925", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjUyMg==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r401712522", "bodyText": "improve comment", "author": "javeme", "createdAt": "2020-04-01T15:38:49Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -52,7 +52,8 @@\n \n     private static final Logger LOG = Log.logger(HugeTask.class);\n \n-    private static final int MAX_PROPERTY_LENGTH = BytesBuffer.STRING_LEN_MAX;\n+    // The max", "originalCommit": "d1e8fb89a4830d48c39bee80fadfbcca47fd53f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "92dcab634e69096bf8b2c51afe16d366003f8df0", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\nindex cd58ad3b..90fa5f58 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n\n@@ -47,6 +47,7 @@ import com.baidu.hugegraph.util.E;\n import com.baidu.hugegraph.util.InsertionOrderUtil;\n import com.baidu.hugegraph.util.JsonUtil;\n import com.baidu.hugegraph.util.Log;\n+import com.baidu.hugegraph.util.StringEncoding;\n \n public class HugeTask<V> extends FutureTask<V> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjkyMA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r401712920", "bodyText": "add test 128kb is ok", "author": "javeme", "createdAt": "2020-04-01T15:39:22Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "diffHunk": "@@ -429,16 +432,13 @@ public void testGremlinJobWithError() throws TimeoutException {\n         });\n \n         // Test failure task with big input\n-        char[] chars = new char[65536];\n-        for (int i = 0; i < chars.length; i++) {\n-            chars[i] = '8';\n-        }\n-        String bigInput = new String(chars);\n+        int length = 65536 * 1024;", "originalCommit": "d1e8fb89a4830d48c39bee80fadfbcca47fd53f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNTQwMQ==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402035401", "bodyText": "128kb < 64MB, will not trigger exception", "author": "Linary", "createdAt": "2020-04-02T03:44:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjkyMA=="}], "type": "inlineReview", "revised_code": {"commit": "92dcab634e69096bf8b2c51afe16d366003f8df0", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\nindex e5f090d1..8a4d2c07 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\n\n@@ -438,7 +438,7 @@ public class TaskCoreTest extends BaseCoreTest {\n             runGremlinJob(bigInput);\n         }, e -> {\n             Assert.assertContains(\"Task input size 67108933 exceeded \" +\n-                                  \"limit 67107840 bytes\", e.getMessage());\n+                                  \"limit 67108864 bytes\", e.getMessage());\n         });\n     }\n \n"}}, {"oid": "92dcab634e69096bf8b2c51afe16d366003f8df0", "url": "https://github.com/hugegraph/hugegraph/commit/92dcab634e69096bf8b2c51afe16d366003f8df0", "message": "Let task input and result property datatype as blob\n\nChange-Id: Ic5d49fe80e70affbe2882a56c78ca2a03bc27ca8", "committedDate": "2020-04-02T01:46:54Z", "type": "forcePushed"}, {"oid": "f7e646e81da362568b40f4af9dce5f4d70133e83", "url": "https://github.com/hugegraph/hugegraph/commit/f7e646e81da362568b40f4af9dce5f4d70133e83", "message": "Let task input and result property datatype as blob\n\nChange-Id: Ic5d49fe80e70affbe2882a56c78ca2a03bc27ca8", "committedDate": "2020-04-02T10:18:46Z", "type": "forcePushed"}, {"oid": "96b91fdbced89ceba1e19f0c752d549103f87703", "url": "https://github.com/hugegraph/hugegraph/commit/96b91fdbced89ceba1e19f0c752d549103f87703", "message": "Let task input and result property datatype as blob\n\nChange-Id: Ic5d49fe80e70affbe2882a56c78ca2a03bc27ca8", "committedDate": "2020-04-02T10:26:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxOTMzOQ==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402219339", "bodyText": "set BLOB_LEN 4 bytes is ok", "author": "javeme", "createdAt": "2020-04-02T10:44:02Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "diffHunk": "@@ -51,6 +51,7 @@\n     public static final int CHAR_LEN = Character.BYTES;\n     public static final int FLOAT_LEN = Float.BYTES;\n     public static final int DOUBLE_LEN = Double.BYTES;\n+    public static final int BLOB_LEN = SHORT_LEN * 1024;", "originalCommit": "96b91fdbced89ceba1e19f0c752d549103f87703", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java\nindex 2502c027..1c797642 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java\n\n@@ -51,7 +51,6 @@ public final class BytesBuffer {\n     public static final int CHAR_LEN = Character.BYTES;\n     public static final int FLOAT_LEN = Float.BYTES;\n     public static final int DOUBLE_LEN = Double.BYTES;\n-    public static final int BLOB_LEN = SHORT_LEN * 1024;\n \n     public static final int UINT8_MAX = ((byte) -1) & 0xff;\n     public static final int UINT16_MAX = ((short) -1) & 0xffff;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMDQ5Mw==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402220493", "bodyText": "read from BLOB_LEN_MAX", "author": "javeme", "createdAt": "2020-04-02T10:46:10Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -40,19 +40,21 @@\n import com.baidu.hugegraph.HugeException;\n import com.baidu.hugegraph.backend.id.Id;\n import com.baidu.hugegraph.backend.id.IdGenerator;\n-import com.baidu.hugegraph.backend.serializer.BytesBuffer;\n import com.baidu.hugegraph.exception.LimitExceedException;\n import com.baidu.hugegraph.type.define.SerialEnum;\n+import com.baidu.hugegraph.util.Bytes;\n import com.baidu.hugegraph.util.E;\n import com.baidu.hugegraph.util.InsertionOrderUtil;\n import com.baidu.hugegraph.util.JsonUtil;\n import com.baidu.hugegraph.util.Log;\n+import com.baidu.hugegraph.util.StringEncoding;\n \n public class HugeTask<V> extends FutureTask<V> {\n \n     private static final Logger LOG = Log.logger(HugeTask.class);\n \n-    private static final int MAX_PROPERTY_LENGTH = BytesBuffer.STRING_LEN_MAX;\n+    // The vertex property max length, for task input and result\n+    private static final int MAX_PROPERTY_LENGTH = (int) (64 * Bytes.MB);", "originalCommit": "96b91fdbced89ceba1e19f0c752d549103f87703", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\nindex 92201ca7..0632d009 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n\n@@ -47,13 +47,12 @@ import com.baidu.hugegraph.util.E;\n import com.baidu.hugegraph.util.InsertionOrderUtil;\n import com.baidu.hugegraph.util.JsonUtil;\n import com.baidu.hugegraph.util.Log;\n-import com.baidu.hugegraph.util.StringEncoding;\n \n public class HugeTask<V> extends FutureTask<V> {\n \n     private static final Logger LOG = Log.logger(HugeTask.class);\n \n-    // The vertex property max length, for task input and result\n+    // The max\n     private static final int MAX_PROPERTY_LENGTH = (int) (64 * Bytes.MB);\n \n     private final TaskCallable<V> callable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzg0MA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402223840", "bodyText": "call StringEncoding.compress()", "author": "javeme", "createdAt": "2020-04-02T10:52:47Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -448,12 +450,12 @@ protected void property(String key, Object value) {\n \n         if (this.input != null) {\n             list.add(P.INPUT);\n-            list.add(this.input);\n+            list.add(StringEncoding.encode(this.input));", "originalCommit": "96b91fdbced89ceba1e19f0c752d549103f87703", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\nindex 92201ca7..0632d009 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n\n@@ -450,12 +449,12 @@ public class HugeTask<V> extends FutureTask<V> {\n \n         if (this.input != null) {\n             list.add(P.INPUT);\n-            list.add(StringEncoding.encode(this.input));\n+            list.add(this.input);\n         }\n \n         if (this.result != null) {\n             list.add(P.RESULT);\n-            list.add(StringEncoding.encode(this.result));\n+            list.add(this.result);\n         }\n \n         return list.toArray();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNTUwMQ==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402725501", "bodyText": "add empty after 'if'", "author": "zhoney", "createdAt": "2020-04-03T04:06:14Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java", "diffHunk": "@@ -510,6 +551,12 @@ public void removeVertex(HugeVertex vertex) {\n     }\n \n     public Iterator<Vertex> queryAdjacentVertices(Iterator<Edge> edges) {\n+        if(this.lazyLoadAdjacentVertex){", "originalCommit": "34d224f93a2fdc5885b75879dc85df0369070e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java\nindex 82c27e00..b374da9b 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java\n\n@@ -551,7 +568,7 @@ public class GraphTransaction extends IndexableTransaction {\n     }\n \n     public Iterator<Vertex> queryAdjacentVertices(Iterator<Edge> edges) {\n-        if(this.lazyLoadAdjacentVertex){\n+        if (this.lazyLoadAdjacentVertex){\n             return new MapperIterator<>(edges, edge -> {\n                 return ((HugeEdge) edge).otherVertex();\n             });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNjY2NA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402726664", "bodyText": "The e.getMessage maybe too long to see key information, therefore use e.getCause", "author": "zhoney", "createdAt": "2020-04-03T04:11:49Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "diffHunk": "@@ -289,8 +289,9 @@ protected void commitOrRollback() {\n                 LOG.error(\"Failed to rollback changes:\\n {}\", mutation, e2);\n             }\n             // Rethrow the commit exception\n+            // The e.getMessage maybe too long to see key information", "originalCommit": "34d224f93a2fdc5885b75879dc85df0369070e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\nindex 77a94677..06920ecd 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\n\n@@ -289,9 +306,8 @@ public abstract class AbstractTransaction implements Transaction {\n                 LOG.error(\"Failed to rollback changes:\\n {}\", mutation, e2);\n             }\n             // Rethrow the commit exception\n-            // The e.getMessage maybe too long to see key information\n             throw new BackendException(\n-                      \"Failed to commit changes: %s\", e1.getCause());\n+                      \"Failed to commit changes: %s\", e1.getMessage());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyODA5OA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402728098", "bodyText": "delete empty of line 483 or add empty for 484-486", "author": "zhoney", "createdAt": "2020-04-03T04:18:15Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "diffHunk": "@@ -479,16 +477,21 @@ public void testGremlinJobAndCancel() throws TimeoutException {\n                               \"has exceeded the max limit 10000\",\n                               task3.result());\n \n-        // Cancel failure task with big results (task exceeded limit 64k)\n-        String bigResults = \"def big='123456789'; def l=[]; \" +\n-                            \"for (i in 1..9000) l.add(big); l;\";\n+        // Cancel failure task with big results (task exceeded limit 64M)\n+        String bigResults = \"def big='12345678'; def ol=[]; def il=[]; \" +\n+                            \"for (i in 1..2000) \" +\n+                            \"   for (j in 1..1000) \" +", "originalCommit": "34d224f93a2fdc5885b75879dc85df0369070e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\nindex e7d5af60..e5f090d1 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java\n\n@@ -478,8 +480,8 @@ public class TaskCoreTest extends BaseCoreTest {\n                               task3.result());\n \n         // Cancel failure task with big results (task exceeded limit 64M)\n-        String bigResults = \"def big='12345678'; def ol=[]; def il=[]; \" +\n-                            \"for (i in 1..2000) \" +\n+        String bigResults = \"def big='123456789'; def ol=[]; def il=[]; \" +\n+                            \"for (i in 1..9000) \" +\n                             \"   for (j in 1..1000) \" +\n                                     \"il.add(big); \" +\n                                 \"ol.add(il); \" +\n"}}, {"oid": "e02691b675006fa0ca741721bd078ed46a4a8f8b", "url": "https://github.com/hugegraph/hugegraph/commit/e02691b675006fa0ca741721bd078ed46a4a8f8b", "message": "Increase task result limit\n\nChange-Id: Ib2c4bdf25e4604d8bea47802e724c0f0934170fb", "committedDate": "2020-04-05T11:07:43Z", "type": "commit"}, {"oid": "8f75679e35c9f71ef3e920cd44463e8386c38e25", "url": "https://github.com/hugegraph/hugegraph/commit/8f75679e35c9f71ef3e920cd44463e8386c38e25", "message": "Let task input and result property datatype as blob\n\nChange-Id: Ic5d49fe80e70affbe2882a56c78ca2a03bc27ca8", "committedDate": "2020-04-05T11:07:43Z", "type": "commit"}, {"oid": "e6d04c95d95721f229598715acfb87e5c3d60b5f", "url": "https://github.com/hugegraph/hugegraph/commit/e6d04c95d95721f229598715acfb87e5c3d60b5f", "message": "Support config task input and result size limit\n\nChange-Id: Iaaf3c8bafe0fa52d7c16d67f45fd0b2cf5611de3", "committedDate": "2020-04-05T11:07:43Z", "type": "commit"}, {"oid": "e6d04c95d95721f229598715acfb87e5c3d60b5f", "url": "https://github.com/hugegraph/hugegraph/commit/e6d04c95d95721f229598715acfb87e5c3d60b5f", "message": "Support config task input and result size limit\n\nChange-Id: Iaaf3c8bafe0fa52d7c16d67f45fd0b2cf5611de3", "committedDate": "2020-04-05T11:07:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODQzMA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688430", "bodyText": "gremlin job => job", "author": "javeme", "createdAt": "2020-04-05T11:29:37Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -115,6 +116,22 @@ public static synchronized CoreOptions instance() {\n                     10L\n             );\n \n+    public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.input_size_limit\",\n+                    \"The gremlin job input size limit in bytes.\",", "originalCommit": "e6d04c95d95721f229598715acfb87e5c3d60b5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6306fe37c21f68b011e97101597be43e4215448", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\nindex 95c11b92..37b5a38d 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n\n@@ -119,7 +119,7 @@ public class CoreOptions extends OptionHolder {\n     public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n             new ConfigOption<>(\n                     \"task.input_size_limit\",\n-                    \"The gremlin job input size limit in bytes.\",\n+                    \"The job input size limit in bytes.\",\n                     rangeInt(0L, Bytes.GB),\n                     16 * Bytes.MB\n             );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODQ1MA==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688450", "bodyText": "ditto", "author": "javeme", "createdAt": "2020-04-05T11:29:45Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -115,6 +116,22 @@ public static synchronized CoreOptions instance() {\n                     10L\n             );\n \n+    public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.input_size_limit\",\n+                    \"The gremlin job input size limit in bytes.\",\n+                    rangeInt(0L, Bytes.GB),\n+                    16 * Bytes.MB\n+            );\n+\n+    public static final ConfigOption<Long> TASK_RESULT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.result_size_limit\",\n+                    \"The gremlin job result size limit in bytes.\",", "originalCommit": "e6d04c95d95721f229598715acfb87e5c3d60b5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6306fe37c21f68b011e97101597be43e4215448", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\nindex 95c11b92..37b5a38d 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n\n@@ -119,7 +119,7 @@ public class CoreOptions extends OptionHolder {\n     public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n             new ConfigOption<>(\n                     \"task.input_size_limit\",\n-                    \"The gremlin job input size limit in bytes.\",\n+                    \"The job input size limit in bytes.\",\n                     rangeInt(0L, Bytes.GB),\n                     16 * Bytes.MB\n             );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODY5Mw==", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688693", "bodyText": "check the length of compressed", "author": "javeme", "createdAt": "2020-04-05T11:32:02Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -526,11 +535,24 @@ protected void property(String key, Object value) {\n         return Collectors.toCollection(InsertionOrderUtil::newSet);\n     }\n \n-    private static void checkPropertySize(String property, String name) {\n-        if (property != null && property.length() > MAX_PROPERTY_LENGTH) {\n+    private static void checkPropertySize(HugeGraph graph, String property,\n+                                          String name) {\n+        if (property == null) {\n+            return;\n+        }\n+\n+        HugeConfig config = graph.configuration();\n+        long maxLength = BytesBuffer.STRING_LEN_MAX;\n+        if (name.equals(P.unhide(P.INPUT))) {\n+            maxLength = config.get(CoreOptions.TASK_INPUT_SIZE_LIMIT);\n+        } else if (name.equals(P.unhide(P.RESULT))) {\n+            maxLength = config.get(CoreOptions.TASK_RESULT_SIZE_LIMIT);\n+        }\n+\n+        if (property.length() > maxLength) {", "originalCommit": "e6d04c95d95721f229598715acfb87e5c3d60b5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6306fe37c21f68b011e97101597be43e4215448", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\nindex cd46ea51..fe89040f 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java\n\n@@ -541,15 +541,18 @@ public class HugeTask<V> extends FutureTask<V> {\n             return;\n         }\n \n+        int propertyLength = property.length();\n         HugeConfig config = graph.configuration();\n         long maxLength = BytesBuffer.STRING_LEN_MAX;\n         if (name.equals(P.unhide(P.INPUT))) {\n+            propertyLength = StringEncoding.compress(property).length;\n             maxLength = config.get(CoreOptions.TASK_INPUT_SIZE_LIMIT);\n         } else if (name.equals(P.unhide(P.RESULT))) {\n+            propertyLength = StringEncoding.compress(property).length;\n             maxLength = config.get(CoreOptions.TASK_RESULT_SIZE_LIMIT);\n         }\n \n-        if (property.length() > maxLength) {\n+        if (propertyLength > maxLength) {\n             throw new LimitExceedException(\n                       \"Task %s size %s exceeded limit %s bytes\",\n                       name, property.length(), maxLength);\n"}}, {"oid": "e6306fe37c21f68b011e97101597be43e4215448", "url": "https://github.com/hugegraph/hugegraph/commit/e6306fe37c21f68b011e97101597be43e4215448", "message": "tiny improve\n\nChange-Id: I08a3a41900492f95fa161f80d4c9a18d85ac4f64", "committedDate": "2020-04-05T13:35:24Z", "type": "commit"}, {"oid": "22d36dbb3c23c7e7f597a9b4fceda02d817c99e1", "url": "https://github.com/hugegraph/hugegraph/commit/22d36dbb3c23c7e7f597a9b4fceda02d817c99e1", "message": "improve TaskCoreTest\n\nChange-Id: I2f88344f09fc7d53f36f51ff5af5e1baa5d36ba0", "committedDate": "2020-04-06T08:52:36Z", "type": "commit"}, {"oid": "22d36dbb3c23c7e7f597a9b4fceda02d817c99e1", "url": "https://github.com/hugegraph/hugegraph/commit/22d36dbb3c23c7e7f597a9b4fceda02d817c99e1", "message": "improve TaskCoreTest\n\nChange-Id: I2f88344f09fc7d53f36f51ff5af5e1baa5d36ba0", "committedDate": "2020-04-06T08:52:36Z", "type": "forcePushed"}]}