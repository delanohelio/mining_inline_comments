{"pr_number": 1234, "pr_title": "support hbase enable kerberos authentication", "pr_createdAt": "2020-10-29T08:04:34Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/1234", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4MjU5MQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514082591", "bodyText": "keep the origin code and just add line 127~134", "author": "javeme", "createdAt": "2020-10-29T08:31:25Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\",\"kerberos\");", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\nindex 75dacc8a..336a6640 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n\n@@ -123,44 +123,30 @@ public class HbaseSessions extends BackendSessionPool {\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n         boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n-        Configuration hConfig = null;\n+        Configuration hConfig = HBaseConfiguration.create();\n+        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n+        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n+        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n+\n+        hConfig.setInt(\"zookeeper.recovery.retry\",\n+                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n+\n+        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n+        hConfig.setInt(\"hbase.hconnection.threads.max\",\n+                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+\n         if(isEnableKerberos) {\n             String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n             System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n-            hConfig = HBaseConfiguration.create();\n             String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n             String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n             hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n-            hConfig.set(\"hbase.security.authentication\",\"kerberos\");\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n \n+            //  login/authenticate using keytab\n             UserGroupInformation.setConfiguration(hConfig);\n             UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n-        } else {\n-            hConfig = HBaseConfiguration.create();\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n         }\n-\n         this.hbase = ConnectionFactory.createConnection(hConfig);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4Mjk4NA==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514082984", "bodyText": "missing one space before \"kerberos\"", "author": "javeme", "createdAt": "2020-10-29T08:32:04Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\",\"kerberos\");", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\nindex 75dacc8a..336a6640 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n\n@@ -123,44 +123,30 @@ public class HbaseSessions extends BackendSessionPool {\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n         boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n-        Configuration hConfig = null;\n+        Configuration hConfig = HBaseConfiguration.create();\n+        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n+        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n+        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n+\n+        hConfig.setInt(\"zookeeper.recovery.retry\",\n+                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n+\n+        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n+        hConfig.setInt(\"hbase.hconnection.threads.max\",\n+                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+\n         if(isEnableKerberos) {\n             String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n             System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n-            hConfig = HBaseConfiguration.create();\n             String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n             String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n             hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n-            hConfig.set(\"hbase.security.authentication\",\"kerberos\");\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n \n+            //  login/authenticate using keytab\n             UserGroupInformation.setConfiguration(hConfig);\n             UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n-        } else {\n-            hConfig = HBaseConfiguration.create();\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n         }\n-\n         this.hbase = ConnectionFactory.createConnection(hConfig);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4MzUzMQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514083531", "bodyText": "improve description", "author": "javeme", "createdAt": "2020-10-29T08:32:58Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "diffHunk": "@@ -97,4 +97,36 @@ public static synchronized HbaseOptions instance() {\n                     positiveInt(),\n                     12 * 60 * 60L\n             );\n+\n+    public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n+            new ConfigOption<>(\n+                    \"hbase.kerberos.enable\",\n+                    \"Is Kerberos authentication enabled for HBase.\",\n+                    disallowEmpty(),\n+                    false\n+            );\n+\n+    public static final ConfigOption<String> HBASE_KRB5_CONF =\n+            new ConfigOption<>(\n+                    \"hbase.krb5.conf\",\n+                    \"Krb5.conf configuration file.\",", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\nindex e60ef5f1..ae74610f 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\n\n@@ -100,7 +100,7 @@ public class HbaseOptions extends OptionHolder {\n \n     public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n             new ConfigOption<>(\n-                    \"hbase.kerberos.enable\",\n+                    \"hbase.kerberos_enable\",\n                     \"Is Kerberos authentication enabled for HBase.\",\n                     disallowEmpty(),\n                     false\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4NDIwOQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514084209", "bodyText": "prefer hbase.kerberos_enable, same as other option name", "author": "javeme", "createdAt": "2020-10-29T08:34:11Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "diffHunk": "@@ -97,4 +97,36 @@ public static synchronized HbaseOptions instance() {\n                     positiveInt(),\n                     12 * 60 * 60L\n             );\n+\n+    public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n+            new ConfigOption<>(\n+                    \"hbase.kerberos.enable\",", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\nindex e60ef5f1..ae74610f 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java\n\n@@ -100,7 +100,7 @@ public class HbaseOptions extends OptionHolder {\n \n     public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n             new ConfigOption<>(\n-                    \"hbase.kerberos.enable\",\n+                    \"hbase.kerberos_enable\",\n                     \"Is Kerberos authentication enabled for HBase.\",\n                     disallowEmpty(),\n                     false\n"}}, {"oid": "7bfcb12aeddb0c8b30aff54542c035e1aa6578a1", "url": "https://github.com/hugegraph/hugegraph/commit/7bfcb12aeddb0c8b30aff54542c035e1aa6578a1", "message": "fix #1227\n\nsupport hbase enable kerberos authentication.add configs as follows:\nhbase.kerberos.enable, default value:false\nhbase.krb5.conf,default value:/etc/krb5.conf\nhbase.kerberos.principal,default value:\"\"\nhbase.kerberos.keytab,default value:\"\"", "committedDate": "2020-10-29T08:56:16Z", "type": "commit"}, {"oid": "7bfcb12aeddb0c8b30aff54542c035e1aa6578a1", "url": "https://github.com/hugegraph/hugegraph/commit/7bfcb12aeddb0c8b30aff54542c035e1aa6578a1", "message": "fix #1227\n\nsupport hbase enable kerberos authentication.add configs as follows:\nhbase.kerberos.enable, default value:false\nhbase.krb5.conf,default value:/etc/krb5.conf\nhbase.kerberos.principal,default value:\"\"\nhbase.kerberos.keytab,default value:\"\"", "committedDate": "2020-10-29T08:56:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExNzY5Mw==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514117693", "bodyText": "add hConfig.set(\"hadoop.security.authorization\", \"true\");", "author": "houzhizhen", "createdAt": "2020-10-29T09:29:07Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE0NDA1NQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514144055", "bodyText": "It's not a legal argument. After setting,program reports exception ,as follows:\nException in thread \"main\" java.lang.IllegalArgumentException: Invalid attribute value for hadoop.security.authentication of true\nat org.apache.hadoop.security.SecurityUtil.getAuthenticationMethod(SecurityUtil.java:609)\nat org.apache.hadoop.security.UserGroupInformation.initialize(UserGroupInformation.java:272)\nat org.apache.hadoop.security.UserGroupInformation.setConfiguration(UserGroupInformation.java:311)", "author": "tmljob", "createdAt": "2020-10-29T10:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExNzY5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\nindex 75dacc8a..336a6640 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n\n@@ -123,44 +123,30 @@ public class HbaseSessions extends BackendSessionPool {\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n         boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n-        Configuration hConfig = null;\n+        Configuration hConfig = HBaseConfiguration.create();\n+        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n+        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n+        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n+\n+        hConfig.setInt(\"zookeeper.recovery.retry\",\n+                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n+\n+        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n+        hConfig.setInt(\"hbase.hconnection.threads.max\",\n+                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+\n         if(isEnableKerberos) {\n             String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n             System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n-            hConfig = HBaseConfiguration.create();\n             String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n             String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n             hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n-            hConfig.set(\"hbase.security.authentication\",\"kerberos\");\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n \n+            //  login/authenticate using keytab\n             UserGroupInformation.setConfiguration(hConfig);\n             UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n-        } else {\n-            hConfig = HBaseConfiguration.create();\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n         }\n-\n         this.hbase = ConnectionFactory.createConnection(hConfig);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514119682", "bodyText": "remove this line if possible.", "author": "houzhizhen", "createdAt": "2020-10-29T09:32:08Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);", "originalCommit": "6eba0f92918bb03608f7502ee523485463737756", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzMTQzMw==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514131433", "bodyText": "which line need to remove?pls tell me line num.", "author": "tmljob", "createdAt": "2020-10-29T09:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzkxNQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514187915", "bodyText": "@houzhizhen It seems that setting this environment java.security.krb5.conf  is the best way, see Locating the krb5.conf Configuration File", "author": "javeme", "createdAt": "2020-10-29T11:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\nindex 75dacc8a..336a6640 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n\n@@ -123,44 +123,30 @@ public class HbaseSessions extends BackendSessionPool {\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n         boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n-        Configuration hConfig = null;\n+        Configuration hConfig = HBaseConfiguration.create();\n+        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n+        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n+        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n+\n+        hConfig.setInt(\"zookeeper.recovery.retry\",\n+                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n+\n+        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n+        hConfig.setInt(\"hbase.hconnection.threads.max\",\n+                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+\n         if(isEnableKerberos) {\n             String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n             System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n-            hConfig = HBaseConfiguration.create();\n             String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n             String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n             hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n-            hConfig.set(\"hbase.security.authentication\",\"kerberos\");\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n \n+            //  login/authenticate using keytab\n             UserGroupInformation.setConfiguration(hConfig);\n             UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n-        } else {\n-            hConfig = HBaseConfiguration.create();\n-\n-            hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-            hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-            hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-            hConfig.setInt(\"zookeeper.recovery.retry\",\n-                           config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-            // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-            hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                           config.get(HbaseOptions.HBASE_THREADS_MAX));\n         }\n-\n         this.hbase = ConnectionFactory.createConnection(hConfig);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNjU2MA==", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514136560", "bodyText": "could you move the block(line 127~138) to line 150?", "author": "javeme", "createdAt": "2020-10-29T09:59:08Z", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,8 +122,21 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n         Configuration hConfig = HBaseConfiguration.create();\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n+\n+            //  login/authenticate using keytab\n+            UserGroupInformation.setConfiguration(hConfig);\n+            UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n+        }", "originalCommit": "09a17941c968f08a230c0ee81509a7f57f954b06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "chunk": "diff --git a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\nindex a94b442b..336a6640 100644\n--- a/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n+++ b/hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java\n\n@@ -124,6 +124,17 @@ public class HbaseSessions extends BackendSessionPool {\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n         boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n         Configuration hConfig = HBaseConfiguration.create();\n+        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n+        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n+        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n+\n+        hConfig.setInt(\"zookeeper.recovery.retry\",\n+                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n+\n+        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n+        hConfig.setInt(\"hbase.hconnection.threads.max\",\n+                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+\n         if(isEnableKerberos) {\n             String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n             System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n"}}, {"oid": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "url": "https://github.com/hugegraph/hugegraph/commit/03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "message": "implement #1227", "committedDate": "2020-10-30T01:00:58Z", "type": "commit"}, {"oid": "03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "url": "https://github.com/hugegraph/hugegraph/commit/03c8a1ffdbff25f52fb88eb941aba4886b29d18a", "message": "implement #1227", "committedDate": "2020-10-30T01:00:58Z", "type": "forcePushed"}]}