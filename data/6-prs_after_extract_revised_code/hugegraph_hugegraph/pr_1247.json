{"pr_number": 1247, "pr_title": "Implement raft snapshot mechanism by rocksdb checkpoint", "pr_createdAt": "2020-11-09T10:03:43Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/1247", "timeline": [{"oid": "f02717587c334074bf766e276b864a8c7f5241b3", "url": "https://github.com/hugegraph/hugegraph/commit/f02717587c334074bf766e276b864a8c7f5241b3", "message": "Implement raft snapshot mechanism by rocksdb checkpoint\n\nChange-Id: I761c01da871aac6fe6e906f6150c66c7f5b8f67b", "committedDate": "2020-11-09T10:08:38Z", "type": "forcePushed"}, {"oid": "84050365c34ed61c19e4ec63b630d3873ee4d634", "url": "https://github.com/hugegraph/hugegraph/commit/84050365c34ed61c19e4ec63b630d3873ee4d634", "message": "Implement raft snapshot mechanism by rocksdb checkpoint\n\nChange-Id: I761c01da871aac6fe6e906f6150c66c7f5b8f67b", "committedDate": "2020-11-09T10:12:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczMjQ0OQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519732449", "bodyText": "The raft node is initialized", "author": "javeme", "createdAt": "2020-11-09T11:17:32Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "diffHunk": "@@ -129,6 +129,7 @@ public void open(String name) {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n+        LOG.info(\"The raft node was inited\");", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\nindex 0424f3b1..9191b16a 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n\n@@ -129,9 +129,9 @@ public class RaftBackendStoreProvider implements BackendStoreProvider {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n-        LOG.info(\"The raft node was inited\");\n+        LOG.info(\"The raft node is initialized\");\n         this.context.waitRaftNodeStarted();\n-        LOG.info(\"The raft store was started\");\n+        LOG.info(\"The raft store is started\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczODc1NQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519738755", "bodyText": "use %s", "author": "javeme", "createdAt": "2020-11-09T11:28:53Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java", "diffHunk": "@@ -635,23 +635,28 @@ public void readSnapshot(String parentPath) {\n                                                e, snapshotFile, dataFile);\n                 }\n             }\n-\n-            // Reopen the db\n-            this.open(this.sessions.config());\n+            // Reload rocksdb instance\n+            for (RocksDBSessions sessions : this.dbs.values()) {\n+                sessions.reload();\n+            }\n+            LOG.info(\"The store {} load snapshot succeed\", this.store);\n+        } catch (RocksDBException e) {\n+            throw new BackendException(\"Failed to reload rocksdb: \" + e.toString());", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\nindex 26817c9c..c223e8bb 100644\n--- a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n+++ b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n\n@@ -639,9 +637,9 @@ public abstract class RocksDBStore extends AbstractBackendStore<Session> {\n             for (RocksDBSessions sessions : this.dbs.values()) {\n                 sessions.reload();\n             }\n-            LOG.info(\"The store {} load snapshot succeed\", this.store);\n+            LOG.info(\"The store {} load snapshot successfully\", this.store);\n         } catch (RocksDBException e) {\n-            throw new BackendException(\"Failed to reload rocksdb: \" + e.toString());\n+            throw new BackendException(\"Failed to reload rocksdb\", e);\n         } finally {\n             writeLock.unlock();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTgzNQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519739835", "bodyText": "rename to storeLock", "author": "javeme", "createdAt": "2020-11-09T11:30:52Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java", "diffHunk": "@@ -586,21 +581,22 @@ protected Session session(HugeType tableType) {\n \n     @Override\n     public void writeSnapshot(String parentPath) {\n-        Lock readLock = this.truncateLock.readLock();\n-        readLock.lock();\n+        Lock writeLock = this.truncateLock.writeLock();", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\nindex 26817c9c..c223e8bb 100644\n--- a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n+++ b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n\n@@ -581,7 +581,7 @@ public abstract class RocksDBStore extends AbstractBackendStore<Session> {\n \n     @Override\n     public void writeSnapshot(String parentPath) {\n-        Lock writeLock = this.truncateLock.writeLock();\n+        Lock writeLock = this.storeLock.writeLock();\n         writeLock.lock();\n         try {\n             // Every rocksdb instance should create an snapshot\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MDc5Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519740792", "bodyText": "move forceCloseRocksDB to RocksDBSessions", "author": "javeme", "createdAt": "2020-11-09T11:32:37Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java", "diffHunk": "@@ -614,12 +610,16 @@ public void readSnapshot(String parentPath) {\n                 File dataFile = new File(session.dataPath());\n                 fileRenamePairs.add(Pair.of(snapshotFile, dataFile));\n             }\n-            // Close old sessions, is that right?\n-            for (Session session : this.session()) {\n-                session.close();\n+            /*\n+             * NOTE: must close rocksdb instance before deleting file directory,\n+             * if close after copying the snapshot directory to origin position,\n+             * it may produce dirty data.\n+             */\n+            for (RocksDBSessions sessions : this.dbs.values()) {\n+                if (sessions instanceof RocksDBStdSessions) {", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\nindex 26817c9c..c223e8bb 100644\n--- a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n+++ b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n\n@@ -616,9 +616,7 @@ public abstract class RocksDBStore extends AbstractBackendStore<Session> {\n              * it may produce dirty data.\n              */\n             for (RocksDBSessions sessions : this.dbs.values()) {\n-                if (sessions instanceof RocksDBStdSessions) {\n-                    sessions.forceCloseRocksDB();\n-                }\n+                sessions.forceCloseRocksDB();\n             }\n             // Copy snapshot file to dest file\n             for (Pair<File, File> pair : fileRenamePairs) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTE1Ng==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519741156", "bodyText": "successfully", "author": "javeme", "createdAt": "2020-11-09T11:33:17Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java", "diffHunk": "@@ -635,23 +635,28 @@ public void readSnapshot(String parentPath) {\n                                                e, snapshotFile, dataFile);\n                 }\n             }\n-\n-            // Reopen the db\n-            this.open(this.sessions.config());\n+            // Reload rocksdb instance\n+            for (RocksDBSessions sessions : this.dbs.values()) {\n+                sessions.reload();\n+            }\n+            LOG.info(\"The store {} load snapshot succeed\", this.store);", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\nindex 26817c9c..c223e8bb 100644\n--- a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n+++ b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n\n@@ -639,9 +637,9 @@ public abstract class RocksDBStore extends AbstractBackendStore<Session> {\n             for (RocksDBSessions sessions : this.dbs.values()) {\n                 sessions.reload();\n             }\n-            LOG.info(\"The store {} load snapshot succeed\", this.store);\n+            LOG.info(\"The store {} load snapshot successfully\", this.store);\n         } catch (RocksDBException e) {\n-            throw new BackendException(\"Failed to reload rocksdb: \" + e.toString());\n+            throw new BackendException(\"Failed to reload rocksdb\", e);\n         } finally {\n             writeLock.unlock();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzQ0Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519743442", "bodyText": "\"Failed to save snapshot, path={}, files={}\", the exception stack will be printed", "author": "javeme", "createdAt": "2020-11-09T11:37:31Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java", "diffHunk": "@@ -49,22 +48,27 @@\n     private static final String SNAPSHOT_DIR = \"ss\";\n     private static final String SNAPSHOT_ARCHIVE = \"ss.zip\";\n \n-    public void save(BackendStore store, SnapshotWriter writer,\n-                     Closure done, ExecutorService executor) {\n+    private final RaftBackendStore[] stores;\n+\n+    public StoreSnapshotFile(RaftBackendStore[] stores) {\n+        this.stores = stores;\n+    }\n+\n+    public void save(SnapshotWriter writer, Closure done,\n+                     ExecutorService executor) {\n         String writerPath = writer.getPath();\n         String snapshotPath = Paths.get(writerPath, SNAPSHOT_DIR).toString();\n         try {\n-            this.doSnapshotSave(store, snapshotPath)\n-                .whenComplete((metaBuilder, throwable) -> {\n-                if (throwable == null) {\n+            this.doSnapshotSave(snapshotPath).whenComplete((metaBuilder, t) -> {\n+                if (t == null) {\n                     executor.execute(() -> compressSnapshot(writer, metaBuilder,\n                                                             done));\n                 } else {\n                     LOG.error(\"Failed to save snapshot, path={}, files={}, {}.\",\n-                              writerPath, writer.listFiles(), throwable);\n+                              writerPath, writer.listFiles(), t);", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\nindex 1d43a0fa..3f7a147b 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n\n@@ -64,7 +64,7 @@ public class StoreSnapshotFile {\n                     executor.execute(() -> compressSnapshot(writer, metaBuilder,\n                                                             done));\n                 } else {\n-                    LOG.error(\"Failed to save snapshot, path={}, files={}, {}.\",\n+                    LOG.error(\"Failed to save snapshot, path={}, files={}\",\n                               writerPath, writer.listFiles(), t);\n                     done.run(new Status(RaftError.EIO,\n                              \"Failed to save snapshot at %s, error is %s\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0NDAyNA==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519744024", "bodyText": "set private", "author": "javeme", "createdAt": "2020-11-09T11:38:39Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java", "diffHunk": "@@ -105,14 +109,21 @@ public boolean load(BackendStore store, SnapshotReader reader) {\n     }\n \n     public CompletableFuture<LocalFileMeta.Builder> doSnapshotSave(\n-                                                    BackendStore store,\n                                                     String snapshotPath) {\n-        store.writeSnapshot(snapshotPath);\n+        for (RaftBackendStore store : this.stores) {\n+            String parentPath = Paths.get(snapshotPath, store.store())\n+                                     .toString();\n+            store.writeSnapshot(parentPath);\n+        }\n         return CompletableFuture.completedFuture(LocalFileMeta.newBuilder());\n     }\n \n-    public void doSnapshotLoad(BackendStore store, String snapshotPath) {\n-        store.readSnapshot(snapshotPath);\n+    public void doSnapshotLoad(String snapshotPath) {", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\nindex 1d43a0fa..3f7a147b 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n\n@@ -108,8 +108,8 @@ public class StoreSnapshotFile {\n         }\n     }\n \n-    public CompletableFuture<LocalFileMeta.Builder> doSnapshotSave(\n-                                                    String snapshotPath) {\n+    private CompletableFuture<LocalFileMeta.Builder> doSnapshotSave(\n+                                                     String snapshotPath) {\n         for (RaftBackendStore store : this.stores) {\n             String parentPath = Paths.get(snapshotPath, store.store())\n                                      .toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0NDE4Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519744182", "bodyText": "set protected", "author": "javeme", "createdAt": "2020-11-09T11:38:57Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java", "diffHunk": "@@ -186,6 +186,10 @@ public StoreType storeType(String store) {\n         }\n     }\n \n+    public RaftBackendStore[] stores() {", "originalCommit": "84050365c34ed61c19e4ec63b630d3873ee4d634", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java\nindex ae2484c9..ecfa8e92 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedContext.java\n\n@@ -186,7 +183,7 @@ public final class RaftSharedContext {\n         }\n     }\n \n-    public RaftBackendStore[] stores() {\n+    protected RaftBackendStore[] stores() {\n         return this.stores;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5NDA3MA==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r519794070", "bodyText": "\"the exception stack will be printed\" is just comment", "author": "javeme", "createdAt": "2020-11-09T13:06:03Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java", "diffHunk": "@@ -64,7 +64,8 @@ public void save(SnapshotWriter writer, Closure done,\n                     executor.execute(() -> compressSnapshot(writer, metaBuilder,\n                                                             done));\n                 } else {\n-                    LOG.error(\"Failed to save snapshot, path={}, files={}, {}.\",\n+                    LOG.error(\"Failed to save snapshot, path={}, files={}, \" +\n+                              \"the exception stack will be printed.\",", "originalCommit": "bc73b3cb84842c3ef9422cd4800d3e117466acbf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c49a48d160741ba1862d6c30d4fc290401d57414", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\nindex 782dae00..3f7a147b 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreSnapshotFile.java\n\n@@ -64,8 +64,7 @@ public class StoreSnapshotFile {\n                     executor.execute(() -> compressSnapshot(writer, metaBuilder,\n                                                             done));\n                 } else {\n-                    LOG.error(\"Failed to save snapshot, path={}, files={}, \" +\n-                              \"the exception stack will be printed.\",\n+                    LOG.error(\"Failed to save snapshot, path={}, files={}\",\n                               writerPath, writer.listFiles(), t);\n                     done.run(new Status(RaftError.EIO,\n                              \"Failed to save snapshot at %s, error is %s\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NDI3OQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r520494279", "bodyText": "remove \"is\"", "author": "houzhizhen", "createdAt": "2020-11-10T11:33:24Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "diffHunk": "@@ -129,8 +129,9 @@ public void open(String name) {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n+        LOG.info(\"The raft node is initialized\");", "originalCommit": "b11a2197aead8543def94769b13fb62336132354", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNDk5OA==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r521124998", "bodyText": "prefer keep it", "author": "javeme", "createdAt": "2020-11-11T05:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NDI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5254d0c89d5df1de1d501f5f53591bc5ff7d9de1", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\nindex 9191b16a..0424f3b1 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n\n@@ -129,9 +129,9 @@ public class RaftBackendStoreProvider implements BackendStoreProvider {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n-        LOG.info(\"The raft node is initialized\");\n+        LOG.info(\"The raft node was inited\");\n         this.context.waitRaftNodeStarted();\n-        LOG.info(\"The raft store is started\");\n+        LOG.info(\"The raft store was started\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NDM4Mg==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r520494382", "bodyText": "remove \"is\"", "author": "houzhizhen", "createdAt": "2020-11-10T11:33:31Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "diffHunk": "@@ -129,8 +129,9 @@ public void open(String name) {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n+        LOG.info(\"The raft node is initialized\");\n         this.context.waitRaftNodeStarted();\n-        LOG.info(\"The raft store was started\");\n+        LOG.info(\"The raft store is started\");", "originalCommit": "b11a2197aead8543def94769b13fb62336132354", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5254d0c89d5df1de1d501f5f53591bc5ff7d9de1", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\nindex 9191b16a..0424f3b1 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java\n\n@@ -129,9 +129,9 @@ public class RaftBackendStoreProvider implements BackendStoreProvider {\n     @Override\n     public void waitStoreStarted() {\n         this.context.initRaftNode();\n-        LOG.info(\"The raft node is initialized\");\n+        LOG.info(\"The raft node was inited\");\n         this.context.waitRaftNodeStarted();\n-        LOG.info(\"The raft store is started\");\n+        LOG.info(\"The raft store was started\");\n     }\n \n     @Override\n"}}, {"oid": "c49a48d160741ba1862d6c30d4fc290401d57414", "url": "https://github.com/hugegraph/hugegraph/commit/c49a48d160741ba1862d6c30d4fc290401d57414", "message": "adapt unit test\n\nChange-Id: I157a1c3b6f893083f507b99a22e717e2b89eb2ce", "committedDate": "2020-11-16T07:06:17Z", "type": "forcePushed"}, {"oid": "5254d0c89d5df1de1d501f5f53591bc5ff7d9de1", "url": "https://github.com/hugegraph/hugegraph/commit/5254d0c89d5df1de1d501f5f53591bc5ff7d9de1", "message": "Implement raft snapshot mechanism by rocksdb checkpoint\n\nChange-Id: I761c01da871aac6fe6e906f6150c66c7f5b8f67b", "committedDate": "2020-11-17T07:40:52Z", "type": "commit"}, {"oid": "09e4d29e3dc1a708fa260764cd90f856233867df", "url": "https://github.com/hugegraph/hugegraph/commit/09e4d29e3dc1a708fa260764cd90f856233867df", "message": "tiny improve\n\nChange-Id: Ia423824791a1c6bd611e981facaf7a26c94fc5ca", "committedDate": "2020-11-17T07:40:52Z", "type": "commit"}, {"oid": "10aa24392e9ab12597ca5346df3e6a6bdf3790a0", "url": "https://github.com/hugegraph/hugegraph/commit/10aa24392e9ab12597ca5346df3e6a6bdf3790a0", "message": "tiny improve\n\nChange-Id: Ib2c72eab8b91abbba55cca3b309ed91e35654083", "committedDate": "2020-11-17T07:40:53Z", "type": "commit"}, {"oid": "e57d3b1e4250e37e8e19b9353e8d376f3a104f3a", "url": "https://github.com/hugegraph/hugegraph/commit/e57d3b1e4250e37e8e19b9353e8d376f3a104f3a", "message": "tiny improve\n\nChange-Id: I27be0ad4bf78694e98855d77450a97f447832114", "committedDate": "2020-11-17T07:40:53Z", "type": "commit"}, {"oid": "9c3c49cfd99260e465120c823d040f50ba8e8a84", "url": "https://github.com/hugegraph/hugegraph/commit/9c3c49cfd99260e465120c823d040f50ba8e8a84", "message": "adapt unit test\n\nChange-Id: I157a1c3b6f893083f507b99a22e717e2b89eb2ce", "committedDate": "2020-11-17T07:40:53Z", "type": "commit"}, {"oid": "e14b091d2d18394958d35ffa87050adaf4fe9713", "url": "https://github.com/hugegraph/hugegraph/commit/e14b091d2d18394958d35ffa87050adaf4fe9713", "message": "adapt with dbs as member field\n\nChange-Id: I205329c07fc8bac0f9731e77ddc842f1366d21ec", "committedDate": "2020-11-17T07:49:36Z", "type": "commit"}, {"oid": "e14b091d2d18394958d35ffa87050adaf4fe9713", "url": "https://github.com/hugegraph/hugegraph/commit/e14b091d2d18394958d35ffa87050adaf4fe9713", "message": "adapt with dbs as member field\n\nChange-Id: I205329c07fc8bac0f9731e77ddc842f1366d21ec", "committedDate": "2020-11-17T07:49:36Z", "type": "forcePushed"}, {"oid": "e9de3775d2949c875936f3086f666480c4f4105e", "url": "https://github.com/hugegraph/hugegraph/commit/e9de3775d2949c875936f3086f666480c4f4105e", "message": "SuppressWarnings\n\nChange-Id: I37779caec0fdd50276f8597fa4540df39ad40942", "committedDate": "2020-11-17T09:26:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMDA3OQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r525130079", "bodyText": "move line 259 to line 256", "author": "javeme", "createdAt": "2020-11-17T12:52:10Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStdSessions.java", "diffHunk": "@@ -251,9 +251,11 @@ public synchronized void dropTable(String... tables)\n         }\n     }\n \n-    @SuppressWarnings(\"unused\")\n-    private void reload() throws RocksDBException {\n-        this.rocksdb.close();\n+    @Override\n+    public void reload() throws RocksDBException {\n+        if (this.rocksdb.isOwningHandle()) {\n+            this.rocksdb.close();\n+        }", "originalCommit": "e9de3775d2949c875936f3086f666480c4f4105e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzNjg4Ng==", "url": "https://github.com/hugegraph/hugegraph/pull/1247#discussion_r525136886", "bodyText": "update comments:\nOpen twice, copy a RocksDBSessions reference, since from v0.11.2 release we don't support multi graphs share rocksdb instance (before v0.11.2 graphs with different CF-prefix share one rocksdb instance and data path), so each graph has its independent data paths, but multi CFs may share same optimized disk(or optimized disk path).", "author": "javeme", "createdAt": "2020-11-17T13:04:05Z", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java", "diffHunk": "@@ -265,7 +260,7 @@ protected RocksDBSessions open(HugeConfig config, String dataPath,\n             sessions = this.openSessionPool(config, dataPath,\n                                             walPath, tableNames);\n         } catch (RocksDBException e) {\n-            RocksDBSessions origin = dbs.get(dataPath);\n+            RocksDBSessions origin = this.dbs.get(dataPath);\n             if (origin != null) {\n                 if (e.getMessage().contains(\"No locks available\")) {\n                     // Open twice, but we should support keyspace", "originalCommit": "e9de3775d2949c875936f3086f666480c4f4105e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a6aac8f938697fee484bdf4cb3ee3dd5ba8b8fe1", "chunk": "diff --git a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\nindex 43dc0517..dac4dd50 100644\n--- a/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n+++ b/hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStore.java\n\n@@ -263,7 +263,14 @@ public abstract class RocksDBStore extends AbstractBackendStore<Session> {\n             RocksDBSessions origin = this.dbs.get(dataPath);\n             if (origin != null) {\n                 if (e.getMessage().contains(\"No locks available\")) {\n-                    // Open twice, but we should support keyspace\n+                    /*\n+                     * Open twice, copy a RocksDBSessions reference, since from\n+                     * v0.11.2 release we don't support multi graphs share\n+                     * rocksdb instance (before v0.11.2 graphs with different\n+                     * CF-prefix share one rocksdb instance and data path),\n+                     * so each graph has its independent data paths, but multi\n+                     * CFs may share same optimized disk(or optimized disk path).\n+                     */\n                     sessions = origin.copy(config, this.database, this.store);\n                 }\n             }\n"}}, {"oid": "a6aac8f938697fee484bdf4cb3ee3dd5ba8b8fe1", "url": "https://github.com/hugegraph/hugegraph/commit/a6aac8f938697fee484bdf4cb3ee3dd5ba8b8fe1", "message": "Adapt MultiGraphTests\n\nChange-Id: I5faf30bc530a6ad21fee81fef22614d4e46123a9", "committedDate": "2020-11-18T06:48:34Z", "type": "commit"}]}