{"pr_number": 1158, "pr_title": "Add rate_limit.read to limit query rate", "pr_createdAt": "2020-08-30T07:23:38Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/1158", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTczNDI3OQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1158#discussion_r479734279", "bodyText": "execute query of vertices/edges.", "author": "javeme", "createdAt": "2020-08-30T07:31:08Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -182,14 +182,22 @@ public static synchronized CoreOptions instance() {\n                     8\n             );\n \n-    public static final ConfigOption<Integer> RATE_LIMIT =\n+    public static final ConfigOption<Integer> RATE_LIMIT_WRITE =\n             new ConfigOption<>(\n-                    \"rate_limit\",\n+                    \"rate_limit.write\",\n                     \"The max rate(items/s) to add/update/delete vertices/edges.\",\n                     rangeInt(0, Integer.MAX_VALUE),\n                     0\n             );\n \n+    public static final ConfigOption<Integer> RATE_LIMIT_READ =\n+            new ConfigOption<>(\n+                    \"rate_limit.read\",\n+                    \"The max rate(times/s) to execute query.\",", "originalCommit": "1f8a36fb02d4969393117efb13f7ab141c8138bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d281a79545a3ceafa2d08171fd2eac44d562232b", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\nindex 7ba8b39c..faa64275 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java\n\n@@ -193,7 +193,7 @@ public class CoreOptions extends OptionHolder {\n     public static final ConfigOption<Integer> RATE_LIMIT_READ =\n             new ConfigOption<>(\n                     \"rate_limit.read\",\n-                    \"The max rate(times/s) to execute query.\",\n+                    \"The max rate(times/s) to execute query of vertices/edges.\",\n                     rangeInt(0, Integer.MAX_VALUE),\n                     0\n             );\n"}}, {"oid": "d281a79545a3ceafa2d08171fd2eac44d562232b", "url": "https://github.com/hugegraph/hugegraph/commit/d281a79545a3ceafa2d08171fd2eac44d562232b", "message": "Add read rate limiter to limit query rate on vertices/edges\n\nChange-Id: I6d620270937e425b417cbaaedd1d67dfb058791f", "committedDate": "2020-08-30T10:15:27Z", "type": "commit"}, {"oid": "d281a79545a3ceafa2d08171fd2eac44d562232b", "url": "https://github.com/hugegraph/hugegraph/commit/d281a79545a3ceafa2d08171fd2eac44d562232b", "message": "Add read rate limiter to limit query rate on vertices/edges\n\nChange-Id: I6d620270937e425b417cbaaedd1d67dfb058791f", "committedDate": "2020-08-30T10:15:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwMjIzMA==", "url": "https://github.com/hugegraph/hugegraph/pull/1158#discussion_r480102230", "bodyText": "what is the behavior if it is interrupted", "author": "javeme", "createdAt": "2020-08-31T12:39:48Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "diffHunk": "@@ -150,6 +150,15 @@ public Number queryNumber(Query query) {\n \n         Query squery = this.serializer.writeQuery(query);\n \n+        // Do rate limit if needed\n+        RateLimiter rateLimiter = this.graph.readRateLimiter();\n+        if (rateLimiter != null && query.resultType().isGraph()) {\n+            double time = rateLimiter.acquire(1);", "originalCommit": "d281a79545a3ceafa2d08171fd2eac44d562232b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9516a40f695653c7a242fff49acce55790ff96a0", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\nindex c4973c22..710b3d3b 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java\n\n@@ -157,6 +158,7 @@ public abstract class AbstractTransaction implements Transaction {\n             if (time > 0) {\n                 LOG.debug(\"Waited for {}s to query\", time);\n             }\n+            BackendEntryIterator.checkInterrupted();\n         }\n \n         this.beforeRead();\n"}}, {"oid": "9516a40f695653c7a242fff49acce55790ff96a0", "url": "https://github.com/hugegraph/hugegraph/commit/9516a40f695653c7a242fff49acce55790ff96a0", "message": "add checkInterrupted() after rate limit\n\nChange-Id: I035515137dba4c9314bbf66fb7e4c13f79ab448b", "committedDate": "2020-08-31T14:00:04Z", "type": "commit"}]}