{"pr_number": 1175, "pr_title": "add lpa/trianglecount/louvain computer api", "pr_createdAt": "2020-09-15T03:38:06Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/1175", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyNjcwMQ==", "url": "https://github.com/hugegraph/hugegraph/pull/1175#discussion_r489226701", "bodyText": "align with checkAndCollectParameters", "author": "javeme", "createdAt": "2020-09-16T07:37:10Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/TriangleCountComputer.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.job.computer;\n+\n+import java.util.Map;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+public class TriangleCountComputer extends AbstractComputer {\n+\n+    public static final String TRIANGLE_COUNT = \"triangle_count\";\n+\n+    @Override\n+    public String name() {\n+        return TRIANGLE_COUNT;\n+    }\n+\n+    @Override\n+    public String category() {\n+        return CATEGORY_COMM;\n+    }\n+\n+    @Override\n+    public void checkParameters(Map<String, Object> parameters) {\n+        direction(parameters);\n+        degree(parameters);\n+    }\n+\n+    @Override\n+    protected Map<String, Object> checkAndCollectParameters(\n+            Map<String, Object> parameters) {", "originalCommit": "97b3ef13fce7dc22d366cc0726f9f55dcf60d5a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d5366c78168ba9438740757ae4fd8abbeef2352a", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/TriangleCountComputer.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/TriangleCountComputer.java\nindex b7220cb3..d4a882b2 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/TriangleCountComputer.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/TriangleCountComputer.java\n\n@@ -45,7 +45,7 @@ public class TriangleCountComputer extends AbstractComputer {\n \n     @Override\n     protected Map<String, Object> checkAndCollectParameters(\n-            Map<String, Object> parameters) {\n+                                  Map<String, Object> parameters) {\n         return ImmutableMap.of(DIRECTION, direction(parameters),\n                                DEGREE, degree(parameters));\n     }\n"}}, {"oid": "e9856e6a95af8855981e59f61036538566b7621a", "url": "https://github.com/hugegraph/hugegraph/commit/e9856e6a95af8855981e59f61036538566b7621a", "message": "add lpa/trianglecount/louvain computer api (#53)\n\nChange-Id: Icd203abfbd4dfdb2b9a5754d7f2cdd037ddc4503", "committedDate": "2020-09-22T09:34:34Z", "type": "commit"}, {"oid": "d5366c78168ba9438740757ae4fd8abbeef2352a", "url": "https://github.com/hugegraph/hugegraph/commit/d5366c78168ba9438740757ae4fd8abbeef2352a", "message": "improve\n\nChange-Id: Id69fbc03acac824f75615a6797eff90cf1f34bb9", "committedDate": "2020-09-22T09:35:48Z", "type": "commit"}, {"oid": "d5366c78168ba9438740757ae4fd8abbeef2352a", "url": "https://github.com/hugegraph/hugegraph/commit/d5366c78168ba9438740757ae4fd8abbeef2352a", "message": "improve\n\nChange-Id: Id69fbc03acac824f75615a6797eff90cf1f34bb9", "committedDate": "2020-09-22T09:35:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NzQwMA==", "url": "https://github.com/hugegraph/hugegraph/pull/1175#discussion_r515957400", "bodyText": "align", "author": "javeme", "createdAt": "2020-11-02T13:05:31Z", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/LouvainComputer.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.job.computer;\n+\n+import java.util.Map;\n+\n+import com.baidu.hugegraph.traversal.algorithm.HugeTraverser;\n+import com.baidu.hugegraph.util.E;\n+import com.baidu.hugegraph.util.ParameterUtil;\n+import com.google.common.collect.ImmutableMap;\n+\n+public class LouvainComputer extends AbstractComputer {\n+\n+    public static final String LOUVAIN = \"louvain\";\n+\n+    public static final String KEY_STABLE_TIMES = \"stable_times\";\n+    public static final String KEY_PRECISION = \"precision\";\n+    public static final String KEY_SHOW_MOD= \"show_modularity\";\n+    public static final String KEY_SHOW_COMM = \"show_community\";\n+    public static final String KEY_EXPORT_COMM = \"export_community\";\n+    public static final String KEY_SKIP_ISOLATED = \"skip_isolated\";\n+    public static final String KEY_CLEAR = \"clear\";\n+\n+    public static final long DEFAULT_STABLE_TIMES= 3L;\n+    private static final int MAX_TIMES = 2048;\n+\n+    @Override\n+    public String name() {\n+        return LOUVAIN;\n+    }\n+\n+    @Override\n+    public String category() {\n+        return CATEGORY_COMM;\n+    }\n+\n+    @Override\n+    public void checkParameters(Map<String, Object> parameters) {\n+        times(parameters);\n+        stableTimes(parameters);\n+        precision(parameters);\n+        degree(parameters);\n+        showModularity(parameters);\n+        showCommunity(parameters);\n+        exportCommunity(parameters);\n+        skipIsolated(parameters);\n+        clearPass(parameters);\n+    }\n+\n+    @Override\n+    protected Map<String, Object> checkAndCollectParameters(\n+                                  Map<String, Object> parameters) {\n+        return ImmutableMap.of(TIMES, times(parameters),\n+                               PRECISION, precision(parameters),\n+                               DIRECTION, direction(parameters),\n+                               DEGREE, degree(parameters));\n+    }\n+\n+    protected static int stableTimes(Map<String, Object> parameters) {\n+        if (!parameters.containsKey(KEY_STABLE_TIMES)) {\n+            return (int) DEFAULT_STABLE_TIMES;\n+        }\n+        int times = ParameterUtil.parameterInt(parameters, KEY_STABLE_TIMES);\n+        HugeTraverser.checkPositiveOrNoLimit(times, KEY_STABLE_TIMES);\n+        E.checkArgument(times <= MAX_TIMES,\n+                        \"The maximum number of stable iterations is %s, \" +\n+                                \"but got %s\", MAX_TIMES, times);", "originalCommit": "d5366c78168ba9438740757ae4fd8abbeef2352a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fd0ecbf484f780cf03e6ec7902a2cbb58038345", "chunk": "diff --git a/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/LouvainComputer.java b/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/LouvainComputer.java\nindex eaa89027..7770a84f 100644\n--- a/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/LouvainComputer.java\n+++ b/hugegraph-core/src/main/java/com/baidu/hugegraph/job/computer/LouvainComputer.java\n\n@@ -81,7 +81,7 @@ public class LouvainComputer extends AbstractComputer {\n         HugeTraverser.checkPositiveOrNoLimit(times, KEY_STABLE_TIMES);\n         E.checkArgument(times <= MAX_TIMES,\n                         \"The maximum number of stable iterations is %s, \" +\n-                                \"but got %s\", MAX_TIMES, times);\n+                        \"but got %s\", MAX_TIMES, times);\n         return times;\n     }\n \n"}}, {"oid": "0fd0ecbf484f780cf03e6ec7902a2cbb58038345", "url": "https://github.com/hugegraph/hugegraph/commit/0fd0ecbf484f780cf03e6ec7902a2cbb58038345", "message": "improve\n\nChange-Id: I1cb8f9fe8ee430f1c6bd65ad122a90bb4b6c47a4", "committedDate": "2020-11-02T13:16:54Z", "type": "commit"}]}