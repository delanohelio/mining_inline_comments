{"pr_number": 819, "pr_title": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge", "pr_createdAt": "2020-01-08T08:38:47Z", "pr_url": "https://github.com/hugegraph/hugegraph/pull/819", "timeline": [{"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "url": "https://github.com/hugegraph/hugegraph/commit/719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "message": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge\n\nFix #818\n\nChange-Id: Ic929a4267fc411c156a32e5b381d314f382ebc9a", "committedDate": "2020-01-08T08:37:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjU2Ng==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364122566", "bodyText": "compare the two ids", "author": "javeme", "createdAt": "2020-01-08T08:59:09Z", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,13 +402,28 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n+        Id labelId = g.edgeLabel(newEdge.label).id();\n+        List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n+\n         if (newEdge.id != null) {\n+            // check the sortKeys are not updated\n+            HugeEdge edge = (HugeEdge) g.edges(newEdge.id).next();\n+            sortKeyIds.forEach(skId -> {\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n+                Object sortKeyValue = newEdge.properties.get(sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n+                Object oldSortKeyValue = edge.value(sortKey);\n+                E.checkArgument(sortKeyValue == null ||\n+                                sortKeyValue.equals(oldSortKeyValue),\n+                                \"The value of sort key '%s' either be null \" +\n+                                \"or equal with origin '%s', but got '%s'\",\n+                                sortKey, oldSortKeyValue, sortKeyValue);", "originalCommit": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "chunk": "diff --git a/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java b/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\nindex 5807de45..fe2e57c8 100644\n--- a/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\n+++ b/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\n\n@@ -402,43 +402,32 @@ public class EdgeAPI extends BatchAPI {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n+        String sortKeys = \"\";\n         Id labelId = g.edgeLabel(newEdge.label).id();\n         List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n-\n-        if (newEdge.id != null) {\n-            // check the sortKeys are not updated\n-            HugeEdge edge = (HugeEdge) g.edges(newEdge.id).next();\n-            sortKeyIds.forEach(skId -> {\n-                PropertyKey pk = g.propertyKey(skId);\n-                String sortKey = pk.name();\n-                Object sortKeyValue = newEdge.properties.get(sortKey);\n-                sortKeyValue = pk.convValue(sortKeyValue, true);\n-                Object oldSortKeyValue = edge.value(sortKey);\n-                E.checkArgument(sortKeyValue == null ||\n-                                sortKeyValue.equals(oldSortKeyValue),\n-                                \"The value of sort key '%s' either be null \" +\n-                                \"or equal with origin '%s', but got '%s'\",\n-                                sortKey, oldSortKeyValue, sortKeyValue);\n-            });\n-            return EdgeId.parse(newEdge.id.toString());\n-        }\n-\n-        String sortKeys = \"\";\n         if (!sortKeyIds.isEmpty()) {\n             List<Object> sortKeyValues = new ArrayList<>(sortKeyIds.size());\n             sortKeyIds.forEach(skId -> {\n-                String sortKey = g.propertyKey(skId).name();\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n                 Object sortKeyValue = newEdge.properties.get(sortKey);\n                 E.checkArgument(sortKeyValue != null,\n                                 \"The value of sort key '%s' can't be null\",\n                                 sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n                 sortKeyValues.add(sortKeyValue);\n             });\n             sortKeys = ConditionQuery.concatValues(sortKeyValues);\n         }\n-        return new EdgeId(HugeVertex.getIdValue(newEdge.source),\n-                          Directions.OUT, labelId, sortKeys,\n-                          HugeVertex.getIdValue(newEdge.target));\n+        EdgeId edgeId = new EdgeId(HugeVertex.getIdValue(newEdge.source),\n+                                   Directions.OUT, labelId, sortKeys,\n+                                   HugeVertex.getIdValue(newEdge.target));\n+        if (newEdge.id != null) {\n+            E.checkArgument(edgeId.equals(newEdge.id),\n+                            \"The sort key values either be null \" +\n+                            \"or equal with origin\");\n+        }\n+        return edgeId;\n     }\n \n     protected static class BatchEdgeRequest {\n"}}, {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "url": "https://github.com/hugegraph/hugegraph/commit/719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "message": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge\n\nFix #818\n\nChange-Id: Ic929a4267fc411c156a32e5b381d314f382ebc9a", "committedDate": "2020-01-08T08:37:21Z", "type": "forcePushed"}, {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "url": "https://github.com/hugegraph/hugegraph/commit/388bdee9ee5c8185d426855ed4bccf79bd266b23", "message": "simplify code\n\nChange-Id: I0a100d72dd7572cec9cd30b36674eb1f271ddc98", "committedDate": "2020-01-09T02:45:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTkzNQ==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549935", "bodyText": "equal to", "author": "zhoney", "createdAt": "2020-01-09T03:55:43Z", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,30 +402,31 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n-        if (newEdge.id != null) {\n-            return EdgeId.parse(newEdge.id.toString());\n-        }\n-\n         String sortKeys = \"\";\n         Id labelId = g.edgeLabel(newEdge.label).id();\n         List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n         if (!sortKeyIds.isEmpty()) {\n             List<Object> sortKeyValues = new ArrayList<>(sortKeyIds.size());\n             sortKeyIds.forEach(skId -> {\n-                String sortKey = g.propertyKey(skId).name();\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n                 Object sortKeyValue = newEdge.properties.get(sortKey);\n                 E.checkArgument(sortKeyValue != null,\n                                 \"The value of sort key '%s' can't be null\",\n                                 sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n                 sortKeyValues.add(sortKeyValue);\n             });\n             sortKeys = ConditionQuery.concatValues(sortKeyValues);\n         }\n-\n-        // TODO: How to get Direction from JsonEdge easily? or any better way?\n         EdgeId edgeId = new EdgeId(HugeVertex.getIdValue(newEdge.source),\n                                    Directions.OUT, labelId, sortKeys,\n                                    HugeVertex.getIdValue(newEdge.target));\n+        if (newEdge.id != null) {\n+            E.checkArgument(edgeId.equals(newEdge.id),\n+                            \"The sort key values either be null \" +\n+                            \"or equal with origin\");", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java b/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\nindex fe2e57c8..947747aa 100644\n--- a/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\n+++ b/hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java\n\n@@ -425,7 +425,7 @@ public class EdgeAPI extends BatchAPI {\n         if (newEdge.id != null) {\n             E.checkArgument(edgeId.equals(newEdge.id),\n                             \"The sort key values either be null \" +\n-                            \"or equal with origin\");\n+                            \"or equal to origin when specified edge id\");\n         }\n         return edgeId;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTk3OA==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549978", "bodyText": "Create", "author": "zhoney", "createdAt": "2020-01-09T03:55:56Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\nindex 4f91674b..6ae95ad8 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n\n@@ -64,7 +64,7 @@ public class EdgeApiTest extends BaseApiTest {\n     public void testBatchUpdate() throws IOException {\n         String outVId = getVertexId(\"person\", \"name\", \"marko\");\n         String inVId = getVertexId(\"person\", \"name\", \"josh\");\n-        // create\n+        // Create\n         String edge = String.format(\"{\"\n                 + \"\\\"label\\\": \\\"knows\\\",\"\n                 + \"\\\"outVLabel\\\": \\\"person\\\",\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDAwMw==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550003", "bodyText": "ditto", "author": "zhoney", "createdAt": "2020-01-09T03:56:04Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\nindex 4f91674b..6ae95ad8 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n\n@@ -64,7 +64,7 @@ public class EdgeApiTest extends BaseApiTest {\n     public void testBatchUpdate() throws IOException {\n         String outVId = getVertexId(\"person\", \"name\", \"marko\");\n         String inVId = getVertexId(\"person\", \"name\", \"josh\");\n-        // create\n+        // Create\n         String edge = String.format(\"{\"\n                 + \"\\\"label\\\": \\\"knows\\\",\"\n                 + \"\\\"outVLabel\\\": \\\"person\\\",\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDEwNA==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550104", "bodyText": "the property \u201cdate\u201d has changed", "author": "zhoney", "createdAt": "2020-01-09T03:56:32Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\nindex 4f91674b..6ae95ad8 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n\n@@ -64,7 +64,7 @@ public class EdgeApiTest extends BaseApiTest {\n     public void testBatchUpdate() throws IOException {\n         String outVId = getVertexId(\"person\", \"name\", \"marko\");\n         String inVId = getVertexId(\"person\", \"name\", \"josh\");\n-        // create\n+        // Create\n         String edge = String.format(\"{\"\n                 + \"\\\"label\\\": \\\"knows\\\",\"\n                 + \"\\\"outVLabel\\\": \\\"person\\\",\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDIyMg==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550222", "bodyText": "query to assert two different edges", "author": "zhoney", "createdAt": "2020-01-09T03:57:15Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Add a new edge when sortkey value has changed\n+        assertResponseStatus(200, r);", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\nindex 4f91674b..6ae95ad8 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n\n@@ -64,7 +64,7 @@ public class EdgeApiTest extends BaseApiTest {\n     public void testBatchUpdate() throws IOException {\n         String outVId = getVertexId(\"person\", \"name\", \"marko\");\n         String inVId = getVertexId(\"person\", \"name\", \"josh\");\n-        // create\n+        // Create\n         String edge = String.format(\"{\"\n                 + \"\\\"label\\\": \\\"knows\\\",\"\n                 + \"\\\"outVLabel\\\": \\\"person\\\",\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDMxNw==", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550317", "bodyText": "Update", "author": "zhoney", "createdAt": "2020-01-09T03:57:44Z", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId", "originalCommit": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "chunk": "diff --git a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\nindex 4f91674b..6ae95ad8 100644\n--- a/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n+++ b/hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java\n\n@@ -64,7 +64,7 @@ public class EdgeApiTest extends BaseApiTest {\n     public void testBatchUpdate() throws IOException {\n         String outVId = getVertexId(\"person\", \"name\", \"marko\");\n         String inVId = getVertexId(\"person\", \"name\", \"josh\");\n-        // create\n+        // Create\n         String edge = String.format(\"{\"\n                 + \"\\\"label\\\": \\\"knows\\\",\"\n                 + \"\\\"outVLabel\\\": \\\"person\\\",\"\n"}}, {"oid": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "url": "https://github.com/hugegraph/hugegraph/commit/cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0", "committedDate": "2020-02-03T12:15:33Z", "type": "forcePushed"}, {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "url": "https://github.com/hugegraph/hugegraph/commit/708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0", "committedDate": "2020-02-03T15:05:24Z", "type": "commit"}, {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "url": "https://github.com/hugegraph/hugegraph/commit/708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0", "committedDate": "2020-02-03T15:05:24Z", "type": "forcePushed"}]}