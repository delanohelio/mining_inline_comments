{"pr_number": 2441, "pr_title": "fix #2436 Polish some 3.2 JUnit5 tests and compiler options", "pr_createdAt": "2020-10-15T09:44:44Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2441", "timeline": [{"oid": "b4054f3ff88d21cb616972037ed6925c717872a0", "url": "https://github.com/reactor/reactor-core/commit/b4054f3ff88d21cb616972037ed6925c717872a0", "message": "fix #2436 Polish some 3.2 JUnit5 tests and compiler options\n\nThis commit is a follow-up to #2344 / #2395, polishing things on 3.2.x.", "committedDate": "2020-10-15T09:29:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODU3Nw==", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505408577", "bodyText": "Not needed since each test gets a new instance", "author": "ericbottard", "createdAt": "2020-10-15T09:46:52Z", "path": "reactor-core/src/test/java/reactor/core/ExceptionsTest.java", "diffHunk": "@@ -38,6 +39,16 @@\n  */\n public class ExceptionsTest {\n \n+\t//used for two addThrowableXxx tests lower in the class\n+\tvolatile @Nullable Throwable addThrowable;\n+\tstatic final AtomicReferenceFieldUpdater<ExceptionsTest, Throwable> ADD_THROWABLE =\n+\t\t\tAtomicReferenceFieldUpdater.newUpdater(ExceptionsTest.class, Throwable.class, \"addThrowable\");\n+\n+\t@BeforeEach\n+\tpublic void resetAddThrowable() {\n+\t\taddThrowable = null;", "originalCommit": "b4054f3ff88d21cb616972037ed6925c717872a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "719553ab8f62a938d986bef2880bb7be2b138ab0", "chunk": "diff --git a/reactor-core/src/test/java/reactor/core/ExceptionsTest.java b/reactor-core/src/test/java/reactor/core/ExceptionsTest.java\nindex 2d1935f1e..e8198eaa7 100644\n--- a/reactor-core/src/test/java/reactor/core/ExceptionsTest.java\n+++ b/reactor-core/src/test/java/reactor/core/ExceptionsTest.java\n\n@@ -39,19 +39,14 @@ import static reactor.core.Exceptions.*;\n  */\n public class ExceptionsTest {\n \n-\t//used for two addThrowableXxx tests lower in the class\n+\t//used for two addThrowableXxx tests lower in the class. each test receiving a separate instance of ExceptionsTests,\n+\t//there is no need to reset it.\n \tvolatile @Nullable Throwable addThrowable;\n \tstatic final AtomicReferenceFieldUpdater<ExceptionsTest, Throwable> ADD_THROWABLE =\n \t\t\tAtomicReferenceFieldUpdater.newUpdater(ExceptionsTest.class, Throwable.class, \"addThrowable\");\n \n-\t@BeforeEach\n-\tpublic void resetAddThrowable() {\n-\t\taddThrowable = null;\n-\t}\n-\n \t@Test\n \tpublic void bubble() throws Exception {\n-\n \t\tThrowable t = new Exception(\"test\");\n \n \t\tThrowable w = Exceptions.bubble(Exceptions.propagate(t));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTEwNg==", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505409106", "bodyText": "Not needed as each test gets a new instance of FluxReplayTest", "author": "ericbottard", "createdAt": "2020-10-15T09:47:31Z", "path": "reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java", "diffHunk": "@@ -41,6 +41,22 @@\n \n public class FluxReplayTest extends FluxOperatorTest<String, String> {\n \n+\tVirtualTimeScheduler vts;\n+\n+\t@BeforeEach\n+\tpublic void vtsStart() {\n+\t\t//delayElements (notably) now uses parallel() so VTS must be enabled everywhere\n+\t\tvts = VirtualTimeScheduler.getOrSet();\n+\t}\n+\n+\t@AfterEach\n+\tpublic void vtsStop() {\n+\t\tvts = null;", "originalCommit": "b4054f3ff88d21cb616972037ed6925c717872a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "719553ab8f62a938d986bef2880bb7be2b138ab0", "chunk": "diff --git a/reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java b/reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java\nindex 0bb00ca3e..4afcf1823 100644\n--- a/reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java\n+++ b/reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java\n\n@@ -51,7 +51,6 @@ public class FluxReplayTest extends FluxOperatorTest<String, String> {\n \n \t@AfterEach\n \tpublic void vtsStop() {\n-\t\tvts = null;\n \t\tVirtualTimeScheduler.reset();\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMDA5OA==", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505410098", "bodyText": "I assume N was unused?", "author": "ericbottard", "createdAt": "2020-10-15T09:48:48Z", "path": "reactor-core/src/test/java/reactor/core/scheduler/SchedulersTest.java", "diffHunk": "@@ -623,10 +624,6 @@ public void assertRejectingScheduler(Scheduler scheduler) {\n \t\t}\n \t}\n \n-\t//private final int             BUFFER_SIZE     = 8;\n-\tprivate final AtomicReference<Throwable> exceptionThrown = new AtomicReference<>();\n-\tprivate final int                        N               = 17;", "originalCommit": "b4054f3ff88d21cb616972037ed6925c717872a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTczNg==", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505415736", "bodyText": "yes, it was indeed", "author": "simonbasle", "createdAt": "2020-10-15T09:56:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMDA5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "719553ab8f62a938d986bef2880bb7be2b138ab0", "url": "https://github.com/reactor/reactor-core/commit/719553ab8f62a938d986bef2880bb7be2b138ab0", "message": "fix review comments", "committedDate": "2020-10-15T10:15:40Z", "type": "commit"}]}