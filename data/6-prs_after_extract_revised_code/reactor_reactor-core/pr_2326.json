{"pr_number": 2326, "pr_title": "fix #2325 Add method to snapshot factory+global schedulers, used by VTS", "pr_createdAt": "2020-08-13T14:11:42Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2326", "timeline": [{"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "url": "https://github.com/reactor/reactor-core/commit/0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "message": "fix #2325 Add method to snapshot factory+global schedulers, used by VTS", "committedDate": "2020-08-13T14:10:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU5NzM1Nw==", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470597357", "bodyText": "This should be the second sentence. The current javadoc doesn't mention that this allows setting the factory in the first place.", "author": "ericbottard", "createdAt": "2020-08-14T12:36:47Z", "path": "reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java", "diffHunk": "@@ -677,16 +678,62 @@ public static void disableMetrics() {\n \t/**\n \t * Re-apply default factory to {@link Schedulers}\n \t */\n-\tpublic static void resetFactory(){\n+\tpublic static void resetFactory() {\n \t\tsetFactory(DEFAULT);\n \t}\n \n+\t/**\n+\t * Set the current {@link Schedulers} aside in a capturing {@link Snapshot} that", "originalCommit": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71008cd714df113ee778bf63650d4c7b492f2714", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java b/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\nindex 244393a2a..a1f7ba5a6 100644\n--- a/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\n+++ b/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\n\n@@ -702,7 +702,9 @@ public abstract class Schedulers {\n \t}\n \n \t/**\n-\t * @param snapshot\n+\t * Reset the Factory and Schedulers with the ones saved in a \n+\t * previously {@link #setFactoryWithSnapshot(Factory) captured} snapshot.\n+\t * <p>Passing {@code null} re-applies the default factory.\n \t */\n \tpublic static void resetFrom(@Nullable Snapshot snapshot) {\n \t\tif (snapshot == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjA4OA==", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602088", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param snapshot\n          \n          \n            \n            \t * Reset the Factory and Schedulers with the ones saved in a \n          \n          \n            \n            \t * previously {@link #setFactoryWithSnapshot(Factory) captured} snapshot.\n          \n          \n            \n            \t * <p>Passing {@code null} re-applies the default factory.", "author": "ericbottard", "createdAt": "2020-08-14T12:46:57Z", "path": "reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java", "diffHunk": "@@ -677,16 +678,62 @@ public static void disableMetrics() {\n \t/**\n \t * Re-apply default factory to {@link Schedulers}\n \t */\n-\tpublic static void resetFactory(){\n+\tpublic static void resetFactory() {\n \t\tsetFactory(DEFAULT);\n \t}\n \n+\t/**\n+\t * Set the current {@link Schedulers} aside in a capturing {@link Snapshot} that\n+\t * can be later restored via {@link #resetFrom(Snapshot)}.\n+\t *\n+\t * @return a {@link Snapshot} representing a restorable snapshot of {@link Schedulers}\n+\t */\n+\tpublic static Snapshot setFactoryWithSnapshot(Factory newFactory) {\n+\t\t//nulling out CACHED references ensures that the schedulers won't be disposed\n+\t\t//when setting the newFactory via setFactory\n+\t\tSnapshot snapshot = new Snapshot(\n+\t\t\t\tCACHED_ELASTIC.getAndSet(null),\n+\t\t\t\tCACHED_BOUNDED_ELASTIC.getAndSet(null),\n+\t\t\t\tCACHED_PARALLEL.getAndSet(null),\n+\t\t\t\tCACHED_SINGLE.getAndSet(null),\n+\t\t\t\tfactory);\n+\t\tsetFactory(newFactory);\n+\t\treturn snapshot;\n+\t}\n+\n+\t/**\n+\t * @param snapshot", "originalCommit": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71008cd714df113ee778bf63650d4c7b492f2714", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java b/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\nindex 244393a2a..a1f7ba5a6 100644\n--- a/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\n+++ b/reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java\n\n@@ -702,7 +702,9 @@ public abstract class Schedulers {\n \t}\n \n \t/**\n-\t * @param snapshot\n+\t * Reset the Factory and Schedulers with the ones saved in a \n+\t * previously {@link #setFactoryWithSnapshot(Factory) captured} snapshot.\n+\t * <p>Passing {@code null} re-applies the default factory.\n \t */\n \tpublic static void resetFrom(@Nullable Snapshot snapshot) {\n \t\tif (snapshot == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjUwNg==", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602506", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n          \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.", "author": "ericbottard", "createdAt": "2020-08-14T12:47:52Z", "path": "reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java", "diffHunk": "@@ -77,8 +77,12 @@ public static VirtualTimeScheduler create(boolean defer) {\n \t * Assign a newly created {@link VirtualTimeScheduler} to all {@link reactor.core.scheduler.Schedulers.Factory}\n \t * factories ONLY if no {@link VirtualTimeScheduler} is currently set. In case of scheduler creation,\n \t * there is no deferring of time operations (see {@link #create(boolean)}.\n-\t * While the method is thread safe, its usually advised to execute such\n-\t * wide-impact BEFORE all tested code runs (setup etc). The created scheduler is returned.\n+\t * Note that prior to replacing the factories, a {@link Schedulers#setFactoryWithSnapshot(Schedulers.Factory) snapshot}\n+\t * will be performed. Resetting the factory will restore said snapshot.\n+\t * <p>\n+\t * While this methods makes best effort to be thread safe, it is usually advised to\n+\t * perform such wide-impact setup serially and BEFORE all test code runs\n+\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.", "originalCommit": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71008cd714df113ee778bf63650d4c7b492f2714", "chunk": "diff --git a/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java b/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\nindex 71bb93aac..25cee9e61 100644\n--- a/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\n+++ b/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\n\n@@ -82,7 +82,7 @@ public class VirtualTimeScheduler implements Scheduler {\n \t * <p>\n \t * While this methods makes best effort to be thread safe, it is usually advised to\n \t * perform such wide-impact setup serially and BEFORE all test code runs\n-\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n+\t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.\n \t *\n \t * @return the VirtualTimeScheduler that was created and set through the factory\n \t */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjYyMA==", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602620", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n          \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.", "author": "ericbottard", "createdAt": "2020-08-14T12:48:07Z", "path": "reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java", "diffHunk": "@@ -90,8 +94,13 @@ public static VirtualTimeScheduler getOrSet() {\n \t * Assign a newly created {@link VirtualTimeScheduler} to all {@link reactor.core.scheduler.Schedulers.Factory}\n \t * factories ONLY if no {@link VirtualTimeScheduler} is currently set. In case of scheduler creation,\n \t * there is opt-in deferring of time related operations (see {@link #create(boolean)}.\n-\t * While the method is thread safe, its usually advised to execute such\n-\t * wide-impact BEFORE all tested code runs (setup etc). The created scheduler is returned.\n+\t * Note that prior to replacing the factories, a {@link Schedulers#setFactoryWithSnapshot(Schedulers.Factory) snapshot}\n+\t * will be performed. Resetting the factory will restore said snapshot.\n+\t * <p>\n+\t * While this methods makes best effort to be thread safe, it is usually advised to\n+\t * perform such wide-impact setup serially and BEFORE all test code runs\n+\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.", "originalCommit": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71008cd714df113ee778bf63650d4c7b492f2714", "chunk": "diff --git a/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java b/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\nindex 71bb93aac..25cee9e61 100644\n--- a/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\n+++ b/reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java\n\n@@ -99,7 +99,7 @@ public class VirtualTimeScheduler implements Scheduler {\n \t * <p>\n \t * While this methods makes best effort to be thread safe, it is usually advised to\n \t * perform such wide-impact setup serially and BEFORE all test code runs\n-\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n+\t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.\n \n \t *\n \t * @param defer true to defer all clock move operations until there are tasks in queue, if a scheduler is created\n"}}, {"oid": "71008cd714df113ee778bf63650d4c7b492f2714", "url": "https://github.com/reactor/reactor-core/commit/71008cd714df113ee778bf63650d4c7b492f2714", "message": "Apply suggestions from code review\n\nCo-authored-by: Eric Bottard <313494+ericbottard@users.noreply.github.com>", "committedDate": "2020-08-14T15:28:09Z", "type": "commit"}, {"oid": "2563adff85e8a0ae57f7f5af098eb6e246db1db2", "url": "https://github.com/reactor/reactor-core/commit/2563adff85e8a0ae57f7f5af098eb6e246db1db2", "message": "Improve javadoc of setFactoryWithSnapshot and resetFrom", "committedDate": "2020-08-14T15:51:54Z", "type": "commit"}]}