{"pr_number": 2462, "pr_title": "fix #2459 Add a composite of all source as cause to firstWithValue error", "pr_createdAt": "2020-10-28T14:27:12Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2462", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5Nzc2NA==", "url": "https://github.com/reactor/reactor-core/pull/2462#discussion_r513497764", "bodyText": "Not related to this issue per se but can use the opportunity to change assertThat(e.getMessage()) to assertThat().hasMessage() and variants.\nOtherwise LGTM", "author": "ericbottard", "createdAt": "2020-10-28T14:39:16Z", "path": "reactor-core/src/test/java/reactor/core/publisher/FluxFirstWithValueTest.java", "diffHunk": "@@ -67,7 +67,7 @@ void onlyErrorOrCompleteEmptyEmitsError() {\n \t\t\t\t.expectErrorSatisfies(e -> {\n \t\t\t\t\tassertThat(e).isInstanceOf(NoSuchElementException.class);\n \t\t\t\t\tassertThat(e.getMessage()).isEqualTo(\"All sources completed with error or without values\");", "originalCommit": "bb55ffcd3718ccc096febbb53e898c41d39d478e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzMjY0Nw==", "url": "https://github.com/reactor/reactor-core/pull/2462#discussion_r513532647", "bodyText": "indeed, that's the occasion to do it", "author": "aneveu", "createdAt": "2020-10-28T15:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5Nzc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "e9348bd71970d1be4bbcc37ce4f98899a2a78eba", "chunk": "diff --git a/reactor-core/src/test/java/reactor/core/publisher/FluxFirstWithValueTest.java b/reactor-core/src/test/java/reactor/core/publisher/FluxFirstWithValueTest.java\nindex ccd1aeb6a..4801c4680 100644\n--- a/reactor-core/src/test/java/reactor/core/publisher/FluxFirstWithValueTest.java\n+++ b/reactor-core/src/test/java/reactor/core/publisher/FluxFirstWithValueTest.java\n\n@@ -66,12 +66,10 @@ class FluxFirstWithValueTest {\n \t\t))\n \t\t\t\t.expectErrorSatisfies(e -> {\n \t\t\t\t\tassertThat(e).isInstanceOf(NoSuchElementException.class);\n-\t\t\t\t\tassertThat(e.getMessage()).isEqualTo(\"All sources completed with error or without values\");\n+\t\t\t\t\tassertThat(e).hasMessage(\"All sources completed with error or without values\");\n \t\t\t\t\tThrowable throwable = e.getCause();\n-\t\t\t\t\tassertThat(throwable.getSuppressed()[0].getMessage()).isEqualTo(\"Boom!\");\n-\t\t\t\t\tassertThat(throwable.getSuppressed()[1].getMessage())\n-\t\t\t\t\t\t\t.isEqualTo(\"source at index 1 completed empty\");\n-\n+\t\t\t\t\tassertThat(throwable.getSuppressed()[0]).hasMessage(\"Boom!\");\n+\t\t\t\t\tassertThat(throwable.getSuppressed()[1]).hasMessage(\"source at index 1 completed empty\");\n \t\t\t\t})\n \t\t\t\t.verify();\n \t}\n"}}, {"oid": "e9348bd71970d1be4bbcc37ce4f98899a2a78eba", "url": "https://github.com/reactor/reactor-core/commit/e9348bd71970d1be4bbcc37ce4f98899a2a78eba", "message": "improve assertions", "committedDate": "2020-10-28T16:32:43Z", "type": "forcePushed"}, {"oid": "9c72aed783fa3add1bf0b931af3ccc6f23cfcf10", "url": "https://github.com/reactor/reactor-core/commit/9c72aed783fa3add1bf0b931af3ccc6f23cfcf10", "message": "fix #2459 FirstWithValue error by adding the multipleException as a cause", "committedDate": "2020-10-28T16:47:50Z", "type": "commit"}, {"oid": "a19ea49ade847a3f0c3536b958ef5c4635e1373c", "url": "https://github.com/reactor/reactor-core/commit/a19ea49ade847a3f0c3536b958ef5c4635e1373c", "message": "improve assertions", "committedDate": "2020-10-28T16:48:07Z", "type": "commit"}, {"oid": "24b8ca9e5eb91ce1d0ba5689f57c0102996f7772", "url": "https://github.com/reactor/reactor-core/commit/24b8ca9e5eb91ce1d0ba5689f57c0102996f7772", "message": "Fix assertions in MonoFirstWithValueTest", "committedDate": "2020-10-28T16:51:52Z", "type": "commit"}, {"oid": "24b8ca9e5eb91ce1d0ba5689f57c0102996f7772", "url": "https://github.com/reactor/reactor-core/commit/24b8ca9e5eb91ce1d0ba5689f57c0102996f7772", "message": "Fix assertions in MonoFirstWithValueTest", "committedDate": "2020-10-28T16:51:52Z", "type": "forcePushed"}]}