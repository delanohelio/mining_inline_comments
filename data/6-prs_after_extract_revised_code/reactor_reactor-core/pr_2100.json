{"pr_number": 2100, "pr_title": "fix #2077 Support doOnDiscard in SerializedSubscriber", "pr_createdAt": "2020-04-03T16:00:22Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2100", "timeline": [{"oid": "03798cc792061ebc1e80ffb402049e4108f7fab6", "url": "https://github.com/reactor/reactor-core/commit/03798cc792061ebc1e80ffb402049e4108f7fab6", "message": "fix #2077 Support doOnDiscard in SerializedSubscriber", "committedDate": "2020-04-03T15:58:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExMTkxMQ==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403111911", "bodyText": "nit: wrong indentation", "author": "bsideup", "createdAt": "2020-04-03T16:08:17Z", "path": "reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java", "diffHunk": "@@ -232,6 +259,25 @@ else if (d) {\n \t\t}\n \t}\n \n+\tprivate void discardMultiple(LinkedArrayNode<T> head) {\n+\t\tsynchronized (actual) {\n+\t\tLinkedArrayNode<T> originalHead = head;", "originalCommit": "03798cc792061ebc1e80ffb402049e4108f7fab6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExODk1OA==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403118958", "bodyText": "ah snap that is actually a leftover that wasn't supposed to be here (the synchronized is redundant)", "author": "simonbasle", "createdAt": "2020-04-03T16:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExMTkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\nindex d375623c5..b37d65e3a 100644\n--- a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n+++ b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n\n@@ -260,7 +260,6 @@ final class SerializedSubscriber<T> implements InnerOperator<T, T> {\n \t}\n \n \tprivate void discardMultiple(LinkedArrayNode<T> head) {\n-\t\tsynchronized (actual) {\n \t\tLinkedArrayNode<T> originalHead = head;\n \t\tLinkedArrayNode<T> h = head;\n \t\twhile (h != null) {\n"}}, {"oid": "1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "url": "https://github.com/reactor/reactor-core/commit/1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "message": "polish, remove redundant sync, add more comments and loop iterations", "committedDate": "2020-04-03T16:19:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczNDYwNw==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403734607", "bodyText": "Should not we use Operators.onNextDropped here?\noperators discard is Reactor only feature, so someone who uses another framework (yeah, if reactor meets non-reactor publisher, then SerializedSubscriber applies) then it is going to be impossible to handle discarded element at all.\nAlso, I found it really confusing having onDrop and discard unintegrated, which means that if no on discard hooks, most likely onDrop should be applied and element should find at least something", "author": "OlegDokuka", "createdAt": "2020-04-05T17:47:29Z", "path": "reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java", "diffHunk": "@@ -69,21 +69,23 @@ public void onSubscribe(Subscription s) {\n \t@Override\n \tpublic void onNext(T t) {\n \t\tif (cancelled || done) {\n+\t\t\tOperators.onDiscard(t, actual.currentContext());", "originalCommit": "1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwNDg3OQ==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403904879", "bodyText": "right ! one way to do it would be to check for cancelled and done separately.", "author": "simonbasle", "createdAt": "2020-04-06T08:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczNDYwNw=="}], "type": "inlineReview", "revised_code": {"commit": "56d530eafab24a12fa6e9c624b2e0f078f54c4a8", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\nindex b37d65e3a..a8f49b588 100644\n--- a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n+++ b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n\n@@ -68,16 +68,24 @@ final class SerializedSubscriber<T> implements InnerOperator<T, T> {\n \n \t@Override\n \tpublic void onNext(T t) {\n-\t\tif (cancelled || done) {\n+\t\tif (cancelled) {\n \t\t\tOperators.onDiscard(t, actual.currentContext());\n \t\t\treturn;\n \t\t}\n+\t\tif (done) {\n+\t\t\tOperators.onNextDropped(t, actual.currentContext());\n+\t\t\treturn;\n+\t\t}\n \n \t\tsynchronized (this) {\n-\t\t\tif (cancelled || done) {\n+\t\t\tif (cancelled) {\n \t\t\t\tOperators.onDiscard(t, actual.currentContext());\n \t\t\t\treturn;\n \t\t\t}\n+\t\t\tif (done) {\n+\t\t\t\tOperators.onNextDropped(t, actual.currentContext());\n+\t\t\t\treturn;\n+\t\t\t}\n \n \t\t\tif (drainLoopInProgress) {\n \t\t\t\tserAdd(t);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczNDY0MQ==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403734641", "bodyText": "same as above", "author": "OlegDokuka", "createdAt": "2020-04-05T17:47:43Z", "path": "reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java", "diffHunk": "@@ -69,21 +69,23 @@ public void onSubscribe(Subscription s) {\n \t@Override\n \tpublic void onNext(T t) {\n \t\tif (cancelled || done) {\n+\t\t\tOperators.onDiscard(t, actual.currentContext());\n \t\t\treturn;\n \t\t}\n \n \t\tsynchronized (this) {\n \t\t\tif (cancelled || done) {\n+\t\t\t\tOperators.onDiscard(t, actual.currentContext());", "originalCommit": "1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56d530eafab24a12fa6e9c624b2e0f078f54c4a8", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\nindex b37d65e3a..a8f49b588 100644\n--- a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n+++ b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n\n@@ -68,16 +68,24 @@ final class SerializedSubscriber<T> implements InnerOperator<T, T> {\n \n \t@Override\n \tpublic void onNext(T t) {\n-\t\tif (cancelled || done) {\n+\t\tif (cancelled) {\n \t\t\tOperators.onDiscard(t, actual.currentContext());\n \t\t\treturn;\n \t\t}\n+\t\tif (done) {\n+\t\t\tOperators.onNextDropped(t, actual.currentContext());\n+\t\t\treturn;\n+\t\t}\n \n \t\tsynchronized (this) {\n-\t\t\tif (cancelled || done) {\n+\t\t\tif (cancelled) {\n \t\t\t\tOperators.onDiscard(t, actual.currentContext());\n \t\t\t\treturn;\n \t\t\t}\n+\t\t\tif (done) {\n+\t\t\t\tOperators.onNextDropped(t, actual.currentContext());\n+\t\t\t\treturn;\n+\t\t\t}\n \n \t\t\tif (drainLoopInProgress) {\n \t\t\t\tserAdd(t);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczNDY2Mw==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403734663", "bodyText": "same as above", "author": "OlegDokuka", "createdAt": "2020-04-05T17:48:01Z", "path": "reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java", "diffHunk": "@@ -148,6 +150,11 @@ public void cancel() {\n \t}\n \n \tvoid serAdd(T value) {\n+\t\tif (cancelled) {\n+\t\t\tOperators.onDiscard(value, actual.currentContext());", "originalCommit": "1d9eda6445f8ee7bbe661284cedd9f00d1229deb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkyODIwOA==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r403928208", "bodyText": "here I don't think so, since we're dealing with cancellation inside onNext (which is precisely what doOnDiscard is about)", "author": "simonbasle", "createdAt": "2020-04-06T08:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczNDY2Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "56d530eafab24a12fa6e9c624b2e0f078f54c4a8", "url": "https://github.com/reactor/reactor-core/commit/56d530eafab24a12fa6e9c624b2e0f078f54c4a8", "message": "Split cancelled vs done cases for onNext: discard vs drop", "committedDate": "2020-04-06T08:49:04Z", "type": "commit"}, {"oid": "d9cad9abaae4bdc9eac8a57673bf28d173a83a50", "url": "https://github.com/reactor/reactor-core/commit/d9cad9abaae4bdc9eac8a57673bf28d173a83a50", "message": "add test from the issue", "committedDate": "2020-04-06T08:49:19Z", "type": "commit"}, {"oid": "e6ef818de74da0ad653d6277d60c4648b2136f46", "url": "https://github.com/reactor/reactor-core/commit/e6ef818de74da0ad653d6277d60c4648b2136f46", "message": "polish test to account for hiccups in async cancellation", "committedDate": "2020-04-06T09:46:55Z", "type": "commit"}, {"oid": "e10a2d7862947c99e5d863d1931d8c4961ab6172", "url": "https://github.com/reactor/reactor-core/commit/e10a2d7862947c99e5d863d1931d8c4961ab6172", "message": "polish test remove onNextDropped evaluation", "committedDate": "2020-04-06T09:48:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NTU1OA==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r409685558", "bodyText": "dead code, oops", "author": "simonbasle", "createdAt": "2020-04-16T16:21:43Z", "path": "reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java", "diffHunk": "@@ -182,22 +206,27 @@ void serDrainLoop(CoreSubscriber<? super T> actual) {\n \n \t\t\tsynchronized (this) {\n \t\t\t\tif (cancelled) {\n+\t\t\t\t\tdiscardMultiple(this.head);\n \t\t\t\t\treturn;\n \t\t\t\t}\n \n-\t\t\t\tif (!missed) {\n-\t\t\t\t\temitting = false;\n+\t\t\t\tif (!concurrentlyAddedContent) {\n+\t\t\t\t\tdrainLoopInProgress = false;\n \t\t\t\t\treturn;\n \t\t\t\t}\n \n-\t\t\t\tmissed = false;\n+\t\t\t\tconcurrentlyAddedContent = false;\n \n \t\t\t\td = done;\n \t\t\t\te = error;\n \t\t\t\tn = head;\n \n \t\t\t\thead = null;\n \t\t\t\ttail = null;\n+\n+//\t\t\t\tif (cancelled) {", "originalCommit": "e10a2d7862947c99e5d863d1931d8c4961ab6172", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NjQwOQ==", "url": "https://github.com/reactor/reactor-core/pull/2100#discussion_r409686409", "bodyText": "I started looking. Will get back with my approval shortly", "author": "OlegDokuka", "createdAt": "2020-04-16T16:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NTU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "9965b247c3d89e8177a9318209a237deb4fad41e", "chunk": "diff --git a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\nindex a8f49b588..efc433171 100644\n--- a/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n+++ b/reactor-core/src/main/java/reactor/core/publisher/SerializedSubscriber.java\n\n@@ -223,10 +223,6 @@ final class SerializedSubscriber<T> implements InnerOperator<T, T> {\n \n \t\t\t\thead = null;\n \t\t\t\ttail = null;\n-\n-//\t\t\t\tif (cancelled) {\n-//\t\t\t\t\tdiscardMultiple(n);\n-//\t\t\t\t}\n \t\t\t}\n \n \t\t\twhile (n != null) {\n"}}, {"oid": "9965b247c3d89e8177a9318209a237deb4fad41e", "url": "https://github.com/reactor/reactor-core/commit/9965b247c3d89e8177a9318209a237deb4fad41e", "message": "Add a bit more javadoc", "committedDate": "2020-04-16T16:37:40Z", "type": "commit"}]}