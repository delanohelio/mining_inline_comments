{"pr_number": 1180, "pr_title": "Improvement to support multiple token issuers with Claim Mappings #1179", "pr_createdAt": "2020-04-01T10:12:07Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1180", "timeline": [{"oid": "9b1b5cfc8913074d31d946a8f4f6423f8f26e8ea", "url": "https://github.com/wso2/product-microgateway/commit/9b1b5cfc8913074d31d946a8f4f6423f8f26e8ea", "message": "Add new feature for mapping JWT transformation", "committedDate": "2020-04-01T06:47:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MjAyOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401552029", "bodyText": "Remove all unwanted new lines", "author": "praminda", "createdAt": "2020-04-01T11:42:44Z", "path": "components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTTransformer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.jwttransformer;\n+\n+\n+import org.ballerinalang.jvm.values.MapValue;\n+\n+/**\n+ * Defines the interface for writing the  jwt tranformation.\n+ */\n+public interface JWTTransformer {", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTTransformer.java b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTTransformer.java\nindex 688743d40..8411c0859 100644\n--- a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTTransformer.java\n+++ b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTTransformer.java\n\n@@ -16,7 +16,6 @@\n \n package org.wso2.micro.gateway.jwttransformer;\n \n-\n import org.ballerinalang.jvm.values.MapValue;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MjEyMA==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401552120", "bodyText": "Suggested change", "author": "praminda", "createdAt": "2020-04-01T11:42:52Z", "path": "components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.wso2.micro.gateway.jwttransformer;\n+\n+import org.ballerinalang.jvm.values.ArrayValueImpl;\n+import org.ballerinalang.jvm.values.MapValue;\n+\n+/**\n+ * This file is for default Jwt transformer\n+ */\n+public class DefaultJWTTransformer implements JWTTransformer {\n+\n+    @Override\n+    public MapValue transformJWT(MapValue scopes) {\n+        String scope = \"\";\n+        MapValue scopesValue = scopes;\n+        int sizeOfScope = scopesValue.size();\n+        String name = scopesValue.get(\"scope\").getClass().getName();\n+        if (scopesValue.containsKey(\"scope\")) {\n+         if (scopesValue.get(\"scope\") instanceof ArrayValueImpl) {\n+             for (int i = 0; i < ((ArrayValueImpl) scopesValue.get(\"scope\")).size(); i++) {\n+                 scope +=  ((ArrayValueImpl) scopesValue.get(\"scope\")).getString(i) + \" \";\n+", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\nindex bf7c1a16c..4d300aa15 100644\n--- a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\n+++ b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\n\n@@ -20,26 +20,25 @@ import org.ballerinalang.jvm.values.ArrayValueImpl;\n import org.ballerinalang.jvm.values.MapValue;\n \n /**\n- * This file is for default Jwt transformer\n+ * This class is for default Jwt transformer.\n  */\n public class DefaultJWTTransformer implements JWTTransformer {\n \n     @Override\n-    public MapValue transformJWT(MapValue scopes) {\n+    public MapValue transformJWT(MapValue jwtClaims) {\n         String scope = \"\";\n-        MapValue scopesValue = scopes;\n-        int sizeOfScope = scopesValue.size();\n-        String name = scopesValue.get(\"scope\").getClass().getName();\n-        if (scopesValue.containsKey(\"scope\")) {\n-         if (scopesValue.get(\"scope\") instanceof ArrayValueImpl) {\n-             for (int i = 0; i < ((ArrayValueImpl) scopesValue.get(\"scope\")).size(); i++) {\n-                 scope +=  ((ArrayValueImpl) scopesValue.get(\"scope\")).getString(i) + \" \";\n-\n-             }\n-             scope = scope.trim();\n-         }\n-            scopesValue.put(\"scope\", scope);\n+        MapValue claimSet = jwtClaims;\n+        int sizeOfClaims = claimSet.size();\n+        String name = claimSet.get(\"scope\").getClass().getName();\n+        if (claimSet.containsKey(\"scope\")) {\n+            if (claimSet.get(\"scope\") instanceof ArrayValueImpl) {\n+                for (int i = 0; i < ((ArrayValueImpl) claimSet.get(\"scope\")).size(); i++) {\n+                    scope += ((ArrayValueImpl) claimSet.get(\"scope\")).getString(i) + \" \";\n+                }\n+                scope = scope.trim();\n+            }\n+            claimSet.put(\"scope\", scope);\n         }\n-        return scopesValue;\n+        return claimSet;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MjU3Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401552573", "bodyText": "Javadoc must have a . at the end of first sentence. This is a checked by checkstyles\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This file is for default Jwt transformer\n          \n          \n            \n             * This file is for default Jwt transformer.", "author": "praminda", "createdAt": "2020-04-01T11:43:50Z", "path": "components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.wso2.micro.gateway.jwttransformer;\n+\n+import org.ballerinalang.jvm.values.ArrayValueImpl;\n+import org.ballerinalang.jvm.values.MapValue;\n+\n+/**\n+ * This file is for default Jwt transformer", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\nindex bf7c1a16c..4d300aa15 100644\n--- a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\n+++ b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/DefaultJWTTransformer.java\n\n@@ -20,26 +20,25 @@ import org.ballerinalang.jvm.values.ArrayValueImpl;\n import org.ballerinalang.jvm.values.MapValue;\n \n /**\n- * This file is for default Jwt transformer\n+ * This class is for default Jwt transformer.\n  */\n public class DefaultJWTTransformer implements JWTTransformer {\n \n     @Override\n-    public MapValue transformJWT(MapValue scopes) {\n+    public MapValue transformJWT(MapValue jwtClaims) {\n         String scope = \"\";\n-        MapValue scopesValue = scopes;\n-        int sizeOfScope = scopesValue.size();\n-        String name = scopesValue.get(\"scope\").getClass().getName();\n-        if (scopesValue.containsKey(\"scope\")) {\n-         if (scopesValue.get(\"scope\") instanceof ArrayValueImpl) {\n-             for (int i = 0; i < ((ArrayValueImpl) scopesValue.get(\"scope\")).size(); i++) {\n-                 scope +=  ((ArrayValueImpl) scopesValue.get(\"scope\")).getString(i) + \" \";\n-\n-             }\n-             scope = scope.trim();\n-         }\n-            scopesValue.put(\"scope\", scope);\n+        MapValue claimSet = jwtClaims;\n+        int sizeOfClaims = claimSet.size();\n+        String name = claimSet.get(\"scope\").getClass().getName();\n+        if (claimSet.containsKey(\"scope\")) {\n+            if (claimSet.get(\"scope\") instanceof ArrayValueImpl) {\n+                for (int i = 0; i < ((ArrayValueImpl) claimSet.get(\"scope\")).size(); i++) {\n+                    scope += ((ArrayValueImpl) claimSet.get(\"scope\")).getString(i) + \" \";\n+                }\n+                scope = scope.trim();\n+            }\n+            claimSet.put(\"scope\", scope);\n         }\n-        return scopesValue;\n+        return claimSet;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MjgwNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401552805", "bodyText": "Suggested change", "author": "praminda", "createdAt": "2020-04-01T11:44:16Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.core.mapping;\n+\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n+\n+\n+/**\n+ * This class Class to dynamically invoke the transformer\n+ */\n+public class MappingInvoker {\n+\n+    private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n+    private  static JWTTransformer jwtTransformer;\n+\n+    public static String loadMappingClass(String className) {\n+        try {\n+", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\nindex 39b8d529f..947e1ede2 100644\n--- a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n+++ b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n\n@@ -23,28 +23,26 @@ import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n \n \n /**\n- * This class Class to dynamically invoke the transformer\n+ * This class Class to dynamically invoke the transformer.\n  */\n public class MappingInvoker {\n \n     private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n-    private  static JWTTransformer jwtTransformer;\n+    private static JWTTransformer jwtTransformer;\n \n     public static String loadMappingClass(String className) {\n         try {\n-\n             Class mappingClass = MappingInvoker.class.getClassLoader().loadClass(className);\n-             jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n-             return className;\n-\n+            jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n+            return className;\n         } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n             log.error(\"Error while loading the jwttransformer class: \" + className, e);\n         }\n-        return  className;\n+        return className;\n     }\n \n     public static MapValue transformJWT(MapValue claims) {\n-        MapValue scopes = jwtTransformer.transformJWT(claims);\n-        return scopes;\n+        MapValue claimSet = jwtTransformer.transformJWT(claims);\n+        return claimSet;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MzExNg==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401553116", "bodyText": "Try block is not formatted properly. Check indentation.", "author": "praminda", "createdAt": "2020-04-01T11:44:57Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.core.mapping;\n+\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n+\n+\n+/**\n+ * This class Class to dynamically invoke the transformer\n+ */\n+public class MappingInvoker {\n+\n+    private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n+    private  static JWTTransformer jwtTransformer;\n+\n+    public static String loadMappingClass(String className) {\n+        try {", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\nindex 39b8d529f..947e1ede2 100644\n--- a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n+++ b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n\n@@ -23,28 +23,26 @@ import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n \n \n /**\n- * This class Class to dynamically invoke the transformer\n+ * This class Class to dynamically invoke the transformer.\n  */\n public class MappingInvoker {\n \n     private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n-    private  static JWTTransformer jwtTransformer;\n+    private static JWTTransformer jwtTransformer;\n \n     public static String loadMappingClass(String className) {\n         try {\n-\n             Class mappingClass = MappingInvoker.class.getClassLoader().loadClass(className);\n-             jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n-             return className;\n-\n+            jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n+            return className;\n         } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n             log.error(\"Error while loading the jwttransformer class: \" + className, e);\n         }\n-        return  className;\n+        return className;\n     }\n \n     public static MapValue transformJWT(MapValue claims) {\n-        MapValue scopes = jwtTransformer.transformJWT(claims);\n-        return scopes;\n+        MapValue claimSet = jwtTransformer.transformJWT(claims);\n+        return claimSet;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MzE3MQ==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r401553171", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class Class to dynamically invoke the transformer\n          \n          \n            \n             * This class Class to dynamically invoke the transformer.", "author": "praminda", "createdAt": "2020-04-01T11:45:05Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.core.mapping;\n+\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n+\n+\n+/**\n+ * This class Class to dynamically invoke the transformer", "originalCommit": "c606e67a321b26094d797e20f9c0b589f5bea35b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f038e53744b3562b0b8e0e9c227b24fc823941", "chunk": "diff --git a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\nindex 39b8d529f..947e1ede2 100644\n--- a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n+++ b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n\n@@ -23,28 +23,26 @@ import org.wso2.micro.gateway.jwttransformer.JWTTransformer;\n \n \n /**\n- * This class Class to dynamically invoke the transformer\n+ * This class Class to dynamically invoke the transformer.\n  */\n public class MappingInvoker {\n \n     private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n-    private  static JWTTransformer jwtTransformer;\n+    private static JWTTransformer jwtTransformer;\n \n     public static String loadMappingClass(String className) {\n         try {\n-\n             Class mappingClass = MappingInvoker.class.getClassLoader().loadClass(className);\n-             jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n-             return className;\n-\n+            jwtTransformer = (JWTTransformer) mappingClass.newInstance();\n+            return className;\n         } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n             log.error(\"Error while loading the jwttransformer class: \" + className, e);\n         }\n-        return  className;\n+        return className;\n     }\n \n     public static MapValue transformJWT(MapValue claims) {\n-        MapValue scopes = jwtTransformer.transformJWT(claims);\n-        return scopes;\n+        MapValue claimSet = jwtTransformer.transformJWT(claims);\n+        return claimSet;\n     }\n }\n"}}, {"oid": "35f038e53744b3562b0b8e0e9c227b24fc823941", "url": "https://github.com/wso2/product-microgateway/commit/35f038e53744b3562b0b8e0e9c227b24fc823941", "message": "Resolve reviewd comments and read custom claims and class name in JWT handler creation", "committedDate": "2020-04-02T11:14:13Z", "type": "forcePushed"}, {"oid": "7b3c4c4d0a2df3ab288572f46c774f12e3973801", "url": "https://github.com/wso2/product-microgateway/commit/7b3c4c4d0a2df3ab288572f46c774f12e3973801", "message": "Resolve reviewd comments", "committedDate": "2020-04-15T10:19:22Z", "type": "commit"}, {"oid": "7b3c4c4d0a2df3ab288572f46c774f12e3973801", "url": "https://github.com/wso2/product-microgateway/commit/7b3c4c4d0a2df3ab288572f46c774f12e3973801", "message": "Resolve reviewd comments", "committedDate": "2020-04-15T10:19:22Z", "type": "forcePushed"}, {"oid": "72b4abe0e4341dc4c2349abf5407222bdb281139", "url": "https://github.com/wso2/product-microgateway/commit/72b4abe0e4341dc4c2349abf5407222bdb281139", "message": "resolved comments and resolved conflict", "committedDate": "2020-04-16T13:42:59Z", "type": "forcePushed"}, {"oid": "7b3c4c4d0a2df3ab288572f46c774f12e3973801", "url": "https://github.com/wso2/product-microgateway/commit/7b3c4c4d0a2df3ab288572f46c774f12e3973801", "message": "Resolve reviewd comments", "committedDate": "2020-04-15T10:19:22Z", "type": "forcePushed"}, {"oid": "daa5a352a50ec1a229dccc0805582c6bd253ecff", "url": "https://github.com/wso2/product-microgateway/commit/daa5a352a50ec1a229dccc0805582c6bd253ecff", "message": "resolved comments and conflict", "committedDate": "2020-04-16T16:14:04Z", "type": "commit"}, {"oid": "9d957047d1d987d102d13656d83a5ea7761b7b63", "url": "https://github.com/wso2/product-microgateway/commit/9d957047d1d987d102d13656d83a5ea7761b7b63", "message": "Add integration test case", "committedDate": "2020-04-24T08:51:06Z", "type": "commit"}, {"oid": "9d957047d1d987d102d13656d83a5ea7761b7b63", "url": "https://github.com/wso2/product-microgateway/commit/9d957047d1d987d102d13656d83a5ea7761b7b63", "message": "Add integration test case", "committedDate": "2020-04-24T08:51:06Z", "type": "forcePushed"}, {"oid": "49be77d90f771dc763c3aaa209f890bf741705ca", "url": "https://github.com/wso2/product-microgateway/commit/49be77d90f771dc763c3aaa209f890bf741705ca", "message": "Move Error handle to ballerina side", "committedDate": "2020-04-24T15:55:02Z", "type": "commit"}, {"oid": "49be77d90f771dc763c3aaa209f890bf741705ca", "url": "https://github.com/wso2/product-microgateway/commit/49be77d90f771dc763c3aaa209f890bf741705ca", "message": "Move Error handle to ballerina side", "committedDate": "2020-04-24T15:55:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA2MzY4NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r429063685", "bodyText": "Comment seems to have class word twice", "author": "Rajith90", "createdAt": "2020-05-22T06:23:27Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.core.mapping;\n+\n+import org.ballerinalang.jvm.values.ArrayValue;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.jvm.values.MapValueImpl;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.wso2.micro.gateway.jwttransformer.JWTValueTransformer;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * This class Class to dynamically invoke the transformer.", "originalCommit": "49be77d90f771dc763c3aaa209f890bf741705ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f43ac87c2513219c3237d5003e5fc82eb6464522", "chunk": "diff --git a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\nindex 3b89128c7..c36fe6851 100644\n--- a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n+++ b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n\n@@ -27,24 +27,24 @@ import java.util.HashMap;\n import java.util.Map;\n \n /**\n- * This class Class to dynamically invoke the transformer.\n+ * This class to dynamically invoke the transformer.\n  */\n public class MappingInvoker {\n-    private static Map map;\n+    private static Map jwtClassMap;\n     private static int index = 0;\n     private static Map editedClaims;\n     private static MapValue<String, Object> mapValue;\n     private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n     private static JWTValueTransformer jwtValueTransformer;\n     public static void initiateJwtMap() {\n-        map = new HashMap<String, JWTValueTransformer>();\n+        jwtClassMap = new HashMap<String, JWTValueTransformer>();\n     }\n \n     public static boolean loadMappingClass(String className) {\n         try {\n             Class mappingClass = MappingInvoker.class.getClassLoader().loadClass(className);\n             jwtValueTransformer = (JWTValueTransformer) mappingClass.newInstance();\n-            map.put(className, jwtValueTransformer);\n+            jwtClassMap.put(className, jwtValueTransformer);\n             return true;\n         } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n             log.error(\"Error while loading the jwttransformer class: \" + className, e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3NDMxNA==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r429074314", "bodyText": "Use a proper name for the map", "author": "Rajith90", "createdAt": "2020-05-22T06:55:26Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.core.mapping;\n+\n+import org.ballerinalang.jvm.values.ArrayValue;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.jvm.values.MapValueImpl;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.wso2.micro.gateway.jwttransformer.JWTValueTransformer;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * This class Class to dynamically invoke the transformer.\n+ */\n+public class MappingInvoker {\n+    private static Map map;", "originalCommit": "49be77d90f771dc763c3aaa209f890bf741705ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f43ac87c2513219c3237d5003e5fc82eb6464522", "chunk": "diff --git a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\nindex 3b89128c7..c36fe6851 100644\n--- a/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n+++ b/components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/mapping/MappingInvoker.java\n\n@@ -27,24 +27,24 @@ import java.util.HashMap;\n import java.util.Map;\n \n /**\n- * This class Class to dynamically invoke the transformer.\n+ * This class to dynamically invoke the transformer.\n  */\n public class MappingInvoker {\n-    private static Map map;\n+    private static Map jwtClassMap;\n     private static int index = 0;\n     private static Map editedClaims;\n     private static MapValue<String, Object> mapValue;\n     private static final Logger log = LoggerFactory.getLogger(\"ballerina\");\n     private static JWTValueTransformer jwtValueTransformer;\n     public static void initiateJwtMap() {\n-        map = new HashMap<String, JWTValueTransformer>();\n+        jwtClassMap = new HashMap<String, JWTValueTransformer>();\n     }\n \n     public static boolean loadMappingClass(String className) {\n         try {\n             Class mappingClass = MappingInvoker.class.getClassLoader().loadClass(className);\n             jwtValueTransformer = (JWTValueTransformer) mappingClass.newInstance();\n-            map.put(className, jwtValueTransformer);\n+            jwtClassMap.put(className, jwtValueTransformer);\n             return true;\n         } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n             log.error(\"Error while loading the jwttransformer class: \" + className, e);\n"}}, {"oid": "f43ac87c2513219c3237d5003e5fc82eb6464522", "url": "https://github.com/wso2/product-microgateway/commit/f43ac87c2513219c3237d5003e5fc82eb6464522", "message": "resolve comments", "committedDate": "2020-05-22T14:35:06Z", "type": "commit"}, {"oid": "1c286051e8eb599adf78d105b01abe58d3460b86", "url": "https://github.com/wso2/product-microgateway/commit/1c286051e8eb599adf78d105b01abe58d3460b86", "message": "add jwt claim mapping in default micro gateway template.", "committedDate": "2020-05-29T06:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAzOTc4NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r433039785", "bodyText": "I think package name should be jwt.transformer", "author": "Rajith90", "createdAt": "2020-06-01T04:49:05Z", "path": "tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.wso2.micro.gateway.tests.jwtvaluetransformer;\n+\n+import org.wso2.micro.gateway.jwttransformer.JWTValueTransformer;", "originalCommit": "1c286051e8eb599adf78d105b01abe58d3460b86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4a675eef13666e4cd86925e234f8df83099069c", "chunk": "diff --git a/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java b/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\nindex 8a7f8dc24..53b2296d4 100644\n--- a/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\n+++ b/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\n\n@@ -1,6 +1,6 @@\n package org.wso2.micro.gateway.tests.jwtvaluetransformer;\n \n-import org.wso2.micro.gateway.jwttransformer.JWTValueTransformer;\n+import org.wso2.micro.gateway.jwt.transformer.JWTValueTransformer;\n \n import java.util.Map;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAzOTgyNw==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r433039827", "bodyText": "I think package name should be jwt.transformer", "author": "Rajith90", "createdAt": "2020-06-01T04:49:20Z", "path": "components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTValueTransformer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.jwttransformer;", "originalCommit": "1c286051e8eb599adf78d105b01abe58d3460b86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4a675eef13666e4cd86925e234f8df83099069c", "chunk": "diff --git a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTValueTransformer.java b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwt/transformer/JWTValueTransformer.java\nsimilarity index 95%\nrename from components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTValueTransformer.java\nrename to components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwt/transformer/JWTValueTransformer.java\nindex 034dffbe6..6f4f51fa6 100644\n--- a/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwttransformer/JWTValueTransformer.java\n+++ b/components/micro-gateway-jwt-transformer/src/main/java/org/wso2/micro/gateway/jwt/transformer/JWTValueTransformer.java\n\n@@ -14,7 +14,7 @@\n  *  limitations under the License.\n  */\n \n-package org.wso2.micro.gateway.jwttransformer;\n+package org.wso2.micro.gateway.jwt.transformer;\n \n import java.util.Map;\n \n"}}, {"oid": "a4a675eef13666e4cd86925e234f8df83099069c", "url": "https://github.com/wso2/product-microgateway/commit/a4a675eef13666e4cd86925e234f8df83099069c", "message": "change package name", "committedDate": "2020-06-01T05:40:48Z", "type": "commit"}, {"oid": "02bf9527a02cb3f6694f8575e978e9c1b9c2d022", "url": "https://github.com/wso2/product-microgateway/commit/02bf9527a02cb3f6694f8575e978e9c1b9c2d022", "message": "edit default template", "committedDate": "2020-06-02T09:05:51Z", "type": "commit"}, {"oid": "5f59752dbe7e675db21fd42ffdb368be6f38d734", "url": "https://github.com/wso2/product-microgateway/commit/5f59752dbe7e675db21fd42ffdb368be6f38d734", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into master1\n\n# Conflicts:\n#\tcomponents/micro-gateway-core/pom.xml\n#\tcomponents/micro-gateway-core/src/main/ballerina/src/gateway/api_gateway_cache.bal\n#\ttests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java\n#\ttests/src/test/java/org/wso2/micro/gateway/tests/common/ResponseConstants.java\n#\ttests/src/test/resources/testng.xml", "committedDate": "2020-06-03T04:43:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwOTM3Ng==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r434309376", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.wso2.micro.gateway.tests.jwtvaluetransformer;\n          \n          \n            \n            /*\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *\n          \n          \n            \n             * WSO2 Inc. licenses this file to you under the Apache License,\n          \n          \n            \n             * Version 2.0 (the \"License\"); you may not use this file except\n          \n          \n            \n             * in compliance with the License.\n          \n          \n            \n             * You may obtain a copy of the License at\n          \n          \n            \n             *\n          \n          \n            \n             *    http://www.apache.org/licenses/LICENSE-2.0\n          \n          \n            \n             *\n          \n          \n            \n             * Unless required by applicable law or agreed to in writing,\n          \n          \n            \n             * software distributed under the License is distributed on an\n          \n          \n            \n             * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n          \n          \n            \n             * KIND, either express or implied.  See the License for the\n          \n          \n            \n             * specific language governing permissions and limitations\n          \n          \n            \n             * under the License.\n          \n          \n            \n             */\n          \n          \n            \n            \n          \n          \n            \n            package org.wso2.micro.gateway.tests.jwtvaluetransformer;", "author": "praminda", "createdAt": "2020-06-03T05:03:50Z", "path": "tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.wso2.micro.gateway.tests.jwtvaluetransformer;", "originalCommit": "5f59752dbe7e675db21fd42ffdb368be6f38d734", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e324f7b3a0fc400b62ef0408976aaea688026f9", "chunk": "diff --git a/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java b/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\nindex 53b2296d4..8e6089eb1 100644\n--- a/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\n+++ b/tests/src/main/java/org/wso2/micro/gateway/tests/jwtvaluetransformer/DefaultJwtTransformer.java\n\n@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.micro.gateway.tests.jwtvaluetransformer;\n \n import org.wso2.micro.gateway.jwt.transformer.JWTValueTransformer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwOTQ5Nw==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r434309497", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.wso2.micro.gateway.tests.jwtTransformer;\n          \n          \n            \n            /*\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *\n          \n          \n            \n             * WSO2 Inc. licenses this file to you under the Apache License,\n          \n          \n            \n             * Version 2.0 (the \"License\"); you may not use this file except\n          \n          \n            \n             * in compliance with the License.\n          \n          \n            \n             * You may obtain a copy of the License at\n          \n          \n            \n             *\n          \n          \n            \n             *    http://www.apache.org/licenses/LICENSE-2.0\n          \n          \n            \n             *\n          \n          \n            \n             * Unless required by applicable law or agreed to in writing,\n          \n          \n            \n             * software distributed under the License is distributed on an\n          \n          \n            \n             * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n          \n          \n            \n             * KIND, either express or implied.  See the License for the\n          \n          \n            \n             * specific language governing permissions and limitations\n          \n          \n            \n             * under the License.\n          \n          \n            \n             */\n          \n          \n            \n            \n          \n          \n            \n            package org.wso2.micro.gateway.tests.jwtTransformer;", "author": "praminda", "createdAt": "2020-06-03T05:04:23Z", "path": "tests/src/test/java/org/wso2/micro/gateway/tests/jwtTransformer/JwtTransformerTestCase.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package org.wso2.micro.gateway.tests.jwtTransformer;", "originalCommit": "5f59752dbe7e675db21fd42ffdb368be6f38d734", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e324f7b3a0fc400b62ef0408976aaea688026f9", "chunk": "diff --git a/tests/src/test/java/org/wso2/micro/gateway/tests/jwtTransformer/JwtTransformerTestCase.java b/tests/src/test/java/org/wso2/micro/gateway/tests/jwtTransformer/JwtTransformerTestCase.java\nindex fa9d50049..062204aae 100644\n--- a/tests/src/test/java/org/wso2/micro/gateway/tests/jwtTransformer/JwtTransformerTestCase.java\n+++ b/tests/src/test/java/org/wso2/micro/gateway/tests/jwtTransformer/JwtTransformerTestCase.java\n\n@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.micro.gateway.tests.jwtTransformer;\n \n import io.netty.handler.codec.http.HttpHeaderNames;\n"}}, {"oid": "5e324f7b3a0fc400b62ef0408976aaea688026f9", "url": "https://github.com/wso2/product-microgateway/commit/5e324f7b3a0fc400b62ef0408976aaea688026f9", "message": "Apply suggestions from code review\n\nCo-authored-by: Praminda <pramindabj@gmail.com>", "committedDate": "2020-06-03T05:15:01Z", "type": "commit"}, {"oid": "cf929c7a1e9aacac932ca1663fc1cdcee572a3a0", "url": "https://github.com/wso2/product-microgateway/commit/cf929c7a1e9aacac932ca1663fc1cdcee572a3a0", "message": "update license version", "committedDate": "2020-06-03T05:21:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI5NjU2MA==", "url": "https://github.com/wso2/product-microgateway/pull/1180#discussion_r432296560", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String SYSTEM_PROP_JWTTRANSFORMER_JAR = \"jwt_transformer_jar\";\n          \n          \n            \n                public static final String SYSTEM_PROP_JWT_TRANSFORMER_JAR = \"jwt_transformer_jar\";", "author": "AmaliMatharaarachchi", "createdAt": "2020-05-29T07:12:33Z", "path": "tests/src/test/java/org/wso2/micro/gateway/tests/context/Constants.java", "diffHunk": "@@ -29,6 +29,8 @@\n     public static final String SYSTEM_PROP_WINDOWS_RUNTIME = \"runtime_windows\";\n     //Name of the system property define the location of the linux runtime distribution\n     public static final String SYSTEM_PROP_LINUX_RUNTIME = \"runtime_linux\";\n+    // Name of the system property define the custom value  transformer jar file location\n+    public static final String SYSTEM_PROP_JWTTRANSFORMER_JAR = \"jwt_transformer_jar\";", "originalCommit": "1c286051e8eb599adf78d105b01abe58d3460b86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}