{"pr_number": 1242, "pr_title": "Fix #1239 #802 : Provide endpoint proxy, pool, retry, circuit breaker configs", "pr_createdAt": "2020-05-20T15:24:26Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1242", "timeline": [{"oid": "461e80e71604df3cb50488c44aec3b876506e830", "url": "https://github.com/wso2/product-microgateway/commit/461e80e71604df3cb50488c44aec3b876506e830", "message": "Fix #1239 #802 : Provide endpoint proxy, pool, retry, circuit breaker configs", "committedDate": "2020-05-20T15:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY4MTI2MA==", "url": "https://github.com/wso2/product-microgateway/pull/1242#discussion_r428681260", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This DTO holds the data related to endpoint retries in case of a failure scenario\n          \n          \n            \n             * This DTO holds the data related to endpoint retries in case of a failure scenario.", "author": "AmaliMatharaarachchi", "createdAt": "2020-05-21T14:19:43Z", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/EndpointRetryDTO.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.wso2.apimgt.gateway.cli.model.mgwcodegen;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This DTO holds the data related to endpoint retries in case of a failure scenario", "originalCommit": "461e80e71604df3cb50488c44aec3b876506e830", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "937403a1a3e6d91fe87aa52ff5c6610ae2ad6dfa", "chunk": "diff --git a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/EndpointRetryDTO.java b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/EndpointRetryDTO.java\nindex 6022632df..acffac4b9 100644\n--- a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/EndpointRetryDTO.java\n+++ b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/EndpointRetryDTO.java\n\n@@ -19,9 +19,10 @@ import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * This DTO holds the data related to endpoint retries in case of a failure scenario\n+ * This DTO holds the data related to endpoint retries in case of a failure scenario.\n  */\n public class EndpointRetryDTO {\n+    //ballerina retry default values\n     private int count = 0;\n     private int intervalInMillis = 0;\n     private double backOffFactor = 0.0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc1NTEzOA==", "url": "https://github.com/wso2/product-microgateway/pull/1242#discussion_r429755138", "bodyText": "Set the retryDone false", "author": "Rajith90", "createdAt": "2020-05-25T06:38:06Z", "path": "tests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java", "diffHunk": "@@ -326,6 +327,54 @@ public void configure(HttpsParameters params) {\n                 exchange.getResponseBody().write(response);\n                 exchange.close();\n             });\n+            httpServer.createContext(contextV3 + \"/timeout\", exchange -> {\n+                try {\n+                    Thread.sleep(5000);\n+                } catch (InterruptedException e) {\n+                    log.error(\"Error while invoking timeout back end\", e);\n+                }\n+                byte[] response = ResponseConstants.responseBodyV1.getBytes();\n+                exchange.getResponseHeaders().set(HttpHeaderNames.CONTENT_TYPE.toString(),\n+                        TokenManagementConstants.CONTENT_TYPE_APPLICATION_JSON);\n+                exchange.sendResponseHeaders(HttpURLConnection.HTTP_OK, response.length);\n+                exchange.getResponseBody().write(response);\n+                exchange.close();\n+            });\n+            httpServer.createContext(contextV3 + \"/retry\", exchange -> {\n+                if (!retryDone) {\n+                    byte[] response = ResponseConstants.responseBodyV1.getBytes();\n+                    exchange.getResponseHeaders().set(HttpHeaderNames.CONTENT_TYPE.toString(),\n+                            TokenManagementConstants.CONTENT_TYPE_APPLICATION_JSON);\n+                    exchange.sendResponseHeaders(HttpURLConnection.HTTP_GATEWAY_TIMEOUT, 0);\n+                    exchange.getResponseBody().write(response);\n+                    exchange.close();\n+                    retryDone = true;\n+                }\n+                byte[] response = ResponseConstants.responseBodyV1.getBytes();\n+                exchange.getResponseHeaders().set(HttpHeaderNames.CONTENT_TYPE.toString(),\n+                        TokenManagementConstants.CONTENT_TYPE_APPLICATION_JSON);\n+                exchange.sendResponseHeaders(HttpURLConnection.HTTP_OK, response.length);\n+                exchange.getResponseBody().write(response);\n+                exchange.close();", "originalCommit": "461e80e71604df3cb50488c44aec3b876506e830", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "937403a1a3e6d91fe87aa52ff5c6610ae2ad6dfa", "chunk": "diff --git a/tests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java b/tests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java\nindex fec66a0f0..49d6f0a59 100644\n--- a/tests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java\n+++ b/tests/src/test/java/org/wso2/micro/gateway/tests/common/MockBackEndServer.java\n\n@@ -355,6 +355,7 @@ public class MockBackEndServer extends Thread {\n                         TokenManagementConstants.CONTENT_TYPE_APPLICATION_JSON);\n                 exchange.sendResponseHeaders(HttpURLConnection.HTTP_OK, response.length);\n                 exchange.getResponseBody().write(response);\n+                retryDone = false;\n                 exchange.close();\n             });\n             httpServer.createContext(contextV3 + \"/circuitBreaker\", exchange -> {\n"}}, {"oid": "937403a1a3e6d91fe87aa52ff5c6610ae2ad6dfa", "url": "https://github.com/wso2/product-microgateway/commit/937403a1a3e6d91fe87aa52ff5c6610ae2ad6dfa", "message": "Fix review suggestions", "committedDate": "2020-05-26T11:14:57Z", "type": "commit"}]}