{"pr_number": 1424, "pr_title": "[envoy-gw] Intergrate jwt feature with gRPC server", "pr_createdAt": "2020-09-29T15:41:33Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1424", "timeline": [{"oid": "ce540b4e1611ffa18b109c120193192db208f233", "url": "https://github.com/wso2/product-microgateway/commit/ce540b4e1611ffa18b109c120193192db208f233", "message": "inergate jwt code with grpc server", "committedDate": "2020-09-28T20:02:29Z", "type": "commit"}, {"oid": "4d769320dd8792066e4be0ff784aefb34488caf4", "url": "https://github.com/wso2/product-microgateway/commit/4d769320dd8792066e4be0ff784aefb34488caf4", "message": "add dockerfile", "committedDate": "2020-09-29T12:31:13Z", "type": "commit"}, {"oid": "ee38e758847971a3aadd5d01521288cec3937e46", "url": "https://github.com/wso2/product-microgateway/commit/ee38e758847971a3aadd5d01521288cec3937e46", "message": "optimize the code", "committedDate": "2020-09-29T14:23:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MDg5Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562670893", "bodyText": "Shall we remove the commented code lines?", "author": "npamudika", "createdAt": "2021-01-22T14:33:29Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "diffHunk": "@@ -71,22 +76,32 @@ public String load(String s) throws Exception {\n \n                     });\n     //validate JWT token\n-    public static boolean validateToken () {\n+    public static CheckResponse validateToken (Map<String, String> headers) {\n         boolean valid = false;\n-        HashMap<String, String> request = new HashMap<String, String>();\n-        request.put(JWTConstants.AUTHORIZATION, JWTConstants.JWT_TOKEN);\n-        for (Map.Entry mapElement : request.entrySet()) {\n-            String key = (String) mapElement.getKey();\n-            if (key == JWTConstants.AUTHORIZATION) {\n-                valid = HandleJWT(request);\n-                break;\n-            }\n+        CheckResponse response;\n+\n+        String token = headers.get(JWTConstants.AUTHORIZATION);\n+        //Map<String, String> request = new HashMap<String, String>();\n+        //request.put(JWTConstants.AUTHORIZATION, JWTConstants.JWT_TOKEN);", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUyMTgwMA==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r568521800", "bodyText": "This was removed", "author": "chashikajw", "createdAt": "2021-02-02T11:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MDg5Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTE0MA==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562671140", "bodyText": "Please remove the commented code line", "author": "npamudika", "createdAt": "2021-01-22T14:33:50Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "diffHunk": "@@ -71,22 +76,32 @@ public String load(String s) throws Exception {\n \n                     });\n     //validate JWT token\n-    public static boolean validateToken () {\n+    public static CheckResponse validateToken (Map<String, String> headers) {\n         boolean valid = false;\n-        HashMap<String, String> request = new HashMap<String, String>();\n-        request.put(JWTConstants.AUTHORIZATION, JWTConstants.JWT_TOKEN);\n-        for (Map.Entry mapElement : request.entrySet()) {\n-            String key = (String) mapElement.getKey();\n-            if (key == JWTConstants.AUTHORIZATION) {\n-                valid = HandleJWT(request);\n-                break;\n-            }\n+        CheckResponse response;\n+\n+        String token = headers.get(JWTConstants.AUTHORIZATION);\n+        //Map<String, String> request = new HashMap<String, String>();\n+        //request.put(JWTConstants.AUTHORIZATION, JWTConstants.JWT_TOKEN);\n+        valid = HandleJWT(token);\n+\n+        if(valid) {\n+            response = CheckResponse.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.OK_VALUE).build())\n+                    .setOkResponse(OkHttpResponse.newBuilder().build())\n+                    .build();\n+        } else {\n+            response = CheckResponse.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAUTHENTICATED_VALUE).build())\n+                    .setDeniedResponse(DeniedHttpResponse.newBuilder().build())\n+                    .build();\n         }\n-        return valid;\n+\n+        return response;\n     }\n     //handle JWT token\n-    public static boolean HandleJWT(HashMap<String, String> requestAttributes){\n-        String accessToken = requestAttributes.get(JWTConstants.AUTHORIZATION);\n+    public static boolean HandleJWT(String accessToken){\n+        //String accessToken = requestAttributes.get(JWTConstants.AUTHORIZATION);", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUyMTkyMg==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r568521922", "bodyText": "This was removed", "author": "chashikajw", "createdAt": "2021-02-02T11:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTE0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTQzMg==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562671432", "bodyText": "Please remove the commented code lines", "author": "npamudika", "createdAt": "2021-01-22T14:34:17Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/gRPC/server/ExtAuthService.java", "diffHunk": "@@ -18,32 +18,46 @@\n \n package org.wso2.mgw.filterchain.gRPC.server;\n \n+import com.google.rpc.Code;\n import com.google.rpc.Status;\n-import io.envoyproxy.envoy.service.auth.v2.AuthorizationGrpc;\n-import io.envoyproxy.envoy.service.auth.v2.CheckRequest;\n-import io.envoyproxy.envoy.service.auth.v2.CheckResponse;\n-import io.envoyproxy.envoy.service.auth.v2.OkHttpResponse;\n+import io.envoyproxy.envoy.service.auth.v2.*;\n import io.grpc.stub.StreamObserver;\n+import org.wso2.mgw.filterchain.JWTValidator.JWTValidator;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n \n public class ExtAuthService extends AuthorizationGrpc.AuthorizationImplBase {\n \n     @Override\n     public void check (CheckRequest request, StreamObserver<CheckResponse> responseObserver) {\n \n-        System.out.println(\"++++++++++hit+++++++++++++++\");\n+        //System.out.println(\"++++++++++hit+++++++++++++++\");\n+\n+        //System.out.println(request.getAttributes().getRequest().getHttp());\n ", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUyMjA4Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r568522083", "bodyText": "This was removed", "author": "chashikajw", "createdAt": "2021-02-02T11:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTQzMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTUxMQ==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562671511", "bodyText": "Please remove the commented code line", "author": "npamudika", "createdAt": "2021-01-22T14:34:25Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/gRPC/server/ExtAuthService.java", "diffHunk": "@@ -18,32 +18,46 @@\n \n package org.wso2.mgw.filterchain.gRPC.server;\n \n+import com.google.rpc.Code;\n import com.google.rpc.Status;\n-import io.envoyproxy.envoy.service.auth.v2.AuthorizationGrpc;\n-import io.envoyproxy.envoy.service.auth.v2.CheckRequest;\n-import io.envoyproxy.envoy.service.auth.v2.CheckResponse;\n-import io.envoyproxy.envoy.service.auth.v2.OkHttpResponse;\n+import io.envoyproxy.envoy.service.auth.v2.*;\n import io.grpc.stub.StreamObserver;\n+import org.wso2.mgw.filterchain.JWTValidator.JWTValidator;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n \n public class ExtAuthService extends AuthorizationGrpc.AuthorizationImplBase {\n \n     @Override\n     public void check (CheckRequest request, StreamObserver<CheckResponse> responseObserver) {\n \n-        System.out.println(\"++++++++++hit+++++++++++++++\");\n+        //System.out.println(\"++++++++++hit+++++++++++++++\");\n+\n+        //System.out.println(request.getAttributes().getRequest().getHttp());\n \n-        System.out.println(request);\n \n         // use a builder to construct a new Protobuffer object\n         // jwt authentication should happens here\n         //Status status = Status.OK;", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUyMjIzOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r568522239", "bodyText": "This was removed", "author": "chashikajw", "createdAt": "2021-02-02T11:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTUxMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTYyNA==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562671624", "bodyText": "Please remove the commented code lines", "author": "npamudika", "createdAt": "2021-01-22T14:34:35Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/gRPC/server/ExtAuthService.java", "diffHunk": "@@ -18,32 +18,46 @@\n \n package org.wso2.mgw.filterchain.gRPC.server;\n \n+import com.google.rpc.Code;\n import com.google.rpc.Status;\n-import io.envoyproxy.envoy.service.auth.v2.AuthorizationGrpc;\n-import io.envoyproxy.envoy.service.auth.v2.CheckRequest;\n-import io.envoyproxy.envoy.service.auth.v2.CheckResponse;\n-import io.envoyproxy.envoy.service.auth.v2.OkHttpResponse;\n+import io.envoyproxy.envoy.service.auth.v2.*;\n import io.grpc.stub.StreamObserver;\n+import org.wso2.mgw.filterchain.JWTValidator.JWTValidator;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n \n public class ExtAuthService extends AuthorizationGrpc.AuthorizationImplBase {\n \n     @Override\n     public void check (CheckRequest request, StreamObserver<CheckResponse> responseObserver) {\n \n-        System.out.println(\"++++++++++hit+++++++++++++++\");\n+        //System.out.println(\"++++++++++hit+++++++++++++++\");\n+\n+        //System.out.println(request.getAttributes().getRequest().getHttp());\n \n-        System.out.println(request);\n \n         // use a builder to construct a new Protobuffer object\n         // jwt authentication should happens here\n         //Status status = Status.OK;\n         CheckResponse response = CheckResponse.newBuilder()\n-                .setStatus(Status.newBuilder().build())\n+                .setStatus(Status.newBuilder().setCode(Code.OK_VALUE).build())\n                 .setOkResponse(OkHttpResponse.newBuilder().build())\n                 .build();\n \n+\n+        /*CheckResponse response1 = CheckResponse.newBuilder()\n+                .setStatus(Status.newBuilder().setCode(Code.UNAUTHENTICATED_VALUE).build())\n+                .setDeniedResponse(DeniedHttpResponse.newBuilder().build())\n+                .build(); */", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTY5NA==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r562671694", "bodyText": "Please remove the commented code lines", "author": "npamudika", "createdAt": "2021-01-22T14:34:42Z", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/gRPC/server/ExtAuthService.java", "diffHunk": "@@ -18,32 +18,46 @@\n \n package org.wso2.mgw.filterchain.gRPC.server;\n \n+import com.google.rpc.Code;\n import com.google.rpc.Status;\n-import io.envoyproxy.envoy.service.auth.v2.AuthorizationGrpc;\n-import io.envoyproxy.envoy.service.auth.v2.CheckRequest;\n-import io.envoyproxy.envoy.service.auth.v2.CheckResponse;\n-import io.envoyproxy.envoy.service.auth.v2.OkHttpResponse;\n+import io.envoyproxy.envoy.service.auth.v2.*;\n import io.grpc.stub.StreamObserver;\n+import org.wso2.mgw.filterchain.JWTValidator.JWTValidator;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n \n public class ExtAuthService extends AuthorizationGrpc.AuthorizationImplBase {\n \n     @Override\n     public void check (CheckRequest request, StreamObserver<CheckResponse> responseObserver) {\n \n-        System.out.println(\"++++++++++hit+++++++++++++++\");\n+        //System.out.println(\"++++++++++hit+++++++++++++++\");\n+\n+        //System.out.println(request.getAttributes().getRequest().getHttp());\n \n-        System.out.println(request);\n \n         // use a builder to construct a new Protobuffer object\n         // jwt authentication should happens here\n         //Status status = Status.OK;\n         CheckResponse response = CheckResponse.newBuilder()\n-                .setStatus(Status.newBuilder().build())\n+                .setStatus(Status.newBuilder().setCode(Code.OK_VALUE).build())\n                 .setOkResponse(OkHttpResponse.newBuilder().build())\n                 .build();\n \n+\n+        /*CheckResponse response1 = CheckResponse.newBuilder()\n+                .setStatus(Status.newBuilder().setCode(Code.UNAUTHENTICATED_VALUE).build())\n+                .setDeniedResponse(DeniedHttpResponse.newBuilder().build())\n+                .build(); */\n+\n+        Map<String, String> headers = request.getAttributes().getRequest().getHttp().getHeadersMap();\n+\n+\n         // Use responseObserver to send a single response back\n-        responseObserver.onNext(response);\n+        CheckResponse response1 = JWTValidator.validateToken(headers);\n+        //System.out.println(\"this is response \"+ response1);", "originalCommit": "ee38e758847971a3aadd5d01521288cec3937e46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUyMjM3NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1424#discussion_r568522375", "bodyText": "This was removed", "author": "chashikajw", "createdAt": "2021-02-02T11:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY3MTY5NA=="}], "type": "inlineReview", "revised_code": null}]}