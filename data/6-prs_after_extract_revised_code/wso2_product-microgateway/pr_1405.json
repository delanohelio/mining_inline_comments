{"pr_number": 1405, "pr_title": "add sample claim retriever implementation", "pr_createdAt": "2020-08-28T03:55:13Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1405", "timeline": [{"oid": "9d4188f4dfc9577307ceb4a0f6dc46f2139a9b0b", "url": "https://github.com/wso2/product-microgateway/commit/9d4188f4dfc9577307ceb4a0f6dc46f2139a9b0b", "message": "add sample claim retriever implementation", "committedDate": "2020-08-28T03:54:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzMjYzNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1405#discussion_r478832635", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        URL url = new URL(userInfoEndpoint);\n          \n          \n            \n                        // Using `java.net.*` libs here to keep the simplicity and avoid the need of third party libs.\n          \n          \n            \n                        // You can any third party http libs to do the same differently if you prefer\n          \n          \n            \n                        URL url = new URL(userInfoEndpoint);", "author": "praminda", "createdAt": "2020-08-28T05:06:52Z", "path": "samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.wso2.micro.gateway.jwt.generator;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.io.BufferedReader;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+import java.security.KeyManagementException;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSocketFactory;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+/**\n+ * Class to retrieve user claims from Key Manager component of the API Manager.\n+ */\n+public class SampleClaimRetriever extends AbstractMGWClaimRetriever {\n+    private static final Logger logger = LogManager.getLogger(AbstractMGWJWTGenerator.class);\n+    private SSLSocketFactory sslSocketFactory;\n+    private String username;\n+    private String password;\n+    private String serverUrl;\n+\n+    public SampleClaimRetriever(String trustStorePath, String trustStoreLocation,\n+                                 Map<String, String> configurationMap) {\n+        super(trustStorePath, trustStoreLocation, configurationMap);\n+        //the following properties are populated by default\n+        this.username = configurationMap.get(\"username\");\n+        this.password = configurationMap.get(\"password\");\n+        this.serverUrl = configurationMap.get(\"serverUrl\");\n+        sslSocketFactory = createSSLSocketFactory();\n+    }\n+\n+    @Override\n+    public List<ClaimDTO> retrieveClaims(Map<String, Object> authContext) {\n+        try {\n+            HttpsURLConnection urlConn = null;\n+            String userInfoEndpoint = serverUrl + \"/keymanager-operations/user-info/claims/generate\";\n+            URL url = new URL(userInfoEndpoint);", "originalCommit": "9d4188f4dfc9577307ceb4a0f6dc46f2139a9b0b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7475d61039601732a8fdd6d535f7569bef4806c", "chunk": "diff --git a/samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java b/samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java\nindex eb999be58..7d40416d6 100644\n--- a/samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java\n+++ b/samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java\n\n@@ -67,6 +67,8 @@ public class SampleClaimRetriever extends AbstractMGWClaimRetriever {\n         try {\n             HttpsURLConnection urlConn = null;\n             String userInfoEndpoint = serverUrl + \"/keymanager-operations/user-info/claims/generate\";\n+            // Using `java.net.*` libs here to keep the simplicity and avoid the need of third party libs.\n+            // You can any third party http libs to do the same differently if you prefer\n             URL url = new URL(userInfoEndpoint);\n             urlConn = (HttpsURLConnection) url.openConnection();\n             urlConn.setSSLSocketFactory(sslSocketFactory);\n"}}, {"oid": "b7475d61039601732a8fdd6d535f7569bef4806c", "url": "https://github.com/wso2/product-microgateway/commit/b7475d61039601732a8fdd6d535f7569bef4806c", "message": "Update samples/sample-jwt-generator/src/main/java/sample/jwt/generator/SampleClaimRetriever.java\n\nCo-authored-by: Praminda <pramindabj@gmail.com>", "committedDate": "2020-09-11T04:17:06Z", "type": "commit"}]}