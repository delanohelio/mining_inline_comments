{"pr_number": 1072, "pr_title": "Provide descriptive error message when an invalid URL is provided.", "pr_createdAt": "2020-02-29T09:24:31Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1072", "timeline": [{"oid": "cbdd95b2598da65e3282cec591cf552f6a563da5", "url": "https://github.com/wso2/product-microgateway/commit/cbdd95b2598da65e3282cec591cf552f6a563da5", "message": "Provide descriptive error message when a valid url is not present under extension or servers object", "committedDate": "2020-02-29T09:14:24Z", "type": "commit"}, {"oid": "ecd3a1545479a43e199a83ef7b9e30d3bf576d6b", "url": "https://github.com/wso2/product-microgateway/commit/ecd3a1545479a43e199a83ef7b9e30d3bf576d6b", "message": "ignore considering the servers object as a sandbox endpoint", "committedDate": "2020-02-29T09:14:55Z", "type": "commit"}, {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "url": "https://github.com/wso2/product-microgateway/commit/1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "message": "Merge branch 'master' into bug-fixes-beta", "committedDate": "2020-02-29T09:25:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY1Ng==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386016656", "bodyText": "This will not look good on the bash output. output will be printed as,\nGenerating sources...\n[DONE]", "author": "praminda", "createdAt": "2020-02-29T09:52:37Z", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -124,7 +124,7 @@ public void execute() {\n             }\n             String toolkitConfigPath = CmdUtils.getMainConfigLocation();\n             init(projectName, toolkitConfigPath, deploymentConfigPath);\n-            outStream.print(\"Generating sources...\");\n+            outStream.print(\"Generating sources...\\n\");", "originalCommit": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxODYzMA==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386018630", "bodyText": "Otherwise, it will look like,\nGenerating sources...micro-gw: Error...\nIMO, this does not look great either. So shall we add \"\\n\" character to beginning of the error message", "author": "VirajSalaka", "createdAt": "2020-02-29T10:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0NzUyOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386047529", "bodyText": "I have a fix in my mind. I'll try that later. For now lets merge with \\n", "author": "praminda", "createdAt": "2020-02-29T18:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY1Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY4Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386016683", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * sets endpointUrl and isEtcdEnabled.\n          \n          \n            \n                 * Sets endpointUrl and isEtcdEnabled.", "author": "praminda", "createdAt": "2020-02-29T09:53:23Z", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java", "diffHunk": "@@ -55,37 +52,25 @@ public String getEndpointUrl() {\n     }\n \n     /**\n-     * sets endpointUrl and isEtcdEnabled\n+     * sets endpointUrl and isEtcdEnabled.", "originalCommit": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3NDIxMg==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386074212", "bodyText": "added via 8b13b9b", "author": "VirajSalaka", "createdAt": "2020-03-01T03:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "chunk": "diff --git a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java\nindex 3fbcc155b..9b3d4c8b4 100644\n--- a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java\n+++ b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java\n\n@@ -52,7 +52,7 @@ public class MgwEndpointDTO {\n     }\n \n     /**\n-     * sets endpointUrl and isEtcdEnabled.\n+     * Sets endpointUrl and isEtcdEnabled.\n      * endpointUrl could be in the format of either 'etcd_key, default url' or 'url'.\n      * Validation in here is moved to {@link EndpointListRouteDTO} to provide proper error message.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzEzNw==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386017137", "bodyText": "Shouldn't we propagate e to the top? not only the message?", "author": "praminda", "createdAt": "2020-02-29T10:01:58Z", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java", "diffHunk": "@@ -41,51 +42,87 @@ public BallerinaPath() {\n     }\n \n     @Override\n-    public BallerinaPath buildContext(PathItem item, ExtendedAPI api) throws BallerinaServiceGenException {\n+    public BallerinaPath buildContext(PathItem item, ExtendedAPI api) throws BallerinaServiceGenException,\n+            CLICompileTimeException {\n         Map.Entry<String, BallerinaOperation> entry;\n         BallerinaOperation operation;\n \n         // Swagger PathItem object doesn't provide a iterable structure for operations\n         // Therefore we have to manually check if each http verb exists\n         if (item.getGet() != null) {\n             setServersToOperationLevel(item.getGet(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getGet(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getGet(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under GET resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"get\", operation);\n             operations.add(entry);\n         }\n         if (item.getPut() != null) {\n             setServersToOperationLevel(item.getPut(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getPut(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getPut(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under PUT resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"put\", operation);\n             operations.add(entry);\n         }\n         if (item.getPost() != null) {\n             setServersToOperationLevel(item.getPost(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getPost(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getPost(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under POST resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"post\", operation);\n             operations.add(entry);\n         }\n         if (item.getDelete() != null) {\n             setServersToOperationLevel(item.getDelete(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getDelete(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getDelete(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under DELETE resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"delete\", operation);\n             operations.add(entry);\n         }\n         if (item.getOptions() != null) {\n             setServersToOperationLevel(item.getOptions(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getOptions(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getOptions(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under OPTIONS resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"options\", operation);\n             operations.add(entry);\n         }\n         if (item.getHead() != null) {\n             setServersToOperationLevel(item.getHead(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getHead(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getHead(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under HEAD resource.\\n\\t-\"", "originalCommit": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0NTg1Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386045853", "bodyText": "Yes its better to propagate the stack trace to the top. So the stack trace will be in the log file instead of the console", "author": "Rajith90", "createdAt": "2020-02-29T18:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MjA4Nw==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386072087", "bodyText": "Yes. I will fix that.", "author": "VirajSalaka", "createdAt": "2020-03-01T02:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3NDE4OA==", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386074188", "bodyText": "fixed via 8b13b9b", "author": "VirajSalaka", "createdAt": "2020-03-01T03:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzEzNw=="}], "type": "inlineReview", "revised_code": {"commit": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "chunk": "diff --git a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java\nindex a075c8fce..0f19e89ed 100644\n--- a/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java\n+++ b/components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java\n\n@@ -55,7 +55,7 @@ public class BallerinaPath implements BallerinaOpenAPIObject<BallerinaPath, Path\n                 operation = new BallerinaOperation().buildContext(item.getGet(), api);\n             } catch (CLICompileTimeException e) {\n                 throw new CLICompileTimeException(\"Error while parsing the information under GET resource.\\n\\t-\"\n-                        + e.getErrorMessage());\n+                        + e.getTerminalMsg(), e);\n             }\n             entry = new AbstractMap.SimpleEntry<>(\"get\", operation);\n             operations.add(entry);\n"}}, {"oid": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "url": "https://github.com/wso2/product-microgateway/commit/8b13b9b1338bc7afc348bf0799d3db5050254d2d", "message": "throw the actual error when CLICompileTime exception occurs", "committedDate": "2020-03-01T03:33:59Z", "type": "commit"}, {"oid": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "url": "https://github.com/wso2/product-microgateway/commit/8b13b9b1338bc7afc348bf0799d3db5050254d2d", "message": "throw the actual error when CLICompileTime exception occurs", "committedDate": "2020-03-01T03:33:59Z", "type": "forcePushed"}, {"oid": "b970eb250d9422a6c6ca7ff99370d4db85c55b58", "url": "https://github.com/wso2/product-microgateway/commit/b970eb250d9422a6c6ca7ff99370d4db85c55b58", "message": "Merge branch 'master' into bug-fixes-beta", "committedDate": "2020-03-01T03:35:10Z", "type": "commit"}, {"oid": "5043dff0f24b4adf3147e5a89ab88116bb68da03", "url": "https://github.com/wso2/product-microgateway/commit/5043dff0f24b4adf3147e5a89ab88116bb68da03", "message": "bug fix: add the CLICompileTimeException's exception when it is converted to CLIRuntimeException", "committedDate": "2020-03-01T04:51:46Z", "type": "commit"}]}