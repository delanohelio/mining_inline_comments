{"pr_number": 1903, "pr_title": "Adding test to use PV for logHome in MII domain", "pr_createdAt": "2020-09-04T02:29:55Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1903", "timeline": [{"oid": "956941ec75eece0d6587cebc51405e11e227490d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/956941ec75eece0d6587cebc51405e11e227490d", "message": "logs on PV", "committedDate": "2020-09-01T20:34:49Z", "type": "commit"}, {"oid": "9c0391b5bca17bda061238c6b323c62ac4be1d87", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9c0391b5bca17bda061238c6b323c62ac4be1d87", "message": "use PV for logs", "committedDate": "2020-09-03T18:46:02Z", "type": "commit"}, {"oid": "81fad563b65fd992159d92161d3b38e5509022ba", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/81fad563b65fd992159d92161d3b38e5509022ba", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into test_loghomeonpv", "committedDate": "2020-09-03T19:17:19Z", "type": "commit"}, {"oid": "abf38a20f2edccb7ff114df5f1b8bbdc9cab4749", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/abf38a20f2edccb7ff114df5f1b8bbdc9cab4749", "message": "Revert to develop branch code", "committedDate": "2020-09-03T19:20:17Z", "type": "commit"}, {"oid": "ae5378de330ba4c3de5b90b55b9633264918c8cd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ae5378de330ba4c3de5b90b55b9633264918c8cd", "message": "fix pv path", "committedDate": "2020-09-03T20:21:24Z", "type": "commit"}, {"oid": "977f55241ce6c524ca7f66ba62a4c7dd15b71e0a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/977f55241ce6c524ca7f66ba62a4c7dd15b71e0a", "message": "code refactor", "committedDate": "2020-09-03T20:51:38Z", "type": "commit"}, {"oid": "d8e28793a1676bab8327b6cd0b10e1fb0bfdd369", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d8e28793a1676bab8327b6cd0b10e1fb0bfdd369", "message": "fixing path", "committedDate": "2020-09-03T21:48:32Z", "type": "commit"}, {"oid": "c9f154a632d2e008e9ecc47efbb17c407d64da88", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c9f154a632d2e008e9ecc47efbb17c407d64da88", "message": "fix comments", "committedDate": "2020-09-04T02:28:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUyOTE4NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1903#discussion_r484529184", "bodyText": "We should check for non ZERO size of the log file or look for certain String on the Log file", "author": "anpanigr", "createdAt": "2020-09-07T17:24:53Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java", "diffHunk": "@@ -224,27 +266,41 @@ public static void initAll(@Namespaces(2) List<String> namespaces) {\n   @BeforeEach\n   public void beforeEach() {\n \n-    // check admin server pod is ready\n-    logger.info(\"Wait for admin server pod {0} to be ready in namespace {1}\",\n+    logger.info(\"Check admin service and pod {0} is created in namespace {1}\",\n         adminServerPodName, domainNamespace);\n-    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n-    logger.info(\"Check admin service {0} is created in namespace {1}\",\n-        adminServerPodName, domainNamespace);\n-    checkServiceExists(adminServerPodName, domainNamespace);\n+    checkPodReadyAndServiceExists(adminServerPodName, domainUid, domainNamespace);\n \n-    // check managed server pods are ready\n+    // check managed server services and pods are ready\n     for (int i = 1; i <= replicaCount; i++) {\n-      logger.info(\"Wait for managed server pod {0} to be ready in namespace {1}\",\n-          managedServerPrefix + i, domainNamespace);\n-      checkPodReady(managedServerPrefix + i, domainUid, domainNamespace);\n+      logger.info(\"Wait for managed server services and pods are created in namespace {0}\",\n+          domainNamespace);\n+      checkPodReadyAndServiceExists(managedServerPrefix + i, domainUid, domainNamespace);\n     }\n+  }\n+\n+  /**\n+   * Check server logs are written on PV.", "originalCommit": "c9f154a632d2e008e9ecc47efbb17c407d64da88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8f9c2769b409a578cd88370ac5e4793fa228b00e", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\nindex 83c40280c2..f861ed189c 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n\n@@ -283,23 +283,25 @@ class ItMiiUpdateDomainConfig {\n    */\n   @Test\n   @Order(1)\n-  @DisplayName(\"Check the server logs are written on PV\")\n+  @DisplayName(\"Check the server logs are written on PV, look for string RUNNING in server log\")\n   public void testServerLogsAreOnPV() {\n \n     // check server logs are written on PV\n-    String command = \"ls /shared/logs/\" + adminServerName + \".log\";\n+    String command = \"grep RUNNING /shared/logs/\" + adminServerName + \".log\";\n     logger.info(\"Checking server logs are written on PV by running the command {0} on pod {1}, namespace {2}\",\n         command, adminServerPodName, domainNamespace);\n     V1Pod adminPod = assertDoesNotThrow(() ->\n             Kubernetes.getPod(domainNamespace, null, adminServerPodName),\n         \"Could not get the admin pod in namespace \" + domainNamespace);\n+\n     ExecResult result = assertDoesNotThrow(() -> Kubernetes.exec(adminPod, null, true,\n         \"/bin/sh\", \"-c\", command),\n         String.format(\"Could not execute the command %s in pod %s, namespace %s\",\n             command, adminServerPodName, domainNamespace));\n+\n     assertTrue(result.exitValue() == 0,\n-        String.format(\"Couldn't access the server log on PV, exitvalue is %s, stderr is %s, stdout is %s\",\n-            result.exitValue(), result.stderr(), result.stdout()));\n+        String.format(\"Command %s failed with exitvalue is %s, stderr is %s, stdout is %s\",\n+            command, result.exitValue(), result.stderr(), result.stdout()));\n \n   }\n \n"}}, {"oid": "8f9c2769b409a578cd88370ac5e4793fa228b00e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8f9c2769b409a578cd88370ac5e4793fa228b00e", "message": "look for string RUNNING in server log", "committedDate": "2020-09-09T16:12:45Z", "type": "commit"}, {"oid": "47f4eece95b86f76660db16063d86ff7f4982946", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/47f4eece95b86f76660db16063d86ff7f4982946", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into test_loghomeonpv", "committedDate": "2020-09-09T16:15:35Z", "type": "commit"}, {"oid": "d114d18ae97de652d034cb311d55d7c4e9c4f94d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d114d18ae97de652d034cb311d55d7c4e9c4f94d", "message": "modify success/failure criteria", "committedDate": "2020-09-09T17:50:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzA1Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1903#discussion_r485917056", "bodyText": "add some indentation here to make the code easier to read.", "author": "xiancao", "createdAt": "2020-09-09T20:56:19Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java", "diffHunk": "@@ -758,14 +811,23 @@ private static void createDomainResource(\n                             .name(adminSecretName)\n                             .namespace(domNamespace))\n                     .includeServerOutInPodLog(true)\n+                    .logHomeEnabled(Boolean.TRUE)\n+                    .logHome(\"/shared/logs\")\n                     .serverStartPolicy(\"IF_NEEDED\")\n                     .serverPod(new ServerPod()\n                             .addEnvItem(new V1EnvVar()\n                                     .name(\"JAVA_OPTIONS\")\n                                     .value(\"-Dweblogic.StdoutDebugEnabled=false\"))\n                             .addEnvItem(new V1EnvVar()\n                                     .name(\"USER_MEM_ARGS\")\n-                                    .value(\"-Djava.security.egd=file:/dev/./urandom \")))\n+                                    .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n+                            .addVolumesItem(new V1Volume()\n+                            .name(pvName)", "originalCommit": "d114d18ae97de652d034cb311d55d7c4e9c4f94d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669cf0b00d7b45a887930ba6f9065957701af72b", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\nindex 25b9dad08a..e3828a6aee 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n\n@@ -822,9 +822,9 @@ class ItMiiUpdateDomainConfig {\n                                     .name(\"USER_MEM_ARGS\")\n                                     .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n                             .addVolumesItem(new V1Volume()\n-                            .name(pvName)\n-                            .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n-                                .claimName(pvcName)))\n+                                    .name(pvName)\n+                                    .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n+                                        .claimName(pvcName)))\n                             .addVolumeMountsItem(new V1VolumeMount()\n                                 .mountPath(\"/shared\")\n                                 .name(pvName)))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzE4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1903#discussion_r485917185", "bodyText": "same here", "author": "xiancao", "createdAt": "2020-09-09T20:56:33Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java", "diffHunk": "@@ -758,14 +811,23 @@ private static void createDomainResource(\n                             .name(adminSecretName)\n                             .namespace(domNamespace))\n                     .includeServerOutInPodLog(true)\n+                    .logHomeEnabled(Boolean.TRUE)\n+                    .logHome(\"/shared/logs\")\n                     .serverStartPolicy(\"IF_NEEDED\")\n                     .serverPod(new ServerPod()\n                             .addEnvItem(new V1EnvVar()\n                                     .name(\"JAVA_OPTIONS\")\n                                     .value(\"-Dweblogic.StdoutDebugEnabled=false\"))\n                             .addEnvItem(new V1EnvVar()\n                                     .name(\"USER_MEM_ARGS\")\n-                                    .value(\"-Djava.security.egd=file:/dev/./urandom \")))\n+                                    .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n+                            .addVolumesItem(new V1Volume()\n+                            .name(pvName)\n+                            .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()", "originalCommit": "d114d18ae97de652d034cb311d55d7c4e9c4f94d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669cf0b00d7b45a887930ba6f9065957701af72b", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\nindex 25b9dad08a..e3828a6aee 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiUpdateDomainConfig.java\n\n@@ -822,9 +822,9 @@ class ItMiiUpdateDomainConfig {\n                                     .name(\"USER_MEM_ARGS\")\n                                     .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n                             .addVolumesItem(new V1Volume()\n-                            .name(pvName)\n-                            .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n-                                .claimName(pvcName)))\n+                                    .name(pvName)\n+                                    .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n+                                        .claimName(pvcName)))\n                             .addVolumeMountsItem(new V1VolumeMount()\n                                 .mountPath(\"/shared\")\n                                 .name(pvName)))\n"}}, {"oid": "669cf0b00d7b45a887930ba6f9065957701af72b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/669cf0b00d7b45a887930ba6f9065957701af72b", "message": "fix indentation", "committedDate": "2020-09-09T21:10:45Z", "type": "commit"}, {"oid": "4dff5cf8246b6eadc8781ad3a2b64fd3dffa1d9e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4dff5cf8246b6eadc8781ad3a2b64fd3dffa1d9e", "message": "adding pipefail", "committedDate": "2020-09-09T21:13:42Z", "type": "commit"}]}