{"pr_number": 1541, "pr_title": "Assert improvements", "pr_createdAt": "2020-04-06T16:11:35Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1541", "timeline": [{"oid": "94dd05d7d49262d56ccbc30583df1f6f6ba39b75", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/94dd05d7d49262d56ccbc30583df1f6f6ba39b75", "message": "check for NPEs", "committedDate": "2020-04-03T21:18:52Z", "type": "commit"}, {"oid": "3af080347bfdd97690828ffb23f640107ae1a9cc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3af080347bfdd97690828ffb23f640107ae1a9cc", "message": "fix Domaina assertions", "committedDate": "2020-04-03T23:33:21Z", "type": "commit"}, {"oid": "a121be2bdd3f3dc80631715bc641c20e02432c73", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a121be2bdd3f3dc80631715bc641c20e02432c73", "message": "Merge branch 'mii-new-integration-tests' of https://github.com/oracle/weblogic-kubernetes-operator into assert-improvements", "committedDate": "2020-04-06T16:08:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MDk0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1541#discussion_r404270943", "bodyText": "please make sure the assertions have failure messages", "author": "markxnelson", "createdAt": "2020-04-06T17:38:36Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Domain.java", "diffHunk": "@@ -3,37 +3,44 @@\n \n package oracle.weblogic.kubernetes.assertions.impl;\n \n+import java.io.IOException;\n import java.util.concurrent.Callable;\n \n import io.kubernetes.client.openapi.ApiException;\n-import io.kubernetes.client.openapi.apis.ApiextensionsV1Api;\n+import io.kubernetes.client.openapi.Configuration;\n import io.kubernetes.client.openapi.apis.ApiextensionsV1beta1Api;\n-import io.kubernetes.client.openapi.apis.ApisApi;\n import io.kubernetes.client.openapi.apis.CustomObjectsApi;\n import io.kubernetes.client.openapi.models.V1beta1CustomResourceDefinition;\n+import io.kubernetes.client.util.ClientBuilder;\n \n import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class Domain {\n \n-  private static CustomObjectsApi customObjectsApi = new CustomObjectsApi();\n-  private static ApiextensionsV1Api apiextensionsV1Api = new ApiextensionsV1Api();\n-  private static ApiextensionsV1beta1Api apiextensionsV1beta1Api = new ApiextensionsV1beta1Api();\n-  private static ApisApi apisApi = new ApisApi();\n+  static {\n+    try {\n+      Configuration.setDefaultApiClient(ClientBuilder.defaultClient());\n+    } catch (IOException ioex) {\n+      throw new ExceptionInInitializerError(ioex);\n+    }\n+  }\n \n+  private static final CustomObjectsApi customObjectsApi = new CustomObjectsApi();\n+  private static final ApiextensionsV1beta1Api apiextensionsV1beta1Api = new ApiextensionsV1beta1Api();\n \n   /**\n    * Check if the Domain CRD exists\n+   *\n    * @return true if domains.weblogic.oracle CRD exists otherwise false\n    * @throws ApiException when Domain CRD doesn't exist\n    */\n   public static boolean doesCRDExist() throws ApiException {\n     try {\n-      V1beta1CustomResourceDefinition domainBetaCrd =\n-          apiextensionsV1beta1Api.readCustomResourceDefinition(\n-              \"domains.weblogic.oracle\", null, null, null);\n+      V1beta1CustomResourceDefinition domainBetaCrd\n+          = apiextensionsV1beta1Api.readCustomResourceDefinition(\n+          \"domains.weblogic.oracle\", null, null, null);\n       assertNotNull(domainBetaCrd);", "originalCommit": "a121be2bdd3f3dc80631715bc641c20e02432c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjIxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1541#discussion_r404282210", "bodyText": "Shall I wait to merge?", "author": "rjeberhard", "createdAt": "2020-04-06T17:57:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MDk0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NDE4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1541#discussion_r404284189", "bodyText": "Fixed it. Please go ahead and merge it.", "author": "sankarpn", "createdAt": "2020-04-06T18:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MDk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "dcce1480905f3fb1c1d0db4d6e22f8ad2c94409d", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Domain.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Domain.java\nindex 1c809a926d..16cb3ba65f 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Domain.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Domain.java\n\n@@ -41,8 +41,7 @@ public class Domain {\n       V1beta1CustomResourceDefinition domainBetaCrd\n           = apiextensionsV1beta1Api.readCustomResourceDefinition(\n           \"domains.weblogic.oracle\", null, null, null);\n-      assertNotNull(domainBetaCrd);\n-      logger.info(\"domainBetaCrd is not null\");\n+      assertNotNull(domainBetaCrd, \"Domain CRD is null\");\n       return true;\n     } catch (ApiException aex) {\n       if (aex.getCode() == 404) {\n"}}, {"oid": "dcce1480905f3fb1c1d0db4d6e22f8ad2c94409d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dcce1480905f3fb1c1d0db4d6e22f8ad2c94409d", "message": "Added assert message", "committedDate": "2020-04-06T17:58:48Z", "type": "commit"}]}