{"pr_number": 2039, "pr_title": "Adding application high availability check in operator upgrade tests", "pr_createdAt": "2020-11-06T20:48:09Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039", "timeline": [{"oid": "5913b9ffc9f199c713f06b10a65169399ca85554", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5913b9ffc9f199c713f06b10a65169399ca85554", "message": "adding app high availability check", "committedDate": "2020-11-06T18:53:29Z", "type": "commit"}, {"oid": "84a0556dc24b04e8aee4ae6a07e39f755c979156", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/84a0556dc24b04e8aee4ae6a07e39f755c979156", "message": "move checkAppIsRunning to common utils", "committedDate": "2020-11-06T20:23:06Z", "type": "commit"}, {"oid": "81c9c7a918201f1d213e0e26878d4434922592b2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/81c9c7a918201f1d213e0e26878d4434922592b2", "message": "update test description", "committedDate": "2020-11-06T20:46:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNzQzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039#discussion_r520007433", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Check application availability while the operator upgrade is happening and once after the ugprade is complete\n          \n          \n            \n               * Check application availability while the operator upgrade is happening and once the ugprade is complete", "author": "sankarpn", "createdAt": "2020-11-09T17:55:56Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java", "diffHunk": "@@ -402,4 +461,90 @@ private void checkDomainStarted(String domainUid, String domainNamespace) {\n     };\n   }\n \n+  private void deployAndAccessApplication(String namespace) {\n+    logger.info(\"Getting node port for admin server default channel\");\n+    int serviceNodePort = assertDoesNotThrow(() ->\n+            getServiceNodePort(namespace, getExternalServicePodName(adminServerPodName,\n+                TestConstants.OLD_DEFAULT_EXTERNAL_SERVICE_NAME_SUFFIX), \"default\"),\n+        \"Getting admin server node port failed\");\n+    assertNotEquals(-1, serviceNodePort, \"admin server default node port is not valid\");\n+\n+    Path archivePath = Paths.get(ITTESTS_DIR, \"../src/integration-tests/apps/testwebapp.war\");\n+    logger.info(\"Deploying application {0} to domain {1} cluster target cluster-1 in namespace {2}\",\n+        archivePath, domainUid, namespace);\n+    ExecResult result = DeployUtil.deployUsingRest(K8S_NODEPORT_HOST,\n+        String.valueOf(serviceNodePort),\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT,\n+        \"cluster-1\", archivePath, null, \"testwebapp\");\n+    assertNotNull(result, \"Application deployment failed\");\n+    logger.info(\"Application deployment returned {0}\", result.toString());\n+    assertEquals(\"202\", result.stdout(), \"Deployment didn't return HTTP status code 202\");\n+\n+    // check if the application is accessible inside of a server pod using quick retry policy\n+    logger.info(\"Check and wait for the application to become ready\");\n+    for (int i = 1; i <= replicaCount; i++) {\n+      checkAppIsRunning(withQuickRetryPolicy, namespace, managedServerPodNamePrefix + i,\n+          \"8001\", \"testwebapp/index.jsp\", managedServerPodNamePrefix + i);\n+    }\n+  }\n+\n+  /**\n+   * Check application availability while the operator upgrade is happening and once after the ugprade is complete", "originalCommit": "81c9c7a918201f1d213e0e26878d4434922592b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32085f3e10609bab810d35605909b64b3e99ac04", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\nindex e32721f2da..6b4c432d85 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n\n@@ -489,7 +506,7 @@ public class ItOperatorUpgrade {\n   }\n \n   /**\n-   * Check application availability while the operator upgrade is happening and once after the ugprade is complete\n+   * Check application availability while the operator upgrade is happening and once the ugprade is complete\n    * by accessing the application inside the managed server pods.\n    */\n   private static void collectAppAvailability(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwODk0MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039#discussion_r520008940", "bodyText": "Is there a reason for the delay here?", "author": "sankarpn", "createdAt": "2020-11-09T17:58:23Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java", "diffHunk": "@@ -402,4 +461,90 @@ private void checkDomainStarted(String domainUid, String domainNamespace) {\n     };\n   }\n \n+  private void deployAndAccessApplication(String namespace) {\n+    logger.info(\"Getting node port for admin server default channel\");\n+    int serviceNodePort = assertDoesNotThrow(() ->\n+            getServiceNodePort(namespace, getExternalServicePodName(adminServerPodName,\n+                TestConstants.OLD_DEFAULT_EXTERNAL_SERVICE_NAME_SUFFIX), \"default\"),\n+        \"Getting admin server node port failed\");\n+    assertNotEquals(-1, serviceNodePort, \"admin server default node port is not valid\");\n+\n+    Path archivePath = Paths.get(ITTESTS_DIR, \"../src/integration-tests/apps/testwebapp.war\");\n+    logger.info(\"Deploying application {0} to domain {1} cluster target cluster-1 in namespace {2}\",\n+        archivePath, domainUid, namespace);\n+    ExecResult result = DeployUtil.deployUsingRest(K8S_NODEPORT_HOST,\n+        String.valueOf(serviceNodePort),\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT,\n+        \"cluster-1\", archivePath, null, \"testwebapp\");\n+    assertNotNull(result, \"Application deployment failed\");\n+    logger.info(\"Application deployment returned {0}\", result.toString());\n+    assertEquals(\"202\", result.stdout(), \"Deployment didn't return HTTP status code 202\");\n+\n+    // check if the application is accessible inside of a server pod using quick retry policy\n+    logger.info(\"Check and wait for the application to become ready\");\n+    for (int i = 1; i <= replicaCount; i++) {\n+      checkAppIsRunning(withQuickRetryPolicy, namespace, managedServerPodNamePrefix + i,\n+          \"8001\", \"testwebapp/index.jsp\", managedServerPodNamePrefix + i);\n+    }\n+  }\n+\n+  /**\n+   * Check application availability while the operator upgrade is happening and once after the ugprade is complete\n+   * by accessing the application inside the managed server pods.\n+   */\n+  private static void collectAppAvailability(\n+      String domainNamespace,\n+      String operatorNamespace,\n+      List<Integer> appAvailability,\n+      String managedServerPrefix,\n+      int replicaCount,\n+      String internalPort,\n+      String appPath\n+  ) {\n+    // Access the pod periodically to check application's availability while upgrade is happening\n+    // and after upgrade is complete.\n+    // appAccessedAfterUpgrade is used to access the app once after upgrade is complete\n+    boolean appAccessedAfterUpgrade = false;\n+    while (!appAccessedAfterUpgrade) {\n+      boolean isUpgradeComplete = checkHelmReleaseRevision(OPERATOR_RELEASE_NAME, operatorNamespace, \"2\");\n+      // upgrade is not complete or app is not accessed after upgrade\n+      if (!isUpgradeComplete || !appAccessedAfterUpgrade) {\n+        for (int i = 1; i <= replicaCount; i++) {\n+          if (appAccessibleInPod(\n+              domainNamespace,\n+              managedServerPrefix + i,\n+              internalPort,\n+              appPath,\n+              managedServerPrefix + i)) {\n+            appAvailability.add(1);\n+            logger.fine(\"application is accessible in pod \" + managedServerPrefix + i);\n+          } else {\n+            appAvailability.add(0);\n+            logger.fine(\"application is not accessible in pod \" + managedServerPrefix + i);\n+          }\n+        }\n+      }\n+      if (isUpgradeComplete) {\n+        logger.info(\"Upgrade is complete and app is accessed after upgrade\");\n+        appAccessedAfterUpgrade = true;\n+      }\n+\n+      try {", "originalCommit": "81c9c7a918201f1d213e0e26878d4434922592b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMDk5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039#discussion_r520030995", "bodyText": "This can be removed as upgrade is not taking much time. This was added to introduce some delay if the other thread is going to take long time.", "author": "vanajamukkara", "createdAt": "2020-11-09T18:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwODk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "32085f3e10609bab810d35605909b64b3e99ac04", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\nindex e32721f2da..6b4c432d85 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n\n@@ -489,7 +506,7 @@ public class ItOperatorUpgrade {\n   }\n \n   /**\n-   * Check application availability while the operator upgrade is happening and once after the ugprade is complete\n+   * Check application availability while the operator upgrade is happening and once the ugprade is complete\n    * by accessing the application inside the managed server pods.\n    */\n   private static void collectAppAvailability(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxMTE5Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039#discussion_r520011196", "bodyText": "what is the point of checking for both null and not null? If its null isn't it the next statement going to throw NPE?", "author": "sankarpn", "createdAt": "2020-11-09T18:01:57Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java", "diffHunk": "@@ -169,7 +190,9 @@ public void testOperatorUpgradeFrom3_0_2(@Namespaces(3) List<String> namespaces)\n    */\n   @AfterEach\n   public void tearDown() {\n-    if (System.getenv(\"SKIP_CLEANUP\") == null) {\n+    if (System.getenv(\"SKIP_CLEANUP\") == null\n+        || (System.getenv(\"SKIP_CLEANUP\") != null", "originalCommit": "81c9c7a918201f1d213e0e26878d4434922592b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA2ODM5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2039#discussion_r520068397", "bodyText": "clarified on slack", "author": "vanajamukkara", "createdAt": "2020-11-09T19:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxMTE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e733aa6f2c00386af5d88c8c74d6fd311c8430e0", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\nindex e32721f2da..5eb0a093fe 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n\n@@ -184,6 +184,23 @@ public class ItOperatorUpgrade {\n     upgradeOperator(\"3.0.2\", true);\n   }\n \n+\n+  /**\n+   * Operator upgrade from 3.0.3 to latest.\n+   * Install 3.0.3 Operator from GitHub chart repository and create a domain.\n+   * Deploy an application to the cluster in domain and verify the application can be\n+   * accessed while the operator is upgraded and after the upgrade.\n+   * Upgrade operator with latest Operator image and verify CRD version and image are updated\n+   * and the domain can be managed by scaling the cluster using operator REST api.\n+   */\n+  @Test\n+  @DisplayName(\"Upgrade Operator from 3.0.3 to latest\")\n+  @MustNotRunInParallel\n+  public void testOperatorUpgradeFrom3_0_3(@Namespaces(3) List<String> namespaces) {\n+    this.namespaces = namespaces;\n+    upgradeOperator(\"3.0.3\", true);\n+  }\n+\n   /**\n    * Cleanup Kubernetes artifacts in the namespaces used by the test and\n    * delete CRD.\n"}}, {"oid": "e733aa6f2c00386af5d88c8c74d6fd311c8430e0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e733aa6f2c00386af5d88c8c74d6fd311c8430e0", "message": "adding 3.0.3 upgrade test", "committedDate": "2020-11-09T18:14:24Z", "type": "commit"}, {"oid": "32085f3e10609bab810d35605909b64b3e99ac04", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32085f3e10609bab810d35605909b64b3e99ac04", "message": "Update integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java\n\nCo-authored-by: Sankar Periyathambi Neelakandan <45743425+sankarpn@users.noreply.github.com>", "committedDate": "2020-11-09T18:16:14Z", "type": "commit"}, {"oid": "5cc605aff9815e0ac445015deb7d480b69c8e052", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5cc605aff9815e0ac445015deb7d480b69c8e052", "message": "removing sleep", "committedDate": "2020-11-09T18:49:26Z", "type": "commit"}, {"oid": "2cc2b63ec6a37a9ca5f9d6dbfc13b30814642722", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2cc2b63ec6a37a9ca5f9d6dbfc13b30814642722", "message": "Merge branch 'highavailabilitytests' of https://github.com/oracle/weblogic-kubernetes-operator into highavailabilitytests", "committedDate": "2020-11-09T18:50:16Z", "type": "commit"}]}