{"pr_number": 1988, "pr_title": "Improve nightly stability for ItIntrospectVersion.testUpdateImageName", "pr_createdAt": "2020-10-13T22:07:28Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1988", "timeline": [{"oid": "393a85048f74b7daab4a384aa202a1d9c8558631", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/393a85048f74b7daab4a384aa202a1d9c8558631", "message": "improve nightly stability", "committedDate": "2020-10-13T14:41:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2MTY3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1988#discussion_r504361674", "bodyText": "Use the method checkPodReadyAndServiceExists(adminServerPodName, domainUid, domainNamespace)\nto combine  checkServiceExists() and checkPodReady()", "author": "anpanigr", "createdAt": "2020-10-14T02:24:04Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -906,6 +906,26 @@ public void testUpdateImageName() {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n+    // verify the admin server service created\n+    checkServiceExists(adminServerPodName, domainNamespace);", "originalCommit": "393a85048f74b7daab4a384aa202a1d9c8558631", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "028014042674f4ff481f555f4a45c20b6a2b11ff", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\nindex 2dbd212380..a3047bac73 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\n\n@@ -906,24 +907,12 @@ public class ItIntrospectVersion {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n-    // verify the admin server service created\n-    checkServiceExists(adminServerPodName, domainNamespace);\n-\n-    // verify admin server pod is ready\n-    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n+    checkPodReadyAndServiceExists(adminServerPodName, domainUid, domainNamespace);\n \n-    // verify new cluster managed server services created\n     for (int i = 1; i <= replicaCount; i++) {\n       logger.info(\"Checking managed server service {0} is created in namespace {1}\",\n           managedServerPodNamePrefix + i, domainNamespace);\n-      checkServiceExists(managedServerPodNamePrefix + i, domainNamespace);\n-    }\n-\n-    // verify cluster managed server pods are ready\n-    for (int i = 1; i <= replicaCount; i++) {\n-      logger.info(\"Waiting for managed server pod {0} to be ready in namespace {1}\",\n-          managedServerPodNamePrefix + i, domainNamespace);\n-      checkPodReady(managedServerPodNamePrefix + i, domainUid, domainNamespace);\n+      checkPodReadyAndServiceExists(managedServerPodNamePrefix + i, domainUid, domainNamespace);\n     }\n \n     //verify admin server accessibility and the health of cluster members\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2MjA0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1988#discussion_r504362046", "bodyText": "Use the method checkPodReadyAndServiceExists()  to combine checkServiceExists() and checkPodReady()", "author": "anpanigr", "createdAt": "2020-10-14T02:25:27Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -906,6 +906,26 @@ public void testUpdateImageName() {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n+    // verify the admin server service created\n+    checkServiceExists(adminServerPodName, domainNamespace);\n+\n+    // verify admin server pod is ready\n+    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n+\n+    // verify new cluster managed server services created\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Checking managed server service {0} is created in namespace {1}\",\n+          managedServerPodNamePrefix + i, domainNamespace);\n+      checkServiceExists(managedServerPodNamePrefix + i, domainNamespace);\n+    }\n+\n+    // verify cluster managed server pods are ready\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Waiting for managed server pod {0} to be ready in namespace {1}\",\n+          managedServerPodNamePrefix + i, domainNamespace);\n+      checkPodReady(managedServerPodNamePrefix + i, domainUid, domainNamespace);", "originalCommit": "393a85048f74b7daab4a384aa202a1d9c8558631", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "028014042674f4ff481f555f4a45c20b6a2b11ff", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\nindex 2dbd212380..a3047bac73 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java\n\n@@ -906,24 +907,12 @@ public class ItIntrospectVersion {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n-    // verify the admin server service created\n-    checkServiceExists(adminServerPodName, domainNamespace);\n-\n-    // verify admin server pod is ready\n-    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n+    checkPodReadyAndServiceExists(adminServerPodName, domainUid, domainNamespace);\n \n-    // verify new cluster managed server services created\n     for (int i = 1; i <= replicaCount; i++) {\n       logger.info(\"Checking managed server service {0} is created in namespace {1}\",\n           managedServerPodNamePrefix + i, domainNamespace);\n-      checkServiceExists(managedServerPodNamePrefix + i, domainNamespace);\n-    }\n-\n-    // verify cluster managed server pods are ready\n-    for (int i = 1; i <= replicaCount; i++) {\n-      logger.info(\"Waiting for managed server pod {0} to be ready in namespace {1}\",\n-          managedServerPodNamePrefix + i, domainNamespace);\n-      checkPodReady(managedServerPodNamePrefix + i, domainUid, domainNamespace);\n+      checkPodReadyAndServiceExists(managedServerPodNamePrefix + i, domainUid, domainNamespace);\n     }\n \n     //verify admin server accessibility and the health of cluster members\n"}}, {"oid": "028014042674f4ff481f555f4a45c20b6a2b11ff", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/028014042674f4ff481f555f4a45c20b6a2b11ff", "message": "address review comment", "committedDate": "2020-10-14T17:23:23Z", "type": "commit"}]}