{"pr_number": 1472, "pr_title": "Support CRD v1 on Kubernetes 1.16", "pr_createdAt": "2020-03-16T16:59:55Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472", "timeline": [{"oid": "fd5cec52a4b6bc38109ef7416f0b1f8e634e77bd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fd5cec52a4b6bc38109ef7416f0b1f8e634e77bd", "message": "Initial Change for Helm 2.x/3.x comptibility", "committedDate": "2020-02-18T22:21:20Z", "type": "commit"}, {"oid": "81d4ccc6f1231f221103aaa1328422ec83d254bd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/81d4ccc6f1231f221103aaa1328422ec83d254bd", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243", "committedDate": "2020-02-19T18:36:47Z", "type": "commit"}, {"oid": "356b4a9b70207da0ac4b1aeb884afba654a6d795", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/356b4a9b70207da0ac4b1aeb884afba654a6d795", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243", "committedDate": "2020-02-20T16:08:55Z", "type": "commit"}, {"oid": "8c0f737dbd43c75ecdac70f1235ff00a3814d0a8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8c0f737dbd43c75ecdac70f1235ff00a3814d0a8", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243", "committedDate": "2020-02-20T19:48:14Z", "type": "commit"}, {"oid": "d9e1be19e1b09078982013281c63ba9be5ac2524", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d9e1be19e1b09078982013281c63ba9be5ac2524", "message": "Resolve review comment on PR", "committedDate": "2020-02-20T20:17:49Z", "type": "commit"}, {"oid": "fff87075faf5ea220ec908c01b4747c8ef80c0ed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fff87075faf5ea220ec908c01b4747c8ef80c0ed", "message": "Removed Helm Env varaiable dependency from the Test", "committedDate": "2020-02-20T23:34:02Z", "type": "commit"}, {"oid": "3a34d99e104961785edbe3606a463477c5d188a0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3a34d99e104961785edbe3606a463477c5d188a0", "message": "Modified the helm scripts", "committedDate": "2020-02-21T21:50:11Z", "type": "commit"}, {"oid": "35b1ac0be59ce34160b5c99e3a1e50fa80891bfc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/35b1ac0be59ce34160b5c99e3a1e50fa80891bfc", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243", "committedDate": "2020-02-26T01:34:05Z", "type": "commit"}, {"oid": "de16e10598b3903903cfce3f39334eb65cca4ee3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/de16e10598b3903903cfce3f39334eb65cca4ee3", "message": "Modify helm command for Upgrade Test", "committedDate": "2020-02-26T01:35:02Z", "type": "commit"}, {"oid": "d6be7d21f8bf9eb3fe04bfd525d108b6b4d85d44", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d6be7d21f8bf9eb3fe04bfd525d108b6b4d85d44", "message": "Merge remote-tracking branch 'origin/OWLS-79243' into research-1.16", "committedDate": "2020-02-26T19:41:08Z", "type": "commit"}, {"oid": "16d1846ae5a9055a9da1f1c83ea10b5ff3fa8d08", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16d1846ae5a9055a9da1f1c83ea10b5ff3fa8d08", "message": "CRD v1 initial research", "committedDate": "2020-02-27T13:00:41Z", "type": "commit"}, {"oid": "f57a29e8541f3320cacc9eb80da51226d0fc342d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f57a29e8541f3320cacc9eb80da51226d0fc342d", "message": "Pull schema from k8s objects", "committedDate": "2020-02-27T17:55:16Z", "type": "commit"}, {"oid": "263499dcedf2824df9e4b938c8f7c1a68c72f1a8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/263499dcedf2824df9e4b938c8f7c1a68c72f1a8", "message": "Use JDK 15 until TLS 1.3 fix backported", "committedDate": "2020-02-28T12:16:01Z", "type": "commit"}, {"oid": "4c828d0eefe9a1a4a076fd2ff5101b51b691f587", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4c828d0eefe9a1a4a076fd2ff5101b51b691f587", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16", "committedDate": "2020-03-11T15:19:34Z", "type": "commit"}, {"oid": "d09fab7bed2670932e731f8e9d0f8b3822aec8e9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d09fab7bed2670932e731f8e9d0f8b3822aec8e9", "message": "Update to 8.0.0", "committedDate": "2020-03-11T16:08:23Z", "type": "commit"}, {"oid": "9086475c16502d7c45004669957c9bb171ae4a75", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9086475c16502d7c45004669957c9bb171ae4a75", "message": "Work in progress", "committedDate": "2020-03-12T16:02:48Z", "type": "commit"}, {"oid": "9339057931888875b67eb58b4e70daf108027d4a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9339057931888875b67eb58b4e70daf108027d4a", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16", "committedDate": "2020-03-13T14:21:10Z", "type": "commit"}, {"oid": "1c6217e610fd6a0feb0e7b17d3dc89bb36477921", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c6217e610fd6a0feb0e7b17d3dc89bb36477921", "message": "Generate v1beta1 CRD yaml", "committedDate": "2020-03-13T19:43:25Z", "type": "commit"}, {"oid": "45893e7faa69f51099d1ed3e0d71cfa739b8ffcb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/45893e7faa69f51099d1ed3e0d71cfa739b8ffcb", "message": "Work in progress", "committedDate": "2020-03-13T20:38:17Z", "type": "commit"}, {"oid": "5f72ec3232bfbe1f283d890c133c540d39a46c06", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5f72ec3232bfbe1f283d890c133c540d39a46c06", "message": "Work in progress", "committedDate": "2020-03-13T21:23:03Z", "type": "commit"}, {"oid": "5726604862aba3f4118e7bfee403ce60249babd0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5726604862aba3f4118e7bfee403ce60249babd0", "message": "Work in progress", "committedDate": "2020-03-14T20:15:25Z", "type": "commit"}, {"oid": "1038bddbea8aa0ec3da055f82d1ee129f860dbc4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1038bddbea8aa0ec3da055f82d1ee129f860dbc4", "message": "Sort", "committedDate": "2020-03-14T23:48:38Z", "type": "commit"}, {"oid": "023a484a893309660cef73e8d49a02d1e8e74e52", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/023a484a893309660cef73e8d49a02d1e8e74e52", "message": "Update unit tests", "committedDate": "2020-03-16T15:04:38Z", "type": "commit"}, {"oid": "f05d4ddb5d93c5d2c18564c09d4de693915e3635", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f05d4ddb5d93c5d2c18564c09d4de693915e3635", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16", "committedDate": "2020-03-16T15:16:10Z", "type": "commit"}, {"oid": "5fe69617ac8e729a380b4532a4afc0bb0dfa6fbf", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5fe69617ac8e729a380b4532a4afc0bb0dfa6fbf", "message": "More tests", "committedDate": "2020-03-16T15:37:04Z", "type": "commit"}, {"oid": "ff416dee7803ef13ccede8b8ef97206462dca618", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ff416dee7803ef13ccede8b8ef97206462dca618", "message": "Version 3.0.0", "committedDate": "2020-03-16T15:52:07Z", "type": "commit"}, {"oid": "e0447ba88f73eb121a91075183ebfe93fe507032", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e0447ba88f73eb121a91075183ebfe93fe507032", "message": "Revert JDK update for now", "committedDate": "2020-03-16T16:00:17Z", "type": "commit"}, {"oid": "408dcb70d851f9f0ee466ecfbb195aeba6d60049", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/408dcb70d851f9f0ee466ecfbb195aeba6d60049", "message": "Tests check for v1 CRD", "committedDate": "2020-03-16T16:45:57Z", "type": "commit"}, {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/695c26aa876dff74813b72f55985ce446a0a54d4", "message": "Remove duplicate pom.xml entries", "committedDate": "2020-03-16T16:51:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzExOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237118", "bodyText": "wow, that really clarified that :)", "author": "markxnelson", "createdAt": "2020-03-16T18:40:47Z", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CallBuilder.java", "diffHunk": "@@ -711,14 +731,81 @@ private Call readCustomResourceDefinitionAsync(\n    * @return Asynchronous step\n    */\n   public Step readCustomResourceDefinitionAsync(\n-      String name, ResponseStep<V1beta1CustomResourceDefinition> responseStep) {\n+      String name, ResponseStep<V1CustomResourceDefinition> responseStep) {\n     return createRequestAsync(\n         responseStep, new RequestParams(\"readCRD\", null, name, null), readCrd);\n   }\n \n-  /* Services */\n-\n   private Call createCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .createCustomResourceDefinitionAsync(body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for creating CRD.\n+   *\n+   * @param body Body", "originalCommit": "695c26aa876dff74813b72f55985ce446a0a54d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzI4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237285", "bodyText": "is this generated?", "author": "markxnelson", "createdAt": "2020-03-16T18:41:05Z", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CallBuilder.java", "diffHunk": "@@ -711,14 +731,81 @@ private Call readCustomResourceDefinitionAsync(\n    * @return Asynchronous step\n    */\n   public Step readCustomResourceDefinitionAsync(\n-      String name, ResponseStep<V1beta1CustomResourceDefinition> responseStep) {\n+      String name, ResponseStep<V1CustomResourceDefinition> responseStep) {\n     return createRequestAsync(\n         responseStep, new RequestParams(\"readCRD\", null, name, null), readCrd);\n   }\n \n-  /* Services */\n-\n   private Call createCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .createCustomResourceDefinitionAsync(body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for creating CRD.\n+   *\n+   * @param body Body\n+   * @param responseStep Response step for when call completes\n+   * @return Asynchronous step\n+   */\n+  public Step createCustomResourceDefinitionAsync(\n+      V1CustomResourceDefinition body,\n+      ResponseStep<V1CustomResourceDefinition> responseStep) {\n+    return createRequestAsync(\n+        responseStep, new RequestParams(\"createCRD\", null, null, body), createCrd);\n+  }\n+\n+  private Call replaceCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      String name,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .replaceCustomResourceDefinitionAsync(name, body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for replacing CRD.\n+   *\n+   * @param name Name", "originalCommit": "695c26aa876dff74813b72f55985ce446a0a54d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzg3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237877", "bodyText": "magic number", "author": "markxnelson", "createdAt": "2020-03-16T18:42:16Z", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -116,63 +151,130 @@ boolean isOutdatedCrd(\n \n     @Override\n     public NextAction apply(Packet packet) {\n-      return doNext(context.verifyCrd(getNext()), packet);\n+      if (context.version.isCrdV1Supported()) {\n+        return doNext(context.verifyCrd(getNext()), packet);\n+      } else {\n+        return doNext(context.verifyBetaCrd(getNext()), packet);\n+      }\n     }\n   }\n \n   static class CrdContext {\n     private final Step conflictStep;\n-    private final V1beta1CustomResourceDefinition model;\n+    private final V1CustomResourceDefinition model;\n+    private final V1beta1CustomResourceDefinition betaModel;\n     private final KubernetesVersion version;\n \n     CrdContext(KubernetesVersion version, Step conflictStep) {\n       this.version = version;\n       this.conflictStep = conflictStep;\n       this.model = createModel(version);\n+      this.betaModel = createBetaModel(version);\n     }\n \n-    static V1beta1CustomResourceDefinition createModel(KubernetesVersion version) {\n+    static V1CustomResourceDefinition createModel(KubernetesVersion version) {\n+      return new V1CustomResourceDefinition()\n+          .apiVersion(\"apiextensions.k8s.io/v1\")\n+          .kind(\"CustomResourceDefinition\")\n+          .metadata(createMetadata())\n+          .spec(createSpec(version));\n+    }\n+\n+    static V1beta1CustomResourceDefinition createBetaModel(KubernetesVersion version) {\n       return new V1beta1CustomResourceDefinition()\n           .apiVersion(\"apiextensions.k8s.io/v1beta1\")\n           .kind(\"CustomResourceDefinition\")\n           .metadata(createMetadata())\n-          .spec(createSpec(version));\n+          .spec(createBetaSpec(version));\n     }\n \n     static V1ObjectMeta createMetadata() {\n       return new V1ObjectMeta()\n           .name(KubernetesConstants.CRD_NAME);\n     }\n \n-    static V1beta1CustomResourceDefinitionSpec createSpec(KubernetesVersion version) {\n+    static V1CustomResourceDefinitionSpec createSpec(KubernetesVersion version) {\n+      V1CustomResourceDefinitionSpec spec =\n+          new V1CustomResourceDefinitionSpec()\n+              .group(KubernetesConstants.DOMAIN_GROUP)\n+              .versions(getCrdVersions())\n+              .scope(\"Namespaced\")\n+              .names(getCrdNames());\n+      return spec;\n+    }\n+\n+    static V1beta1CustomResourceDefinitionSpec createBetaSpec(KubernetesVersion version) {\n       V1beta1CustomResourceDefinitionSpec spec =\n           new V1beta1CustomResourceDefinitionSpec()\n               .group(KubernetesConstants.DOMAIN_GROUP)\n-              .version(KubernetesConstants.DOMAIN_VERSION)\n-              .versions(getCrdVersions())\n+              .versions(getBetaCrdVersions())\n+              .validation(createBetaSchemaValidation())\n+              .subresources(createBetaSubresources())\n               .scope(\"Namespaced\")\n-              .names(getCrdNames())\n-              .validation(createSchemaValidation());\n-      if (version == null || version.isCrdSubresourcesSupported()) {\n-        spec.setSubresources(\n-            new V1beta1CustomResourceSubresources()\n-                .scale(\n-                    new V1beta1CustomResourceSubresourceScale()\n-                        .specReplicasPath(\".spec.replicas\")\n-                        .statusReplicasPath(\".status.replicas\")));\n-        // Remove status for now because seeing status not updated on some k8s environments\n-        // Consider adding this only for K8s version 1.13+\n-        // See the note in KubernetesVersion\n-        // .status(new HashMap<String, Object>()));\n-      }\n+              .names(getBetaCrdNames());\n       return spec;\n     }\n \n-    static List<V1beta1CustomResourceDefinitionVersion> getCrdVersions() {\n-      List<V1beta1CustomResourceDefinitionVersion> versions =\n-          Arrays.stream(KubernetesConstants.DOMAIN_ALTERNATE_VERSIONS)\n-              .map(e -> new V1beta1CustomResourceDefinitionVersion().name(e).served(true).storage(false))\n-              .collect(Collectors.toList());\n+    static String getVersionFromCrdSchemaFileName(String name) {\n+      // names will be like \"domain-crd-schemav2-201.yaml\"\n+      // want \"v2\"\n+      String end = name.substring(17);\n+      return end.substring(0, end.indexOf('-'));\n+    }\n+\n+    static V1CustomResourceValidation getValidationFromCrdSchemaFile(String fileContents) {\n+      return Yaml.getSnakeYaml().loadAs(new StringReader(fileContents), V1CustomResourceValidation.class);\n+    }\n+\n+    static V1CustomResourceSubresources createSubresources() {\n+      return new V1CustomResourceSubresources()\n+          .scale(\n+              new V1CustomResourceSubresourceScale()\n+                  .specReplicasPath(\".spec.replicas\")\n+                  .statusReplicasPath(\".status.replicas\"));\n+    }\n+\n+    static V1beta1CustomResourceSubresources createBetaSubresources() {\n+      return new V1beta1CustomResourceSubresources()\n+          .scale(\n+              new V1beta1CustomResourceSubresourceScale()\n+                  .specReplicasPath(\".spec.replicas\")\n+                  .statusReplicasPath(\".status.replicas\"));\n+    }\n+\n+    static List<V1CustomResourceDefinitionVersion> getCrdVersions() {\n+      Map<String, String> schemas = schemaReader.loadFilesFromClasspath();\n+      List<V1CustomResourceDefinitionVersion> versions = schemas.entrySet().stream()\n+          .sorted(Comparator.comparing(Map.Entry::getKey))\n+          .map(entry -> new V1CustomResourceDefinitionVersion()\n+              .name(getVersionFromCrdSchemaFileName(entry.getKey()))\n+              .schema(getValidationFromCrdSchemaFile(entry.getValue()))\n+              .subresources(createSubresources())\n+              .served(true)\n+              .storage(false))\n+          .collect(Collectors.toList());\n+\n+      versions.add(\n+          0, // must be first", "originalCommit": "695c26aa876dff74813b72f55985ce446a0a54d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}