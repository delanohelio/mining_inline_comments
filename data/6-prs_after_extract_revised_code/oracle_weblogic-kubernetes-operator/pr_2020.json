{"pr_number": 2020, "pr_title": "Owls85582 take all ALWAYS servers before considering rest of the servers when meet cluster replicas requirement", "pr_createdAt": "2020-10-30T17:51:06Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020", "timeline": [{"oid": "599e5b5487e86a00bb2f4ecc06b3190700f6fb2e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/599e5b5487e86a00bb2f4ecc06b3190700f6fb2e", "message": "add all Always servers before consider IfNeeded servers", "committedDate": "2020-10-29T21:51:25Z", "type": "commit"}, {"oid": "83fc388c56a7642d10a251c6c4a97a6173f5abbb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/83fc388c56a7642d10a251c6c4a97a6173f5abbb", "message": "add unit test cases for NEVER policy", "committedDate": "2020-10-30T14:49:52Z", "type": "commit"}, {"oid": "7bb9ae31435da56db7e3d2aa8b793646e164db2d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7bb9ae31435da56db7e3d2aa8b793646e164db2d", "message": "clean up unit tests", "committedDate": "2020-10-30T16:06:06Z", "type": "commit"}, {"oid": "b7251b97731807540d9b6e9495e0b34d3b5c8d11", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b7251b97731807540d9b6e9495e0b34d3b5c8d11", "message": "minor changes to the unit tests", "committedDate": "2020-10-30T16:40:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515327444", "bodyText": "Would this approach affect the guaranteed 'lexi numeric' order in which we start or shutdown servers?  Or which servers are reported in status?   (For example, when we're shutting down a cluster's servers one-at-a-time, the goal is to shutdown only the 'highest' server first, then the second highest, and so on.)", "author": "tbarnes-us", "createdAt": "2020-10-30T19:27:06Z", "path": "operator/src/main/java/oracle/kubernetes/operator/steps/ManagedServersUpStep.java", "diffHunk": "@@ -118,23 +118,30 @@ public NextAction apply(Packet packet) {\n   private void addServersToFactory(@Nonnull ServersUpStepFactory factory, @Nonnull WlsDomainConfig wlsDomainConfig) {\n     Set<String> clusteredServers = new HashSet<>();\n \n+    List<ServerConfig> pendingServers = new ArrayList<>();\n     wlsDomainConfig.getClusterConfigs().values()\n-        .forEach(wlsClusterConfig -> addClusteredServersToFactory(factory, clusteredServers, wlsClusterConfig));\n+        .forEach(wlsClusterConfig -> addClusteredServersToFactory(\n+            factory, clusteredServers, wlsClusterConfig, pendingServers));\n \n     wlsDomainConfig.getServerConfigs().values().stream()\n         .filter(wlsServerConfig -> !clusteredServers.contains(wlsServerConfig.getName()))\n-        .forEach(wlsServerConfig -> factory.addServerIfNeeded(wlsServerConfig, null));\n+        .forEach(wlsServerConfig -> factory.addServerIfAlways(wlsServerConfig, null, pendingServers));\n+\n+    for (ServerConfig serverConfig : pendingServers) {\n+      factory.addServerIfNeeded(serverConfig.wlsServerConfig, serverConfig.wlsClusterConfig);", "originalCommit": "b7251b97731807540d9b6e9495e0b34d3b5c8d11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MDI4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515350280", "bodyText": "The approach considers this. The pending list is in the original order. We have unit test cases covering this too.", "author": "doxiao", "createdAt": "2020-10-30T20:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MjYyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515352625", "bodyText": "But the final list does not maintain the original order. For example, if server3 is always and replicas count is 2, server1 and server3 will be started, and server3 will be started before server1.", "author": "doxiao", "createdAt": "2020-10-30T20:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1Mjg5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515352897", "bodyText": "In the sample example, if cluster later scales down, server1 will be taken down, which is the correct.", "author": "doxiao", "createdAt": "2020-10-30T20:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTI5MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515355291", "bodyText": "The only behavior difference is the startup order among servers that need to be started up in the same round of make right check; servers with ALWAYS policy will be started before the servers with If-needed policy.", "author": "doxiao", "createdAt": "2020-10-30T20:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4NTA1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515385051", "bodyText": "We want the overall startup and shutdown order to be very intuitive, predictable, and the exact reverse of each-other.\nQuestion 1: I think it'd be better if server1 always first in a cluster, then server2, and so on, if they aren't configured to start concurrently -- regardless of whether any of the servers are marked 'always'.  So, based on your analysis of the cluster use case ^^^ where server3 (marked always) starts before server1 (marked if_needed), it sounds like this pull may need to be refined?\nQuestion 2:  As for shutdown, if replica count is 3, and server1 & 3 are 'if needed' while server2 is always, then reducing replica count to 1 (or 0) should always shutdown server3 first and then shutdown server1 second.  (Side note: when setting the entire cluster to NEVER the entire cluster is expected to shutdown concurrently, so no worries there.)  Based on your analysis, it sounds like this will be honored?", "author": "tbarnes-us", "createdAt": "2020-10-30T21:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5MDk0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515390942", "bodyText": "I understand why you started the ALWAYS servers first, but I agree that it's more important that servers be started (and stopped) in a predictable and consistent order. We've had a few customers ask about startup ordering, so I could see us doing something like that in a future release. I think that means we need to keep the order very, very simple now so that customers would understand what they are configuring later.", "author": "rjeberhard", "createdAt": "2020-10-30T21:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNjE4Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515406186", "bodyText": "\"Yes\" to both questions. Good catch on sequential startup order. I agree we need to resort the final list.", "author": "doxiao", "createdAt": "2020-10-30T22:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNTM2MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2020#discussion_r515425360", "bodyText": "Fixed.\nKicked off a new Jenkins job (passed) https://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2893/.", "author": "doxiao", "createdAt": "2020-10-30T23:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNzQ0NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "3bea31245afa4223a12eccf2f7ff44b2b1290c8d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3bea31245afa4223a12eccf2f7ff44b2b1290c8d", "message": "resort the final server startup list", "committedDate": "2020-10-30T23:34:07Z", "type": "commit"}, {"oid": "bf4a4d9123dd147e4014772f8b581354b9d8439d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bf4a4d9123dd147e4014772f8b581354b9d8439d", "message": "Merge remote-tracking branch 'origin/develop' into owls85582-always-replicas", "committedDate": "2020-10-30T23:35:58Z", "type": "commit"}]}