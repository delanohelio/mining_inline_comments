{"pr_number": 1910, "pr_title": "Add TLS and Path Routing Tests for Nginx, Voyager and Traefik", "pr_createdAt": "2020-09-10T20:59:49Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910", "timeline": [{"oid": "24e0f4cd514a6c93530b1612a5b937d54deb1d44", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/24e0f4cd514a6c93530b1612a5b937d54deb1d44", "message": "add NGINX tls and two domains tests", "committedDate": "2020-09-05T05:42:30Z", "type": "commit"}, {"oid": "51fee8f529c1963dc3ef5d94b699caf80b33cf1c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51fee8f529c1963dc3ef5d94b699caf80b33cf1c", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-05T05:42:40Z", "type": "commit"}, {"oid": "ac0ba796c41496bceb917ae53038b87f43ca3855", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ac0ba796c41496bceb917ae53038b87f43ca3855", "message": "add tls ingress for Voyager", "committedDate": "2020-09-09T15:48:31Z", "type": "commit"}, {"oid": "f8f6432c713f2bb4cc5fa1a4af5673b7edb77376", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f8f6432c713f2bb4cc5fa1a4af5673b7edb77376", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-09T15:48:42Z", "type": "commit"}, {"oid": "4a8c0955e73825ac11f009792fa0b1409ffcb3ab", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4a8c0955e73825ac11f009792fa0b1409ffcb3ab", "message": "add path routing for three lbs", "committedDate": "2020-09-10T03:09:56Z", "type": "commit"}, {"oid": "0730692dbdb70742b51e377a6399386d4cc0170e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0730692dbdb70742b51e377a6399386d4cc0170e", "message": "fix nginx service name in other tests", "committedDate": "2020-09-10T18:02:54Z", "type": "commit"}, {"oid": "89740c1079852fc8ccae10bed04684bd0b860183", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/89740c1079852fc8ccae10bed04684bd0b860183", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-10T18:03:05Z", "type": "commit"}, {"oid": "0667b57306a1fdcbf1b2171bdb51f749da3d21ea", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0667b57306a1fdcbf1b2171bdb51f749da3d21ea", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-10T19:21:11Z", "type": "commit"}, {"oid": "e586e0bb9a35700efca2695b66cf525c67cd825a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e586e0bb9a35700efca2695b66cf525c67cd825a", "message": "cleanup", "committedDate": "2020-09-10T20:49:35Z", "type": "commit"}, {"oid": "1c6b0f514d99aea2e96e8fc84f9bd0ff76782980", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c6b0f514d99aea2e96e8fc84f9bd0ff76782980", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-21T16:12:03Z", "type": "commit"}, {"oid": "b13b57cf2664bb8c585ef975cc67c489c82ec297", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b13b57cf2664bb8c585ef975cc67c489c82ec297", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-21T23:54:35Z", "type": "commit"}, {"oid": "7fcc8525f4d1ef3eacf77a8b19bc7810236b5ea1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7fcc8525f4d1ef3eacf77a8b19bc7810236b5ea1", "message": "use NGINX chart version 2.16.0", "committedDate": "2020-09-22T15:54:46Z", "type": "commit"}, {"oid": "6c8366140cdb4395e153bc59806fb791b6d7a1b8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6c8366140cdb4395e153bc59806fb791b6d7a1b8", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-22T15:54:53Z", "type": "commit"}, {"oid": "1ebc483e717992967025995c98443ec9b9bb9710", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1ebc483e717992967025995c98443ec9b9bb9710", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-22T23:28:46Z", "type": "commit"}, {"oid": "9f3897821af3107f00fc5e7ecf826e8199b288d6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9f3897821af3107f00fc5e7ecf826e8199b288d6", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-23T18:34:37Z", "type": "commit"}, {"oid": "17e02bab484a15eb6637bfb1e0f98522b5deba16", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/17e02bab484a15eb6637bfb1e0f98522b5deba16", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-23T21:53:23Z", "type": "commit"}, {"oid": "9e33b831098b655336d28944b18e2ffe8959bfc6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9e33b831098b655336d28944b18e2ffe8959bfc6", "message": "uninstall nginx first in AfterAll", "committedDate": "2020-09-23T22:47:31Z", "type": "commit"}, {"oid": "4a9631d852bbad1b6ea7120004e8f0ad13d1d8a9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4a9631d852bbad1b6ea7120004e8f0ad13d1d8a9", "message": "add stable repo for Prometheus", "committedDate": "2020-09-24T06:11:01Z", "type": "commit"}, {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-24T17:06:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDU2NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224564", "bodyText": "Be specific which CHART you are downloading from this helm repository. Modify the variable name to PROMTHEUS_REPO_NAME", "author": "anpanigr", "createdAt": "2020-09-25T20:50:54Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk2NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420964", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDU2NA=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\nindex 2ddcf4d9c8..608ad2fa12 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\n\n@@ -167,8 +167,8 @@ public interface TestConstants {\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n-  public static final String STABLE_REPO_NAME = \"stable\";\n-  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";\n+  public static final String PROMETHEUS_REPO_NAME = \"stable\";\n+  public static final String PROMETHEUS_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";\n \n   // credentials\n   public static final String ADMIN_USERNAME_DEFAULT = \"weblogic\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDY2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224662", "bodyText": "Be specific which CHART you are downloading from this helm repository url.  Looks like you are using it for Prometheus.  Change the variable name to PROMTHEUS_REPO_URL", "author": "anpanigr", "createdAt": "2020-09-25T20:51:11Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";\n+  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420971", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\nindex 2ddcf4d9c8..608ad2fa12 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java\n\n@@ -167,8 +167,8 @@ public interface TestConstants {\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n-  public static final String STABLE_REPO_NAME = \"stable\";\n-  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";\n+  public static final String PROMETHEUS_REPO_NAME = \"stable\";\n+  public static final String PROMETHEUS_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";\n \n   // credentials\n   public static final String ADMIN_USERNAME_DEFAULT = \"weblogic\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzQyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227427", "bodyText": "createNginxIngressHostRouting4TwoDomains --> createNginxIngressHostRoutingForTwoDomains", "author": "anpanigr", "createdAt": "2020-09-25T20:58:33Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420975", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -405,20 +404,21 @@ public class ItTwoDomainsLoadBalancers {\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik, Voyager and NGINX\n+\n+    // create ingress rules with non-tls host routing, tls host routing and path routing for Traefik\n     createTraefikIngressRoutingRules();\n \n-    // create ingress with non-tls host routing\n+    // create ingress rules with non-tls host routing for Voyager and NGINX\n     createVoyagerIngressHostRoutingRules(false);\n-    createNginxIngressHostRouting4TwoDomains(false);\n+    createNginxIngressHostRoutingForTwoDomains(false);\n \n-    // create ingress with tls host routing\n+    // create ingress rules with tls host routing for Voyager and NGINX\n     createVoyagerIngressHostRoutingRules(true);\n-    createNginxIngressHostRouting4TwoDomains(true);\n+    createNginxIngressHostRoutingForTwoDomains(true);\n \n-    // create ingress with path routing\n+    // create ingress rules with path routing for Voyager and NGINX\n     createVoyagerIngressPathRoutingRules();\n-    createNginxIngressPathRouting4TwoDomains();\n+    createNginxIngressPathRoutingForTwoDomains();\n \n     // install and verify Apache\n     apacheHelmParams1 = assertDoesNotThrow(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzU4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227585", "bodyText": "createNginxIngressPathRouting4TwoDomains --> createNginxIngressPathRoutingForTwoDomains", "author": "anpanigr", "createdAt": "2020-09-25T20:59:02Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);\n+\n+    // create ingress with tls host routing\n+    createVoyagerIngressHostRoutingRules(true);\n+    createNginxIngressHostRouting4TwoDomains(true);\n+\n+    // create ingress with path routing\n+    createVoyagerIngressPathRoutingRules();\n+    createNginxIngressPathRouting4TwoDomains();", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420992", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -405,20 +404,21 @@ public class ItTwoDomainsLoadBalancers {\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik, Voyager and NGINX\n+\n+    // create ingress rules with non-tls host routing, tls host routing and path routing for Traefik\n     createTraefikIngressRoutingRules();\n \n-    // create ingress with non-tls host routing\n+    // create ingress rules with non-tls host routing for Voyager and NGINX\n     createVoyagerIngressHostRoutingRules(false);\n-    createNginxIngressHostRouting4TwoDomains(false);\n+    createNginxIngressHostRoutingForTwoDomains(false);\n \n-    // create ingress with tls host routing\n+    // create ingress rules with tls host routing for Voyager and NGINX\n     createVoyagerIngressHostRoutingRules(true);\n-    createNginxIngressHostRouting4TwoDomains(true);\n+    createNginxIngressHostRoutingForTwoDomains(true);\n \n-    // create ingress with path routing\n+    // create ingress rules with path routing for Voyager and NGINX\n     createVoyagerIngressPathRoutingRules();\n-    createNginxIngressPathRouting4TwoDomains();\n+    createNginxIngressPathRoutingForTwoDomains();\n \n     // install and verify Apache\n     apacheHelmParams1 = assertDoesNotThrow(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyODUwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495228500", "bodyText": "Do we need to provide  host header for path routing", "author": "anpanigr", "createdAt": "2020-09-25T21:01:12Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMyOTA5MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495329090", "bodyText": "Those are for host https routing.", "author": "xiancao", "createdAt": "2020-09-25T23:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyODUwMA=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -499,17 +498,17 @@ public class ItTwoDomainsLoadBalancers {\n   }\n \n   /**\n-   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with host based routing rules.\n+   * Verify multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with host based routing rules.\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n   @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n+  @DisplayName(\"Verify Voyager host routing with HTTP protocol across two domains\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n-    // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying Voyager http routing\");\n+    // verify Voyager host routing with HTTP protocol across two domains\n+    logger.info(\"Verifying Voyager host routing with HTTP protocol across two domains\");\n     for (String domainUid : domainUids) {\n       String ingressName = domainUid + \"-voyager-host-routing\";\n       verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTM0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229341", "bodyText": "Modify Test name to testApacheLoadBalancingDefaultSample()", "author": "anpanigr", "createdAt": "2020-09-25T21:03:32Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.\n+   */\n+  @Order(9)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tls host routing\")\n+  public void testVoyagerHostHttpsRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager tls host routing\");\n     for (String domainUid : domainUids) {\n-      String ingressName = domainUid + \"-ingress-host-routing\";\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"http\", getVoyagerLbNodePort(ingressName),\n+      String ingressName = domainUid + \"-voyager-tls\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.ssl.test\",\n+          \"https\", getVoyagerLbNodePort(ingressName, \"tcp-443\"),\n           replicaCount, true, \"\");\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(10)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through Voyager load balancer path routing\")\n+  public void testVoyagerPathRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager path routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = \"voyager-path-routing\";\n+      verifyClusterLoadbalancing(domainUid, \"\", \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, false, \"/\" + domainUid.substring(6));\n+    }\n+  }\n+\n   /**\n    * Verify Apache load balancer default sample through HTTP channel.\n    * Configure the Apache webtier as a load balancer for a WebLogic domain using the default configuration.\n    * It only support HTTP protocol.\n    * For details, please see\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/default-sample\n    */\n-  @Order(8)\n+  @Order(11)\n   @Test\n   @DisplayName(\"verify Apache load balancer default sample through HTTP channel\")\n   public void testApacheDefaultSample() {", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -499,17 +498,17 @@ public class ItTwoDomainsLoadBalancers {\n   }\n \n   /**\n-   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with host based routing rules.\n+   * Verify multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with host based routing rules.\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n   @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n+  @DisplayName(\"Verify Voyager host routing with HTTP protocol across two domains\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n-    // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying Voyager http routing\");\n+    // verify Voyager host routing with HTTP protocol across two domains\n+    logger.info(\"Verifying Voyager host routing with HTTP protocol across two domains\");\n     for (String domainUid : domainUids) {\n       String ingressName = domainUid + \"-voyager-host-routing\";\n       verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTQ3Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229472", "bodyText": "Modify Test name to testApacheLoadBalancingCutomSample()", "author": "anpanigr", "createdAt": "2020-09-25T21:03:56Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -500,7 +583,7 @@ public void testApacheDefaultSample() {\n    * For more details, please check:\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/custom-sample\n    */\n-  @Order(9)\n+  @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n   public void testApacheCustomSample() {", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTAzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421034", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -586,7 +585,7 @@ public class ItTwoDomainsLoadBalancers {\n   @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n-  public void testApacheCustomSample() {\n+  public void testApacheLoadBalancingCustomSample() {\n \n     // verify Apache custom sample\n     logger.info(\"Verifying Apache custom sample\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTgzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229833", "bodyText": "verify NGINX host routing with HTTP protocol across two domains", "author": "anpanigr", "createdAt": "2020-09-25T21:04:56Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTEyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421128", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -586,7 +585,7 @@ public class ItTwoDomainsLoadBalancers {\n   @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n-  public void testApacheCustomSample() {\n+  public void testApacheLoadBalancingCustomSample() {\n \n     // verify Apache custom sample\n     logger.info(\"Verifying Apache custom sample\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIzMTg3Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495231872", "bodyText": "Provide consistent description for both host/path routing test methods as follows ...\n@DisplayName(\"verify NGINX path routing with HTTP protocol across two domains\")", "author": "anpanigr", "createdAt": "2020-09-25T21:08:51Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")\n+  public void testNginxHttpHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX load balancer host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.nonssl.test\",\n+          \"http\", getNginxLbNodePort(\"http\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX tls host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(14)\n+  @Test\n+  @DisplayName(\"verify NGINX tls host routing across two domains\")\n+  public void testNginxHttpsHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX tls host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.ssl.test\",\n+          \"https\", getNginxLbNodePort(\"https\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(15)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through NGINX load balancer path routing\")", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421142", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:10:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIzMTg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -586,7 +585,7 @@ public class ItTwoDomainsLoadBalancers {\n   @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n-  public void testApacheCustomSample() {\n+  public void testApacheLoadBalancingCustomSample() {\n \n     // verify Apache custom sample\n     logger.info(\"Verifying Apache custom sample\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0MDQ2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495240465", "bodyText": "Modify the description\nTest deploy applications and install ingress controllers Traefik. NGINX and Voyager.", "author": "anpanigr", "createdAt": "2020-09-25T21:22:06Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -363,6 +377,9 @@ public void testDeployAppAndInstallIngressControllers() {\n     voyagerHelmParams =\n         installAndVerifyVoyager(voyagerNamespace, cloudProvider, enableValidatingWebhook);\n \n+    // install and verify Nginx", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE1NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421155", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0MDQ2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0NDQxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495244419", "bodyText": "Modify -- > logger.info(\"Verifying Path Routing using http protocol\");", "author": "anpanigr", "createdAt": "2020-09-25T21:29:16Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -450,8 +478,23 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n \n     logger.info(\"Verifying https traffic\");\n     for (String domainUid : domainUids) {\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"https\", getTraefikLbNodePort(true),\n-          replicaCount, true, \"\");\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".cluster-1.test\",\n+          \"https\", getTraefikLbNodePort(true), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with path routing rules.\n+   */\n+  @Order(7)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Traefik loadbalancer path routing\")\n+  public void testTraefikPathRoutingAcrossDomains() {\n+\n+    logger.info(\"Verifying https traffic\");", "originalCommit": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421170", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-09-26T06:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0NDQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "522b635ea1b8ac238431312152fc87db798f70c9", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\nindex 34b28d4766..5dac7aeb41 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java\n\n@@ -467,16 +466,16 @@ public class ItTwoDomainsLoadBalancers {\n   }\n \n   /**\n-   * Test verifies multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with host based routing rules.\n+   * Verify multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with host based routing rules.\n    * Accesses the clusterview application deployed in the WebLogic cluster through Traefik loadbalancer websecure\n    * channel and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n   @Order(6)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Traefik loadbalancer websecure channel\")\n+  @DisplayName(\"Verify Traefik host routing with HTTPS protocol across two domains\")\n   public void testTraefikHostHttpsRoutingAcrossDomains() {\n \n-    logger.info(\"Verifying https traffic\");\n+    logger.info(\"Verifying Traefik host routing with HTTPS protocol across two domains\");\n     for (String domainUid : domainUids) {\n       verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".cluster-1.test\",\n           \"https\", getTraefikLbNodePort(true), replicaCount, true, \"\");\n"}}, {"oid": "522b635ea1b8ac238431312152fc87db798f70c9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/522b635ea1b8ac238431312152fc87db798f70c9", "message": "address Pani's comments", "committedDate": "2020-09-26T06:06:55Z", "type": "commit"}, {"oid": "322460eb324883e1fb513068a915107edb00d243", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/322460eb324883e1fb513068a915107edb00d243", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-26T06:07:03Z", "type": "commit"}, {"oid": "a7f6147585c8c631b1589bc1a409c07cd82d296b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a7f6147585c8c631b1589bc1a409c07cd82d296b", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383", "committedDate": "2020-09-28T16:32:18Z", "type": "commit"}]}