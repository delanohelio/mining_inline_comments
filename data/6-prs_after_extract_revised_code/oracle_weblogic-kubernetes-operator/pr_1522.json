{"pr_number": 1522, "pr_title": "Adding impl in Operator", "pr_createdAt": "2020-03-31T21:32:51Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522", "timeline": [{"oid": "23f6c4a3695fecc575d40d792a8051801540e40a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/23f6c4a3695fecc575d40d792a8051801540e40a", "message": "adding traefik params", "committedDate": "2020-03-31T05:30:15Z", "type": "commit"}, {"oid": "08585a6e81cab06e31d874682e69940dd9cc4119", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/08585a6e81cab06e31d874682e69940dd9cc4119", "message": "adding more implementation for operator", "committedDate": "2020-03-31T23:25:55Z", "type": "commit"}, {"oid": "c151eee5c02752fb941d3ece437b1aaa8edc0d65", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c151eee5c02752fb941d3ece437b1aaa8edc0d65", "message": "merged and adding more implementation in operator", "committedDate": "2020-04-01T05:28:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NTgxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401565818", "bodyText": "use assertj - will make this look like\nimport static org.assertj.core.api.Assertions.*;\n\n assertThat(namespace)\n            .as(\"make sure namespace is not empty or null\")\n            .isNotEqualTo(\"\")\n            .isNotNull();\n\nwhich is a lot clearer", "author": "markxnelson", "createdAt": "2020-04-01T12:09:57Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -3,35 +3,78 @@\n \n package oracle.weblogic.kubernetes.actions.impl;\n \n+import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n+import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-public class Operator {\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n+\n   /**\n    * The name of the Operator's Helm Chart (in the repository).\n    */\n   private static String OPERATOR_CHART_NAME = \"weblogic-operator/weblogic-operator\";\n \n+  /**\n+   * Install WebLogic Kubernetes Operator.\n+   *\n+   * @param params operator parameters for helm values\n+   * @return true if the operator is successfully installed, false otherwise.\n+   * @throws ApiException - if Kubernetes client API call fails\n+   */\n+  public static boolean install(OperatorParams params) throws ApiException {\n+\n+    String namespace = params.getNamespace();\n+    String serviceAccount = params.getServiceAccount();\n+\n+    // assertions for required parameters\n+    assertNotNull(namespace, \"Operator namespace cannot be null\");", "originalCommit": "c151eee5c02752fb941d3ece437b1aaa8edc0d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4Mzk0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401583943", "bodyText": "looking for something similar to isNotNullOrEmpty() as it takes care of multiple white spaces..", "author": "vanajamukkara", "createdAt": "2020-04-01T12:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NTgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwOTg0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401609846", "bodyText": "We have Guava as a dependency in other modules.  You could add it here and use: assertFalse(Strings.isNullOrEmpty(text));", "author": "rjeberhard", "createdAt": "2020-04-01T13:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NTgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyODcyMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401628721", "bodyText": "added assertj core dependency and doing ..\n    assertThat(namespace)\n        .as(\"make sure namespace is not empty or null\")\n        .isNotNull()\n        .isNotEmpty();", "author": "vanajamukkara", "createdAt": "2020-04-01T13:47:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NTgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "5a2f8e06f08981fa3ed316885c5b3d1a0aceb14c", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\nindex 6d9af45cc8..c7eca53c96 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n\n@@ -7,14 +7,14 @@ import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.assertj.core.api.Assertions.assertThat;\n \n public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n+  //Question - is this URL correct?\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjQ0Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401566447", "bodyText": "why delete the namespace? seems a bit extreme", "author": "markxnelson", "createdAt": "2020-04-01T12:11:07Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -3,35 +3,78 @@\n \n package oracle.weblogic.kubernetes.actions.impl;\n \n+import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n+import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-public class Operator {\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n+\n   /**\n    * The name of the Operator's Helm Chart (in the repository).\n    */\n   private static String OPERATOR_CHART_NAME = \"weblogic-operator/weblogic-operator\";\n \n+  /**\n+   * Install WebLogic Kubernetes Operator.\n+   *\n+   * @param params operator parameters for helm values\n+   * @return true if the operator is successfully installed, false otherwise.\n+   * @throws ApiException - if Kubernetes client API call fails\n+   */\n+  public static boolean install(OperatorParams params) throws ApiException {\n+\n+    String namespace = params.getNamespace();\n+    String serviceAccount = params.getServiceAccount();\n+\n+    // assertions for required parameters\n+    assertNotNull(namespace, \"Operator namespace cannot be null\");\n+    assertNotNull(params.getReleaseName(), \"Operator release name cannot be null\");\n+    assertNotEquals(\"\",namespace.trim(), \"Operator namespace cannot be empty string\");\n+    assertNotEquals(\"\",params.getReleaseName().trim(), \"Operator release name cannot be empty string\");\n+\n+    //delete the namespace if it exists\n+    if (Namespace.exists(namespace)) {", "originalCommit": "c151eee5c02752fb941d3ece437b1aaa8edc0d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDY3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401574678", "bodyText": "what if the namespace already exists? just proceed with it?", "author": "vanajamukkara", "createdAt": "2020-04-01T12:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MTIyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401591228", "bodyText": "yeah - the method is meant to install an operator --- if doing so deleted the target namespace, that would be unexpected and surprising behavior.  we should not do that", "author": "markxnelson", "createdAt": "2020-04-01T12:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTAwNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401629007", "bodyText": "ok, will modify the code accordingly", "author": "vanajamukkara", "createdAt": "2020-04-01T13:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5a2f8e06f08981fa3ed316885c5b3d1a0aceb14c", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\nindex 6d9af45cc8..c7eca53c96 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n\n@@ -7,14 +7,14 @@ import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.assertj.core.api.Assertions.assertThat;\n \n public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n+  //Question - is this URL correct?\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwOTY3OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401709679", "bodyText": "i'm not sure about this being a string like this - i liked it better the way you had it before, where is was clear it was a list of things, this is just a string that has some kind of special meaning that i don't understand", "author": "markxnelson", "createdAt": "2020-04-01T15:34:59Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java", "diffHunk": "@@ -58,19 +59,26 @@ public void testInstallingOperator() {\n     // imagine that installOperator() will try to install the operator, by creating\n     // the kubernetes deployment.  this will complete quickly, and will either be\n     // successful or not.\n-\n     String opns = \"opns1\";\n-    OperatorParams opParams\n-        = new OperatorParams().image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n-          .domainNamespaces(Arrays.asList(\"domainns1\", \"domainns2\"))\n-          .serviceAccount(\"sa-opns1\");\n-    boolean success = installOperator(\"weblogic-operator\", opns, opParams);\n+    OperatorParams opParams =\n+        new OperatorParams().releaseName(\"weblogic-operator\")\n+            .namespace(opns)\n+            .image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n+            .domainNamespaces(\"domainns1, domainns2\")", "originalCommit": "814e9904fb1150484f596bafdcaec994aa83fcf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NzkxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401877910", "bodyText": "changed it back", "author": "vanajamukkara", "createdAt": "2020-04-01T20:06:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwOTY3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a2f8e06f08981fa3ed316885c5b3d1a0aceb14c", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java\nindex bc93dfc06e..d20fee13dd 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java\n\n@@ -59,10 +59,10 @@ class ItSimpleOperatorValidation implements LoggedTest {\n     // imagine that installOperator() will try to install the operator, by creating\n     // the kubernetes deployment.  this will complete quickly, and will either be\n     // successful or not.\n-    String opns = \"opns1\";\n+    String namespace = \"opns1\";\n     OperatorParams opParams =\n         new OperatorParams().releaseName(\"weblogic-operator\")\n-            .namespace(opns)\n+            .namespace(namespace)\n             .image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n             .domainNamespaces(\"domainns1, domainns2\")\n             .serviceAccount(\"opns1-sa\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMDE4Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401710186", "bodyText": "namespace?", "author": "markxnelson", "createdAt": "2020-04-01T15:35:37Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -3,35 +3,73 @@\n \n package oracle.weblogic.kubernetes.actions.impl;\n \n+import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n+import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-public class Operator {\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n+  //Question - is this URL correct?\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n+\n   /**\n    * The name of the Operator's Helm Chart (in the repository).\n    */\n   private static String OPERATOR_CHART_NAME = \"weblogic-operator/weblogic-operator\";\n \n+  /**\n+   * Install WebLogic Kubernetes Operator.\n+   *\n+   * @param params operator parameters for helm values\n+   * @return true if the operator is successfully installed, false otherwise.\n+   * @throws ApiException - if Kubernetes client API call fails\n+   */\n+  public static boolean install(OperatorParams params) throws ApiException {\n+\n+    String namespace = params.getNamespace();\n+    String serviceAccount = params.getServiceAccount();\n+\n+    // assertions for required parameters\n+    assertThat(namespace)\n+        .as(\"make sure namespace is not empty or null\")\n+        .isNotNull()\n+        .isNotEmpty();\n+\n+    assertThat(params.getReleaseName())\n+        .as(\"make sure namespace is not empty or null\")", "originalCommit": "814e9904fb1150484f596bafdcaec994aa83fcf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3Nzk3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401877977", "bodyText": "fixed", "author": "vanajamukkara", "createdAt": "2020-04-01T20:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMDE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4763b57aeb66b35fbede410f3f309b7d0635a0af", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\nindex c7eca53c96..9daf73d4f6 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n\n@@ -45,18 +45,6 @@ public class Operator implements LoggedTest {\n         .isNotNull()\n         .isNotEmpty();\n \n-    // create namespace\n-    if (!Namespace.exists(namespace)) {\n-      logger.info(String.format(\"Creating namespace %s\", namespace));\n-      Namespace ns = new Namespace().name(namespace);\n-    }\n-\n-    // create service account\n-    if (serviceAccount != null && !serviceAccount.equals(\"default\")) {\n-      logger.info(String.format(\"Creating service account %s\", serviceAccount));\n-      // Kubernetes.createServiceAccount(params.getServiceAccount(), namespace);\n-    }\n-\n     boolean success = false;\n     if (new Helm().chartName(OPERATOR_CHART_NAME).repoUrl(OPERATOR_HELM_REPO_URL).addRepo()) {\n       logger.info(String.format(\"Installing Operator in namespace %s\", namespace));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMTExMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401711111", "bodyText": "again, this is surprising/unexpected.  the method is installOperator - i would not expect that to create a namespace. if you try to deploy something into a non-existent namespace in k8s, it will give an error.  that is what i would expect this to do too. we should try to stick to the standard/predictable/expected behavior", "author": "markxnelson", "createdAt": "2020-04-01T15:36:53Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -3,35 +3,73 @@\n \n package oracle.weblogic.kubernetes.actions.impl;\n \n+import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n+import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-public class Operator {\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n+  //Question - is this URL correct?\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n+\n   /**\n    * The name of the Operator's Helm Chart (in the repository).\n    */\n   private static String OPERATOR_CHART_NAME = \"weblogic-operator/weblogic-operator\";\n \n+  /**\n+   * Install WebLogic Kubernetes Operator.\n+   *\n+   * @param params operator parameters for helm values\n+   * @return true if the operator is successfully installed, false otherwise.\n+   * @throws ApiException - if Kubernetes client API call fails\n+   */\n+  public static boolean install(OperatorParams params) throws ApiException {\n+\n+    String namespace = params.getNamespace();\n+    String serviceAccount = params.getServiceAccount();\n+\n+    // assertions for required parameters\n+    assertThat(namespace)\n+        .as(\"make sure namespace is not empty or null\")\n+        .isNotNull()\n+        .isNotEmpty();\n+\n+    assertThat(params.getReleaseName())\n+        .as(\"make sure namespace is not empty or null\")\n+        .isNotNull()\n+        .isNotEmpty();\n+\n+    // create namespace\n+    if (!Namespace.exists(namespace)) {", "originalCommit": "814e9904fb1150484f596bafdcaec994aa83fcf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcyNTM1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401725353", "bodyText": "ok ..I will create the namespace, service account in the test class ..", "author": "vanajamukkara", "createdAt": "2020-04-01T15:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMTExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4763b57aeb66b35fbede410f3f309b7d0635a0af", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\nindex c7eca53c96..9daf73d4f6 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n\n@@ -45,18 +45,6 @@ public class Operator implements LoggedTest {\n         .isNotNull()\n         .isNotEmpty();\n \n-    // create namespace\n-    if (!Namespace.exists(namespace)) {\n-      logger.info(String.format(\"Creating namespace %s\", namespace));\n-      Namespace ns = new Namespace().name(namespace);\n-    }\n-\n-    // create service account\n-    if (serviceAccount != null && !serviceAccount.equals(\"default\")) {\n-      logger.info(String.format(\"Creating service account %s\", serviceAccount));\n-      // Kubernetes.createServiceAccount(params.getServiceAccount(), namespace);\n-    }\n-\n     boolean success = false;\n     if (new Helm().chartName(OPERATOR_CHART_NAME).repoUrl(OPERATOR_HELM_REPO_URL).addRepo()) {\n       logger.info(String.format(\"Installing Operator in namespace %s\", namespace));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMTI1NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401711254", "bodyText": "same here", "author": "markxnelson", "createdAt": "2020-04-01T15:37:06Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -3,35 +3,73 @@\n \n package oracle.weblogic.kubernetes.actions.impl;\n \n+import io.kubernetes.client.openapi.ApiException;\n import oracle.weblogic.kubernetes.actions.impl.primitive.Helm;\n+import oracle.weblogic.kubernetes.extensions.LoggedTest;\n \n-public class Operator {\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class Operator implements LoggedTest {\n \n   /**\n    * The URL of the Operator's Helm Repository.\n    */\n+  //Question - is this URL correct?\n   private static String OPERATOR_HELM_REPO_URL = \"https://oracle.github.io/weblogic-kubernetes-operator/charts\";\n+\n   /**\n    * The name of the Operator's Helm Chart (in the repository).\n    */\n   private static String OPERATOR_CHART_NAME = \"weblogic-operator/weblogic-operator\";\n \n+  /**\n+   * Install WebLogic Kubernetes Operator.\n+   *\n+   * @param params operator parameters for helm values\n+   * @return true if the operator is successfully installed, false otherwise.\n+   * @throws ApiException - if Kubernetes client API call fails\n+   */\n+  public static boolean install(OperatorParams params) throws ApiException {\n+\n+    String namespace = params.getNamespace();\n+    String serviceAccount = params.getServiceAccount();\n+\n+    // assertions for required parameters\n+    assertThat(namespace)\n+        .as(\"make sure namespace is not empty or null\")\n+        .isNotNull()\n+        .isNotEmpty();\n+\n+    assertThat(params.getReleaseName())\n+        .as(\"make sure namespace is not empty or null\")\n+        .isNotNull()\n+        .isNotEmpty();\n+\n+    // create namespace\n+    if (!Namespace.exists(namespace)) {\n+      logger.info(String.format(\"Creating namespace %s\", namespace));\n+      Namespace ns = new Namespace().name(namespace);\n+    }\n+\n+    // create service account\n+    if (serviceAccount != null && !serviceAccount.equals(\"default\")) {", "originalCommit": "814e9904fb1150484f596bafdcaec994aa83fcf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3ODEyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r401878128", "bodyText": "removed", "author": "vanajamukkara", "createdAt": "2020-04-01T20:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMTI1NA=="}], "type": "inlineReview", "revised_code": {"commit": "4763b57aeb66b35fbede410f3f309b7d0635a0af", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\nindex c7eca53c96..9daf73d4f6 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java\n\n@@ -45,18 +45,6 @@ public class Operator implements LoggedTest {\n         .isNotNull()\n         .isNotEmpty();\n \n-    // create namespace\n-    if (!Namespace.exists(namespace)) {\n-      logger.info(String.format(\"Creating namespace %s\", namespace));\n-      Namespace ns = new Namespace().name(namespace);\n-    }\n-\n-    // create service account\n-    if (serviceAccount != null && !serviceAccount.equals(\"default\")) {\n-      logger.info(String.format(\"Creating service account %s\", serviceAccount));\n-      // Kubernetes.createServiceAccount(params.getServiceAccount(), namespace);\n-    }\n-\n     boolean success = false;\n     if (new Helm().chartName(OPERATOR_CHART_NAME).repoUrl(OPERATOR_HELM_REPO_URL).addRepo()) {\n       logger.info(String.format(\"Installing Operator in namespace %s\", namespace));\n"}}, {"oid": "5a2f8e06f08981fa3ed316885c5b3d1a0aceb14c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5a2f8e06f08981fa3ed316885c5b3d1a0aceb14c", "message": "addressing review comments, using assertj", "committedDate": "2020-04-01T22:40:15Z", "type": "commit"}, {"oid": "814e9904fb1150484f596bafdcaec994aa83fcf6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/814e9904fb1150484f596bafdcaec994aa83fcf6", "message": "sync to latest", "committedDate": "2020-04-01T22:52:13Z", "type": "commit"}, {"oid": "4763b57aeb66b35fbede410f3f309b7d0635a0af", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4763b57aeb66b35fbede410f3f309b7d0635a0af", "message": "adding helm commands", "committedDate": "2020-04-02T03:56:51Z", "type": "commit"}, {"oid": "aa9a285396ac9f2e9891f5090e0e1868ace318ed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aa9a285396ac9f2e9891f5090e0e1868ace318ed", "message": "fix typo", "committedDate": "2020-04-02T04:05:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwODE5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r402408194", "bodyText": "wow, that's a bit awkward.  is there an assertJ assertion we can use instead of this one, that makes the code a bit nicer?", "author": "markxnelson", "createdAt": "2020-04-02T15:33:30Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java", "diffHunk": "@@ -59,18 +65,37 @@ public void testInstallingOperator() {\n     // the kubernetes deployment.  this will complete quickly, and will either be\n     // successful or not.\n \n-    String opns = \"opns1\";\n-    OperatorParams opParams\n-        = new OperatorParams().image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n-          .domainNamespaces(Arrays.asList(\"domainns1\", \"domainns2\"))\n-          .serviceAccount(\"sa-opns1\");\n-    boolean success = installOperator(\"weblogic-operator\", opns, opParams);\n+    // get a new unique namespace\n+    final String namespace = assertDoesNotThrow(TestActions::createUniqueNamespace,\n+        \"Failed to create unique namespace due to ApiException\");\n+    logger.info(String.format(\"Got a new namespace called %s\", namespace));\n \n-    // we can use a standard JUnit assertion to check on the result\n-    assertEquals(true, success, \"There MUST be a descriptive message here\");\n+    // Create a service account for the unique namespace\n+    final String serviceAccountName = namespace + \"-sa\";\n+    assertDoesNotThrow(", "originalCommit": "aa9a285396ac9f2e9891f5090e0e1868ace318ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxMzQzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r402413433", "bodyText": "will see ...", "author": "vanajamukkara", "createdAt": "2020-04-02T15:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwODE5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwODUzNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r402408536", "bodyText": "put it in the log, not SOP", "author": "markxnelson", "createdAt": "2020-04-02T15:33:58Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java", "diffHunk": "@@ -59,18 +65,37 @@ public void testInstallingOperator() {\n     // the kubernetes deployment.  this will complete quickly, and will either be\n     // successful or not.\n \n-    String opns = \"opns1\";\n-    OperatorParams opParams\n-        = new OperatorParams().image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n-          .domainNamespaces(Arrays.asList(\"domainns1\", \"domainns2\"))\n-          .serviceAccount(\"sa-opns1\");\n-    boolean success = installOperator(\"weblogic-operator\", opns, opParams);\n+    // get a new unique namespace\n+    final String namespace = assertDoesNotThrow(TestActions::createUniqueNamespace,\n+        \"Failed to create unique namespace due to ApiException\");\n+    logger.info(String.format(\"Got a new namespace called %s\", namespace));\n \n-    // we can use a standard JUnit assertion to check on the result\n-    assertEquals(true, success, \"There MUST be a descriptive message here\");\n+    // Create a service account for the unique namespace\n+    final String serviceAccountName = namespace + \"-sa\";\n+    assertDoesNotThrow(\n+        () -> TestActions.createServiceAccount(new V1ServiceAccount()\n+            .metadata(new V1ObjectMeta().namespace(namespace).name(serviceAccountName))));\n+    logger.info(\"Created service account: \" + serviceAccountName);\n+\n+    OperatorParams opParams =\n+        new OperatorParams().releaseName(\"weblogic-operator\")\n+            .namespace(namespace)\n+            .image(\"weblogic-kubernetes-operator:test_itsimpleoperator\")\n+            .domainNamespaces(Arrays.asList(\"domainns1\", \"domainns2\"))\n+            .serviceAccount(\"opns1-sa\");\n \n-    // we can use the injected logger like this:\n-    logger.info(\"hello\");\n+    //ToDO: use Junit 5 assertions\n+    try {\n+      installOperator(opParams);\n+    } catch (ApiException e) {\n+      e.printStackTrace();", "originalCommit": "aa9a285396ac9f2e9891f5090e0e1868ace318ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxMzUwOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1522#discussion_r402413508", "bodyText": "will do", "author": "vanajamukkara", "createdAt": "2020-04-02T15:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwODUzNg=="}], "type": "inlineReview", "revised_code": null}]}