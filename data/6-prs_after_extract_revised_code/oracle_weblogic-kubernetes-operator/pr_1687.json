{"pr_number": 1687, "pr_title": "Add more test cases for multiple WDT model file ordering", "pr_createdAt": "2020-05-28T21:35:46Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687", "timeline": [{"oid": "f500061404b0291a0cc9bdb6ac0b534e25bdc6a3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f500061404b0291a0cc9bdb6ac0b534e25bdc6a3", "message": "Add first test case for multiple model file use case", "committedDate": "2020-05-22T16:38:05Z", "type": "commit"}, {"oid": "38cebb40ffb51f024fe327ca975d75cac122ca70", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/38cebb40ffb51f024fe327ca975d75cac122ca70", "message": "Minor javadoc change", "committedDate": "2020-05-22T17:57:16Z", "type": "commit"}, {"oid": "286f9ac5d081f44160ef26b3bd74f330ea533b7f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/286f9ac5d081f44160ef26b3bd74f330ea533b7f", "message": "Fix a log message", "committedDate": "2020-05-22T18:12:17Z", "type": "commit"}, {"oid": "aa751ee6cfbdfab3d17978e2dc35d377fab50c19", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aa751ee6cfbdfab3d17978e2dc35d377fab50c19", "message": "Partial work for the second multi-model case", "committedDate": "2020-05-26T17:58:29Z", "type": "commit"}, {"oid": "02d66fcb232335770b1b01eaee87c609d4fb622b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/02d66fcb232335770b1b01eaee87c609d4fb622b", "message": "Work in progress", "committedDate": "2020-05-27T13:16:41Z", "type": "commit"}, {"oid": "a524be4b4996da827532db74e57cee456c5c8f9f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a524be4b4996da827532db74e57cee456c5c8f9f", "message": "work in progress", "committedDate": "2020-05-27T15:35:01Z", "type": "commit"}, {"oid": "1f55ff566ba18a4f872433b297b826eab594e0a9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1f55ff566ba18a4f872433b297b826eab594e0a9", "message": "Merge remote-tracking branch 'origin/develop' into mii-multi-model-image-cm\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "committedDate": "2020-05-27T19:10:34Z", "type": "commit"}, {"oid": "52b85ed0ccc817a69e370ab55d2f60510aa64d5f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/52b85ed0ccc817a69e370ab55d2f60510aa64d5f", "message": "javadoc and refactor", "committedDate": "2020-05-28T18:20:52Z", "type": "commit"}, {"oid": "54b8ec0b57f2f4228235bfe4d91456355771ef0b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/54b8ec0b57f2f4228235bfe4d91456355771ef0b", "message": "Move createConfigMapAndVerify method to CommonTestUtils", "committedDate": "2020-05-28T19:10:43Z", "type": "commit"}, {"oid": "0208517461372df5a69702c6059c40550d0da560", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0208517461372df5a69702c6059c40550d0da560", "message": "Change ItMiiConfigMap and ItMiiConfigMapOverride to use the common test utils", "committedDate": "2020-05-28T19:23:59Z", "type": "commit"}, {"oid": "d5b466bd9e7052aaebe964e0b08e5b05611e39ad", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d5b466bd9e7052aaebe964e0b08e5b05611e39ad", "message": "Minor changes in javadoc", "committedDate": "2020-05-28T19:31:45Z", "type": "commit"}, {"oid": "4f3c4a550d5d3d609837b8a7c29bfbf14eb0b178", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4f3c4a550d5d3d609837b8a7c29bfbf14eb0b178", "message": "Minor changes", "committedDate": "2020-05-28T19:36:26Z", "type": "commit"}, {"oid": "655b7182f6bc27f39ef4052b52ef125b2d755aae", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/655b7182f6bc27f39ef4052b52ef125b2d755aae", "message": "javadoc", "committedDate": "2020-05-28T21:33:11Z", "type": "commit"}, {"oid": "80e5ee3d06159717ca193f18649d965d6a3d70d1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/80e5ee3d06159717ca193f18649d965d6a3d70d1", "message": "Merge remote-tracking branch 'origin/develop' into mii-multi-model-image-cm\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "committedDate": "2020-05-29T15:09:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432660333", "bodyText": "will this work if the domains are running?", "author": "sankarpn", "createdAt": "2020-05-29T18:22:20Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java", "diffHunk": "@@ -193,23 +404,14 @@ public void testCreateMiiDomainWithMultiModeCM() {\n       checkServiceExists(managedServerPrefix + i, domainNamespace);\n     }\n \n-    logger.info(\"Check the MaxCapacity setting of DataSource {0}\", dsName);\n-    String maxCapacityValue = getDSMaxCapacity(adminServerPodName, domainNamespace, dsName);\n-    assertEquals(\"40\", maxCapacityValue, \n-        String.format(\"Domain %s in namespace %s DataSource %s MaxCapacity is %s, instead of %s\",\n-            domainUid, domainNamespace, dsName, maxCapacityValue, \"40\"));\n-\n-    logger.info(String.format(\"Domain %s in namespace %s DataSource %s MaxCapacity is %s, as expected\",\n-            domainUid, domainNamespace, dsName, \"40\"));\n-\n-    logger.info(\"Check the MaxCapacity setting of DataSource {0}\", dsName3);\n-    maxCapacityValue = getDSMaxCapacity(adminServerPodName, domainNamespace, dsName3);\n-    assertEquals(\"5\", maxCapacityValue, \n-        String.format(\"Domain %s in namespace %s DataSource %s MaxCapacity is %s, instead of %s\",\n-            domainUid, domainNamespace, dsName3, maxCapacityValue, \"5\"));\n+  }\n \n-    logger.info(String.format(\"Domain %s in namespace %s DataSource %s MaxCapacity is %s, as expected\",\n-            domainUid, domainNamespace, dsName3, \"5\"));\n+  @AfterAll\n+  public void tearDownAll() {\n+    // delete the domain image created in the test class\n+    if (miiImageMultiModel != null) {\n+      deleteImage(miiImageMultiModel);", "originalCommit": "80e5ee3d06159717ca193f18649d965d6a3d70d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NTQ4Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432665482", "bodyText": "Probably not. Let me check. If not, I'll delete the domains first.", "author": "doxiao", "createdAt": "2020-05-29T18:32:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5NjA3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432696078", "bodyText": "Added deletion of domains before deleting the image.", "author": "doxiao", "createdAt": "2020-05-29T19:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDA2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432730069", "bodyText": "I see deleting image works before deleting the domain..", "author": "vanajamukkara", "createdAt": "2020-05-29T20:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDQ0NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432730445", "bodyText": "not sure if domain deletion will have issues though", "author": "vanajamukkara", "createdAt": "2020-05-29T20:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMzYyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432733627", "bodyText": "With the change, we are doing what we do in ItMiiDomain.", "author": "doxiao", "createdAt": "2020-05-29T21:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczNzg0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432737849", "bodyText": "In addition, I tested the current version and found no problem and the image was removed.", "author": "doxiao", "createdAt": "2020-05-29T21:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MDE5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432740199", "bodyText": "I re-tested both cases, and either way worked without problem:).", "author": "doxiao", "createdAt": "2020-05-29T21:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NTkwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1687#discussion_r432755900", "bodyText": "I recall that a Docker image cannot be deleted if there are containers using it. The containers have to be stopped first. So I think it is probably safer to delete the domain before deleting the image. This is also what we have been doing in ItMiiDomain.", "author": "doxiao", "createdAt": "2020-05-29T21:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "72aa51896a9c59d5fe9cd15491e166ad1257d169", "chunk": "diff --git a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java\nindex 7c27a7bfe5..4fc9aceaf0 100644\n--- a/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java\n+++ b/new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiMultiModel.java\n\n@@ -408,6 +410,22 @@ class ItMiiMultiModel implements LoggedTest {\n \n   @AfterAll\n   public void tearDownAll() {\n+    // Delete domain custom resources\n+    logger.info(\"Delete domain custom resource {0} in namespace {1}\", domainUid1, domainNamespace);\n+    assertDoesNotThrow(() -> deleteDomainCustomResource(domainUid1, domainNamespace),\n+        \"deleteDomainCustomResource failed with ApiException\");\n+    logger.info(\"Deleted Domain Custom Resource \" + domainUid1 + \" from \" + domainNamespace);\n+\n+    logger.info(\"Delete domain custom resource {0} in namespace {1}\", domainUid2, domainNamespace);\n+    assertDoesNotThrow(() -> deleteDomainCustomResource(domainUid2, domainNamespace),\n+        \"deleteDomainCustomResource failed with ApiException\");\n+    logger.info(\"Deleted Domain Custom Resource \" + domainUid2 + \" from \" + domainNamespace);\n+\n+    logger.info(\"Delete domain custom resource {0} in namespace {1}\", domainUid3, domainNamespace);\n+    assertDoesNotThrow(() -> deleteDomainCustomResource(domainUid3, domainNamespace),\n+        \"deleteDomainCustomResource failed with ApiException\");\n+    logger.info(\"Deleted Domain Custom Resource \" + domainUid3 + \" from \" + domainNamespace);\n+\n     // delete the domain image created in the test class\n     if (miiImageMultiModel != null) {\n       deleteImage(miiImageMultiModel);\n"}}, {"oid": "72aa51896a9c59d5fe9cd15491e166ad1257d169", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/72aa51896a9c59d5fe9cd15491e166ad1257d169", "message": "Address review comment", "committedDate": "2020-05-29T19:30:09Z", "type": "commit"}, {"oid": "6a0ab12fb73d4bcf0b89e9ddfef96be34902e428", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6a0ab12fb73d4bcf0b89e9ddfef96be34902e428", "message": "Add --noproxy '*' to the curl commands", "committedDate": "2020-05-29T21:56:12Z", "type": "commit"}]}