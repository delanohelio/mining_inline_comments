{"pr_number": 2068, "pr_title": "Add assertion to ItMiiDynamicUpdate test", "pr_createdAt": "2020-11-20T23:25:32Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2068", "timeline": [{"oid": "dadf35d563435854604e1e37fe39f57cb1637088", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dadf35d563435854604e1e37fe39f57cb1637088", "message": "add assertion for no server roll", "committedDate": "2020-11-20T22:43:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA1NzYwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2068#discussion_r528057605", "bodyText": "Can the managed server timestamps be verified too?\nAlso, ideally this code should also verify that the 'weblogic.introspectVersion' label on each pod has also been updated.  Note that right now there's a wide race where the label may not be updated until several seconds after the online update has propagated - it waits until the next make-right. Johnny is working on a fix, but even when fixed there will still be a race - just less of a race (maybe less than a second?).", "author": "tbarnes-us", "createdAt": "2020-11-21T02:37:51Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -227,6 +233,9 @@ public void testMiiAddWorkManager() {\n                         MANAGED_SERVER_NAME_BASE + \"1\",\n                         workManagerName, \"200\"));\n     logger.info(\"Found new work manager configuration\");\n+", "originalCommit": "dadf35d563435854604e1e37fe39f57cb1637088", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24acf4af8868b1e2ae52730904e1329aa2aba1ba", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java\nindex bfcd4886ae..702da7acb2 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java\n\n@@ -212,30 +209,39 @@ class ItMiiDynamicUpdate {\n     // This test uses the WebLogic domain created in BeforeAll method\n     // BeforeEach method ensures that the server pods are running\n \n+    LinkedHashMap<String, DateTime> pods = new LinkedHashMap<>();\n+\n     // get the creation time of the admin server pod before patching\n     DateTime adminPodCreationTime = getPodCreationTime(domainNamespace, adminServerPodName);\n+    pods.put(adminServerPodName, getPodCreationTime(domainNamespace, adminServerPodName));\n+    // get the creation time of the managed server pods before patching\n+    for (int i = 1; i <= replicaCount; i++) {\n+      pods.put(managedServerPrefix + i, getPodCreationTime(domainNamespace,   managedServerPrefix + i));\n+    }\n+    for (int i = 1; i <= replicaCount; i++) {\n+      pods.put(managedServerPrefix + i, getPodCreationTime(domainNamespace,   managedServerPrefix + i));\n+    }\n \n     replaceConfigMapWithModelFiles(configMapName, domainUid, domainNamespace,\n         Arrays.asList(\"model.config.wm.yaml\"), withStandardRetryPolicy);\n \n-    assertTrue(assertDoesNotThrow(() ->\n-            patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace),\n-        \"Patch domain with new IntrospectVersion threw ApiException\"),\n-        \"Failed to patch domain with new IntrospectVersion\");\n+    String introspectVersion = patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace);\n \n     verifyIntrospectorRuns();\n \n     withStandardRetryPolicy.conditionEvaluationListener(\n         condition ->\n-            logger.info(\"Waiting for work manager configuration to be updated. Elapsed time{1}, remaining time {2}\",\n+            logger.info(\"Waiting for work manager configuration to be updated. \"\n+                + \"Elapsed time {0}ms, remaining time {1}ms\",\n                 condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS())).until(\n                     () -> checkWorkManagerRuntime(domainNamespace, adminServerPodName,\n                         MANAGED_SERVER_NAME_BASE + \"1\",\n                         workManagerName, \"200\"));\n     logger.info(\"Found new work manager configuration\");\n \n-    assertEquals(adminPodCreationTime, getPodCreationTime(domainNamespace, adminServerPodName),\n-        \"servers should not roll\");\n+    verifyPodsNotRolled(pods);\n+\n+    verifyPodIntrospectVersionUpdated(pods.keySet(), introspectVersion);\n   }\n \n   /**\n"}}, {"oid": "24acf4af8868b1e2ae52730904e1329aa2aba1ba", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/24acf4af8868b1e2ae52730904e1329aa2aba1ba", "message": "add assertion to MiiDynamicUpdate tests to verify that all server pods are not rolled, and introspectVersion are updated", "committedDate": "2020-11-23T23:28:06Z", "type": "commit"}]}