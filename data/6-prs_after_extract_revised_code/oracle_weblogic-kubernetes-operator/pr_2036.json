{"pr_number": 2036, "pr_title": "Remove t3 channel in IT tests and add it to separate IT class.", "pr_createdAt": "2020-11-06T17:15:12Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036", "timeline": [{"oid": "902e4eed02f0ceb0961fe619194d5cb492d9af20", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/902e4eed02f0ceb0961fe619194d5cb492d9af20", "message": "Modifying the tests to use default channel for wlst deployment", "committedDate": "2020-11-04T18:27:28Z", "type": "commit"}, {"oid": "0010edf7ba6dd723f4909b2dc613fb5d5db77f2d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0010edf7ba6dd723f4909b2dc613fb5d5db77f2d", "message": "add debug statements", "committedDate": "2020-11-04T20:01:46Z", "type": "commit"}, {"oid": "110e22cee42c1ecfc672adb385196b6b0f4d32d0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/110e22cee42c1ecfc672adb385196b6b0f4d32d0", "message": "Merge branch 'develop' into t3channelfix", "committedDate": "2020-11-05T19:34:30Z", "type": "commit"}, {"oid": "3930956f809bba8de46117ba4b98176ca117593c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3930956f809bba8de46117ba4b98176ca117593c", "message": "use pod host name instead of external host and nodePort", "committedDate": "2020-11-05T22:24:18Z", "type": "commit"}, {"oid": "b7b1fac914426bdc501529f4e6905cc5f25fac31", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b7b1fac914426bdc501529f4e6905cc5f25fac31", "message": "use admin server internal pod name and service port", "committedDate": "2020-11-06T02:13:12Z", "type": "commit"}, {"oid": "2df3f130c9c5c5a432b00b5e6079c595626b8f20", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2df3f130c9c5c5a432b00b5e6079c595626b8f20", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into t3channelfix", "committedDate": "2020-11-06T02:13:34Z", "type": "commit"}, {"oid": "61cc5df3a096527f810097ad42c8be234e022407", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/61cc5df3a096527f810097ad42c8be234e022407", "message": "remove debug statements", "committedDate": "2020-11-06T02:16:48Z", "type": "commit"}, {"oid": "23665d08d22dab22c2960e3cc109c122a219d58a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/23665d08d22dab22c2960e3cc109c122a219d58a", "message": "add t3channel test in ItDedicatedMode.java", "committedDate": "2020-11-06T03:10:39Z", "type": "commit"}, {"oid": "f37b6a589bdb22fd47bdc0a115d3f1fcf6031c6f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f37b6a589bdb22fd47bdc0a115d3f1fcf6031c6f", "message": "use adminserverpod and default service port", "committedDate": "2020-11-06T05:11:26Z", "type": "commit"}, {"oid": "76fafdc9c13bbae369ad86e6959f6007600a0a4b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/76fafdc9c13bbae369ad86e6959f6007600a0a4b", "message": "pass the file name", "committedDate": "2020-11-06T05:18:22Z", "type": "commit"}, {"oid": "8793fc8c17b6f7e6cfdd7437209c5b505a2ce260", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8793fc8c17b6f7e6cfdd7437209c5b505a2ce260", "message": "fix getting service port", "committedDate": "2020-11-06T16:20:43Z", "type": "commit"}, {"oid": "060d8ef7b6a789d4f08c20abf1bb909d9fe6107c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/060d8ef7b6a789d4f08c20abf1bb909d9fe6107c", "message": "add t3channel", "committedDate": "2020-11-06T18:43:03Z", "type": "commit"}, {"oid": "c30adcb693b423532e0a88302bb6ed0ef0bb49a8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c30adcb693b423532e0a88302bb6ed0ef0bb49a8", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into t3channelfix", "committedDate": "2020-11-09T17:02:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzIyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r519973225", "bodyText": "Is it possible to add t3channel to the existing MII domain used in the dedicated mode tests and use that to deploy the application using WLST instead of adding new domain? It saves time by not bringing up a new domain.", "author": "vanajamukkara", "createdAt": "2020-11-09T17:04:01Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java", "diffHunk": "@@ -289,6 +326,197 @@ public void testDedicatedModeNoCrd() {\n     }\n   }\n \n+  /**", "originalCommit": "c30adcb693b423532e0a88302bb6ed0ef0bb49a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5OTgxNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r519999815", "bodyText": "I don't want to modify the common model file used for this image MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG because it is shared by many tests.\nSince anyway this test is running alone, the time it take to run this test shouldn't matter IMO.", "author": "sankarpn", "createdAt": "2020-11-09T17:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzIyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3268e9a0fd7220f3624dce96512768b397cd364d", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\nindex 1a10e1fa4d..9ad7d6e973 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n\n@@ -498,7 +498,7 @@ class ItDedicatedMode {\n     int t3ChannelNodePort = assertDoesNotThrow(()\n         -> getServiceNodePort(domain1Namespace, getExternalServicePodName(adminServerPodName), \"t3channel\"),\n         \"Getting admin server t3channel node port failed\");\n-    logger.info(\"techannel channel node port: {0}\", t3ChannelNodePort);\n+    logger.info(\"t3channel channel node port: {0}\", t3ChannelNodePort);\n     assertNotEquals(-1, t3ChannelNodePort, \"admin server t3ChannelNodePort is not valid\");\n \n     //deploy clusterview application\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzU2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r519973569", "bodyText": "move this into an util class", "author": "vanajamukkara", "createdAt": "2020-11-09T17:04:30Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java", "diffHunk": "@@ -397,6 +625,45 @@ private void verifyDomainNotRunning(String domainNamespace) {\n     }\n   }\n \n+  private static void verifyMemberHealth(String adminServerPodName, List<String> managedServerNames,", "originalCommit": "c30adcb693b423532e0a88302bb6ed0ef0bb49a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwMDUyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r520000520", "bodyText": "This method uses a specific app deployed in the test method. Its not a member for util class.", "author": "sankarpn", "createdAt": "2020-11-09T17:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzU2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "aff66758d2d0c1eedfc4ece98b957e4f700fed3e", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\nindex 1a10e1fa4d..7296e3687e 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n\n@@ -625,45 +397,6 @@ class ItDedicatedMode {\n     }\n   }\n \n-  private static void verifyMemberHealth(String adminServerPodName, List<String> managedServerNames,\n-      String user, String password) {\n-\n-    logger.info(\"Getting node port for default channel\");\n-    int serviceNodePort = assertDoesNotThrow(()\n-        -> getServiceNodePort(domain1Namespace, getExternalServicePodName(adminServerPodName), \"default\"),\n-        \"Getting admin server node port failed\");\n-\n-    logger.info(\"Checking the health of servers in cluster\");\n-    String url = \"http://\" + K8S_NODEPORT_HOST + \":\" + serviceNodePort\n-        + \"/clusterview/ClusterViewServlet?user=\" + user + \"&password=\" + password;\n-\n-    // create standard, reusable retry/backoff policy\n-    ConditionFactory withStandardRetryPolicy\n-        = with().pollDelay(2, SECONDS)\n-            .and().with().pollInterval(10, SECONDS)\n-            .atMost(10, MINUTES).await();\n-\n-    withStandardRetryPolicy.conditionEvaluationListener(\n-        condition -> logger.info(\"Verifying the health of all cluster members\"\n-            + \"(elapsed time {0} ms, remaining time {1} ms)\",\n-            condition.getElapsedTimeInMS(),\n-            condition.getRemainingTimeInMS()))\n-        .until((Callable<Boolean>) () -> {\n-          HttpResponse<String> response = assertDoesNotThrow(() -> OracleHttpClient.get(url, true));\n-          assertEquals(200, response.statusCode(), \"Status code not equals to 200\");\n-          boolean health = true;\n-          for (String managedServer : managedServerNames) {\n-            health = health && response.body().contains(managedServer + \":HEALTH_OK\");\n-            if (health) {\n-              logger.info(managedServer + \" is healthy\");\n-            } else {\n-              logger.info(managedServer + \" health is not OK or server not found\");\n-            }\n-          }\n-          return health;\n-        });\n-  }\n-\n   private void uninstallOperatorAndVerify() {\n     // uninstall operator\n     assertTrue(uninstallOperator(opHelmParams),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzkxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r519973919", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.info(\"techannel channel node port: {0}\", t3ChannelNodePort);\n          \n          \n            \n                logger.info(\"t3channel channel node port: {0}\", t3ChannelNodePort);", "author": "vanajamukkara", "createdAt": "2020-11-09T17:04:59Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java", "diffHunk": "@@ -289,6 +326,197 @@ public void testDedicatedModeNoCrd() {\n     }\n   }\n \n+  /**\n+   * Test t3 channel access by deploying a app using WLST.\n+   * Test Creates a domain in persistent volume using WLST.\n+   * Verifies that the pods comes up and sample application deployment works.\n+   */\n+  @Order(6)\n+  @Test\n+  @DisplayName(\"Test admin server t3 channel access by deploying a application\")\n+  public void testAdminServerT3Channel() {\n+\n+    // create pull secrets for WebLogic image when running in non Kind Kubernetes cluster\n+    // this secret is used only for non-kind cluster\n+    createSecretForBaseImages(domain1Namespace);\n+\n+    // build the clusterview application\n+    Path distDir = BuildApplication.buildApplication(Paths.get(APP_DIR, \"clusterview\"), null, null,\n+        \"dist\", domain1Namespace);\n+    assertTrue(Paths.get(distDir.toString(),\n+        \"clusterview.war\").toFile().exists(),\n+        \"Application archive is not available\");\n+    Path clusterViewAppPath = Paths.get(distDir.toString(), \"clusterview.war\");\n+\n+    final String domainUid = \"t3channeldomain\";\n+    final String clusterName = \"mycluster\";\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+\n+    final String managedServerNameBase = \"ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+    final int managedServerPort = 8001;\n+\n+    int replicaCount = 2;\n+\n+    // in general the node port range has to be between 30,000 to 32,767\n+    // to avoid port conflict because of the delay in using it, the port here\n+    // starts with 30100\n+    final int t3ChannelPort = getNextFreePort(30172, 32767);\n+\n+    final String pvName = domainUid + \"-pv\"; // name of the persistent volume\n+    final String pvcName = domainUid + \"-pvc\"; // name of the persistent volume claim\n+\n+    // create WebLogic domain credential secret\n+    String wlSecretName = \"t3weblogic-credentials\";\n+    createSecretWithUsernamePassword(wlSecretName, domain1Namespace,\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT);\n+\n+    // create persistent volume and persistent volume claim for domain\n+    // these resources should be labeled with domainUid for cleanup after testing\n+    createPV(pvName, domainUid, this.getClass().getSimpleName());\n+    createPVC(pvName, pvcName, domainUid, domain1Namespace);\n+\n+    // create a temporary WebLogic domain property file\n+    File domainPropertiesFile = assertDoesNotThrow(() ->\n+            File.createTempFile(\"domain\", \"properties\"),\n+        \"Failed to create domain properties file\");\n+    Properties p = new Properties();\n+    p.setProperty(\"domain_path\", \"/shared/domains\");\n+    p.setProperty(\"domain_name\", domainUid);\n+    p.setProperty(\"cluster_name\", clusterName);\n+    p.setProperty(\"admin_server_name\", adminServerName);\n+    p.setProperty(\"managed_server_port\", Integer.toString(managedServerPort));\n+    p.setProperty(\"admin_server_port\", \"7001\");\n+    p.setProperty(\"admin_username\", ADMIN_USERNAME_DEFAULT);\n+    p.setProperty(\"admin_password\", ADMIN_PASSWORD_DEFAULT);\n+    p.setProperty(\"admin_t3_public_address\", K8S_NODEPORT_HOST);\n+    p.setProperty(\"admin_t3_channel_port\", Integer.toString(t3ChannelPort));\n+    p.setProperty(\"number_of_ms\", \"2\");\n+    p.setProperty(\"managed_server_name_base\", managedServerNameBase);\n+    p.setProperty(\"domain_logs\", \"/shared/logs\");\n+    p.setProperty(\"production_mode_enabled\", \"true\");\n+    assertDoesNotThrow(() ->\n+            p.store(new FileOutputStream(domainPropertiesFile), \"domain properties file\"),\n+        \"Failed to write domain properties file\");\n+\n+    // WLST script for creating domain\n+    Path wlstScript = Paths.get(RESOURCE_DIR, \"python-scripts\", \"wlst-create-domain-onpv.py\");\n+\n+    logger.info(\"Preparing to run create domain job using WLST\");\n+\n+    List<Path> domainScriptFiles = new ArrayList<>();\n+    domainScriptFiles.add(wlstScript);\n+    domainScriptFiles.add(domainPropertiesFile.toPath());\n+\n+    logger.info(\"Creating a config map to hold domain creation scripts\");\n+    String domainScriptConfigMapName = \"create-domain-scripts-cm\";\n+    assertDoesNotThrow(\n+        () -> createConfigMapForDomainCreation(\n+            domainScriptConfigMapName, domainScriptFiles, domain1Namespace, this.getClass().getSimpleName()),\n+        \"Create configmap for domain creation failed\");\n+\n+    // create a V1Container with specific scripts and properties for creating domain\n+    V1Container jobCreationContainer = new V1Container()\n+        .addCommandItem(\"/bin/sh\")\n+        .addArgsItem(\"/u01/oracle/oracle_common/common/bin/wlst.sh\")\n+        .addArgsItem(\"/u01/weblogic/\" + wlstScript.getFileName()) //wlst.sh script\n+        .addArgsItem(\"-skipWLSModuleScanning\")\n+        .addArgsItem(\"-loadProperties\")\n+        .addArgsItem(\"/u01/weblogic/\" + domainPropertiesFile.getName()); //domain property file\n+\n+    logger.info(\"Running a Kubernetes job to create the domain\");\n+    createDomainJob(WEBLOGIC_IMAGE_TO_USE_IN_SPEC, pvName, pvcName, domainScriptConfigMapName,\n+        domain1Namespace, jobCreationContainer);\n+\n+    // create a domain custom resource configuration object\n+    logger.info(\"Creating domain custom resource\");\n+    Domain domain = new Domain()\n+        .apiVersion(DOMAIN_API_VERSION)\n+        .kind(\"Domain\")\n+        .metadata(new V1ObjectMeta()\n+            .name(domainUid)\n+            .namespace(domain1Namespace))\n+        .spec(new DomainSpec()\n+            .domainUid(domainUid)\n+            .domainHome(\"/shared/domains/\" + domainUid)  // point to domain home in pv\n+            .domainHomeSourceType(\"PersistentVolume\") // set the domain home source type as pv\n+            .image(WEBLOGIC_IMAGE_TO_USE_IN_SPEC)\n+            .imagePullPolicy(\"IfNotPresent\")\n+            .imagePullSecrets(Arrays.asList(\n+                new V1LocalObjectReference()\n+                    .name(BASE_IMAGES_REPO_SECRET)))  // this secret is used only in non-kind cluster\n+            .webLogicCredentialsSecret(new V1SecretReference()\n+                .name(wlSecretName)\n+                .namespace(domain1Namespace))\n+            .includeServerOutInPodLog(true)\n+            .logHomeEnabled(Boolean.TRUE)\n+            .logHome(\"/shared/logs/\" + domainUid)\n+            .dataHome(\"\")\n+            .serverStartPolicy(\"IF_NEEDED\")\n+            .serverPod(new ServerPod() //serverpod\n+                .addEnvItem(new V1EnvVar()\n+                    .name(\"USER_MEM_ARGS\")\n+                    .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n+                .addVolumesItem(new V1Volume()\n+                    .name(pvName)\n+                    .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n+                        .claimName(pvcName)))\n+                .addVolumeMountsItem(new V1VolumeMount()\n+                    .mountPath(\"/shared\")\n+                    .name(pvName)))\n+            .adminServer(new AdminServer() //admin server\n+                .serverStartState(\"RUNNING\")\n+                .adminService(new AdminService()\n+                    .addChannelsItem(new Channel()\n+                        .channelName(\"default\")\n+                        .nodePort(0))\n+                    .addChannelsItem(new Channel()\n+                        .channelName(\"T3Channel\")\n+                        .nodePort(t3ChannelPort))))\n+            .addClustersItem(new Cluster() //cluster\n+                .clusterName(clusterName)\n+                .replicas(replicaCount)\n+                .serverStartState(\"RUNNING\")));\n+\n+    // verify the domain custom resource is created\n+    createDomainAndVerify(domain, domain1Namespace);\n+\n+    // verify the admin server service and pod created\n+    checkPodReadyAndServiceExists(adminServerPodName, domainUid, domain1Namespace);\n+\n+    // verify managed server services and pods created\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Checking managed server service and pod {0} is created in namespace {1}\",\n+          managedServerPodNamePrefix + i, domain1Namespace);\n+      checkPodReadyAndServiceExists(managedServerPodNamePrefix + i, domainUid, domain1Namespace);\n+    }\n+\n+    // deploy application and verify all servers functions normally\n+    logger.info(\"Getting node port for T3 channel\");\n+    int t3ChannelNodePort = assertDoesNotThrow(()\n+        -> getServiceNodePort(domain1Namespace, getExternalServicePodName(adminServerPodName), \"t3channel\"),\n+        \"Getting admin server t3channel node port failed\");\n+    logger.info(\"techannel channel node port: {0}\", t3ChannelNodePort);", "originalCommit": "c30adcb693b423532e0a88302bb6ed0ef0bb49a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwMDYzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2036#discussion_r520000631", "bodyText": "fixed", "author": "sankarpn", "createdAt": "2020-11-09T17:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3MzkxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3268e9a0fd7220f3624dce96512768b397cd364d", "chunk": "diff --git a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\nindex 1a10e1fa4d..9ad7d6e973 100644\n--- a/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n+++ b/integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDedicatedMode.java\n\n@@ -498,7 +498,7 @@ class ItDedicatedMode {\n     int t3ChannelNodePort = assertDoesNotThrow(()\n         -> getServiceNodePort(domain1Namespace, getExternalServicePodName(adminServerPodName), \"t3channel\"),\n         \"Getting admin server t3channel node port failed\");\n-    logger.info(\"techannel channel node port: {0}\", t3ChannelNodePort);\n+    logger.info(\"t3channel channel node port: {0}\", t3ChannelNodePort);\n     assertNotEquals(-1, t3ChannelNodePort, \"admin server t3ChannelNodePort is not valid\");\n \n     //deploy clusterview application\n"}}, {"oid": "7ef73539ea594fa3d9e3b829af54d8eeeabc7b2c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7ef73539ea594fa3d9e3b829af54d8eeeabc7b2c", "message": "fix getting servicve node port", "committedDate": "2020-11-09T17:35:56Z", "type": "commit"}, {"oid": "3268e9a0fd7220f3624dce96512768b397cd364d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3268e9a0fd7220f3624dce96512768b397cd364d", "message": "correct typo", "committedDate": "2020-11-09T17:46:53Z", "type": "commit"}, {"oid": "aff66758d2d0c1eedfc4ece98b957e4f700fed3e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aff66758d2d0c1eedfc4ece98b957e4f700fed3e", "message": "move the t3 channel test to separate it class", "committedDate": "2020-11-09T18:33:25Z", "type": "commit"}, {"oid": "742da59d2ee8925ce9e648278350f23e6b9c526d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/742da59d2ee8925ce9e648278350f23e6b9c526d", "message": "install operator", "committedDate": "2020-11-09T18:52:04Z", "type": "commit"}, {"oid": "16fe42484fe384676d24115eb7a38278c75caa9f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16fe42484fe384676d24115eb7a38278c75caa9f", "message": "exclude ItT3Channel from parallel runs", "committedDate": "2020-11-10T16:07:56Z", "type": "commit"}, {"oid": "2b99fdf0208d690239d35b317116c1fa8c8a7214", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2b99fdf0208d690239d35b317116c1fa8c8a7214", "message": "merge develop branch", "committedDate": "2020-11-10T18:18:51Z", "type": "commit"}, {"oid": "f7a808410eeb60b91b72fc479cea7beb488a76f4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f7a808410eeb60b91b72fc479cea7beb488a76f4", "message": "exclude t3channel test in parallel runs", "committedDate": "2020-11-10T18:19:43Z", "type": "commit"}, {"oid": "a496aa1c8b5f281564c30d9fae914bf2edc18624", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a496aa1c8b5f281564c30d9fae914bf2edc18624", "message": "rollback changes to kindtest.sh", "committedDate": "2020-11-10T18:27:00Z", "type": "commit"}, {"oid": "00bb855121291ab55f49d3af617fff3deb1d0d88", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/00bb855121291ab55f49d3af617fff3deb1d0d88", "message": "fix", "committedDate": "2020-11-10T18:38:23Z", "type": "commit"}, {"oid": "da0172e9f5e38fc8f41f01e3532ff29f1dfc7534", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/da0172e9f5e38fc8f41f01e3532ff29f1dfc7534", "message": "Merge branch 'develop' into t3channelfix", "committedDate": "2020-11-10T18:38:34Z", "type": "commit"}, {"oid": "03a80bfe3dfe9e42bea934baab3944061887d6a9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/03a80bfe3dfe9e42bea934baab3944061887d6a9", "message": "exclude t3channel test in parallel run", "committedDate": "2020-11-10T18:39:30Z", "type": "commit"}, {"oid": "34e30952c9a5b627b0b3adf0cbee72543e8685f0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/34e30952c9a5b627b0b3adf0cbee72543e8685f0", "message": "fix typo", "committedDate": "2020-11-10T18:40:57Z", "type": "commit"}]}