{"pr_number": 8810, "pr_title": "BAEL-3900 Fixed ApplicationLiveTest.", "pr_createdAt": "2020-03-02T20:04:31Z", "pr_url": "https://github.com/eugenp/tutorials/pull/8810", "timeline": [{"oid": "7eabb866255c83933e9bb8aad485b7b4ede41c69", "url": "https://github.com/eugenp/tutorials/commit/7eabb866255c83933e9bb8aad485b7b4ede41c69", "message": "BAEL-3900 Fixed ApplicationLiveTest.", "committedDate": "2020-03-02T20:02:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTU3MQ==", "url": "https://github.com/eugenp/tutorials/pull/8810#discussion_r387301571", "bodyText": "Can we format this new block properly using the appropriate formatter e.g eclipse:\n\nhttps://github.com/eugenp/tutorials/blob/master/eclipse/formatter.xml", "author": "JonCook", "createdAt": "2020-03-03T21:23:29Z", "path": "spring-security-modules/spring-security-mvc-boot-1/src/main/java/org/baeldung/custom/config/SecurityConfig.java", "diffHunk": "@@ -2,12 +2,25 @@\n \n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.security.crypto.password.PasswordEncoder;\n \n @Configuration\n-public class SecurityConfig {\n+@EnableWebSecurity\n+public class SecurityConfig extends WebSecurityConfigurerAdapter {\n \n+    @Override\n+    protected void configure(final HttpSecurity http) throws Exception {\n+        http.csrf()", "originalCommit": "7eabb866255c83933e9bb8aad485b7b4ede41c69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNTc4Mw==", "url": "https://github.com/eugenp/tutorials/pull/8810#discussion_r387335783", "bodyText": "Done. Sorry about this omission.", "author": "mathieufortin01", "createdAt": "2020-03-03T22:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMwMTU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "635f95b26ee474631cee797ab0a0857ff608c22a", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-1/src/main/java/org/baeldung/custom/config/SecurityConfig.java b/spring-security-modules/spring-security-mvc-boot-1/src/main/java/org/baeldung/custom/config/SecurityConfig.java\nindex 955b3bb214..06357650dc 100644\n--- a/spring-security-modules/spring-security-mvc-boot-1/src/main/java/org/baeldung/custom/config/SecurityConfig.java\n+++ b/spring-security-modules/spring-security-mvc-boot-1/src/main/java/org/baeldung/custom/config/SecurityConfig.java\n\n@@ -16,11 +16,14 @@ public class SecurityConfig extends WebSecurityConfigurerAdapter {\n     protected void configure(final HttpSecurity http) throws Exception {\n         http.csrf()\n             .disable()\n-            .authorizeRequests().anyRequest().authenticated()\n+            .authorizeRequests()\n+            .anyRequest()\n+            .authenticated()\n             .and()\n-            .formLogin().permitAll();\n+            .formLogin()\n+            .permitAll();\n     }\n-    \n+\n     @Bean\n     public PasswordEncoder encoder() {\n         return new BCryptPasswordEncoder(11);\n"}}, {"oid": "635f95b26ee474631cee797ab0a0857ff608c22a", "url": "https://github.com/eugenp/tutorials/commit/635f95b26ee474631cee797ab0a0857ff608c22a", "message": "fixed format", "committedDate": "2020-03-03T22:28:47Z", "type": "commit"}, {"oid": "cff8739495ff4a6abc533dfc57e53cf60e5ed6b7", "url": "https://github.com/eugenp/tutorials/commit/cff8739495ff4a6abc533dfc57e53cf60e5ed6b7", "message": "added notice on how to run the live tests", "committedDate": "2020-03-03T23:46:32Z", "type": "commit"}]}