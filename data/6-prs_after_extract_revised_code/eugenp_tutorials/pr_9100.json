{"pr_number": 9100, "pr_title": "BAEL-3961 Using a list of values in a JDBCTemplate IN clause", "pr_createdAt": "2020-04-14T06:45:41Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9100", "timeline": [{"oid": "8c2b32df9169291e56b284072bedb01ef4d11d04", "url": "https://github.com/eugenp/tutorials/commit/8c2b32df9169291e56b284072bedb01ef4d11d04", "message": "BAEL-3961 Using a list of values in a JDBCTemplate IN clause", "committedDate": "2020-04-14T06:43:27Z", "type": "commit"}, {"oid": "d40b549f280fcf38b69e0b433a0410eb9345d20d", "url": "https://github.com/eugenp/tutorials/commit/d40b549f280fcf38b69e0b433a0410eb9345d20d", "message": "BAEL-3961 Make the program more robust by only create the table when necessary and clean all data in the temp table.", "committedDate": "2020-04-15T01:23:11Z", "type": "commit"}, {"oid": "1272006aa6a10491a0d6cd1a16845c674be2f11c", "url": "https://github.com/eugenp/tutorials/commit/1272006aa6a10491a0d6cd1a16845c674be2f11c", "message": "BAEL-3961 Remove address field of Employee class.", "committedDate": "2020-04-18T18:48:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NjY2NQ==", "url": "https://github.com/eugenp/tutorials/pull/9100#discussion_r413476665", "bodyText": "To improve readability, we could move the first parameter to the query method to its own line.", "author": "KevinGilmore", "createdAt": "2020-04-23T03:11:36Z", "path": "persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java", "diffHunk": "@@ -1,21 +1,64 @@\n package com.baeldung.jdbc;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n import javax.sql.DataSource;\n \n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n+import org.springframework.jdbc.core.namedparam.SqlParameterSource;\n import org.springframework.stereotype.Repository;\n \n @Repository\n public class EmployeeDAO {\n     private JdbcTemplate jdbcTemplate;\n+    private NamedParameterJdbcTemplate namedJdbcTemplate;\n \n     public void setDataSource(DataSource dataSource) {\n         jdbcTemplate = new JdbcTemplate(dataSource);\n+        namedJdbcTemplate = new NamedParameterJdbcTemplate(dataSource);\n     }\n \n     public int getCountOfEmployees() {\n         return jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM EMPLOYEE\", Integer.class);\n     }\n \n-   \n+    public List<Employee> getEmployeesFromIdListNamed(List<Integer> ids) {\n+        SqlParameterSource parameters = new MapSqlParameterSource(\"ids\", ids);\n+        List<Employee> employees = namedJdbcTemplate.query(\"SELECT * FROM EMPLOYEE WHERE id IN (:ids)\", \n+          parameters, \n+          (rs, rowNum) -> new Employee(rs.getInt(\"id\"), rs.getString(\"first_name\"), rs.getString(\"last_name\")));", "originalCommit": "1272006aa6a10491a0d6cd1a16845c674be2f11c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e62b00c7f2a31e1ba1ba49665b1ec29fccba3c6", "chunk": "diff --git a/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java b/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\nindex 8637f6f851..45f206a2b9 100644\n--- a/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\n+++ b/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\n\n@@ -37,7 +37,8 @@ public class EmployeeDAO {\n \n     public List<Employee> getEmployeesFromIdList(List<Integer> ids) {\n         String inSql = String.join(\",\", Collections.nCopies(ids.size(), \"?\"));\n-        List<Employee> employees = jdbcTemplate.query(String.format(\"SELECT * FROM EMPLOYEE WHERE id IN (%s)\", inSql), \n+        List<Employee> employees = jdbcTemplate.query(\n+          String.format(\"SELECT * FROM EMPLOYEE WHERE id IN (%s)\", inSql), \n           ids.toArray(), \n           (rs, rowNum) -> new Employee(rs.getInt(\"id\"), rs.getString(\"first_name\"), rs.getString(\"last_name\")));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NzAzNA==", "url": "https://github.com/eugenp/tutorials/pull/9100#discussion_r413477034", "bodyText": "Same as above -- move the parameter containing the SQL statement to its own line.", "author": "KevinGilmore", "createdAt": "2020-04-23T03:12:54Z", "path": "persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java", "diffHunk": "@@ -1,21 +1,64 @@\n package com.baeldung.jdbc;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n import javax.sql.DataSource;\n \n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n+import org.springframework.jdbc.core.namedparam.SqlParameterSource;\n import org.springframework.stereotype.Repository;\n \n @Repository\n public class EmployeeDAO {\n     private JdbcTemplate jdbcTemplate;\n+    private NamedParameterJdbcTemplate namedJdbcTemplate;\n \n     public void setDataSource(DataSource dataSource) {\n         jdbcTemplate = new JdbcTemplate(dataSource);\n+        namedJdbcTemplate = new NamedParameterJdbcTemplate(dataSource);\n     }\n \n     public int getCountOfEmployees() {\n         return jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM EMPLOYEE\", Integer.class);\n     }\n \n-   \n+    public List<Employee> getEmployeesFromIdListNamed(List<Integer> ids) {\n+        SqlParameterSource parameters = new MapSqlParameterSource(\"ids\", ids);\n+        List<Employee> employees = namedJdbcTemplate.query(\"SELECT * FROM EMPLOYEE WHERE id IN (:ids)\", \n+          parameters, \n+          (rs, rowNum) -> new Employee(rs.getInt(\"id\"), rs.getString(\"first_name\"), rs.getString(\"last_name\")));\n+\n+        return employees;\n+    }\n+\n+    public List<Employee> getEmployeesFromIdList(List<Integer> ids) {\n+        String inSql = String.join(\",\", Collections.nCopies(ids.size(), \"?\"));\n+        List<Employee> employees = jdbcTemplate.query(String.format(\"SELECT * FROM EMPLOYEE WHERE id IN (%s)\", inSql), \n+          ids.toArray(), \n+          (rs, rowNum) -> new Employee(rs.getInt(\"id\"), rs.getString(\"first_name\"), rs.getString(\"last_name\")));", "originalCommit": "1272006aa6a10491a0d6cd1a16845c674be2f11c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e62b00c7f2a31e1ba1ba49665b1ec29fccba3c6", "chunk": "diff --git a/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java b/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\nindex 8637f6f851..45f206a2b9 100644\n--- a/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\n+++ b/persistence-modules/spring-persistence-simple-2/src/main/java/com/baeldung/jdbc/EmployeeDAO.java\n\n@@ -37,7 +37,8 @@ public class EmployeeDAO {\n \n     public List<Employee> getEmployeesFromIdList(List<Integer> ids) {\n         String inSql = String.join(\",\", Collections.nCopies(ids.size(), \"?\"));\n-        List<Employee> employees = jdbcTemplate.query(String.format(\"SELECT * FROM EMPLOYEE WHERE id IN (%s)\", inSql), \n+        List<Employee> employees = jdbcTemplate.query(\n+          String.format(\"SELECT * FROM EMPLOYEE WHERE id IN (%s)\", inSql), \n           ids.toArray(), \n           (rs, rowNum) -> new Employee(rs.getInt(\"id\"), rs.getString(\"first_name\"), rs.getString(\"last_name\")));\n \n"}}, {"oid": "0e62b00c7f2a31e1ba1ba49665b1ec29fccba3c6", "url": "https://github.com/eugenp/tutorials/commit/0e62b00c7f2a31e1ba1ba49665b1ec29fccba3c6", "message": "BAEL-3961 move the sql string into a new line to improve readability.", "committedDate": "2020-04-23T04:15:54Z", "type": "commit"}, {"oid": "07c28516105861080dfa6ee0ecc4be463e457bc3", "url": "https://github.com/eugenp/tutorials/commit/07c28516105861080dfa6ee0ecc4be463e457bc3", "message": "BAEL-3961 move the sql string into a new line to improve readability.", "committedDate": "2020-04-23T04:36:18Z", "type": "commit"}]}