{"pr_number": 8688, "pr_title": "[BAEL-3601] How to Lock Files in Java", "pr_createdAt": "2020-02-09T06:01:17Z", "pr_url": "https://github.com/eugenp/tutorials/pull/8688", "timeline": [{"oid": "5a0cf781ffcc6efccfe83103c466fe616d1eeb8d", "url": "https://github.com/eugenp/tutorials/commit/5a0cf781ffcc6efccfe83103c466fe616d1eeb8d", "message": "Hexagon architecture\n\nAn example of Hexagon architecture in java.", "committedDate": "2019-11-20T07:46:33Z", "type": "commit"}, {"oid": "e5cb222a506a0217245e63b32e4b8625f7a6df19", "url": "https://github.com/eugenp/tutorials/commit/e5cb222a506a0217245e63b32e4b8625f7a6df19", "message": "Merge branch 'master' of https://github.com/eugenp/tutorials", "committedDate": "2019-12-19T03:02:20Z", "type": "commit"}, {"oid": "748bafdf75ff0cac42ab2afa84cdfb4f57bc04b7", "url": "https://github.com/eugenp/tutorials/commit/748bafdf75ff0cac42ab2afa84cdfb4f57bc04b7", "message": "File locking example", "committedDate": "2020-01-03T05:43:57Z", "type": "commit"}, {"oid": "5531c9966fcbc5aaa0dfca69b6296a5e6f335305", "url": "https://github.com/eugenp/tutorials/commit/5531c9966fcbc5aaa0dfca69b6296a5e6f335305", "message": "New version of the article", "committedDate": "2020-01-12T22:26:59Z", "type": "commit"}, {"oid": "c333ec4683ba251b9d93fc4c3bab722325860f23", "url": "https://github.com/eugenp/tutorials/commit/c333ec4683ba251b9d93fc4c3bab722325860f23", "message": "Added comments on unit tests.", "committedDate": "2020-01-12T22:31:59Z", "type": "commit"}, {"oid": "c5f2afc73046f2b862a652ba79e501766f52966a", "url": "https://github.com/eugenp/tutorials/commit/c5f2afc73046f2b862a652ba79e501766f52966a", "message": "Replaced println commands by proper logging", "committedDate": "2020-01-25T22:39:29Z", "type": "commit"}, {"oid": "b0869b1b9481a86248dff150dd641515883918f9", "url": "https://github.com/eugenp/tutorials/commit/b0869b1b9481a86248dff150dd641515883918f9", "message": "Merge branch 'master' of https://github.com/psoares/tutorials", "committedDate": "2020-02-09T04:47:22Z", "type": "commit"}, {"oid": "8134888258b145dbb034281d13f3ae9d13ea5ceb", "url": "https://github.com/eugenp/tutorials/commit/8134888258b145dbb034281d13f3ae9d13ea5ceb", "message": "[BAEL-3601] - Fix code review comments.", "committedDate": "2020-02-09T05:49:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NjkyMg==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376766922", "bodyText": "Let's remove this unused import", "author": "JonCook", "createdAt": "2020-02-09T09:05:44Z", "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.baeldung.lock;\n+\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Charsets;", "originalCommit": "8134888258b145dbb034281d13f3ae9d13ea5ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java b/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\nindex 4e79bdf4eb..4b65221708 100644\n--- a/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\n+++ b/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\n\n@@ -1,5 +1,8 @@\n package com.baeldung.lock;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2Njk4NQ==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376766985", "bodyText": "The formatting still looks to be off?", "author": "JonCook", "createdAt": "2020-02-09T09:06:51Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {", "originalCommit": "8134888258b145dbb034281d13f3ae9d13ea5ceb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MTAyOA==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376791028", "bodyText": "Can you please tell me what is off? I used the intelliJ settings I found in https://github.com/eugenp/tutorials/blob/master/intelliJ/intelliJ-formatter.xml", "author": "psoares", "createdAt": "2020-02-09T15:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2Njk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex da4e321ebf..a7fd15301a 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -14,33 +14,39 @@ import org.junit.jupiter.api.Test;\n \n class FileLocksUnitTest {\n \n-    @Test void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n-    @Test void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n         FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n         assertNotNull(lock);\n         assertFalse(lock.isShared());\n     }\n \n-    @Test void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n         FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n         assertNotNull(lock);\n         assertFalse(lock.isShared());\n     }\n \n-    @Test void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n         assertThrows(NonReadableChannelException.class, FileLocks::getReadLockFromOutputStream);\n     }\n \n-    @Test void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n+    @Test\n+    void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n         FileLock lock = FileLocks.getReadLockFromInputStream(0, 10);\n         assertNotNull(lock);\n         assertTrue(lock.isShared());\n     }\n \n-    @Test void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {\n+    @Test\n+    void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {\n         FileLock lock = FileLocks.getReadLockFromRandomAccessFile(0, 10);\n         assertNotNull(lock);\n         assertTrue(lock.isShared());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NzAwNw==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r376767007", "bodyText": "Formatting also still looks to be off here in this class?", "author": "JonCook", "createdAt": "2020-02-09T09:07:15Z", "path": "core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.baeldung.lock;\n+\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Charsets;\n+\n+public class FileLocks {", "originalCommit": "8134888258b145dbb034281d13f3ae9d13ea5ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java b/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\nindex 4e79bdf4eb..4b65221708 100644\n--- a/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\n+++ b/core-java-modules/core-java-nio-2/src/main/java/com/baeldung/lock/FileLocks.java\n\n@@ -1,5 +1,8 @@\n package com.baeldung.lock;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n"}}, {"oid": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "url": "https://github.com/eugenp/tutorials/commit/d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "message": "[BAEL-3601] - Reformatted code with eclipse. Removed unused imports.", "committedDate": "2020-02-09T15:17:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzE2MA==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633160", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n          \n          \n            \n                void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:23:05Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzIyNQ==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633225", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n          \n          \n            \n                void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_thenLock() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:23:28Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzI5OA==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n          \n          \n            \n                void givenAPath_whenGetExclusiveLock_thenLock() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:23:49Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzM0Nw==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633347", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n          \n          \n            \n                void givenAFileOutputStream_whenGetSharedLock_thenThrowNonReadableChannelException() {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:24:02Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzM5OA==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633398", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n          \n          \n            \n                void givenAnInputStream_whenGetSharedLock_thenLock() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:24:21Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n+        assertThrows(NonReadableChannelException.class, FileLocks::getReadLockFromOutputStream);\n+    }\n+\n+    @Test\n+    void givenAnInputStream_whenGetSharedLock_lock() throws IOException {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMzQ0MQ==", "url": "https://github.com/eugenp/tutorials/pull/8688#discussion_r378633441", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {\n          \n          \n            \n                void givenARandomAccessFile_whenGetSharedLock_thenLock() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-02-13T03:24:34Z", "path": "core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.baeldung.lock;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileLock;\n+import java.nio.channels.NonReadableChannelException;\n+import java.nio.channels.NonWritableChannelException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class FileLocksUnitTest {\n+\n+    @Test\n+    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+        assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFileWithReadWriteAccess_whenGetWriteLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromRandomAccessFile(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAPath_whenGetExclusiveLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getExclusiveLockFromFileChannelOpen(0, 10);\n+        assertNotNull(lock);\n+        assertFalse(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenAFileOutputStream_whenGetSharedLock_throwNonReadableChannelException() {\n+        assertThrows(NonReadableChannelException.class, FileLocks::getReadLockFromOutputStream);\n+    }\n+\n+    @Test\n+    void givenAnInputStream_whenGetSharedLock_lock() throws IOException {\n+        FileLock lock = FileLocks.getReadLockFromInputStream(0, 10);\n+        assertNotNull(lock);\n+        assertTrue(lock.isShared());\n+    }\n+\n+    @Test\n+    void givenARandomAccessFile_whenGetSharedLock_lock() throws IOException {", "originalCommit": "d03b119259c9ccd6a8f8b48cc683fa6870ea6a74", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bee6c43209605a5733671deefb1161dbb7daf85", "chunk": "diff --git a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\nindex a7fd15301a..262bc3c128 100644\n--- a/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n+++ b/core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\n@@ -15,7 +15,7 @@ import org.junit.jupiter.api.Test;\n class FileLocksUnitTest {\n \n     @Test\n-    void givenAnInputStream_whenGetWriteLock_throwNonWritableChannelException() {\n+    void givenAnInputStream_whenGetWriteLock_thenThrowNonWritableChannelException() {\n         assertThrows(NonWritableChannelException.class, () -> FileLocks.getExclusiveLockFromInputStream());\n     }\n \n"}}, {"oid": "9bee6c43209605a5733671deefb1161dbb7daf85", "url": "https://github.com/eugenp/tutorials/commit/9bee6c43209605a5733671deefb1161dbb7daf85", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:11:28Z", "type": "commit"}, {"oid": "4ecc47280ea1f2ef9725ac23adc4758e0daca450", "url": "https://github.com/eugenp/tutorials/commit/4ecc47280ea1f2ef9725ac23adc4758e0daca450", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:11:34Z", "type": "commit"}, {"oid": "6db4f6ebfae5e626fcd14e4bd17731ce6b47f6bd", "url": "https://github.com/eugenp/tutorials/commit/6db4f6ebfae5e626fcd14e4bd17731ce6b47f6bd", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:11:41Z", "type": "commit"}, {"oid": "ad39bcfd9679f8a391646d4d8475f6c19916173a", "url": "https://github.com/eugenp/tutorials/commit/ad39bcfd9679f8a391646d4d8475f6c19916173a", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:11:52Z", "type": "commit"}, {"oid": "5806a622b23b6bac01cffd90a25a9c4bc2522753", "url": "https://github.com/eugenp/tutorials/commit/5806a622b23b6bac01cffd90a25a9c4bc2522753", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:12:30Z", "type": "commit"}, {"oid": "1e16f0ed7f2e9bb1e5fd1467927c48e229735ed3", "url": "https://github.com/eugenp/tutorials/commit/1e16f0ed7f2e9bb1e5fd1467927c48e229735ed3", "message": "Update core-java-modules/core-java-nio-2/src/test/java/com/baeldung/lock/FileLocksUnitTest.java\n\nCo-Authored-By: KevinGilmore <kpg102@gmail.com>", "committedDate": "2020-02-15T04:12:37Z", "type": "commit"}, {"oid": "859bf3fc6752cce8fdaa375b9f3e5d7be2e3239e", "url": "https://github.com/eugenp/tutorials/commit/859bf3fc6752cce8fdaa375b9f3e5d7be2e3239e", "message": "Reverted change on README.md", "committedDate": "2020-02-15T04:20:05Z", "type": "commit"}]}