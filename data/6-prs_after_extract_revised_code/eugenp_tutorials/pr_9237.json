{"pr_number": 9237, "pr_title": "BAEL-1362 - Retry with Spring Cloud Ribbon", "pr_createdAt": "2020-05-04T19:32:40Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9237", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NjgwMg==", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424796802", "bodyText": "this is redundant here.", "author": "ashleyfrieze", "createdAt": "2020-05-13T23:58:18Z", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.spring.cloud.ribbon.retry.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.client.RestTemplate;\n+\n+@RestController\n+public class RibbonClientController {\n+\n+    @Autowired\n+    private RestTemplate restTemplate;\n+\n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n+    @RequestMapping(\"/client/weather\")\n+    public String weather() {\n+        String result = this.restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);", "originalCommit": "3ec5d95c257f390471d0b540d4663b896c414b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "chunk": "diff --git a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java b/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\nindex 489b5e8266..ebe5b58386 100644\n--- a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\n+++ b/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\n\n@@ -1,21 +1,21 @@\n package com.baeldung.spring.cloud.ribbon.retry.controller;\n \n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.RestController;\n import org.springframework.web.client.RestTemplate;\n \n @RestController\n public class RibbonClientController {\n \n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n     @Autowired\n     private RestTemplate restTemplate;\n \n-    private static final String WEATHER_SERVICE = \"weather-service\";\n-\n-    @RequestMapping(\"/client/weather\")\n+    @GetMapping(\"/client/weather\")\n     public String weather() {\n-        String result = this.restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);\n+        String result = restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);\n         return \"Weather Service Response: \" + result;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NjkxMg==", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424796912", "bodyText": "Can this be GetMapping?", "author": "ashleyfrieze", "createdAt": "2020-05-13T23:58:40Z", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.spring.cloud.ribbon.retry.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.client.RestTemplate;\n+\n+@RestController\n+public class RibbonClientController {\n+\n+    @Autowired\n+    private RestTemplate restTemplate;\n+\n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n+    @RequestMapping(\"/client/weather\")", "originalCommit": "3ec5d95c257f390471d0b540d4663b896c414b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "chunk": "diff --git a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java b/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\nindex 489b5e8266..ebe5b58386 100644\n--- a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\n+++ b/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/main/java/com/baeldung/spring/cloud/ribbon/retry/controller/RibbonClientController.java\n\n@@ -1,21 +1,21 @@\n package com.baeldung.spring.cloud.ribbon.retry.controller;\n \n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.RestController;\n import org.springframework.web.client.RestTemplate;\n \n @RestController\n public class RibbonClientController {\n \n+    private static final String WEATHER_SERVICE = \"weather-service\";\n+\n     @Autowired\n     private RestTemplate restTemplate;\n \n-    private static final String WEATHER_SERVICE = \"weather-service\";\n-\n-    @RequestMapping(\"/client/weather\")\n+    @GetMapping(\"/client/weather\")\n     public String weather() {\n-        String result = this.restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);\n+        String result = restTemplate.getForObject(\"http://\" + WEATHER_SERVICE + \"/weather\", String.class);\n         return \"Weather Service Response: \" + result;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NzA0NA==", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424797044", "bodyText": "Do we need this test?", "author": "ashleyfrieze", "createdAt": "2020-05-13T23:59:07Z", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.cloud.ribbon.retry;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+public class SpringContextTest {\n+\n+    @Test\n+    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n+    }", "originalCommit": "3ec5d95c257f390471d0b540d4663b896c414b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "chunk": "diff --git a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java b/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java\ndeleted file mode 100644\nindex e84ad9a23c..0000000000\n--- a/spring-cloud/spring-cloud-ribbon-retry/ribbon-client-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java\n+++ /dev/null\n\n@@ -1,13 +0,0 @@\n-package com.baeldung.spring.cloud.ribbon.retry;\n-\n-import org.junit.jupiter.api.Test;\n-import org.springframework.boot.test.context.SpringBootTest;\n-\n-@SpringBootTest\n-public class SpringContextTest {\n-\n-    @Test\n-    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n-    }\n-\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NzM3Mg==", "url": "https://github.com/eugenp/tutorials/pull/9237#discussion_r424797372", "bodyText": "Do we need this test?", "author": "ashleyfrieze", "createdAt": "2020-05-14T00:00:19Z", "path": "spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.spring.cloud.ribbon.retry;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+public class SpringContextTest {\n+\n+    @Test\n+    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n+    }", "originalCommit": "3ec5d95c257f390471d0b540d4663b896c414b9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "chunk": "diff --git a/spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java b/spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java\ndeleted file mode 100644\nindex e84ad9a23c..0000000000\n--- a/spring-cloud/spring-cloud-ribbon-retry/ribbon-weather-service/src/test/java/com/baeldung/spring/cloud/ribbon/retry/SpringContextTest.java\n+++ /dev/null\n\n@@ -1,13 +0,0 @@\n-package com.baeldung.spring.cloud.ribbon.retry;\n-\n-import org.junit.jupiter.api.Test;\n-import org.springframework.boot.test.context.SpringBootTest;\n-\n-@SpringBootTest\n-public class SpringContextTest {\n-\n-    @Test\n-    public void whenSpringContextIsBootstrapped_thenNoExceptions() {\n-    }\n-\n-}\n\\ No newline at end of file\n"}}, {"oid": "3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "url": "https://github.com/eugenp/tutorials/commit/3d0243acb5ce021b1fb68ede8fe365e5a354f50b", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-05-17T18:46:13Z", "type": "forcePushed"}, {"oid": "6e857ef7f614e5b657e32149c2aa0c4e12927018", "url": "https://github.com/eugenp/tutorials/commit/6e857ef7f614e5b657e32149c2aa0c4e12927018", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-05-27T19:21:22Z", "type": "forcePushed"}, {"oid": "303ec399b196fbc173cbe6a87267032d1ae7171a", "url": "https://github.com/eugenp/tutorials/commit/303ec399b196fbc173cbe6a87267032d1ae7171a", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-05-29T14:02:43Z", "type": "forcePushed"}, {"oid": "47597c631f525c72ba9eceed4c4a9812c4c44796", "url": "https://github.com/eugenp/tutorials/commit/47597c631f525c72ba9eceed4c4a9812c4c44796", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-06-03T11:09:19Z", "type": "forcePushed"}, {"oid": "3129a580a0c1943fa8a718712b680c9c2fc0fa59", "url": "https://github.com/eugenp/tutorials/commit/3129a580a0c1943fa8a718712b680c9c2fc0fa59", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-06-03T15:15:17Z", "type": "forcePushed"}, {"oid": "911291997aeaf26893ce57be85248bd03329d9d8", "url": "https://github.com/eugenp/tutorials/commit/911291997aeaf26893ce57be85248bd03329d9d8", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-06-08T18:42:50Z", "type": "commit"}, {"oid": "911291997aeaf26893ce57be85248bd03329d9d8", "url": "https://github.com/eugenp/tutorials/commit/911291997aeaf26893ce57be85248bd03329d9d8", "message": "BAEL-1362 - Retry with Spring Cloud Ribbon", "committedDate": "2020-06-08T18:42:50Z", "type": "forcePushed"}]}