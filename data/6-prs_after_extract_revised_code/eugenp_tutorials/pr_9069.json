{"pr_number": 9069, "pr_title": "BAEL-3969 Spring Security - Custom Logout Handler", "pr_createdAt": "2020-04-10T15:23:31Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9069", "timeline": [{"oid": "c6dd449934909c463cf7c895ceeb56340432c54c", "url": "https://github.com/eugenp/tutorials/commit/c6dd449934909c463cf7c895ceeb56340432c54c", "message": "BAEL-3969 Spring Security - Custom Logout Handler", "committedDate": "2020-04-10T15:21:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNzY3Nw==", "url": "https://github.com/eugenp/tutorials/pull/9069#discussion_r407037677", "bodyText": "Could we give this class a better name which more closely matches the article? e.g. CustomLogoutApplication", "author": "JonCook", "createdAt": "2020-04-11T08:50:37Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/LogoutDemoApplication.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.baeldung.customlogouthandler;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class LogoutDemoApplication {", "originalCommit": "c6dd449934909c463cf7c895ceeb56340432c54c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a5f46e8fedf31612f9116597c788449ff6307df", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/LogoutDemoApplication.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/CustomLogoutApplication.java\nsimilarity index 54%\nrename from spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/LogoutDemoApplication.java\nrename to spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/CustomLogoutApplication.java\nindex 027334dd6b..39d867b1f4 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/LogoutDemoApplication.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/CustomLogoutApplication.java\n\n@@ -4,10 +4,10 @@ import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n \n @SpringBootApplication\n-public class LogoutDemoApplication {\n+public class CustomLogoutApplication {\n \n-\tpublic static void main(String[] args) {\n-\t\tSpringApplication.run(LogoutDemoApplication.class, args);\n-\t}\n+    public static void main(String[] args) {\n+        SpringApplication.run(CustomLogoutApplication.class, args);\n+    }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNzcxNg==", "url": "https://github.com/eugenp/tutorials/pull/9069#discussion_r407037716", "bodyText": "Here we can use new HttpEntity to avoid the warnings.", "author": "JonCook", "createdAt": "2020-04-11T08:51:11Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package com.baeldung.customlogouthandler;\n+\n+import com.baeldung.customlogouthandler.services.UserCache;\n+import org.junit.jupiter.api.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.context.jdbc.Sql;\n+import org.springframework.test.context.jdbc.SqlGroup;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@SpringBootTest(classes = {LogoutDemoApplication.class, MvcConfiguration.class}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@SqlGroup({\n+\t\t@Sql(value = \"classpath:customlogouthandler/before.sql\", executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD),\n+\t\t@Sql(value = \"classpath:customlogouthandler/after.sql\", executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)\n+})\n+class CustomLogoutHandlerIntegrationTest {\n+\n+\t@Autowired\n+\tprivate TestRestTemplate restTemplate;\n+\n+\t@Autowired\n+\tprivate UserCache userCache;\n+\n+\t@LocalServerPort\n+\tprivate int port;\n+\n+\t@Test\n+\tpublic void whenLogin_thenUseUserCache() throws Exception {\n+\t// User cache should be empty on start\n+\tassertThat(userCache.size()).isEqualTo(0);\n+\n+\t// Request using first login\n+\tResponseEntity<String> response = restTemplate\n+\t\t\t.withBasicAuth(\"user\", \"pass\")\n+\t\t\t.getForEntity(getLanguageUrl(), String.class);\n+\n+\tassertThat(response.getBody()).contains(\"english\");\n+\n+\t// User cache must contain the user\n+\tassertThat(userCache.size()).isEqualTo(1);\n+\n+\t// Getting the session cookie\n+\tHttpHeaders requestHeaders = new HttpHeaders();\n+\trequestHeaders.add(\"Cookie\", response.getHeaders().getFirst(HttpHeaders.SET_COOKIE));\n+\n+\t// Request with the session cookie\n+\tresponse = restTemplate\n+\t\t\t.exchange(getLanguageUrl(), HttpMethod.GET, new HttpEntity(requestHeaders), String.class);", "originalCommit": "c6dd449934909c463cf7c895ceeb56340432c54c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a5f46e8fedf31612f9116597c788449ff6307df", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java b/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\nindex 3c325a2006..cd8a1a72d6 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\n\n@@ -1,6 +1,7 @@\n package com.baeldung.customlogouthandler;\n \n-import com.baeldung.customlogouthandler.services.UserCache;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n import org.junit.jupiter.api.Test;\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNzczMg==", "url": "https://github.com/eugenp/tutorials/pull/9069#discussion_r407037732", "bodyText": "Likewise here as well. See last comment.", "author": "JonCook", "createdAt": "2020-04-11T08:51:31Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package com.baeldung.customlogouthandler;\n+\n+import com.baeldung.customlogouthandler.services.UserCache;\n+import org.junit.jupiter.api.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.context.jdbc.Sql;\n+import org.springframework.test.context.jdbc.SqlGroup;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@SpringBootTest(classes = {LogoutDemoApplication.class, MvcConfiguration.class}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@SqlGroup({\n+\t\t@Sql(value = \"classpath:customlogouthandler/before.sql\", executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD),\n+\t\t@Sql(value = \"classpath:customlogouthandler/after.sql\", executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)\n+})\n+class CustomLogoutHandlerIntegrationTest {\n+\n+\t@Autowired\n+\tprivate TestRestTemplate restTemplate;\n+\n+\t@Autowired\n+\tprivate UserCache userCache;\n+\n+\t@LocalServerPort\n+\tprivate int port;\n+\n+\t@Test\n+\tpublic void whenLogin_thenUseUserCache() throws Exception {\n+\t// User cache should be empty on start\n+\tassertThat(userCache.size()).isEqualTo(0);\n+\n+\t// Request using first login\n+\tResponseEntity<String> response = restTemplate\n+\t\t\t.withBasicAuth(\"user\", \"pass\")\n+\t\t\t.getForEntity(getLanguageUrl(), String.class);\n+\n+\tassertThat(response.getBody()).contains(\"english\");\n+\n+\t// User cache must contain the user\n+\tassertThat(userCache.size()).isEqualTo(1);\n+\n+\t// Getting the session cookie\n+\tHttpHeaders requestHeaders = new HttpHeaders();\n+\trequestHeaders.add(\"Cookie\", response.getHeaders().getFirst(HttpHeaders.SET_COOKIE));\n+\n+\t// Request with the session cookie\n+\tresponse = restTemplate\n+\t\t\t.exchange(getLanguageUrl(), HttpMethod.GET, new HttpEntity(requestHeaders), String.class);\n+\tassertThat(response.getBody()).contains(\"english\");\n+\n+\t// Logging out using the session cookies\n+\tresponse = restTemplate.exchange(getLogoutUrl(), HttpMethod.GET, new HttpEntity(requestHeaders), String.class);", "originalCommit": "c6dd449934909c463cf7c895ceeb56340432c54c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a5f46e8fedf31612f9116597c788449ff6307df", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java b/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\nindex 3c325a2006..cd8a1a72d6 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/test/java/com/baeldung/customlogouthandler/CustomLogoutHandlerIntegrationTest.java\n\n@@ -1,6 +1,7 @@\n package com.baeldung.customlogouthandler;\n \n-import com.baeldung.customlogouthandler.services.UserCache;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n import org.junit.jupiter.api.Test;\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n"}}, {"oid": "5a5f46e8fedf31612f9116597c788449ff6307df", "url": "https://github.com/eugenp/tutorials/commit/5a5f46e8fedf31612f9116597c788449ff6307df", "message": "Code review fixes", "committedDate": "2020-04-12T11:16:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MzEzNA==", "url": "https://github.com/eugenp/tutorials/pull/9069#discussion_r410463134", "bodyText": "Hey @kirill-vlasov - sorry to be picky but seems to be an extra set of brackets here?", "author": "JonCook", "createdAt": "2020-04-17T20:50:30Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/MvcConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.baeldung.customlogouthandler;\n+\n+import javax.sql.DataSource;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.web.authentication.logout.HttpStatusReturningLogoutSuccessHandler;\n+\n+import com.baeldung.customlogouthandler.web.CustomLogoutHandler;\n+\n+@Configuration\n+@EnableWebSecurity\n+public class MvcConfiguration extends WebSecurityConfigurerAdapter {\n+\n+    @Autowired\n+    private DataSource dataSource;\n+\n+    @Autowired\n+    private CustomLogoutHandler logoutHandler;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        http.httpBasic()\n+            .and()\n+                .authorizeRequests()\n+                    .antMatchers(HttpMethod.GET, \"/user/**\")\n+                    .hasRole(\"USER\")\n+            .and()\n+                .logout()\n+                    .logoutUrl(\"/user/logout\")\n+                    .addLogoutHandler(logoutHandler)\n+                    .logoutSuccessHandler((new HttpStatusReturningLogoutSuccessHandler(HttpStatus.OK)))", "originalCommit": "5a5f46e8fedf31612f9116597c788449ff6307df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU3NzQ1Mg==", "url": "https://github.com/eugenp/tutorials/pull/9069#discussion_r410577452", "bodyText": "Hi @JonCook, thanks I wonder how I overlooked it.", "author": "kirill-vlasov", "createdAt": "2020-04-18T03:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MzEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "243273930e8248cce578e08ef5081ce08249f499", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/MvcConfiguration.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/MvcConfiguration.java\nindex 3e17a7c397..c363effb4e 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/MvcConfiguration.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/customlogouthandler/MvcConfiguration.java\n\n@@ -35,7 +35,7 @@ public class MvcConfiguration extends WebSecurityConfigurerAdapter {\n                 .logout()\n                     .logoutUrl(\"/user/logout\")\n                     .addLogoutHandler(logoutHandler)\n-                    .logoutSuccessHandler((new HttpStatusReturningLogoutSuccessHandler(HttpStatus.OK)))\n+                    .logoutSuccessHandler(new HttpStatusReturningLogoutSuccessHandler(HttpStatus.OK))\n                     .permitAll()\n             .and()\n                 .csrf()\n"}}, {"oid": "243273930e8248cce578e08ef5081ce08249f499", "url": "https://github.com/eugenp/tutorials/commit/243273930e8248cce578e08ef5081ce08249f499", "message": "Code review", "committedDate": "2020-04-18T03:00:52Z", "type": "commit"}]}