{"pr_number": 9463, "pr_title": "Initial commit of code to accompany article on copying data from Inpu\u2026", "pr_createdAt": "2020-06-08T14:52:43Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9463", "timeline": [{"oid": "a2eeac4d61b2833dc0cf0c0a1b3b38941e47a696", "url": "https://github.com/eugenp/tutorials/commit/a2eeac4d61b2833dc0cf0c0a1b3b38941e47a696", "message": "Initial commit of code to accompany article on copying data from InputStream to OutputStream", "committedDate": "2020-06-08T14:50:40Z", "type": "commit"}, {"oid": "a76d8a4469ce2e01311137aa4266e65708311780", "url": "https://github.com/eugenp/tutorials/commit/a76d8a4469ce2e01311137aa4266e65708311780", "message": "fix method names", "committedDate": "2020-06-17T14:10:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIyNDQ1OQ==", "url": "https://github.com/eugenp/tutorials/pull/9463#discussion_r443224459", "bodyText": "It seems like overkill to make this a constant and use it only once. Also, the 20480 below isn't a constant.", "author": "KevinGilmore", "createdAt": "2020-06-21T14:23:05Z", "path": "core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.baeldung.java9.inputstream.outputstream;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.*;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Test;\n+\n+import com.google.common.io.ByteStreams;\n+\n+public class InputStreamToOutputStreamUnitTest {\n+\n+    // buffer size used for reading and writing\n+    private static final int BUFFER_SIZE = 8192;", "originalCommit": "a76d8a4469ce2e01311137aa4266e65708311780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74746f73bacd16b2e0e97ed73eb221441c02d50d", "chunk": "diff --git a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\nindex a6a32efe4a..814824e580 100644\n--- a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n+++ b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n\n@@ -11,17 +11,14 @@ import org.junit.Test;\n import com.google.common.io.ByteStreams;\n \n public class InputStreamToOutputStreamUnitTest {\n-\n-    // buffer size used for reading and writing\n-    private static final int BUFFER_SIZE = 8192;\n-\n+    \n     /**\n      * Reads all bytes from an input stream and writes them to an output stream.\n      * @param source - input stream to copy data from\n      * @param target - output stream to copy data too\n      */\n-    private static void copy(InputStream source, OutputStream target) throws IOException {\n-        byte[] buf = new byte[BUFFER_SIZE];\n+    void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[8192];\n         int length;\n         while ((length = source.read(buf)) > 0) {\n             target.write(buf, 0, length);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIyNDYwMQ==", "url": "https://github.com/eugenp/tutorials/pull/9463#discussion_r443224601", "bodyText": "insert a blank line before the assertion (do this in all the test methods, not just this one)", "author": "KevinGilmore", "createdAt": "2020-06-21T14:24:22Z", "path": "core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.baeldung.java9.inputstream.outputstream;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.*;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Test;\n+\n+import com.google.common.io.ByteStreams;\n+\n+public class InputStreamToOutputStreamUnitTest {\n+\n+    // buffer size used for reading and writing\n+    private static final int BUFFER_SIZE = 8192;\n+\n+    /**\n+     * Reads all bytes from an input stream and writes them to an output stream.\n+     * @param source - input stream to copy data from\n+     * @param target - output stream to copy data too\n+     */\n+    private static void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[BUFFER_SIZE];\n+        int length;\n+        while ((length = source.read(buf)) > 0) {\n+            target.write(buf, 0, length);\n+        }\n+    }\n+\n+    @Test\n+    public final void givenUsingJavaEight_whenCopyingInputStreamToOutputStream_thenCorrect() throws IOException {\n+        final String initialString = \"Hello World!\";\n+\n+        try (InputStream inputStream = new ByteArrayInputStream(initialString.getBytes());\n+             ByteArrayOutputStream targetStream = new ByteArrayOutputStream()) {\n+            copy(inputStream, targetStream);\n+            assertEquals(initialString, new String(targetStream.toByteArray()));", "originalCommit": "a76d8a4469ce2e01311137aa4266e65708311780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74746f73bacd16b2e0e97ed73eb221441c02d50d", "chunk": "diff --git a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\nindex a6a32efe4a..814824e580 100644\n--- a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n+++ b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n\n@@ -11,17 +11,14 @@ import org.junit.Test;\n import com.google.common.io.ByteStreams;\n \n public class InputStreamToOutputStreamUnitTest {\n-\n-    // buffer size used for reading and writing\n-    private static final int BUFFER_SIZE = 8192;\n-\n+    \n     /**\n      * Reads all bytes from an input stream and writes them to an output stream.\n      * @param source - input stream to copy data from\n      * @param target - output stream to copy data too\n      */\n-    private static void copy(InputStream source, OutputStream target) throws IOException {\n-        byte[] buf = new byte[BUFFER_SIZE];\n+    void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[8192];\n         int length;\n         while ((length = source.read(buf)) > 0) {\n             target.write(buf, 0, length);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIyNDgxNw==", "url": "https://github.com/eugenp/tutorials/pull/9463#discussion_r443224817", "bodyText": "As per guidelines, avoid the final keyword (applies to all occurrences)", "author": "KevinGilmore", "createdAt": "2020-06-21T14:26:20Z", "path": "core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.baeldung.java9.inputstream.outputstream;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.*;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Test;\n+\n+import com.google.common.io.ByteStreams;\n+\n+public class InputStreamToOutputStreamUnitTest {\n+\n+    // buffer size used for reading and writing\n+    private static final int BUFFER_SIZE = 8192;\n+\n+    /**\n+     * Reads all bytes from an input stream and writes them to an output stream.\n+     * @param source - input stream to copy data from\n+     * @param target - output stream to copy data too\n+     */\n+    private static void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[BUFFER_SIZE];\n+        int length;\n+        while ((length = source.read(buf)) > 0) {\n+            target.write(buf, 0, length);\n+        }\n+    }\n+\n+    @Test\n+    public final void givenUsingJavaEight_whenCopyingInputStreamToOutputStream_thenCorrect() throws IOException {\n+        final String initialString = \"Hello World!\";", "originalCommit": "a76d8a4469ce2e01311137aa4266e65708311780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74746f73bacd16b2e0e97ed73eb221441c02d50d", "chunk": "diff --git a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\nindex a6a32efe4a..814824e580 100644\n--- a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n+++ b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n\n@@ -11,17 +11,14 @@ import org.junit.Test;\n import com.google.common.io.ByteStreams;\n \n public class InputStreamToOutputStreamUnitTest {\n-\n-    // buffer size used for reading and writing\n-    private static final int BUFFER_SIZE = 8192;\n-\n+    \n     /**\n      * Reads all bytes from an input stream and writes them to an output stream.\n      * @param source - input stream to copy data from\n      * @param target - output stream to copy data too\n      */\n-    private static void copy(InputStream source, OutputStream target) throws IOException {\n-        byte[] buf = new byte[BUFFER_SIZE];\n+    void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[8192];\n         int length;\n         while ((length = source.read(buf)) > 0) {\n             target.write(buf, 0, length);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIyNTAzNA==", "url": "https://github.com/eugenp/tutorials/pull/9463#discussion_r443225034", "bodyText": "Since there isn't a compelling reason to make this method private or static, let's remove those keywords.", "author": "KevinGilmore", "createdAt": "2020-06-21T14:28:21Z", "path": "core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.baeldung.java9.inputstream.outputstream;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.*;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Test;\n+\n+import com.google.common.io.ByteStreams;\n+\n+public class InputStreamToOutputStreamUnitTest {\n+\n+    // buffer size used for reading and writing\n+    private static final int BUFFER_SIZE = 8192;\n+\n+    /**\n+     * Reads all bytes from an input stream and writes them to an output stream.\n+     * @param source - input stream to copy data from\n+     * @param target - output stream to copy data too\n+     */\n+    private static void copy(InputStream source, OutputStream target) throws IOException {", "originalCommit": "a76d8a4469ce2e01311137aa4266e65708311780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74746f73bacd16b2e0e97ed73eb221441c02d50d", "chunk": "diff --git a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\nindex a6a32efe4a..814824e580 100644\n--- a/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n+++ b/core-java-modules/core-java-9/src/test/java/com/baeldung/java9/inputstream/outputstream/InputStreamToOutputStreamUnitTest.java\n\n@@ -11,17 +11,14 @@ import org.junit.Test;\n import com.google.common.io.ByteStreams;\n \n public class InputStreamToOutputStreamUnitTest {\n-\n-    // buffer size used for reading and writing\n-    private static final int BUFFER_SIZE = 8192;\n-\n+    \n     /**\n      * Reads all bytes from an input stream and writes them to an output stream.\n      * @param source - input stream to copy data from\n      * @param target - output stream to copy data too\n      */\n-    private static void copy(InputStream source, OutputStream target) throws IOException {\n-        byte[] buf = new byte[BUFFER_SIZE];\n+    void copy(InputStream source, OutputStream target) throws IOException {\n+        byte[] buf = new byte[8192];\n         int length;\n         while ((length = source.read(buf)) > 0) {\n             target.write(buf, 0, length);\n"}}, {"oid": "74746f73bacd16b2e0e97ed73eb221441c02d50d", "url": "https://github.com/eugenp/tutorials/commit/74746f73bacd16b2e0e97ed73eb221441c02d50d", "message": "Updates to resolve issues raised by Kevin Gilmore", "committedDate": "2020-06-22T16:38:08Z", "type": "commit"}]}