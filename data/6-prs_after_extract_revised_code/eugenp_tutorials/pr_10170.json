{"pr_number": 10170, "pr_title": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Ar\u2026", "pr_createdAt": "2020-10-15T20:23:01Z", "pr_url": "https://github.com/eugenp/tutorials/pull/10170", "timeline": [{"oid": "ea45c0ab7ebddf217e799c1476ccf9b4a0379388", "url": "https://github.com/eugenp/tutorials/commit/ea45c0ab7ebddf217e799c1476ccf9b4a0379388", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-10-15T20:21:47Z", "type": "commit"}, {"oid": "c18bb7f1f123ebe0cd96c742ca134669a6cb50a9", "url": "https://github.com/eugenp/tutorials/commit/c18bb7f1f123ebe0cd96c742ca134669a6cb50a9", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-10-22T08:19:33Z", "type": "commit"}, {"oid": "e1db0729487fcab49e3a5c1c17b1e4c05d96c7af", "url": "https://github.com/eugenp/tutorials/commit/e1db0729487fcab49e3a5c1c17b1e4c05d96c7af", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-10-22T10:53:45Z", "type": "commit"}, {"oid": "2a029c90765b85d7e6952bf78227ea349409a651", "url": "https://github.com/eugenp/tutorials/commit/2a029c90765b85d7e6952bf78227ea349409a651", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-10-22T11:00:10Z", "type": "commit"}, {"oid": "19c609fb38848b70a245e89aef314589b486ccd8", "url": "https://github.com/eugenp/tutorials/commit/19c609fb38848b70a245e89aef314589b486ccd8", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-10-22T11:11:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5ODM5OA==", "url": "https://github.com/eugenp/tutorials/pull/10170#discussion_r515698398", "bodyText": "The expected value should always go before the actual in the assertEquals call.", "author": "KevinGilmore", "createdAt": "2020-11-02T01:01:49Z", "path": "java-numbers-4/src/test/java/com/baeldung/number_0xff/Number0xffUnitTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.baeldung.number_0xff;\n+\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+public class Number0xffUnitTest {\n+\n+    @Test\n+    public void test0xFFAssignedToInteger() {\n+        int x = 0xff;\n+        int expectedValue = 255;\n+        assertEquals(x, expectedValue);", "originalCommit": "19c609fb38848b70a245e89aef314589b486ccd8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "310ac91d5694d10035d8f6ec5d0aaf06f13e89a0", "chunk": "diff --git a/java-numbers-4/src/test/java/com/baeldung/number_0xff/Number0xffUnitTest.java b/java-numbers-4/src/test/java/com/baeldung/number_0xff/Number0xffUnitTest.java\nindex 95a9349b49..b0feaf8628 100644\n--- a/java-numbers-4/src/test/java/com/baeldung/number_0xff/Number0xffUnitTest.java\n+++ b/java-numbers-4/src/test/java/com/baeldung/number_0xff/Number0xffUnitTest.java\n\n@@ -9,41 +9,41 @@ public class Number0xffUnitTest {\n     public void test0xFFAssignedToInteger() {\n         int x = 0xff;\n         int expectedValue = 255;\n-        assertEquals(x, expectedValue);\n+        assertEquals(expectedValue, x);\n     }\n \n     @Test\n     public void test0xFFAssignedToByte() {\n         byte y = (byte) 0xff;\n         int expectedValue = -1;\n-        assertEquals(y, expectedValue);\n+        assertEquals(expectedValue, y);\n     }\n \n     @Test\n     public void givenColor_whenGetRedColor_thenExtractRedColor() {\n         int rgba = 272214023;\n         int expectedValue = 16;\n-        assertEquals(Number0xff.getRedColor(rgba), expectedValue);\n+        assertEquals(expectedValue, Number0xff.getRedColor(rgba));\n     }\n \n     @Test\n     public void givenColor_whenGetGreenColor_thenExtractGreenColor() {\n         int rgba = 272214023;\n         int expectedValue = 57;\n-        assertEquals(Number0xff.getGreenColor(rgba), expectedValue);\n+        assertEquals(expectedValue, Number0xff.getGreenColor(rgba));\n     }\n \n     @Test\n     public void givenColor_whenGetBlueColor_thenExtractBlueColor() {\n         int rgba = 272214023;\n         int expectedValue = 168;\n-        assertEquals(Number0xff.getBlueColor(rgba), expectedValue);\n+        assertEquals(expectedValue, Number0xff.getBlueColor(rgba));\n     }\n \n     @Test\n     public void givenColor_whenGetAlfa_thenExtractAlfa() {\n         int rgba = 272214023;\n         int expectedValue = 7;\n-        assertEquals(Number0xff.getAlfa(rgba), expectedValue);\n+        assertEquals(expectedValue, Number0xff.getAlfa(rgba));\n     }\n }\n"}}, {"oid": "310ac91d5694d10035d8f6ec5d0aaf06f13e89a0", "url": "https://github.com/eugenp/tutorials/commit/310ac91d5694d10035d8f6ec5d0aaf06f13e89a0", "message": "The Value of 0xFF Number and Its Uses With &amp; Operation in Java Article by Abdallah Sawan", "committedDate": "2020-11-02T08:31:44Z", "type": "commit"}]}