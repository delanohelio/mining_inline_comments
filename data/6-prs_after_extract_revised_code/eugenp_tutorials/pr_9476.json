{"pr_number": 9476, "pr_title": "BAEL-4018 Spring Security - Already logged in user redirect from the login page", "pr_createdAt": "2020-06-10T18:46:22Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9476", "timeline": [{"oid": "63574ae50b97b3d3755144880030172200849d17", "url": "https://github.com/eugenp/tutorials/commit/63574ae50b97b3d3755144880030172200849d17", "message": "BAEL-4018 Spring Security - Already logged in user redirect from the login page", "committedDate": "2020-06-10T18:43:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzE4OQ==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657189", "bodyText": "let's promote these to variables so we don't have to always cast them", "author": "rpvilao", "createdAt": "2020-06-11T09:25:17Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.filter.GenericFilterBean;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+class LoginPageFilter extends GenericFilterBean {\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {\n+\n+            String encodedRedirectURL = ((HttpServletResponse) response).encodeRedirectURL(\n+              ((HttpServletRequest) request).getContextPath() + \"/userMainPage\");\n+\n+            ((HttpServletResponse) response).setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\nindex 635f811e7a..3c6d076756 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\n\n@@ -18,20 +18,24 @@ class LoginPageFilter extends GenericFilterBean {\n \n     @Override\n     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n-        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {\n+        HttpServletRequest servletRequest = (HttpServletRequest) request;\n+        HttpServletResponse servletResponse = (HttpServletResponse) response;\n+\n+        if (isAuthenticated() && \"/loginUser\".equals(servletRequest.getRequestURI())) {\n \n             String encodedRedirectURL = ((HttpServletResponse) response).encodeRedirectURL(\n-              ((HttpServletRequest) request).getContextPath() + \"/userMainPage\");\n+              servletRequest.getContextPath() + \"/userMainPage\");\n \n-            ((HttpServletResponse) response).setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n-            ((HttpServletResponse) response).setHeader(\"Location\", encodedRedirectURL);\n+            servletResponse.setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n+            servletResponse.setHeader(\"Location\", encodedRedirectURL);\n         }\n-        chain.doFilter(request, response);\n+\n+        chain.doFilter(servletRequest, servletResponse);\n     }\n \n     private boolean isAuthenticated() {\n         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n-        if (authentication == null || authentication instanceof AnonymousAuthenticationToken) {\n+        if (authentication == null || AnonymousAuthenticationToken.class.isAssignableFrom(authentication.getClass())) {\n             return false;\n         }\n         return authentication.isAuthenticated();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzU1OA==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657558", "bodyText": "as to show best practices, let's use \"\".equals(...)", "author": "rpvilao", "createdAt": "2020-06-11T09:25:56Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.filter.GenericFilterBean;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+class LoginPageFilter extends GenericFilterBean {\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\nindex 635f811e7a..3c6d076756 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageFilter.java\n\n@@ -18,20 +18,24 @@ class LoginPageFilter extends GenericFilterBean {\n \n     @Override\n     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n-        if (isAuthenticated() && ((HttpServletRequest) request).getRequestURI().equals(\"/loginUser\")) {\n+        HttpServletRequest servletRequest = (HttpServletRequest) request;\n+        HttpServletResponse servletResponse = (HttpServletResponse) response;\n+\n+        if (isAuthenticated() && \"/loginUser\".equals(servletRequest.getRequestURI())) {\n \n             String encodedRedirectURL = ((HttpServletResponse) response).encodeRedirectURL(\n-              ((HttpServletRequest) request).getContextPath() + \"/userMainPage\");\n+              servletRequest.getContextPath() + \"/userMainPage\");\n \n-            ((HttpServletResponse) response).setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n-            ((HttpServletResponse) response).setHeader(\"Location\", encodedRedirectURL);\n+            servletResponse.setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n+            servletResponse.setHeader(\"Location\", encodedRedirectURL);\n         }\n-        chain.doFilter(request, response);\n+\n+        chain.doFilter(servletRequest, servletResponse);\n     }\n \n     private boolean isAuthenticated() {\n         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n-        if (authentication == null || authentication instanceof AnonymousAuthenticationToken) {\n+        if (authentication == null || AnonymousAuthenticationToken.class.isAssignableFrom(authentication.getClass())) {\n             return false;\n         }\n         return authentication.isAuthenticated();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzY2OA==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657668", "bodyText": "same", "author": "rpvilao", "createdAt": "2020-06-11T09:26:07Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {\n+\n+    @Override\n+    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n+\n+        UrlPathHelper urlPathHelper = new UrlPathHelper();\n+        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\nindex f8fbe76b61..aa93201f37 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n\n@@ -16,7 +16,7 @@ class LoginPageInterceptor extends HandlerInterceptorAdapter {\n     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n \n         UrlPathHelper urlPathHelper = new UrlPathHelper();\n-        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+        if (\"/loginUser\".equals(urlPathHelper.getLookupPathForRequest(request)) && isAuthenticated()) {\n \n             String encodedRedirectURL = response.encodeRedirectURL(\n               request.getContextPath() + \"/userMainPage\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1Nzk4NQ==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438657985", "bodyText": "wouldn't it be safer to use isAssignableFrom?", "author": "rpvilao", "createdAt": "2020-06-11T09:26:39Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {\n+\n+    @Override\n+    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n+\n+        UrlPathHelper urlPathHelper = new UrlPathHelper();\n+        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+\n+            String encodedRedirectURL = response.encodeRedirectURL(\n+              request.getContextPath() + \"/userMainPage\");\n+            response.setStatus(HttpStatus.SC_TEMPORARY_REDIRECT);\n+            response.setHeader(\"Location\", encodedRedirectURL);\n+\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean isAuthenticated() {\n+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+        if (authentication == null || authentication instanceof AnonymousAuthenticationToken) {", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM3MDEzMg==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439370132", "bodyText": "Yes, I'll change it.", "author": "cicioflaviu", "createdAt": "2020-06-12T11:43:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1Nzk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\nindex f8fbe76b61..aa93201f37 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n\n@@ -16,7 +16,7 @@ class LoginPageInterceptor extends HandlerInterceptorAdapter {\n     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n \n         UrlPathHelper urlPathHelper = new UrlPathHelper();\n-        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+        if (\"/loginUser\".equals(urlPathHelper.getLookupPathForRequest(request)) && isAuthenticated()) {\n \n             String encodedRedirectURL = response.encodeRedirectURL(\n               request.getContextPath() + \"/userMainPage\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1ODA3NA==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438658074", "bodyText": "remove if not needed", "author": "rpvilao", "createdAt": "2020-06-11T09:26:48Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.baeldung.loginredirect;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+//@ImportResource({\"classpath*:spring-security-login-redirect.xml\"})", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java\nindex b7f9863775..1e44240449 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginRedirectApplication.java\n\n@@ -2,9 +2,10 @@ package com.baeldung.loginredirect;\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.annotation.ImportResource;\n \n @SpringBootApplication\n-//@ImportResource({\"classpath*:spring-security-login-redirect.xml\"})\n+@ImportResource({\"classpath*:spring-security-login-redirect.xml\"})\n class LoginRedirectApplication {\n     public static void main(String[] args) {\n         SpringApplication.run(LoginRedirectApplication.class, args);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTA3Nw==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r438659077", "bodyText": "do we want to make this package protected for some reason? if not let's make it public (check the others classes as well)", "author": "rpvilao", "createdAt": "2020-06-11T09:28:36Z", "path": "spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.baeldung.loginredirect;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import org.springframework.web.util.UrlPathHelper;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+class LoginPageInterceptor extends HandlerInterceptorAdapter {", "originalCommit": "63574ae50b97b3d3755144880030172200849d17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM2OTg1NA==", "url": "https://github.com/eugenp/tutorials/pull/9476#discussion_r439369854", "bodyText": "It is recommended in the baeldung - for authors - 2 - code in the articles document, to use the package-scope access modifier if possible.", "author": "cicioflaviu", "createdAt": "2020-06-12T11:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1OTA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "chunk": "diff --git a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\nindex f8fbe76b61..aa93201f37 100644\n--- a/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n+++ b/spring-security-modules/spring-security-mvc-boot-2/src/main/java/com/baeldung/loginredirect/LoginPageInterceptor.java\n\n@@ -16,7 +16,7 @@ class LoginPageInterceptor extends HandlerInterceptorAdapter {\n     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n \n         UrlPathHelper urlPathHelper = new UrlPathHelper();\n-        if (urlPathHelper.getLookupPathForRequest(request).equals(\"/loginUser\") && isAuthenticated()) {\n+        if (\"/loginUser\".equals(urlPathHelper.getLookupPathForRequest(request)) && isAuthenticated()) {\n \n             String encodedRedirectURL = response.encodeRedirectURL(\n               request.getContextPath() + \"/userMainPage\");\n"}}, {"oid": "94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "url": "https://github.com/eugenp/tutorials/commit/94c02bb22c24e6cb82100daa8a0a524ff06e6a6d", "message": "BAEL-4018 Improved login redirect classes.", "committedDate": "2020-06-15T07:06:37Z", "type": "commit"}]}