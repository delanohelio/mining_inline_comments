{"pr_number": 8843, "pr_title": "BAEL-3603 Add test examples for Java IO versus NIO article", "pr_createdAt": "2020-03-09T23:20:06Z", "pr_url": "https://github.com/eugenp/tutorials/pull/8843", "timeline": [{"oid": "4e1d7e78508a124e660eb9bb5e2bcb6b33eb6393", "url": "https://github.com/eugenp/tutorials/commit/4e1d7e78508a124e660eb9bb5e2bcb6b33eb6393", "message": "BAEL-3603 Add test examples for Java IO versus NIO article", "committedDate": "2020-03-09T23:19:13Z", "type": "commit"}, {"oid": "0a795787640796c98f5f2c87f290b431cce8070e", "url": "https://github.com/eugenp/tutorials/commit/0a795787640796c98f5f2c87f290b431cce8070e", "message": "BAEL-3603 Add line separator to preserve lines read", "committedDate": "2020-03-11T20:12:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzgwMg==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392687802", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n          \n          \n            \n                public void givenJavaNIOSocketChannel_whenReadingAndWritingWithBuffers_thenSuccess() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-03-15T16:04:59Z", "path": "core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.baeldung.blockingnonblocking;\n+\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.channels.SocketChannel;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.StandardCharsets;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.*;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig;\n+import static org.junit.Assert.assertTrue;\n+\n+public class NonBlockingClientUnitTest {\n+    private String REQUESTED_RESOURCE = \"/test.json\";\n+\n+    @Rule public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort());\n+\n+    @Before\n+    public void setup() {\n+        stubFor(get(urlEqualTo(REQUESTED_RESOURCE)).willReturn(aResponse()\n+          .withStatus(200)\n+          .withBody(\"{ \\\"response\\\" : \\\"It worked!\\\" }\")));\n+    }\n+\n+    @Test\n+    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {", "originalCommit": "0a795787640796c98f5f2c87f290b431cce8070e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwOTM1NQ==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392709355", "bodyText": "Resolved this in the latest commit", "author": "rojyates", "createdAt": "2020-03-15T20:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "944ac49aa25ba372102c82135c477c0d8abbeccc", "chunk": "diff --git a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\nindex 47115887ab..90edee0306 100644\n--- a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n+++ b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n\n@@ -31,7 +31,7 @@ public class NonBlockingClientUnitTest {\n     }\n \n     @Test\n-    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n+    public void givenJavaNIOSocketChannel_whenReadingAndWritingWithBuffers_thenSuccess() throws IOException {\n         // given a NIO SocketChannel and a charset\n         InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n         SocketChannel socketChannel = SocketChannel.open(address);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzgzMQ==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392687831", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenJavaNIO_whenReadingAndWriting_thenSmallBuffers() throws IOException {\n          \n          \n            \n                public void givenJavaNIO_whenReadingAndWritingWithSmallBuffers_thenSuccess() throws IOException {", "author": "KevinGilmore", "createdAt": "2020-03-15T16:05:26Z", "path": "core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.baeldung.blockingnonblocking;\n+\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.channels.SocketChannel;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.StandardCharsets;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.*;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig;\n+import static org.junit.Assert.assertTrue;\n+\n+public class NonBlockingClientUnitTest {\n+    private String REQUESTED_RESOURCE = \"/test.json\";\n+\n+    @Rule public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort());\n+\n+    @Before\n+    public void setup() {\n+        stubFor(get(urlEqualTo(REQUESTED_RESOURCE)).willReturn(aResponse()\n+          .withStatus(200)\n+          .withBody(\"{ \\\"response\\\" : \\\"It worked!\\\" }\")));\n+    }\n+\n+    @Test\n+    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n+        // given a NIO SocketChannel and a charset\n+        InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n+        SocketChannel socketChannel = SocketChannel.open(address);\n+        Charset charset = StandardCharsets.UTF_8;\n+\n+        // when we write and read using buffers\n+        socketChannel.write(charset.encode(CharBuffer.wrap(\"GET \" + REQUESTED_RESOURCE + \" HTTP/1.0\\r\\n\\r\\n\")));\n+\n+        ByteBuffer buffer = ByteBuffer.allocate(8); // or allocateDirect if we need direct memory access\n+        CharBuffer charBuffer = CharBuffer.allocate(8192);\n+        CharsetDecoder decoder = charset.newDecoder();\n+        StringBuilder ourStore = new StringBuilder();\n+        while (socketChannel.read(buffer) != -1 || buffer.position() > 0) {\n+            buffer.flip();\n+            storeBufferContents(buffer, charBuffer, decoder, ourStore);\n+            buffer.compact();\n+        }\n+        socketChannel.close();\n+\n+        // then we read and saved our data\n+        assertTrue(ourStore\n+          .toString()\n+          .contains(\"It worked!\"));\n+    }\n+\n+    @Test\n+    public void givenJavaNIO_whenReadingAndWriting_thenSmallBuffers() throws IOException {", "originalCommit": "0a795787640796c98f5f2c87f290b431cce8070e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwOTM4NQ==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392709385", "bodyText": "Resolved this in the latest commit", "author": "rojyates", "createdAt": "2020-03-15T20:26:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "944ac49aa25ba372102c82135c477c0d8abbeccc", "chunk": "diff --git a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\nindex 47115887ab..90edee0306 100644\n--- a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n+++ b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n\n@@ -31,7 +31,7 @@ public class NonBlockingClientUnitTest {\n     }\n \n     @Test\n-    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n+    public void givenJavaNIOSocketChannel_whenReadingAndWritingWithBuffers_thenSuccess() throws IOException {\n         // given a NIO SocketChannel and a charset\n         InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n         SocketChannel socketChannel = SocketChannel.open(address);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzkwOA==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392687908", "bodyText": "Recommend naming this variable socketChannel to be consistent with the previous test", "author": "KevinGilmore", "createdAt": "2020-03-15T16:06:07Z", "path": "core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.baeldung.blockingnonblocking;\n+\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.channels.SocketChannel;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.StandardCharsets;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.*;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig;\n+import static org.junit.Assert.assertTrue;\n+\n+public class NonBlockingClientUnitTest {\n+    private String REQUESTED_RESOURCE = \"/test.json\";\n+\n+    @Rule public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort());\n+\n+    @Before\n+    public void setup() {\n+        stubFor(get(urlEqualTo(REQUESTED_RESOURCE)).willReturn(aResponse()\n+          .withStatus(200)\n+          .withBody(\"{ \\\"response\\\" : \\\"It worked!\\\" }\")));\n+    }\n+\n+    @Test\n+    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n+        // given a NIO SocketChannel and a charset\n+        InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n+        SocketChannel socketChannel = SocketChannel.open(address);\n+        Charset charset = StandardCharsets.UTF_8;\n+\n+        // when we write and read using buffers\n+        socketChannel.write(charset.encode(CharBuffer.wrap(\"GET \" + REQUESTED_RESOURCE + \" HTTP/1.0\\r\\n\\r\\n\")));\n+\n+        ByteBuffer buffer = ByteBuffer.allocate(8); // or allocateDirect if we need direct memory access\n+        CharBuffer charBuffer = CharBuffer.allocate(8192);\n+        CharsetDecoder decoder = charset.newDecoder();\n+        StringBuilder ourStore = new StringBuilder();\n+        while (socketChannel.read(buffer) != -1 || buffer.position() > 0) {\n+            buffer.flip();\n+            storeBufferContents(buffer, charBuffer, decoder, ourStore);\n+            buffer.compact();\n+        }\n+        socketChannel.close();\n+\n+        // then we read and saved our data\n+        assertTrue(ourStore\n+          .toString()\n+          .contains(\"It worked!\"));\n+    }\n+\n+    @Test\n+    public void givenJavaNIO_whenReadingAndWriting_thenSmallBuffers() throws IOException {\n+        // given a NIO SocketChannel and a charset\n+        InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n+        SocketChannel socket = SocketChannel.open(address);", "originalCommit": "0a795787640796c98f5f2c87f290b431cce8070e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwOTM5Ng==", "url": "https://github.com/eugenp/tutorials/pull/8843#discussion_r392709396", "bodyText": "Resolved this in the latest commit", "author": "rojyates", "createdAt": "2020-03-15T20:27:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4NzkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "944ac49aa25ba372102c82135c477c0d8abbeccc", "chunk": "diff --git a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\nindex 47115887ab..90edee0306 100644\n--- a/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n+++ b/core-java-modules/core-java-io-2/src/test/java/com/baeldung/blockingnonblocking/NonBlockingClientUnitTest.java\n\n@@ -31,7 +31,7 @@ public class NonBlockingClientUnitTest {\n     }\n \n     @Test\n-    public void givenJavaNIOSocketChannel_whenReadingAndWriting_thenUseBuffers() throws IOException {\n+    public void givenJavaNIOSocketChannel_whenReadingAndWritingWithBuffers_thenSuccess() throws IOException {\n         // given a NIO SocketChannel and a charset\n         InetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\n         SocketChannel socketChannel = SocketChannel.open(address);\n"}}, {"oid": "944ac49aa25ba372102c82135c477c0d8abbeccc", "url": "https://github.com/eugenp/tutorials/commit/944ac49aa25ba372102c82135c477c0d8abbeccc", "message": "BAEL-3603 Update method names and variable name for PR", "committedDate": "2020-03-15T20:24:59Z", "type": "commit"}, {"oid": "ceff49afe39099eff2090efc94638f2a79625836", "url": "https://github.com/eugenp/tutorials/commit/ceff49afe39099eff2090efc94638f2a79625836", "message": "BAEL-3603 Update variable names", "committedDate": "2020-03-16T20:32:39Z", "type": "commit"}, {"oid": "d69513a2c9e0ee738dc48032d97673d2aefe82f7", "url": "https://github.com/eugenp/tutorials/commit/d69513a2c9e0ee738dc48032d97673d2aefe82f7", "message": "BAEL-3603 Update variable names", "committedDate": "2020-03-16T20:35:29Z", "type": "commit"}]}