{"pr_number": 9754, "pr_title": "CNN example with Deeplearning4j in Java", "pr_createdAt": "2020-07-23T06:22:59Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9754", "timeline": [{"oid": "6e1cab0051109d09cf1869c2869675a42c3cbac0", "url": "https://github.com/eugenp/tutorials/commit/6e1cab0051109d09cf1869c2869675a42c3cbac0", "message": "CNN example with Deeplearning4j in Java", "committedDate": "2020-07-23T06:21:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjYxNw==", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459372617", "bodyText": "Could we move all the classes to a single package and make them all package protected?", "author": "rpvilao", "createdAt": "2020-07-23T11:07:15Z", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.baeldung.deeplearning4j.cnn;\n+\n+\n+import com.baeldung.deeplearning4j.cnn.domain.network.CnnModel;\n+import com.baeldung.deeplearning4j.cnn.domain.network.CnnModelProperties;\n+import com.baeldung.deeplearning4j.cnn.service.dataset.CifarDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+\n+@Slf4j\n+public class CnnExample {", "originalCommit": "6e1cab0051109d09cf1869c2869675a42c3cbac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eeff326731a412df67b15ed6a65055c29d0d45eb", "chunk": "diff --git a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java\nindex 2e2d4392b8..224062c388 100644\n--- a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java\n+++ b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnExample.java\n\n@@ -1,14 +1,11 @@\n package com.baeldung.deeplearning4j.cnn;\n \n \n-import com.baeldung.deeplearning4j.cnn.domain.network.CnnModel;\n-import com.baeldung.deeplearning4j.cnn.domain.network.CnnModelProperties;\n-import com.baeldung.deeplearning4j.cnn.service.dataset.CifarDataSetService;\n import lombok.extern.slf4j.Slf4j;\n import org.deeplearning4j.eval.Evaluation;\n \n @Slf4j\n-public class CnnExample {\n+class CnnExample {\n \n     public static void main(String... args) {\n         CnnModel network = new CnnModel(new CifarDataSetService(), new CnnModelProperties());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MzIzMQ==", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459373231", "bodyText": "you could use the logging placeholders here (\"{}?{}\", a, b)", "author": "rpvilao", "createdAt": "2020-07-23T11:08:35Z", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package com.baeldung.deeplearning4j.cnn.domain.network;\n+\n+import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n+import org.deeplearning4j.nn.conf.MultiLayerConfiguration;\n+import org.deeplearning4j.nn.conf.NeuralNetConfiguration;\n+import org.deeplearning4j.nn.conf.layers.ConvolutionLayer;\n+import org.deeplearning4j.nn.conf.layers.OutputLayer;\n+import org.deeplearning4j.nn.conf.layers.SubsamplingLayer;\n+import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;\n+import org.deeplearning4j.nn.weights.WeightInit;\n+import org.nd4j.linalg.activations.Activation;\n+import org.nd4j.linalg.lossfunctions.LossFunctions;\n+\n+import java.util.stream.IntStream;\n+\n+@Slf4j\n+public class CnnModel {\n+\n+    private final IDataSetService dataSetService;\n+\n+    private MultiLayerNetwork network;\n+\n+    private final CnnModelProperties properties;\n+\n+    public CnnModel(IDataSetService dataSetService, CnnModelProperties properties) {\n+\n+        this.dataSetService = dataSetService;\n+        this.properties = properties;\n+\n+        MultiLayerConfiguration configuration = new NeuralNetConfiguration.Builder()\n+                .seed(1611)\n+                .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)\n+                .learningRate(properties.getLearningRate())\n+                .regularization(true)\n+                .updater(properties.getOptimizer())\n+                .list()\n+                .layer(0, conv5x5())\n+                .layer(1, pooling2x2Stride2())\n+                .layer(2, conv3x3Stride1Padding2())\n+                .layer(3, pooling2x2Stride1())\n+                .layer(4, conv3x3Stride1Padding1())\n+                .layer(5, pooling2x2Stride1())\n+                .layer(6, dense())\n+                .pretrain(false)\n+                .backprop(true)\n+                .setInputType(dataSetService.inputType())\n+                .build();\n+\n+        network = new MultiLayerNetwork(configuration);\n+    }\n+\n+    public void train() {\n+        network.init();\n+        int epochsNum = properties.getEpochsNum();\n+        IntStream.range(1, epochsNum + 1).forEach(epoch -> {\n+            log.info(String.format(\"Epoch %d?%d\", epoch, epochsNum));", "originalCommit": "6e1cab0051109d09cf1869c2869675a42c3cbac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eeff326731a412df67b15ed6a65055c29d0d45eb", "chunk": "diff --git a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\nsimilarity index 86%\nrename from deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java\nrename to deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\nindex 037d14529c..bd87709c0e 100644\n--- a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java\n+++ b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\n\n@@ -1,6 +1,5 @@\n-package com.baeldung.deeplearning4j.cnn.domain.network;\n+package com.baeldung.deeplearning4j.cnn;\n \n-import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n import lombok.extern.slf4j.Slf4j;\n import org.deeplearning4j.eval.Evaluation;\n import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MzM5OQ==", "url": "https://github.com/eugenp/tutorials/pull/9754#discussion_r459373399", "bodyText": "this could be final as well right?", "author": "rpvilao", "createdAt": "2020-07-23T11:09:00Z", "path": "deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package com.baeldung.deeplearning4j.cnn.domain.network;\n+\n+import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.deeplearning4j.eval.Evaluation;\n+import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n+import org.deeplearning4j.nn.conf.MultiLayerConfiguration;\n+import org.deeplearning4j.nn.conf.NeuralNetConfiguration;\n+import org.deeplearning4j.nn.conf.layers.ConvolutionLayer;\n+import org.deeplearning4j.nn.conf.layers.OutputLayer;\n+import org.deeplearning4j.nn.conf.layers.SubsamplingLayer;\n+import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;\n+import org.deeplearning4j.nn.weights.WeightInit;\n+import org.nd4j.linalg.activations.Activation;\n+import org.nd4j.linalg.lossfunctions.LossFunctions;\n+\n+import java.util.stream.IntStream;\n+\n+@Slf4j\n+public class CnnModel {\n+\n+    private final IDataSetService dataSetService;\n+\n+    private MultiLayerNetwork network;", "originalCommit": "6e1cab0051109d09cf1869c2869675a42c3cbac0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eeff326731a412df67b15ed6a65055c29d0d45eb", "chunk": "diff --git a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\nsimilarity index 86%\nrename from deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java\nrename to deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\nindex 037d14529c..bd87709c0e 100644\n--- a/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/domain/network/CnnModel.java\n+++ b/deeplearning4j/src/main/java/com/baeldung/deeplearning4j/cnn/CnnModel.java\n\n@@ -1,6 +1,5 @@\n-package com.baeldung.deeplearning4j.cnn.domain.network;\n+package com.baeldung.deeplearning4j.cnn;\n \n-import com.baeldung.deeplearning4j.cnn.service.dataset.IDataSetService;\n import lombok.extern.slf4j.Slf4j;\n import org.deeplearning4j.eval.Evaluation;\n import org.deeplearning4j.nn.api.OptimizationAlgorithm;\n"}}, {"oid": "eeff326731a412df67b15ed6a65055c29d0d45eb", "url": "https://github.com/eugenp/tutorials/commit/eeff326731a412df67b15ed6a65055c29d0d45eb", "message": "CNN example with Deeplearning4j in Java: refactor", "committedDate": "2020-07-23T13:17:04Z", "type": "commit"}, {"oid": "0d9e8f05e42cbd1a5742f6edf81e6b7d92e9e542", "url": "https://github.com/eugenp/tutorials/commit/0d9e8f05e42cbd1a5742f6edf81e6b7d92e9e542", "message": "CNN example with Deeplearning4j in Java: add missing letter in pom", "committedDate": "2020-07-23T14:33:06Z", "type": "commit"}, {"oid": "029720358cbf609d913ad8770c04e3f5626b3952", "url": "https://github.com/eugenp/tutorials/commit/029720358cbf609d913ad8770c04e3f5626b3952", "message": "CNN example with Deeplearning4j in Java: add missing letter in pom", "committedDate": "2020-07-23T14:33:31Z", "type": "commit"}, {"oid": "701917ab74352cad77716e49c75e385584c0f6dd", "url": "https://github.com/eugenp/tutorials/commit/701917ab74352cad77716e49c75e385584c0f6dd", "message": "Fixed builder formatting", "committedDate": "2020-07-29T08:36:09Z", "type": "commit"}]}