{"pr_number": 5280, "pr_title": "feat(TESB-29271): Route debuging feature", "pr_createdAt": "2020-09-27T07:17:27Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/5280", "timeline": [{"oid": "4610bea47f10dc57eea045164e751002e3ebab6d", "url": "https://github.com/Talend/tdi-studio-se/commit/4610bea47f10dc57eea045164e751002e3ebab6d", "message": "feat(TESB-29271):Initical update for route debugger", "committedDate": "2020-09-27T03:49:43Z", "type": "commit"}, {"oid": "4f84bfefec4d0d28789b3d6d70a13c3caa910db6", "url": "https://github.com/Talend/tdi-studio-se/commit/4f84bfefec4d0d28789b3d6d70a13c3caa910db6", "message": "feat(TESB-29271): conditional breakpoint component tab", "committedDate": "2020-09-27T03:57:18Z", "type": "commit"}, {"oid": "a02aed322847d8d1e9d0549c71428b63df199d99", "url": "https://github.com/Talend/tdi-studio-se/commit/a02aed322847d8d1e9d0549c71428b63df199d99", "message": "feat(TESB-29271): Route debuging feature", "committedDate": "2020-09-27T03:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNzM2OA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497207368", "bodyText": "strange if block here, means these parameters can also be add into product without ESB?", "author": "cmeng-talend", "createdAt": "2020-09-30T02:25:47Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java", "diffHunk": "@@ -1001,6 +1004,98 @@ public void addViewParameters(final List<ElementParameter> listParam, INode node\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n     }\n+    \n+    //rename for route break points\n+    public void addRouteExpressionParameters(final List<ElementParameter> listParam, INode node) {\n+        if (PluginChecker.isTeamEdition() && !ComponentCategory.CATEGORY_4_CAMEL.getName().equals(getPaletteType())) {", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxOTAwNw==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497319007", "bodyText": "It means if it's not an EE version and there is not a Camel component, then this part will not be added.", "author": "yanbasic", "createdAt": "2020-09-30T08:05:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNzM2OA=="}], "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\nindex cb25d87096..ef0481d67a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n\n@@ -1022,74 +1055,43 @@ public class EmfComponent extends AbstractBasicComponent {\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n         \n-\n-        String[] displayNames = {\n-                \"JavaScript\",\n-                \"JSonPath\",\n-                \"JXPath\",\n-                \"Property\",\n-                \"Simple\",\n-                \"XPath\",\n-                \"XQuery\"\n-              };\n-        \n-        String[] itemValues = {\n-                \"javaScript\",\n-                \"jsonpath\",\n-                \"jxpath\",\n-                \"property\",\n-                \"simple\",\n-                \"xpath\",\n-                \"xquery\"\n-              };\n-        \n-        String[] displayCodeNames = {\n-                \"JAVASCRIPT\",\n-                \"JSONPATH\",\n-                \"JXPATH\",\n-                \"PROPERTY\",\n-                \"SIMPLE\",\n-                \"XPATH\",\n-                \"XQUERY\"\n-              };\n-\n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_LANGUAGES\");\n-        param.setDisplayName(\"Languages\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getDisplayName());\n         param.setFieldType(EParameterFieldType.CLOSED_LIST);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(14);\n         \n-        param.setListItemsValue(itemValues);\n-        param.setListItemsDisplayCodeName(displayCodeNames);\n-        param.setListItemsDisplayName(displayNames);\n-        param.setListRepositoryItems(new String[itemValues.length]);\n-        param.setListItemsShowIf(new String[itemValues.length]);\n-        param.setListItemsNotShowIf(new String[itemValues.length]);\n-        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n-        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n-        param.setValue(\"simple\");\n+        param.setListItemsValue(CAMEL_LANGUAGE_ITEM_VALUES);\n+        param.setListItemsDisplayCodeName(CAMEL_LANGUAGE_DISPLAY_CODE_NAMES);\n+        param.setListItemsDisplayName(CAMEL_LANGUAGE_DISPLAY_NAMES);\n+        param.setListRepositoryItems(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setValue(SIMPLE);\n         param.setContextMode(false);\n-        param.setDefaultValue(\"simple\");\n+        param.setDefaultValue(SIMPLE);\n         listParam.add(param);\n \n         \n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_EXPRESSION\");\n-        param.setDisplayName(\"Expression\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getDisplayName());\n         param.setFieldType(EParameterFieldType.TEXT);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(15);\n         param.setReadOnly(false);\n         param.setRequired(false);\n-        param.setValue(\"\\\"\\\"\");\n+        param.setValue(\"\\\"\\\"\"); //$NON-NLS-1$\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n \n         param = new ElementParameter(node);\n-        param.setName(\"EXAMPLE\");\n-        param.setDisplayName(\"Example\");\n-        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getDisplayName());\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\"); //$NON-NLS-1$\n         param.setFieldType(EParameterFieldType.LABEL);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(16);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNzQ0OQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497207449", "bodyText": "not sure whether need i18n", "author": "cmeng-talend", "createdAt": "2020-09-30T02:26:05Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java", "diffHunk": "@@ -1001,6 +1004,98 @@ public void addViewParameters(final List<ElementParameter> listParam, INode node\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n     }\n+    \n+    //rename for route break points\n+    public void addRouteExpressionParameters(final List<ElementParameter> listParam, INode node) {\n+        if (PluginChecker.isTeamEdition() && !ComponentCategory.CATEGORY_4_CAMEL.getName().equals(getPaletteType())) {\n+            return;\n+        }\n+        \n+        ElementParameter param = new ElementParameter(node);\n+        param.setName(EParameterName.ACTIVEBREAKPOINT.getName());\n+        param.setDisplayName(EParameterName.ACTIVEBREAKPOINT.getDisplayName());\n+        param.setFieldType(EParameterFieldType.CHECK);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(13);\n+        param.setValue(false);\n+        param.setContextMode(false);\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+        \n+\n+        String[] displayNames = {\n+                \"JavaScript\",\n+                \"JSonPath\",\n+                \"JXPath\",\n+                \"Property\",\n+                \"Simple\",\n+                \"XPath\",\n+                \"XQuery\"\n+              };\n+        \n+        String[] itemValues = {\n+                \"javaScript\",\n+                \"jsonpath\",\n+                \"jxpath\",\n+                \"property\",\n+                \"simple\",\n+                \"xpath\",\n+                \"xquery\"\n+              };\n+        \n+        String[] displayCodeNames = {\n+                \"JAVASCRIPT\",\n+                \"JSONPATH\",\n+                \"JXPATH\",\n+                \"PROPERTY\",\n+                \"SIMPLE\",\n+                \"XPATH\",\n+                \"XQUERY\"\n+              };\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_LANGUAGES\");\n+        param.setDisplayName(\"Languages\");", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\nindex cb25d87096..ef0481d67a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n\n@@ -1022,74 +1055,43 @@ public class EmfComponent extends AbstractBasicComponent {\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n         \n-\n-        String[] displayNames = {\n-                \"JavaScript\",\n-                \"JSonPath\",\n-                \"JXPath\",\n-                \"Property\",\n-                \"Simple\",\n-                \"XPath\",\n-                \"XQuery\"\n-              };\n-        \n-        String[] itemValues = {\n-                \"javaScript\",\n-                \"jsonpath\",\n-                \"jxpath\",\n-                \"property\",\n-                \"simple\",\n-                \"xpath\",\n-                \"xquery\"\n-              };\n-        \n-        String[] displayCodeNames = {\n-                \"JAVASCRIPT\",\n-                \"JSONPATH\",\n-                \"JXPATH\",\n-                \"PROPERTY\",\n-                \"SIMPLE\",\n-                \"XPATH\",\n-                \"XQUERY\"\n-              };\n-\n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_LANGUAGES\");\n-        param.setDisplayName(\"Languages\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getDisplayName());\n         param.setFieldType(EParameterFieldType.CLOSED_LIST);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(14);\n         \n-        param.setListItemsValue(itemValues);\n-        param.setListItemsDisplayCodeName(displayCodeNames);\n-        param.setListItemsDisplayName(displayNames);\n-        param.setListRepositoryItems(new String[itemValues.length]);\n-        param.setListItemsShowIf(new String[itemValues.length]);\n-        param.setListItemsNotShowIf(new String[itemValues.length]);\n-        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n-        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n-        param.setValue(\"simple\");\n+        param.setListItemsValue(CAMEL_LANGUAGE_ITEM_VALUES);\n+        param.setListItemsDisplayCodeName(CAMEL_LANGUAGE_DISPLAY_CODE_NAMES);\n+        param.setListItemsDisplayName(CAMEL_LANGUAGE_DISPLAY_NAMES);\n+        param.setListRepositoryItems(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setValue(SIMPLE);\n         param.setContextMode(false);\n-        param.setDefaultValue(\"simple\");\n+        param.setDefaultValue(SIMPLE);\n         listParam.add(param);\n \n         \n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_EXPRESSION\");\n-        param.setDisplayName(\"Expression\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getDisplayName());\n         param.setFieldType(EParameterFieldType.TEXT);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(15);\n         param.setReadOnly(false);\n         param.setRequired(false);\n-        param.setValue(\"\\\"\\\"\");\n+        param.setValue(\"\\\"\\\"\"); //$NON-NLS-1$\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n \n         param = new ElementParameter(node);\n-        param.setName(\"EXAMPLE\");\n-        param.setDisplayName(\"Example\");\n-        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getDisplayName());\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\"); //$NON-NLS-1$\n         param.setFieldType(EParameterFieldType.LABEL);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(16);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNzUyMA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497207520", "bodyText": "not sure whether need i18n", "author": "cmeng-talend", "createdAt": "2020-09-30T02:26:19Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java", "diffHunk": "@@ -1001,6 +1004,98 @@ public void addViewParameters(final List<ElementParameter> listParam, INode node\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n     }\n+    \n+    //rename for route break points\n+    public void addRouteExpressionParameters(final List<ElementParameter> listParam, INode node) {\n+        if (PluginChecker.isTeamEdition() && !ComponentCategory.CATEGORY_4_CAMEL.getName().equals(getPaletteType())) {\n+            return;\n+        }\n+        \n+        ElementParameter param = new ElementParameter(node);\n+        param.setName(EParameterName.ACTIVEBREAKPOINT.getName());\n+        param.setDisplayName(EParameterName.ACTIVEBREAKPOINT.getDisplayName());\n+        param.setFieldType(EParameterFieldType.CHECK);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(13);\n+        param.setValue(false);\n+        param.setContextMode(false);\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+        \n+\n+        String[] displayNames = {\n+                \"JavaScript\",\n+                \"JSonPath\",\n+                \"JXPath\",\n+                \"Property\",\n+                \"Simple\",\n+                \"XPath\",\n+                \"XQuery\"\n+              };\n+        \n+        String[] itemValues = {\n+                \"javaScript\",\n+                \"jsonpath\",\n+                \"jxpath\",\n+                \"property\",\n+                \"simple\",\n+                \"xpath\",\n+                \"xquery\"\n+              };\n+        \n+        String[] displayCodeNames = {\n+                \"JAVASCRIPT\",\n+                \"JSONPATH\",\n+                \"JXPATH\",\n+                \"PROPERTY\",\n+                \"SIMPLE\",\n+                \"XPATH\",\n+                \"XQUERY\"\n+              };\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_LANGUAGES\");\n+        param.setDisplayName(\"Languages\");\n+        param.setFieldType(EParameterFieldType.CLOSED_LIST);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(14);\n+        \n+        param.setListItemsValue(itemValues);\n+        param.setListItemsDisplayCodeName(displayCodeNames);\n+        param.setListItemsDisplayName(displayNames);\n+        param.setListRepositoryItems(new String[itemValues.length]);\n+        param.setListItemsShowIf(new String[itemValues.length]);\n+        param.setListItemsNotShowIf(new String[itemValues.length]);\n+        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n+        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n+        param.setValue(\"simple\");\n+        param.setContextMode(false);\n+        param.setDefaultValue(\"simple\");\n+        listParam.add(param);\n+\n+        \n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_EXPRESSION\");\n+        param.setDisplayName(\"Expression\");\n+        param.setFieldType(EParameterFieldType.TEXT);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(15);\n+        param.setReadOnly(false);\n+        param.setRequired(false);\n+        param.setValue(\"\\\"\\\"\");\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"EXAMPLE\");\n+        param.setDisplayName(\"Example\");", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\nindex cb25d87096..ef0481d67a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n\n@@ -1022,74 +1055,43 @@ public class EmfComponent extends AbstractBasicComponent {\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n         \n-\n-        String[] displayNames = {\n-                \"JavaScript\",\n-                \"JSonPath\",\n-                \"JXPath\",\n-                \"Property\",\n-                \"Simple\",\n-                \"XPath\",\n-                \"XQuery\"\n-              };\n-        \n-        String[] itemValues = {\n-                \"javaScript\",\n-                \"jsonpath\",\n-                \"jxpath\",\n-                \"property\",\n-                \"simple\",\n-                \"xpath\",\n-                \"xquery\"\n-              };\n-        \n-        String[] displayCodeNames = {\n-                \"JAVASCRIPT\",\n-                \"JSONPATH\",\n-                \"JXPATH\",\n-                \"PROPERTY\",\n-                \"SIMPLE\",\n-                \"XPATH\",\n-                \"XQUERY\"\n-              };\n-\n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_LANGUAGES\");\n-        param.setDisplayName(\"Languages\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getDisplayName());\n         param.setFieldType(EParameterFieldType.CLOSED_LIST);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(14);\n         \n-        param.setListItemsValue(itemValues);\n-        param.setListItemsDisplayCodeName(displayCodeNames);\n-        param.setListItemsDisplayName(displayNames);\n-        param.setListRepositoryItems(new String[itemValues.length]);\n-        param.setListItemsShowIf(new String[itemValues.length]);\n-        param.setListItemsNotShowIf(new String[itemValues.length]);\n-        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n-        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n-        param.setValue(\"simple\");\n+        param.setListItemsValue(CAMEL_LANGUAGE_ITEM_VALUES);\n+        param.setListItemsDisplayCodeName(CAMEL_LANGUAGE_DISPLAY_CODE_NAMES);\n+        param.setListItemsDisplayName(CAMEL_LANGUAGE_DISPLAY_NAMES);\n+        param.setListRepositoryItems(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setValue(SIMPLE);\n         param.setContextMode(false);\n-        param.setDefaultValue(\"simple\");\n+        param.setDefaultValue(SIMPLE);\n         listParam.add(param);\n \n         \n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_EXPRESSION\");\n-        param.setDisplayName(\"Expression\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getDisplayName());\n         param.setFieldType(EParameterFieldType.TEXT);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(15);\n         param.setReadOnly(false);\n         param.setRequired(false);\n-        param.setValue(\"\\\"\\\"\");\n+        param.setValue(\"\\\"\\\"\"); //$NON-NLS-1$\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n \n         param = new ElementParameter(node);\n-        param.setName(\"EXAMPLE\");\n-        param.setDisplayName(\"Example\");\n-        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getDisplayName());\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\"); //$NON-NLS-1$\n         param.setFieldType(EParameterFieldType.LABEL);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(16);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNzU4Ng==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497207586", "bodyText": "not sure whether need i18n", "author": "cmeng-talend", "createdAt": "2020-09-30T02:26:39Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java", "diffHunk": "@@ -1001,6 +1004,98 @@ public void addViewParameters(final List<ElementParameter> listParam, INode node\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n     }\n+    \n+    //rename for route break points\n+    public void addRouteExpressionParameters(final List<ElementParameter> listParam, INode node) {\n+        if (PluginChecker.isTeamEdition() && !ComponentCategory.CATEGORY_4_CAMEL.getName().equals(getPaletteType())) {\n+            return;\n+        }\n+        \n+        ElementParameter param = new ElementParameter(node);\n+        param.setName(EParameterName.ACTIVEBREAKPOINT.getName());\n+        param.setDisplayName(EParameterName.ACTIVEBREAKPOINT.getDisplayName());\n+        param.setFieldType(EParameterFieldType.CHECK);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(13);\n+        param.setValue(false);\n+        param.setContextMode(false);\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+        \n+\n+        String[] displayNames = {\n+                \"JavaScript\",\n+                \"JSonPath\",\n+                \"JXPath\",\n+                \"Property\",\n+                \"Simple\",\n+                \"XPath\",\n+                \"XQuery\"\n+              };\n+        \n+        String[] itemValues = {\n+                \"javaScript\",\n+                \"jsonpath\",\n+                \"jxpath\",\n+                \"property\",\n+                \"simple\",\n+                \"xpath\",\n+                \"xquery\"\n+              };\n+        \n+        String[] displayCodeNames = {\n+                \"JAVASCRIPT\",\n+                \"JSONPATH\",\n+                \"JXPATH\",\n+                \"PROPERTY\",\n+                \"SIMPLE\",\n+                \"XPATH\",\n+                \"XQUERY\"\n+              };\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_LANGUAGES\");\n+        param.setDisplayName(\"Languages\");\n+        param.setFieldType(EParameterFieldType.CLOSED_LIST);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(14);\n+        \n+        param.setListItemsValue(itemValues);\n+        param.setListItemsDisplayCodeName(displayCodeNames);\n+        param.setListItemsDisplayName(displayNames);\n+        param.setListRepositoryItems(new String[itemValues.length]);\n+        param.setListItemsShowIf(new String[itemValues.length]);\n+        param.setListItemsNotShowIf(new String[itemValues.length]);\n+        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n+        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n+        param.setValue(\"simple\");\n+        param.setContextMode(false);\n+        param.setDefaultValue(\"simple\");\n+        listParam.add(param);\n+\n+        \n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_EXPRESSION\");\n+        param.setDisplayName(\"Expression\");\n+        param.setFieldType(EParameterFieldType.TEXT);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(15);\n+        param.setReadOnly(false);\n+        param.setRequired(false);\n+        param.setValue(\"\\\"\\\"\");\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"EXAMPLE\");\n+        param.setDisplayName(\"Example\");\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\nindex cb25d87096..ef0481d67a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n\n@@ -1022,74 +1055,43 @@ public class EmfComponent extends AbstractBasicComponent {\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n         \n-\n-        String[] displayNames = {\n-                \"JavaScript\",\n-                \"JSonPath\",\n-                \"JXPath\",\n-                \"Property\",\n-                \"Simple\",\n-                \"XPath\",\n-                \"XQuery\"\n-              };\n-        \n-        String[] itemValues = {\n-                \"javaScript\",\n-                \"jsonpath\",\n-                \"jxpath\",\n-                \"property\",\n-                \"simple\",\n-                \"xpath\",\n-                \"xquery\"\n-              };\n-        \n-        String[] displayCodeNames = {\n-                \"JAVASCRIPT\",\n-                \"JSONPATH\",\n-                \"JXPATH\",\n-                \"PROPERTY\",\n-                \"SIMPLE\",\n-                \"XPATH\",\n-                \"XQUERY\"\n-              };\n-\n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_LANGUAGES\");\n-        param.setDisplayName(\"Languages\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getDisplayName());\n         param.setFieldType(EParameterFieldType.CLOSED_LIST);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(14);\n         \n-        param.setListItemsValue(itemValues);\n-        param.setListItemsDisplayCodeName(displayCodeNames);\n-        param.setListItemsDisplayName(displayNames);\n-        param.setListRepositoryItems(new String[itemValues.length]);\n-        param.setListItemsShowIf(new String[itemValues.length]);\n-        param.setListItemsNotShowIf(new String[itemValues.length]);\n-        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n-        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n-        param.setValue(\"simple\");\n+        param.setListItemsValue(CAMEL_LANGUAGE_ITEM_VALUES);\n+        param.setListItemsDisplayCodeName(CAMEL_LANGUAGE_DISPLAY_CODE_NAMES);\n+        param.setListItemsDisplayName(CAMEL_LANGUAGE_DISPLAY_NAMES);\n+        param.setListRepositoryItems(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setValue(SIMPLE);\n         param.setContextMode(false);\n-        param.setDefaultValue(\"simple\");\n+        param.setDefaultValue(SIMPLE);\n         listParam.add(param);\n \n         \n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_EXPRESSION\");\n-        param.setDisplayName(\"Expression\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getDisplayName());\n         param.setFieldType(EParameterFieldType.TEXT);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(15);\n         param.setReadOnly(false);\n         param.setRequired(false);\n-        param.setValue(\"\\\"\\\"\");\n+        param.setValue(\"\\\"\\\"\"); //$NON-NLS-1$\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n \n         param = new ElementParameter(node);\n-        param.setName(\"EXAMPLE\");\n-        param.setDisplayName(\"Example\");\n-        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getDisplayName());\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\"); //$NON-NLS-1$\n         param.setFieldType(EParameterFieldType.LABEL);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(16);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwOTQ5NQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497209495", "bodyText": "maybe it is better to find another way to decide whether add the TOS helper? in case later we'll add some other type helper in TOS, then the default tos helper can't be registed using this logic", "author": "cmeng-talend", "createdAt": "2020-09-30T02:34:43Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java", "diffHunk": "@@ -185,19 +187,25 @@ public ProcessView() {\n                 \"org.talend.designer.runprocess.runprocess_view_helper\", \"runprocess_view_helper\"); //$NON-NLS-1$ //$NON-NLS-2$\n         IExtensionPointLimiter debugextensionPointLimiter = new ExtensionPointLimiterImpl(\n                 \"org.talend.designer.runprocess.debugprocess_view_helper\", \"debugprocess_view_helper\");\n-        IDebugViewHelper debugViewHelperPrm = ExtensionImplementationProvider.getSingleInstance(debugextensionPointLimiter, null);\n+        debugViewHelpers = new HashMap<String, IDebugViewHelper>();\n+        ExtensionImplementationProvider.getInstance(debugextensionPointLimiter, null).forEach(e -> {\n+            if (e instanceof IDebugViewHelper) {\n+                IDebugViewHelper helper = (IDebugViewHelper) e;\n+                debugViewHelpers.put(helper.getDebugType(), helper);\n+            }\n+        });\n+        \n         IProcessViewHelper processViewHelperPrm = ExtensionImplementationProvider.getSingleInstance(extensionPointLimiter, null);\n \n         if (processViewHelperPrm == null) {\n             processViewHelperPrm = new DefaultProcessViewHelper();\n         }\n         tabFactory = new HorizontalTabFactory();\n         setProcessViewHelper(processViewHelperPrm);\n-\n-        if (debugViewHelperPrm != null) {\n-            debugViewHelper = debugViewHelperPrm;\n-        } else {\n-            debugViewHelper = new DefaultDebugviewHelper();\n+        if(debugViewHelpers.size() == 0) {", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\nindex 8383357c4a..bea21ccbb3 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n\n@@ -187,7 +188,7 @@ public class ProcessView extends ViewPart implements PropertyChangeListener {\n                 \"org.talend.designer.runprocess.runprocess_view_helper\", \"runprocess_view_helper\"); //$NON-NLS-1$ //$NON-NLS-2$\n         IExtensionPointLimiter debugextensionPointLimiter = new ExtensionPointLimiterImpl(\n                 \"org.talend.designer.runprocess.debugprocess_view_helper\", \"debugprocess_view_helper\");\n-        debugViewHelpers = new HashMap<String, IDebugViewHelper>();\n+        debugViewHelpers = new HashMap<EDebugProcessType, IDebugViewHelper>();\n         ExtensionImplementationProvider.getInstance(debugextensionPointLimiter, null).forEach(e -> {\n             if (e instanceof IDebugViewHelper) {\n                 IDebugViewHelper helper = (IDebugViewHelper) e;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxMzI2NA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497213264", "bodyText": "maybe it's better to extract the \"DI\" into a constant class? so that we can trace the usage easily", "author": "cmeng-talend", "createdAt": "2020-09-30T02:50:48Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java", "diffHunk": "@@ -393,7 +401,13 @@ public void createDynamicComposite(Composite parent, Element element, EComponent\n             processComposite = new ProcessComposite(parent, SWT.H_SCROLL | SWT.V_SCROLL | SWT.NO_FOCUS);\n             dc = processComposite;\n         } else if (category == EComponentCategory.DEBUGRUN) {\n-            debugTisProcessComposite = this.debugViewHelper.getDebugComposite(parent);\n+            debugViewHelpers.values().forEach(helper -> {\n+                helper.getDebugComposite(parent).setVisible(false);\n+            });\n+            debugTisProcessComposite = oldJobType != null && debugViewHelpers.get(oldJobType) != null\n+                    ? debugViewHelpers.get(oldJobType).getDebugComposite(parent)\n+                    : debugViewHelpers.get(\"DI\").getDebugComposite(parent);", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\nindex 8383357c4a..bea21ccbb3 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n\n@@ -404,9 +405,9 @@ public class ProcessView extends ViewPart implements PropertyChangeListener {\n             debugViewHelpers.values().forEach(helper -> {\n                 helper.getDebugComposite(parent).setVisible(false);\n             });\n-            debugTisProcessComposite = oldJobType != null && debugViewHelpers.get(oldJobType) != null\n-                    ? debugViewHelpers.get(oldJobType).getDebugComposite(parent)\n-                    : debugViewHelpers.get(\"DI\").getDebugComposite(parent);\n+            debugTisProcessComposite = lastDebugType != null && debugViewHelpers.get(lastDebugType) != null\n+                    ? debugViewHelpers.get(lastDebugType).getDebugComposite(parent)\n+                    : debugViewHelpers.get(EDebugProcessType.DI).getDebugComposite(parent);\n             debugTisProcessComposite.setVisible(true);\n             // CSS\n             CoreUIPlugin.setCSSClass(debugTisProcessComposite, TraceDebugProcessComposite.class.getSimpleName());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxMzM3Ng==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497213376", "bodyText": "maybe also add the oldJobType blank check here?", "author": "cmeng-talend", "createdAt": "2020-09-30T02:51:12Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java", "diffHunk": "@@ -431,7 +445,7 @@ public void createDynamicComposite(Composite parent, Element element, EComponent\n     }\n \n     public IDebugViewHelper getDebugViewHelper() {\n-        return this.debugViewHelper;\n+        return this.debugViewHelpers.get(oldJobType);", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\nindex 8383357c4a..bea21ccbb3 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n\n@@ -445,7 +446,7 @@ public class ProcessView extends ViewPart implements PropertyChangeListener {\n     }\n \n     public IDebugViewHelper getDebugViewHelper() {\n-        return this.debugViewHelpers.get(oldJobType);\n+        return this.debugViewHelpers.get(lastDebugType);\n     }\n \n     public ProcessComposite getProcessComposite() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxMzYwNQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497213605", "bodyText": "not sure whether the oldJobType is alway not null here, better improve the logic to keep it same with before", "author": "cmeng-talend", "createdAt": "2020-09-30T02:52:10Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java", "diffHunk": "@@ -617,9 +631,20 @@ public void refresh(boolean force) {\n         }\n         if (dc != null && dc == processComposite) {\n             processComposite.setProcessContext(activeContext);\n-        } else if (dc != null && dc == debugTisProcessComposite) {\n-            debugTisProcessComposite.setProcessContext(activeContext);\n-            debugTisProcessComposite.setContextComposite(this.contextComposite);\n+        } else if (dc != null && dc instanceof TraceDebugProcessComposite) {\n+            if (this.oldJobType != null) {", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\nindex 8383357c4a..bea21ccbb3 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/ProcessView.java\n\n@@ -632,14 +635,14 @@ public class ProcessView extends ViewPart implements PropertyChangeListener {\n         if (dc != null && dc == processComposite) {\n             processComposite.setProcessContext(activeContext);\n         } else if (dc != null && dc instanceof TraceDebugProcessComposite) {\n-            if (this.oldJobType != null) {\n-                if (!debugViewHelpers.get(oldJobType).getDebugComposite(parent).isVisible()) {\n+            if (this.lastDebugType != null) {\n+                if (!debugViewHelpers.get(lastDebugType).getDebugComposite(parent).isVisible()) {\n                     debugViewHelpers.values().forEach(helper -> {\n-                        if(!helper.getDebugType().equals(oldJobType)) {\n+                        if(!helper.getDebugType().equals(lastDebugType)) {\n                             helper.getDebugComposite(parent).setVisible(false);\n                         }\n                     });\n-                    debugViewHelpers.get(oldJobType).getDebugComposite(parent).setVisible(true);\n+                    debugViewHelpers.get(lastDebugType).getDebugComposite(parent).setVisible(true);\n                 }\n                 debugTisProcessComposite.setProcessContext(activeContext);\n                 debugTisProcessComposite.setContextComposite(this.contextComposite);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNDAyNA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497214024", "bodyText": "maybe it is better to extract it into a constant class, so that we can trace the usage easily", "author": "cmeng-talend", "createdAt": "2020-09-30T02:53:55Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/DefaultDebugviewHelper.java", "diffHunk": "@@ -33,4 +33,9 @@ public TraceDebugProcessComposite getDebugComposite(Composite container) {\n         return new DebugProcessTosComposite(container, SWT.NONE);\n     }\n \n+    @Override\n+    public String getDebugType() {\n+        return \"DI\";", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/DefaultDebugviewHelper.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/DefaultDebugviewHelper.java\nindex b3680b477a..af885d1f09 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/DefaultDebugviewHelper.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/ui/views/DefaultDebugviewHelper.java\n\n@@ -34,8 +35,8 @@ public class DefaultDebugviewHelper implements IDebugViewHelper {\n     }\n \n     @Override\n-    public String getDebugType() {\n-        return \"DI\";\n+    public EDebugProcessType getDebugType() {\n+        return EDebugProcessType.DI;\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNDcxMQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497214711", "bodyText": "not sure whether we should add it into EParameterName just same like ACTIVEBREAKPOINT", "author": "cmeng-talend", "createdAt": "2020-09-30T02:56:51Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java", "diffHunk": "@@ -1001,6 +1004,98 @@ public void addViewParameters(final List<ElementParameter> listParam, INode node\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n     }\n+    \n+    //rename for route break points\n+    public void addRouteExpressionParameters(final List<ElementParameter> listParam, INode node) {\n+        if (PluginChecker.isTeamEdition() && !ComponentCategory.CATEGORY_4_CAMEL.getName().equals(getPaletteType())) {\n+            return;\n+        }\n+        \n+        ElementParameter param = new ElementParameter(node);\n+        param.setName(EParameterName.ACTIVEBREAKPOINT.getName());\n+        param.setDisplayName(EParameterName.ACTIVEBREAKPOINT.getDisplayName());\n+        param.setFieldType(EParameterFieldType.CHECK);\n+        param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n+        param.setNumRow(13);\n+        param.setValue(false);\n+        param.setContextMode(false);\n+        param.setDefaultValue(param.getValue());\n+        listParam.add(param);\n+        \n+\n+        String[] displayNames = {\n+                \"JavaScript\",\n+                \"JSonPath\",\n+                \"JXPath\",\n+                \"Property\",\n+                \"Simple\",\n+                \"XPath\",\n+                \"XQuery\"\n+              };\n+        \n+        String[] itemValues = {\n+                \"javaScript\",\n+                \"jsonpath\",\n+                \"jxpath\",\n+                \"property\",\n+                \"simple\",\n+                \"xpath\",\n+                \"xquery\"\n+              };\n+        \n+        String[] displayCodeNames = {\n+                \"JAVASCRIPT\",\n+                \"JSONPATH\",\n+                \"JXPATH\",\n+                \"PROPERTY\",\n+                \"SIMPLE\",\n+                \"XPATH\",\n+                \"XQUERY\"\n+              };\n+\n+        param = new ElementParameter(node);\n+        param.setName(\"BREAKPOINT_LANGUAGES\");", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\nindex cb25d87096..ef0481d67a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/model/components/EmfComponent.java\n\n@@ -1022,74 +1055,43 @@ public class EmfComponent extends AbstractBasicComponent {\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n         \n-\n-        String[] displayNames = {\n-                \"JavaScript\",\n-                \"JSonPath\",\n-                \"JXPath\",\n-                \"Property\",\n-                \"Simple\",\n-                \"XPath\",\n-                \"XQuery\"\n-              };\n-        \n-        String[] itemValues = {\n-                \"javaScript\",\n-                \"jsonpath\",\n-                \"jxpath\",\n-                \"property\",\n-                \"simple\",\n-                \"xpath\",\n-                \"xquery\"\n-              };\n-        \n-        String[] displayCodeNames = {\n-                \"JAVASCRIPT\",\n-                \"JSONPATH\",\n-                \"JXPATH\",\n-                \"PROPERTY\",\n-                \"SIMPLE\",\n-                \"XPATH\",\n-                \"XQUERY\"\n-              };\n-\n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_LANGUAGES\");\n-        param.setDisplayName(\"Languages\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_LANGUAGES.getDisplayName());\n         param.setFieldType(EParameterFieldType.CLOSED_LIST);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(14);\n         \n-        param.setListItemsValue(itemValues);\n-        param.setListItemsDisplayCodeName(displayCodeNames);\n-        param.setListItemsDisplayName(displayNames);\n-        param.setListRepositoryItems(new String[itemValues.length]);\n-        param.setListItemsShowIf(new String[itemValues.length]);\n-        param.setListItemsNotShowIf(new String[itemValues.length]);\n-        param.setListItemsReadOnlyIf(new String[itemValues.length]);\n-        param.setListItemsNotReadOnlyIf(new String[itemValues.length]);\n-        param.setValue(\"simple\");\n+        param.setListItemsValue(CAMEL_LANGUAGE_ITEM_VALUES);\n+        param.setListItemsDisplayCodeName(CAMEL_LANGUAGE_DISPLAY_CODE_NAMES);\n+        param.setListItemsDisplayName(CAMEL_LANGUAGE_DISPLAY_NAMES);\n+        param.setListRepositoryItems(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotShowIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setListItemsNotReadOnlyIf(new String[CAMEL_LANGUAGE_ITEM_VALUES.length]);\n+        param.setValue(SIMPLE);\n         param.setContextMode(false);\n-        param.setDefaultValue(\"simple\");\n+        param.setDefaultValue(SIMPLE);\n         listParam.add(param);\n \n         \n         param = new ElementParameter(node);\n-        param.setName(\"BREAKPOINT_EXPRESSION\");\n-        param.setDisplayName(\"Expression\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXPRESSION.getDisplayName());\n         param.setFieldType(EParameterFieldType.TEXT);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(15);\n         param.setReadOnly(false);\n         param.setRequired(false);\n-        param.setValue(\"\\\"\\\"\");\n+        param.setValue(\"\\\"\\\"\"); //$NON-NLS-1$\n         param.setDefaultValue(param.getValue());\n         listParam.add(param);\n \n         param = new ElementParameter(node);\n-        param.setName(\"EXAMPLE\");\n-        param.setDisplayName(\"Example\");\n-        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\");\n+        param.setName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getName());\n+        param.setDisplayName(EParameterName.ROUTE_BREAKPOINT_EXAMPLE.getDisplayName());\n+        param.setValue(\"Example: Lauguages=Simple, Expression=\\\"${body} contains 'Camel'\\\"\"); //$NON-NLS-1$\n         param.setFieldType(EParameterFieldType.LABEL);\n         param.setCategory(EComponentCategory.BREAKPOINT_CAMEL);\n         param.setNumRow(16);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNDg4MQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497214881", "bodyText": "maybe need i18n here?", "author": "cmeng-talend", "createdAt": "2020-09-30T02:57:34Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/action/NodeConditionalBreakpointAction.java", "diffHunk": "@@ -0,0 +1,140 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.designer.core.ui.action;\n+\n+import java.util.List;\n+\n+import org.eclipse.gef.EditPart;\n+import org.eclipse.gef.ui.actions.SelectionAction;\n+import org.eclipse.ui.IViewPart;\n+import org.eclipse.ui.IWorkbench;\n+import org.eclipse.ui.IWorkbenchPage;\n+import org.eclipse.ui.IWorkbenchPart;\n+import org.eclipse.ui.PartInitException;\n+import org.eclipse.ui.PlatformUI;\n+import org.talend.commons.ui.runtime.exception.ExceptionHandler;\n+import org.talend.core.CorePlugin;\n+import org.talend.core.GlobalServiceRegister;\n+import org.talend.core.context.Context;\n+import org.talend.core.model.process.EComponentCategory;\n+import org.talend.core.model.process.INode;\n+import org.talend.core.model.process.IProcess;\n+import org.talend.core.ui.branding.IBrandingService;\n+import org.talend.core.ui.utils.PluginUtil;\n+import org.talend.designer.core.DesignerPlugin;\n+import org.talend.designer.core.i18n.Messages;\n+import org.talend.designer.core.ui.editor.nodes.Node;\n+import org.talend.designer.core.ui.editor.nodes.NodePart;\n+import org.talend.designer.core.ui.editor.process.Process;\n+import org.talend.designer.core.ui.editor.process.ProcessPart;\n+import org.talend.designer.core.ui.views.properties.ComponentSettingsView;\n+\n+/**\n+ * Action to toggle a conditional breakpoint on a camel route node, for ESB only. <br/>\n+ *\n+ * $Id$\n+ *\n+ */\n+public class NodeConditionalBreakpointAction extends ShowComponentSettingViewerAction {\n+\n+    public static final String ID = \"org.talend.designer.core.ui.editor.action.NodeConditionalBreakpointAction\"; //$NON-NLS-1$\n+\n+    private IProcess process;\n+\n+    private Node node;\n+\n+    /**\n+     * Constructs a new PropertiesContextAction.\n+     *\n+     * @param part\n+     */\n+    public NodeConditionalBreakpointAction(IWorkbenchPart part) {\n+        super(part);\n+        setId(ID);\n+        setImageDescriptor(DesignerPlugin.getImageDescriptor(\"icons/breakpoint.png\")); //$NON-NLS-1$\n+//        setText(Messages.getString(\"Conditional Breakpoint\")); //$NON-NLS-1$\n+        setText(\"Conditional breakpoint\"); //$NON-NLS-1$", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/action/NodeConditionalBreakpointAction.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/action/NodeConditionalBreakpointAction.java\nindex 991551758f..458fd559b4 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/action/NodeConditionalBreakpointAction.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/action/NodeConditionalBreakpointAction.java\n\n@@ -15,27 +15,19 @@ package org.talend.designer.core.ui.action;\n import java.util.List;\n \n import org.eclipse.gef.EditPart;\n-import org.eclipse.gef.ui.actions.SelectionAction;\n-import org.eclipse.ui.IViewPart;\n import org.eclipse.ui.IWorkbench;\n import org.eclipse.ui.IWorkbenchPage;\n import org.eclipse.ui.IWorkbenchPart;\n import org.eclipse.ui.PartInitException;\n import org.eclipse.ui.PlatformUI;\n import org.talend.commons.ui.runtime.exception.ExceptionHandler;\n-import org.talend.core.CorePlugin;\n-import org.talend.core.GlobalServiceRegister;\n-import org.talend.core.context.Context;\n import org.talend.core.model.process.EComponentCategory;\n import org.talend.core.model.process.INode;\n-import org.talend.core.model.process.IProcess;\n-import org.talend.core.ui.branding.IBrandingService;\n import org.talend.core.ui.utils.PluginUtil;\n import org.talend.designer.core.DesignerPlugin;\n import org.talend.designer.core.i18n.Messages;\n import org.talend.designer.core.ui.editor.nodes.Node;\n import org.talend.designer.core.ui.editor.nodes.NodePart;\n-import org.talend.designer.core.ui.editor.process.Process;\n import org.talend.designer.core.ui.editor.process.ProcessPart;\n import org.talend.designer.core.ui.views.properties.ComponentSettingsView;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNDk3OQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497214979", "bodyText": "image is set twice here, not sure", "author": "cmeng-talend", "createdAt": "2020-09-30T02:58:11Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/nodecontainer/NodeContainerFigure.java", "diffHunk": "@@ -115,7 +122,13 @@ protected void fillShape(Graphics graphics) {\n         breakpointFigure.setSize(breakpointFigure.getPreferredSize());\n         this.add(breakpointFigure);\n \n+        breakpointLineBorder = new LineBorder(new Color(Display.getDefault(), new RGB(255, 255, 0)), 2);\n+        breakpointBottomLineBorder = new OneLineBorder(new Color(Display.getDefault(), new RGB(113, 113, 225)), 2,\n+                PositionConstants.BOTTOM);\n+        \n         errorFigure = new ImageFigure();\n+        Image image = ImageProvider.getImage(CoreUIPlugin.getImageDescriptor(BREAKPOINT_IMAGE));\n+        errorFigure.setImage(image);\n         errorFigure.setImage(ImageProvider.getImage(EImage.ERROR_SMALL));", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0NzY3Mg==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497347672", "bodyText": "fixed the wrong logic", "author": "yanbasic", "createdAt": "2020-09-30T08:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNDk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/nodecontainer/NodeContainerFigure.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/nodecontainer/NodeContainerFigure.java\nindex 072126f609..4f8b40202b 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/nodecontainer/NodeContainerFigure.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/nodecontainer/NodeContainerFigure.java\n\n@@ -123,12 +123,10 @@ public class NodeContainerFigure extends Figure {\n         this.add(breakpointFigure);\n \n         breakpointLineBorder = new LineBorder(new Color(Display.getDefault(), new RGB(255, 255, 0)), 2);\n-        breakpointBottomLineBorder = new OneLineBorder(new Color(Display.getDefault(), new RGB(113, 113, 225)), 2,\n+        breakpointBottomLineBorder = new OneLineBorder(new Color(Display.getDefault(), new RGB(113, 113, 225)), 3,\n                 PositionConstants.BOTTOM);\n         \n         errorFigure = new ImageFigure();\n-        Image image = ImageProvider.getImage(CoreUIPlugin.getImageDescriptor(BREAKPOINT_IMAGE));\n-        errorFigure.setImage(image);\n         errorFigure.setImage(ImageProvider.getImage(EImage.ERROR_SMALL));\n         errorFigure.setVisible(false);\n         errorFigure.setSize(errorFigure.getPreferredSize());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNTE1NQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497215155", "bodyText": "not sure why it is removed, can you please explain it?", "author": "cmeng-talend", "createdAt": "2020-09-30T02:58:50Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java", "diffHunk": "@@ -1868,14 +1870,34 @@ public Object saveLaunchConfigurationWithParam(String parameterStr) throws CoreE\n                     launchManager.generateUniqueLaunchConfigurationNameFrom(this.getCodePath().lastSegment()));\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, projectName);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_MAIN_TYPE_NAME, this.getMainClass());\n-            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n+//            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\nindex 43e13f6788..53c9699aca 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\n\n@@ -1870,10 +1871,11 @@ public class JavaProcessor extends AbstractJavaProcessor implements IJavaBreakpo\n                     launchManager.generateUniqueLaunchConfigurationNameFrom(this.getCodePath().lastSegment()));\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, projectName);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_MAIN_TYPE_NAME, this.getMainClass());\n-//            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS, CTX_ARG + context.getName() + parameterStr);\n             if (isRouteDebugging()) {\n-                wc.setAttribute(\"DEBUG_JOB_ID\", this.getProperty().getId());\n+                wc.setAttribute(Processor.DEBUG_ROUTE_ID_ARG, this.getProperty().getId());\n+            } else {\n+                wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n             }\n             setupEncryptionFilePathParameter(wc);\n             \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNTQwOQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5280#discussion_r497215409", "bodyText": "confusing name here, maybe DEBUG_ROUTE_ID ? and maybe put in constant class? or maybe make it a more general usage? like record the id, and detect whether it is route through the job type?", "author": "cmeng-talend", "createdAt": "2020-09-30T02:59:57Z", "path": "main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java", "diffHunk": "@@ -1868,14 +1870,34 @@ public Object saveLaunchConfigurationWithParam(String parameterStr) throws CoreE\n                     launchManager.generateUniqueLaunchConfigurationNameFrom(this.getCodePath().lastSegment()));\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, projectName);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_MAIN_TYPE_NAME, this.getMainClass());\n-            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n+//            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS, CTX_ARG + context.getName() + parameterStr);\n+            if (isRouteDebugging()) {\n+                wc.setAttribute(\"DEBUG_JOB_ID\", this.getProperty().getId());", "originalCommit": "a02aed322847d8d1e9d0549c71428b63df199d99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "chunk": "diff --git a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\nindex 43e13f6788..53c9699aca 100644\n--- a/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\n+++ b/main/plugins/org.talend.designer.runprocess/src/main/java/org/talend/designer/runprocess/java/JavaProcessor.java\n\n@@ -1870,10 +1871,11 @@ public class JavaProcessor extends AbstractJavaProcessor implements IJavaBreakpo\n                     launchManager.generateUniqueLaunchConfigurationNameFrom(this.getCodePath().lastSegment()));\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, projectName);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_MAIN_TYPE_NAME, this.getMainClass());\n-//            wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n             wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS, CTX_ARG + context.getName() + parameterStr);\n             if (isRouteDebugging()) {\n-                wc.setAttribute(\"DEBUG_JOB_ID\", this.getProperty().getId());\n+                wc.setAttribute(Processor.DEBUG_ROUTE_ID_ARG, this.getProperty().getId());\n+            } else {\n+                wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_STOP_IN_MAIN, true);\n             }\n             setupEncryptionFilePathParameter(wc);\n             \n"}}, {"oid": "77df8048e4913e8730f6f0d2e3c3434ac0438426", "url": "https://github.com/Talend/tdi-studio-se/commit/77df8048e4913e8730f6f0d2e3c3434ac0438426", "message": "fix(TESB-29271): Cumulative fixes and code improvement", "committedDate": "2020-09-30T08:50:04Z", "type": "commit"}, {"oid": "0dbf6d2a4e793a6309df567984b64e554a7d33b0", "url": "https://github.com/Talend/tdi-studio-se/commit/0dbf6d2a4e793a6309df567984b64e554a7d33b0", "message": "fix(TESB-29271): Added default view(DI)", "committedDate": "2020-09-30T10:45:20Z", "type": "commit"}, {"oid": "b8d1556c72f3421b8e8f5d2036affb8d3e8f4edd", "url": "https://github.com/Talend/tdi-studio-se/commit/b8d1556c72f3421b8e8f5d2036affb8d3e8f4edd", "message": "fix(TESB-29271): Code improvements by code review", "committedDate": "2020-10-01T06:41:16Z", "type": "commit"}, {"oid": "eaf534d44a47e8d450b8e2fcc598dc394f30c0db", "url": "https://github.com/Talend/tdi-studio-se/commit/eaf534d44a47e8d450b8e2fcc598dc394f30c0db", "message": "feat(TESB-29271): code updated by review", "committedDate": "2020-10-07T13:37:15Z", "type": "commit"}]}