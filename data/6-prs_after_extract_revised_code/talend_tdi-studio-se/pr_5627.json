{"pr_number": 5627, "pr_title": "fix(TUP-29693): Fix migrating jarname to maven uri if jar name contai\u2026", "pr_createdAt": "2020-12-14T09:05:18Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/5627", "timeline": [{"oid": "ee056df5aa7cfa01e6b9d28f5c67b071ce61da5a", "url": "https://github.com/Talend/tdi-studio-se/commit/ee056df5aa7cfa01e6b9d28f5c67b071ce61da5a", "message": "fix(TUP-29693): Fix migrating jarname to maven uri if jar name contains context", "committedDate": "2020-12-14T09:02:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Njc3MA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5627#discussion_r542296770", "bodyText": "why need execute migrateProjectSettings in the loop ?\nIt will try to check the project migration many times . It should be a one time check migration.", "author": "wchen-talend", "createdAt": "2020-12-14T11:02:10Z", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java", "diffHunk": "@@ -69,6 +80,73 @@\n         return toReturn;\r\n     }\r\n \r\n+    @Override\r\n+    public ExecutionResult execute(Project project) {\r\n+        setProject(project);\r\n+        IRepositoryService service = (IRepositoryService) GlobalServiceRegister.getDefault().getService(IRepositoryService.class);\r\n+        IProxyRepositoryFactory factory = service.getProxyRepositoryFactory();\r\n+        ExecutionResult executeFinal = null;\r\n+        List<IRepositoryViewObject> list = new ArrayList<IRepositoryViewObject>();\r\n+\r\n+        try {\r\n+            for (ERepositoryObjectType curTyp : getAllTypes()) {\r\n+                if (curTyp != null && curTyp.isResourceItem()) {\r\n+                    /* specific project so that on svn model it will migrate all ref projects,bug 17295 */\r\n+                    list.addAll(factory.getAll(project, curTyp, true, true));\r\n+                }\r\n+            }\r\n+\r\n+            if (list.isEmpty()) {\r\n+                return ExecutionResult.NOTHING_TO_DO;\r\n+            }\r\n+\r\n+            for (IRepositoryViewObject object : list) {\r\n+                ExecutionResult execute = null;\r\n+                // in case the resource has been modified (see MergeTosMetadataMigrationTask for example)\r\n+                if ((object.getProperty().eResource() == null || object.getProperty().getItem().eResource() == null)\r\n+                        && (object instanceof RepositoryObject)) {\r\n+                    Property updatedProperty = factory.reload(object.getProperty());\r\n+                    ((RepositoryObject) object).setProperty(updatedProperty);\r\n+                }\r\n+\r\n+                execute = this.migrateProjectSettings(project);\r", "originalCommit": "ee056df5aa7cfa01e6b9d28f5c67b071ce61da5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5NzU0OA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5627#discussion_r542297548", "bodyText": "I think UpdateModuleListInComponentsMigrationTask.java  should keep the main logic the same as before . but only add the check for context mode in module list .", "author": "wchen-talend", "createdAt": "2020-12-14T11:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Njc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "907e72821cd4e686d0c096f54b23a7e1de5a2c09", "chunk": "diff --git a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java\nindex 1766490389..7d481f8d1a 100644\n--- a/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java\n+++ b/main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java\n\n@@ -80,73 +73,6 @@ public class UpdateModuleListInComponentsMigrationTask extends AbstractItemMigra\n         return toReturn;\n     }\n \n-    @Override\n-    public ExecutionResult execute(Project project) {\n-        setProject(project);\n-        IRepositoryService service = (IRepositoryService) GlobalServiceRegister.getDefault().getService(IRepositoryService.class);\n-        IProxyRepositoryFactory factory = service.getProxyRepositoryFactory();\n-        ExecutionResult executeFinal = null;\n-        List<IRepositoryViewObject> list = new ArrayList<IRepositoryViewObject>();\n-\n-        try {\n-            for (ERepositoryObjectType curTyp : getAllTypes()) {\n-                if (curTyp != null && curTyp.isResourceItem()) {\n-                    /* specific project so that on svn model it will migrate all ref projects,bug 17295 */\n-                    list.addAll(factory.getAll(project, curTyp, true, true));\n-                }\n-            }\n-\n-            if (list.isEmpty()) {\n-                return ExecutionResult.NOTHING_TO_DO;\n-            }\n-\n-            for (IRepositoryViewObject object : list) {\n-                ExecutionResult execute = null;\n-                // in case the resource has been modified (see MergeTosMetadataMigrationTask for example)\n-                if ((object.getProperty().eResource() == null || object.getProperty().getItem().eResource() == null)\n-                        && (object instanceof RepositoryObject)) {\n-                    Property updatedProperty = factory.reload(object.getProperty());\n-                    ((RepositoryObject) object).setProperty(updatedProperty);\n-                }\n-\n-                execute = this.migrateProjectSettings(project);\n-                if (execute == ExecutionResult.FAILURE) {\n-                    return ExecutionResult.FAILURE;\n-                }\n-\n-                Item item = object.getProperty().getItem();\n-                execute = execute(item);\n-\n-                unloadObject(object);\n-\n-                if (execute == ExecutionResult.FAILURE) {\n-                    executeFinal = ExecutionResult.FAILURE;\n-                }\n-                if (executeFinal != ExecutionResult.FAILURE) {\n-                    executeFinal = execute;\n-                }\n-            }\n-\n-            return executeFinal;\n-        } catch (PersistenceException e) {\n-            ExceptionHandler.process(e);\n-            return ExecutionResult.FAILURE;\n-        }\n-    }\n-\n-    @Override\n-    public ExecutionResult execute(Project project, Item item) {\n-        if (!getAllTypes().contains(ERepositoryObjectType.getItemType(item))) {\n-            return ExecutionResult.NOTHING_TO_DO;\n-        }\n-        setProject(project);\n-        ExecutionResult execute = this.migrateProjectSettings(project);\n-        if (execute == ExecutionResult.FAILURE) {\n-            return ExecutionResult.FAILURE;\n-        }\n-        return execute(item);\n-    }\n-    \n     /*\n      * (non-Javadoc)\n      *\n"}}, {"oid": "907e72821cd4e686d0c096f54b23a7e1de5a2c09", "url": "https://github.com/Talend/tdi-studio-se/commit/907e72821cd4e686d0c096f54b23a7e1de5a2c09", "message": "fix(TUP-29693): Kepp main logic unchanged", "committedDate": "2020-12-14T12:35:00Z", "type": "commit"}]}