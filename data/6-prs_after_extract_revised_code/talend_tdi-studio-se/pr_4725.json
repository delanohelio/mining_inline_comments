{"pr_number": 4725, "pr_title": "Wwang talend/tdi 44172", "pr_createdAt": "2020-05-22T07:13:57Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/4725", "timeline": [{"oid": "23b8db17d3e6207e68bc7c37e70b6bb03bf17d3a", "url": "https://github.com/Talend/tdi-studio-se/commit/23b8db17d3e6207e68bc7c37e70b6bb03bf17d3a", "message": "fix(TDI-44171): Observability: Add \"Component\" label to\ncomponent-related events", "committedDate": "2020-05-11T02:03:06Z", "type": "commit"}, {"oid": "267695182ad036837109f1fb5812b9c16b99cbcb", "url": "https://github.com/Talend/tdi-studio-se/commit/267695182ad036837109f1fb5812b9c16b99cbcb", "message": "fix(TDI-44172): Observability: Create new \"component execution\" event\nand emit it frequently", "committedDate": "2020-05-12T07:15:17Z", "type": "commit"}, {"oid": "f9ec4d8fbf5d55b0fa716ebf42b60ec62d3db95b", "url": "https://github.com/Talend/tdi-studio-se/commit/f9ec4d8fbf5d55b0fa716ebf42b60ec62d3db95b", "message": "fix(TDI-44172): correct name", "committedDate": "2020-05-12T07:30:25Z", "type": "commit"}, {"oid": "78ae0eaf9360c946f62e2bfdecb9c61937ac5cac", "url": "https://github.com/Talend/tdi-studio-se/commit/78ae0eaf9360c946f62e2bfdecb9c61937ac5cac", "message": "fix(TDI-44172): fix some issue", "committedDate": "2020-05-13T02:51:04Z", "type": "commit"}, {"oid": "2c27cad17d2808054c81a2856a7075cc404c27b3", "url": "https://github.com/Talend/tdi-studio-se/commit/2c27cad17d2808054c81a2856a7075cc404c27b3", "message": "Merge remote-tracking branch 'origin/master' into wwang-talend/TDI-44172", "committedDate": "2020-05-26T02:24:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyNjEzMw==", "url": "https://github.com/Talend/tdi-studio-se/pull/4725#discussion_r433126133", "bodyText": "Could you rename the context key \"sourceConnectorName\" to \"sourceConnectorType\" to keep the same vocabulary as for \"connectorType\" please? \ud83d\ude42", "author": "elogeart", "createdAt": "2020-06-01T09:13:08Z", "path": "main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java", "diffHunk": "@@ -86,5 +96,59 @@ public JobContextBuilder status(String status) {\n     public Context build() {\n         return builder.build();\n     }\n-\n+    \n+    /**\n+     * source connector id\n+     * @return\n+     */\n+    public JobContextBuilder sourceId(String sourceId) {\n+        builder.with(\"sourceId\", sourceId);\n+        return this;\n+    }\n+    \n+    /**\n+     * source connector label\n+     * @return\n+     */\n+    public JobContextBuilder sourceLabel(String sourceLabel) {\n+        builder.with(\"sourceLabel\", sourceLabel);\n+        return this;\n+    }\n+    \n+    /**\n+     * source connector name\n+     * @return\n+     */\n+    public JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n+        builder.with(\"sourceConnectorName\", sourceConnectorName);", "originalCommit": "2c27cad17d2808054c81a2856a7075cc404c27b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77babb4eb5024990b0ec363aba8130bb440835ab", "chunk": "diff --git a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\nindex 6f7c64bee9..9c52f715b1 100644\n--- a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\n+++ b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\n\n@@ -5,150 +5,160 @@ import org.talend.logging.audit.ContextBuilder;\n \n public class JobContextBuilder {\n \n-    private final ContextBuilder builder;\n-\n-    public JobContextBuilder(ContextBuilder builder) {\n-        this.builder = builder;\n-    }\n-\n-    public static JobContextBuilder create() {\n-        return new JobContextBuilder(ContextBuilder.create());\n-    }\n-\n-    public JobContextBuilder jobName(String jobName) {\n-        builder.with(\"jobName\", jobName);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder jobVersion(String jobVersion) {\n-        builder.with(\"jobVersion\", jobVersion);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder jobId(String jobId) {\n-        builder.with(\"jobId\", jobId);\n-        return this;\n-    }\n-    \n-    /**\n-     * component label, default is unique name like \"tXMLMap_1\", but user can adjust it in studio to any value\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorLabel(String connectorLabel) {\n-        builder.with(\"connectorLabel\", connectorLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * component type like \"tXMLMap\"\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorType(String connectorType) {\n-        builder.with(\"connectorType\", connectorType);\n-        return this;\n-    }\n-    \n-    /**\n-     * component unique name like \"tXMLMap_1\"\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorId(String connectorId) {\n-        builder.with(\"connectorId\", connectorId);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder rows(long rowCount) {\n-        builder.with(\"rows\", String.valueOf(rowCount));\n-        return this;\n-    }\n-    \n-    //output or reject\n-    public JobContextBuilder connectionType(String connectionType) {\n-        builder.with(\"connectionType\", connectionType);\n-        return this;\n-    }\n-    \n-    //like \"row1\"\n-    public JobContextBuilder connectionName(String connectionName) {\n-        builder.with(\"connectionName\", connectionName);\n-        return this;\n-    }\n-    \n-    //100s\n-    public JobContextBuilder duration(String duration) {\n-        builder.with(\"duration\", duration);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder timestamp(String timestamp) {\n-        builder.with(\"timestamp\", timestamp);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder status(String status) {\n-        builder.with(\"status\", status);\n-        return this;\n-    }\n-\n-    public Context build() {\n-        return builder.build();\n-    }\n-    \n-    /**\n-     * source connector id\n-     * @return\n-     */\n-    public JobContextBuilder sourceId(String sourceId) {\n-        builder.with(\"sourceId\", sourceId);\n-        return this;\n-    }\n-    \n-    /**\n-     * source connector label\n-     * @return\n-     */\n-    public JobContextBuilder sourceLabel(String sourceLabel) {\n-        builder.with(\"sourceLabel\", sourceLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * source connector name\n-     * @return\n-     */\n-    public JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n-        builder.with(\"sourceConnectorName\", sourceConnectorName);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector id\n-     * @return\n-     */\n-    public JobContextBuilder targetId(String targetId) {\n-        builder.with(\"targetId\", targetId);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector label\n-     * @return\n-     */\n-    public JobContextBuilder targetLabel(String targetLabel) {\n-        builder.with(\"targetLabel\", targetLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector name\n-     * @return\n-     */\n-    public JobContextBuilder targetConnectorName(String targetConnectorName) {\n-        builder.with(\"targetConnectorName\", targetConnectorName);\n-        return this;\n-    }\n-    \n+\tprivate final ContextBuilder builder;\n+\n+\tpublic JobContextBuilder(ContextBuilder builder) {\n+\t\tthis.builder = builder;\n+\t}\n+\n+\tpublic static JobContextBuilder create() {\n+\t\treturn new JobContextBuilder(ContextBuilder.create());\n+\t}\n+\n+\tpublic JobContextBuilder jobName(String jobName) {\n+\t\tbuilder.with(\"jobName\", jobName);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder jobVersion(String jobVersion) {\n+\t\tbuilder.with(\"jobVersion\", jobVersion);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder jobId(String jobId) {\n+\t\tbuilder.with(\"jobId\", jobId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component label, default is unique name like \"tXMLMap_1\", but user can adjust\n+\t * it in studio to any value\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorLabel(String connectorLabel) {\n+\t\tbuilder.with(\"connectorLabel\", connectorLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component type like \"tXMLMap\"\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorType(String connectorType) {\n+\t\tbuilder.with(\"connectorType\", connectorType);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component unique name like \"tXMLMap_1\"\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorId(String connectorId) {\n+\t\tbuilder.with(\"connectorId\", connectorId);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder rows(long rowCount) {\n+\t\tbuilder.with(\"rows\", String.valueOf(rowCount));\n+\t\treturn this;\n+\t}\n+\n+\t// output or reject\n+\tpublic JobContextBuilder connectionType(String connectionType) {\n+\t\tbuilder.with(\"connectionType\", connectionType);\n+\t\treturn this;\n+\t}\n+\n+\t// like \"row1\"\n+\tpublic JobContextBuilder connectionName(String connectionName) {\n+\t\tbuilder.with(\"connectionName\", connectionName);\n+\t\treturn this;\n+\t}\n+\n+\t// 100s\n+\tpublic JobContextBuilder duration(String duration) {\n+\t\tbuilder.with(\"duration\", duration);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder timestamp(String timestamp) {\n+\t\tbuilder.with(\"timestamp\", timestamp);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder status(String status) {\n+\t\tbuilder.with(\"status\", status);\n+\t\treturn this;\n+\t}\n+\n+\tpublic Context build() {\n+\t\treturn builder.build();\n+\t}\n+\n+\t/**\n+\t * source connector id\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceId(String sourceId) {\n+\t\tbuilder.with(\"sourceId\", sourceId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * source connector label\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceLabel(String sourceLabel) {\n+\t\tbuilder.with(\"sourceLabel\", sourceLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * source connector name\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n+\t\tbuilder.with(\"sourceConnectorName\", sourceConnectorName);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector id\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetId(String targetId) {\n+\t\tbuilder.with(\"targetId\", targetId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector label\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetLabel(String targetLabel) {\n+\t\tbuilder.with(\"targetLabel\", targetLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector name\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetConnectorName(String targetConnectorName) {\n+\t\tbuilder.with(\"targetConnectorName\", targetConnectorName);\n+\t\treturn this;\n+\t}\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyNjI5Mg==", "url": "https://github.com/Talend/tdi-studio-se/pull/4725#discussion_r433126292", "bodyText": "Could you rename the context key \"targetConnectorName\" to \"targetConnectorType\" to keep the same vocabulary as for \"connectorType\" please? \ud83d\ude42", "author": "elogeart", "createdAt": "2020-06-01T09:13:29Z", "path": "main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java", "diffHunk": "@@ -86,5 +96,59 @@ public JobContextBuilder status(String status) {\n     public Context build() {\n         return builder.build();\n     }\n-\n+    \n+    /**\n+     * source connector id\n+     * @return\n+     */\n+    public JobContextBuilder sourceId(String sourceId) {\n+        builder.with(\"sourceId\", sourceId);\n+        return this;\n+    }\n+    \n+    /**\n+     * source connector label\n+     * @return\n+     */\n+    public JobContextBuilder sourceLabel(String sourceLabel) {\n+        builder.with(\"sourceLabel\", sourceLabel);\n+        return this;\n+    }\n+    \n+    /**\n+     * source connector name\n+     * @return\n+     */\n+    public JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n+        builder.with(\"sourceConnectorName\", sourceConnectorName);\n+        return this;\n+    }\n+    \n+    /**\n+     * target connector id\n+     * @return\n+     */\n+    public JobContextBuilder targetId(String targetId) {\n+        builder.with(\"targetId\", targetId);\n+        return this;\n+    }\n+    \n+    /**\n+     * target connector label\n+     * @return\n+     */\n+    public JobContextBuilder targetLabel(String targetLabel) {\n+        builder.with(\"targetLabel\", targetLabel);\n+        return this;\n+    }\n+    \n+    /**\n+     * target connector name\n+     * @return\n+     */\n+    public JobContextBuilder targetConnectorName(String targetConnectorName) {\n+        builder.with(\"targetConnectorName\", targetConnectorName);", "originalCommit": "2c27cad17d2808054c81a2856a7075cc404c27b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwNzAzNw==", "url": "https://github.com/Talend/tdi-studio-se/pull/4725#discussion_r433607037", "bodyText": "fixed", "author": "wwang-talend", "createdAt": "2020-06-02T04:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyNjI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "77babb4eb5024990b0ec363aba8130bb440835ab", "chunk": "diff --git a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\nindex 6f7c64bee9..9c52f715b1 100644\n--- a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\n+++ b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobContextBuilder.java\n\n@@ -5,150 +5,160 @@ import org.talend.logging.audit.ContextBuilder;\n \n public class JobContextBuilder {\n \n-    private final ContextBuilder builder;\n-\n-    public JobContextBuilder(ContextBuilder builder) {\n-        this.builder = builder;\n-    }\n-\n-    public static JobContextBuilder create() {\n-        return new JobContextBuilder(ContextBuilder.create());\n-    }\n-\n-    public JobContextBuilder jobName(String jobName) {\n-        builder.with(\"jobName\", jobName);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder jobVersion(String jobVersion) {\n-        builder.with(\"jobVersion\", jobVersion);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder jobId(String jobId) {\n-        builder.with(\"jobId\", jobId);\n-        return this;\n-    }\n-    \n-    /**\n-     * component label, default is unique name like \"tXMLMap_1\", but user can adjust it in studio to any value\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorLabel(String connectorLabel) {\n-        builder.with(\"connectorLabel\", connectorLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * component type like \"tXMLMap\"\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorType(String connectorType) {\n-        builder.with(\"connectorType\", connectorType);\n-        return this;\n-    }\n-    \n-    /**\n-     * component unique name like \"tXMLMap_1\"\n-     * @param connectorType\n-     * @return self\n-     */\n-    public JobContextBuilder connectorId(String connectorId) {\n-        builder.with(\"connectorId\", connectorId);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder rows(long rowCount) {\n-        builder.with(\"rows\", String.valueOf(rowCount));\n-        return this;\n-    }\n-    \n-    //output or reject\n-    public JobContextBuilder connectionType(String connectionType) {\n-        builder.with(\"connectionType\", connectionType);\n-        return this;\n-    }\n-    \n-    //like \"row1\"\n-    public JobContextBuilder connectionName(String connectionName) {\n-        builder.with(\"connectionName\", connectionName);\n-        return this;\n-    }\n-    \n-    //100s\n-    public JobContextBuilder duration(String duration) {\n-        builder.with(\"duration\", duration);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder timestamp(String timestamp) {\n-        builder.with(\"timestamp\", timestamp);\n-        return this;\n-    }\n-    \n-    public JobContextBuilder status(String status) {\n-        builder.with(\"status\", status);\n-        return this;\n-    }\n-\n-    public Context build() {\n-        return builder.build();\n-    }\n-    \n-    /**\n-     * source connector id\n-     * @return\n-     */\n-    public JobContextBuilder sourceId(String sourceId) {\n-        builder.with(\"sourceId\", sourceId);\n-        return this;\n-    }\n-    \n-    /**\n-     * source connector label\n-     * @return\n-     */\n-    public JobContextBuilder sourceLabel(String sourceLabel) {\n-        builder.with(\"sourceLabel\", sourceLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * source connector name\n-     * @return\n-     */\n-    public JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n-        builder.with(\"sourceConnectorName\", sourceConnectorName);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector id\n-     * @return\n-     */\n-    public JobContextBuilder targetId(String targetId) {\n-        builder.with(\"targetId\", targetId);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector label\n-     * @return\n-     */\n-    public JobContextBuilder targetLabel(String targetLabel) {\n-        builder.with(\"targetLabel\", targetLabel);\n-        return this;\n-    }\n-    \n-    /**\n-     * target connector name\n-     * @return\n-     */\n-    public JobContextBuilder targetConnectorName(String targetConnectorName) {\n-        builder.with(\"targetConnectorName\", targetConnectorName);\n-        return this;\n-    }\n-    \n+\tprivate final ContextBuilder builder;\n+\n+\tpublic JobContextBuilder(ContextBuilder builder) {\n+\t\tthis.builder = builder;\n+\t}\n+\n+\tpublic static JobContextBuilder create() {\n+\t\treturn new JobContextBuilder(ContextBuilder.create());\n+\t}\n+\n+\tpublic JobContextBuilder jobName(String jobName) {\n+\t\tbuilder.with(\"jobName\", jobName);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder jobVersion(String jobVersion) {\n+\t\tbuilder.with(\"jobVersion\", jobVersion);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder jobId(String jobId) {\n+\t\tbuilder.with(\"jobId\", jobId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component label, default is unique name like \"tXMLMap_1\", but user can adjust\n+\t * it in studio to any value\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorLabel(String connectorLabel) {\n+\t\tbuilder.with(\"connectorLabel\", connectorLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component type like \"tXMLMap\"\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorType(String connectorType) {\n+\t\tbuilder.with(\"connectorType\", connectorType);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * component unique name like \"tXMLMap_1\"\n+\t * \n+\t * @param connectorType\n+\t * @return self\n+\t */\n+\tpublic JobContextBuilder connectorId(String connectorId) {\n+\t\tbuilder.with(\"connectorId\", connectorId);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder rows(long rowCount) {\n+\t\tbuilder.with(\"rows\", String.valueOf(rowCount));\n+\t\treturn this;\n+\t}\n+\n+\t// output or reject\n+\tpublic JobContextBuilder connectionType(String connectionType) {\n+\t\tbuilder.with(\"connectionType\", connectionType);\n+\t\treturn this;\n+\t}\n+\n+\t// like \"row1\"\n+\tpublic JobContextBuilder connectionName(String connectionName) {\n+\t\tbuilder.with(\"connectionName\", connectionName);\n+\t\treturn this;\n+\t}\n+\n+\t// 100s\n+\tpublic JobContextBuilder duration(String duration) {\n+\t\tbuilder.with(\"duration\", duration);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder timestamp(String timestamp) {\n+\t\tbuilder.with(\"timestamp\", timestamp);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JobContextBuilder status(String status) {\n+\t\tbuilder.with(\"status\", status);\n+\t\treturn this;\n+\t}\n+\n+\tpublic Context build() {\n+\t\treturn builder.build();\n+\t}\n+\n+\t/**\n+\t * source connector id\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceId(String sourceId) {\n+\t\tbuilder.with(\"sourceId\", sourceId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * source connector label\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceLabel(String sourceLabel) {\n+\t\tbuilder.with(\"sourceLabel\", sourceLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * source connector name\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder sourceConnectorName(String sourceConnectorName) {\n+\t\tbuilder.with(\"sourceConnectorName\", sourceConnectorName);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector id\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetId(String targetId) {\n+\t\tbuilder.with(\"targetId\", targetId);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector label\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetLabel(String targetLabel) {\n+\t\tbuilder.with(\"targetLabel\", targetLabel);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * target connector name\n+\t * \n+\t * @return\n+\t */\n+\tpublic JobContextBuilder targetConnectorName(String targetConnectorName) {\n+\t\tbuilder.with(\"targetConnectorName\", targetConnectorName);\n+\t\treturn this;\n+\t}\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyODYwNQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/4725#discussion_r433128605", "bodyText": "I think we forget to ask you but we need some (little) changes in this interface: could you change all category attributes to the name of the corresponding method please ? \ud83d\ude42\nI mean, current code is:\n@AuditEvent(category = \"connection\" ... ) {\n    void flowExecution(...);\n}\n\nand we need instead:\n@AuditEvent(category = \"flowExecution\" ... ) {\n    void flowExecution(...);\n}\n\nand so on for each @AuditEvent.", "author": "elogeart", "createdAt": "2020-06-01T09:18:49Z", "path": "main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobAuditLogger.java", "diffHunk": "@@ -13,13 +13,16 @@\n \t@AuditEvent(category = \"job\", message = \"Job stop : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, timestamp:{timestamp}, status:{status}, duration:{duration}\", level = LogLevel.INFO)\n     void jobstop(Context context);\n \t\n-\t@AuditEvent(category = \"connector\", message = \"Component run : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, connector_type:{connectorType}, connector_id:{connectorId}\", level = LogLevel.INFO)\n+\t@AuditEvent(category = \"connector\", message = \"Component run : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, connector_type:{connectorType}, connector_id:{connectorId}, connector_label:{connectorLabel}\", level = LogLevel.INFO)\n     void runcomponent(Context context);\n \n-    @AuditEvent(category = \"connection\", message = \"Component {connectorType} {connectionType} {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n+    @AuditEvent(category = \"connection\", message = \"Component {connectorType} {connectorLabel} {connectionType} {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n     void flowOutput(Context context);\n     \n-    @AuditEvent(category = \"connection\", message = \"Component {connectorType} received {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n+    @AuditEvent(category = \"connection\", message = \"Component {connectorType} {connectorLabel} received {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n     void flowInput(Context context);\n+    \n+    @AuditEvent(category = \"connection\", message = \"connection : {connectionName}, row : {rows}, cost : {duration}\", level = LogLevel.INFO)", "originalCommit": "2c27cad17d2808054c81a2856a7075cc404c27b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwMzQ5Mg==", "url": "https://github.com/Talend/tdi-studio-se/pull/4725#discussion_r433603492", "bodyText": "fixed", "author": "wwang-talend", "createdAt": "2020-06-02T03:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyODYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "77babb4eb5024990b0ec363aba8130bb440835ab", "chunk": "diff --git a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobAuditLogger.java b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobAuditLogger.java\nindex d0413f8b06..c1699cb0ba 100644\n--- a/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobAuditLogger.java\n+++ b/main/plugins/org.talend.designer.components.libs/libs_src/talend-job-monitoring/src/main/java/org/talend/job/audit/JobAuditLogger.java\n\n@@ -6,23 +6,23 @@ import org.talend.logging.audit.EventAuditLogger;\n import org.talend.logging.audit.LogLevel;\n \n public interface JobAuditLogger extends EventAuditLogger {\n-\t\n-\t@AuditEvent(category = \"job\", message = \"Job start : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, timestamp:{timestamp}\", level = LogLevel.INFO)\n-    void jobstart(Context context);\n-\t\n-\t@AuditEvent(category = \"job\", message = \"Job stop : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, timestamp:{timestamp}, status:{status}, duration:{duration}\", level = LogLevel.INFO)\n-    void jobstop(Context context);\n-\t\n-\t@AuditEvent(category = \"connector\", message = \"Component run : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, connector_type:{connectorType}, connector_id:{connectorId}, connector_label:{connectorLabel}\", level = LogLevel.INFO)\n-    void runcomponent(Context context);\n-\n-    @AuditEvent(category = \"connection\", message = \"Component {connectorType} {connectorLabel} {connectionType} {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n-    void flowOutput(Context context);\n-    \n-    @AuditEvent(category = \"connection\", message = \"Component {connectorType} {connectorLabel} received {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n-    void flowInput(Context context);\n-    \n-    @AuditEvent(category = \"connection\", message = \"connection : {connectionName}, row : {rows}, cost : {duration}\", level = LogLevel.INFO)\n-    void flowExecution(Context context);\n+\n+\t@AuditEvent(category = \"jobStart\", message = \"Job start : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, timestamp:{timestamp}\", level = LogLevel.INFO)\n+\tvoid jobstart(Context context);\n+\n+\t@AuditEvent(category = \"jobStop\", message = \"Job stop : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, timestamp:{timestamp}, status:{status}, duration:{duration}\", level = LogLevel.INFO)\n+\tvoid jobstop(Context context);\n+\n+\t@AuditEvent(category = \"runComponent\", message = \"Component run : job_name:{jobName}, job_version:{jobVersion}, job_id:{jobId}, connector_type:{connectorType}, connector_id:{connectorId}, connector_label:{connectorLabel}\", level = LogLevel.INFO)\n+\tvoid runcomponent(Context context);\n+\n+\t@AuditEvent(category = \"flowOutput\", message = \"Component {connectorType} {connectorLabel} {connectionType} {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n+\tvoid flowOutput(Context context);\n+\n+\t@AuditEvent(category = \"flowInput\", message = \"Component {connectorType} {connectorLabel} received {rows} rows in {duration} with {connectionName} line\", level = LogLevel.INFO)\n+\tvoid flowInput(Context context);\n+\n+\t@AuditEvent(category = \"flowExecution\", message = \"connection : {connectionName}, row : {rows}, cost : {duration}\", level = LogLevel.INFO)\n+\tvoid flowExecution(Context context);\n \n }\n"}}, {"oid": "77babb4eb5024990b0ec363aba8130bb440835ab", "url": "https://github.com/Talend/tdi-studio-se/commit/77babb4eb5024990b0ec363aba8130bb440835ab", "message": "fix(TDI-44306): adjust the audit event log integration in studio", "committedDate": "2020-06-01T09:36:26Z", "type": "commit"}, {"oid": "8c87de94de416cb4825dbb01c627bfe0e3f662be", "url": "https://github.com/Talend/tdi-studio-se/commit/8c87de94de416cb4825dbb01c627bfe0e3f662be", "message": "fix(TDI-44306): fix the build on javac of java 11", "committedDate": "2020-06-02T02:54:44Z", "type": "commit"}, {"oid": "272d6bea3cde8d1fd329b74c819d651db8fc528f", "url": "https://github.com/Talend/tdi-studio-se/commit/272d6bea3cde8d1fd329b74c819d651db8fc528f", "message": "use a more clear method name and context name", "committedDate": "2020-06-02T03:54:33Z", "type": "commit"}, {"oid": "a7232fb5e4ef96b6a2d60d77ea48ae0d611db07d", "url": "https://github.com/Talend/tdi-studio-se/commit/a7232fb5e4ef96b6a2d60d77ea48ae0d611db07d", "message": "fix(TDI-44306): adjust the audit event log integration in studio", "committedDate": "2020-06-02T06:50:50Z", "type": "commit"}, {"oid": "3412452c33c1f82d0a5b4cf66587a20cc6857783", "url": "https://github.com/Talend/tdi-studio-se/commit/3412452c33c1f82d0a5b4cf66587a20cc6857783", "message": "fix(TDI-44172): not use camel name way for context", "committedDate": "2020-06-03T02:32:50Z", "type": "commit"}, {"oid": "925752d8cafb7aadce7f782d5c9832280007e091", "url": "https://github.com/Talend/tdi-studio-se/commit/925752d8cafb7aadce7f782d5c9832280007e091", "message": "Merge remote-tracking branch 'origin/master' into wwang-talend/TDI-44172", "committedDate": "2020-06-08T01:53:05Z", "type": "commit"}, {"oid": "486505fcc0d96ee5f7ab1118c59e4b85023ab604", "url": "https://github.com/Talend/tdi-studio-se/commit/486505fcc0d96ee5f7ab1118c59e4b85023ab604", "message": "fix the group name to avoid tuj down risk", "committedDate": "2020-06-09T06:05:15Z", "type": "commit"}]}