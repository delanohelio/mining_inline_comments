{"pr_number": 4964, "pr_title": "Fixes insensitive for DESC table for encrypt.", "pr_createdAt": "2020-03-26T12:52:17Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4964", "timeline": [{"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c", "url": "https://github.com/apache/shardingsphere/commit/76561b6a4d5412027e0eac39d1e19683f7f1657c", "message": "fixes #4770, get column encrypt field from SchemaMetaData instead of EncryptRule.", "committedDate": "2020-03-26T12:46:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MTY2MQ==", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398691661", "bodyText": "Please do not use Map.Entry, just use Entry", "author": "terrymanu", "createdAt": "2020-03-26T16:02:55Z", "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {", "originalCommit": "76561b6a4d5412027e0eac39d1e19683f7f1657c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyNDkzNg==", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r399224936", "bodyText": "OK, I fix it. Thanks.", "author": "dongzl", "createdAt": "2020-03-27T12:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MTY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "75a24873fb93685b60a8317ea426510e20787b3d", "chunk": "diff --git a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\nindex 5aa614f953..602d1c19c6 100644\n--- a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n+++ b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n\n@@ -82,11 +82,10 @@ public abstract class EncryptColumnsMergedResult implements MergedResult {\n     \n     private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n         Collection<EncryptColumnMetaData> result = new LinkedList<>();\n-        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n-            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n-                continue;\n+        for (Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (entry.getValue() instanceof EncryptColumnMetaData) {\n+                result.add((EncryptColumnMetaData) entry.getValue());\n             }\n-            result.add((EncryptColumnMetaData) entry.getValue());\n         }\n         return result;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MjQyNw==", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398692427", "bodyText": "It is better to change to:\nif (entry.getValue() instanceof EncryptColumnMetaData) {\n    result.add((EncryptColumnMetaData) entry.getValue());\n}", "author": "terrymanu", "createdAt": "2020-03-26T16:03:50Z", "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n+                continue;\n+            }\n+            result.add((EncryptColumnMetaData) entry.getValue());", "originalCommit": "76561b6a4d5412027e0eac39d1e19683f7f1657c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyNTAyNw==", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r399225027", "bodyText": "OK, I fix it. Thanks.", "author": "dongzl", "createdAt": "2020-03-27T12:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MjQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "75a24873fb93685b60a8317ea426510e20787b3d", "chunk": "diff --git a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\nindex 5aa614f953..602d1c19c6 100644\n--- a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n+++ b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n\n@@ -82,11 +82,10 @@ public abstract class EncryptColumnsMergedResult implements MergedResult {\n     \n     private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n         Collection<EncryptColumnMetaData> result = new LinkedList<>();\n-        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n-            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n-                continue;\n+        for (Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (entry.getValue() instanceof EncryptColumnMetaData) {\n+                result.add((EncryptColumnMetaData) entry.getValue());\n             }\n-            result.add((EncryptColumnMetaData) entry.getValue());\n         }\n         return result;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MzMwMQ==", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398693301", "bodyText": "Please do not use Map.Entry, just use Entry", "author": "terrymanu", "createdAt": "2020-03-26T16:04:59Z", "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n+                continue;\n+            }\n+            result.add((EncryptColumnMetaData) entry.getValue());\n+        }\n+        return result;\n+    }\n+    \n     @Override\n     public final Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n         if (1 == columnIndex) {\n             String columnName = getOriginalValue(columnIndex, type).toString();\n-            Optional<EncryptTable> encryptTable = encryptRule.findEncryptTable(tableName);\n-            if (encryptTable.isPresent() && encryptTable.get().getCipherColumns().contains(columnName)) {\n-                return encryptTable.get().getLogicColumnOfCipher(columnName);\n-            }\n-            return columnName;\n+            Optional<String> logicColumn = getLogicColumnOfCipher(columnName);\n+            return logicColumn.isPresent() ? logicColumn.get() : columnName;\n         }\n         return getOriginalValue(columnIndex, type);\n     }\n     \n+    private Optional<String> getLogicColumnOfCipher(final String cipherColumn) {\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {", "originalCommit": "76561b6a4d5412027e0eac39d1e19683f7f1657c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a24873fb93685b60a8317ea426510e20787b3d", "chunk": "diff --git a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\nindex 5aa614f953..602d1c19c6 100644\n--- a/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n+++ b/encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java\n\n@@ -82,11 +82,10 @@ public abstract class EncryptColumnsMergedResult implements MergedResult {\n     \n     private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n         Collection<EncryptColumnMetaData> result = new LinkedList<>();\n-        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n-            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n-                continue;\n+        for (Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (entry.getValue() instanceof EncryptColumnMetaData) {\n+                result.add((EncryptColumnMetaData) entry.getValue());\n             }\n-            result.add((EncryptColumnMetaData) entry.getValue());\n         }\n         return result;\n     }\n"}}, {"oid": "75a24873fb93685b60a8317ea426510e20787b3d", "url": "https://github.com/apache/shardingsphere/commit/75a24873fb93685b60a8317ea426510e20787b3d", "message": "fixes code review problem.", "committedDate": "2020-03-27T12:18:20Z", "type": "commit"}]}