{"pr_number": 5985, "pr_title": "fix(encrypt): Fixed issues#5979", "pr_createdAt": "2020-06-10T12:38:46Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5985", "timeline": [{"oid": "2d964b5c667edabf5da5b661a95f8392f3242c2a", "url": "https://github.com/apache/shardingsphere/commit/2d964b5c667edabf5da5b661a95f8392f3242c2a", "message": "fix(encrypt): Fixed issues#5979\n\nFixed data encryption can not properly processing SQL mixed with `?` and\nliteral. And add some test cases for mixed `?` and literal.\n\nCloses #5979", "committedDate": "2020-06-12T12:37:49Z", "type": "commit"}, {"oid": "2d964b5c667edabf5da5b661a95f8392f3242c2a", "url": "https://github.com/apache/shardingsphere/commit/2d964b5c667edabf5da5b661a95f8392f3242c2a", "message": "fix(encrypt): Fixed issues#5979\n\nFixed data encryption can not properly processing SQL mixed with `?` and\nliteral. And add some test cases for mixed `?` and literal.\n\nCloses #5979", "committedDate": "2020-06-12T12:37:49Z", "type": "forcePushed"}, {"oid": "72bb4cf0a9bd65f5640e42b77977ce088f684005", "url": "https://github.com/apache/shardingsphere/commit/72bb4cf0a9bd65f5640e42b77977ce088f684005", "message": "pref: Get the parameter index using an existing implementation.", "committedDate": "2020-06-15T03:31:01Z", "type": "commit"}, {"oid": "788a3a8104663aadbc9878bd9b837aba860e6cc5", "url": "https://github.com/apache/shardingsphere/commit/788a3a8104663aadbc9878bd9b837aba860e6cc5", "message": "pref: Optimize instert SQL rewrite logic for mixing letters and parameters: literals insert literals, parameters insert parameters.", "committedDate": "2020-06-16T09:35:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3MDgzNw==", "url": "https://github.com/apache/shardingsphere/pull/5985#discussion_r440770837", "bodyText": "Hi, These codes appear twice, do you think it is better to exact a function for them?", "author": "tristaZero", "createdAt": "2020-06-16T11:10:53Z", "path": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "diffHunk": "@@ -133,7 +133,8 @@ private void encryptToken(final InsertValue insertValueToken, final String table\n     private void addPlainColumn(final InsertValue insertValueToken, final int columnIndex,\n                                 final String tableName, final String columnName, final InsertValueContext insertValueContext, final Object originalValue) {\n         if (getEncryptRule().findPlainColumn(tableName, columnName).isPresent()) {\n-            DerivedSimpleExpressionSegment derivedExpressionSegment = insertValueContext.getParameters().isEmpty()\n+            DerivedSimpleExpressionSegment derivedExpressionSegment = (insertValueContext.getParameters().isEmpty()\n+                    || insertValueContext.getValueExpressions().get(columnIndex) instanceof LiteralExpressionSegment)", "originalCommit": "788a3a8104663aadbc9878bd9b837aba860e6cc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NzA0MQ==", "url": "https://github.com/apache/shardingsphere/pull/5985#discussion_r440787041", "bodyText": "Done.", "author": "DemonLms", "createdAt": "2020-06-16T11:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3MDgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "3081b50d3790c19b716cb27c8618aa47348329b0", "chunk": "diff --git a/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertValuesTokenGenerator.java b/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertValuesTokenGenerator.java\nindex 4f5c0dc21f..0e0bfe4c0b 100644\n--- a/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertValuesTokenGenerator.java\n+++ b/shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertValuesTokenGenerator.java\n\n@@ -133,8 +133,7 @@ public final class EncryptInsertValuesTokenGenerator extends BaseEncryptSQLToken\n     private void addPlainColumn(final InsertValue insertValueToken, final int columnIndex,\n                                 final String tableName, final String columnName, final InsertValueContext insertValueContext, final Object originalValue) {\n         if (getEncryptRule().findPlainColumn(tableName, columnName).isPresent()) {\n-            DerivedSimpleExpressionSegment derivedExpressionSegment = (insertValueContext.getParameters().isEmpty()\n-                    || insertValueContext.getValueExpressions().get(columnIndex) instanceof LiteralExpressionSegment)\n+            DerivedSimpleExpressionSegment derivedExpressionSegment = isAddLiteralExpressionSegment(insertValueContext, columnIndex)\n                     ? new DerivedLiteralExpressionSegment(originalValue) : new DerivedParameterMarkerExpressionSegment(getParameterIndexCount(insertValueToken));\n             insertValueToken.getValues().add(columnIndex + 1, derivedExpressionSegment);\n         }\n"}}, {"oid": "3081b50d3790c19b716cb27c8618aa47348329b0", "url": "https://github.com/apache/shardingsphere/commit/3081b50d3790c19b716cb27c8618aa47348329b0", "message": "pref: Extract duplicate code as a function.", "committedDate": "2020-06-16T11:40:55Z", "type": "commit"}]}