{"pr_number": 4789, "pr_title": "ref 4671", "pr_createdAt": "2020-03-17T04:41:55Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4789", "timeline": [{"oid": "8752f677f55b48ff519054923331e84cd381a9b7", "url": "https://github.com/apache/shardingsphere/commit/8752f677f55b48ff519054923331e84cd381a9b7", "message": "fix mysql ColumnDefinitionSegment,change type of dataType from String to DataTypeSegment", "committedDate": "2020-03-17T04:38:04Z", "type": "commit"}, {"oid": "fca2919095f83d4b27461d5567a52ad873be4dfb", "url": "https://github.com/apache/shardingsphere/commit/fca2919095f83d4b27461d5567a52ad873be4dfb", "message": "Filter out some tests for h2", "committedDate": "2020-03-18T15:14:01Z", "type": "commit"}, {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f", "url": "https://github.com/apache/shardingsphere/commit/8901cc8852ebba0b420da0813ec835e071fb9f7f", "message": " go back", "committedDate": "2020-03-19T10:39:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjMzOA==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395422338", "bodyText": "Please remove them.", "author": "tristaZero", "createdAt": "2020-03-20T03:14:12Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java", "diffHunk": "@@ -140,6 +140,9 @@ private static boolean isPlaceholderWithoutParameter(final Object[] sqlTestParam\n     \n     @Test\n     public void assertSupportedSQL() {\n+        if (\"select_sub_query_with_table\".equals(sqlCaseId)) {\n+            System.out.println(\"adfasf\");\n+        }", "originalCommit": "8901cc8852ebba0b420da0813ec835e071fb9f7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyOTQ0OA==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395429448", "bodyText": "I'll check.", "author": "jingshanglu", "createdAt": "2020-03-20T03:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java\nindex 9254cab2a9..0daf662c60 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java\n\n@@ -140,9 +140,6 @@ public final class SQLParserParameterizedTest {\n     \n     @Test\n     public void assertSupportedSQL() {\n-        if (\"select_sub_query_with_table\".equals(sqlCaseId)) {\n-            System.out.println(\"adfasf\");\n-        }\n         SQLParserTestCase expected = SQL_PARSER_TEST_CASES_REGISTRY.get(sqlCaseId);\n         String databaseType = \"H2\".equals(this.databaseType) ? \"MySQL\" : this.databaseType;\n         String sql = SQL_CASES_LOADER.getSQL(sqlCaseId, sqlCaseType, SQL_PARSER_TEST_CASES_REGISTRY.get(sqlCaseId).getParameters());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395423906", "bodyText": "Consider the samples of length may be (1) or (2, 1), I suggest the members of DataTypeLengthSegment  to be,\n private int startIndex;\n\n     private int stopIndex;\n\n     private int firstNumber;\n \n     private int secondNumber;\n\n     public Optional<int> getSecondNumber(){}", "author": "tristaZero", "createdAt": "2020-03-20T03:23:16Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.LinkedList;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int length;\n+    \n+    private LinkedList<Integer> lengthPair;", "originalCommit": "8901cc8852ebba0b420da0813ec835e071fb9f7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyODczNQ==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395428735", "bodyText": "I think it is better as a whole. When using the whole length, users can use it according to their needs.", "author": "jingshanglu", "createdAt": "2020-03-20T03:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzOTMxNw==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395439317", "bodyText": "What I concerned about is that length and lengthPairwill confused user who considers length and lengthPair can have value at the same time. But the fact is that either length or lengthPairan' can have the value at one time. If the user calls getLength()andgetLengthPair()` together, what will happen?", "author": "tristaZero", "createdAt": "2020-03-20T04:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDYwNg==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395440606", "bodyText": "If just have one num,lengthPair is null, if have two, length is null.", "author": "jingshanglu", "createdAt": "2020-03-20T05:04:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}], "type": "inlineReview", "revised_code": {"commit": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\nindex 6e1b7e1a8f..d9c8360b85 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\n\n@@ -21,7 +21,7 @@ import lombok.Getter;\n import lombok.Setter;\n import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n \n-import java.util.LinkedList;\n+import java.util.Optional;\n \n @Getter\n @Setter\n"}}, {"oid": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a", "url": "https://github.com/apache/shardingsphere/commit/7ab581978b3583a63eb9c71c4fbf5e9093bef25a", "message": "fix", "committedDate": "2020-03-20T06:30:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNDE5NQ==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395524195", "bodyText": "As I do not think firstNumber and secondNumber are proper names, i dug into many doc, and found firstNumber is supposed to be precision; On the other hand, secondNumber means scale[1]. Can you give them other expressive names?\n[1] https://dev.mysql.com/doc/refman/5.7/en/precision-math-decimal-characteristics.html", "author": "tristaZero", "createdAt": "2020-03-20T09:37:22Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.Optional;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int firstNumber;\n+    \n+    private int secondNumber;", "originalCommit": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyODU2OQ==", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395528569", "bodyText": "firstLength and secondLength ,is it ok?", "author": "jingshanglu", "createdAt": "2020-03-20T09:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNDE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9abadb6bd3bece67e6c95bf8be23cfca3bc4dd0", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\nindex d9c8360b85..0b0ea3abf7 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java\n\n@@ -31,15 +31,15 @@ public final class DataTypeLengthSegment implements SQLSegment {\n     \n     private int stopIndex;\n     \n-    private int firstNumber;\n+    private int precision;\n     \n-    private int secondNumber;\n+    private int scale;\n     \n     /**\n      * get secondNumber.\n      * @return Optional.\n      */\n-    public Optional<Integer> getSecondNumber() {\n-        return Optional.ofNullable(secondNumber);\n+    public Optional<Integer> getScale() {\n+        return Optional.ofNullable(scale);\n     }\n }\n"}}, {"oid": "a9abadb6bd3bece67e6c95bf8be23cfca3bc4dd0", "url": "https://github.com/apache/shardingsphere/commit/a9abadb6bd3bece67e6c95bf8be23cfca3bc4dd0", "message": "change attr name of DataTypeLength from firstNumber secondNumber to precision scale", "committedDate": "2020-03-20T10:17:14Z", "type": "commit"}, {"oid": "b174bd7e840d27b35399ed99a623f6a2c37d2af0", "url": "https://github.com/apache/shardingsphere/commit/b174bd7e840d27b35399ed99a623f6a2c37d2af0", "message": "revert testcase", "committedDate": "2020-03-20T13:05:07Z", "type": "commit"}, {"oid": "84b7d1d2ab6fc868330934ff026d4d29db50481d", "url": "https://github.com/apache/shardingsphere/commit/84b7d1d2ab6fc868330934ff026d4d29db50481d", "message": "revert testcase", "committedDate": "2020-03-20T13:07:54Z", "type": "commit"}]}