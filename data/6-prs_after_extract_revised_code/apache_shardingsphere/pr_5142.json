{"pr_number": 5142, "pr_title": "Optimize MetaData Center#MetaDataCenter-phase-3-2", "pr_createdAt": "2020-04-10T10:44:38Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5142", "timeline": [{"oid": "786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0", "url": "https://github.com/apache/shardingsphere/commit/786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0", "message": "add unit tests", "committedDate": "2020-04-10T10:36:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNzI3OA==", "url": "https://github.com/apache/shardingsphere/pull/5142#discussion_r406707278", "bodyText": "this method is moving to other package.", "author": "kimmking", "createdAt": "2020-04-10T10:50:48Z", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.metadatacenter;\n+\n+import org.apache.shardingsphere.orchestration.center.CenterRepository;\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.yaml.RuleSchemaMetaDataYamlSwapper;\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.yaml.YamlRuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class MetaDataCenterTest {\n+    \n+    @Mock\n+    private CenterRepository repository;\n+    \n+    private MetaDataCenter metaDataCenter;\n+    \n+    @Before\n+    public void setUp() {\n+        metaDataCenter = new MetaDataCenter(\"test\", repository);\n+    }\n+    \n+    @Test\n+    public void assertPersistMetaDataCenterNode() {\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class));\n+        metaDataCenter.persistMetaDataCenterNode(\"schema\", ruleSchemaMetaData);\n+        verify(repository).persist(eq(\"/test/metadata/schema\"), anyString());\n+    }\n+    \n+    @Test\n+    public void assertLoadRuleSchemaMetaData() {\n+        when(repository.get(\"/test/metadata/schema\")).thenReturn(MetaDataTest.META_DATA);\n+        RuleSchemaMetaData ruleSchemaMetaData = metaDataCenter.loadRuleSchemaMetaData(\"schema\");\n+        verify(repository).get(eq(\"/test/metadata/schema\"));\n+        assertNotNull(ruleSchemaMetaData);\n+        assertNotNull(ruleSchemaMetaData.getConfiguredSchemaMetaData());\n+        assertNotNull(ruleSchemaMetaData.getUnconfiguredSchemaMetaDataMap());\n+    }\n+    \n+    @Test\n+    public void assertCreateMetaDataChangeListener() {", "originalCommit": "786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcxMzk0Nw==", "url": "https://github.com/apache/shardingsphere/pull/5142#discussion_r406713947", "bodyText": "fixed.", "author": "menghaoranss", "createdAt": "2020-04-10T11:16:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNzI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java\nindex 22dcac084b..f084a9a444 100644\n--- a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java\n+++ b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java\n\n@@ -63,9 +63,4 @@ public final class MetaDataCenterTest {\n         assertNotNull(ruleSchemaMetaData.getConfiguredSchemaMetaData());\n         assertNotNull(ruleSchemaMetaData.getUnconfiguredSchemaMetaDataMap());\n     }\n-    \n-    @Test\n-    public void assertCreateMetaDataChangeListener() {\n-        assertNotNull(metaDataCenter.createMetaDataChangeListener(\"schema\"));\n-    }\n }\n"}}, {"oid": "86d72a8595be3a0c247b2047112d3a0d5f25ced8", "url": "https://github.com/apache/shardingsphere/commit/86d72a8595be3a0c247b2047112d3a0d5f25ced8", "message": "Merge remote-tracking branch 'origin/master' into issue5128-2", "committedDate": "2020-04-10T11:03:01Z", "type": "commit"}, {"oid": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "url": "https://github.com/apache/shardingsphere/commit/d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "message": "fix merge errors", "committedDate": "2020-04-10T11:14:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyODkyMA==", "url": "https://github.com/apache/shardingsphere/pull/5142#discussion_r406728920", "bodyText": "add more assert to check inner matadata.", "author": "kimmking", "createdAt": "2020-04-10T12:06:38Z", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.metadatacenter.yaml;\n+\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.MetaDataTest;\n+import org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+public final class RuleSchemaMetaDataYamlSwapperTest {\n+    \n+    @Test\n+    public void assertSwapToYamlRuleSchemaMetaData() {\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class));\n+        YamlRuleSchemaMetaData yamlRuleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(ruleSchemaMetaData);\n+        assertNotNull(yamlRuleSchemaMetaData);\n+        assertNotNull(yamlRuleSchemaMetaData.getConfiguredSchemaMetaData());\n+    }\n+    \n+    @Test\n+    public void assertSwapToRuleSchemaMetaData() {\n+        YamlRuleSchemaMetaData yamlRuleSchemaMetaData = YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class);\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(yamlRuleSchemaMetaData);\n+        assertNotNull(ruleSchemaMetaData);", "originalCommit": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a54429b9003db6bb21d3e4c617293cb4ffc3489", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java\nindex 1388f5dfe4..53f5a90aea 100644\n--- a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java\n+++ b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java\n\n@@ -22,7 +22,11 @@ import org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMet\n import org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine;\n import org.junit.Test;\n \n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertThat;\n \n public final class RuleSchemaMetaDataYamlSwapperTest {\n     \n"}}, {"oid": "3a54429b9003db6bb21d3e4c617293cb4ffc3489", "url": "https://github.com/apache/shardingsphere/commit/3a54429b9003db6bb21d3e4c617293cb4ffc3489", "message": "add more assert", "committedDate": "2020-04-11T01:15:31Z", "type": "commit"}]}