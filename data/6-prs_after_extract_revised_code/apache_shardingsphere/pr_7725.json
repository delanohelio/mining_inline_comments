{"pr_number": 7725, "pr_title": "Fix mysql binlog type decode", "pr_createdAt": "2020-10-09T16:24:05Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7725", "timeline": [{"oid": "9e66d706e4828334339eade526df1ca98ae3102b", "url": "https://github.com/apache/shardingsphere/commit/9e66d706e4828334339eade526df1ca98ae3102b", "message": "Fix mysql binlog type decode", "committedDate": "2020-10-09T16:20:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjczNjY2Ng==", "url": "https://github.com/apache/shardingsphere/pull/7725#discussion_r502736666", "bodyText": "please make sure args is in the same order.", "author": "Lucas-307", "createdAt": "2020-10-10T02:49:40Z", "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValue.java", "diffHunk": "@@ -31,18 +31,32 @@\n     \n     @Override\n     public Serializable read(final MySQLBinlogColumnDef columnDef, final MySQLPacketPayload payload) {\n-        switch (MySQLColumnType.valueOf(columnDef.getColumnMeta() >> 8)) {\n+        int type = columnDef.getColumnMeta() >> 8;\n+        int length = columnDef.getColumnMeta() & 0xff;\n+        // unpack type & length, see https://bugs.mysql.com/bug.php?id=37426.\n+        if ((type & 0x30) != 0x30) {\n+            length += ((type & 0x30) ^ 0x30) << 4;\n+            type |= 0x30;\n+        }\n+        switch (MySQLColumnType.valueOf(type)) {\n             case MYSQL_TYPE_ENUM:\n-                return readEnumValue(columnDef.getColumnMeta() & 0xff, payload);\n+                return readEnumValue(length, payload);\n             case MYSQL_TYPE_SET:\n                 return payload.getByteBuf().readByte();\n             case MYSQL_TYPE_STRING:\n-                return payload.readStringFix(payload.getByteBuf().readUnsignedByte());\n+                return payload.readStringFix(readActualLength(payload, length));", "originalCommit": "9e66d706e4828334339eade526df1ca98ae3102b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b7461caea595ad2a5ef9c76b0517320d3c53325", "chunk": "diff --git a/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValue.java b/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValue.java\nindex b29b3a1094..36c25f5987 100644\n--- a/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValue.java\n+++ b/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/string/MySQLStringBinlogProtocolValue.java\n\n@@ -44,13 +44,13 @@ public final class MySQLStringBinlogProtocolValue implements MySQLBinlogProtocol\n             case MYSQL_TYPE_SET:\n                 return payload.getByteBuf().readByte();\n             case MYSQL_TYPE_STRING:\n-                return payload.readStringFix(readActualLength(payload, length));\n+                return payload.readStringFix(readActualLength(length, payload));\n             default:\n                 throw new UnsupportedOperationException(\"\");\n         }\n     }\n     \n-    private int readActualLength(final MySQLPacketPayload payload, final int length) {\n+    private int readActualLength(final int length, final MySQLPacketPayload payload) {\n         if (length < 256) {\n             return payload.getByteBuf().readUnsignedByte();\n         }\n"}}, {"oid": "1b7461caea595ad2a5ef9c76b0517320d3c53325", "url": "https://github.com/apache/shardingsphere/commit/1b7461caea595ad2a5ef9c76b0517320d3c53325", "message": "For checkstyle", "committedDate": "2020-10-10T13:47:30Z", "type": "commit"}]}