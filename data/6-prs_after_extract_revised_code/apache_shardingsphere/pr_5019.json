{"pr_number": 5019, "pr_title": " ues strategy pattern modify refresh ShardingMetaData.", "pr_createdAt": "2020-03-31T08:27:44Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5019", "timeline": [{"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4", "url": "https://github.com/apache/shardingsphere/commit/b6d4ec3609e7abf125dc08d1166b482f8d5c60f4", "message": " ues strategy pattern modify refresh ShardingMetaData.", "committedDate": "2020-03-31T08:24:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400774953", "bodyText": "Please reference other javadoc and make them consist", "author": "terrymanu", "createdAt": "2020-03-31T09:37:14Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader;\n+import org.apache.shardingsphere.core.metadata.ShardingTableMetaDataDecorator;\n+import org.apache.shardingsphere.core.rule.ShardingRule;\n+import org.apache.shardingsphere.encrypt.metadata.EncryptTableMetaDataDecorator;\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.underlying.common.config.properties.ConfigurationPropertyKey;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The type Abstract table statement meta data.\n+ */\n+public abstract class AbstractTableStatementMetaData {\n+    \n+    /**\n+     * Load table meta table meta data.\n+     *\n+     * @param tableName              the table name", "originalCommit": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA4OQ==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825089", "bodyText": "fix it", "author": "yu199195", "createdAt": "2020-03-31T11:03:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0ODQxMQ==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400848411", "bodyText": "It looks like not fixed yet.", "author": "terrymanu", "createdAt": "2020-03-31T11:47:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6fc176c66d59cf6d262f1f08ce25f80c0a257d8e", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java\nindex f5e09164f1..9fa8e6eccb 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java\n\n@@ -16,7 +16,7 @@ import java.sql.SQLException;\n public abstract class AbstractTableStatementMetaData {\n     \n     /**\n-     * Load table meta table meta data.\n+     * Load TableMetaData.\n      *\n      * @param tableName              the table name\n      * @param shardingRuntimeContext the sharding runtime context\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTQ5MQ==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400775491", "bodyText": "Please remove useless line", "author": "terrymanu", "createdAt": "2020-03-31T09:38:12Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropTableStatement;\n+\n+/**\n+ * The type Drop table statement meta data refresh.\n+ */\n+public final class DropTableStatementMetaDataRefresh implements SQLStatementMetaDataRefresh<DropTableStatement> {\n+    \n+    @Override\n+    public void refreshMetaData(final ShardingRuntimeContext shardingRuntimeContext, final SQLStatementContext<DropTableStatement> sqlStatementContext) {\n+        for (SimpleTableSegment each : sqlStatementContext.getSqlStatement().getTables()) {\n+            shardingRuntimeContext.getMetaData().getSchema().remove(each.getTableName().getIdentifier().getValue());\n+        }\n+    }\n+    ", "originalCommit": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA2Mw==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825063", "bodyText": "ok\uff0cfix it", "author": "yu199195", "createdAt": "2020-03-31T11:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6fc176c66d59cf6d262f1f08ce25f80c0a257d8e", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java\nindex 65006a7e23..e5082ffd9f 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java\n\n@@ -16,5 +16,4 @@ public final class DropTableStatementMetaDataRefresh implements SQLStatementMeta\n             shardingRuntimeContext.getMetaData().getSchema().remove(each.getTableName().getIdentifier().getValue());\n         }\n     }\n-    \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTc1NA==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400775754", "bodyText": "sql should be SQL in javadoc", "author": "terrymanu", "createdAt": "2020-03-31T09:38:37Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.AlterTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The type Sql statement meta data refresh factory.\n+ */\n+public final class SQLStatementMetaDataRefreshFactory {\n+    \n+    private static final Map<Class<?>, SQLStatementMetaDataRefresh<? extends SQLStatement>> REFRESH_MAP = new HashMap<>();\n+    \n+    static {\n+        REFRESH_MAP.put(CreateTableStatementContext.class, new CreateTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(AlterTableStatementContext.class, new AlterTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropTableStatementContext.class, new DropTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(CreateIndexStatementContext.class, new CreateIndexStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropIndexStatementContext.class, new DropIndexStatementMetaDataRefresh());\n+    }\n+    \n+    /**\n+     * New instance sql statement meta data refresh.", "originalCommit": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA0MA==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825040", "bodyText": "fix.", "author": "yu199195", "createdAt": "2020-03-31T11:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "6fc176c66d59cf6d262f1f08ce25f80c0a257d8e", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java\nindex 916eedca81..5991dbdb04 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java\n\n@@ -28,7 +28,7 @@ public final class SQLStatementMetaDataRefreshFactory {\n     }\n     \n     /**\n-     * New instance sql statement meta data refresh.\n+     * New instance SQLStatementMetaDataRefresh.\n      *\n      * @param sqlStatementContext the sql statement context\n      * @return the sql statement meta data refresh\n"}}, {"oid": "833568aef7b095b74e83c8a760121824820e5920", "url": "https://github.com/apache/shardingsphere/commit/833568aef7b095b74e83c8a760121824820e5920", "message": "Merge branch 'master' into metadatarefresh", "committedDate": "2020-03-31T10:21:11Z", "type": "commit"}, {"oid": "6fc176c66d59cf6d262f1f08ce25f80c0a257d8e", "url": "https://github.com/apache/shardingsphere/commit/6fc176c66d59cf6d262f1f08ce25f80c0a257d8e", "message": " ues strategy pattern modify refresh ShardingMetaData.", "committedDate": "2020-03-31T10:24:54Z", "type": "commit"}, {"oid": "3485c6304b5d88965ea1521e7af43c61a39b542e", "url": "https://github.com/apache/shardingsphere/commit/3485c6304b5d88965ea1521e7af43c61a39b542e", "message": "Merge remote-tracking branch 'origin/metadatarefresh' into metadatarefresh", "committedDate": "2020-03-31T10:25:10Z", "type": "commit"}, {"oid": "ab52a50cd6b2710503f8ae23ce5f83e6532c0212", "url": "https://github.com/apache/shardingsphere/commit/ab52a50cd6b2710503f8ae23ce5f83e6532c0212", "message": "add apache License 2.0 .", "committedDate": "2020-03-31T10:32:44Z", "type": "commit"}, {"oid": "b9bf8cee55faaa6e3dc044a4e80940950f6f6f60", "url": "https://github.com/apache/shardingsphere/commit/b9bf8cee55faaa6e3dc044a4e80940950f6f6f60", "message": "add java doc .", "committedDate": "2020-03-31T10:41:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MjExNg==", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400852116", "bodyText": "Class name should be noun", "author": "terrymanu", "createdAt": "2020-03-31T11:54:21Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The interface SQL statement meta data refresh.\n+ *\n+ * @param <T> the type parameter\n+ */\n+public interface SQLStatementMetaDataRefresh<T extends SQLStatement> {", "originalCommit": "b9bf8cee55faaa6e3dc044a4e80940950f6f6f60", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b5995f3fa83f0931f8149300cb64edccb2f674f", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshStrategy.java\nsimilarity index 80%\nrename from sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java\nrename to sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshStrategy.java\nindex d8222d7e7a..52945b3e71 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshStrategy.java\n\n@@ -24,18 +24,18 @@ import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n import java.sql.SQLException;\n \n /**\n- * The interface SQL statement meta data refresh.\n+ * Interface SQL statement meta data refresh strategy.\n  *\n- * @param <T> the type parameter\n+ * @param <T> type of SQL statement\n  */\n-public interface SQLStatementMetaDataRefresh<T extends SQLStatement> {\n+public interface SQLStatementMetaDataRefreshStrategy<T extends SQLStatement> {\n     \n     /**\n      * Refresh meta data.\n      *\n-     * @param shardingRuntimeContext the sharding runtime context\n-     * @param sqlStatementContext       the sql statement context\n-     * @throws SQLException the sql exception\n+     * @param shardingRuntimeContext sharding runtime context\n+     * @param sqlStatementContext sql statement context\n+     * @throws SQLException sql exception\n      */\n     void refreshMetaData(ShardingRuntimeContext shardingRuntimeContext, SQLStatementContext<T> sqlStatementContext) throws SQLException;\n }\n"}}, {"oid": "9b5995f3fa83f0931f8149300cb64edccb2f674f", "url": "https://github.com/apache/shardingsphere/commit/9b5995f3fa83f0931f8149300cb64edccb2f674f", "message": " ues strategy pattern modify refresh ShardingMetaData.", "committedDate": "2020-03-31T13:01:31Z", "type": "commit"}, {"oid": "6c7661faf87d1e3ade32dd549e03331ef8c4bf88", "url": "https://github.com/apache/shardingsphere/commit/6c7661faf87d1e3ade32dd549e03331ef8c4bf88", "message": "code review.", "committedDate": "2020-03-31T13:18:31Z", "type": "commit"}, {"oid": "0bb9ce65e1a130013c9aa3473dd528427fa616ec", "url": "https://github.com/apache/shardingsphere/commit/0bb9ce65e1a130013c9aa3473dd528427fa616ec", "message": "code review.", "committedDate": "2020-03-31T13:34:42Z", "type": "commit"}]}