{"pr_number": 5605, "pr_title": "Fix orchestration create datasource error when datasource map is empty", "pr_createdAt": "2020-05-14T10:01:25Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5605", "timeline": [{"oid": "d84b39de0508a837b89da03d20e8865054c6d165", "url": "https://github.com/apache/shardingsphere/commit/d84b39de0508a837b89da03d20e8865054c6d165", "message": "fix orchestration create datasource error when datasource map is empty", "committedDate": "2020-05-14T09:59:58Z", "type": "commit"}, {"oid": "c00c7dba06f62ab55420c8248c5c5996420b91ba", "url": "https://github.com/apache/shardingsphere/commit/c00c7dba06f62ab55420c8248c5c5996420b91ba", "message": "Merge commit 'fe5bce5254be2d5a3c85464a32276d8270927ef4' into fix", "committedDate": "2020-05-14T10:00:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTExMjQ4Mg==", "url": "https://github.com/apache/shardingsphere/pull/5605#discussion_r425112482", "bodyText": "please use isEmpty()", "author": "terrymanu", "createdAt": "2020-05-14T12:54:09Z", "path": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingSphereDataSourceFactory.java", "diffHunk": "@@ -100,7 +100,7 @@ public static DataSource createDataSource(final Map<String, DataSource> dataSour\n     \n     private static DataSource createDataSource(final Map<String, DataSource> dataSourceMap, final YamlOrchestrationRootRuleConfigurations configurations, \n                                                final Properties props, final Map<String, YamlCenterRepositoryConfiguration> yamlInstanceConfigurationMap) throws SQLException {\n-        if (null == configurations) {\n+        if (configurations.getRules().size() == 0 || dataSourceMap.size() == 0) {", "originalCommit": "c00c7dba06f62ab55420c8248c5c5996420b91ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b1cac9235210587bbcb5b16fd8092412ca42973", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingSphereDataSourceFactory.java b/sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingSphereDataSourceFactory.java\nindex a49ef6e484..32d78703ea 100644\n--- a/sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingSphereDataSourceFactory.java\n+++ b/sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingSphereDataSourceFactory.java\n\n@@ -100,7 +100,7 @@ public final class YamlOrchestrationShardingSphereDataSourceFactory {\n     \n     private static DataSource createDataSource(final Map<String, DataSource> dataSourceMap, final YamlOrchestrationRootRuleConfigurations configurations, \n                                                final Properties props, final Map<String, YamlCenterRepositoryConfiguration> yamlInstanceConfigurationMap) throws SQLException {\n-        if (configurations.getRules().size() == 0 || dataSourceMap.size() == 0) {\n+        if (configurations.getRules().isEmpty() || dataSourceMap.isEmpty()) {\n             return new OrchestrationShardingSphereDataSource(new OrchestrationConfiguration(YamlCenterRepositoryConfigurationSwapperUtil.marshal(yamlInstanceConfigurationMap)));\n         } else {\n             ShardingSphereDataSource shardingSphereDataSource = new ShardingSphereDataSource(dataSourceMap, SWAPPER.swap(configurations), props);\n"}}, {"oid": "4b1cac9235210587bbcb5b16fd8092412ca42973", "url": "https://github.com/apache/shardingsphere/commit/4b1cac9235210587bbcb5b16fd8092412ca42973", "message": "fix", "committedDate": "2020-05-14T13:55:53Z", "type": "commit"}]}