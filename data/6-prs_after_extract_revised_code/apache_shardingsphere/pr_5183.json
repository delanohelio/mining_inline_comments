{"pr_number": 5183, "pr_title": "UnconfiguredSchemaMetaData is NPE.", "pr_createdAt": "2020-04-14T12:12:28Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5183", "timeline": [{"oid": "c61c1938c6f6d2c361d8a92000430549c2f873e7", "url": "https://github.com/apache/shardingsphere/commit/c61c1938c6f6d2c361d8a92000430549c2f873e7", "message": "UnconfiguredSchemaMetaData not config ,is NPE.", "committedDate": "2020-04-14T12:10:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNDM4MQ==", "url": "https://github.com/apache/shardingsphere/pull/5183#discussion_r408124381", "bodyText": "We prefer use null == xxx", "author": "terrymanu", "createdAt": "2020-04-14T13:12:22Z", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -47,8 +47,8 @@ public YamlRuleSchemaMetaData swap(final RuleSchemaMetaData metaData) {\n     @Override\r\n     public RuleSchemaMetaData swap(final YamlRuleSchemaMetaData yaml) {\r\n         SchemaMetaData configured = convertSchema(yaml.getConfiguredSchemaMetaData());\r\n-        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r\n-                .collect(Collectors.toMap(entry -> entry.getKey(), entry -> convertSchema(entry.getValue())));\r\n+        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap() == null ? Collections.emptyMap() : yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r", "originalCommit": "c61c1938c6f6d2c361d8a92000430549c2f873e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMzY1Nw==", "url": "https://github.com/apache/shardingsphere/pull/5183#discussion_r408133657", "bodyText": "ok\uff0cfix it.", "author": "yu199195", "createdAt": "2020-04-14T13:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNDM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0b058ffb497f35e3561f457a53214540585f624c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\nindex 211aeb87e1..fa7eaba5e6 100644\n--- a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\n+++ b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\n\n@@ -47,7 +47,7 @@ public final class RuleSchemaMetaDataYamlSwapper implements YamlSwapper<YamlRule\n     @Override\n     public RuleSchemaMetaData swap(final YamlRuleSchemaMetaData yaml) {\n         SchemaMetaData configured = convertSchema(yaml.getConfiguredSchemaMetaData());\n-        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap() == null ? Collections.emptyMap() : yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\n+        Map<String, SchemaMetaData> unconfigured = null == yaml.getUnconfiguredSchemaMetaDataMap() ? Collections.emptyMap() : yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\n              .collect(Collectors.toMap(entry -> entry.getKey(), entry -> convertSchema(entry.getValue())));\n         return new RuleSchemaMetaData(configured, unconfigured);\n     }\n"}}, {"oid": "0b058ffb497f35e3561f457a53214540585f624c", "url": "https://github.com/apache/shardingsphere/commit/0b058ffb497f35e3561f457a53214540585f624c", "message": "nul == xxx", "committedDate": "2020-04-14T13:25:03Z", "type": "commit"}]}