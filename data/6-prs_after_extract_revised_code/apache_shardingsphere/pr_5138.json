{"pr_number": 5138, "pr_title": "add refresh metadata event after executing ddlstatement.", "pr_createdAt": "2020-04-10T07:01:43Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5138", "timeline": [{"oid": "f9c28322e92f6bd8a3e155374554898f87cc10e0", "url": "https://github.com/apache/shardingsphere/commit/f9c28322e92f6bd8a3e155374554898f87cc10e0", "message": "add refresh metadata event after executing ddlstatement.", "committedDate": "2020-04-10T06:59:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0OTkxNQ==", "url": "https://github.com/apache/shardingsphere/pull/5138#discussion_r406649915", "bodyText": "ternary operator is better", "author": "kimmking", "createdAt": "2020-04-10T07:58:52Z", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -60,6 +61,9 @@ private TableMetaData convertTable(final YamlTableMetaData table) {\n     }\r\n \r\n     private Collection<IndexMetaData> convertIndexes(final Map<String, YamlIndexMetaData> indexes) {\r\n+        if(null == indexes){\r", "originalCommit": "f9c28322e92f6bd8a3e155374554898f87cc10e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "921c6705921988c5a46fc56a813daa91f5e6321f", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\nindex 00507b2ac1..12c04d2584 100644\n--- a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\n+++ b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java\n\n@@ -61,10 +61,7 @@ public final class RuleSchemaMetaDataYamlSwapper implements YamlSwapper<YamlRule\n     }\n \n     private Collection<IndexMetaData> convertIndexes(final Map<String, YamlIndexMetaData> indexes) {\n-        if(null == indexes){\n-            return Collections.emptyList();\n-        }\n-        return indexes.values().stream().map(this::convertIndex).collect(Collectors.toList());\n+        return null == indexes ? Collections.emptyList() : indexes.values().stream().map(this::convertIndex).collect(Collectors.toList());\n     }\n \n     private IndexMetaData convertIndex(final YamlIndexMetaData index) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2MDA4Nw==", "url": "https://github.com/apache/shardingsphere/pull/5138#discussion_r406660087", "bodyText": "add metadata center repository name here.", "author": "kimmking", "createdAt": "2020-04-10T08:28:38Z", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/listener/ShardingOrchestrationListenerManager.java", "diffHunk": "@@ -33,11 +34,14 @@\n     \n     private final StateChangedListenerManager stateChangedListenerManager;\n     \n+    private final MetaDataListenerManager metaDataListenerManager;\n+    \n     public ShardingOrchestrationListenerManager(final String registryCenterRepositoryName, final RegistryCenterRepository registryCenterRepository,", "originalCommit": "f9c28322e92f6bd8a3e155374554898f87cc10e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "921c6705921988c5a46fc56a813daa91f5e6321f", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/listener/ShardingOrchestrationListenerManager.java b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/listener/ShardingOrchestrationListenerManager.java\nindex 2d98e4b9e2..5122093678 100644\n--- a/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/listener/ShardingOrchestrationListenerManager.java\n+++ b/sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/listener/ShardingOrchestrationListenerManager.java\n\n@@ -38,10 +38,10 @@ public final class ShardingOrchestrationListenerManager {\n     \n     public ShardingOrchestrationListenerManager(final String registryCenterRepositoryName, final RegistryCenterRepository registryCenterRepository,\n                                                 final String configCenterRepositoryName, final ConfigCenterRepository configCenterRepository,\n-                                                final Collection<String> shardingSchemaNames) {\n+                                                final String metadataCenterRepositoryName, final Collection<String> shardingSchemaNames) {\n         configurationChangedListenerManager = new ConfigurationChangedListenerManager(configCenterRepositoryName, configCenterRepository, shardingSchemaNames);\n         stateChangedListenerManager = new StateChangedListenerManager(registryCenterRepositoryName, registryCenterRepository);\n-        metaDataListenerManager = new MetaDataListenerManager(configCenterRepositoryName, configCenterRepository, shardingSchemaNames);\n+        metaDataListenerManager = new MetaDataListenerManager(metadataCenterRepositoryName, configCenterRepository, shardingSchemaNames);\n     }\n     \n     /**\n"}}, {"oid": "921c6705921988c5a46fc56a813daa91f5e6321f", "url": "https://github.com/apache/shardingsphere/commit/921c6705921988c5a46fc56a813daa91f5e6321f", "message": "add refresh metadata event after executing ddlstatement.", "committedDate": "2020-04-10T08:34:01Z", "type": "commit"}]}