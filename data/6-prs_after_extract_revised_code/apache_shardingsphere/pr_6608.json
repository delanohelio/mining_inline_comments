{"pr_number": 6608, "pr_title": "Add test cases for datanode", "pr_createdAt": "2020-08-04T05:44:41Z", "pr_url": "https://github.com/apache/shardingsphere/pull/6608", "timeline": [{"oid": "b8efb8584488c29e598ca8e9e87a8cc0baf1fd36", "url": "https://github.com/apache/shardingsphere/commit/b8efb8584488c29e598ca8e9e87a8cc0baf1fd36", "message": "Add test cases for datanode", "committedDate": "2020-08-04T05:42:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NjE3Ng==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464876176", "bodyText": "Please add final if the class is not for extend", "author": "terrymanu", "createdAt": "2020-08-04T08:09:53Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/DataNodesTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule;\n+\n+import org.apache.shardingsphere.infra.datanode.DataNode;\n+import org.apache.shardingsphere.infra.datanode.DataNodes;\n+import org.apache.shardingsphere.infra.rule.fixture.TestShardingRule;\n+import org.apache.shardingsphere.infra.rule.fixture.TestShardingSphereRule;\n+import org.apache.shardingsphere.infra.rule.fixture.TestTableRule;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+\n+public class DataNodesTest {", "originalCommit": "b8efb8584488c29e598ca8e9e87a8cc0baf1fd36", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/DataNodesTest.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/DataNodesTest.java\nindex 1678ea251c..56db22eac0 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/DataNodesTest.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/DataNodesTest.java\n\n@@ -35,7 +35,7 @@ import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertThat;\n \n-public class DataNodesTest {\n+public final class DataNodesTest {\n     \n     private final String logicTableName1 = \"user\";\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NjgwNg==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464876806", "bodyText": "Please remove java doc for @OverRide method", "author": "terrymanu", "createdAt": "2020-08-04T08:11:01Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule.fixture;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.datanode.DataNode;\n+import org.apache.shardingsphere.infra.rule.DataNodeRoutedRule;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+@RequiredArgsConstructor\n+@Getter\n+/**\n+ * TestShardingRule.\n+ */\n+public final class TestShardingRule implements DataNodeRoutedRule {\n+    \n+    private final Collection<TestTableRule> tableRules;\n+    \n+    /**\n+     * Get all data nodes.\n+     *\n+     * @return all data nodes map, key is logic table name, values are data node collection belong to the key\n+     */\n+    @Override\n+    public Map<String, Collection<DataNode>> getAllDataNodes() {", "originalCommit": "b8efb8584488c29e598ca8e9e87a8cc0baf1fd36", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\nindex ceb5bc820c..479f05b5d2 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\n\n@@ -36,54 +36,26 @@ public final class TestShardingRule implements DataNodeRoutedRule {\n     \n     private final Collection<TestTableRule> tableRules;\n     \n-    /**\n-     * Get all data nodes.\n-     *\n-     * @return all data nodes map, key is logic table name, values are data node collection belong to the key\n-     */\n     @Override\n     public Map<String, Collection<DataNode>> getAllDataNodes() {\n         return tableRules.stream().collect(Collectors.toMap(TestTableRule::getLogicTable, TestTableRule::getActualDataNodes));\n     }\n     \n-    /**\n-     * Get all actual tables.\n-     *\n-     * @return all actual tables\n-     */\n     @Override\n     public Collection<String> getAllActualTables() {\n         return tableRules.stream().flatMap(each -> each.getActualDataNodes().stream().map(DataNode::getTableName)).collect(Collectors.toSet());\n     }\n     \n-    /**\n-     * Find first actual table name.\n-     *\n-     * @param logicTable logic table name\n-     * @return the first actual table name\n-     */\n     @Override\n     public Optional<String> findFirstActualTable(final String logicTable) {\n         return findTableRule(logicTable).map(tableRule -> tableRule.getActualDataNodes().get(0).getTableName());\n     }\n     \n-    /**\n-     * Is need accumulate.\n-     *\n-     * @param tables table names\n-     * @return need accumulate\n-     */\n     @Override\n     public boolean isNeedAccumulate(final Collection<String> tables) {\n         return false;\n     }\n     \n-    /**\n-     * Find logic table name via actual table name.\n-     *\n-     * @param actualTable actual table name\n-     * @return logic table name\n-     */\n     @Override\n     public Optional<String> findLogicTableByActualTable(final String actualTable) {\n         return Optional.empty();\n"}}, {"oid": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "url": "https://github.com/apache/shardingsphere/commit/cb5820d61c6cce877e38b64bbe951e05436ab67c", "message": "check style", "committedDate": "2020-08-04T08:27:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyODQyMA==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464928420", "bodyText": "Please remove javadoc for test class", "author": "terrymanu", "createdAt": "2020-08-04T09:39:35Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule.fixture;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.infra.datanode.DataNode;\n+import org.apache.shardingsphere.infra.rule.DataNodeRoutedRule;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+@RequiredArgsConstructor\n+@Getter\n+/**\n+ * TestShardingRule.\n+ */", "originalCommit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\nindex 479f05b5d2..418916f319 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingRule.java\n\n@@ -29,9 +29,6 @@ import java.util.stream.Collectors;\n \n @RequiredArgsConstructor\n @Getter\n-/**\n- * TestShardingRule.\n- */\n public final class TestShardingRule implements DataNodeRoutedRule {\n     \n     private final Collection<TestTableRule> tableRules;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyODU0Mg==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464928542", "bodyText": "Please remove javadoc for test class", "author": "terrymanu", "createdAt": "2020-08-04T09:39:48Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingSphereRule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule.fixture;\n+\n+import org.apache.shardingsphere.infra.rule.ShardingSphereRule;\n+\n+/**\n+ * TestShardingSphereRule.\n+ */", "originalCommit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingSphereRule.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingSphereRule.java\nindex 7d234a96bb..45572ac8ec 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingSphereRule.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestShardingSphereRule.java\n\n@@ -19,8 +19,5 @@ package org.apache.shardingsphere.infra.rule.fixture;\n \n import org.apache.shardingsphere.infra.rule.ShardingSphereRule;\n \n-/**\n- * TestShardingSphereRule.\n- */\n public final class TestShardingSphereRule implements ShardingSphereRule {\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyODgwNA==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464928804", "bodyText": "Please remove javadoc for test class", "author": "terrymanu", "createdAt": "2020-08-04T09:40:15Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule.fixture;\n+\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import org.apache.shardingsphere.infra.datanode.DataNode;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Getter\n+\n+/**\n+ * TestTableRule.\n+ */", "originalCommit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\nindex 1eb0d86af7..00950e72cf 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\n\n@@ -31,10 +31,6 @@ import java.util.Set;\n import java.util.stream.Collectors;\n \n @Getter\n-\n-/**\n- * TestTableRule.\n- */\n public class TestTableRule {\n     \n     private final String logicTable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyODk5Mg==", "url": "https://github.com/apache/shardingsphere/pull/6608#discussion_r464928992", "bodyText": "Please remove useless line", "author": "terrymanu", "createdAt": "2020-08-04T09:40:34Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rule.fixture;\n+\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import org.apache.shardingsphere.infra.datanode.DataNode;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@Getter\n+\n+/**\n+ * TestTableRule.\n+ */\n+public class TestTableRule {\n+    \n+    private final String logicTable;\n+    \n+    private final List<DataNode> actualDataNodes;\n+    \n+    @Getter(AccessLevel.NONE)\n+    private final Set<String> actualTables;\n+    \n+    @Getter(AccessLevel.NONE)\n+    private final Map<DataNode, Integer> dataNodeIndexMap;\n+    \n+    private final Map<String, Collection<String>> datasourceToTablesMap = new HashMap<>();\n+    \n+    private final Collection<String> actualDatasourceNames = new LinkedHashSet<>();\n+    \n+    public TestTableRule(final Collection<String> dataSourceNames, final String logicTableName) {\n+        logicTable = logicTableName.toLowerCase();\n+        dataNodeIndexMap = new HashMap<>(dataSourceNames.size(), 1);\n+        actualDataNodes = generateDataNodes(logicTableName, dataSourceNames);\n+        actualTables = getActualTables();\n+    }\n+    \n+    private List<DataNode> generateDataNodes(final String logicTable, final Collection<String> dataSourceNames) {\n+        List<DataNode> result = new LinkedList<>();\n+        int index = 0;\n+        for (String each : dataSourceNames) {\n+            DataNode dataNode = new DataNode(each, logicTable);\n+            result.add(dataNode);\n+            dataNodeIndexMap.put(dataNode, index);\n+            actualDatasourceNames.add(each);\n+            addActualTable(dataNode.getDataSourceName(), dataNode.getTableName());\n+            index++;\n+        }\n+        return result;\n+    }\n+    \n+    private Set<String> getActualTables() {\n+        return actualDataNodes.stream().map(DataNode::getTableName).collect(Collectors.toSet());\n+    }\n+    \n+    private void addActualTable(final String datasourceName, final String tableName) {\n+        datasourceToTablesMap.computeIfAbsent(datasourceName, key -> new LinkedHashSet<>()).add(tableName);\n+    }\n+    ", "originalCommit": "cb5820d61c6cce877e38b64bbe951e05436ab67c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "chunk": "diff --git a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\nindex 1eb0d86af7..00950e72cf 100644\n--- a/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\n+++ b/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/rule/fixture/TestTableRule.java\n\n@@ -31,10 +31,6 @@ import java.util.Set;\n import java.util.stream.Collectors;\n \n @Getter\n-\n-/**\n- * TestTableRule.\n- */\n public class TestTableRule {\n     \n     private final String logicTable;\n"}}, {"oid": "c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "url": "https://github.com/apache/shardingsphere/commit/c4db0ca0d6fa6be7bbb89f16452f9cd1f65e875e", "message": "Fix checkstyle", "committedDate": "2020-08-04T09:49:21Z", "type": "commit"}]}