{"pr_number": 4498, "pr_title": "Add Unit test case to NacosConfigInstanceTest", "pr_createdAt": "2020-02-27T08:58:31Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4498", "timeline": [{"oid": "a569f0e561bf1fc0fe52db31734e23e9c5ea4fdd", "url": "https://github.com/apache/shardingsphere/commit/a569f0e561bf1fc0fe52db31734e23e9c5ea4fdd", "message": "Add Unit test case to NacosConfigInstanceTest", "committedDate": "2020-02-27T08:51:44Z", "type": "commit"}, {"oid": "e0921f9433b6d404eb95a9fe8115a578d912e508", "url": "https://github.com/apache/shardingsphere/commit/e0921f9433b6d404eb95a9fe8115a578d912e508", "message": "Merge branch 'master' of https://github.com/apache/incubator-shardingsphere into issue4450", "committedDate": "2020-02-27T12:04:02Z", "type": "commit"}, {"oid": "81cd74e21a65650068e7cb8915d162290760f5da", "url": "https://github.com/apache/shardingsphere/commit/81cd74e21a65650068e7cb8915d162290760f5da", "message": "update variable 'nacosConfigCenter' to 'nacosConfigCenterRepository'", "committedDate": "2020-02-27T12:07:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMjgxMw==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385102813", "bodyText": "Class should be final.", "author": "dongzl", "createdAt": "2020-02-27T12:44:26Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -36,10 +37,11 @@\n import static org.mockito.ArgumentMatchers.anyLong;\n import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.doAnswer;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.doThrow;\n \n public class NacosConfigInstanceTest {", "originalCommit": "81cd74e21a65650068e7cb8915d162290760f5da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25910093669d772926948e54004d719061349a8c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 1f579fdf09..7dd9713c5b 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -42,8 +41,9 @@ import static org.mockito.Mockito.when;\n import static org.mockito.Mockito.doAnswer;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.doThrow;\n+import static org.junit.Assert.assertEquals;\n \n-public class NacosConfigInstanceTest {\n+public final class NacosConfigInstanceTest {\n     \n     private static ConfigCenterRepository nacosConfigCenterRepository = new NacosConfigInstanceRepository();\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMzI3OQ==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385103279", "bodyText": "This should keep blank character.", "author": "dongzl", "createdAt": "2020-02-27T12:45:29Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -74,7 +76,7 @@ public void assertPersist() {\n         nacosConfigCenterRepository.persist(\"/sharding/test\", value);\n         verify(configService).publishConfig(\"sharding.test\", group, value);\n     }\n-    \n+", "originalCommit": "81cd74e21a65650068e7cb8915d162290760f5da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25910093669d772926948e54004d719061349a8c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 1f579fdf09..7dd9713c5b 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -68,7 +68,7 @@ public class NacosConfigInstanceTest {\n         configServiceField.setAccessible(true);\n         configServiceField.set(nacosConfigCenterRepository, configService);\n     }\n-    \n+\n     @Test\n     @SneakyThrows\n     public void assertPersist() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwNjcyOA==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385106728", "bodyText": "we can import static org.junit.Assert.assertThat; and use assertEquals directly, keep the same with other test class.", "author": "dongzl", "createdAt": "2020-02-27T12:52:33Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -101,6 +103,68 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         Assert.assertEquals(expectValue, actualValue[0]);\n     }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));", "originalCommit": "81cd74e21a65650068e7cb8915d162290760f5da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25910093669d772926948e54004d719061349a8c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 1f579fdf09..7dd9713c5b 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -101,21 +101,21 @@ public class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n     }\n \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n         when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNjk0OA==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385116948", "bodyText": "AdditionalAnswers also import static class.", "author": "dongzl", "createdAt": "2020-02-27T13:13:34Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -101,6 +103,68 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         Assert.assertEquals(expectValue, actualValue[0]);\n     }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+\n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        Assert.assertEquals(expectValue, actualValue[0]);\n+        Assert.assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchDeletedChangedType() {\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(null)))", "originalCommit": "81cd74e21a65650068e7cb8915d162290760f5da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTg0Mg==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385135842", "bodyText": "'AdditionalAnswers' can not be used  'static import' to import.", "author": "haetao", "createdAt": "2020-02-27T13:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNjk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "25910093669d772926948e54004d719061349a8c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 1f579fdf09..7dd9713c5b 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -101,21 +101,21 @@ public class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n     }\n \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n         when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n \n     @Test\n"}}, {"oid": "25910093669d772926948e54004d719061349a8c", "url": "https://github.com/apache/shardingsphere/commit/25910093669d772926948e54004d719061349a8c", "message": "do some adjustment", "committedDate": "2020-02-27T13:57:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MzE1NQ==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385483155", "bodyText": "Blank lines need to be indented\uff0cplease check.", "author": "menghaoranss", "createdAt": "2020-02-28T02:49:24Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +101,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n+    }\n+", "originalCommit": "25910093669d772926948e54004d719061349a8c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4634bed05aad5f07757200d63b5365de5c92d9c", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7dd9713c5b..036d901cd7 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -103,21 +103,21 @@ public final class NacosConfigInstanceTest {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         assertEquals(expectValue, actualValue[0]);\n     }\n-\n+    \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n         when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n         assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n-\n+    \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n         assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n-\n+    \n     @Test\n     @SneakyThrows\n     public void assertUpdate() {\n"}}, {"oid": "f4634bed05aad5f07757200d63b5365de5c92d9c", "url": "https://github.com/apache/shardingsphere/commit/f4634bed05aad5f07757200d63b5365de5c92d9c", "message": "Adjust the format", "committedDate": "2020-02-28T03:23:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5MjAxOA==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385492018", "bodyText": "Please use assertThat instead of assertEquals", "author": "terrymanu", "createdAt": "2020-02-28T03:31:18Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +101,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertEquals(expectValue, actualValue[0]);\n+        assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);", "originalCommit": "f4634bed05aad5f07757200d63b5365de5c92d9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5NDU1Ng==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385494556", "bodyText": "Ok, I'll mdify it.", "author": "haetao", "createdAt": "2020-02-28T03:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5MjAxOA=="}], "type": "inlineReview", "revised_code": {"commit": "eeb90e611f93a55404b99030d204fde452b6fed2", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 036d901cd7..7e17d67cf7 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -101,21 +102,21 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n         when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n     }\n     \n     @Test\n"}}, {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2", "url": "https://github.com/apache/shardingsphere/commit/eeb90e611f93a55404b99030d204fde452b6fed2", "message": "use assertThat instead of assertEqual", "committedDate": "2020-02-28T03:59:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NDc3OQ==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385564779", "bodyText": "Please use assertNull", "author": "terrymanu", "createdAt": "2020-02-28T08:31:12Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NDkyNQ==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385564925", "bodyText": "Do not need mock if return null", "author": "terrymanu", "createdAt": "2020-02-28T08:31:33Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NTY1Mg==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385565652", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "author": "terrymanu", "createdAt": "2020-02-28T08:33:25Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -80,7 +83,7 @@ public void assertPersist() {\n     public void assertGet() {\n         String value = \"value\";\n         when(configService.getConfig(eq(\"sharding.test\"), eq(group), anyLong())).thenReturn(value);\n-        Assert.assertEquals(value, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+        assertThat(value, is(nacosConfigCenterRepository.get(\"/sharding/test\")));", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -83,7 +85,7 @@ public final class NacosConfigInstanceTest {\n     public void assertGet() {\n         String value = \"value\";\n         when(configService.getConfig(eq(\"sharding.test\"), eq(group), anyLong())).thenReturn(value);\n-        assertThat(value, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertThat(nacosConfigCenterRepository.get(\"/sharding/test\"), is(value));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjE2Mg==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566162", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "author": "terrymanu", "createdAt": "2020-02-28T08:34:44Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjI3Mw==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566273", "bodyText": "Please use assertNull", "author": "terrymanu", "createdAt": "2020-02-28T08:35:03Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjgwMQ==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566801", "bodyText": "Please do not use Class.InnerClass, just put Class.InnerClass into import statements", "author": "terrymanu", "createdAt": "2020-02-28T08:36:27Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NzMxNg==", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385567316", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "author": "terrymanu", "createdAt": "2020-02-28T08:37:36Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(DataChangedEvent.ChangedType.UPDATED, is(actualType[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchDeletedChangedType() {\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(null)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertThat(DataChangedEvent.ChangedType.UPDATED, is(actualType[0]));", "originalCommit": "eeb90e611f93a55404b99030d204fde452b6fed2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\nindex 7e17d67cf7..06882985af 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java\n\n@@ -102,21 +104,20 @@ public final class NacosConfigInstanceTest {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(actualValue[0], is(expectValue));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWithNonExistentKey() {\n-        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n     }\n     \n     @Test\n     @SneakyThrows\n     public void assertGetWhenThrowException() {\n         doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n-        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+        assertNull(nacosConfigCenterRepository.get(\"/sharding/test\"));\n     }\n     \n     @Test\n"}}, {"oid": "3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "url": "https://github.com/apache/shardingsphere/commit/3fea0fe3daa4bfc475884947dffcdbd7de99fabd", "message": "Adjust details", "committedDate": "2020-02-28T09:13:40Z", "type": "commit"}]}