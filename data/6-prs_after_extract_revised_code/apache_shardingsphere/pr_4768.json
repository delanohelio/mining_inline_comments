{"pr_number": 4768, "pr_title": "add sql state and vendor code for this", "pr_createdAt": "2020-03-15T14:49:17Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4768", "timeline": [{"oid": "4dd7dae97013f9822e834cf6285036fda7272245", "url": "https://github.com/apache/shardingsphere/commit/4dd7dae97013f9822e834cf6285036fda7272245", "message": "add sql state and vendor code for this", "committedDate": "2020-03-15T14:46:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4OTM0Ng==", "url": "https://github.com/apache/shardingsphere/pull/4768#discussion_r392689346", "bodyText": "SQL_STATE is a common name, but the value is S1002, it is not a good variable name.", "author": "terrymanu", "createdAt": "2020-03-15T16:22:10Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java", "diffHunk": "@@ -27,4 +27,8 @@\n public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n+    \n+    public static final String SQL_STATE = \"S1002\";", "originalCommit": "4dd7dae97013f9822e834cf6285036fda7272245", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgxODk4OQ==", "url": "https://github.com/apache/shardingsphere/pull/4768#discussion_r392818989", "bodyText": "ok", "author": "zjcnb", "createdAt": "2020-03-16T07:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4OTM0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6baba6fef3f2f0c9e0751bcd90be4a0afff7e941", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\nindex e20606f5a4..921b155e86 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n\n@@ -28,7 +28,7 @@ public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n     \n-    public static final String SQL_STATE = \"S1002\";\n+    public static final String SQL_STATE_S1002 = \"S1002\";\n     \n-    public static final int SQL_VENDOR_CODE = 0;\n+    public static final int SQL_VENDOR_CODE_ZERO = 0;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY4OTM3MA==", "url": "https://github.com/apache/shardingsphere/pull/4768#discussion_r392689370", "bodyText": "Same with SQL_STATE", "author": "terrymanu", "createdAt": "2020-03-15T16:22:28Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java", "diffHunk": "@@ -27,4 +27,8 @@\n public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n+    \n+    public static final String SQL_STATE = \"S1002\";\n+    \n+    public static final int SQL_VENDOR_CODE = 0;", "originalCommit": "4dd7dae97013f9822e834cf6285036fda7272245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6baba6fef3f2f0c9e0751bcd90be4a0afff7e941", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\nindex e20606f5a4..921b155e86 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n\n@@ -28,7 +28,7 @@ public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n     \n-    public static final String SQL_STATE = \"S1002\";\n+    public static final String SQL_STATE_S1002 = \"S1002\";\n     \n-    public static final int SQL_VENDOR_CODE = 0;\n+    public static final int SQL_VENDOR_CODE_ZERO = 0;\n }\n"}}, {"oid": "6baba6fef3f2f0c9e0751bcd90be4a0afff7e941", "url": "https://github.com/apache/shardingsphere/commit/6baba6fef3f2f0c9e0751bcd90be4a0afff7e941", "message": "modify the variable name.", "committedDate": "2020-03-16T07:09:32Z", "type": "commit"}, {"oid": "d38c8261a9e55a0b0753ccbae1e182d7a2f460b3", "url": "https://github.com/apache/shardingsphere/commit/d38c8261a9e55a0b0753ccbae1e182d7a2f460b3", "message": "Merge https://github.com/apache/incubator-shardingsphere into sql_state", "committedDate": "2020-03-16T07:10:11Z", "type": "commit"}, {"oid": "5f5a60a3da704c710b5fd63d2c2baa0d78d6a665", "url": "https://github.com/apache/shardingsphere/commit/5f5a60a3da704c710b5fd63d2c2baa0d78d6a665", "message": "update vendor code", "committedDate": "2020-03-16T08:33:32Z", "type": "commit"}, {"oid": "71a13292082cb90ea550f4030b95629b84246eee", "url": "https://github.com/apache/shardingsphere/commit/71a13292082cb90ea550f4030b95629b84246eee", "message": "Merge https://github.com/apache/incubator-shardingsphere into sql_state", "committedDate": "2020-03-16T08:40:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NTM0OQ==", "url": "https://github.com/apache/shardingsphere/pull/4768#discussion_r393055349", "bodyText": "Please do not use abbreviation as variable name", "author": "terrymanu", "createdAt": "2020-03-16T14:17:20Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java", "diffHunk": "@@ -27,4 +27,6 @@\n public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n+    \n+    public static final String OUT_OF_INDEX_SQL_STAT = \"S1002\";", "originalCommit": "71a13292082cb90ea550f4030b95629b84246eee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56d4446724c684cb6a847a2596f6dc55a7fe143", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\nindex e50915d7de..e359cfbf26 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/constant/SQLExceptionConstant.java\n\n@@ -28,5 +28,7 @@ public final class SQLExceptionConstant {\n     \n     public static final String SQL_STRING_NULL_OR_EMPTY = \"SQL String can not be NULL or empty.\";\n     \n-    public static final String OUT_OF_INDEX_SQL_STAT = \"S1002\";\n+    public static final String COLUMN_INDEX_OUT_OF_RANGE = \"Column index out of range.\";\n+    \n+    public static final String OUT_OF_INDEX_SQL_STATE = \"S1002\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NjA4NA==", "url": "https://github.com/apache/shardingsphere/pull/4768#discussion_r393056084", "bodyText": "Maybe we need to check string information \"Out of index of projection %s\" too", "author": "terrymanu", "createdAt": "2020-03-16T14:18:03Z", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java", "diffHunk": "@@ -89,8 +90,7 @@ public String getColumnName(final int column) throws SQLException {\n         if (sqlStatementContext instanceof SelectStatementContext) {\n             List<Projection> actualProjections = ((SelectStatementContext) sqlStatementContext).getProjectionsContext().getExpandProjections();\n             if (column > actualProjections.size()) {\n-                // TODO fill correct SQL state\n-                throw new SQLException(String.format(\"Out of index of projection %s\", column));\n+                throw new SQLException(String.format(\"Out of index of projection %s\", column), SQLExceptionConstant.OUT_OF_INDEX_SQL_STAT, 0);", "originalCommit": "71a13292082cb90ea550f4030b95629b84246eee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c56d4446724c684cb6a847a2596f6dc55a7fe143", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java\nindex 608dea3c35..2755dfaf4e 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java\n\n@@ -90,7 +90,7 @@ public final class EncryptResultSetMetaData extends WrapperAdapter implements Re\n         if (sqlStatementContext instanceof SelectStatementContext) {\n             List<Projection> actualProjections = ((SelectStatementContext) sqlStatementContext).getProjectionsContext().getExpandProjections();\n             if (column > actualProjections.size()) {\n-                throw new SQLException(String.format(\"Out of index of projection %s\", column), SQLExceptionConstant.OUT_OF_INDEX_SQL_STAT, 0);\n+                throw new SQLException(SQLExceptionConstant.COLUMN_INDEX_OUT_OF_RANGE, SQLExceptionConstant.OUT_OF_INDEX_SQL_STATE, 0);\n             }\n             Projection projection = ((SelectStatementContext) sqlStatementContext).getProjectionsContext().getExpandProjections().get(column - 1);\n             if (projection instanceof ColumnProjection) {\n"}}, {"oid": "c56d4446724c684cb6a847a2596f6dc55a7fe143", "url": "https://github.com/apache/shardingsphere/commit/c56d4446724c684cb6a847a2596f6dc55a7fe143", "message": "modify the variable name and check reason", "committedDate": "2020-03-16T15:48:05Z", "type": "commit"}, {"oid": "cc7e5694353a92b70544bd7a725e20b35110827b", "url": "https://github.com/apache/shardingsphere/commit/cc7e5694353a92b70544bd7a725e20b35110827b", "message": "Merge https://github.com/apache/incubator-shardingsphere into sql_state", "committedDate": "2020-03-16T15:49:45Z", "type": "commit"}]}