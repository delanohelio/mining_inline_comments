{"pr_number": 7570, "pr_title": "Optimize data consistency checker.", "pr_createdAt": "2020-09-22T13:37:49Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7570", "timeline": [{"oid": "27be9b0411cc57dd9533962686090294fa7f10ef", "url": "https://github.com/apache/shardingsphere/commit/27be9b0411cc57dd9533962686090294fa7f10ef", "message": "Optimize data consistency checker.", "committedDate": "2020-09-22T13:25:17Z", "type": "commit"}, {"oid": "b3e2d59cc305d0bac62f47fe56a5a35bed8402c2", "url": "https://github.com/apache/shardingsphere/commit/b3e2d59cc305d0bac62f47fe56a5a35bed8402c2", "message": "Update javadoc.", "committedDate": "2020-09-22T13:50:46Z", "type": "commit"}, {"oid": "c8887bc6bc9a0e9159aa145690638a352fef149f", "url": "https://github.com/apache/shardingsphere/commit/c8887bc6bc9a0e9159aa145690638a352fef149f", "message": "Update javadoc.", "committedDate": "2020-09-22T13:57:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyMjgzOA==", "url": "https://github.com/apache/shardingsphere/pull/7570#discussion_r493722838", "bodyText": "Please do not name result if the method is void", "author": "terrymanu", "createdAt": "2020-09-23T16:19:22Z", "path": "shardingsphere-scaling/shardingsphere-scaling-bootstrap/src/main/java/org/apache/shardingsphere/scaling/web/HttpServerHandler.java", "diffHunk": "@@ -122,8 +124,8 @@ private void stopJob(final ChannelHandlerContext context, final String requestBo\n     private void checkJob(final ChannelHandlerContext context, final String requestPath) {\n         int jobId = Integer.parseInt(requestPath.split(\"/\")[4]);\n         try {\n-            boolean success = SCALING_JOB_CONTROLLER.check(jobId);\n-            response(GSON.toJson(ResponseContentUtil.build(success)), context, HttpResponseStatus.OK);\n+            Map<String, DataConsistencyCheckResult> result = SCALING_JOB_CONTROLLER.check(jobId);", "originalCommit": "c8887bc6bc9a0e9159aa145690638a352fef149f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4cd5946f952b637de4d9ff88b5103cee967810a", "chunk": "diff --git a/shardingsphere-scaling/shardingsphere-scaling-bootstrap/src/main/java/org/apache/shardingsphere/scaling/web/HttpServerHandler.java b/shardingsphere-scaling/shardingsphere-scaling-bootstrap/src/main/java/org/apache/shardingsphere/scaling/web/HttpServerHandler.java\nindex 960d208f75..31463c7521 100644\n--- a/shardingsphere-scaling/shardingsphere-scaling-bootstrap/src/main/java/org/apache/shardingsphere/scaling/web/HttpServerHandler.java\n+++ b/shardingsphere-scaling/shardingsphere-scaling-bootstrap/src/main/java/org/apache/shardingsphere/scaling/web/HttpServerHandler.java\n\n@@ -124,8 +124,8 @@ public final class HttpServerHandler extends SimpleChannelInboundHandler<FullHtt\n     private void checkJob(final ChannelHandlerContext context, final String requestPath) {\n         int jobId = Integer.parseInt(requestPath.split(\"/\")[4]);\n         try {\n-            Map<String, DataConsistencyCheckResult> result = SCALING_JOB_CONTROLLER.check(jobId);\n-            response(GSON.toJson(ResponseContentUtil.build(result)), context, HttpResponseStatus.OK);\n+            Map<String, DataConsistencyCheckResult> dataConsistencyCheckResultMap = SCALING_JOB_CONTROLLER.check(jobId);\n+            response(GSON.toJson(ResponseContentUtil.build(dataConsistencyCheckResultMap)), context, HttpResponseStatus.OK);\n         } catch (final ScalingJobNotFoundException ex) {\n             response(GSON.toJson(ResponseContentUtil.handleBadRequest(ex.getMessage())), context, HttpResponseStatus.BAD_REQUEST);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyMzc5MQ==", "url": "https://github.com/apache/shardingsphere/pull/7570#discussion_r493723791", "bodyText": "Can use RequiredArgsConstructor here", "author": "terrymanu", "createdAt": "2020-09-23T16:20:46Z", "path": "shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/datasource/DataSourceWrapper.java", "diffHunk": "@@ -17,11 +17,89 @@\n \n package org.apache.shardingsphere.scaling.core.datasource;\n \n+import lombok.AllArgsConstructor;\n+\n import javax.sql.DataSource;\n import java.io.Closeable;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.logging.Logger;\n \n /**\n  * Data source wrapper is for abstract standard jdbc and sharding jdbc.\n  */\n-public interface DataSourceWrapper extends DataSource, Closeable {\n+@AllArgsConstructor", "originalCommit": "c8887bc6bc9a0e9159aa145690638a352fef149f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4cd5946f952b637de4d9ff88b5103cee967810a", "chunk": "diff --git a/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/datasource/DataSourceWrapper.java b/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/datasource/DataSourceWrapper.java\nindex 1f55ab4e43..522e6dc503 100644\n--- a/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/datasource/DataSourceWrapper.java\n+++ b/shardingsphere-scaling/shardingsphere-scaling-core/src/main/java/org/apache/shardingsphere/scaling/core/datasource/DataSourceWrapper.java\n\n@@ -17,10 +17,9 @@\n \n package org.apache.shardingsphere.scaling.core.datasource;\n \n-import lombok.AllArgsConstructor;\n+import lombok.RequiredArgsConstructor;\n \n import javax.sql.DataSource;\n-import java.io.Closeable;\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.sql.Connection;\n"}}, {"oid": "d4cd5946f952b637de4d9ff88b5103cee967810a", "url": "https://github.com/apache/shardingsphere/commit/d4cd5946f952b637de4d9ff88b5103cee967810a", "message": "rename `result` and replace `AllArgsConstructor`", "committedDate": "2020-09-24T06:58:43Z", "type": "commit"}]}