{"pr_number": 7949, "pr_title": "fix some sql parse exception and ddl, dcl route logic", "pr_createdAt": "2020-10-28T15:36:51Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7949", "timeline": [{"oid": "ef415a837b9050e8fdc74ba60bc37631faf73ec5", "url": "https://github.com/apache/shardingsphere/commit/ef415a837b9050e8fdc74ba60bc37631faf73ec5", "message": "fix some sql parse exception and ddl, dcl route logic", "committedDate": "2020-10-28T05:15:01Z", "type": "commit"}, {"oid": "92955db6824d62c685b9194246d7e9fe6373b372", "url": "https://github.com/apache/shardingsphere/commit/92955db6824d62c685b9194246d7e9fe6373b372", "message": "add sharding route engine test", "committedDate": "2020-10-28T15:23:22Z", "type": "commit"}, {"oid": "703895989c92d518da7b60c9101855db5542df7c", "url": "https://github.com/apache/shardingsphere/commit/703895989c92d518da7b60c9101855db5542df7c", "message": "fix UnknownFormatConversionException when sql include % sign", "committedDate": "2020-10-29T00:44:05Z", "type": "commit"}, {"oid": "01b4740d1649c3ab3816d05a0fc7093721495d5c", "url": "https://github.com/apache/shardingsphere/commit/01b4740d1649c3ab3816d05a0fc7093721495d5c", "message": "Resolve conflict", "committedDate": "2020-10-29T00:47:56Z", "type": "commit"}, {"oid": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b", "url": "https://github.com/apache/shardingsphere/commit/de4eff46c599daa6e0b9fc15f09ca64b9b1f229b", "message": "fix set statement parse error", "committedDate": "2020-10-29T01:27:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyMzA0Nw==", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513923047", "bodyText": "Could you give a SQL example involving ShardingInstanceBroadcastRoutingEngine", "author": "tristaZero", "createdAt": "2020-10-29T03:36:28Z", "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/ShardingRouteEngineFactory.java", "diffHunk": "@@ -140,10 +131,16 @@ private static ShardingRouteEngine getDALRoutingEngine(final ShardingRule shardi\n         return new ShardingDataSourceGroupBroadcastRoutingEngine();\n     }\n     \n-    private static ShardingRouteEngine getDCLRoutingEngine(final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n-        return isDCLForSingleTable(sqlStatementContext) \n-                ? new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext)\n-                : new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());\n+    private static ShardingRouteEngine getDCLRoutingEngine(final ShardingRule shardingRule, final Map<String, Collection<String>> unconfiguredSchemaMetaDataMap,\n+                                                           final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n+        if (isDCLForSingleTable(sqlStatementContext)) {\n+            Collection<String> tableNames = sqlStatementContext.getTablesContext().getTableNames();\n+            return !shardingRule.tableRuleExists(tableNames)\n+                    ? new ShardingUnconfiguredTablesRoutingEngine(tableNames, unconfiguredSchemaMetaDataMap, sqlStatementContext.getSqlStatement()) \n+                    : new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext);\n+        } else {\n+            return new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());", "originalCommit": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk3MDU1NQ==", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513970555", "bodyText": "ShardingInstanceBroadcastRoutingEngine\n\n@tristaZero If user executes a DCL statement that does not contain tables or contains multiple tables, ShardingInstanceBroadcastRoutingEngine will be used at this time. For example: SET PASSWORD FOR'bob'@'%.example.org' ='auth_string';", "author": "strongduanmu", "createdAt": "2020-10-29T04:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyMzA0Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyNDUyOQ==", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513924529", "bodyText": "Why is replaceAll(\"%\", \"%%\") needed?", "author": "tristaZero", "createdAt": "2020-10-29T03:39:08Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java", "diffHunk": "@@ -64,7 +64,7 @@ public ParseTree parse(final String sql, final boolean useCache) {\n     private ParseTree parse(final String sql) {\n         ParseASTNode result = twoPhaseParse(sql);\n         if (result.getRootNode() instanceof ErrorNode) {\n-            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql));\n+            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql).replaceAll(\"%\", \"%%\"));", "originalCommit": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2ODU5Mg==", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513968592", "bodyText": "Why is replaceAll(\"%\", \"%%\") needed?\n\n@tristaZero When user executes a SQL containing % and the SQL parsing is abnormal, for example: SET PASSWORD FOR'bob'@'%.example.org' = PASSWORD('auth_string');. Since the % symbol is a reserved character, an UnknownFormatConversionException will occur when the String.format() method is executed.\nIn order to allow users to see the real prompt, such as: Unsupported SQL of xxxStatement, we need to escape the % symbol, that is, replace it with the %% symbol.", "author": "strongduanmu", "createdAt": "2020-10-29T04:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyNDUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4b26ba31879dbe7699b5d8114f894c96e0973f68", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/parser/SQLParserExecutor.java\nsimilarity index 90%\nrename from shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java\nrename to shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/parser/SQLParserExecutor.java\nindex d7c33141aa..35f2ce7a2f 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/parser/SQLParserExecutor.java\n\n@@ -64,7 +63,7 @@ public final class SQLParserEngine {\n     private ParseTree parse(final String sql) {\n         ParseASTNode result = twoPhaseParse(sql);\n         if (result.getRootNode() instanceof ErrorNode) {\n-            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql).replaceAll(\"%\", \"%%\"));\n+            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql));\n         }\n         return result.getRootNode();\n     }\n"}}, {"oid": "6f2cc09bbab32d53e4cd3850bf6dd404672f9df5", "url": "https://github.com/apache/shardingsphere/commit/6f2cc09bbab32d53e4cd3850bf6dd404672f9df5", "message": "resolve conflict", "committedDate": "2020-10-29T05:40:30Z", "type": "commit"}, {"oid": "9c19dc6af2afe18be3a28141421122efbca467c2", "url": "https://github.com/apache/shardingsphere/commit/9c19dc6af2afe18be3a28141421122efbca467c2", "message": "resolve conflict", "committedDate": "2020-10-29T11:02:14Z", "type": "commit"}, {"oid": "4b26ba31879dbe7699b5d8114f894c96e0973f68", "url": "https://github.com/apache/shardingsphere/commit/4b26ba31879dbe7699b5d8114f894c96e0973f68", "message": "add a constructor to solve UnknownFormatConversionException", "committedDate": "2020-10-29T11:13:43Z", "type": "commit"}, {"oid": "a0d0e13a415701bd68943e8fe4be3fe3a67a5457", "url": "https://github.com/apache/shardingsphere/commit/a0d0e13a415701bd68943e8fe4be3fe3a67a5457", "message": "support password function in set password statement", "committedDate": "2020-10-29T15:05:03Z", "type": "commit"}]}