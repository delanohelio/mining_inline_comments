{"pr_number": 5034, "pr_title": "add Test MetaDataRefreshStrategy.", "pr_createdAt": "2020-04-01T08:57:23Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5034", "timeline": [{"oid": "2f1b236bb97c19d485dfa901cef20d51a1e09098", "url": "https://github.com/apache/shardingsphere/commit/2f1b236bb97c19d485dfa901cef20d51a1e09098", "message": "add Test MetaDataRefreshStrategy.", "committedDate": "2020-04-01T08:52:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxNzQyNQ==", "url": "https://github.com/apache/shardingsphere/pull/5034#discussion_r401517425", "bodyText": "let an empty line at the tail of each file.", "author": "kimmking", "createdAt": "2020-04-01T10:34:32Z", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/refresh/AbstractMetaDataRefreshStrategyTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refresh;\n+\n+import com.google.common.collect.ImmutableMap;\n+import lombok.Getter;\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.underlying.common.config.properties.ConfigurationProperties;\n+import org.apache.shardingsphere.underlying.common.metadata.ShardingSphereMetaData;\n+import org.junit.Before;\n+\n+import java.util.Collections;\n+import java.util.Properties;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@Getter\n+public abstract class AbstractMetaDataRefreshStrategyTest {\n+    \n+    private ShardingRuntimeContext runtimeContext;\n+    \n+    @Before\n+    public void setUp() {\n+        runtimeContext = mock(ShardingRuntimeContext.class);\n+        when(runtimeContext.getMetaData()).thenReturn(buildMetaData());\n+        when(runtimeContext.getProperties()).thenReturn(new ConfigurationProperties(new Properties()));\n+    }\n+    \n+    private ShardingSphereMetaData buildMetaData() {\n+        return new ShardingSphereMetaData(null, new SchemaMetaData(ImmutableMap.of(\"t_order\",\n+                        new TableMetaData(Collections.singletonList(new ColumnMetaData(\"order_id\", 1, \"String\", false, false, false)),\n+                Collections.singletonList(new IndexMetaData(\"index\"))))));\n+    }\n+}", "originalCommit": "2f1b236bb97c19d485dfa901cef20d51a1e09098", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd3ab45aa935d4e518d103615528c6d6a7da010c", "chunk": "diff --git a/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/refresh/AbstractMetaDataRefreshStrategyTest.java b/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/refresh/AbstractMetaDataRefreshStrategyTest.java\nindex ebd56ff96e..9e666596a2 100644\n--- a/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/refresh/AbstractMetaDataRefreshStrategyTest.java\n+++ b/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/refresh/AbstractMetaDataRefreshStrategyTest.java\n\n@@ -52,3 +52,4 @@ public abstract class AbstractMetaDataRefreshStrategyTest {\n                 Collections.singletonList(new IndexMetaData(\"index\"))))));\n     }\n }\n+\n"}}, {"oid": "bd3ab45aa935d4e518d103615528c6d6a7da010c", "url": "https://github.com/apache/shardingsphere/commit/bd3ab45aa935d4e518d103615528c6d6a7da010c", "message": "add Test MetaDataRefreshStrategy.", "committedDate": "2020-04-01T10:46:35Z", "type": "commit"}]}