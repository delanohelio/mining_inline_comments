{"pr_number": 5241, "pr_title": "fix for test of subquerytable", "pr_createdAt": "2020-04-20T10:40:25Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5241", "timeline": [{"oid": "42de45d7507e887e343cdb80343653675c5070ba", "url": "https://github.com/apache/shardingsphere/commit/42de45d7507e887e343cdb80343653675c5070ba", "message": "fix for test of subquerytable", "committedDate": "2020-04-20T06:22:45Z", "type": "commit"}, {"oid": "7a5319f26a0913cb9935e991c1a62fcd7cf03dc4", "url": "https://github.com/apache/shardingsphere/commit/7a5319f26a0913cb9935e991c1a62fcd7cf03dc4", "message": "delete some comment", "committedDate": "2020-04-20T06:55:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTM5OQ==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411891399", "bodyText": "Is it possible to use SubqueryContext instead of OracleStatementParser.SubqueryContext", "author": "tristaZero", "createdAt": "2020-04-21T05:58:06Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java", "diffHunk": "@@ -474,4 +474,9 @@ public ASTNode visitGroupByClause(final GroupByClauseContext ctx) {\n         }\n         return new GroupBySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), items);\n     }\n+    \n+    @Override\n+    public ASTNode visitSubquery(final OracleStatementParser.SubqueryContext ctx) {", "originalCommit": "7a5319f26a0913cb9935e991c1a62fcd7cf03dc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5NDM5Mg==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411894392", "bodyText": "Ok.", "author": "jingshanglu", "createdAt": "2020-04-21T06:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTM5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\nindex 30b247d204..c217be7b72 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\n\n@@ -476,7 +477,7 @@ public final class OracleDMLVisitor extends OracleVisitor implements DMLVisitor\n     }\n     \n     @Override\n-    public ASTNode visitSubquery(final OracleStatementParser.SubqueryContext ctx) {\n+    public ASTNode visitSubquery(final SubqueryContext ctx) {\n         return visit(ctx.unionClause());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTc4Nw==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411891787", "bodyText": "Do you think SQL92DMLVisitor need this function as well?", "author": "tristaZero", "createdAt": "2020-04-21T05:58:54Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java", "diffHunk": "@@ -469,4 +469,9 @@ public ASTNode visitGroupByClause(final GroupByClauseContext ctx) {\n         }\n         return new GroupBySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), items);\n     }\n+    \n+    @Override\n+    public ASTNode visitSubquery(final SQLServerStatementParser.SubqueryContext ctx) {\n+        return visit(ctx.unionClause());\n+    }", "originalCommit": "7a5319f26a0913cb9935e991c1a62fcd7cf03dc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5NDQ1Ng==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411894456", "bodyText": "Ok.", "author": "jingshanglu", "createdAt": "2020-04-21T06:05:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTc4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\nindex 66062b7d38..f3092e4807 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\n\n@@ -471,7 +472,7 @@ public final class SQLServerDMLVisitor extends SQLServerVisitor implements DMLVi\n     }\n     \n     @Override\n-    public ASTNode visitSubquery(final SQLServerStatementParser.SubqueryContext ctx) {\n+    public ASTNode visitSubquery(final SubqueryContext ctx) {\n         return visit(ctx.unionClause());\n     }\n }\n"}}, {"oid": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "url": "https://github.com/apache/shardingsphere/commit/09523c9b05de370b91406e4e1811787a6f8e3b3a", "message": "fix", "committedDate": "2020-04-21T06:11:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3MjI0MA==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411972240", "bodyText": "ColumnNameContext cname :ctx.columnNames().columnName()\ncname ---> each\nA blank space is needed in front of ctx.columnNames().columnName()", "author": "tristaZero", "createdAt": "2020-04-21T08:15:32Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java", "diffHunk": "@@ -444,7 +445,7 @@ public ASTNode visitJoinSpecification(final JoinSpecificationContext ctx) {\n         }\n         if (null != ctx.USING()) {\n             Collection<ColumnSegment> columnSegmentList = new LinkedList<>();\n-            for (OracleStatementParser.ColumnNameContext cname :ctx.columnNames().columnName()) {\n+            for (ColumnNameContext cname :ctx.columnNames().columnName()) {", "originalCommit": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\nindex c217be7b72..b76f5001cf 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/impl/OracleDMLVisitor.java\n\n@@ -445,8 +445,8 @@ public final class OracleDMLVisitor extends OracleVisitor implements DMLVisitor\n         }\n         if (null != ctx.USING()) {\n             Collection<ColumnSegment> columnSegmentList = new LinkedList<>();\n-            for (ColumnNameContext cname :ctx.columnNames().columnName()) {\n-                columnSegmentList.add((ColumnSegment) visit(cname));\n+            for (ColumnNameContext each : ctx.columnNames().columnName()) {\n+                columnSegmentList.add((ColumnSegment) visit(each));\n             }\n             result.getUsingColumns().addAll(columnSegmentList);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3MjgxNg==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411972816", "bodyText": "final PostgreSQLStatementParser.SubqueryContext ctx --->final SubqueryContext ctx", "author": "tristaZero", "createdAt": "2020-04-21T08:16:18Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDMLVisitor.java", "diffHunk": "@@ -529,4 +529,9 @@ public ASTNode visitLimitOffset(final LimitOffsetContext ctx) {\n         }\n         return new ParameterMarkerLimitValueSegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), ((ParameterMarkerValue) visit(ctx.parameterMarker())).getValue());\n     }\n+    \n+    @Override\n+    public ASTNode visitSubquery(final PostgreSQLStatementParser.SubqueryContext ctx) {", "originalCommit": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDMLVisitor.java\nindex 2e6e70bb51..2f503cf06b 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDMLVisitor.java\n\n@@ -531,7 +532,7 @@ public final class PostgreSQLDMLVisitor extends PostgreSQLVisitor implements DML\n     }\n     \n     @Override\n-    public ASTNode visitSubquery(final PostgreSQLStatementParser.SubqueryContext ctx) {\n+    public ASTNode visitSubquery(final SubqueryContext ctx) {\n         return visit(ctx.unionClause());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3MzEwNw==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411973107", "bodyText": "Please check style.", "author": "tristaZero", "createdAt": "2020-04-21T08:16:44Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/impl/SQL92DMLVisitor.java", "diffHunk": "@@ -413,7 +414,7 @@ public ASTNode visitJoinSpecification(final JoinSpecificationContext ctx) {\n         }\n         if (null != ctx.USING()) {\n             Collection<ColumnSegment> columnSegmentList = new LinkedList<>();\n-            for (SQL92StatementParser.ColumnNameContext cname :ctx.columnNames().columnName()) {\n+            for (ColumnNameContext cname :ctx.columnNames().columnName()) {", "originalCommit": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/impl/SQL92DMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/impl/SQL92DMLVisitor.java\nindex a4aa4079f7..05ed727887 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/impl/SQL92DMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sql92/src/main/java/org/apache/shardingsphere/sql/parser/sql92/visitor/impl/SQL92DMLVisitor.java\n\n@@ -414,8 +414,8 @@ public final class SQL92DMLVisitor extends SQL92Visitor implements DMLVisitor {\n         }\n         if (null != ctx.USING()) {\n             Collection<ColumnSegment> columnSegmentList = new LinkedList<>();\n-            for (ColumnNameContext cname :ctx.columnNames().columnName()) {\n-                columnSegmentList.add((ColumnSegment) visit(cname));\n+            for (ColumnNameContext each : ctx.columnNames().columnName()) {\n+                columnSegmentList.add((ColumnSegment) visit(each));\n             }\n             result.getUsingColumns().addAll(columnSegmentList);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3MzUxNw==", "url": "https://github.com/apache/shardingsphere/pull/5241#discussion_r411973517", "bodyText": "final SQLServerStatementParser.SubqueryContext ctx", "author": "tristaZero", "createdAt": "2020-04-21T08:17:19Z", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java", "diffHunk": "@@ -469,4 +469,9 @@ public ASTNode visitGroupByClause(final GroupByClauseContext ctx) {\n         }\n         return new GroupBySegment(ctx.getStart().getStartIndex(), ctx.getStop().getStopIndex(), items);\n     }\n+    \n+    @Override\n+    public ASTNode visitSubquery(final SQLServerStatementParser.SubqueryContext ctx) {", "originalCommit": "09523c9b05de370b91406e4e1811787a6f8e3b3a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "chunk": "diff --git a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\nindex 66062b7d38..f3092e4807 100644\n--- a/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\n+++ b/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-sqlserver/src/main/java/org/apache/shardingsphere/sql/parser/sqlserver/visitor/impl/SQLServerDMLVisitor.java\n\n@@ -471,7 +472,7 @@ public final class SQLServerDMLVisitor extends SQLServerVisitor implements DMLVi\n     }\n     \n     @Override\n-    public ASTNode visitSubquery(final SQLServerStatementParser.SubqueryContext ctx) {\n+    public ASTNode visitSubquery(final SubqueryContext ctx) {\n         return visit(ctx.unionClause());\n     }\n }\n"}}, {"oid": "cfd7b61dc878732fa19daa77193520a9dcad8f35", "url": "https://github.com/apache/shardingsphere/commit/cfd7b61dc878732fa19daa77193520a9dcad8f35", "message": "fix", "committedDate": "2020-04-21T08:29:17Z", "type": "commit"}]}