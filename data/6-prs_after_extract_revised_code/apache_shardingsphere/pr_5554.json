{"pr_number": 5554, "pr_title": "Improve unit test coverage of sharding-orchestration#etcd", "pr_createdAt": "2020-05-12T09:51:04Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5554", "timeline": [{"oid": "21f9620fbda3ac7ad36379a97d11a19b8f359d73", "url": "https://github.com/apache/shardingsphere/commit/21f9620fbda3ac7ad36379a97d11a19b8f359d73", "message": "add unit tests", "committedDate": "2020-05-09T10:25:57Z", "type": "commit"}, {"oid": "39960a5a7bd6e35ba460c676bbb4a963a8b8a8e2", "url": "https://github.com/apache/shardingsphere/commit/39960a5a7bd6e35ba460c676bbb4a963a8b8a8e2", "message": "Merge remote-tracking branch 'origin/master' into ut-etcd", "committedDate": "2020-05-11T02:33:48Z", "type": "commit"}, {"oid": "463271ebdca13c9efc753024d7532e08136ba7c2", "url": "https://github.com/apache/shardingsphere/commit/463271ebdca13c9efc753024d7532e08136ba7c2", "message": "unit test with exception", "committedDate": "2020-05-12T09:36:44Z", "type": "commit"}, {"oid": "9593d4ca8c227c637864ed479ad57e0fa759af13", "url": "https://github.com/apache/shardingsphere/commit/9593d4ca8c227c637864ed479ad57e0fa759af13", "message": "resolve checkstyle problems", "committedDate": "2020-05-12T09:42:10Z", "type": "commit"}, {"oid": "12b6823857fe5aa43e2b7547556e608619f23bac", "url": "https://github.com/apache/shardingsphere/commit/12b6823857fe5aa43e2b7547556e608619f23bac", "message": "Merge remote-tracking branch 'origin/master' into ut-etcd", "committedDate": "2020-05-12T09:44:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1Mzc3MQ==", "url": "https://github.com/apache/shardingsphere/pull/5554#discussion_r423753771", "bodyText": "assertTrue", "author": "kimmking", "createdAt": "2020-05-12T13:56:10Z", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdCenterRepositoryTest.java", "diffHunk": "@@ -163,4 +168,83 @@ public void assertDelete() {\n         centerRepository.delete(\"key\");\n         verify(kv).delete(ByteSequence.from(\"key\", Charsets.UTF_8));\n     }\n+    \n+    @Test\n+    public void assertPersist() {\n+        centerRepository.persist(\"key1\", \"value1\");\n+        verify(kv).put(any(ByteSequence.class), any(ByteSequence.class));\n+    }\n+    \n+    @Test\n+    public void assertClose() {\n+        centerRepository.close();\n+        verify(client).close();\n+    }\n+    \n+    @Test\n+    public void assertGetType() {\n+        assertThat(centerRepository.getType(), is(CENTER_TYPE));\n+    }\n+    \n+    @Test\n+    public void assertInit() {\n+        CenterConfiguration configuration = new CenterConfiguration(CENTER_TYPE);\n+        configuration.setServerLists(\"127.0.0.1\");\n+        Properties properties = new Properties();\n+        centerRepository.setProperties(properties);\n+        centerRepository.init(configuration);\n+        assertThat(centerRepository.getProperties(), is(properties));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetKeyWhenThrowInterruptedException() {\n+        doThrow(InterruptedException.class).when(getFuture).get();\n+        try {\n+            centerRepository.get(\"key\");\n+            // CHECKSTYLE:OFF\n+        } catch (final Exception ex) {\n+            // CHECKSTYLE:ON\n+            assertThat(ex instanceof InterruptedException, is(true));\n+        }\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetKeyWhenThrowExecutionException() {\n+        doThrow(ExecutionException.class).when(getFuture).get();\n+        try {\n+            centerRepository.get(\"key\");\n+            // CHECKSTYLE:OFF\n+        } catch (final Exception ex) {\n+            // CHECKSTYLE:ON\n+            assertThat(ex instanceof ExecutionException, is(true));\n+        }\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetChildrenKeysWhenThrowInterruptedException() {\n+        doThrow(InterruptedException.class).when(getFuture).get();\n+        try {\n+            centerRepository.getChildrenKeys(\"/key/key1\");\n+            // CHECKSTYLE:OFF\n+        } catch (final Exception ex) {\n+            // CHECKSTYLE:ON\n+            assertThat(ex instanceof InterruptedException, is(true));", "originalCommit": "12b6823857fe5aa43e2b7547556e608619f23bac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d3c51e07835308fc23fce34aab3c85fe930df2e", "chunk": "diff --git a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdCenterRepositoryTest.java b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdCenterRepositoryTest.java\nindex c68d072dfc..620257bd4d 100644\n--- a/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdCenterRepositoryTest.java\n+++ b/sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdCenterRepositoryTest.java\n\n@@ -187,12 +188,11 @@ public final class EtcdCenterRepositoryTest {\n     }\n     \n     @Test\n-    public void assertInit() {\n+    public void assertProperties() {\n         CenterConfiguration configuration = new CenterConfiguration(CENTER_TYPE);\n         configuration.setServerLists(\"127.0.0.1\");\n         Properties properties = new Properties();\n         centerRepository.setProperties(properties);\n-        centerRepository.init(configuration);\n         assertThat(centerRepository.getProperties(), is(properties));\n     }\n     \n"}}, {"oid": "5d3c51e07835308fc23fce34aab3c85fe930df2e", "url": "https://github.com/apache/shardingsphere/commit/5d3c51e07835308fc23fce34aab3c85fe930df2e", "message": "use assertTrue instead of assertThat", "committedDate": "2020-05-12T14:12:22Z", "type": "commit"}]}