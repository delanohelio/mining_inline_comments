{"pr_number": 2906, "pr_title": "Core - auto extension of members", "pr_createdAt": "2020-09-21T16:14:05Z", "pr_url": "https://github.com/CESNET/perun/pull/2906", "timeline": [{"oid": "4ea52a2095008bc8e3a091ccb022539ab39c6734", "url": "https://github.com/CESNET/perun/commit/4ea52a2095008bc8e3a091ccb022539ab39c6734", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-22T08:44:57Z", "type": "forcePushed"}, {"oid": "1ca3a9e664006d1d918efa9dc9de2ad07141061a", "url": "https://github.com/CESNET/perun/commit/1ca3a9e664006d1d918efa9dc9de2ad07141061a", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-22T08:55:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDI2Mg==", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493270262", "bodyText": "I am afraid string like ',1234' will pass through this regular expression.", "author": "stavamichal", "createdAt": "2020-09-23T07:49:29Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -23,12 +26,15 @@\n \tprivate static final Pattern datePattern = Pattern.compile(\"^[0-9]+([dmy])$\");\n \tprivate static final Pattern loaPattern = Pattern.compile(\"^(([0-9]+,)|([0-9]+,[ ]))*[0-9]+$\");\n \tprivate static final Pattern periodLoaPattern = Pattern.compile(\"^[0-9]+[|](([0-9]+[.][0-9]+[.])|([+][0-9]+([dmy])))[.]?$\");\n+\tprivate static final Pattern extSourcesPatter = Pattern.compile(\"^(\\\\d+)?(,\\\\d+)*$\");", "originalCommit": "1ca3a9e664006d1d918efa9dc9de2ad07141061a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMyMDc4NA==", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493320784", "bodyText": "You are right. I have added a test use case and fixed the problem.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-23T08:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDI2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1495d3018a630ba309034bdb85675f402cb8bab5", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\nindex 9d6b17da1..173b7ef15 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\n\n@@ -26,7 +26,7 @@ public abstract class AbstractMembershipExpirationRulesModule<T extends PerunBea\n \tprivate static final Pattern datePattern = Pattern.compile(\"^[0-9]+([dmy])$\");\n \tprivate static final Pattern loaPattern = Pattern.compile(\"^(([0-9]+,)|([0-9]+,[ ]))*[0-9]+$\");\n \tprivate static final Pattern periodLoaPattern = Pattern.compile(\"^[0-9]+[|](([0-9]+[.][0-9]+[.])|([+][0-9]+([dmy])))[.]?$\");\n-\tprivate static final Pattern extSourcesPatter = Pattern.compile(\"^(\\\\d+)?(,\\\\d+)*$\");\n+\tprivate static final Pattern extSourcesPatter = Pattern.compile(\"^(\\\\d+)(,\\\\d+)*$\");\n \n \tpublic static final String membershipGracePeriodKeyName = \"gracePeriod\";\n \tpublic static final String membershipPeriodKeyName = \"period\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDIxMg==", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493274212", "bodyText": "Wrong character for splitting. Tests should found it.", "author": "stavamichal", "createdAt": "2020-09-23T07:54:39Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -109,10 +115,48 @@ public void checkAttributeSyntax(PerunSessionImpl sess, T entity, Attribute attr\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\tparameter = autoExtensionLastLoginPeriod;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher dateMatcher = datePattern.matcher(attrValue.get(autoExtensionLastLoginPeriod));\n+\t\t\tif (!dateMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n+\n+\t\tparameter = autoExtensionExtSources;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher extSourcesMatcher = extSourcesPatter.matcher(attrValue.get(autoExtensionExtSources));\n+\t\t\tif (!extSourcesMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic void checkAttributeSemantics(PerunSessionImpl perunSession, T entity, Attribute attribute) {\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, T entity, Attribute attribute) throws WrongReferenceAttributeValueException {\n+\t\tMap<String, String> attrValue;\n+\n+\t\t//For no value is correct (it means no rules)\n+\t\tif(attribute.getValue() == null) return;\n+\n+\t\t//save value to map attrValue\n+\t\tattrValue = attribute.valueAsMap();\n+\n+\t\t//Same for empty HashList\n+\t\tif(attrValue.isEmpty()) return;\n \n+\t\tif (attrValue.containsKey(autoExtensionExtSources)) {\n+\t\t\tString[] extSourceIds = attrValue.get(autoExtensionExtSources).split(\"'\");", "originalCommit": "1ca3a9e664006d1d918efa9dc9de2ad07141061a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMyMDkwMw==", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493320903", "bodyText": "You are right. I have added a test use case and fixed the problem.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-23T08:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDIxMg=="}], "type": "inlineReview", "revised_code": {"commit": "1495d3018a630ba309034bdb85675f402cb8bab5", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\nindex 9d6b17da1..173b7ef15 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java\n\n@@ -148,7 +148,7 @@ public abstract class AbstractMembershipExpirationRulesModule<T extends PerunBea\n \t\tif(attrValue.isEmpty()) return;\n \n \t\tif (attrValue.containsKey(autoExtensionExtSources)) {\n-\t\t\tString[] extSourceIds = attrValue.get(autoExtensionExtSources).split(\"'\");\n+\t\t\tString[] extSourceIds = attrValue.get(autoExtensionExtSources).split(\",\");\n \t\t\tfor (String extSourceId : extSourceIds) {\n \t\t\t\ttry {\n \t\t\t\t\tsess.getPerunBl().getExtSourcesManagerBl().getExtSourceById(sess, Integer.parseInt(extSourceId));\n"}}, {"oid": "1495d3018a630ba309034bdb85675f402cb8bab5", "url": "https://github.com/CESNET/perun/commit/1495d3018a630ba309034bdb85675f402cb8bab5", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-23T08:40:05Z", "type": "forcePushed"}, {"oid": "c4a721c3370cadc5e4a30408c5d3df3f6aa2109c", "url": "https://github.com/CESNET/perun/commit/c4a721c3370cadc5e4a30408c5d3df3f6aa2109c", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-23T08:41:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3OTAwMQ==", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493479001", "bodyText": "\"?\" quantifier seems to be unnecessary.", "author": "balcirakpeter", "createdAt": "2020-09-23T11:31:43Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "diffHunk": "@@ -1514,6 +1514,36 @@ public static LocalDate extendDateByPeriod(LocalDate localDate, String period) {\n \t\t}\n \t}\n \n+\t/**\n+\t * Shortens the given date by the given period.\n+\t *\n+\t * @param localDate date to be shortened\n+\t * @param period string of format ([0-9]+)([dmy]?)\n+\t * @return shortened date\n+\t */\n+\tpublic static LocalDate shortenDateByPeriod(LocalDate localDate, String period) {\n+\t\tPattern p = Pattern.compile(\"([0-9]+)([dmy]?)\");", "originalCommit": "c4a721c3370cadc5e4a30408c5d3df3f6aa2109c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3f34407317ae4aa6337e1e022cda1c25ea1e69d8", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java\nindex 876012dfb..f41a44739 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java\n\n@@ -1518,11 +1518,11 @@ public class Utils {\n \t * Shortens the given date by the given period.\n \t *\n \t * @param localDate date to be shortened\n-\t * @param period string of format ([0-9]+)([dmy]?)\n+\t * @param period string of format ([0-9]+)([dmy])\n \t * @return shortened date\n \t */\n \tpublic static LocalDate shortenDateByPeriod(LocalDate localDate, String period) {\n-\t\tPattern p = Pattern.compile(\"([0-9]+)([dmy]?)\");\n+\t\tPattern p = Pattern.compile(\"([0-9]+)([dmy])\");\n \t\tMatcher m = p.matcher(period);\n \t\tif (m.matches()) {\n \t\t\tString countString = m.group(1);\n"}}, {"oid": "3f34407317ae4aa6337e1e022cda1c25ea1e69d8", "url": "https://github.com/CESNET/perun/commit/3f34407317ae4aa6337e1e022cda1c25ea1e69d8", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-24T06:29:56Z", "type": "commit"}, {"oid": "3f34407317ae4aa6337e1e022cda1c25ea1e69d8", "url": "https://github.com/CESNET/perun/commit/3f34407317ae4aa6337e1e022cda1c25ea1e69d8", "message": "Core - auto extension of members\n\n* The vo's memberExpirationRules attribute can now have two new values\nwhich can be used to automatically extend its members.\n* The value of `autoExtensionLastLoginPeriod` has format `^[0-9]+([dmy])$`.\nIf any user has accessed the Perun at this period at the latest, he\nwill be extended by the vo's rules, if they have the `period` defined.\n* The value of `autoExtensionExtSources` has format of extSource ids\nsplit by commas - `^(\\d+)?(,\\d+)*$`. If these ids are specified, they\nwill be used to limit the extSources used to check the last access.", "committedDate": "2020-09-24T06:29:56Z", "type": "forcePushed"}]}