{"pr_number": 2707, "pr_title": "CORE: Check that Member and Group are from the same VO", "pr_createdAt": "2020-05-19T05:55:23Z", "pr_url": "https://github.com/CESNET/perun/pull/2707", "timeline": [{"oid": "7ae3c252f2bb0997e1ad9309a863718ea8761f1a", "url": "https://github.com/CESNET/perun/commit/7ae3c252f2bb0997e1ad9309a863718ea8761f1a", "message": "CORE: Added check on same VO origin in member-group methods\n\n- As we have multiple checks on same VO origin when working\n  with group-resource or member-resource methods, we were missing\n  check on member-group methods. A few implemented own check.\n- New check method was added in AttributesManagerBl and is generally\n  used when working with member-group attributes, exception then\n  propagates into other managers, where its usually considered as\n  (converted to) InternalErrorException or ConsistencyErrorException.\n- Fixed test which were using members and groups from different vos.", "committedDate": "2020-05-19T05:35:01Z", "type": "commit"}, {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778", "url": "https://github.com/CESNET/perun/commit/3ec3eb111cbc6b3c7b4cf8397b163af101a7d778", "message": "REGISTRAR: Fixed test for member vo matches group vo", "committedDate": "2020-05-19T05:48:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExNzQ1Nw==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427117457", "bodyText": "You should remove this comment.", "author": "stavamichal", "createdAt": "2020-05-19T08:22:00Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java", "diffHunk": "@@ -5607,7 +5607,8 @@ public void testUniqAttributes() throws Exception {\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase \"member_group\":\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, group1InVo1, a);\n-\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);\n+\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, group2InVo1, b);\n+\t\t\t\t\t\t\t//attributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);", "originalCommit": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODg5Mw==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427148893", "bodyText": "Fixed.", "author": "zlamalp", "createdAt": "2020-05-19T09:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExNzQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0df8491153f9b6a498df50a8104715cda9e02afc", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\nindex 5821c3700..e970f469c 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\n\n@@ -5608,7 +5608,6 @@ public class AttributesManagerEntryIntegrationTestAbstract extends AbstractPerun\n \t\t\t\t\t\tcase \"member_group\":\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, group1InVo1, a);\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, group2InVo1, b);\n-\t\t\t\t\t\t\t//attributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase \"user_facility\":\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, facility1, user1, a);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427118992", "bodyText": "Why are you adding exception MemberGroupMismatchException to the methods, where is no control of it?", "author": "stavamichal", "createdAt": "2020-05-19T08:24:17Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "originalCommit": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0NTg0MQ==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427145841", "bodyText": "Its enforced by the calling getAttributes(sess, member, group) within the method, but you are right that we should check it, since for the case of non-empty attrNames it wouldn't be checked at all.", "author": "zlamalp", "createdAt": "2020-05-19T09:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODk0Ng==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427148946", "bodyText": "Fixed.", "author": "zlamalp", "createdAt": "2020-05-19T09:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NjQzNQ==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427156435", "bodyText": "It is not just in this method. So it was more a rhetorical question. If they need to have this check just because of under-layer method, then it is ok.", "author": "stavamichal", "createdAt": "2020-05-19T09:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NzU2OA==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427157568", "bodyText": "Ok. I'll check other methods, to be sure check is not skipped like it was there.", "author": "zlamalp", "createdAt": "2020-05-19T09:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0df8491153f9b6a498df50a8104715cda9e02afc", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 1888e130c..9d08e6cad 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -364,6 +364,7 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \t@Override\n \tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {\n \t\tcheckGroupIsFromTheSameVoLikeResource(sess, group, resource);\n+\t\tcheckMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \t\tList<Attribute> attributes = getAttributes(sess, member, resource, attrNames, workWithUserAttributes);\n \n \t\tif (attrNames.isEmpty()) {\n"}}, {"oid": "0df8491153f9b6a498df50a8104715cda9e02afc", "url": "https://github.com/CESNET/perun/commit/0df8491153f9b6a498df50a8104715cda9e02afc", "message": "CORE: Added check on member-group mismatch to getAttributes()\n\n- getAttributes(group,member,resource,attrNames,workWithUserAttributes)\n  now explicitly checks on member-group mismatch. It previously\n  checked only in the case, that attrNames were empty (using\n  subsequent call to getAttributes(member,group).\n  Now we check it at the method start.\n- Removed forgotten comment from the tests.", "committedDate": "2020-05-19T09:08:27Z", "type": "commit"}, {"oid": "97e78bcf8b6c96916534402f3229a92a35ac1a3e", "url": "https://github.com/CESNET/perun/commit/97e78bcf8b6c96916534402f3229a92a35ac1a3e", "message": "CORE: Added more member-group checks and improved RPC javadoc\n\n- We now check member-group relation also for getAttributeById()\n- Added some necessary exceptions in the RPC javadoc of changed\n  methods. Overall whole RPC javadoc of AttributesManager should\n  be improved.", "committedDate": "2020-05-19T10:26:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2OTc4Ng==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r428569786", "bodyText": "I think you can move the check before the if.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T10:24:10Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3499,28 +3515,31 @@ public void checkAttributesSemantics(PerunSession sess, Member member, Resource\n \t}\n \n \t@Override\n-\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException {\n+\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException, MemberGroupMismatchException {\n+\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \t\tgetAttributesManagerImpl().checkNamespace(sess, attribute, NS_MEMBER_GROUP_ATTR);\n \n \t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) return;\n \t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tcheckAttributesSemantics(sess, member, group, attributes, false);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tif (!workWithUserAttributes) {\n \t\t\tgetAttributesManagerImpl().checkNamespace(sess, attributes, NS_MEMBER_GROUP_ATTR);\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \n \t\t\tfor (Attribute attribute : attributes) {\n \t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) continue;\n \t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t\t\t}\n \t\t} else {\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);", "originalCommit": "97e78bcf8b6c96916534402f3229a92a35ac1a3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4NzMyNw==", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r428787327", "bodyText": "Thanks for noticing, I fixed it and added lazy loading of user object for later checks.", "author": "zlamalp", "createdAt": "2020-05-21T17:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2OTc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "86a2bae8f69fe31f11fb5533cd64b2d2638c600d", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 4a75af07a..3a241e17c 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -3530,24 +3530,25 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \n \t@Override\n \tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n+\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \t\tif (!workWithUserAttributes) {\n \t\t\tgetAttributesManagerImpl().checkNamespace(sess, attributes, NS_MEMBER_GROUP_ATTR);\n-\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \n \t\t\tfor (Attribute attribute : attributes) {\n \t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) continue;\n \t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t\t\t}\n \t\t} else {\n-\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n-\t\t\tUser user = getPerunBl().getUsersManagerBl().getUserByMember(sess, member);\n \n+\t\t\tUser user = null;\n \t\t\tfor (Attribute attribute : attributes) {\n \t\t\t\tif (getAttributesManagerImpl().isFromNamespace(attribute, AttributesManager.NS_MEMBER_GROUP_ATTR)) {\n \t\t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute))\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t\t\t\t} else if (getAttributesManagerImpl().isFromNamespace(attribute, AttributesManager.NS_USER_ATTR)) {\n+\t\t\t\t\t// lazy load user\n+\t\t\t\t\tif (user == null) user = getPerunBl().getUsersManagerBl().getUserByMember(sess, member);\n \t\t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, user, attribute)) continue;\n \t\t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, user, attribute);\n \t\t\t\t} else if (getAttributesManagerImpl().isFromNamespace(attribute, AttributesManager.NS_MEMBER_ATTR)) {\n"}}, {"oid": "86a2bae8f69fe31f11fb5533cd64b2d2638c600d", "url": "https://github.com/CESNET/perun/commit/86a2bae8f69fe31f11fb5533cd64b2d2638c600d", "message": "CORE: Removed code duplicity in checkAttributeSemantics()\n\n- We can have check on same vo for member and group at the method\n  start and not twice inside both branches of IF later.\n- Lazy load user object to save up 1 query if we don't pass\n  user attributes to the method.", "committedDate": "2020-05-21T17:00:54Z", "type": "commit"}]}