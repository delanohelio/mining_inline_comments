{"pr_number": 2847, "pr_title": "New method to convert unique attribute to nonunique", "pr_createdAt": "2020-08-11T11:59:44Z", "pr_url": "https://github.com/CESNET/perun/pull/2847", "timeline": [{"oid": "1de4e83dce0fb059756f73b387eb1266a36b415d", "url": "https://github.com/CESNET/perun/commit/1de4e83dce0fb059756f73b387eb1266a36b415d", "message": "New method to convert unique attribute to nonunique\n\n- new method convertAttributeToNonunique converts unique attribute to nonunique by setting uniqueness flag in attribute definition to false and removing values of attribute from table _attr_u_values which has unique constraint\n- convertAttributeToNonunique was added to all layers of Perun including rpc and openapi, also added test\n- updateAttributeDefinition fixed to update uniqueness of attribute definition (and not just set it to true)\n- method convertAttributeToUnique also added to openapi\n- removed forgotten debugging of convertAttributeToUnique method", "committedDate": "2020-08-11T11:58:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0MzI5NQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469043295", "bodyText": "If methods making a conversion to unique and back should work the same way, they both should do the same thing for attributes in the wrong state. I would suggest to create a new exception \"AttributeNotMarkedUniqueException\" and throw it here.", "author": "stavamichal", "createdAt": "2020-08-12T06:54:10Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -8116,10 +8116,19 @@ public void convertAttributeToUnique(PerunSession session, int attrId) throws At\n \t\tlog.info(\"converting attribute {} to unique\",attrDef.getName());\n \t\tattrDef.setUnique(true);\n \t\tthis.updateAttributeDefinition(session, attrDef);\n-\t\tlong startTime = System.currentTimeMillis();\n+\n \t\tattributesManagerImpl.convertAttributeValuesToUnique(session, attrDef);\n-\t\tlong endTime = System.currentTimeMillis();\n-\t\tlog.debug(\"Attribute {} was converted to unique in {} ms\",attrDef.getName(),(endTime-startTime));\n+\t}\n+\n+\t@Override\n+\tpublic void convertAttributeToNonunique(PerunSession session, int attrId) throws AttributeNotExistsException {\n+\t\tAttributeDefinition attrDef = getAttributeDefinitionById(session, attrId);\n+\t\tif(!attrDef.isUnique()) return;", "originalCommit": "1de4e83dce0fb059756f73b387eb1266a36b415d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2Mzc5OQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469763799", "bodyText": "Ok, added.", "author": "metodej", "createdAt": "2020-08-13T07:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0MzI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 8421c9dbb..7ff07262d 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -8121,14 +8122,14 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \t}\n \n \t@Override\n-\tpublic void convertAttributeToNonunique(PerunSession session, int attrId) throws AttributeNotExistsException {\n+\tpublic int convertAttributeToNonunique(PerunSession session, int attrId) throws AttributeNotExistsException, AttributeNotMarkedUniqueException {\n \t\tAttributeDefinition attrDef = getAttributeDefinitionById(session, attrId);\n-\t\tif(!attrDef.isUnique()) return;\n+\t\tif(!attrDef.isUnique()) throw new AttributeNotMarkedUniqueException(\"Cannot convert attribute because it is already marked as unique\", attrDef);\n \t\tlog.info(\"converting unique attribute {} to nonunique\",attrDef.getName());\n \t\tattrDef.setUnique(false);\n \t\tthis.updateAttributeDefinition(session, attrDef);\n \n-\t\tattributesManagerImpl.convertAttributeValuesToNonunique(session, attrDef);\n+\t\treturn attributesManagerImpl.convertAttributeValuesToNonunique(session, attrDef);\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0NjgyNg==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469046826", "bodyText": "For this exception, I would not use this kind of specific message, because you can't be sure what is really set in the policy and if anyone changes the policy, this text would be misleading. Use more generic message like:\nthrow new PrivilegeException(sess, \"convertAttributeToNonunique\");", "author": "stavamichal", "createdAt": "2020-08-12T07:01:50Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/AttributesManagerEntry.java", "diffHunk": "@@ -4522,6 +4522,18 @@ public void convertAttributeToUnique(PerunSession session, int attrId) throws Pr\n \t\tgetAttributesManagerBl().convertAttributeToUnique(session, attrId);\n \t}\n \n+\t@Override\n+\tpublic void convertAttributeToNonunique(PerunSession session, int attrId) throws PrivilegeException, AttributeNotExistsException {\n+\t\tUtils.checkPerunSession(session);\n+\n+\t\t// Authorization\n+\t\tif(!AuthzResolver.authorizedInternal(session, \"convertAttributeToNonunique_int_policy\")) {\n+\t\t\tthrow new PrivilegeException(\"This operation can do only PerunAdmin.\");", "originalCommit": "1de4e83dce0fb059756f73b387eb1266a36b415d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2NDE5NA==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469764194", "bodyText": "Ok, fixed (even in convertAttributeToUnique).", "author": "metodej", "createdAt": "2020-08-13T07:53:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0NjgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/AttributesManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/AttributesManagerEntry.java\nindex efba627e4..c7b614a22 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/AttributesManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/AttributesManagerEntry.java\n\n@@ -4516,19 +4517,19 @@ public class AttributesManagerEntry implements AttributesManager {\n \n \t\t// Authorization\n \t\tif(!AuthzResolver.authorizedInternal(session, \"convertAttributeToUnique_int_policy\")) {\n-\t\t\tthrow new PrivilegeException(\"This operation can do only PerunAdmin.\");\n+\t\t\tthrow new PrivilegeException(session, \"convertAttributeToUnique\");\n \t\t}\n \n \t\tgetAttributesManagerBl().convertAttributeToUnique(session, attrId);\n \t}\n \n \t@Override\n-\tpublic void convertAttributeToNonunique(PerunSession session, int attrId) throws PrivilegeException, AttributeNotExistsException {\n+\tpublic void convertAttributeToNonunique(PerunSession session, int attrId) throws PrivilegeException, AttributeNotExistsException, AttributeNotMarkedUniqueException {\n \t\tUtils.checkPerunSession(session);\n \n \t\t// Authorization\n \t\tif(!AuthzResolver.authorizedInternal(session, \"convertAttributeToNonunique_int_policy\")) {\n-\t\t\tthrow new PrivilegeException(\"This operation can do only PerunAdmin.\");\n+\t\t\tthrow new PrivilegeException(session, \"convertAttributeToNonunique\");\n \t\t}\n \n \t\tgetAttributesManagerBl().convertAttributeToNonunique(session, attrId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1Mzc5NA==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469053794", "bodyText": "I am thinking about the way how to check that all expected values were removed. What about changing the behavior of both IMPL and BL methods for conversion to return a number of rows added or deleted? Then this could be at least tested in tests. What do you think?", "author": "stavamichal", "createdAt": "2020-08-12T07:16:34Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/AttributesManagerImplApi.java", "diffHunk": "@@ -2601,4 +2601,9 @@\n \t * Copies all values of the attribute to table _attr_u_values which has unique constraint.\n \t */\n \tvoid convertAttributeValuesToUnique(PerunSession session, AttributeDefinition attrDef);\n+\n+\t/**\n+\t * Deletes all values of the attribute from table _attr_u_values which has unique constraint.\n+\t */\n+\tvoid convertAttributeValuesToNonunique(PerunSession session, AttributeDefinition attrDef);", "originalCommit": "1de4e83dce0fb059756f73b387eb1266a36b415d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2NjU3NQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r469766575", "bodyText": "Yes, that sounds nice, I've already tested it manually, because the test already in use basically tests only the change of the attribute to unique/nonunique state... So I've added one more that checks exactly how many rows were changed.", "author": "metodej", "createdAt": "2020-08-13T07:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1Mzc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/AttributesManagerImplApi.java b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/AttributesManagerImplApi.java\nindex cce87ef54..0f865d507 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/AttributesManagerImplApi.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/AttributesManagerImplApi.java\n\n@@ -2603,7 +2603,7 @@ public interface AttributesManagerImplApi {\n \tvoid convertAttributeValuesToUnique(PerunSession session, AttributeDefinition attrDef);\n \n \t/**\n-\t * Deletes all values of the attribute from table _attr_u_values which has unique constraint.\n+\t * Deletes all values of the attribute from table _attr_u_values which has unique constraint. And returns how many rows were deleted.\n \t */\n-\tvoid convertAttributeValuesToNonunique(PerunSession session, AttributeDefinition attrDef);\n+\tint convertAttributeValuesToNonunique(PerunSession session, AttributeDefinition attrDef);\n }\n"}}, {"oid": "41ea24c00460ee0099016458a859bdf8787ee8c7", "url": "https://github.com/CESNET/perun/commit/41ea24c00460ee0099016458a859bdf8787ee8c7", "message": "Changes based on review\n\n- used more generic message when throwing PrivilegeException (even in convertAttributeToUnique)\n- attribute that is not marked unique is no longer skipped, instead new exception AttributeNotMarkedUniqueException is thrown\n- impl and bl methods now return how many rows were deleted from unique table, new test was created to test this and it was also implemented to existing test", "committedDate": "2020-08-13T07:49:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzNTI3Mg==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470435272", "bodyText": "@stavamichal Do we really want to delete all values when doing this conversion? Couldn't we just move those values to a different table? I understand that when you do the opposite conversion, you have to remove the old values because there could be duplicates. But in this direction, I think it is not necessary.", "author": "Vojtech-Sassmann", "createdAt": "2020-08-14T06:31:01Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java", "diffHunk": "@@ -4519,6 +4515,16 @@ public void convertAttributeValuesToUnique(PerunSession session, AttributeDefini\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic int convertAttributeValuesToNonunique(PerunSession session, AttributeDefinition attrDef) {\n+\t\tString tablePrefix = attributeToTablePrefix(attrDef);\n+\t\ttry {\n+\t\t\treturn jdbc.update(\"DELETE FROM \" + tablePrefix + \"_attr_u_values WHERE attr_id=?\", attrDef.getId());", "originalCommit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ0Mjc2Mg==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470442762", "bodyText": "Unique attributes has values in both tables \"_attr_values\" and \"_attr_u_vaues\". So yes, you need to delete them. If you let them here, you can have a big problem when you want to convert attribute to unique again. There will be inconsistency in data.", "author": "stavamichal", "createdAt": "2020-08-14T06:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzNTI3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ0NDA1OQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470444059", "bodyText": "I see. I thought they are only in this table. Thanks for your explanation.", "author": "Vojtech-Sassmann", "createdAt": "2020-08-14T06:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzNTI3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzOTY0OA==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470439648", "bodyText": "Hi @metodej, It is a good practice that each test is testing only one thing. For example, you would have one test to test the conversion of a string attribute, one for a list attribute etc. If you test multiple scenarios in one test, one has to debug what has actually gone wrong. If this test would fail, it isn't easy to understand why, because the test itself is long and with two for loops and two switches.\nTo write multiple tests, you wouldn't even have to duplicate the code. You could write a private test method that would contain the shared code, and you could pass some arguments to this method, which would differ for different scenarios.\nIf you would decide to rewrite this and had some trouble, just write to me and we will figure something out.", "author": "Vojtech-Sassmann", "createdAt": "2020-08-14T06:43:32Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java", "diffHunk": "@@ -5499,6 +5499,158 @@ public void testConvertingToUniqAttribute() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testConvertingToNonuniqAttribute() throws Exception {", "originalCommit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0OTExNQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r471349115", "bodyText": "Ok, so I broke down the for cycle that iterated by types into several tests each testing one type and also moved duplicate code to private methods used by these parts.", "author": "metodej", "createdAt": "2020-08-17T09:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzOTY0OA=="}], "type": "inlineReview", "revised_code": {"commit": "24299f2321b6e08099c10d47589eeb4ed0428d6b", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\nindex 9de53bb66..a0ce3f0a7 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java\n\n@@ -5503,142 +5503,15 @@ public class AttributesManagerEntryIntegrationTestAbstract extends AbstractPerun\n \tpublic void testConvertingToNonuniqAttribute() throws Exception {\n \t\tSystem.out.println(CLASS_NAME + \"testConvertingToNonuniqAttribute\");\n \t\tattributesManagerBl = getTargetObject(perun.getAttributesManagerBl());\n-\t\tint counter = 1;\n-\t\tfor (String bean : AttributesManagerImpl.BEANS_TO_NAMESPACES_MAP.keySet()) {\n-\n-\t\t\t//entityless attributes cannot be unique, no need for conversion\n-\t\t\tif (bean.equals(\"entityless\")) continue;\n \n-\t\t\tfor (String type : AttributesManagerImpl.ATTRIBUTE_TYPES) {\n-\t\t\t\t//large string and large array are unsupported types for uniqueness\n-\n-\t\t\t\tlog.debug(\"conversion to unique bean {} type {}\", bean, type);\n-\t\t\t\tString namespace = AttributesManagerImpl.BEANS_TO_NAMESPACES_MAP.get(bean) + \":def\";\n-\t\t\t\tString friendlyName = \"test-conv-attr\" + (counter++);\n-\t\t\t\tString description = \"poznamka\";\n-\t\t\t\tAttributeDefinition attrDef = new AttributeDefinition();\n-\t\t\t\tattrDef.setUnique(true);\n-\t\t\t\tattrDef.setFriendlyName(friendlyName);\n-\t\t\t\tattrDef.setNamespace(namespace);\n-\t\t\t\tattrDef.setDescription(description);\n-\t\t\t\tattrDef.setType(type);\n-\t\t\t\tattributesManager.createAttribute(sess, attrDef);\n-\t\t\t\tAttributeDefinition attributeDefinition = attributesManager.getAttributeDefinition(sess, namespace + \":\" + friendlyName);\n-\t\t\t\tassertTrue(\"attribute is not marked unique\", attributeDefinition.isUnique());\n-\t\t\t\tassertEquals(\"friendly name not loaded correctly\", friendlyName, attributeDefinition.getFriendlyName());\n-\t\t\t\tassertEquals(\"namespace not loaded correctly\", namespace, attributeDefinition.getNamespace());\n-\t\t\t\tassertEquals(\"description not loaded correctly\", description, attributeDefinition.getDescription());\n-\n-\t\t\t\t//create values\n-\t\t\t\tAttribute a = new Attribute(attributeDefinition);\n-\t\t\t\tAttribute b = new Attribute(attributeDefinition);\n-\t\t\t\tswitch (type) {\n-\t\t\t\t\tcase \"java.lang.String\":\n-\t\t\t\t\tcase BeansUtils.largeStringClassName:\n-\t\t\t\t\t\ta.setValue(\"string1\");\n-\t\t\t\t\t\tb.setValue(\"string2\");\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"java.lang.Integer\":\n-\t\t\t\t\t\ta.setValue(Integer.MIN_VALUE);\n-\t\t\t\t\t\tb.setValue(Integer.MAX_VALUE);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"java.lang.Boolean\":\n-\t\t\t\t\t\ta.setValue(Boolean.FALSE);\n-\t\t\t\t\t\tb.setValue(Boolean.TRUE);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"java.util.ArrayList\":\n-\t\t\t\t\tcase BeansUtils.largeArrayListClassName:\n-\t\t\t\t\t\ta.setValue(new ArrayList<>(Arrays.asList(\"value1\",\"value2\")));\n-\t\t\t\t\t\tb.setValue(new ArrayList<>(Arrays.asList(\"value3\",\"value4\")));\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"java.util.LinkedHashMap\":\n-\t\t\t\t\t\tLinkedHashMap<String,String> m1 = new LinkedHashMap<>();\n-\t\t\t\t\t\tm1.put(\"k1\",\"v1\");\n-\t\t\t\t\t\tm1.put(\"k2\",\"v2\");\n-\t\t\t\t\t\tLinkedHashMap<String,String> m2 = new LinkedHashMap<>();\n-\t\t\t\t\t\tm2.put(\"k4\",\"v4\");\n-\t\t\t\t\t\tm2.put(\"k3\",\"v3\");\n-\t\t\t\t\t\ta.setValue(m1);\n-\t\t\t\t\t\tb.setValue(m2);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t\tthrow new Exception(\"unknown type \"+type);\n-\t\t\t\t}\n-\t\t\t\tswitch (bean) {\n-\t\t\t\t\tcase \"user\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, user1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, user2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"member\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser1, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"facility\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, facility1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, facility2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"vo\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, vo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, vo2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"host\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, host1OnFacility1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, host2OnFacility2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"group\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, group1InVo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, group2InVo2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"resource\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, resource1InVo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, resource2InVo2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"member_resource\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, resource1InVo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, resource2InVo1, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"member_group\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, group1InVo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, group2InVo1, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"user_facility\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, facility1, user1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, facility2, user2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"group_resource\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, resource1InVo1, group1InVo1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, resource2InVo2, group2InVo2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase \"user_ext_source\":\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, userExtSource1, a);\n-\t\t\t\t\t\tattributesManager.setAttribute(sess, userExtSource2, b);\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t\tthrow new Exception(\"unknown entity \"+bean);\n-\t\t\t\t}\n-\t\t\t\tint rowsChanged = attributesManagerBl.convertAttributeToNonunique(sess, attributeDefinition.getId());\n-\t\t\t\tassertFalse(attributesManager.getAttributeDefinition(sess, attributeDefinition.getName()).isUnique());\n-\t\t\t\tassertTrue(rowsChanged > 0);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t@Test\n-\tpublic void testConvertingToNonuniqAttributeExactlyRowsDeleted() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"testConvertingToNonuniqAttributeExactlyRowsDeleted\");\n-\t\tattributesManagerBl = getTargetObject(perun.getAttributesManagerBl());\n-\n-\t\tString namespace = AttributesManager.NS_USER_ATTR_DEF;\n-\t\tString friendlyName = \"test-conv-attr\";\n-\t\tString description = \"poznamka\";\n \t\tAttributeDefinition attrDef = new AttributeDefinition();\n \t\tattrDef.setUnique(true);\n-\t\tattrDef.setFriendlyName(friendlyName);\n-\t\tattrDef.setNamespace(namespace);\n-\t\tattrDef.setDescription(description);\n+\t\tattrDef.setFriendlyName(\"test-conv-attr\");\n+\t\tattrDef.setNamespace(AttributesManager.NS_USER_ATTR_DEF);\n+\t\tattrDef.setDescription(\"poznamka\");\n \t\tattrDef.setType(String.class.getName());\n \t\tattributesManager.createAttribute(sess, attrDef);\n-\t\tattrDef = attributesManager.getAttributeDefinition(sess, namespace + \":\" + friendlyName);\n+\t\tattrDef = attributesManager.getAttributeDefinition(sess, attrDef.getName());\n \n \t\tAttribute a = new Attribute(attrDef);\n \t\tAttribute b = new Attribute(attrDef);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1Mzk3NA==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470453974", "bodyText": "Exception message should state non unique at the end.", "author": "zlamalp", "createdAt": "2020-08-14T07:21:43Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -8116,10 +8117,19 @@ public void convertAttributeToUnique(PerunSession session, int attrId) throws At\n \t\tlog.info(\"converting attribute {} to unique\",attrDef.getName());\n \t\tattrDef.setUnique(true);\n \t\tthis.updateAttributeDefinition(session, attrDef);\n-\t\tlong startTime = System.currentTimeMillis();\n+\n \t\tattributesManagerImpl.convertAttributeValuesToUnique(session, attrDef);\n-\t\tlong endTime = System.currentTimeMillis();\n-\t\tlog.debug(\"Attribute {} was converted to unique in {} ms\",attrDef.getName(),(endTime-startTime));\n+\t}\n+\n+\t@Override\n+\tpublic int convertAttributeToNonunique(PerunSession session, int attrId) throws AttributeNotExistsException, AttributeNotMarkedUniqueException {\n+\t\tAttributeDefinition attrDef = getAttributeDefinitionById(session, attrId);\n+\t\tif(!attrDef.isUnique()) throw new AttributeNotMarkedUniqueException(\"Cannot convert attribute because it is already marked as unique\", attrDef);", "originalCommit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0OTI4Mg==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r471349282", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-08-17T09:17:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1Mzk3NA=="}], "type": "inlineReview", "revised_code": {"commit": "24299f2321b6e08099c10d47589eeb4ed0428d6b", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 7ff07262d..20dad97e5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -8124,7 +8124,7 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \t@Override\n \tpublic int convertAttributeToNonunique(PerunSession session, int attrId) throws AttributeNotExistsException, AttributeNotMarkedUniqueException {\n \t\tAttributeDefinition attrDef = getAttributeDefinitionById(session, attrId);\n-\t\tif(!attrDef.isUnique()) throw new AttributeNotMarkedUniqueException(\"Cannot convert attribute because it is already marked as unique\", attrDef);\n+\t\tif(!attrDef.isUnique()) throw new AttributeNotMarkedUniqueException(\"Cannot convert attribute because it is already marked as nonunique\", attrDef);\n \t\tlog.info(\"converting unique attribute {} to nonunique\",attrDef.getName());\n \t\tattrDef.setUnique(false);\n \t\tthis.updateAttributeDefinition(session, attrDef);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1NTgzMw==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470455833", "bodyText": "We do not mention PriviligeException in RPC docs, since its automatically added by docs parsing too.", "author": "zlamalp", "createdAt": "2020-08-14T07:26:09Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java", "diffHunk": "@@ -3974,6 +3975,25 @@ public Void call(ApiCaller ac, Deserializer parms) throws AttributeAlreadyMarked\n \t\t}\n \t},\n \n+\t/*#\n+\t * Converts attribute to nonunique - unmarks unique flag from attribute definition, and deletes all values\n+\t * from a special table with unique constraint that ensures that all values remain unique.\n+\t * Already nonunique attribute is skipped.\n+\t *\n+\t * @param attrDefId int AttributeDefinition <code>id</code>\n+\t * @throw PrivilegeException Insufficient permissions.", "originalCommit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0OTQ0Nw==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r471349447", "bodyText": "Removed.", "author": "metodej", "createdAt": "2020-08-17T09:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1NTgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "24299f2321b6e08099c10d47589eeb4ed0428d6b", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\nindex 93255702e..f74309a96 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\n\n@@ -3978,10 +3978,8 @@ public enum AttributesManagerMethod implements ManagerMethod {\n \t/*#\n \t * Converts attribute to nonunique - unmarks unique flag from attribute definition, and deletes all values\n \t * from a special table with unique constraint that ensures that all values remain unique.\n-\t * Already nonunique attribute is skipped.\n \t *\n \t * @param attrDefId int AttributeDefinition <code>id</code>\n-\t * @throw PrivilegeException Insufficient permissions.\n \t * @throw AttributeNotExistsException When Attribute with <code>id</code> doesn't exist.\n \t * @throw AttributeNotMarkedUniqueException When Attribute with <code>id</code> is not unique.\n \t */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1NjU4Mg==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r470456582", "bodyText": "I don't think that Already nonunique attribute is skipped. sentence is true. I think, that exception is thrown instead.", "author": "zlamalp", "createdAt": "2020-08-14T07:27:51Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java", "diffHunk": "@@ -3974,6 +3975,25 @@ public Void call(ApiCaller ac, Deserializer parms) throws AttributeAlreadyMarked\n \t\t}\n \t},\n \n+\t/*#\n+\t * Converts attribute to nonunique - unmarks unique flag from attribute definition, and deletes all values\n+\t * from a special table with unique constraint that ensures that all values remain unique.\n+\t * Already nonunique attribute is skipped.", "originalCommit": "41ea24c00460ee0099016458a859bdf8787ee8c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM1MDEzNQ==", "url": "https://github.com/CESNET/perun/pull/2847#discussion_r471350135", "bodyText": "Removed.", "author": "metodej", "createdAt": "2020-08-17T09:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1NjU4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "24299f2321b6e08099c10d47589eeb4ed0428d6b", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\nindex 93255702e..f74309a96 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AttributesManagerMethod.java\n\n@@ -3978,10 +3978,8 @@ public enum AttributesManagerMethod implements ManagerMethod {\n \t/*#\n \t * Converts attribute to nonunique - unmarks unique flag from attribute definition, and deletes all values\n \t * from a special table with unique constraint that ensures that all values remain unique.\n-\t * Already nonunique attribute is skipped.\n \t *\n \t * @param attrDefId int AttributeDefinition <code>id</code>\n-\t * @throw PrivilegeException Insufficient permissions.\n \t * @throw AttributeNotExistsException When Attribute with <code>id</code> doesn't exist.\n \t * @throw AttributeNotMarkedUniqueException When Attribute with <code>id</code> is not unique.\n \t */\n"}}, {"oid": "24299f2321b6e08099c10d47589eeb4ed0428d6b", "url": "https://github.com/CESNET/perun/commit/24299f2321b6e08099c10d47589eeb4ed0428d6b", "message": "Changes based on review\n\n- tests simplified\n- fixed name of parameter in openapi\n- fixed typos in messages and javadoc", "committedDate": "2020-08-17T11:36:13Z", "type": "forcePushed"}, {"oid": "4771386735c6e99d62ccb0f50cc6a05c88f8ad36", "url": "https://github.com/CESNET/perun/commit/4771386735c6e99d62ccb0f50cc6a05c88f8ad36", "message": "Changes based on review\n\n- tests simplified\n- fixed name of parameter in openapi\n- fixed typos in messages and javadoc", "committedDate": "2020-08-19T08:50:48Z", "type": "commit"}, {"oid": "4771386735c6e99d62ccb0f50cc6a05c88f8ad36", "url": "https://github.com/CESNET/perun/commit/4771386735c6e99d62ccb0f50cc6a05c88f8ad36", "message": "Changes based on review\n\n- tests simplified\n- fixed name of parameter in openapi\n- fixed typos in messages and javadoc", "committedDate": "2020-08-19T08:50:48Z", "type": "forcePushed"}]}