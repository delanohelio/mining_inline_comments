{"pr_number": 3009, "pr_title": "Methods for getting list of entities by their IDs", "pr_createdAt": "2020-11-27T10:11:36Z", "pr_url": "https://github.com/CESNET/perun/pull/3009", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNjcxNA==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r532536714", "bodyText": "I don't think there is any reason to include InternalErrorException to javadoc, could you please delete it from the javadocs you added?", "author": "metodej", "createdAt": "2020-11-30T11:44:32Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/FacilitiesManager.java", "diffHunk": "@@ -59,6 +59,17 @@\n \t */\n \tFacility getFacilityByName(PerunSession perunSession, String name) throws FacilityNotExistsException, PrivilegeException;\n \n+\t/**\n+\t * Searches for the Facilities with specified ids.\n+\t *\n+\t * @param perunSession\n+\t * @param ids\n+\t * @return list of Facilities with specified ids\n+\t * @throws InternalErrorException", "originalCommit": "04ca1e4e39335c947fb505aad3ac46ba5bf0ccb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2NDY5NQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r532764695", "bodyText": "Done.", "author": "cuadradek", "createdAt": "2020-11-30T17:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNjcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "c5530861275460561b45cfe1d366e688f01adf8e", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/api/FacilitiesManager.java b/perun-core/src/main/java/cz/metacentrum/perun/core/api/FacilitiesManager.java\nindex 806cf9b51..9a4ae6418 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/api/FacilitiesManager.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/api/FacilitiesManager.java\n\n@@ -65,7 +65,6 @@ public interface FacilitiesManager {\n \t * @param perunSession\n \t * @param ids\n \t * @return list of Facilities with specified ids\n-\t * @throws InternalErrorException\n \t * @throws PrivilegeException\n \t */\n \tList<Facility> getFacilitiesByIds(PerunSession perunSession, List<Integer> ids) throws PrivilegeException;\n"}}, {"oid": "c5530861275460561b45cfe1d366e688f01adf8e", "url": "https://github.com/CESNET/perun/commit/c5530861275460561b45cfe1d366e688f01adf8e", "message": "Methods for getting list of entities by their IDs\n\n- New methods \"getEntitiesByIds\" were created for Facility, Group, Member,\nResource, RichResource, User, UserExtSource and VO.", "committedDate": "2020-11-30T17:16:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NzIxMg==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r532787212", "bodyText": "Using id in (...) is not effective for large number of IDs. Please see UsersManagerImpl.getUsersByIds() implementation. This apply to impl of all methods.", "author": "zlamalp", "createdAt": "2020-11-30T17:52:20Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "diffHunk": "@@ -336,6 +342,18 @@ public Facility getFacilityByName(PerunSession sess, String name) throws Facilit\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic List<Facility> getFacilitiesByIds(PerunSession perunSession, List<Integer> ids) {\n+\t\ttry {\n+\t\t\tSqlParameterSource parameters = new MapSqlParameterSource(\"ids\", ids);\n+\n+\t\t\treturn namedParameterJdbcTemplate.query(\"select \" + facilityMappingSelectQuery + \" from facilities where id in (:ids)\",", "originalCommit": "c5530861275460561b45cfe1d366e688f01adf8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1ODEwNg==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533558106", "bodyText": "Done", "author": "cuadradek", "createdAt": "2020-12-01T16:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NzIxMg=="}], "type": "inlineReview", "revised_code": {"commit": "2708d5dd1980dc498a605a5c5afc670a87a61498", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java\nindex 2cbea7368..3228b70cc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java\n\n@@ -345,10 +343,17 @@ public class FacilitiesManagerImpl implements FacilitiesManagerImplApi {\n \t@Override\n \tpublic List<Facility> getFacilitiesByIds(PerunSession perunSession, List<Integer> ids) {\n \t\ttry {\n-\t\t\tSqlParameterSource parameters = new MapSqlParameterSource(\"ids\", ids);\n-\n-\t\t\treturn namedParameterJdbcTemplate.query(\"select \" + facilityMappingSelectQuery + \" from facilities where id in (:ids)\",\n-\t\t\t\tparameters, FACILITY_MAPPER);\n+\t\t\treturn jdbc.execute(\"select \" + facilityMappingSelectQuery + \" from facilities where id \" + Compatibility.getStructureForInClause(),\n+\t\t\t\t(PreparedStatementCallback<List<Facility>>) preparedStatement -> {\n+\t\t\t\t\tArray sqlArray = DatabaseManagerBl.prepareSQLArrayOfNumbersFromIntegers(ids, preparedStatement);\n+\t\t\t\t\tpreparedStatement.setArray(1, sqlArray);\n+\t\t\t\t\tResultSet rs = preparedStatement.executeQuery();\n+\t\t\t\t\tList<Facility> facilities = new ArrayList<>();\n+\t\t\t\t\twhile (rs.next()) {\n+\t\t\t\t\t\tfacilities.add(FACILITY_MAPPER.mapRow(rs, rs.getRow()));\n+\t\t\t\t\t}\n+\t\t\t\t\treturn facilities;\n+\t\t\t\t});\n \t\t} catch (RuntimeException ex) {\n \t\t\tthrow new InternalErrorException(ex);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3ODkwNg==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533178906", "bodyText": "Due to changes in perun-roles.yml you should modify this method.", "author": "HejdaJakub", "createdAt": "2020-12-01T09:00:19Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java", "diffHunk": "@@ -515,6 +515,20 @@ public UserExtSource getUserExtSourceById(PerunSession sess, int id) throws User\n \t\treturn getUsersManagerBl().getUserExtSourceById(sess, id);\n \t}\n \n+\t@Override\n+\tpublic List<UserExtSource> getUserExtSourcesByIds(PerunSession sess, List<Integer> ids) throws PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getUserExtSourcesByIds_List<Integer>_policy\")) {\n+\t\t\tthrow new PrivilegeException(sess, \"getUserExtSourcesByIds\");\n+\t\t}\n+\t\tList<UserExtSource> userExtSources = getUsersManagerBl().getUserExtSourcesByIds(sess, ids);\n+\t\tuserExtSources.removeIf(ues -> !AuthzResolver.authorizedInternal(sess, \"filter-getUserExtSourcesByIds_List<Integer>_policy\", ues));\n+\n+\t\treturn userExtSources;", "originalCommit": "c5530861275460561b45cfe1d366e688f01adf8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1Mzg2Ng==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533553866", "bodyText": "Done", "author": "cuadradek", "createdAt": "2020-12-01T16:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3ODkwNg=="}], "type": "inlineReview", "revised_code": {"commit": "2708d5dd1980dc498a605a5c5afc670a87a61498", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\nindex 52bc3c311..a1d321d45 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\n\n@@ -523,10 +523,8 @@ public class UsersManagerEntry implements UsersManager {\n \t\tif (!AuthzResolver.authorizedInternal(sess, \"getUserExtSourcesByIds_List<Integer>_policy\")) {\n \t\t\tthrow new PrivilegeException(sess, \"getUserExtSourcesByIds\");\n \t\t}\n-\t\tList<UserExtSource> userExtSources = getUsersManagerBl().getUserExtSourcesByIds(sess, ids);\n-\t\tuserExtSources.removeIf(ues -> !AuthzResolver.authorizedInternal(sess, \"filter-getUserExtSourcesByIds_List<Integer>_policy\", ues));\n \n-\t\treturn userExtSources;\n+\t\treturn getUsersManagerBl().getUserExtSourcesByIds(sess, ids);\n \t}\n \n \t@Override\n"}}, {"oid": "2708d5dd1980dc498a605a5c5afc670a87a61498", "url": "https://github.com/CESNET/perun/commit/2708d5dd1980dc498a605a5c5afc670a87a61498", "message": "Methods for getting list of entities by their IDs\n\n- New methods \"getEntitiesByIds\" were created for Facility, Group, Member,\nResource, RichResource, User, UserExtSource and VO.", "committedDate": "2020-12-01T15:53:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNzMwMw==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533627303", "bodyText": "I would prefer having similar messages in javadoc for all those impl methods. Its get method. It doesn't search/find. Also you should note, that it silently skips non-existing entities.", "author": "zlamalp", "createdAt": "2020-12-01T18:23:18Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/GroupsManagerImplApi.java", "diffHunk": "@@ -158,6 +158,16 @@\n \t */\n \tGroup getGroupByName(PerunSession perunSession, Vo vo, String name) throws GroupNotExistsException;\n \n+\t/**\n+\t * Search for the groups with specified ids in all VOs.", "originalCommit": "2708d5dd1980dc498a605a5c5afc670a87a61498", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5MjExOQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533992119", "bodyText": "Done", "author": "cuadradek", "createdAt": "2020-12-02T08:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNzMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "c09e6f1d15765c21ad66acab3da69a7df0f97d13", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/GroupsManagerImplApi.java b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/GroupsManagerImplApi.java\nindex 54778d262..9589a75e5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/GroupsManagerImplApi.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/GroupsManagerImplApi.java\n\n@@ -159,7 +159,7 @@ public interface GroupsManagerImplApi {\n \tGroup getGroupByName(PerunSession perunSession, Vo vo, String name) throws GroupNotExistsException;\n \n \t/**\n-\t * Search for the groups with specified ids in all VOs.\n+\t * Gets groups by their ids. Silently skips non-existing groups.\n \t *\n \t * @param ids\n \t * @param perunSession\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMDYyMQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533630621", "bodyText": "When you are at it, can you please fix this test? When we use real DB, there is no guarantee, that returned list has same order as checked one, resulting in false positive test failure.\nYou can gather users on input to set and you can do the same for the result of getUsersByIds(). Then you can call assertEquals() on two sets, where order doesn't matter. Thank you.", "author": "zlamalp", "createdAt": "2020-12-01T18:28:40Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1149,7 +1172,7 @@ public void getUsersByIds() throws Exception {\n \t\t\tusers.add(user2);\n \t\t}\n \n-\t\tassertEquals(users, perun.getUsersManagerBl().getUsersByIds(sess, ids));\n+\t\tassertEquals(users, perun.getUsersManager().getUsersByIds(sess, ids));", "originalCommit": "2708d5dd1980dc498a605a5c5afc670a87a61498", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5MjIyMQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533992221", "bodyText": "Done", "author": "cuadradek", "createdAt": "2020-12-02T08:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMDYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwNDkyNQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r534104925", "bodyText": "Thank you.", "author": "zlamalp", "createdAt": "2020-12-02T11:45:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMDYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c09e6f1d15765c21ad66acab3da69a7df0f97d13", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\nindex bfe9a9990..0c8daabb4 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n\n@@ -1172,8 +1174,7 @@ public class UsersManagerEntryIntegrationTest extends AbstractPerunIntegrationTe\n \t\t\tusers.add(user2);\n \t\t}\n \n-\t\tassertEquals(users, perun.getUsersManager().getUsersByIds(sess, ids));\n-\n+\t\tassertEquals(users, new HashSet<>(perun.getUsersManager().getUsersByIds(sess, ids)));\n \t}\n \n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjk0MQ==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533632941", "bodyText": "I would use unified javadoc message in RPC for all methods as I suggested for impl layer.", "author": "zlamalp", "createdAt": "2020-12-01T18:32:25Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/FacilitiesManagerMethod.java", "diffHunk": "@@ -42,6 +42,20 @@ public Facility call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t}\n \t},\n \n+\t/*#\n+\t * Searches for the Facilities with specified IDs.", "originalCommit": "2708d5dd1980dc498a605a5c5afc670a87a61498", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5MjQxMg==", "url": "https://github.com/CESNET/perun/pull/3009#discussion_r533992412", "bodyText": "Done", "author": "cuadradek", "createdAt": "2020-12-02T08:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjk0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c09e6f1d15765c21ad66acab3da69a7df0f97d13", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/FacilitiesManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/FacilitiesManagerMethod.java\nindex bd8774c53..e709440f4 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/FacilitiesManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/FacilitiesManagerMethod.java\n\n@@ -43,10 +43,10 @@ public enum FacilitiesManagerMethod implements ManagerMethod {\n \t},\n \n \t/*#\n-\t * Searches for the Facilities with specified IDs.\n+\t * Returns facilities by their IDs.\n \t *\n-\t * @param ids List<Integer> list of Facilities IDs\n-\t * @return List<Facility> Found Facilities\n+\t * @param ids List<Integer> list of facilities IDs\n+\t * @return List<Facility> facilities with specified IDs\n \t */\n \tgetFacilitiesByIds {\n \n"}}, {"oid": "c09e6f1d15765c21ad66acab3da69a7df0f97d13", "url": "https://github.com/CESNET/perun/commit/c09e6f1d15765c21ad66acab3da69a7df0f97d13", "message": "Methods for getting list of entities by their IDs\n\n- New methods \"getEntitiesByIds\" were created for Facility, Group, Member,\nResource, RichResource, User, UserExtSource and VO.", "committedDate": "2020-12-02T08:01:24Z", "type": "commit"}, {"oid": "c09e6f1d15765c21ad66acab3da69a7df0f97d13", "url": "https://github.com/CESNET/perun/commit/c09e6f1d15765c21ad66acab3da69a7df0f97d13", "message": "Methods for getting list of entities by their IDs\n\n- New methods \"getEntitiesByIds\" were created for Facility, Group, Member,\nResource, RichResource, User, UserExtSource and VO.", "committedDate": "2020-12-02T08:01:24Z", "type": "forcePushed"}]}