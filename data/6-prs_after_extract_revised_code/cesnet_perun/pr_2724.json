{"pr_number": 2724, "pr_title": "New assignServices method", "pr_createdAt": "2020-06-01T14:09:10Z", "pr_url": "https://github.com/CESNET/perun/pull/2724", "timeline": [{"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "url": "https://github.com/CESNET/perun/commit/f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-01T14:24:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTA2Mg==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434119062", "bodyText": "I believe you want to add result into the attributes list. Also, what if required attributes of passed services overlap? We probably should gather them into the set before returning as list.", "author": "zlamalp", "createdAt": "2020-06-02T19:15:58Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3029,6 +3037,15 @@ public void deleteAttribute(PerunSession sess, AttributeDefinition attributeDefi\n \t\treturn attributes;\n \t}\n \n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException {\n+\t\tList<Attribute> attributes = new ArrayList<>();\n+\t\tfor (Service service : services) {\n+\t\t\tgetRequiredAttributes(sess, service, facility, resource, user, member);", "originalCommit": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzMjU2MQ==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434432561", "bodyText": "Yeah, definitely I wanted. I have fixed it and also added a test for this method.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-03T09:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg0NDMxNg==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434844316", "bodyText": "When I think about it, our equals() include attribute value. So if value of required attribute changes during the consequent calls, we still might get duplicity, which will probably fails some checks. But optimization of impl layer to load all data from DB at once is not a part of this change.", "author": "zlamalp", "createdAt": "2020-06-03T20:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTA2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 465d5f317..03375e6a4 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -3038,12 +3038,12 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException {\n-\t\tList<Attribute> attributes = new ArrayList<>();\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Facility facility, Resource resource, User user, Member member) throws MemberResourceMismatchException {\n+\t\tSet<Attribute> attributes = new HashSet<>();\n \t\tfor (Service service : services) {\n-\t\t\tgetRequiredAttributes(sess, service, facility, resource, user, member);\n+\t\t\tattributes.addAll(getRequiredAttributes(sess, service, facility, resource, user, member));\n \t\t}\n-\t\treturn attributes;\n+\t\treturn new ArrayList<>(attributes);\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyMzQ1Nw==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434123457", "bodyText": "We should make sure, that attribute IDs are unique, since they may overlap for multiple services.", "author": "zlamalp", "createdAt": "2020-06-02T19:23:52Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java", "diffHunk": "@@ -3239,18 +3240,33 @@ public void deleteAllAttributeAuthz(PerunSession sess, AttributeDefinition attri\n \n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, Service service, Resource resource, Group group) throws InternalErrorException {\n+\t\treturn getRequiredAttributes(sess, Collections.singletonList(service), resource, group);\n+\t}\n+\n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = getRequiredAttributeIds(service);\n-\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(attrIds, new Holder(group.getId(), Holder.HolderType.GROUP), new Holder(resource.getId(), Holder.HolderType.RESOURCE));\n+\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tfor (Service service : services) {\n+\t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));", "originalCommit": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzMjYzNA==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434432634", "bodyText": "Done.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-03T09:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyMzQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\nindex 8e48d9ee8..cae2c309d 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\n\n@@ -3246,12 +3246,13 @@ public class AttributesManagerImpl implements AttributesManagerImplApi {\n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tSet<Integer> attrIds = new HashSet<>();\n \t\t\tfor (Service service : services) {\n \t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));\n \t\t\t}\n-\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(attrIds, new Holder(group.getId(),\n-\t\t\t\t\tHolder.HolderType.GROUP), new Holder(resource.getId(), Holder.HolderType.RESOURCE));\n+\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(new ArrayList<>(attrIds),\n+\t\t\t\t\tnew Holder(group.getId(), Holder.HolderType.GROUP),\n+\t\t\t\t\tnew Holder(resource.getId(), Holder.HolderType.RESOURCE));\n \t\t\treturn this.setValuesOfAttributes(sess, attrs, group, resource);\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNDY1OA==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434124658", "bodyText": "Again we should have unique set of attribute ids.", "author": "zlamalp", "createdAt": "2020-06-02T19:26:01Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java", "diffHunk": "@@ -3565,18 +3581,32 @@ public void deleteAllAttributeAuthz(PerunSession sess, AttributeDefinition attri\n \n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, Service service, Group group) throws InternalErrorException {\n+\t\treturn getRequiredAttributes(sess, Collections.singletonList(service), group);\n+\t}\n+\n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = getRequiredAttributeIds(service);\n+\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tfor (Service service : services) {\n+\t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));", "originalCommit": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzMjc3Ng==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434432776", "bodyText": "Done.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-03T09:27:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNDY1OA=="}], "type": "inlineReview", "revised_code": {"commit": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\nindex 8e48d9ee8..cae2c309d 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java\n\n@@ -3587,11 +3588,12 @@ public class AttributesManagerImpl implements AttributesManagerImplApi {\n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tSet<Integer> attrIds = new HashSet<>();\n \t\t\tfor (Service service : services) {\n \t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));\n \t\t\t}\n-\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(attrIds, new Holder(group.getId(), Holder.HolderType.GROUP));\n+\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(new ArrayList<>(attrIds),\n+\t\t\t\t\tnew Holder(group.getId(), Holder.HolderType.GROUP));\n \t\t\treturn this.setValuesOfAttributes(sess, attrs, group, null);\n \t\t}\n \n"}}, {"oid": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "url": "https://github.com/CESNET/perun/commit/72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-03T09:22:02Z", "type": "forcePushed"}, {"oid": "10df17bd114821c682be8ce1daaee60a554aa6ec", "url": "https://github.com/CESNET/perun/commit/10df17bd114821c682be8ce1daaee60a554aa6ec", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-03T09:25:00Z", "type": "forcePushed"}, {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "url": "https://github.com/CESNET/perun/commit/21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-03T09:26:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzODcyOQ==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437338729", "bodyText": "It would be nice to have these checks before the authorization check. The new authorization model needs to be sure that all objects exist when the authorization checks are performed.", "author": "balcirakpeter", "createdAt": "2020-06-09T11:32:51Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java", "diffHunk": "@@ -542,6 +542,23 @@ public void assignService(PerunSession sess, Resource resource, Service service)\n \t\tgetResourcesManagerBl().assignService(sess, resource, service);\n \t}\n \n+\t@Override\n+\tpublic void assignServices(PerunSession sess, Resource resource, List<Service> services) throws PrivilegeException, ResourceNotExistsException, ServiceNotExistsException, ServiceAlreadyAssignedException, WrongAttributeValueException, WrongReferenceAttributeValueException {\n+\t\tUtils.checkPerunSession(sess);\n+\t\tgetResourcesManagerBl().checkResourceExists(sess, resource);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN, resource)) {\n+\t\t\tthrow new PrivilegeException(sess, \"assignServices\");\n+\t\t}\n+\n+\t\tfor (Service service : services) {", "originalCommit": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxNTI3OQ==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437415279", "bodyText": "Moved.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-09T13:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzODcyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java\nindex 116c44809..c09e725a0 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java\n\n@@ -547,15 +547,15 @@ public class ResourcesManagerEntry implements ResourcesManager {\n \t\tUtils.checkPerunSession(sess);\n \t\tgetResourcesManagerBl().checkResourceExists(sess, resource);\n \n+\t\tfor (Service service : services) {\n+\t\t\tgetPerunBl().getServicesManagerBl().checkServiceExists(sess, service);\n+\t\t}\n+\n \t\t// Authorization\n \t\tif (!AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN, resource)) {\n \t\t\tthrow new PrivilegeException(sess, \"assignServices\");\n \t\t}\n \n-\t\tfor (Service service : services) {\n-\t\t\tgetPerunBl().getServicesManagerBl().checkServiceExists(sess, service);\n-\t\t}\n-\n \t\tgetResourcesManagerBl().assignServices(sess, resource, services);\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0ODU5OQ==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437348599", "bodyText": "Typo", "author": "balcirakpeter", "createdAt": "2020-06-09T11:52:13Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java", "diffHunk": "@@ -2364,6 +2391,27 @@\n \t */\n \tList<Attribute> getRequiredAttributes(PerunSession sess, Service service, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException;\n \n+\t/**\n+\t * Get memner, user, member-resource, user-facility attributes which are required by the services.", "originalCommit": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxNTIwMg==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437415202", "bodyText": "Fixed.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-09T13:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0ODU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java\nindex c4d34fccf..e8df168e8 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java\n\n@@ -2392,7 +2392,7 @@ public interface AttributesManagerBl {\n \tList<Attribute> getRequiredAttributes(PerunSession sess, Service service, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException;\n \n \t/**\n-\t * Get memner, user, member-resource, user-facility attributes which are required by the services.\n+\t * Get member, user, member-resource, user-facility attributes which are required by the services.\n \t * The same attributes are returned only once.\n \t *\n \t * @param sess session\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDQwNA==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437350404", "bodyText": "You can use parameterized constructor call instead of addAll()", "author": "balcirakpeter", "createdAt": "2020-06-09T11:55:32Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3042,6 +3059,18 @@ public void deleteAttribute(PerunSession sess, AttributeDefinition attributeDefi\n \n \t}\n \n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group, boolean withGroupAttributes) throws GroupResourceMismatchException {\n+\t\tthis.checkGroupIsFromTheSameVoLikeResource(sess, group, resource);\n+\n+\t\tList<Attribute> attributes = new ArrayList<>();\n+\t\tattributes.addAll(getAttributesManagerImpl().getRequiredAttributes(sess, services, resource, group));", "originalCommit": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxNTE1Ng==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437415156", "bodyText": "Done.", "author": "Vojtech-Sassmann", "createdAt": "2020-06-09T13:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2NDYyNA==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r438164624", "bodyText": "Well, the list is not passed from the outside, so we should be able to safely assign result of the first call (which is a list) into the variable and just optionally add those group attributes.\nList<Attribute> attributes = getAttributesManagerImpl().getRequiredAttributes(sess, services, resource, group);\nif (withGroupAttributes) {\n\tattributes.addAll(getAttributesManagerImpl().getRequiredAttributes(sess, services, group));\n}\nreturn attributes;", "author": "zlamalp", "createdAt": "2020-06-10T14:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4MjYzOQ==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r438182639", "bodyText": "You are right. I don't know why I didn't do it in the first place \ud83d\ude42", "author": "Vojtech-Sassmann", "createdAt": "2020-06-10T14:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDQwNA=="}], "type": "inlineReview", "revised_code": {"commit": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\nindex 39ab60b71..905f123b5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java\n\n@@ -3063,8 +3063,9 @@ public class AttributesManagerBlImpl implements AttributesManagerBl {\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group, boolean withGroupAttributes) throws GroupResourceMismatchException {\n \t\tthis.checkGroupIsFromTheSameVoLikeResource(sess, group, resource);\n \n-\t\tList<Attribute> attributes = new ArrayList<>();\n-\t\tattributes.addAll(getAttributesManagerImpl().getRequiredAttributes(sess, services, resource, group));\n+\t\tList<Attribute> attributes = new ArrayList<>(\n+\t\t\tgetAttributesManagerImpl().getRequiredAttributes(sess, services, resource, group)\n+\t\t);\n \t\tif (withGroupAttributes) {\n \t\t\tattributes.addAll(getAttributesManagerImpl().getRequiredAttributes(sess, services, group));\n \t\t}\n"}}, {"oid": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "url": "https://github.com/CESNET/perun/commit/dc39022b12438a2fd103cd1df6118c737c9c4c30", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-09T13:25:16Z", "type": "forcePushed"}, {"oid": "01b824bc02bedb3118f122e63579448d055ca50f", "url": "https://github.com/CESNET/perun/commit/01b824bc02bedb3118f122e63579448d055ca50f", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-10T14:47:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1ODk1Mw==", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r439358953", "bodyText": "This was changed on the master branch to parms.stateChangingCheck().", "author": "zlamalp", "createdAt": "2020-06-12T11:15:04Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java", "diffHunk": "@@ -687,6 +688,32 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t}\n \t},\n \n+\t/*#\n+\t * Assign services to resource.\n+\t *\n+\t * @param resource int Resource <code>id</code>\n+\t * @param services List<Integer> list of services IDs\n+\t */\n+\tassignServices {\n+\n+\t\t@Override\n+\t\tpublic Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n+\t\t\tac.stateChangingCheck();", "originalCommit": "01b824bc02bedb3118f122e63579448d055ca50f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java\nindex d19884851..a5b04334c 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java\n\n@@ -698,7 +698,7 @@ public enum ResourcesManagerMethod implements ManagerMethod {\n \n \t\t@Override\n \t\tpublic Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tac.stateChangingCheck();\n+\t\t\tparms.stateChangingCheck();\n \n \t\t\tList<Integer> ids = parms.readList(\"services\", Integer.class);\n \t\t\tList<Service> services = new ArrayList<>();\n"}}, {"oid": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "url": "https://github.com/CESNET/perun/commit/808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-15T08:14:58Z", "type": "commit"}, {"oid": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "url": "https://github.com/CESNET/perun/commit/808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification.", "committedDate": "2020-06-15T08:14:58Z", "type": "forcePushed"}]}