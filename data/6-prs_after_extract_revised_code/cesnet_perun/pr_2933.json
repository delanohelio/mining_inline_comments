{"pr_number": 2933, "pr_title": "Fix of creating application in VSUP registrar module", "pr_createdAt": "2020-10-14T13:01:43Z", "pr_url": "https://github.com/CESNET/perun/pull/2933", "timeline": [{"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6", "url": "https://github.com/CESNET/perun/commit/c9f84e2a56378239dea36fb37aa28826ea7024b6", "message": "Fix of creating application in VSUP registrar module\n\n- merging of new application with user already in perun based on birth number in VSUP module now has to be approved manually by vo admin\n- at the end of approval of application the user external source is created based on RC for future merging of the user", "committedDate": "2020-10-14T13:01:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2ODEwNw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504668107", "bodyText": "This would create ExtSource with name RC and type as value of birthNumber. At V\u0160UP type of RC ExtSource is INTERNAL, we should have constant for it somewhere.", "author": "zlamalp", "createdAt": "2020-10-14T13:16:46Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);", "originalCommit": "c9f84e2a56378239dea36fb37aa28826ea7024b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMTU1Nw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504701557", "bodyText": "Replaced with INTERVAL constant.", "author": "metodej", "createdAt": "2020-10-14T13:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2ODEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex 3c4ee0dd9..ae47a6159 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -207,8 +209,8 @@ public class Vsup extends DefaultRegistrarModule {\n \n \t\t\t\tString rc = item.getValue();\n \t\t\t\tif (rc != null && !rc.isEmpty()) {\n-\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);\n-\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);\n+\t\t\t\t\tUserExtSource ues = new UserExtSource(es, 0, rc);\n \t\t\t\t\ttry {\n \t\t\t\t\t\tperun.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n \t\t\t\t\t} catch (UserExtSourceExistsException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MDkwMg==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504670902", "bodyText": "You shouldn't pass identity from application into the RC UserExtSource. It should contain login from the rc, like\nnew UserExtSource(es, 0, rc));", "author": "zlamalp", "createdAt": "2020-10-14T13:20:37Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);\n+\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());", "originalCommit": "c9f84e2a56378239dea36fb37aa28826ea7024b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDg2Nw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504700867", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-14T13:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MDkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex 3c4ee0dd9..ae47a6159 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -207,8 +209,8 @@ public class Vsup extends DefaultRegistrarModule {\n \n \t\t\t\tString rc = item.getValue();\n \t\t\t\tif (rc != null && !rc.isEmpty()) {\n-\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);\n-\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);\n+\t\t\t\t\tUserExtSource ues = new UserExtSource(es, 0, rc);\n \t\t\t\t\ttry {\n \t\t\t\t\t\tperun.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n \t\t\t\t\t} catch (UserExtSourceExistsException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4MTExMg==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504681112", "bodyText": "Message will contain toString() from the User object, which is not most user friendly way. I would prefer printing just displayName and ID.", "author": "zlamalp", "createdAt": "2020-10-14T13:34:52Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +43,87 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user + \" already in Perun and thus would be merged with him.\", null, null, null, true);", "originalCommit": "c9f84e2a56378239dea36fb37aa28826ea7024b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDk4Mg==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504700982", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-14T13:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4MTExMg=="}], "type": "inlineReview", "revised_code": {"commit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex 3c4ee0dd9..ae47a6159 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -59,7 +60,8 @@ public class Vsup extends DefaultRegistrarModule {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user + \" already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n \t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n \t\t\t\t\t\t\tthrow ex;\n \t\t\t\t\t\t} catch (Exception ex) {\n"}}, {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "url": "https://github.com/CESNET/perun/commit/ec94fe3bc2defba257b0f7f844deb9a16c45764f", "message": "Fixes based on review\n\n- user in message changed to just displayName and id\n- fixed creation of RC ues", "committedDate": "2020-10-14T13:58:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505437896", "bodyText": "Are you sure this should react to any exception? Because if there will be for example \"InternalErrorException\", this will say that the application can be approved if I understand it right.\n@zlamalp should it work this way?", "author": "stavamichal", "createdAt": "2020-10-15T10:34:21Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);", "originalCommit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ2ODQ5Ng==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505468496", "bodyText": "You are right, that we should fail at least on InternalErrorException and ExtSourceNotExistsException. Generally we should catch and ignore only safe exceptions thrown by the getUserByExtSourceNameAndExtLogin()", "author": "zlamalp", "createdAt": "2020-10-15T11:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTEzNw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505665137", "bodyText": "Ok, I've change the catched exception only to those that are thrown by getUserByExtSourceNameAndExtLogin().", "author": "metodej", "createdAt": "2020-10-15T16:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cefa53fbed5715b4f2397e3249ab26e5a62af401", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex ae47a6159..6f78f65ce 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -62,9 +64,7 @@ public class Vsup extends DefaultRegistrarModule {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n \t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n \t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n-\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n-\t\t\t\t\t\t\tthrow ex;\n-\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t} catch (ExtSourceNotExistsException | UserExtSourceNotExistsException | UserNotExistsException ex) {\n \t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzMzk1NA==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505433954", "bodyText": "Should be:\nperun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", ExtSourcesManager.EXTSOURCE_INTERNAL);", "author": "zlamalp", "createdAt": "2020-10-15T10:27:41Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +196,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);", "originalCommit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTIyMw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505665223", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-15T16:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzMzk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "cefa53fbed5715b4f2397e3249ab26e5a62af401", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex ae47a6159..6f78f65ce 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -209,7 +221,7 @@ public class Vsup extends DefaultRegistrarModule {\n \n \t\t\t\tString rc = item.getValue();\n \t\t\t\tif (rc != null && !rc.isEmpty()) {\n-\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", ExtSourcesManager.EXTSOURCE_NAME_INTERNAL);\n \t\t\t\t\tUserExtSource ues = new UserExtSource(es, 0, rc);\n \t\t\t\t\ttry {\n \t\t\t\t\t\tperun.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODE4Mw==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505488183", "bodyText": "I realized, that this won't handle the cases, when found user is already a member, since after this method, normal approval process takes place. So here, for case when user is not null, please add check, whether user is already a member of VO, eg.:\ntry {\n\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());\n\t// user is already a member, switch application type\n\tif (Application.AppType.INITIAL.equals(app.getType())) {\n\t\tapp.setType(Application.AppType.EXTENSION);\n\t\tregistrar.updateApplicationType(session, app);\n\t\tlog.debug(\"Updating application type to EXTENSION since we matched user which is VO member!\");\n\t}\n} catch (MemberNotExistsException e) {\n\t// OK state\n}\nYou must also implement new method in the RegistrarManager to update application type in a DB. It must be public, but there is no need to add it to the RPC, so we don't need authorization in it yet.", "author": "zlamalp", "createdAt": "2020-10-15T12:08:02Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {", "originalCommit": "ec94fe3bc2defba257b0f7f844deb9a16c45764f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NjIwMA==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505666200", "bodyText": "Okay, thank you for comment, I've added this check and also the mentioned method.", "author": "metodej", "createdAt": "2020-10-15T16:09:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cefa53fbed5715b4f2397e3249ab26e5a62af401", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex ae47a6159..6f78f65ce 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -62,9 +64,7 @@ public class Vsup extends DefaultRegistrarModule {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n \t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n \t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n-\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n-\t\t\t\t\t\t\tthrow ex;\n-\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t} catch (ExtSourceNotExistsException | UserExtSourceNotExistsException | UserNotExistsException ex) {\n \t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n"}}, {"oid": "cefa53fbed5715b4f2397e3249ab26e5a62af401", "url": "https://github.com/CESNET/perun/commit/cefa53fbed5715b4f2397e3249ab26e5a62af401", "message": "Fixes based on review\n\n- corrected exceptions catch in canBeApproved\n- fixed case when user is already member (and created method updateApplicationType in RegistrarManager)", "committedDate": "2020-10-15T15:58:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE0MDUxMA==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506140510", "bodyText": "Isn't here the app.getUser() always null? This should probably be located elsewhere.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-16T07:54:29Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +46,98 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (ExtSourceNotExistsException | UserExtSourceNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {\n \t\t\t\t\t\t\tPerunBl perunBl = (PerunBl)session.getPerun();\n-\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, application.getExtSourceName(), application.getExtSourceType());\n-\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, application.getExtSourceLoa(), application.getCreatedBy());\n+\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, app.getExtSourceName(), app.getExtSourceType());\n+\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());\n \t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, application.getUser(), ues);\n-\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", application.getUser(), ues, application);\n+\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n+\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", app.getUser(), ues, app);\n \t\t\t\t\t\t\t} catch (UserExtSourceExistsException ex) {\n \t\t\t\t\t\t\t\t// we can ignore, user will be paired with application\n-\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", application.getUser(), application);\n+\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", app.getUser(), app);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());", "originalCommit": "cefa53fbed5715b4f2397e3249ab26e5a62af401", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3ODg3MA==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506178870", "bodyText": "Yes, it should have been in the other branch of if, thank you.", "author": "metodej", "createdAt": "2020-10-16T08:41:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE0MDUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "04b4745f2d990c79f56d3b93528323a44417f172", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\nindex 6f78f65ce..bba714836 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java\n\n@@ -110,7 +110,6 @@ public class Vsup extends DefaultRegistrarModule {\n \t\t\t\t\t\t\t\t// we can ignore, user will be paired with application\n \t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", app.getUser(), app);\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\ttry {\n \t\t\t\t\t\t\t\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());\n \t\t\t\t\t\t\t\t// user is already a member, switch application type\n"}}, {"oid": "04b4745f2d990c79f56d3b93528323a44417f172", "url": "https://github.com/CESNET/perun/commit/04b4745f2d990c79f56d3b93528323a44417f172", "message": "Fixes based on review\n\n- fix in case that user is already member moved to the right location", "committedDate": "2020-10-16T08:40:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwNDQzMg==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506204432", "bodyText": "Must be application.getType().toString() otherwise jdbc driver cannot guess the type: Can't infer the SQL type to use for an instance of cz.metacentrum.perun.registrar.model.Application$AppType.", "author": "zlamalp", "createdAt": "2020-10-16T09:11:40Z", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -3643,6 +3643,16 @@ private int processApplication(PerunSession session, Application application, Li\n \n \t}\n \n+\t@Override\n+\tpublic void updateApplicationType(PerunSession session, Application application) {\n+\n+\t\t// TODO - add authorization (and add to rpc)\n+\n+\t\tif (jdbc.update(\"update application set apptype=? where id=?\", application.getType(), application.getId()) > 0) {", "originalCommit": "04b4745f2d990c79f56d3b93528323a44417f172", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwODAyNA==", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506208024", "bodyText": "Ok, fixed.", "author": "metodej", "createdAt": "2020-10-16T09:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwNDQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "582976b1c4ac38b66920950e3827975970263df4", "chunk": "diff --git a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java\nindex 6f2f418c1..60693b3c6 100644\n--- a/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java\n+++ b/perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java\n\n@@ -3648,7 +3648,7 @@ public class RegistrarManagerImpl implements RegistrarManager {\n \n \t\t// TODO - add authorization (and add to rpc)\n \n-\t\tif (jdbc.update(\"update application set apptype=? where id=?\", application.getType(), application.getId()) > 0) {\n+\t\tif (jdbc.update(\"update application set apptype=? where id=?\", application.getType().toString(), application.getId()) > 0) {\n \t\t\tlog.debug(\"Application type changed to + \" + application.getType());\n \t\t}\n \t}\n"}}, {"oid": "582976b1c4ac38b66920950e3827975970263df4", "url": "https://github.com/CESNET/perun/commit/582976b1c4ac38b66920950e3827975970263df4", "message": "Fixes based on review\n\n- fix of input of apptype in updateApplicationType", "committedDate": "2020-10-16T09:15:31Z", "type": "commit"}]}