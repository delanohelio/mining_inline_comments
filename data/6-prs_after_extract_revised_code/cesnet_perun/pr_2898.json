{"pr_number": 2898, "pr_title": "Core - Duplicate candidates", "pr_createdAt": "2020-09-11T11:31:34Z", "pr_url": "https://github.com/CESNET/perun/pull/2898", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDQ4Ng==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486994486", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif(! allUsersIds.contains(userId)) {\n          \n          \n            \n            \t\t\t\tif (!allUsersIds.contains(userId)) {", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:53:37Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java", "diffHunk": "@@ -753,24 +753,33 @@ private void removeSponsorFromSponsoredMembers(PerunSession sess, Vo vo, User us\n \t * @return list of MemberCandidates for given RichUsers, group and candidates\n \t * @throws InternalErrorException internal error\n \t */\n-\tprivate List<MemberCandidate> createMemberCandidates(PerunSession sess, List<RichUser> users, Vo vo, Group group, List<Candidate> candidates, List<String> attrNames) {\n+\tpublic List<MemberCandidate> createMemberCandidates(PerunSession sess, List<RichUser> users, Vo vo, Group group, List<Candidate> candidates, List<String> attrNames) {\n \t\tList<MemberCandidate> memberCandidates = new ArrayList<>();\n+\t\tSet<Integer> allUsersIds = new HashSet<>();\n+\t\tint userId;\n \n \t\t// try to find matching RichUser for candidates\n \t\tfor (Candidate candidate : candidates) {\n \t\t\tMemberCandidate mc = new MemberCandidate();\n-\t\t\tmc.setCandidate(candidate);\n \n \t\t\ttry {\n \t\t\t\tUser user = getPerunBl().getUsersManagerBl().getUserByUserExtSources(sess, candidate.getUserExtSources());\n-\t\t\t\tRichUser richUser = getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(sess, user, attrNames);\n+\t\t\t\tuserId = user.getId();\n+\n+\t\t\t\t// check if user already exists in the list\n+\t\t\t\tif(! allUsersIds.contains(userId)) {", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java\nindex 9baa2b43a..3e05f3ded 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/VosManagerBlImpl.java\n\n@@ -767,7 +767,7 @@ public class VosManagerBlImpl implements VosManagerBl {\n \t\t\t\tuserId = user.getId();\n \n \t\t\t\t// check if user already exists in the list\n-\t\t\t\tif(! allUsersIds.contains(userId)) {\n+\t\t\t\tif(!allUsersIds.contains(userId)) {\n \t\t\t\t\tRichUser richUser = getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(sess, user, attrNames);\n \t\t\t\t\tmc.setRichUser(richUser);\n \t\t\t\t\tmemberCandidates.add(mc);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDkwOA==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486994908", "bodyText": "Please, try to keep the code as much formatted as possible. Try to avoid these empty lines.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:54:36Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDk2OA==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486994968", "bodyText": "Same here.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:54:43Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTA2NA==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995064", "bodyText": "Same here.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:54:55Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsCandidate() throws Exception {\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenThrow(UserNotExistsException.class);\n+\t\twhen(candidate1.getUserExtSources())\n+\t\t\t.thenReturn(Collections.emptyList());\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isNull();\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTExMw==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995113", "bodyText": "Same here.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:55:00Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsCandidate() throws Exception {\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTE3MQ==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995171", "bodyText": "Same here.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:55:07Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsCandidate() throws Exception {\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenThrow(UserNotExistsException.class);\n+\t\twhen(candidate1.getUserExtSources())\n+\t\t\t.thenReturn(Collections.emptyList());\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isNull();\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsUser() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isNull();\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTIxNg==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995216", "bodyText": "Same here.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:55:13Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsCandidate() throws Exception {\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenThrow(UserNotExistsException.class);\n+\t\twhen(candidate1.getUserExtSources())\n+\t\t\t.thenReturn(Collections.emptyList());\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isNull();\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsUser() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isNull();\n+\n+\t}\n+", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTYzMQ==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995631", "bodyText": "We don't want to use wildcard imports. Please, try to adjust your IDE's settings.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:55:58Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NTcyNQ==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486995725", "bodyText": "Same for these two.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:56:07Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5Njg2NA==", "url": "https://github.com/CESNET/perun/pull/2898#discussion_r486996864", "bodyText": "You can pass here only the first candidate.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n          \n          \n            \n            \t\t\tvo, group, Arrays.asList(candidate1), Collections.emptyList());", "author": "Vojtech-Sassmann", "createdAt": "2020-09-11T11:58:39Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package cz.metacentrum.perun.core.bl;\n+\n+import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n+import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.*;\n+\n+public class VosManagerBlImplUnitTest {\n+\tprivate VosManagerBlImpl vosManagerBl;\n+\tprivate VosManagerImplApi vosManagerImpl = mock(VosManagerImplApi.class);\n+\tprivate PerunSession sess = mock(PerunSession.class);\n+\tprivate Candidate candidate1 = mock(Candidate.class);\n+\tprivate Candidate candidate2 = mock(Candidate.class);\n+\tprivate Vo vo = mock(Vo.class);\n+\tprivate Group group = mock(Group.class);\n+\tprivate VosManagerBlImpl vosManagerBlSpy;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tvosManagerBl = new VosManagerBlImpl(vosManagerImpl);\n+\t\tvosManagerBl.setPerunBl(mock(PerunBl.class, RETURNS_DEEP_STUBS));\n+\t\tvosManagerBlSpy = spy(vosManagerBl);\n+\n+\t}\n+\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsOnlyOneMemberCandidateForDuplicateUsers() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(candidate2.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsCandidate() throws Exception {\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenThrow(UserNotExistsException.class);\n+\t\twhen(candidate1.getUserExtSources())\n+\t\t\t.thenReturn(Collections.emptyList());\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1), Collections.emptyList());\n+\t\tassertThat(memberCandidates).hasSize(1);\n+\t\tassertThat(memberCandidates.get(0).getCandidate()).isEqualTo(candidate1);\n+\t\tassertThat(memberCandidates.get(0).getRichUser()).isNull();\n+\n+\t}\n+\n+\t@Test\n+\tpublic void createMemberCandidatesReturnsUser() throws Exception {\n+\t\tUser user = new User();\n+\t\tRichUser richUser = new RichUser();\n+\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().getUserByUserExtSources(any(), any()))\n+\t\t\t.thenReturn(user);\n+\t\twhen(candidate1.getUserExtSources()).\n+\t\t\tthenReturn(Collections.emptyList());\n+\t\twhen(vosManagerBlSpy.getPerunBl().getUsersManagerBl().convertUserToRichUserWithAttributesByNames(any(), any(), any()))\n+\t\t\t.thenReturn(richUser);\n+\n+\t\tList<MemberCandidate> memberCandidates = vosManagerBlSpy.createMemberCandidates(sess, Collections.emptyList(),\n+\t\t\tvo, group, Arrays.asList(candidate1, candidate2), Collections.emptyList());", "originalCommit": "fed8b6489c1d64670d131fd085b17012ee76fffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\nindex dd087f59f..e5358fc4a 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/bl/VosManagerBlImplUnitTest.java\n\n@@ -1,16 +1,28 @@\n package cz.metacentrum.perun.core.bl;\n \n-import cz.metacentrum.perun.core.api.*;\n+import cz.metacentrum.perun.core.api.Candidate;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.MemberCandidate;\n+import cz.metacentrum.perun.core.api.PerunSession;\n+import cz.metacentrum.perun.core.api.RichUser;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n import cz.metacentrum.perun.core.blImpl.VosManagerBlImpl;\n import cz.metacentrum.perun.core.implApi.VosManagerImplApi;\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n public class VosManagerBlImplUnitTest {\n \tprivate VosManagerBlImpl vosManagerBl;\n"}}, {"oid": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "url": "https://github.com/CESNET/perun/commit/a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "message": "Core - Duplicate candidates\n\n* In old implementation method 'createMemberCandidate' could find duplicate\ncandidates for the same user and it was confusing for our users.\n* If the method finds user for some  candidate now, then returns only user.\nIf method finds more users, then returns only one of them. If method does not\nfind any user for the candidate, then returns only the candidate.", "committedDate": "2020-09-11T13:12:06Z", "type": "commit"}, {"oid": "a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "url": "https://github.com/CESNET/perun/commit/a63ebecf1db03ea00e7a6c16bad47f0855cbc23c", "message": "Core - Duplicate candidates\n\n* In old implementation method 'createMemberCandidate' could find duplicate\ncandidates for the same user and it was confusing for our users.\n* If the method finds user for some  candidate now, then returns only user.\nIf method finds more users, then returns only one of them. If method does not\nfind any user for the candidate, then returns only the candidate.", "committedDate": "2020-09-11T13:12:06Z", "type": "forcePushed"}]}