{"pr_number": 3000, "pr_title": "Core - createSponsoredMembersFromCSV", "pr_createdAt": "2020-11-25T12:02:43Z", "pr_url": "https://github.com/CESNET/perun/pull/3000", "timeline": [{"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880", "url": "https://github.com/CESNET/perun/commit/8ea63ee1b3f50c6668e07cd482d75cd895507880", "message": "Core - createSponsoredMembersFromCSV\n\n* Users using the method used for creation of multiple users are used to\nprovide the data in a csv format. Because of that, we have decided to\ncreate a new method which can work with such input.\n* Created method createSponsoredMembersFromCSV which takes data\nparameter, representing the content of the csv file; and header\nparameter, representing the header of the csv file.\n* We use the `;` semicolon as a delimiter for both, the body and the\nheader.\n* Required values for now are - `firstname`, `lastname`,\n`urn:perun:user:attribute-def:def:preferredMail`.\n* Optional values are - `urn:perun:user:attribute-def:def:note`.\n* Created new user:def:note attribute. This attribute can be used to\nshow some note for users in the users overview in GUI.", "committedDate": "2020-11-25T12:03:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MTMwOQ==", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r530651309", "bodyText": "Is there any reason to declare user here and not later?", "author": "metodej", "createdAt": "2020-11-25T21:28:40Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2673,4 +2725,116 @@ private void processMemberAfterRemovingLastSponsor(PerunSession sess, Member spo\n \t\t\tthrow new InternalErrorException(e);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Creates a new user from given data and sponsors him in the given vo.\n+\t *\n+\t * @param sess session\n+\t * @param vo vo, where the new user will be sponsored\n+\t * @param namespace namespace used to define an external system where\n+\t *                  the user will have a new login generated (currently, only 'mu' namespace is supported)\n+\t * @param data values used to create the new user.\n+\t *             Required values are - firstname, lastname, urn:perun:user:attribute-def:def:preferredMail\n+\t *             Optional values are - urn:perun:user:attribute-def:def:note\n+\t * @param sponsor user, who will be set as a sponsor to the newly created user\n+\t * @param validityTo validity of the sponsorship. If null, the sponsorship will not be automatically canceled.\n+\t * @param asyncValidation switch for easier testing\n+\t * @return result of the procedure\n+\t */\n+\tprivate Map<String, String> createSingleSponsoredMemberFromCSV(PerunSession sess, Vo vo, String namespace,\n+\t                                                               Map<String, String> data, User sponsor,\n+\t                                                               LocalDate validityTo, boolean asyncValidation) {\n+\t\tfor (String requiredField : SPONSORED_MEMBER_REQUIRED_FIELDS) {\n+\t\t\tif (!data.containsKey(requiredField)) {\n+\t\t\t\tlog.error(\"Invalid data passed, missing required value: {}\", requiredField);\n+\t\t\t\tthrow new InternalErrorException(\"Invalid data passed, missing required value: \" + requiredField);\n+\t\t\t}\n+\t\t}\n+\n+\t\tSet<String> additionalValues = new HashSet<>(data.keySet());\n+\t\tadditionalValues.removeAll(SPONSORED_MEMBER_REQUIRED_FIELDS);\n+\n+\t\tfor (String valueName : additionalValues) {\n+\t\t\tif (!SPONSORED_MEMBER_ADDITIONAL_FIELDS.contains(valueName)) {\n+\t\t\t\tlog.error(\"Not allowed additional value passed, value: {}\", valueName);\n+\t\t\t\tthrow new InternalErrorException(\"Not allowed additional value passed, value: \" + valueName);\n+\t\t\t}\n+\t\t}\n+\n+\t\tMap<String, String> mapName = new HashMap<>();\n+\t\tmapName.put(\"firstName\", data.get(\"firstname\"));\n+\t\tmapName.put(\"lastName\", data.get(\"lastname\"));\n+\n+\t\tString email = data.get(A_U_PREF_MAIL);\n+\n+\t\tPasswordManagerModule module = getPerunBl().getUsersManagerBl().getPasswordManagerModule(sess, namespace);\n+\t\tString password = module.generateRandomPassword(sess, null);\n+\n+\t\t// create sponsored member\n+\t\tUser user;", "originalCommit": "8ea63ee1b3f50c6668e07cd482d75cd895507880", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA3OTE3OQ==", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r531079179", "bodyText": "No, there is not. I have moved it.", "author": "Vojtech-Sassmann", "createdAt": "2020-11-26T14:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MTMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\nindex ac443da0b..64569eb7d 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n\n@@ -2771,12 +2771,11 @@ public class MembersManagerBlImpl implements MembersManagerBl {\n \t\tString password = module.generateRandomPassword(sess, null);\n \n \t\t// create sponsored member\n-\t\tUser user;\n \t\tMap<String, String> status = new HashMap<>();\n \t\ttry {\n \t\t\tMember member = createSponsoredMember(sess, vo, namespace, mapName, password, email, sponsor, validityTo,\n \t\t\t\t\tasyncValidation);\n-\t\t\tuser = perunBl.getUsersManagerBl().getUserByMember(sess, member);\n+\t\t\tUser user = perunBl.getUsersManagerBl().getUserByMember(sess, member);\n \t\t\t// get login to return\n \t\t\tString login = perunBl.getAttributesManagerBl().getAttribute(sess, user,\n \t\t\t\t\tPasswordManagerModule.LOGIN_PREFIX + namespace).valueAsString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0Njc0MA==", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r530846740", "bodyText": "I would add something like \"... using input from CSV file.\"", "author": "stavamichal", "createdAt": "2020-11-26T08:24:14Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1172,6 +1172,34 @@\n \t */\n \tRichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, LocalDate validityTo) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException, AlreadySponsorException;\n \n+\t/**\n+\t * Creates new sponsored members.", "originalCommit": "8ea63ee1b3f50c6668e07cd482d75cd895507880", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4MDg0OQ==", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r531080849", "bodyText": "Added.", "author": "Vojtech-Sassmann", "createdAt": "2020-11-26T14:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0Njc0MA=="}], "type": "inlineReview", "revised_code": {"commit": "9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\nindex 108a4632b..9ad698200 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n\n@@ -1173,7 +1173,7 @@ public interface MembersManager {\n \tRichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, LocalDate validityTo) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException, AlreadySponsorException;\n \n \t/**\n-\t * Creates new sponsored members.\n+\t * Creates new sponsored members using input from CSV file.\n \t *\n \t * Since there may be error while creating some of the members and we cannot simply rollback the transaction and\n \t * start over, exceptions during member creation are not thrown and the returned map has this structure:\n"}}, {"oid": "9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "url": "https://github.com/CESNET/perun/commit/9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "message": "Core - createSponsoredMembersFromCSV\n\n* Users using the method used for creation of multiple users are used to\nprovide the data in a csv format. Because of that, we have decided to\ncreate a new method which can work with such input.\n* Created method createSponsoredMembersFromCSV which takes data\nparameter, representing the content of the csv file; and header\nparameter, representing the header of the csv file.\n* We use the `;` semicolon as a delimiter for both, the body and the\nheader.\n* Required values for now are - `firstname`, `lastname`,\n`urn:perun:user:attribute-def:def:preferredMail`.\n* Optional values are - `urn:perun:user:attribute-def:def:note`.\n* Created new user:def:note attribute. This attribute can be used to\nshow some note for users in the users overview in GUI.", "committedDate": "2020-11-26T14:51:06Z", "type": "commit"}, {"oid": "9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "url": "https://github.com/CESNET/perun/commit/9ea04cd457852d2b866b1d998ea2bf7bbe893aba", "message": "Core - createSponsoredMembersFromCSV\n\n* Users using the method used for creation of multiple users are used to\nprovide the data in a csv format. Because of that, we have decided to\ncreate a new method which can work with such input.\n* Created method createSponsoredMembersFromCSV which takes data\nparameter, representing the content of the csv file; and header\nparameter, representing the header of the csv file.\n* We use the `;` semicolon as a delimiter for both, the body and the\nheader.\n* Required values for now are - `firstname`, `lastname`,\n`urn:perun:user:attribute-def:def:preferredMail`.\n* Optional values are - `urn:perun:user:attribute-def:def:note`.\n* Created new user:def:note attribute. This attribute can be used to\nshow some note for users in the users overview in GUI.", "committedDate": "2020-11-26T14:51:06Z", "type": "forcePushed"}]}