{"pr_number": 2741, "pr_title": "New method for looking for groups by attributes", "pr_createdAt": "2020-06-12T08:59:51Z", "pr_url": "https://github.com/CESNET/perun/pull/2741", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMyOTQ2OA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439329468", "bodyText": "InternalErrorException is runtime. We are removing all ocurrences in other pull-request.", "author": "zlamalp", "createdAt": "2020-06-12T10:08:00Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/SearcherImplApi.java", "diffHunk": "@@ -41,6 +41,27 @@\n \t */\n \tList<User> getUsers(PerunSession sess, Map<Attribute, String> attributesWithSearchingValues) throws InternalErrorException;\n \n+\t/**\n+\t * This method get Map of Attributes with searching values and try to find all groups, which have specific attributes in format.\n+\t * Better information about format below. When there are more than 1 attribute in Map, it means all must be true \"looking for all of them\" (AND)\n+\t *\n+\t * IMPORTANT: can't get CORE ATTRIBUTES\n+\t *\n+\t * @param sess perun session\n+\t * @param attributesWithSearchingValues map of attributes\n+\t *        when attribute is type String, so value is string and we are looking for total match (Partial is not supported now, will be supported later by symbol *)\n+\t *        when attribute is type Integer, so value is integer in String and we are looking for total match\n+\t *        when attribute is type List<String>, so value is String and we are looking for at least one total or partial matching element\n+\t *        when attribute is type Map<String> so value is String in format \"key=value\" and we are looking total match of both or if is it \"key\" so we are looking for total match of key\n+\t *        IMPORTANT: In map there is not allowed char '=' in key. First char '=' is delimiter in MAP item key=value!!!\n+\t * @return list of groups who have attributes with specific values (behavior above)\n+\t *        if no group exist, return empty list of groups\n+\t *        if attributeWithSearchingValues is empty, return all groups\n+\t *\n+\t * @throws InternalErrorException\n+\t */\n+\tList<Group> getGroups(PerunSession sess, Map<Attribute, String> attributesWithSearchingValues) throws InternalErrorException;", "originalCommit": "0fe3b0ffba690d09973b354be331ed3ab6dec6f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzNjMyNQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439336325", "bodyText": "You are right. Removed.", "author": "stavamichal", "createdAt": "2020-06-12T10:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMyOTQ2OA=="}], "type": "inlineReview", "revised_code": {"commit": "34ad0191139d27399dda0653a9fc94371855c42a", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/SearcherImplApi.java b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/SearcherImplApi.java\nindex 0ed0a23db..919f6cb8c 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/SearcherImplApi.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/implApi/SearcherImplApi.java\n\n@@ -57,10 +57,8 @@ public interface SearcherImplApi {\n \t * @return list of groups who have attributes with specific values (behavior above)\n \t *        if no group exist, return empty list of groups\n \t *        if attributeWithSearchingValues is empty, return all groups\n-\t *\n-\t * @throws InternalErrorException\n \t */\n-\tList<Group> getGroups(PerunSession sess, Map<Attribute, String> attributesWithSearchingValues) throws InternalErrorException;\n+\tList<Group> getGroups(PerunSession sess, Map<Attribute, String> attributesWithSearchingValues);\n \n \t/**\n \t * Return members with expiration date set, which will expire on date +/- X days.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzMTY0Mg==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439331642", "bodyText": "list of users -> list of groups, also for the line below", "author": "zlamalp", "createdAt": "2020-06-12T10:13:05Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java", "diffHunk": "@@ -7,20 +7,50 @@\n import cz.metacentrum.perun.core.api.PerunSession;\n import cz.metacentrum.perun.core.api.Resource;\n import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n \n import java.time.LocalDate;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n \n /**\n  * Searcher Class for searching objects by Map of Attributes\n  *\n  * @author Michal Stava <stavamichal@gmail.com>\n  */\n public interface SearcherBl {\n+\t/**\n+\t * Filter output from getGroups by vo_id.\n+\t * @see #getGroups(PerunSession, Map)\n+\t */\n+\tList<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws InternalErrorException, AttributeNotExistsException, WrongAttributeAssignmentException;\n+\n+\t/**\n+\t * This method get Map of Attributes with searching values and try to find all groups, which have specific attributes in format.\n+\t * Better information about format below. When there are more than 1 attribute in Map, it means all must be true \"looking for all of them\" (AND)\n+\t *\n+\t * IMPORTANT: can't get CORE ATTRIBUTES, it will skip any core attribute in map without information about it\n+\t *\n+\t * @param sess perun session\n+\t * @param attributesWithSearchingValues map of attributes names\n+\t *        when attribute is type String, so value is string and we are looking for total match (Partial is not supported now, will be supported later by symbol *)\n+\t *        when attribute is type Integer, so value is integer in String and we are looking for total match\n+\t *        when attribute is type List<String>, so value is String and we are looking for at least one total or partial matching element\n+\t *        when attribute is type Map<String> so value is String in format \"key=value\" and we are looking total match of both or if is it \"key\" so we are looking for total match of key\n+\t *        IMPORTANT: In map there is not allowed char '=' in key. First char '=' is delimiter in MAP item key=value!!!\n+\t * @return list of users who have attributes with specific values (behavior above)", "originalCommit": "0fe3b0ffba690d09973b354be331ed3ab6dec6f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzNjQ0NQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439336445", "bodyText": "Copy&Paste mistake. Changed.", "author": "stavamichal", "createdAt": "2020-06-12T10:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzMTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "34ad0191139d27399dda0653a9fc94371855c42a", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\nindex 9dc534ea7..f87408e83 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\n\n@@ -27,7 +27,7 @@ public interface SearcherBl {\n \t * Filter output from getGroups by vo_id.\n \t * @see #getGroups(PerunSession, Map)\n \t */\n-\tList<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws InternalErrorException, AttributeNotExistsException, WrongAttributeAssignmentException;\n+\tList<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException;\n \n \t/**\n \t * This method get Map of Attributes with searching values and try to find all groups, which have specific attributes in format.\n"}}, {"oid": "34ad0191139d27399dda0653a9fc94371855c42a", "url": "https://github.com/CESNET/perun/commit/34ad0191139d27399dda0653a9fc94371855c42a", "message": "New method for looking for groups by attributes\n\n - new method getGroups return list of groups with specific set of\n attribtues\n - can be limited by vo id (it is used as filter now)\n - we are not supporting core attributes (it is not necessary  to be\n able to identify group by description or name using this method)\n - added test of this funcionality", "committedDate": "2020-06-12T10:22:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNjQ5Ng==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439726496", "bodyText": "The query method does not throw EmptyResultDataAccessException.", "author": "balcirakpeter", "createdAt": "2020-06-13T09:56:33Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java", "diffHunk": "@@ -64,6 +64,24 @@ public SearcherImpl(DataSource perunPool) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Map<Attribute, String> attributesWithSearchingValues) {\n+\t\tStringBuilder query = new StringBuilder();\n+\t\tquery.append(\"select distinct \" + GroupsManagerImpl.groupMappingSelectQuery + \" from groups \");\n+\n+\t\tMapSqlParameterSource parameters = new MapSqlParameterSource();\n+\n+\t\tinsertWhereClausesAndQueryParametersFromAttributes(query, parameters, \"group_attr_values\", \"group\", \"groups\", attributesWithSearchingValues, false);\n+\n+\t\ttry {\n+\t\t\treturn jdbc.query(query.toString(), parameters, GroupsManagerImpl.GROUP_MAPPER);\n+\t\t} catch (EmptyResultDataAccessException e) {", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NjIzMw==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439976233", "bodyText": "Fixed.", "author": "stavamichal", "createdAt": "2020-06-15T07:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNjQ5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java\nindex 765f33acc..0ee6ebfd2 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java\n\n@@ -75,8 +75,6 @@ public class SearcherImpl implements SearcherImplApi {\n \n \t\ttry {\n \t\t\treturn jdbc.query(query.toString(), parameters, GroupsManagerImpl.GROUP_MAPPER);\n-\t\t} catch (EmptyResultDataAccessException e) {\n-\t\t\treturn new ArrayList<>();\n \t\t} catch (RuntimeException e) {\n \t\t\tthrow new InternalErrorException(e);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzE1NA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727154", "bodyText": "Up to discussion (performance): Both methods getGroups should firstly retrieve all necessary groups. Meaning, that this method retrieves all Vo groups and the second one retrieves all groups. Then they could both use some private method which takes these groups as a parameter alongside the map of attributes. According to these parameters, the private method returns only sufficient groups.", "author": "balcirakpeter", "createdAt": "2020-06-13T10:07:45Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -84,6 +89,38 @@ public SearcherBlImpl(SearcherImplApi searcherImpl) {\n \t\treturn this.getUsersForCoreAttributesByMapOfAttributes(sess, mapOfCoreAttributesWithValues);\n \t}\n \n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\treturn this.getGroups(sess, attributesWithSearchingValues).stream()", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3NzcxMg==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439977712", "bodyText": "You are right, there is a way to do it more efficiently, but we would need to change methods in the implementation layer adequately. When we found this method is too slow, we can change it later.", "author": "stavamichal", "createdAt": "2020-06-15T07:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -107,7 +104,7 @@ public class SearcherBlImpl implements SearcherBl {\n \n \t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n \t\tfor(String name: attributesWithSearchingValues.keySet()) {\n-\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tif(name == null || name.isEmpty()) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n \t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n \t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n \t\t\t\t//skip core attributes, there are unsupported at this moment\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzM3Nw==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727377", "bodyText": "Unused import", "author": "balcirakpeter", "createdAt": "2020-06-13T10:11:00Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java", "diffHunk": "@@ -7,20 +7,48 @@\n import cz.metacentrum.perun.core.api.PerunSession;\n import cz.metacentrum.perun.core.api.Resource;\n import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n \n import java.time.LocalDate;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3ODE4MQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439978181", "bodyText": "Removed all unused imports in the class.", "author": "stavamichal", "createdAt": "2020-06-15T07:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzM3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\nindex f87408e83..adf34ea30 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/SearcherBl.java\n\n@@ -15,7 +15,6 @@ import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentExceptio\n import java.time.LocalDate;\n import java.util.List;\n import java.util.Map;\n-import java.util.stream.Collectors;\n \n /**\n  * Searcher Class for searching objects by Map of Attributes\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzQzNg==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727436", "bodyText": "Unused import", "author": "balcirakpeter", "createdAt": "2020-06-13T10:12:07Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -9,12 +9,14 @@\n import cz.metacentrum.perun.core.api.PerunSession;\n import cz.metacentrum.perun.core.api.Resource;\n import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.Vo;\n import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n import cz.metacentrum.perun.core.bl.PerunBl;\n import cz.metacentrum.perun.core.bl.SearcherBl;\n import cz.metacentrum.perun.core.implApi.SearcherImplApi;\n+import org.apache.logging.log4j.util.Strings;", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3OTA3MA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439979070", "bodyText": "Removed all unused imports in the class.", "author": "stavamichal", "createdAt": "2020-06-15T07:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -16,7 +16,6 @@ import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentExceptio\n import cz.metacentrum.perun.core.bl.PerunBl;\n import cz.metacentrum.perun.core.bl.SearcherBl;\n import cz.metacentrum.perun.core.implApi.SearcherImplApi;\n-import org.apache.logging.log4j.util.Strings;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzQ0MQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727441", "bodyText": "Unused import", "author": "balcirakpeter", "createdAt": "2020-06-13T10:12:14Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -23,7 +25,10 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3OTMzMA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439979330", "bodyText": "Removed all unused imports in the class.", "author": "stavamichal", "createdAt": "2020-06-15T07:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzQ0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -25,9 +24,7 @@ import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.Set;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzQ0Ng==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727446", "bodyText": "Unused import", "author": "balcirakpeter", "createdAt": "2020-06-13T10:12:20Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -23,7 +25,10 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n+import java.util.function.Function;", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -25,9 +24,7 @@ import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.Set;\n-import java.util.function.Function;\n import java.util.stream.Collectors;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzUyOQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727529", "bodyText": "You can return the result of the method right away.", "author": "balcirakpeter", "createdAt": "2020-06-13T10:13:44Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -84,6 +89,38 @@ public SearcherBlImpl(SearcherImplApi searcherImpl) {\n \t\treturn this.getUsersForCoreAttributesByMapOfAttributes(sess, mapOfCoreAttributesWithValues);\n \t}\n \n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\treturn this.getGroups(sess, attributesWithSearchingValues).stream()\n+\t\t\t.filter( group -> group.getVoId() == vo.getId())\n+\t\t\t.collect(Collectors.toList());\n+\t}\n+\n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\t//If there is no attribute, so every group match\n+\t\tif(attributesWithSearchingValues == null || attributesWithSearchingValues.isEmpty()) {\n+\t\t\treturn perunBl.getVosManagerBl().getVos(sess).stream()\n+\t\t\t\t.flatMap( vo -> perunBl.getGroupsManagerBl().getAllGroups(sess, vo).stream())\n+\t\t\t\t.collect(Collectors.toList());\n+\t\t}\n+\n+\t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n+\t\tfor(String name: attributesWithSearchingValues.keySet()) {\n+\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n+\t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n+\t\t\t\t//skip core attributes, there are unsupported at this moment\n+\t\t\t\tcontinue;\n+\t\t\t} else {\n+\t\t\t\tmapOfAttrsWithValues.put(new Attribute(attrDef), attributesWithSearchingValues.get(name));\n+\t\t\t}\n+\t\t}\n+\n+\t\tList<Group> groupsFromAttributes = getSearcherImpl().getGroups(sess, mapOfAttrsWithValues);", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3OTczMg==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439979732", "bodyText": "Changed.", "author": "stavamichal", "createdAt": "2020-06-15T07:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -107,7 +104,7 @@ public class SearcherBlImpl implements SearcherBl {\n \n \t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n \t\tfor(String name: attributesWithSearchingValues.keySet()) {\n-\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tif(name == null || name.isEmpty()) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n \t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n \t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n \t\t\t\t//skip core attributes, there are unsupported at this moment\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzYwOA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727608", "bodyText": "Unnecessary continue statement. You can negate the if statement so you do not have to use else branch.", "author": "balcirakpeter", "createdAt": "2020-06-13T10:15:07Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -84,6 +89,38 @@ public SearcherBlImpl(SearcherImplApi searcherImpl) {\n \t\treturn this.getUsersForCoreAttributesByMapOfAttributes(sess, mapOfCoreAttributesWithValues);\n \t}\n \n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\treturn this.getGroups(sess, attributesWithSearchingValues).stream()\n+\t\t\t.filter( group -> group.getVoId() == vo.getId())\n+\t\t\t.collect(Collectors.toList());\n+\t}\n+\n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\t//If there is no attribute, so every group match\n+\t\tif(attributesWithSearchingValues == null || attributesWithSearchingValues.isEmpty()) {\n+\t\t\treturn perunBl.getVosManagerBl().getVos(sess).stream()\n+\t\t\t\t.flatMap( vo -> perunBl.getGroupsManagerBl().getAllGroups(sess, vo).stream())\n+\t\t\t\t.collect(Collectors.toList());\n+\t\t}\n+\n+\t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n+\t\tfor(String name: attributesWithSearchingValues.keySet()) {\n+\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n+\t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n+\t\t\t\t//skip core attributes, there are unsupported at this moment\n+\t\t\t\tcontinue;", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4MDQ2OQ==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439980469", "bodyText": "I want to have it this way to show that there should be part of the code but that part is skipped on purpose.", "author": "stavamichal", "createdAt": "2020-06-15T07:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzYwOA=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -107,7 +104,7 @@ public class SearcherBlImpl implements SearcherBl {\n \n \t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n \t\tfor(String name: attributesWithSearchingValues.keySet()) {\n-\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tif(name == null || name.isEmpty()) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n \t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n \t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n \t\t\t\t//skip core attributes, there are unsupported at this moment\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzc3Nw==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439727777", "bodyText": "I prefer isEmpty() rather than equals(\"\"). It is more readable and I've read that isEmpty() is a little bit quicker than the other approach.", "author": "balcirakpeter", "createdAt": "2020-06-13T10:17:44Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java", "diffHunk": "@@ -84,6 +89,38 @@ public SearcherBlImpl(SearcherImplApi searcherImpl) {\n \t\treturn this.getUsersForCoreAttributesByMapOfAttributes(sess, mapOfCoreAttributesWithValues);\n \t}\n \n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Vo vo, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\treturn this.getGroups(sess, attributesWithSearchingValues).stream()\n+\t\t\t.filter( group -> group.getVoId() == vo.getId())\n+\t\t\t.collect(Collectors.toList());\n+\t}\n+\n+\t@Override\n+\tpublic List<Group> getGroups(PerunSession sess, Map<String, String> attributesWithSearchingValues) throws AttributeNotExistsException {\n+\t\t//If there is no attribute, so every group match\n+\t\tif(attributesWithSearchingValues == null || attributesWithSearchingValues.isEmpty()) {\n+\t\t\treturn perunBl.getVosManagerBl().getVos(sess).stream()\n+\t\t\t\t.flatMap( vo -> perunBl.getGroupsManagerBl().getAllGroups(sess, vo).stream())\n+\t\t\t\t.collect(Collectors.toList());\n+\t\t}\n+\n+\t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n+\t\tfor(String name: attributesWithSearchingValues.keySet()) {\n+\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");", "originalCommit": "34ad0191139d27399dda0653a9fc94371855c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4MDgyMA==", "url": "https://github.com/CESNET/perun/pull/2741#discussion_r439980820", "bodyText": "Me too, copy&paste problem. Fixed.", "author": "stavamichal", "createdAt": "2020-06-15T07:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyNzc3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\nindex e338a4dc5..202e19dbc 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/SearcherBlImpl.java\n\n@@ -107,7 +104,7 @@ public class SearcherBlImpl implements SearcherBl {\n \n \t\tMap<Attribute, String> mapOfAttrsWithValues = new HashMap<>();\n \t\tfor(String name: attributesWithSearchingValues.keySet()) {\n-\t\t\tif(name == null || name.equals(\"\")) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n+\t\t\tif(name == null || name.isEmpty()) throw new AttributeNotExistsException(\"There is attribute with no specific name!\");\n \t\t\tAttributeDefinition attrDef = perunBl.getAttributesManagerBl().getAttributeDefinition(sess, name);\n \t\t\tif(getPerunBl().getAttributesManagerBl().isCoreAttribute(sess, attrDef)) {\n \t\t\t\t//skip core attributes, there are unsupported at this moment\n"}}, {"oid": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "url": "https://github.com/CESNET/perun/commit/52a86ce4447e46fe64043055c1240dcb6357dbe7", "message": " New method for looking for groups by attributes\n\n - new method getGroups return list of groups with specific set of\n attribtues\n - can be limited by vo id (it is used as filter now)\n - we are not supporting core attributes (it is not necessary  to be\n able to identify group by description or name using this method)\n - added test of this funcionality", "committedDate": "2020-06-15T07:31:45Z", "type": "commit"}, {"oid": "52a86ce4447e46fe64043055c1240dcb6357dbe7", "url": "https://github.com/CESNET/perun/commit/52a86ce4447e46fe64043055c1240dcb6357dbe7", "message": " New method for looking for groups by attributes\n\n - new method getGroups return list of groups with specific set of\n attribtues\n - can be limited by vo id (it is used as filter now)\n - we are not supporting core attributes (it is not necessary  to be\n able to identify group by description or name using this method)\n - added test of this funcionality", "committedDate": "2020-06-15T07:31:45Z", "type": "forcePushed"}]}