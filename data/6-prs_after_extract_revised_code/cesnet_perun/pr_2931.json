{"pr_number": 2931, "pr_title": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER", "pr_createdAt": "2020-10-13T14:22:49Z", "pr_url": "https://github.com/CESNET/perun/pull/2931", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ2MDMyNQ==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r504460325", "bodyText": "I think this could be done without such a duplicate of the existing code. The only change is the role itself here.", "author": "stavamichal", "createdAt": "2020-10-14T07:30:18Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java", "diffHunk": "@@ -1859,6 +1859,26 @@ public static AuthzRoles addAllSubgroupsToAuthzRoles(PerunSession sess, AuthzRol\n \t\t\tgroupAdminRoles.put(\"Group\", newGroupsIds);\n \t\t\tauthzRoles.put(Role.GROUPADMIN, groupAdminRoles);\n \t\t}\n+\t\tif (authzRoles.hasRole(Role.GROUPOBSERVER)) {\n+\t\t\tMap<String, Set<Integer>> groupObserverRoles = authzRoles.get(Role.GROUPOBSERVER);\n+\t\t\tSet<Integer> groupsIdsForObserver = groupObserverRoles.get(\"Group\");\n+\t\t\tSet<Integer> newGroupsIdsForObserver = new HashSet<>(groupsIdsForObserver);\n+\t\t\tfor (Integer id : groupsIdsForObserver) {\n+\t\t\t\tGroup parentGroupForObserver;\n+\t\t\t\ttry {\n+\t\t\t\t\tparentGroupForObserver = getPerunBl().getGroupsManagerBl().getGroupById(sess, id);\n+\t\t\t\t} catch (GroupNotExistsException ex) {\n+\t\t\t\t\tlog.debug(\"Group with id=\" + id + \" not exists when initializing rights for user: \" + sess.getPerunPrincipal().getUser());\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tList<Group> subGroups = getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, parentGroupForObserver);\n+\t\t\t\tfor (Group g : subGroups) {\n+\t\t\t\t\tnewGroupsIdsForObserver.add(g.getId());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tgroupObserverRoles.put(\"Group\", newGroupsIdsForObserver);\n+\t\t\tauthzRoles.put(Role.GROUPOBSERVER, groupObserverRoles);\n+\t\t}", "originalCommit": "6a69112b89a9c350cedc36a2674fa1936e929e5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2MTU0MA==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r504961540", "bodyText": "Changes - I did it without duplication.", "author": "HejdaJakub", "createdAt": "2020-10-14T20:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ2MDMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "72ba712e343bee85da54ed4f404b0a4d7b87650d", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\nindex 47794d9da..a9470f4b8 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\n\n@@ -1839,45 +1839,8 @@ public class AuthzResolverBlImpl implements AuthzResolverBl {\n \t */\n \tpublic static AuthzRoles addAllSubgroupsToAuthzRoles(PerunSession sess, AuthzRoles authzRoles) {\n \t\tif (authzRoles == null) return new AuthzRoles();\n-\t\tif (authzRoles.hasRole(Role.GROUPADMIN)) {\n-\t\t\tMap<String, Set<Integer>> groupAdminRoles = authzRoles.get(Role.GROUPADMIN);\n-\t\t\tSet<Integer> groupsIds = groupAdminRoles.get(\"Group\");\n-\t\t\tSet<Integer> newGroupsIds = new HashSet<>(groupsIds);\n-\t\t\tfor (Integer id : groupsIds) {\n-\t\t\t\tGroup parentGroup;\n-\t\t\t\ttry {\n-\t\t\t\t\tparentGroup = getPerunBl().getGroupsManagerBl().getGroupById(sess, id);\n-\t\t\t\t} catch (GroupNotExistsException ex) {\n-\t\t\t\t\tlog.debug(\"Group with id=\" + id + \" not exists when initializing rights for user: \" + sess.getPerunPrincipal().getUser());\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tList<Group> subGroups = getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, parentGroup);\n-\t\t\t\tfor (Group g : subGroups) {\n-\t\t\t\t\tnewGroupsIds.add(g.getId());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tgroupAdminRoles.put(\"Group\", newGroupsIds);\n-\t\t\tauthzRoles.put(Role.GROUPADMIN, groupAdminRoles);\n-\t\t}\n-\t\tif (authzRoles.hasRole(Role.GROUPOBSERVER)) {\n-\t\t\tMap<String, Set<Integer>> groupObserverRoles = authzRoles.get(Role.GROUPOBSERVER);\n-\t\t\tSet<Integer> groupsIdsForObserver = groupObserverRoles.get(\"Group\");\n-\t\t\tSet<Integer> newGroupsIdsForObserver = new HashSet<>(groupsIdsForObserver);\n-\t\t\tfor (Integer id : groupsIdsForObserver) {\n-\t\t\t\tGroup parentGroupForObserver;\n-\t\t\t\ttry {\n-\t\t\t\t\tparentGroupForObserver = getPerunBl().getGroupsManagerBl().getGroupById(sess, id);\n-\t\t\t\t} catch (GroupNotExistsException ex) {\n-\t\t\t\t\tlog.debug(\"Group with id=\" + id + \" not exists when initializing rights for user: \" + sess.getPerunPrincipal().getUser());\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tList<Group> subGroups = getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, parentGroupForObserver);\n-\t\t\t\tfor (Group g : subGroups) {\n-\t\t\t\t\tnewGroupsIdsForObserver.add(g.getId());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tgroupObserverRoles.put(\"Group\", newGroupsIdsForObserver);\n-\t\t\tauthzRoles.put(Role.GROUPOBSERVER, groupObserverRoles);\n+\t\tif (authzRoles.hasRole(Role.GROUPADMIN) || authzRoles.hasRole(Role.GROUPOBSERVER)) {\n+\t\t\tauthzRoles = addAllSubgroupsForGroupAdminAndObserver(sess, authzRoles);\n \t\t}\n \t\treturn authzRoles;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzOTI3OA==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r504539278", "bodyText": "I know that it is not your change but can you add also the TRUSTEDFACILITYADMIN role to this class?", "author": "balcirakpeter", "createdAt": "2020-10-14T09:36:02Z", "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java", "diffHunk": "@@ -10,9 +10,12 @@\n \tpublic static final String PERUNOBSERVER = \"PERUNOBSERVER\";\n \tpublic static final String VOADMIN = \"VOADMIN\";\n \tpublic static final String GROUPADMIN = \"GROUPADMIN\";\n+\tpublic static final String GROUPOBSERVER = \"GROUPOBSERER\";\n \tpublic static final String SELF = \"SELF\";\n \tpublic static final String FACILITYADMIN = \"FACILITYADMIN\";\n+\tpublic static final String FACILITYOBSERVER = \"FACILITYOBSERVER\";", "originalCommit": "6a69112b89a9c350cedc36a2674fa1936e929e5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2MTcxOQ==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r504961719", "bodyText": "Done.", "author": "HejdaJakub", "createdAt": "2020-10-14T20:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzOTI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "72ba712e343bee85da54ed4f404b0a4d7b87650d", "chunk": "diff --git a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\nindex d13cb8140..3902a00b1 100644\n--- a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\n+++ b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\n\n@@ -14,6 +14,7 @@ public class Role {\n \tpublic static final String SELF = \"SELF\";\n \tpublic static final String FACILITYADMIN = \"FACILITYADMIN\";\n \tpublic static final String FACILITYOBSERVER = \"FACILITYOBSERVER\";\n+\tpublic static final String TRUSTEDFACILITYADMIN = \"TRUSTEDFACILITYADMIN\";\n \tpublic static final String RESOURCEADMIN = \"RESOURCEADMIN\";\n \tpublic static final String RESOURCEOBSERVER = \"RESOURCEOBSERVER\";\n \tpublic static final String RESOURCESELFSERVICE = \"RESOURCESELFSERVICE\";\n"}}, {"oid": "72ba712e343bee85da54ed4f404b0a4d7b87650d", "url": "https://github.com/CESNET/perun/commit/72ba712e343bee85da54ed4f404b0a4d7b87650d", "message": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER\n\n* I created three new roles, which should serve as observing variant for Group admin, Resource admin and Facility admin.\n* For Group observer I also had to edit method \"addAllSubgroupsToAuthzRoles\", where are some more privilege settings for Group admin.", "committedDate": "2020-10-14T20:34:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MTYwNg==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r505381606", "bodyText": "This should be different by role.", "author": "stavamichal", "createdAt": "2020-10-15T09:10:54Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java", "diffHunk": "@@ -2114,6 +2097,44 @@ private static boolean resolveAuthorization(PerunSession sess, List<Map<String,\n \t\treturn mapOfBeans;\n \t}\n \n+\t/**\n+\t * For role GroupAdmin and GroupObserver with association to \"Group\" add also all subgroups to authzRoles.\n+\t *\n+\t * @param sess Perun session\n+\t * @param authzRoles for some user\n+\t * @return authzRoles also with subgroups of groups\n+\t */\n+\tprivate static AuthzRoles addAllSubgroupsForGroupAdminAndObserver (PerunSession sess, AuthzRoles authzRoles) {\n+\t\tList<String> roles = new ArrayList<>();\n+\t\tif (authzRoles.hasRole(Role.GROUPADMIN)) {\n+\t\t\troles.add(Role.GROUPADMIN);\n+\t\t}\n+\t\tif (authzRoles.hasRole(Role.GROUPOBSERVER)) {\n+\t\t\troles.add(Role.GROUPOBSERVER);\n+\t\t}\n+\t\tfor (String role : roles) {\n+\t\t\tMap<String, Set<Integer>> groupRoles = authzRoles.get(role);\n+\t\t\tSet<Integer> groupsIds = groupRoles.get(\"Group\");\n+\t\t\tSet<Integer> newGroupsIds = new HashSet<>(groupsIds);\n+\t\t\tfor (Integer id : groupsIds) {\n+\t\t\t\tGroup parentGroup;\n+\t\t\t\ttry {\n+\t\t\t\t\tparentGroup = getPerunBl().getGroupsManagerBl().getGroupById(sess, id);\n+\t\t\t\t} catch (GroupNotExistsException ex) {\n+\t\t\t\t\tlog.debug(\"Group with id=\" + id + \" not exists when initializing rights for user: \" + sess.getPerunPrincipal().getUser());\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tList<Group> subGroups = getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, parentGroup);\n+\t\t\t\tfor (Group g : subGroups) {\n+\t\t\t\t\tnewGroupsIds.add(g.getId());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tgroupRoles.put(\"Group\", newGroupsIds);\n+\t\t\tauthzRoles.put(Role.GROUPADMIN, groupRoles);", "originalCommit": "72ba712e343bee85da54ed4f404b0a4d7b87650d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "30cba0d7d19e80d48467a49599242a49ac51373c", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\nindex a9470f4b8..ce217a98e 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AuthzResolverBlImpl.java\n\n@@ -2097,44 +2116,6 @@ public class AuthzResolverBlImpl implements AuthzResolverBl {\n \t\treturn mapOfBeans;\n \t}\n \n-\t/**\n-\t * For role GroupAdmin and GroupObserver with association to \"Group\" add also all subgroups to authzRoles.\n-\t *\n-\t * @param sess Perun session\n-\t * @param authzRoles for some user\n-\t * @return authzRoles also with subgroups of groups\n-\t */\n-\tprivate static AuthzRoles addAllSubgroupsForGroupAdminAndObserver (PerunSession sess, AuthzRoles authzRoles) {\n-\t\tList<String> roles = new ArrayList<>();\n-\t\tif (authzRoles.hasRole(Role.GROUPADMIN)) {\n-\t\t\troles.add(Role.GROUPADMIN);\n-\t\t}\n-\t\tif (authzRoles.hasRole(Role.GROUPOBSERVER)) {\n-\t\t\troles.add(Role.GROUPOBSERVER);\n-\t\t}\n-\t\tfor (String role : roles) {\n-\t\t\tMap<String, Set<Integer>> groupRoles = authzRoles.get(role);\n-\t\t\tSet<Integer> groupsIds = groupRoles.get(\"Group\");\n-\t\t\tSet<Integer> newGroupsIds = new HashSet<>(groupsIds);\n-\t\t\tfor (Integer id : groupsIds) {\n-\t\t\t\tGroup parentGroup;\n-\t\t\t\ttry {\n-\t\t\t\t\tparentGroup = getPerunBl().getGroupsManagerBl().getGroupById(sess, id);\n-\t\t\t\t} catch (GroupNotExistsException ex) {\n-\t\t\t\t\tlog.debug(\"Group with id=\" + id + \" not exists when initializing rights for user: \" + sess.getPerunPrincipal().getUser());\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tList<Group> subGroups = getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, parentGroup);\n-\t\t\t\tfor (Group g : subGroups) {\n-\t\t\t\t\tnewGroupsIds.add(g.getId());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tgroupRoles.put(\"Group\", newGroupsIds);\n-\t\t\tauthzRoles.put(Role.GROUPADMIN, groupRoles);\n-\t\t}\n-\t\treturn authzRoles;\n-\t}\n-\n \t/**\n \t * Enum defines PerunBean's name and action. The action retrieves all related objects for the object with that name.\n \t * The source object is returned alongside its related objects.\n"}}, {"oid": "30cba0d7d19e80d48467a49599242a49ac51373c", "url": "https://github.com/CESNET/perun/commit/30cba0d7d19e80d48467a49599242a49ac51373c", "message": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER\n\n* I created three new roles, which should serve as observing variant for Group admin, Resource admin and Facility admin.\n* For Group observer I also had to edit method \"addAllSubgroupsToAuthzRoles\", where are some more privilege settings for Group admin.", "committedDate": "2020-10-15T10:17:06Z", "type": "forcePushed"}, {"oid": "adb912f6880c7d0960adbee43fe3de918b40fcfd", "url": "https://github.com/CESNET/perun/commit/adb912f6880c7d0960adbee43fe3de918b40fcfd", "message": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER\n\n* I created three new roles, which should serve as observing variant for Group admin, Resource admin and Facility admin.\n* For Group observer I also had to edit method \"addAllSubgroupsToAuthzRoles\", where are some more privilege settings for Group admin.", "committedDate": "2020-10-15T10:37:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUxNzQ0Mw==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r505517443", "bodyText": "Please add the TRUSTEDFACILITYADMIN also to this method.", "author": "balcirakpeter", "createdAt": "2020-10-15T12:55:00Z", "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java", "diffHunk": "@@ -25,10 +29,10 @@\n \tpublic static final String SECURITYADMIN = \"SECURITYADMIN\";\n \tpublic static final String CABINETADMIN = \"CABINETADMIN\";\n \tpublic static final String UNKNOWNROLENAME = \"UNKNOWN\";\n-\t\n+\n \tpublic static List<String> rolesAsList() {\n-\t\treturn Arrays.asList(CABINETADMIN, ENGINE, FACILITYADMIN, GROUPADMIN,\n-\t\t\t NOTIFICATIONS, PERUNADMIN, PERUNOBSERVER, REGISTRAR, RESOURCEADMIN, RESOURCESELFSERVICE,\n+\t\treturn Arrays.asList(CABINETADMIN, ENGINE, FACILITYADMIN, FACILITYOBSERVER, GROUPADMIN, GROUPOBSERVER,\n+\t\t\t NOTIFICATIONS, PERUNADMIN, PERUNOBSERVER, REGISTRAR, RESOURCEADMIN, RESOURCEOBSERVER, RESOURCESELFSERVICE,", "originalCommit": "adb912f6880c7d0960adbee43fe3de918b40fcfd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNjgyNQ==", "url": "https://github.com/CESNET/perun/pull/2931#discussion_r505726825", "bodyText": "Oh sorry, I forgot about it. Fixed!", "author": "HejdaJakub", "createdAt": "2020-10-15T17:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUxNzQ0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c84316681dacd737f9ee15104e10919cdd139ffd", "chunk": "diff --git a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\nindex 3902a00b1..a313cb3a6 100644\n--- a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\n+++ b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Role.java\n\n@@ -31,9 +31,9 @@ public class Role {\n \tpublic static final String UNKNOWNROLENAME = \"UNKNOWN\";\n \n \tpublic static List<String> rolesAsList() {\n-\t\treturn Arrays.asList(CABINETADMIN, ENGINE, FACILITYADMIN, FACILITYOBSERVER, GROUPADMIN, GROUPOBSERVER,\n-\t\t\t NOTIFICATIONS, PERUNADMIN, PERUNOBSERVER, REGISTRAR, RESOURCEADMIN, RESOURCEOBSERVER, RESOURCESELFSERVICE,\n-\t\t\t RPC, SECURITYADMIN, SELF, SERVICEUSER, SPONSOR, TOPGROUPCREATOR, UNKNOWNROLENAME,\n+\t\treturn Arrays.asList(CABINETADMIN, ENGINE, FACILITYADMIN, FACILITYOBSERVER, TRUSTEDFACILITYADMIN, GROUPADMIN,\n+\t\t\t GROUPOBSERVER, NOTIFICATIONS, PERUNADMIN, PERUNOBSERVER, REGISTRAR, RESOURCEADMIN, RESOURCEOBSERVER,\n+\t\t\t RESOURCESELFSERVICE, RPC, SECURITYADMIN, SELF, SERVICEUSER, SPONSOR, TOPGROUPCREATOR, UNKNOWNROLENAME,\n \t\t\t VOADMIN, VOOBSERVER);\n \t}\n }\n"}}, {"oid": "c84316681dacd737f9ee15104e10919cdd139ffd", "url": "https://github.com/CESNET/perun/commit/c84316681dacd737f9ee15104e10919cdd139ffd", "message": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER\n\n* I created three new roles, which should serve as observing variant for Group admin, Resource admin and Facility admin.\n* For Group observer I also had to edit method \"addAllSubgroupsToAuthzRoles\", where are some more privilege settings for Group admin.", "committedDate": "2020-10-15T17:35:35Z", "type": "commit"}, {"oid": "c84316681dacd737f9ee15104e10919cdd139ffd", "url": "https://github.com/CESNET/perun/commit/c84316681dacd737f9ee15104e10919cdd139ffd", "message": "Create new roles GROUPOBSERVER, RESOURCEOBSERVER, and FACILITYOBSERVER\n\n* I created three new roles, which should serve as observing variant for Group admin, Resource admin and Facility admin.\n* For Group observer I also had to edit method \"addAllSubgroupsToAuthzRoles\", where are some more privilege settings for Group admin.", "committedDate": "2020-10-15T17:35:35Z", "type": "forcePushed"}]}