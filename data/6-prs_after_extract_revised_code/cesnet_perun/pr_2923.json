{"pr_number": 2923, "pr_title": "Sponsorship expiration", "pr_createdAt": "2020-10-08T13:20:00Z", "pr_url": "https://github.com/CESNET/perun/pull/2923", "timeline": [{"oid": "71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "url": "https://github.com/CESNET/perun/commit/71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "message": "TODO", "committedDate": "2020-10-08T13:41:37Z", "type": "forcePushed"}, {"oid": "214e9d4376b18cfdbf15384b554851c9dd922524", "url": "https://github.com/CESNET/perun/commit/214e9d4376b18cfdbf15384b554851c9dd922524", "message": "TODO", "committedDate": "2020-10-08T13:50:25Z", "type": "forcePushed"}, {"oid": "7acdf20cfb199f1a138d7987796666f0e7b64563", "url": "https://github.com/CESNET/perun/commit/7acdf20cfb199f1a138d7987796666f0e7b64563", "message": "TODO", "committedDate": "2020-10-08T14:58:43Z", "type": "forcePushed"}, {"oid": "6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "url": "https://github.com/CESNET/perun/commit/6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "message": "TODO", "committedDate": "2020-10-09T13:21:05Z", "type": "forcePushed"}, {"oid": "5475fe471f7756ad767f9b9c9089a508c9e7e590", "url": "https://github.com/CESNET/perun/commit/5475fe471f7756ad767f9b9c9089a508c9e7e590", "message": "TODO", "committedDate": "2020-10-09T14:39:50Z", "type": "forcePushed"}, {"oid": "afd17ce545f226c8eb11628563b88aed4b2f30a0", "url": "https://github.com/CESNET/perun/commit/afd17ce545f226c8eb11628563b88aed4b2f30a0", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-09T15:05:36Z", "type": "forcePushed"}, {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "url": "https://github.com/CESNET/perun/commit/a9339627f3c86241e3810beb7c2cef3aa2783b1e", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-09T15:18:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMTU5NQ==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503111595", "bodyText": "Shouldn't you also add serializeToString method?", "author": "stavamichal", "createdAt": "2020-10-12T08:07:38Z", "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package cz.metacentrum.perun.core.api;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public class Sponsor extends User {\n+\tprivate LocalDate validityTo;\n+\tprivate boolean active;\n+\tprivate List<UserExtSource> userExtSources;\n+\tprivate List<Attribute> userAttributes;\n+\n+\tpublic Sponsor(User user) {\n+\t\tsuper(user.getId(), user.getUuid(), user.getFirstName(), user.getLastName(), user.getMiddleName(),\n+\t\t\t\tuser.getTitleBefore(), user.getTitleAfter(), user.getCreatedAt(), user.getCreatedBy(),\n+\t\t\t\tuser.getModifiedAt(), user.getModifiedBy(), user.isServiceUser(), user.isSponsoredUser(),\n+\t\t\t\tuser.getCreatedByUid(), user.getModifiedByUid());\n+\t}\n+\tpublic Sponsor(RichUser user) {\n+\t\tthis((User)user);\n+\t\tthis.userAttributes = user.getUserAttributes();\n+\t\tthis.userExtSources = user.getUserExtSources();\n+\t}\n+\n+\tpublic LocalDate getValidityTo() {\n+\t\treturn validityTo;\n+\t}\n+\n+\tpublic void setValidityTo(LocalDate validityTo) {\n+\t\tthis.validityTo = validityTo;\n+\t}\n+\n+\tpublic boolean isActive() {\n+\t\treturn active;\n+\t}\n+\n+\tpublic void setActive(boolean active) {\n+\t\tthis.active = active;\n+\t}\n+\n+\tpublic List<UserExtSource> getUserExtSources() {\n+\t\treturn userExtSources;\n+\t}\n+\n+\tpublic void setUserExtSources(List<UserExtSource> userExtSources) {\n+\t\tthis.userExtSources = userExtSources;\n+\t}\n+\n+\tpublic List<Attribute> getUserAttributes() {\n+\t\treturn userAttributes;\n+\t}\n+\n+\tpublic void setUserAttributes(List<Attribute> userAttributes) {\n+\t\tthis.userAttributes = userAttributes;\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"Sponsor[\" +\n+\t\t\t\t\"id=\" + getId() +\n+\t\t\t\t\", validityTo=\" + validityTo +\n+\t\t\t\t\", active=\" + active +\n+\t\t\t\t\", firstName='\" + firstName + '\\'' +\n+\t\t\t\t\", lastName='\" + lastName + '\\'' +\n+\t\t\t\t\", middleName='\" + middleName + '\\'' +\n+\t\t\t\t\", titleBefore='\" + titleBefore + '\\'' +\n+\t\t\t\t\", titleAfter='\" + titleAfter + '\\'' +\n+\t\t\t\t']';\n+\t}\n+}", "originalCommit": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0NDIxNg==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503344216", "bodyText": "I have replaced the inheritance from User class by composition, so it is no longer needed.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-12T14:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMTU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4e12d8785666dfebf820e9f0593815961966929d", "chunk": "diff --git a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\nindex 391c578f2..ae40581d2 100644\n--- a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\n+++ b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\n\n@@ -6,20 +6,19 @@ import java.util.List;\n /**\n  * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n  */\n-public class Sponsor extends User {\n+public class Sponsor {\n+\tprivate final User user;\n \tprivate LocalDate validityTo;\n \tprivate boolean active;\n \tprivate List<UserExtSource> userExtSources;\n \tprivate List<Attribute> userAttributes;\n \n \tpublic Sponsor(User user) {\n-\t\tsuper(user.getId(), user.getUuid(), user.getFirstName(), user.getLastName(), user.getMiddleName(),\n-\t\t\t\tuser.getTitleBefore(), user.getTitleAfter(), user.getCreatedAt(), user.getCreatedBy(),\n-\t\t\t\tuser.getModifiedAt(), user.getModifiedBy(), user.isServiceUser(), user.isSponsoredUser(),\n-\t\t\t\tuser.getCreatedByUid(), user.getModifiedByUid());\n+\t\tthis.user = user;\n \t}\n+\n \tpublic Sponsor(RichUser user) {\n-\t\tthis((User)user);\n+\t\tthis.user = user;\n \t\tthis.userAttributes = user.getUserAttributes();\n \t\tthis.userExtSources = user.getUserExtSources();\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzOTQ5Mg==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503139492", "bodyText": "You should also describe that null means \"forever\". Same for all other occurrences.", "author": "stavamichal", "createdAt": "2020-10-12T08:52:35Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1125,6 +1124,7 @@\n \t * @param name a map containing the full name or its parts (mandatory: firstName, lastName; optionally: titleBefore, titleAfter)\n \t * @param password  password\n \t * @param sponsor sponsoring user or null for the caller\n+\t * @param validityTo last day when the sponsorship is active", "originalCommit": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0ODU4Mg==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503348582", "bodyText": "I have updated the javadocs.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-12T14:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzOTQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4e12d8785666dfebf820e9f0593815961966929d", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\nindex e133fbc0f..fc5db8e00 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n\n@@ -1124,7 +1124,7 @@ public interface MembersManager {\n \t * @param name a map containing the full name or its parts (mandatory: firstName, lastName; optionally: titleBefore, titleAfter)\n \t * @param password  password\n \t * @param sponsor sponsoring user or null for the caller\n-\t * @param validityTo last day when the sponsorship is active\n+\t * @param validityTo last day when the sponsorship is active (null means the sponsorship will last forever)\n \t * @return new Member in the Vo\n \t * @throws InternalErrorException if given parameters are invalid\n \t * @throws PrivilegeException if not REGISTRAR or VOADMIN\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI3MjQyNg==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503272426", "bodyText": "Because of external sites, we need to preserve the old method and also create a new one.\nFor entry, RPC, and open API, wee need to preserve the method returning a list of rich users (and set it as deprecated) and also create a new method (with a different name I am afraid) returning a list of sponsors instead.", "author": "stavamichal", "createdAt": "2020-10-12T12:48:34Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java", "diffHunk": "@@ -1315,21 +1317,26 @@ public void updateUserExtSourceLastAccess(PerunSession sess, UserExtSource userE\n \t}\n \n \t@Override\n-\tpublic List<RichUser> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {\n+\tpublic List<Sponsor> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {", "originalCommit": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0ODk0Mg==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503348942", "bodyText": "I have created a new method and annotated the old one with the @deprecated annotation.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-12T14:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI3MjQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "4e12d8785666dfebf820e9f0593815961966929d", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\nindex 095c6a581..ddddd9911 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java\n\n@@ -1317,7 +1317,8 @@ public class UsersManagerEntry implements UsersManager {\n \t}\n \n \t@Override\n-\tpublic List<Sponsor> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {\n+\t@Deprecated\n+\tpublic List<RichUser> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {\n \t\tUtils.checkPerunSession(sess);\n \t\tUtils.notNull(member, \"member\");\n \t\t// Authorization\n"}}, {"oid": "4e12d8785666dfebf820e9f0593815961966929d", "url": "https://github.com/CESNET/perun/commit/4e12d8785666dfebf820e9f0593815961966929d", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-12T13:37:39Z", "type": "forcePushed"}, {"oid": "afac22ae931b3cd974eaf505bcc730ecc4789ce0", "url": "https://github.com/CESNET/perun/commit/afac22ae931b3cd974eaf505bcc730ecc4789ce0", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-12T13:40:12Z", "type": "forcePushed"}, {"oid": "9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "url": "https://github.com/CESNET/perun/commit/9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-12T14:40:38Z", "type": "forcePushed"}, {"oid": "b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "url": "https://github.com/CESNET/perun/commit/b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-12T14:49:10Z", "type": "forcePushed"}, {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2", "url": "https://github.com/CESNET/perun/commit/44eb12e877b385fc57c5b2847194ac25b29a8af2", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-12T14:53:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODk2OQ==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503698969", "bodyText": "I am missing a checks (In the whole PR), which ensure that the validity is not in the past.", "author": "balcirakpeter", "createdAt": "2020-10-13T06:36:22Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2428,6 +2480,13 @@ public MemberGroupStatus getUnifiedMemberGroupStatus(PerunSession sess, User use\n \t\treturn getMembersManagerImpl().findMembers(sess, vo, searchString, onlySponsored);\n \t}\n \n+\t@Override\n+\tpublic void updateSponsorshipValidity(PerunSession sess, Member sponsoredMember, User sponsor,", "originalCommit": "44eb12e877b385fc57c5b2847194ac25b29a8af2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczNjI1Nw==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503736257", "bodyText": "We have agreed with @stavamichal on keeping this behavior since we allow this in the membership expiration. If we wanted to change it, we would create a separate PR.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-13T07:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODk2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwODM4Ng==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503708386", "bodyText": "Please add JavaDoc", "author": "balcirakpeter", "createdAt": "2020-10-13T06:56:39Z", "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package cz.metacentrum.perun.core.api;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import cz.metacentrum.perun.rpc.stdserializers.LocalDateSerializer;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public class Sponsor {", "originalCommit": "44eb12e877b385fc57c5b2847194ac25b29a8af2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczNjMwOA==", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503736308", "bodyText": "Added.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-13T07:46:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwODM4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d687a1ea30922953a1ef9b6af13487503771530c", "chunk": "diff --git a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\nindex 6a99ca12c..deb7333cc 100644\n--- a/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\n+++ b/perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java\n\n@@ -7,6 +7,10 @@ import java.time.LocalDate;\n import java.util.List;\n \n /**\n+ * Class representing a Sponsor for some specific member. This object contains information\n+ * about the validity of this sponsorship for the specific member. It also contains additional\n+ * information about the sponsor so it can be obtained in one API call.\n+ *\n  * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n  */\n public class Sponsor {\n"}}, {"oid": "d687a1ea30922953a1ef9b6af13487503771530c", "url": "https://github.com/CESNET/perun/commit/d687a1ea30922953a1ef9b6af13487503771530c", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-13T07:43:28Z", "type": "commit"}, {"oid": "d687a1ea30922953a1ef9b6af13487503771530c", "url": "https://github.com/CESNET/perun/commit/d687a1ea30922953a1ef9b6af13487503771530c", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "committedDate": "2020-10-13T07:43:28Z", "type": "forcePushed"}]}