{"pr_number": 2916, "pr_title": "Added createSponsoredMembers", "pr_createdAt": "2020-09-30T20:41:26Z", "pr_url": "https://github.com/CESNET/perun/pull/2916", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5Mzg0MQ==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r497993841", "bodyText": "'guestName' -> 'guestNames' plus you do not process firstName/lastName, so it shouldn't be mentioned in the RpcException.", "author": "zlamalp", "createdAt": "2020-10-01T05:37:10Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -156,6 +156,39 @@ public RichMember call(ApiCaller ac, Deserializer params) throws PerunException\n \t\t}\n \t},\n \n+\t/*#\n+\t * Creates a new sponsored member in a given VO and namespace.\n+\t *\n+\t * Can be called either by a user with role SPONSOR, in that case the user becomes the sponsor,\n+\t * or by a user with role REGISTRAR that must specify the sponsoring user using ID.\n+\t *\n+\t * @param guestNames List<String> identification of sponsored accounts, e.g. \"John Doe\" or \"conference member 1\"\n+\t * @param vo int VO ID\n+\t * @param namespace String namespace selecting remote system for storing the password\n+\t * @param sponsor int sponsor's ID\n+\t * @return Map<RichMember, String> newly created sponsored member and their password\n+\t */\n+\tcreateSponsoredMembers {\n+\t\t@Override\n+\t\tpublic Map<String, String> call(ApiCaller ac, Deserializer params) throws PerunException {\n+\t\t\tparams.stateChangingCheck();\n+\t\t\tString password = params.readString(\"password\");\n+\t\t\tVo vo =  ac.getVoById(params.readInt(\"vo\"));\n+\t\t\tString namespace = params.readString(\"namespace\");\n+\t\t\tUser sponsor = null;\n+\t\t\tif(params.contains(\"sponsor\")) {\n+\t\t\t\tsponsor = ac.getUserById(params.readInt(\"sponsor\"));\n+\t\t\t}\n+\t\t\tList<String> names;\n+\t\t\tif (params.contains(\"guestNames\")) {\n+\t\t\t\tnames = new ArrayList<>(params.readList(\"guestNames\", String.class));\n+\t\t\t} else {\n+\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"Missing value. Either 'guestName' or ('firstName' and 'lastName') must be sent.\");", "originalCommit": "841747e374d5ed3975f4c0339ed93f4b0d1c69d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzMxOA==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498737318", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-02T10:18:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5Mzg0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "619c3c14952efb72dae4857cefb0a3cc70386719", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\nindex 24a1fceea..12198d30e 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\n\n@@ -156,6 +156,52 @@ public enum MembersManagerMethod implements ManagerMethod {\n \t\t}\n \t},\n \n+\t/*#\n+\t * Creates a sponsored membership for the given user.\n+\t *\n+\t * Can be called with specific sponsor. If the parameter sponsor is null, then the user\n+\t * which called this method will be set as a sponsor.\n+\t *\n+\t * @param vo int id of virtual organization\n+\t * @param userToBeSponsored int id of user, that will be sponsored by sponsor\n+\t * @param namespace String used for selecting external system in which guest user account will be created\n+\t * @param password String password\n+\t * @param sponsor int id of sponsoring user\n+\t * @return RichMember sponsored member\n+\t */\n+\t/*#\n+\t * Creates a sponsored membership for the given user.\n+\t *\n+\t * Can be called with specific sponsor. If the parameter sponsor is null, then the user\n+\t * which called this method will be set as a sponsor.\n+\t *\n+\t * @param vo int id of virtual organization\n+\t * @param userToBeSponsored int id of user, that will be sponsored by sponsor\n+\t * @param namespace String used for selecting external system in which guest user account will be created\n+\t * @param password String password\n+\t * @return RichMember sponsored member\n+\t */\n+\tsetSponsoredMember {\n+\t\t@Override\n+\t\tpublic RichMember call(ApiCaller ac, Deserializer params) throws PerunException {\n+\t\t\tparams.stateChangingCheck();\n+\t\t\tString password = params.readString(\"password\");\n+\t\t\tVo vo =  ac.getVoById(params.readInt(\"vo\"));\n+\t\t\tString namespace = params.readString(\"namespace\");\n+\t\t\tUser sponsor = null;\n+\t\t\tif(params.contains(\"sponsor\")) {\n+\t\t\t\tsponsor = ac.getUserById(params.readInt(\"sponsor\"));\n+\t\t\t}\n+\t\t\tUser userToBeSponsored;\n+\t\t\tif(params.contains(\"userToBeSponsored\")) {\n+\t\t\t\tuserToBeSponsored = ac.getUserById(params.readInt(\"userToBeSponsored\"));\n+\t\t\t} else {\n+\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"Missing value. The 'userToBeSponsored' must be sent.\");\n+\t\t\t}\n+\t\t\treturn ac.getMembersManager().setSponsoredMember(ac.getSession(), vo, userToBeSponsored, namespace, password, sponsor);\n+\t\t}\n+\t},\n+\n \t/*#\n \t * Creates a new sponsored member in a given VO and namespace.\n \t *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5NTc2Mw==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r497995763", "bodyText": "createSponsoredMember -> createSponsoredMembers", "author": "zlamalp", "createdAt": "2020-10-01T05:44:25Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1193,6 +1193,27 @@ public RichMember createSponsoredMember(PerunSession session, Vo vo, String name\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.createSponsoredMember(session, vo, namespace, name, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic Map<String, String> createSponsoredMembers(PerunSession session, Vo vo, String namespace, List<String> names, User sponsor) throws PrivilegeException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(names, \"names\");\n+\n+\t\tif (sponsor == null) {\n+\t\t\t//sponsor is the caller\n+\t\t\tsponsor = session.getPerunPrincipal().getUser();\n+\t\t} else {\n+\t\t\t//Authorization\n+\t\t\tif (!AuthzResolver.authorizedInternal(session, \"createSponsoredMembers_Vo_String_List<String>_User_policy\", Arrays.asList(vo, sponsor))) {\n+\t\t\t\tthrow new PrivilegeException(session, \"createSponsoredMember\");", "originalCommit": "841747e374d5ed3975f4c0339ed93f4b0d1c69d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzM0OA==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498737348", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-02T10:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5NTc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "619c3c14952efb72dae4857cefb0a3cc70386719", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\nindex 8674b75fb..f2caea2b1 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n\n@@ -1193,6 +1189,32 @@ public class MembersManagerEntry implements MembersManager {\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.createSponsoredMember(session, vo, namespace, name, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic RichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor)\n+\t\tthrows PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException,\n+\t\tExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException,\n+\t\tUserNotInRoleException, PasswordStrengthException, InvalidLoginException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(userToBeSponsored, \"userToBeSponsored\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(password, \"password\");\n+\n+\t\tlog.debug(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());\n+\n+\t\tif (sponsor == null) {\n+\t\t\t//sponsor is the caller, authorization is checked in Bl\n+\t\t\tsponsor = session.getPerunPrincipal().getUser();\n+\t\t} else {\n+\t\t\t//Authorization\n+\t\t\tif (!AuthzResolver.authorizedInternal(session, \"setSponsoredMember_Vo_User_String_String_User_policy\", vo, sponsor)) {\n+\t\t\t\tthrow new PrivilegeException(session, \"setSponsoredMember\");\n+\t\t\t}\n+\t\t}\n+\t\t//create the sponsored member\n+\t\treturn membersManagerBl.getRichMember(session, membersManagerBl.setSponsoredMember(session, vo, userToBeSponsored, namespace, password, sponsor, true));\n+\t}\n+\n \t@Override\n \tpublic Map<String, String> createSponsoredMembers(PerunSession session, Vo vo, String namespace, List<String> names, User sponsor) throws PrivilegeException, AttributeNotExistsException, WrongAttributeAssignmentException {\n \t\tUtils.checkPerunSession(session);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5ODA2OA==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r497998068", "bodyText": "I don't think that you need to get RichMember, you can use\nperunBl.getUsersManagerBl().getUserByMember(sess, member);\nBut when I think about it more, this whole solution is missing connection between created sponsored account in perun and login/u\u010do. Like when it partially fails, then caller doesn't know, where to start again, when he sends only list of \"names\" to the API and there is no connection between that name and returned U\u010cO. So you would have to query perun or password backend again to give you what was done and where to start again.", "author": "zlamalp", "createdAt": "2020-10-01T05:52:21Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2273,6 +2273,31 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\treturn sponsoredMember;\n \t}\n \n+\t@Override\n+\tpublic Map<String, String> createSponsoredMembers(PerunSession sess, Vo vo, String namespace, List<String> names, User sponsor, boolean asyncValidation) throws AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tMap<String, String> result = new HashMap<>();\n+\t\tPasswordManagerModule module = getPerunBl().getUsersManagerBl().getPasswordManagerModule(sess, namespace);\n+\n+\t\tfor (String name : names) {\n+\t\t\t// generate random password\n+\t\t\tString password = module.generateRandomPassword(sess, null);\n+\t\t\tMap<String, String> mapName = new HashMap<>();\n+\t\t\tmapName.put(\"guestName\", name);\n+\t\t\t// create sponsored member\n+\t\t\tRichMember richMember;\n+\t\t\ttry {\n+\t\t\t\trichMember = getRichMember(sess, createSponsoredMember(sess, vo, namespace, mapName, password, sponsor, asyncValidation));", "originalCommit": "841747e374d5ed3975f4c0339ed93f4b0d1c69d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3ODU2Mg==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498678562", "bodyText": "I think about something like return an error for specific member to the map to the value. Something like:\nsponsor1Name -> password1\nsponsor2Name -> ERROR: error when creating\nsponsor3Name -> password3\nsponsor4Name -> ERROR: error when creating\n\nThen it would be on frondend to show these errors to user. What do you think @zlamalp ?\nIt is not standard behavior, need to be precisely defined in javadoc, but it should work much better than this.", "author": "stavamichal", "createdAt": "2020-10-02T08:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5ODA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4NTQ4MA==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498685480", "bodyText": "We discussed this further and come up with following solution.\nYou will technically return Map<String,Map<String,String>>.\n\nKeys will be names of the sponsored members, so that GUI can map each result to the originating data.\nValue will be map again, with keys status, login and password. Then in status you can put \"OK\" or \"Error - ....message....\" and in login/password you put generated U\u010cO a password respectively.\nThis way we can pass all necessary information to the GUI and extend it in the future if necessary.\n\nPlease add detailed description about object structure to the Javadoc.", "author": "zlamalp", "createdAt": "2020-10-02T08:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5ODA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzgwOQ==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498737809", "bodyText": "This looks better, thank you, I've changed the returned type based on this.", "author": "metodej", "createdAt": "2020-10-02T10:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5ODA2OA=="}], "type": "inlineReview", "revised_code": {"commit": "619c3c14952efb72dae4857cefb0a3cc70386719", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\nindex 1887906a6..d017d230b 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n\n@@ -2245,31 +2239,37 @@ public class MembersManagerBlImpl implements MembersManagerBl {\n \t\t}\n \t\tUser sponsoredUser = getPerunBl().getUsersManagerBl().createUser(session, user);\n \n-\t\t//create the user account in external system\n-\t\tMap<String, String> p = new HashMap<>();\n-\t\tp.put(PasswordManagerModule.TITLE_BEFORE_KEY,sponsoredUser.getTitleBefore());\n-\t\tp.put(PasswordManagerModule.FIRST_NAME_KEY,sponsoredUser.getFirstName());\n-\t\tp.put(PasswordManagerModule.LAST_NAME_KEY,sponsoredUser.getLastName());\n-\t\tp.put(PasswordManagerModule.TITLE_AFTER_KEY,sponsoredUser.getTitleAfter());\n-\t\tp.put(PasswordManagerModule.PASSWORD_KEY,password);\n-\t\tMap<String, String> r = getPerunBl().getUsersManagerBl().generateAccount(session, namespace, p);\n-\t\tString login = r.get(loginAttributeName);\n-\t\tsetLoginToSponsoredUser(session,sponsoredUser,loginAttributeName,login);\n+\t\treturn setSponsoredMember(session, vo, sponsoredUser, namespace, password, sponsor, asyncValidation);\n+\t}\n+\n+\t@Override\n+\tpublic Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n+\t\t//check that sponsoring user has role SPONSOR for the VO\n+\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t}\n+\t\tString loginAttributeName = PasswordManagerModule.LOGIN_PREFIX + namespace;\n+\t\tString attributeValue = getAttributeValueAsString (session, userToBeSponsored, loginAttributeName);\n+\n+\t\t//create the user account in external system if does not exist yet\n+\t\tString login = createUserAccountInExternalSystem (session, userToBeSponsored, namespace, attributeValue, loginAttributeName, password);\n \n \t\t//create the member in Perun\n-\t\tMember sponsoredMember = getMembersManagerImpl().createSponsoredMember(session, vo, sponsoredUser, sponsor);\n+\t\tMember sponsoredMember = getMembersManagerImpl().createSponsoredMember(session, vo, userToBeSponsored, sponsor);\n \t\tgetPerunBl().getAuditer().log(session, new MemberCreated(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsoredMemberSet(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsorshipEstablished(sponsoredMember, sponsor));\n \t\textendMembership(session, sponsoredMember);\n \t\tinsertToMemberGroup(session, sponsoredMember, vo);\n-\t\tif(asyncValidation) {\n+\n+\t\tif (asyncValidation) {\n \t\t\tvalidateMemberAsync(session, sponsoredMember);\n \t\t} else {\n \t\t\t//for unit tests\n \t\t\tvalidateMember(session, sponsoredMember);\n \t\t}\n-\t\tgetPerunBl().getUsersManagerBl().validatePasswordAndSetExtSources(session, sponsoredUser, login, namespace);\n+\t\tgetPerunBl().getUsersManagerBl().validatePasswordAndSetExtSources(session, userToBeSponsored, login, namespace);\n+\n \t\treturn sponsoredMember;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NDQ4Nw==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498674487", "bodyText": "This message is little confusing. You can probably skip the whole part with \"and its User\".", "author": "stavamichal", "createdAt": "2020-10-02T08:08:09Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1138,6 +1139,21 @@\n \t */\n \tRichMember createSponsoredMember(PerunSession session, Vo vo, String namespace, Map<String, String> name, String password, User sponsor) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n \n+\t/**\n+\t * Creates a new sponsored Members (with random generated passwords) and its User.", "originalCommit": "841747e374d5ed3975f4c0339ed93f4b0d1c69d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzQwMg==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498737402", "bodyText": "Fixed.", "author": "metodej", "createdAt": "2020-10-02T10:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NDQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "619c3c14952efb72dae4857cefb0a3cc70386719", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\nindex b746520e2..24c43a336 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n\n@@ -1139,6 +1139,32 @@ public interface MembersManager {\n \t */\n \tRichMember createSponsoredMember(PerunSession session, Vo vo, String namespace, Map<String, String> name, String password, User sponsor) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n \n+\t/**\n+\t * Creates a sponsored membership for the given user.\n+\t *\n+\t * @param session actor\n+\t * @param vo virtual organization for the member\n+\t * @param userToBeSponsored user, that will be sponsored by sponsor\n+\t * @param namespace namespace for selecting password module\n+\t * @param password password\n+\t * @param sponsor sponsoring user or null for the caller\n+\t *\n+\t * @return sponsored member\n+\t *\n+\t * @throws PrivilegeException\n+\t * @throws AlreadyMemberException\n+\t * @throws LoginNotExistsException\n+\t * @throws PasswordCreationFailedException\n+\t * @throws ExtendMembershipException\n+\t * @throws WrongAttributeValueException\n+\t * @throws ExtSourceNotExistsException\n+\t * @throws WrongReferenceAttributeValueException\n+\t * @throws UserNotInRoleException\n+\t * @throws PasswordStrengthException\n+\t * @throws InvalidLoginException\n+\t */\n+\tRichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n+\n \t/**\n \t * Creates a new sponsored Members (with random generated passwords) and its User.\n \t *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczODczMQ==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498738731", "bodyText": "I would start this message like \"ERROR: \" + message.", "author": "stavamichal", "createdAt": "2020-10-02T10:21:41Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2284,15 +2284,21 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\t\tMap<String, String> mapName = new HashMap<>();\n \t\t\tmapName.put(\"guestName\", name);\n \t\t\t// create sponsored member\n-\t\t\tRichMember richMember;\n+\t\t\tUser user;\n \t\t\ttry {\n-\t\t\t\trichMember = getRichMember(sess, createSponsoredMember(sess, vo, namespace, mapName, password, sponsor, asyncValidation));\n+\t\t\t\tuser = perunBl.getUsersManagerBl().getUserByMember(sess, createSponsoredMember(sess, vo, namespace, mapName, password, sponsor, asyncValidation));\n+\t\t\t\t// get login to return\n+\t\t\t\tString login = perunBl.getAttributesManagerBl().getAttribute(sess, user, PasswordManagerModule.LOGIN_PREFIX + namespace).valueAsString();\n+\t\t\t\tMap<String, String> statusWithLogin = new HashMap<>();\n+\t\t\t\tstatusWithLogin.put(\"status\", \"OK\");\n+\t\t\t\tstatusWithLogin.put(\"login\", login);\n+\t\t\t\tstatusWithLogin.put(\"password\", password);\n+\t\t\t\tresult.put(name, statusWithLogin);\n \t\t\t} catch (Exception e) {\n-\t\t\t\tthrow new InternalErrorException(\"These accounts had been created before exception was thrown: \" + result, e);\n+\t\t\t\tMap<String, String> status = new HashMap<>();\n+\t\t\t\tstatus.put(\"status\", e.getMessage());", "originalCommit": "26422eff423c7dd75692696257e1e6e3b5acdb2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0NTkyOA==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r498745928", "bodyText": "I think that every exception message implicitly starts with \"Error code: message\".", "author": "metodej", "createdAt": "2020-10-02T10:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczODczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "619c3c14952efb72dae4857cefb0a3cc70386719", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\nindex d82fe4ec4..d017d230b 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n\n@@ -2284,26 +2284,38 @@ public class MembersManagerBlImpl implements MembersManagerBl {\n \t\t\tMap<String, String> mapName = new HashMap<>();\n \t\t\tmapName.put(\"guestName\", name);\n \t\t\t// create sponsored member\n-\t\t\tUser user;\n+\t\t\tRichMember richMember;\n \t\t\ttry {\n-\t\t\t\tuser = perunBl.getUsersManagerBl().getUserByMember(sess, createSponsoredMember(sess, vo, namespace, mapName, password, sponsor, asyncValidation));\n-\t\t\t\t// get login to return\n-\t\t\t\tString login = perunBl.getAttributesManagerBl().getAttribute(sess, user, PasswordManagerModule.LOGIN_PREFIX + namespace).valueAsString();\n-\t\t\t\tMap<String, String> statusWithLogin = new HashMap<>();\n-\t\t\t\tstatusWithLogin.put(\"status\", \"OK\");\n-\t\t\t\tstatusWithLogin.put(\"login\", login);\n-\t\t\t\tstatusWithLogin.put(\"password\", password);\n-\t\t\t\tresult.put(name, statusWithLogin);\n+\t\t\t\trichMember = getRichMember(sess, createSponsoredMember(sess, vo, namespace, mapName, password, sponsor, asyncValidation));\n \t\t\t} catch (Exception e) {\n-\t\t\t\tMap<String, String> status = new HashMap<>();\n-\t\t\t\tstatus.put(\"status\", e.getMessage());\n-\t\t\t\tresult.put(name, status);\n+\t\t\t\tthrow new InternalErrorException(\"These accounts had been created before exception was thrown: \" + result, e);\n \t\t\t}\n+\t\t\t// get login to return\n+\t\t\tString login = perunBl.getAttributesManagerBl().getAttribute(sess, richMember.getUser(), PasswordManagerModule.LOGIN_PREFIX + namespace).valueAsString();\n+\t\t\tresult.put(login, password);\n \t\t}\n \n \t\treturn result;\n \t}\n \n+\t/**\n+\t * Try to get attribute from attribute manager\n+\t *\n+\t * @param session perun session\n+\t * @param userToBeSponsored user, that will be sponsored by sponsor\n+\t * @param loginAttributeName login attribute name\n+\t * @return attributeValue\n+\t */\n+\tprivate String getAttributeValueAsString (PerunSession session, User userToBeSponsored, String loginAttributeName) {\n+\t\tString attributeValue;\n+\t\ttry {\n+\t\t\tattributeValue = perunBl.getAttributesManagerBl().getAttribute(session, userToBeSponsored, loginAttributeName).valueAsString();\n+\t\t} catch (WrongAttributeAssignmentException | AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t\treturn attributeValue;\n+\t}\n+\n \tprivate void setLoginToSponsoredUser(PerunSession sess, User sponsoredUser, String loginAttributeName, String login) {\n \t\ttry {\n \t\t\tAttribute a = getPerunBl().getAttributesManagerBl().getAttribute(sess, sponsoredUser, loginAttributeName);\n"}}, {"oid": "619c3c14952efb72dae4857cefb0a3cc70386719", "url": "https://github.com/CESNET/perun/commit/619c3c14952efb72dae4857cefb0a3cc70386719", "message": "Added createSponsoredMembers\n\n- added new method to create multiple sponsored members in vo using one sponsor with generated passwords which are returned with logins in map, if there is some exception thrown during creation of members, already created members are in exception message\n- also added tests and changed DummyPasswordManagerModule to return some random password", "committedDate": "2020-10-02T10:44:25Z", "type": "commit"}, {"oid": "904d9e3ae189715c27f126304a11c3c064ace06e", "url": "https://github.com/CESNET/perun/commit/904d9e3ae189715c27f126304a11c3c064ace06e", "message": "Fixes based on review\n\n- fixed typos in javadoc and exception messages\n- changed returning type to Map<String, Map<String, String>> and also added new test", "committedDate": "2020-10-02T10:47:37Z", "type": "forcePushed"}, {"oid": "442a661c89146be5a87d9973270c3543ad3e4f97", "url": "https://github.com/CESNET/perun/commit/442a661c89146be5a87d9973270c3543ad3e4f97", "message": "Fixes based on review\n\n- fixed typos in javadoc and exception messages\n- changed returning type to Map<String, Map<String, String>> and also added new test\n- extended rights of createSponsoredMember and createSponsoredMembers to sponsor of vo", "committedDate": "2020-10-05T10:06:53Z", "type": "commit"}, {"oid": "442a661c89146be5a87d9973270c3543ad3e4f97", "url": "https://github.com/CESNET/perun/commit/442a661c89146be5a87d9973270c3543ad3e4f97", "message": "Fixes based on review\n\n- fixed typos in javadoc and exception messages\n- changed returning type to Map<String, Map<String, String>> and also added new test\n- extended rights of createSponsoredMember and createSponsoredMembers to sponsor of vo", "committedDate": "2020-10-05T10:06:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3NjQyNQ==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r500176425", "bodyText": "You should add the whole information 'sponsor is the caller, authorization is checked in Bl'.", "author": "stavamichal", "createdAt": "2020-10-06T10:42:40Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1215,6 +1215,27 @@ public RichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeS\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.setSponsoredMember(session, vo, userToBeSponsored, namespace, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic Map<String, Map<String, String>> createSponsoredMembers(PerunSession session, Vo vo, String namespace, List<String> names, User sponsor) throws PrivilegeException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(names, \"names\");\n+\n+\t\tif (sponsor == null) {\n+\t\t\t//sponsor is the caller", "originalCommit": "442a661c89146be5a87d9973270c3543ad3e4f97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4NDQwMQ==", "url": "https://github.com/CESNET/perun/pull/2916#discussion_r500184401", "bodyText": "Added.", "author": "metodej", "createdAt": "2020-10-06T10:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3NjQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8d09bc15d45e1783c2d0344e4fd8d66096e89fe", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\nindex 88f1d08b4..18c33d2c9 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n\n@@ -1223,7 +1223,7 @@ public class MembersManagerEntry implements MembersManager {\n \t\tUtils.notNull(names, \"names\");\n \n \t\tif (sponsor == null) {\n-\t\t\t//sponsor is the caller\n+\t\t\t//sponsor is the caller, authorization is checked in Bl\n \t\t\tsponsor = session.getPerunPrincipal().getUser();\n \t\t} else {\n \t\t\t//Authorization\n"}}, {"oid": "c8d09bc15d45e1783c2d0344e4fd8d66096e89fe", "url": "https://github.com/CESNET/perun/commit/c8d09bc15d45e1783c2d0344e4fd8d66096e89fe", "message": "Fixes based on review\n\n- expanded comment", "committedDate": "2020-10-06T10:56:47Z", "type": "commit"}]}