{"pr_number": 2880, "pr_title": "Core - new method to create service user", "pr_createdAt": "2020-09-02T09:19:21Z", "pr_url": "https://github.com/CESNET/perun/pull/2880", "timeline": [{"oid": "591f1f649d916733cfedca5e94cf9d0750bcbe4e", "url": "https://github.com/CESNET/perun/commit/591f1f649d916733cfedca5e94cf9d0750bcbe4e", "message": "Core - new method to create service user\n\n* Created new method createServiceUser which can be used to create a\nservice user without any members.", "committedDate": "2020-09-02T12:58:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDM4Nw==", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r483424387", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n          \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsUes\");", "author": "zlamalp", "createdAt": "2020-09-04T06:56:03Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "originalCommit": "591f1f649d916733cfedca5e94cf9d0750bcbe4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MzEwNA==", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r484353104", "bodyText": "Fixed.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-07T10:47:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDM4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "90514adebf40164360e045796457d8596b9d90d6", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\nindex cba1df577..3583f0172 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n\n@@ -1457,7 +1457,7 @@ public class UsersManagerEntryIntegrationTest extends AbstractPerunIntegrationTe\n \n \t@Test\n \tpublic void testCreateServiceUserSetsUes() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsUes\");\n \n \t\tCandidate candidate = setUpCandidateForSpecificUser1();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDQ3OA==", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r483424478", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n          \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserFailsForAlreadyExistingUes\");", "author": "zlamalp", "createdAt": "2020-09-04T06:56:16Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tUserExtSource candidateUes = candidate.getUserExtSource();\n+\t\tUser userByUes = usersManager.getUserByExtSourceNameAndExtLogin(sess, candidateUes.getExtSource().getName(),\n+\t\t\t\tcandidateUes.getLogin());\n+\n+\t\tassertThat(createdUser).isEqualByComparingTo(userByUes);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserFailsForAlreadyExistingUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "originalCommit": "591f1f649d916733cfedca5e94cf9d0750bcbe4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MzE1Mg==", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r484353152", "bodyText": "Fixed.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-07T10:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "90514adebf40164360e045796457d8596b9d90d6", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\nindex cba1df577..3583f0172 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java\n\n@@ -1457,7 +1457,7 @@ public class UsersManagerEntryIntegrationTest extends AbstractPerunIntegrationTe\n \n \t@Test\n \tpublic void testCreateServiceUserSetsUes() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsUes\");\n \n \t\tCandidate candidate = setUpCandidateForSpecificUser1();\n \n"}}, {"oid": "90514adebf40164360e045796457d8596b9d90d6", "url": "https://github.com/CESNET/perun/commit/90514adebf40164360e045796457d8596b9d90d6", "message": "Core - new method to create service user\n\n* Created new method createServiceUser which can be used to create a\nservice user without any members.", "committedDate": "2020-09-07T10:47:04Z", "type": "commit"}, {"oid": "90514adebf40164360e045796457d8596b9d90d6", "url": "https://github.com/CESNET/perun/commit/90514adebf40164360e045796457d8596b9d90d6", "message": "Core - new method to create service user\n\n* Created new method createServiceUser which can be used to create a\nservice user without any members.", "committedDate": "2020-09-07T10:47:04Z", "type": "forcePushed"}]}