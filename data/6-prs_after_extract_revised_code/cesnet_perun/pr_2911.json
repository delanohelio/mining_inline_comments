{"pr_number": 2911, "pr_title": "check quota path syntax acccording to regex, not URI", "pr_createdAt": "2020-09-24T15:28:19Z", "pr_url": "https://github.com/CESNET/perun/pull/2911", "timeline": [{"oid": "a059116e2ef1bad98d7db11af75dd6162c2e0f57", "url": "https://github.com/CESNET/perun/commit/a059116e2ef1bad98d7db11af75dd6162c2e0f57", "message": "test quota syntax according to regex, not URI", "committedDate": "2020-09-23T14:36:47Z", "type": "commit"}, {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e", "url": "https://github.com/CESNET/perun/commit/b5b759485a9cd7296f4ebc2992dcac309e8c042e", "message": "add unit test", "committedDate": "2020-09-24T15:25:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494774275", "bodyText": "The regex could be maybe a constant?", "author": "metodej", "createdAt": "2020-09-25T06:29:39Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n+\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n+\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {", "originalCommit": "b5b759485a9cd7296f4ebc2992dcac309e8c042e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMTk5Mg==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r495531992", "bodyText": "You are right Metodej, but even better would be to create a static variable outside of this method and precompile the regex there so it does not have to be compiled each time this method Is called.", "author": "balcirakpeter", "createdAt": "2020-09-27T05:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3OTkwNg==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498079906", "bodyText": "Fixed.", "author": "mvocu", "createdAt": "2020-10-01T08:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0d2a539d2d6bc488bd33305e93e1160eb438037e", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\nindex 2bbd7a146..76c5ab6e5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n\n@@ -784,11 +783,10 @@ public class ModulesUtilsBlImpl implements ModulesUtilsBl {\n \t\t\tif(path == null || path.isEmpty()) throw new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"The path of some volume where quota should be set is null.\");\n \n \t\t\t//testing if path is unique\n-\t\t\tString canonicalPath;\n-\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\tString canonicalPath = Paths.get(path).normalize().toString();\n \t\t\t//path should not end on '/' (problem with some systems as GPFS)\n \t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {\n+\t\t\tif(!quotaPathPattern.matcher(canonicalPath).matches()) {\n \t\t\t\tthrow new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"Path '\" + path + \"' is not correct form.\");\n \t\t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDUxOA==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494774518", "bodyText": "I think there is supposed to be name of the test in comment.", "author": "metodej", "createdAt": "2020-09-25T06:30:11Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java", "diffHunk": "@@ -715,6 +715,15 @@ public void checkQuotasErrorInValue() throws Exception {\n \t\tmodulesUtilsBl.checkAndTransferQuotas(dataQuotasAttribute, resource, null, true);\n \t}\n \n+\t@Test(expected=WrongAttributeValueException.class)\n+\tpublic void checkQuotasErrorInPath() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"WrongAttributeValueException\");", "originalCommit": "b5b759485a9cd7296f4ebc2992dcac309e8c042e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4ODAzOQ==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498088039", "bodyText": "Fixed in the original method also.", "author": "mvocu", "createdAt": "2020-10-01T08:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDUxOA=="}], "type": "inlineReview", "revised_code": {"commit": "0d2a539d2d6bc488bd33305e93e1160eb438037e", "chunk": "diff --git a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java\nindex 976809001..b78ae1095 100644\n--- a/perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java\n+++ b/perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java\n\n@@ -708,7 +708,7 @@ public class ModulesUtilsEntryIntegrationTest extends AbstractPerunIntegrationTe\n \n \t@Test(expected=WrongAttributeValueException.class)\n \tpublic void checkQuotasErrorInValue() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"WrongAttributeValueException\");\n+\t\tSystem.out.println(CLASS_NAME + \"checkQuotasErrorInValue\");\n \t\tResource resource = new Resource(10, \"test\", \"test\", 10, 10);\n \t\tAttribute dataQuotasAttribute = getDataQuotasAttribute();\n \t\t((LinkedHashMap) dataQuotasAttribute.getValue()).put(\"/new/path\", \"b20:1\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NTA1MA==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494775050", "bodyText": "I think the declaration and the assignment of the variable could be on one line.", "author": "metodej", "createdAt": "2020-09-25T06:31:38Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "originalCommit": "b5b759485a9cd7296f4ebc2992dcac309e8c042e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4MDQzMg==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498080432", "bodyText": "Fixed.", "author": "mvocu", "createdAt": "2020-10-01T08:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NTA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "0d2a539d2d6bc488bd33305e93e1160eb438037e", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\nindex 2bbd7a146..76c5ab6e5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n\n@@ -784,11 +783,10 @@ public class ModulesUtilsBlImpl implements ModulesUtilsBl {\n \t\t\tif(path == null || path.isEmpty()) throw new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"The path of some volume where quota should be set is null.\");\n \n \t\t\t//testing if path is unique\n-\t\t\tString canonicalPath;\n-\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\tString canonicalPath = Paths.get(path).normalize().toString();\n \t\t\t//path should not end on '/' (problem with some systems as GPFS)\n \t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {\n+\t\t\tif(!quotaPathPattern.matcher(canonicalPath).matches()) {\n \t\t\t\tthrow new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"Path '\" + path + \"' is not correct form.\");\n \t\t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MjQ4MA==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494782480", "bodyText": "Also I think that the normalize() function changes slashes in windows and then the regex does not match there. But I don't know if we care about users with windows...", "author": "metodej", "createdAt": "2020-09-25T06:50:08Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "originalCommit": "b5b759485a9cd7296f4ebc2992dcac309e8c042e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwODUyNw==", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494908527", "bodyText": "We are not supporting window's path at this moment so this is ok.", "author": "stavamichal", "createdAt": "2020-09-25T10:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MjQ4MA=="}], "type": "inlineReview", "revised_code": {"commit": "0d2a539d2d6bc488bd33305e93e1160eb438037e", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\nindex 2bbd7a146..76c5ab6e5 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java\n\n@@ -784,11 +783,10 @@ public class ModulesUtilsBlImpl implements ModulesUtilsBl {\n \t\t\tif(path == null || path.isEmpty()) throw new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"The path of some volume where quota should be set is null.\");\n \n \t\t\t//testing if path is unique\n-\t\t\tString canonicalPath;\n-\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\tString canonicalPath = Paths.get(path).normalize().toString();\n \t\t\t//path should not end on '/' (problem with some systems as GPFS)\n \t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {\n+\t\t\tif(!quotaPathPattern.matcher(canonicalPath).matches()) {\n \t\t\t\tthrow new WrongAttributeValueException(quotasAttribute, firstPlaceholder, secondPlaceholder, \"Path '\" + path + \"' is not correct form.\");\n \t\t\t}\n \n"}}, {"oid": "0d2a539d2d6bc488bd33305e93e1160eb438037e", "url": "https://github.com/CESNET/perun/commit/0d2a539d2d6bc488bd33305e93e1160eb438037e", "message": "Fixes according to review. The changes concern all quota attributes and methods validating their content; the original URI syntax checks allowed for transformations changing the path meaning, which is undesirable.", "committedDate": "2020-10-01T09:03:52Z", "type": "commit"}]}