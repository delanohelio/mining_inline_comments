{"pr_number": 2705, "pr_title": "Attribute modules configuration", "pr_createdAt": "2020-05-15T14:11:10Z", "pr_url": "https://github.com/CESNET/perun/pull/2705", "timeline": [{"oid": "68c5aaf7e0601313bd39caedb153938fae1e3483", "url": "https://github.com/CESNET/perun/commit/68c5aaf7e0601313bd39caedb153938fae1e3483", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-15T14:19:34Z", "type": "forcePushed"}, {"oid": "b657fa44df67514a3f4b12bc42d3d408e908207f", "url": "https://github.com/CESNET/perun/commit/b657fa44df67514a3f4b12bc42d3d408e908207f", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-15T14:21:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTE2MQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r426165161", "bodyText": "Path /etc/perun/ is stored inside the ${perun.conf} variable. You can use that.", "author": "balcirakpeter", "createdAt": "2020-05-16T15:48:51Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package cz.metacentrum.perun.core.impl.modules;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.notNull;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+\n+public class ModulesYamlConfigLoader implements ModulesConfigLoader {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class);\n+\n+\tprivate static final ObjectMapper yamlObjectMapper = new ObjectMapper(new YAMLFactory());\n+\tprivate String modulesDirPath = \"/etc/perun/modules/\";", "originalCommit": "b657fa44df67514a3f4b12bc42d3d408e908207f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxNDYxNQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r428514615", "bodyText": "It seems that this variable can only be used inside pom file. I would have to create a separate properties file and load it from there. In other places in code, the path is also hardcoded. So I would leave it that way.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T08:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "149e9722934a737ef01edf450a1b7fb29c562022", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\nindex 6d3aaaa77..44ba225bb 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n\n@@ -1,15 +1,13 @@\n package cz.metacentrum.perun.core.impl.modules;\n \n import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n+import cz.metacentrum.perun.core.api.exceptions.rt.ModulePropertyNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.FileInputStream;\n+import java.io.File;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.List;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NjAwNA==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r426166004", "bodyText": "This method should have some Javadoc. It is not clear what is the purpose of it.", "author": "balcirakpeter", "createdAt": "2020-05-16T15:59:35Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package cz.metacentrum.perun.core.impl.modules;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.notNull;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+\n+public class ModulesYamlConfigLoader implements ModulesConfigLoader {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class);\n+\n+\tprivate static final ObjectMapper yamlObjectMapper = new ObjectMapper(new YAMLFactory());\n+\tprivate String modulesDirPath = \"/etc/perun/modules/\";\n+\n+\tpublic ModulesYamlConfigLoader() { }\n+\n+\tpublic ModulesYamlConfigLoader(String modulesDirPath) {\n+\t\tthis.modulesDirPath = modulesDirPath;\n+\t}\n+\n+\t@Override\n+\tpublic String loadStringProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).asText();\n+\t}\n+\n+\t@Override\n+\tpublic Integer loadIntegerProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).isNull() ? null : loadPropertyNode(moduleName, property).asInt();\n+\t}\n+\n+\t@Override\n+\tpublic List<String> loadStringListProperty(String moduleName, String property) {\n+\t\tList<String> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.asText()));\n+\t\treturn values;\n+\t}\n+\n+\t@Override\n+\tpublic List<Integer> loadIntegerListProperty(String moduleName, String property) {\n+\t\tList<Integer> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.isNull() ? null : node.asInt()));\n+\t\treturn values;\n+\t}\n+\n+\tprivate JsonNode loadPropertyNode(String moduleName, String propertyName) {\n+\t\tnotNull(moduleName, \"configFile\");\n+\t\tnotNull(propertyName, \"propertyName\");\n+\n+\t\tString path = modulesDirPath + moduleName + \".yaml\";\n+\n+\t\tJsonNode root = loadModulesYamlFile(path);\n+\n+\t\tJsonNode propertyNode = parsePropertyNode(root, propertyName);\n+\t\tif (propertyNode == null) {\n+\t\t\tthrow new InternalErrorException(\"Failed to parse property: '\" + propertyName + \"' from file: \" + path);\n+\t\t}\n+\t\treturn propertyNode;\n+\t}\n+\n+\tprivate static JsonNode parsePropertyNode(JsonNode root, String propertyName) {", "originalCommit": "b657fa44df67514a3f4b12bc42d3d408e908207f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MzA2OA==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r428543068", "bodyText": "I have added javadoc to all private methods.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T09:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NjAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "149e9722934a737ef01edf450a1b7fb29c562022", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\nindex 6d3aaaa77..44ba225bb 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n\n@@ -1,15 +1,13 @@\n package cz.metacentrum.perun.core.impl.modules;\n \n import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n+import cz.metacentrum.perun.core.api.exceptions.rt.ModulePropertyNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.FileInputStream;\n+import java.io.File;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.List;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NjIwOQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r426166209", "bodyText": "You should mention that the property name can be chained by dots.", "author": "balcirakpeter", "createdAt": "2020-05-16T16:01:42Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesConfigLoader.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package cz.metacentrum.perun.core.impl.modules;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public interface ModulesConfigLoader {\n+\n+\t/**\n+\t * For module with the given name, find a String configuration property with given name.\n+\t *\n+\t * @param moduleName name of a module\n+\t * @param property name of a property", "originalCommit": "b657fa44df67514a3f4b12bc42d3d408e908207f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0MzE5MA==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r428543190", "bodyText": "Done.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T09:23:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NjIwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "149e9722934a737ef01edf450a1b7fb29c562022", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesConfigLoader.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesConfigLoader.java\nindex 9bc4a708b..0e5412669 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesConfigLoader.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesConfigLoader.java\n\n@@ -1,5 +1,7 @@\n package cz.metacentrum.perun.core.impl.modules;\n \n+import cz.metacentrum.perun.core.api.exceptions.rt.ModulePropertyNotFoundException;\n+\n import java.util.List;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2Njg4Mg==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r426166882", "bodyText": "I am citing Pavel Z. who commented on this behavior in the previous PR:\n\"I just wonder, if we couldn't use empty value as a correct input for some logic. Like value is either set or not, then some logic performs specific or generic behavior. You could fall-back to default values by type like empty list / null / false etc.\"", "author": "balcirakpeter", "createdAt": "2020-05-16T16:09:36Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package cz.metacentrum.perun.core.impl.modules;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.notNull;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+\n+public class ModulesYamlConfigLoader implements ModulesConfigLoader {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class);\n+\n+\tprivate static final ObjectMapper yamlObjectMapper = new ObjectMapper(new YAMLFactory());\n+\tprivate String modulesDirPath = \"/etc/perun/modules/\";\n+\n+\tpublic ModulesYamlConfigLoader() { }\n+\n+\tpublic ModulesYamlConfigLoader(String modulesDirPath) {\n+\t\tthis.modulesDirPath = modulesDirPath;\n+\t}\n+\n+\t@Override\n+\tpublic String loadStringProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).asText();\n+\t}\n+\n+\t@Override\n+\tpublic Integer loadIntegerProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).isNull() ? null : loadPropertyNode(moduleName, property).asInt();\n+\t}\n+\n+\t@Override\n+\tpublic List<String> loadStringListProperty(String moduleName, String property) {\n+\t\tList<String> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.asText()));\n+\t\treturn values;\n+\t}\n+\n+\t@Override\n+\tpublic List<Integer> loadIntegerListProperty(String moduleName, String property) {\n+\t\tList<Integer> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.isNull() ? null : node.asInt()));\n+\t\treturn values;\n+\t}\n+\n+\tprivate JsonNode loadPropertyNode(String moduleName, String propertyName) {\n+\t\tnotNull(moduleName, \"configFile\");\n+\t\tnotNull(propertyName, \"propertyName\");\n+\n+\t\tString path = modulesDirPath + moduleName + \".yaml\";\n+\n+\t\tJsonNode root = loadModulesYamlFile(path);\n+\n+\t\tJsonNode propertyNode = parsePropertyNode(root, propertyName);\n+\t\tif (propertyNode == null) {", "originalCommit": "b657fa44df67514a3f4b12bc42d3d408e908207f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NDA1NA==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r428544054", "bodyText": "I have added new versions of the methods that allow you to specify a default value that is returned, if the found value is null or not found. I don't think it is a good idea to generally return some fallback default values. It might now be clear that it does return these default values and what they actually are.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T09:25:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2Njg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "149e9722934a737ef01edf450a1b7fb29c562022", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\nindex 6d3aaaa77..44ba225bb 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n\n@@ -1,15 +1,13 @@\n package cz.metacentrum.perun.core.impl.modules;\n \n import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n+import cz.metacentrum.perun.core.api.exceptions.rt.ModulePropertyNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.FileInputStream;\n+import java.io.File;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.List;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI0MTg0MQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r426241841", "bodyText": "Here I would prefer this way of loading a YAML file:\nYAMLMapper mapper = new YAMLMapper();\nreturn mapper.readTree(new File(path));", "author": "martin-kuba", "createdAt": "2020-05-17T10:02:52Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package cz.metacentrum.perun.core.impl.modules;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.notNull;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+\n+public class ModulesYamlConfigLoader implements ModulesConfigLoader {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class);\n+\n+\tprivate static final ObjectMapper yamlObjectMapper = new ObjectMapper(new YAMLFactory());\n+\tprivate String modulesDirPath = \"/etc/perun/modules/\";\n+\n+\tpublic ModulesYamlConfigLoader() { }\n+\n+\tpublic ModulesYamlConfigLoader(String modulesDirPath) {\n+\t\tthis.modulesDirPath = modulesDirPath;\n+\t}\n+\n+\t@Override\n+\tpublic String loadStringProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).asText();\n+\t}\n+\n+\t@Override\n+\tpublic Integer loadIntegerProperty(String moduleName, String property) {\n+\t\treturn loadPropertyNode(moduleName, property).isNull() ? null : loadPropertyNode(moduleName, property).asInt();\n+\t}\n+\n+\t@Override\n+\tpublic List<String> loadStringListProperty(String moduleName, String property) {\n+\t\tList<String> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.asText()));\n+\t\treturn values;\n+\t}\n+\n+\t@Override\n+\tpublic List<Integer> loadIntegerListProperty(String moduleName, String property) {\n+\t\tList<Integer> values = new ArrayList<>();\n+\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n+\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.isNull() ? null : node.asInt()));\n+\t\treturn values;\n+\t}\n+\n+\tprivate JsonNode loadPropertyNode(String moduleName, String propertyName) {\n+\t\tnotNull(moduleName, \"configFile\");\n+\t\tnotNull(propertyName, \"propertyName\");\n+\n+\t\tString path = modulesDirPath + moduleName + \".yaml\";\n+\n+\t\tJsonNode root = loadModulesYamlFile(path);\n+\n+\t\tJsonNode propertyNode = parsePropertyNode(root, propertyName);\n+\t\tif (propertyNode == null) {\n+\t\t\tthrow new InternalErrorException(\"Failed to parse property: '\" + propertyName + \"' from file: \" + path);\n+\t\t}\n+\t\treturn propertyNode;\n+\t}\n+\n+\tprivate static JsonNode parsePropertyNode(JsonNode root, String propertyName) {\n+\t\tJsonNode currentNode = root;\n+\t\twhile (propertyName.contains(\".\")) {\n+\t\t\tString[] split = propertyName.split(\"\\\\.\", 2);\n+\t\t\tcurrentNode = currentNode.get(split[0]);\n+\t\t\tpropertyName = split[1];\n+\t\t}\n+\t\treturn currentNode.get(propertyName);\n+\t}\n+\n+\tprivate static JsonNode loadModulesYamlFile(String path) {\n+\t\ttry (InputStream is = new FileInputStream(path)) {\n+\t\t\treturn yamlObjectMapper.readTree(is);", "originalCommit": "b657fa44df67514a3f4b12bc42d3d408e908207f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NDI4NQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r428544285", "bodyText": "I have updated the implementation corresponding to your suggestion.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-21T09:25:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI0MTg0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "149e9722934a737ef01edf450a1b7fb29c562022", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\nindex 6d3aaaa77..44ba225bb 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java\n\n@@ -1,15 +1,13 @@\n package cz.metacentrum.perun.core.impl.modules;\n \n import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n+import cz.metacentrum.perun.core.api.exceptions.rt.ModulePropertyNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.FileInputStream;\n+import java.io.File;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.List;\n \n"}}, {"oid": "149e9722934a737ef01edf450a1b7fb29c562022", "url": "https://github.com/CESNET/perun/commit/149e9722934a737ef01edf450a1b7fb29c562022", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-21T09:22:31Z", "type": "forcePushed"}, {"oid": "1dc60ccb6164fc1c1a3cd7a917f303a321fd8036", "url": "https://github.com/CESNET/perun/commit/1dc60ccb6164fc1c1a3cd7a917f303a321fd8036", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-21T09:27:36Z", "type": "forcePushed"}, {"oid": "d118155ac5745efc75717108ccb50317d0ac8cb0", "url": "https://github.com/CESNET/perun/commit/d118155ac5745efc75717108ccb50317d0ac8cb0", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-21T09:28:01Z", "type": "forcePushed"}, {"oid": "69a8dc0a423261b985124d788a6e9bd7b2bcfd51", "url": "https://github.com/CESNET/perun/commit/69a8dc0a423261b985124d788a6e9bd7b2bcfd51", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-21T09:29:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzNjM3Mg==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r429636372", "bodyText": "I've just realized that the domain name property will be stored without the \"@\" character. However, we need to include the \"@\" while setting the attribute value.\nSo, please could you change the code to something like this?\nif (attribute.getFriendlyName().equals(attrNameFenix)) {\n    String domain = \"@\" + getDomainNameFenix();\n    filledAttribute.setValue(sha1HashCount(user, domain).toString() + domain);", "author": "balcirakpeter", "createdAt": "2020-05-24T13:23:59Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_shadow.java", "diffHunk": "@@ -41,7 +54,7 @@ public Attribute fillAttribute(PerunSessionImpl perunSession, User user, Attribu\n \t\tAttribute filledAttribute = new Attribute(attribute);\n \n \t\tif (attribute.getFriendlyName().equals(attrNameFenix)) {\n-\t\t\tfilledAttribute.setValue(sha1HashCount(user, domainNameFenix).toString() + domainNameFenix);\n+\t\t\tfilledAttribute.setValue(sha1HashCount(user, getDomainNameFenix()).toString() + getDomainNameFenix());", "originalCommit": "69a8dc0a423261b985124d788a6e9bd7b2bcfd51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4OTY5NQ==", "url": "https://github.com/CESNET/perun/pull/2705#discussion_r429889695", "bodyText": "I have applied your suggested changes.", "author": "Vojtech-Sassmann", "createdAt": "2020-05-25T11:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzNjM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7234cf8294cfbd711f91a0af1b6e908f9ef979a9", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_shadow.java b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_shadow.java\nindex 5fe024703..4dc0a2f10 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_shadow.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_shadow.java\n\n@@ -54,7 +54,8 @@ public class urn_perun_user_attribute_def_def_login_namespace_fenix_persistent_s\n \t\tAttribute filledAttribute = new Attribute(attribute);\n \n \t\tif (attribute.getFriendlyName().equals(attrNameFenix)) {\n-\t\t\tfilledAttribute.setValue(sha1HashCount(user, getDomainNameFenix()).toString() + getDomainNameFenix());\n+\t\t\tString domain = \"@\" + getDomainNameFenix();\n+\t\t\tfilledAttribute.setValue(sha1HashCount(user, domain).toString() + domain);\n \t\t\treturn filledAttribute;\n \t\t} else {\n \t\t\t// without value\n"}}, {"oid": "7234cf8294cfbd711f91a0af1b6e908f9ef979a9", "url": "https://github.com/CESNET/perun/commit/7234cf8294cfbd711f91a0af1b6e908f9ef979a9", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-25T11:38:20Z", "type": "commit"}, {"oid": "7234cf8294cfbd711f91a0af1b6e908f9ef979a9", "url": "https://github.com/CESNET/perun/commit/7234cf8294cfbd711f91a0af1b6e908f9ef979a9", "message": "Attribute modules configuration\n\n* Some attribute modules need to have a separate configuration file.\nThese configurations should be located inside the /etc/perun/modules/\nfolder.\n\n* Created ModulesConfigLoader component that is used to load a module's\nconfigurations.\n\n* In the module of u:def:login_namespace_fenix_persistent_shadow\nattribute added loading of extSourceNameFenix and domainNameFenix from\nits configuration file. If the module is not used, the configuration\nfile does not need to exist.", "committedDate": "2020-05-25T11:38:20Z", "type": "forcePushed"}]}