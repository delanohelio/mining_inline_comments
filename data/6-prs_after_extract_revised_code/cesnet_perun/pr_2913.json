{"pr_number": 2913, "pr_title": "New method for getting sponsored members and their sponsors", "pr_createdAt": "2020-09-29T11:51:12Z", "pr_url": "https://github.com/CESNET/perun/pull/2913", "timeline": [{"oid": "05f943a2efca3422f070d2e1576c59322bc6b52e", "url": "https://github.com/CESNET/perun/commit/05f943a2efca3422f070d2e1576c59322bc6b52e", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-09-29T12:43:43Z", "type": "forcePushed"}, {"oid": "fd91476d6108e132e70f1d906fe151c37b95c167", "url": "https://github.com/CESNET/perun/commit/fd91476d6108e132e70f1d906fe151c37b95c167", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-09-29T13:15:28Z", "type": "forcePushed"}, {"oid": "87885dd0cd587f73ddf275f209f041fff3f8a3b1", "url": "https://github.com/CESNET/perun/commit/87885dd0cd587f73ddf275f209f041fff3f8a3b1", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-09-29T14:36:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwODc0NA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r498008744", "bodyText": "We already have this method in the UsersManagerBl. Please use it instead of the new implementation in MembersManagerBl.", "author": "zlamalp", "createdAt": "2020-10-01T06:25:08Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java", "diffHunk": "@@ -895,6 +896,15 @@\n \t */\n \tList<RichMember> convertMembersToRichMembers(PerunSession sess, List<Member> members);\n \n+\t/**\n+\t * Converts users to rich users.\n+\t *\n+\t * @param sess\n+\t * @param users\n+\t * @return\n+\t */\n+\tList<RichUser> convertUsersToRichUsers(PerunSession sess, List<User> users);", "originalCommit": "87885dd0cd587f73ddf275f209f041fff3f8a3b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNDk1Mw==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500204953", "bodyText": "I deleted my new method and I used this method from UserManagerBl", "author": "HejdaJakub", "createdAt": "2020-10-06T11:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwODc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "c4608537c2aa3a81abd350e5d49c1adc41aed3a9", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java\nindex 9677c7cb8..513fb24a4 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java\n\n@@ -896,15 +897,6 @@ public interface MembersManagerBl {\n \t */\n \tList<RichMember> convertMembersToRichMembers(PerunSession sess, List<Member> members);\n \n-\t/**\n-\t * Converts users to rich users.\n-\t *\n-\t * @param sess\n-\t * @param users\n-\t * @return\n-\t */\n-\tList<RichUser> convertUsersToRichUsers(PerunSession sess, List<User> users);\n-\n \t/**\n \t * Fill the RichMember object with data from Member and corresponding User and user/member attributes.\n \t *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMDQ4OQ==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r498010489", "bodyText": "How about simplifying it\nfor (Member sponsoredMember : sponsoredMembers) {\n\tsponsoredMembersAndTheirSponsors.put(sponsoredMember, getPerunBl().getUsersManagerBl().convertUsersToRichUsers(sess, getPerunBl().getUsersManagerBl().getSponsors(sess, sponsoredMember)));\n}", "author": "zlamalp", "createdAt": "2020-10-01T06:29:56Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2331,6 +2353,19 @@ public Member sponsorMember(PerunSession session, Member sponsoredMember, User s\n \t\treturn getMembersManagerImpl().getSponsoredMembers(sess, vo);\n \t}\n \n+\t@Override\n+\tpublic Map<Member, List<RichUser>> getSponsoredMembersAndTheirSponsors(PerunSession sess, Vo vo) {\n+\t\tMap<Member, List<RichUser>> sponsoredMembersAndTheirSponsors = new HashMap<>();\n+\t\tList<Member> sponsoredMembers = getSponsoredMembers(sess, vo);\n+\t\tList<User> sponsors;\n+\t\tfor (Member sponsoredMember : sponsoredMembers) {\n+\t\t\tsponsors = getPerunBl().getUsersManagerBl().getSponsors(sess, sponsoredMember);\n+\t\t\tsponsoredMembersAndTheirSponsors.put(sponsoredMember, convertUsersToRichUsers(sess, sponsors));\n+\t\t\tsponsors.clear();\n+\t\t}", "originalCommit": "87885dd0cd587f73ddf275f209f041fff3f8a3b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwODA3MA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500208070", "bodyText": "We decided to implemet it only in entry layer, so I changed it little bit more. I also simplified it by using stream.", "author": "HejdaJakub", "createdAt": "2020-10-06T11:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMDQ4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c4608537c2aa3a81abd350e5d49c1adc41aed3a9", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\nindex 32f9aca27..264acffce 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java\n\n@@ -2353,19 +2323,6 @@ public class MembersManagerBlImpl implements MembersManagerBl {\n \t\treturn getMembersManagerImpl().getSponsoredMembers(sess, vo);\n \t}\n \n-\t@Override\n-\tpublic Map<Member, List<RichUser>> getSponsoredMembersAndTheirSponsors(PerunSession sess, Vo vo) {\n-\t\tMap<Member, List<RichUser>> sponsoredMembersAndTheirSponsors = new HashMap<>();\n-\t\tList<Member> sponsoredMembers = getSponsoredMembers(sess, vo);\n-\t\tList<User> sponsors;\n-\t\tfor (Member sponsoredMember : sponsoredMembers) {\n-\t\t\tsponsors = getPerunBl().getUsersManagerBl().getSponsors(sess, sponsoredMember);\n-\t\t\tsponsoredMembersAndTheirSponsors.put(sponsoredMember, convertUsersToRichUsers(sess, sponsors));\n-\t\t\tsponsors.clear();\n-\t\t}\n-\t\treturn sponsoredMembersAndTheirSponsors;\n-\t}\n-\n \t@Override\n \tpublic void removeSponsor(PerunSession sess, Member sponsoredMember, User sponsorToRemove) {\n \t\tgetMembersManagerImpl().removeSponsor(sess,sponsoredMember, sponsorToRemove);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzc4Mw==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r498013783", "bodyText": "We do not usually specify PrivilegeException in the RPC docs, since its added automatically by the docs parsing tool.", "author": "zlamalp", "createdAt": "2020-10-01T06:38:47Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -290,6 +292,23 @@ public String call(ApiCaller ac, Deserializer params) throws PerunException {\n \t\t}\n \t},\n \n+\t/*#\n+\t * Gets map of sponsored members and lists of their sponsors for each of them.\n+\t *\n+\t * @param vo int id of virtual organization from which are the sponsored members chosen\n+\t * @throw VoNotExistsException if given VO does not exist\n+\t * @throw PrivilegeException if not VOADMIN, VOOBSERVER, PERUNOBSERVER or SPONSOR", "originalCommit": "87885dd0cd587f73ddf275f209f041fff3f8a3b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIxMTQxMg==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500211412", "bodyText": "I deleted this PrivilegeException from the RPC.", "author": "HejdaJakub", "createdAt": "2020-10-06T11:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c4608537c2aa3a81abd350e5d49c1adc41aed3a9", "chunk": "diff --git a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\nindex 1930230d8..11acf8433 100644\n--- a/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\n+++ b/perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java\n\n@@ -293,17 +293,15 @@ public enum MembersManagerMethod implements ManagerMethod {\n \t},\n \n \t/*#\n-\t * Gets map of sponsored members and lists of their sponsors for each of them.\n+\t * Gets list of sponsored members with sponsors.\n \t *\n \t * @param vo int id of virtual organization from which are the sponsored members chosen\n \t * @throw VoNotExistsException if given VO does not exist\n-\t * @throw PrivilegeException if not VOADMIN, VOOBSERVER, PERUNOBSERVER or SPONSOR\n-\t * @return Map<Member, List<RichUser>> map of members from given vo who are sponsored and lists of rich users\n-\t * that sponsor the member in map pair\n+\t * @return List<MemberWithSponsors> list of members with sponsors\n \t */\n \tgetSponsoredMembersAndTheirSponsors {\n \t\t@Override\n-\t\tpublic Map<Member, List<RichUser>> call(ApiCaller ac, Deserializer params) throws PerunException {\n+\t\tpublic List<MemberWithSponsors> call(ApiCaller ac, Deserializer params) throws PerunException {\n \t\t\tVo vo = ac.getVoById(params.readInt(\"vo\"));\n \t\t\treturn ac.getMembersManager().getSponsoredMembersAndTheirSponsors(ac.getSession(), vo);\n \t\t}\n"}}, {"oid": "c4608537c2aa3a81abd350e5d49c1adc41aed3a9", "url": "https://github.com/CESNET/perun/commit/c4608537c2aa3a81abd350e5d49c1adc41aed3a9", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-05T13:28:46Z", "type": "forcePushed"}, {"oid": "94109f6aa41105b49a3281a15c659fafdd895675", "url": "https://github.com/CESNET/perun/commit/94109f6aa41105b49a3281a15c659fafdd895675", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-05T13:35:18Z", "type": "forcePushed"}, {"oid": "beca08f492a463fe07df6f81be9d205d4cdf6734", "url": "https://github.com/CESNET/perun/commit/beca08f492a463fe07df6f81be9d205d4cdf6734", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-06T07:01:05Z", "type": "forcePushed"}, {"oid": "5b97109b030c1e03b005ef2882bab7ac282d155e", "url": "https://github.com/CESNET/perun/commit/5b97109b030c1e03b005ef2882bab7ac282d155e", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members and for each of them list of rich users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-06T07:16:31Z", "type": "forcePushed"}, {"oid": "9875be80d93fd3950f70e8b4cffdc39d0c2cf7a6", "url": "https://github.com/CESNET/perun/commit/9875be80d93fd3950f70e8b4cffdc39d0c2cf7a6", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T11:47:11Z", "type": "forcePushed"}, {"oid": "49d5d5cec38d61deb00387c0820d7f99946d3ce6", "url": "https://github.com/CESNET/perun/commit/49d5d5cec38d61deb00387c0820d7f99946d3ce6", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T11:56:24Z", "type": "forcePushed"}, {"oid": "b6c0de9e409d962d904c2d6c48e56838a286b668", "url": "https://github.com/CESNET/perun/commit/b6c0de9e409d962d904c2d6c48e56838a286b668", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T11:57:14Z", "type": "forcePushed"}, {"oid": "4a2f3a2edf238fc464e42fb4f82a0e794240e955", "url": "https://github.com/CESNET/perun/commit/4a2f3a2edf238fc464e42fb4f82a0e794240e955", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T12:14:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODAwOQ==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500978009", "bodyText": "This should be just getSponsors() since it is a basic getter/setter for property List<User> sponsors.", "author": "zlamalp", "createdAt": "2020-10-07T12:39:47Z", "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/MemberWithSponsors.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package cz.metacentrum.perun.core.api;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Sponsored member with list of his sponsors (for GUI)\n+ *\n+ * @author Jakub Hejda <Jakub.Hejda@cesnet.cz>\n+ */\n+public class MemberWithSponsors {\n+\tprivate RichMember member;\n+\tprivate List<User> sponsors;\n+\n+\t/**\n+\t * Constructor\n+\t */\n+\tpublic MemberWithSponsors() {\n+\t}\n+\n+\t/**\n+\t * Constructor\n+\t */\n+\tpublic MemberWithSponsors(RichMember member) {\n+\t\tthis.member = member;\n+\t}\n+\n+\tpublic Member getMember() {\n+\t\treturn member;\n+\t}\n+\n+\tpublic void setMember(RichMember member) {\n+\t\tthis.member = member;\n+\t}\n+\n+\tpublic List<User> getListOfSponsors() {", "originalCommit": "4a2f3a2edf238fc464e42fb4f82a0e794240e955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwNzc1NQ==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501007755", "bodyText": "Changed.", "author": "HejdaJakub", "createdAt": "2020-10-07T13:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODAwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "chunk": "diff --git a/perun-base/src/main/java/cz/metacentrum/perun/core/api/MemberWithSponsors.java b/perun-base/src/main/java/cz/metacentrum/perun/core/api/MemberWithSponsors.java\nindex 64f8d04d5..b4fa249cc 100644\n--- a/perun-base/src/main/java/cz/metacentrum/perun/core/api/MemberWithSponsors.java\n+++ b/perun-base/src/main/java/cz/metacentrum/perun/core/api/MemberWithSponsors.java\n\n@@ -33,7 +33,7 @@ public class MemberWithSponsors {\n \t\tthis.member = member;\n \t}\n \n-\tpublic List<User> getListOfSponsors() {\n+\tpublic List<User> getSponsors() {\n \t\treturn sponsors;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODQ1Ng==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500978456", "bodyText": "Please add attrNames param to the javadoc.", "author": "zlamalp", "createdAt": "2020-10-07T12:40:24Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1271,6 +1271,17 @@\n \t */\n \tList<RichMember> getSponsoredMembers(PerunSession sess, Vo vo) throws PrivilegeException, VoNotExistsException;\n \n+\t/**\n+\t * Gets list of sponsored members with sponsors.\n+\t *\n+\t * @param sess session\n+\t * @param vo virtual organization from which are the sponsored members chosen", "originalCommit": "4a2f3a2edf238fc464e42fb4f82a0e794240e955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwODYzNw==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501008637", "bodyText": "I added this param to javadoc.", "author": "HejdaJakub", "createdAt": "2020-10-07T13:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\nindex 762b7d54e..da6aef031 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java\n\n@@ -1276,6 +1276,7 @@ public interface MembersManager {\n \t *\n \t * @param sess session\n \t * @param vo virtual organization from which are the sponsored members chosen\n+\t * @param attrNames list of attrNames for selected attributes\n \t * @throws VoNotExistsException if given VO does not exist\n \t * @throws PrivilegeException if not VOADMIN, VOOBSERVER, PERUNOBSERVER or SPONSOR\n \t * @return list of members with sponsors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MzU3MQ==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r500983571", "bodyText": "You should also filter only allowed attributes based on the caller authorization, see membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers, null, true);", "author": "zlamalp", "createdAt": "2020-10-07T12:48:07Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1341,6 +1341,29 @@ public RichMember sponsorMember(PerunSession session, Member sponsored, User spo\n \t\treturn membersManagerBl.convertMembersToRichMembers(sess, membersManagerBl.getSponsoredMembers(sess, vo));\n \t}\n \n+\t@Override\n+\tpublic List<MemberWithSponsors> getSponsoredMembersAndTheirSponsors(PerunSession sess, Vo vo, List<String> attrNames) throws VoNotExistsException, PrivilegeException, AttributeNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\t\tUtils.notNull(vo, \"vo\");\n+\n+\t\tperunBl.getVosManagerBl().checkVoExists(sess, vo);\n+\n+\t\t//Authorization\n+\t\tif(!AuthzResolver.authorizedInternal(sess, \"getSponsoredMembersAndTheirSponsors_Vo_policy\", vo)) {\n+\t\t\tthrow new PrivilegeException(sess, \"getSponsoredMembersAndTheirSponsors\");\n+\t\t}\n+\n+\t\tList<AttributeDefinition> attrsDef = new ArrayList<>();\n+\t\tfor (String attrName : attrNames) {\n+\t\t\tattrsDef.add(getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, attrName));\n+\t\t}\n+\n+\t\treturn membersManagerBl.convertMembersToRichMembersWithAttributes(sess, getSponsoredMembers(sess, vo), attrsDef).stream()", "originalCommit": "4a2f3a2edf238fc464e42fb4f82a0e794240e955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAxMDQ2MA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501010460", "bodyText": "I added this filter to the method.", "author": "HejdaJakub", "createdAt": "2020-10-07T13:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MzU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "chunk": "diff --git a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\nindex 351718dfe..0a3f4e30d 100644\n--- a/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n+++ b/perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java\n\n@@ -1358,7 +1358,10 @@ public class MembersManagerEntry implements MembersManager {\n \t\t\tattrsDef.add(getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, attrName));\n \t\t}\n \n-\t\treturn membersManagerBl.convertMembersToRichMembersWithAttributes(sess, getSponsoredMembers(sess, vo), attrsDef).stream()\n+\t\tList<RichMember> richMembers = membersManagerBl.convertMembersToRichMembersWithAttributes(sess, getSponsoredMembers(sess, vo), attrsDef);\n+\t\trichMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers, null, true);\n+\n+\t\treturn richMembers.stream()\n \t\t\t.filter(member -> AuthzResolver.authorizedInternal(sess, \"filter-getSponsoredMembersAndTheirSponsors_Vo_policy\", member, vo))\n \t\t\t.map(member -> convertMemberToMemberWithSponsors(sess, member))\n \t\t\t.collect(Collectors.toList());\n"}}, {"oid": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "url": "https://github.com/CESNET/perun/commit/f246ac5039af0df65cee37bf3f9ea5de536d9012", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T13:21:54Z", "type": "commit"}, {"oid": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "url": "https://github.com/CESNET/perun/commit/f246ac5039af0df65cee37bf3f9ea5de536d9012", "message": "New method for getting sponsored members and their sponsors\n\n* We want to create a new method, which returns sponsored members and their sponsors for specific VO.\n* The method returns list of sponsored members (RichMembers) and for each of them list of users, who sponsor this sponsored member.\n* The returned object also have to be filtered - the method returns to the sponsor only members, who are sponsored by this sponsor.", "committedDate": "2020-10-07T13:21:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjAyMA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501552020", "bodyText": "Is there any reason why do you call this version of the method instead of this one?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\trichMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers, null, true);\n          \n          \n            \n            \t\trichMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers);", "author": "Vojtech-Sassmann", "createdAt": "2020-10-08T08:49:17Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1341,6 +1341,32 @@ public RichMember sponsorMember(PerunSession session, Member sponsored, User spo\n \t\treturn membersManagerBl.convertMembersToRichMembers(sess, membersManagerBl.getSponsoredMembers(sess, vo));\n \t}\n \n+\t@Override\n+\tpublic List<MemberWithSponsors> getSponsoredMembersAndTheirSponsors(PerunSession sess, Vo vo, List<String> attrNames) throws VoNotExistsException, PrivilegeException, AttributeNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\t\tUtils.notNull(vo, \"vo\");\n+\n+\t\tperunBl.getVosManagerBl().checkVoExists(sess, vo);\n+\n+\t\t//Authorization\n+\t\tif(!AuthzResolver.authorizedInternal(sess, \"getSponsoredMembersAndTheirSponsors_Vo_policy\", vo)) {\n+\t\t\tthrow new PrivilegeException(sess, \"getSponsoredMembersAndTheirSponsors\");\n+\t\t}\n+\n+\t\tList<AttributeDefinition> attrsDef = new ArrayList<>();\n+\t\tfor (String attrName : attrNames) {\n+\t\t\tattrsDef.add(getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, attrName));\n+\t\t}\n+\n+\t\tList<RichMember> richMembers = membersManagerBl.convertMembersToRichMembersWithAttributes(sess, getSponsoredMembers(sess, vo), attrsDef);\n+\t\trichMembers = membersManagerBl.filterOnlyAllowedAttributes(sess, richMembers, null, true);", "originalCommit": "f246ac5039af0df65cee37bf3f9ea5de536d9012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1Mzg3MA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501553870", "bodyText": "@zlamalp why did you suggested this version of the method?", "author": "Vojtech-Sassmann", "createdAt": "2020-10-08T08:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4OTIxNQ==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501589215", "bodyText": "Well, there is no reason to resolve attribute authorization for each RichMember, if you can be sure, they are from the same VO and with the same set of attributes. Hence you can use \"context=true\" and authorization is resolved only once and results are reused for the next member.", "author": "zlamalp", "createdAt": "2020-10-08T09:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzNDI2NA==", "url": "https://github.com/CESNET/perun/pull/2913#discussion_r501634264", "bodyText": "Ok, I was just confused because of the group parameter.", "author": "Vojtech-Sassmann", "createdAt": "2020-10-08T11:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjAyMA=="}], "type": "inlineReview", "revised_code": null}]}