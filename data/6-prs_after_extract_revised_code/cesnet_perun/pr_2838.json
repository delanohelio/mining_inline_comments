{"pr_number": 2838, "pr_title": "Fix invalid entry calls", "pr_createdAt": "2020-08-06T11:03:33Z", "pr_url": "https://github.com/CESNET/perun/pull/2838", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMjM0Ng==", "url": "https://github.com/CESNET/perun/pull/2838#discussion_r483412346", "bodyText": "This is called by CLI when using tools to add/remove UES or set/remove their attributes. We should check, if user (SELF) can call these methods and if yes, we should enable SELF role in this methods policy.", "author": "zlamalp", "createdAt": "2020-09-04T06:25:01Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ExtSourcesManagerMethod.java", "diffHunk": "@@ -62,7 +62,7 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \n \t\t@Override\n \t\tpublic ExtSource call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getExtSourceById(parms.readInt(\"id\"));\n+\t\t\treturn ac.getExtSourcesManager().getExtSourceById(ac.getSession(), parms.readInt(\"id\"));", "originalCommit": "dd547bd817a8e507f2ee02cfea65536d6b6c44e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNDk0Nw==", "url": "https://github.com/CESNET/perun/pull/2838#discussion_r483414947", "bodyText": "I believe we should allow also SELF on Member/User in this methods policy.", "author": "zlamalp", "createdAt": "2020-09-04T06:32:18Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -501,7 +501,7 @@ public Member call(ApiCaller ac, Deserializer parms) throws PerunException {\n \tgetMemberById {\n \t\t@Override\n \t\tpublic Member call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getMemberById(parms.readInt(\"id\"));\n+\t\t\treturn ac.getMembersManager().getMemberById(ac.getSession(), parms.readInt(\"id\"));", "originalCommit": "dd547bd817a8e507f2ee02cfea65536d6b6c44e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNjQ1OA==", "url": "https://github.com/CESNET/perun/pull/2838#discussion_r483416458", "bodyText": "A would allow this method for FACILITYADMIN too. They probably use version with RichResource from GUI, but its not consistent with expected logic that facility admin can retrieve resources of his facility (by any identifier).", "author": "zlamalp", "createdAt": "2020-09-04T06:36:10Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java", "diffHunk": "@@ -24,7 +24,7 @@\n \n \t\t@Override\n \t\tpublic Resource call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getResourceById(parms.readInt(\"id\"));\n+\t\t\treturn ac.getResourcesManager().getResourceById(ac.getSession(), parms.readInt(\"id\"));", "originalCommit": "dd547bd817a8e507f2ee02cfea65536d6b6c44e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNzU1MQ==", "url": "https://github.com/CESNET/perun/pull/2838#discussion_r483417551", "bodyText": "Its strange, that this method is not allowed for facility admins (same for ByName version), but facility admins can retrieve all services together. We should allow it for them in both methods.", "author": "zlamalp", "createdAt": "2020-09-04T06:39:06Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ServicesManagerMethod.java", "diffHunk": "@@ -399,7 +399,7 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \n \t\t@Override\n \t\tpublic Service call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getServiceById(parms.readInt(\"id\"));\n+\t\t\treturn ac.getServicesManager().getServiceById(ac.getSession(), parms.readInt(\"id\"));", "originalCommit": "dd547bd817a8e507f2ee02cfea65536d6b6c44e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxODQ4OQ==", "url": "https://github.com/CESNET/perun/pull/2838#discussion_r483418489", "bodyText": "Same goes for all methods working with service packages, since facility admin is the one to get/assign service packages to the facility and perun admin manages those packages.", "author": "zlamalp", "createdAt": "2020-09-04T06:41:27Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ServicesManagerMethod.java", "diffHunk": "@@ -966,7 +966,7 @@ public ServiceAttributes call(ApiCaller ac, Deserializer parms) throws PerunExce\n \n \t\t@Override\n \t\tpublic ServicesPackage call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getServicesPackageById(parms.readInt(\"servicesPackageId\"));\n+\t\t\treturn ac.getServicesManager().getServicesPackageById(ac.getSession(), parms.readInt(\"servicesPackageId\"));", "originalCommit": "dd547bd817a8e507f2ee02cfea65536d6b6c44e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "ceb6dc2bfa4c7eb5351a43dcffc585dbc5ae3989", "url": "https://github.com/CESNET/perun/commit/ceb6dc2bfa4c7eb5351a43dcffc585dbc5ae3989", "message": "Fix invalid entry calls\n\n* There were some methods that didn't call directly entry layer but\ninstead, they called methods from ApiCaller which are for a different\npurpose. Because of that in the entry layer, there was an invalid\nPrincipal.\n* Added role SELF to policy for the `getGroupById` method because after\nthis fix, group members would not be able to call this method.", "committedDate": "2020-09-07T08:31:29Z", "type": "forcePushed"}, {"oid": "17c6deb9e746fcacd884fb9ab05e47c9cb07caf9", "url": "https://github.com/CESNET/perun/commit/17c6deb9e746fcacd884fb9ab05e47c9cb07caf9", "message": "Fix invalid entry calls\n\n* There were some methods that didn't call directly entry layer but\ninstead, they called methods from ApiCaller which are for a different\npurpose. Because of that in the entry layer, there was an invalid\nPrincipal.\n* Added role SELF to policy for the `getGroupById` method because after\nthis fix, group members would not be able to call this method.", "committedDate": "2020-09-07T08:38:52Z", "type": "commit"}, {"oid": "17c6deb9e746fcacd884fb9ab05e47c9cb07caf9", "url": "https://github.com/CESNET/perun/commit/17c6deb9e746fcacd884fb9ab05e47c9cb07caf9", "message": "Fix invalid entry calls\n\n* There were some methods that didn't call directly entry layer but\ninstead, they called methods from ApiCaller which are for a different\npurpose. Because of that in the entry layer, there was an invalid\nPrincipal.\n* Added role SELF to policy for the `getGroupById` method because after\nthis fix, group members would not be able to call this method.", "committedDate": "2020-09-07T08:38:52Z", "type": "forcePushed"}]}