{"pr_number": 1419, "pr_title": "Added a ForEachWithIndex class", "pr_createdAt": "2020-07-16T00:05:09Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1419", "timeline": [{"oid": "2cbb019fbd5dfcdcb786e915f7766cccb0622000", "url": "https://github.com/yegor256/cactoos/commit/2cbb019fbd5dfcdcb786e915f7766cccb0622000", "message": "Added a ForEachWithIndex class that uses AndWithIndex to round out the offering.", "committedDate": "2020-07-15T23:58:55Z", "type": "commit"}, {"oid": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976", "url": "https://github.com/yegor256/cactoos/commit/d1aa7ccc19b9c508c5f17b6e54122910a09e1976", "message": "Fixed qulice complaints.", "committedDate": "2020-07-16T01:19:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTk0NQ==", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r458585945", "bodyText": "@StuporHero please make that class final", "author": "victornoel", "createdAt": "2020-07-22T07:20:39Z", "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {", "originalCommit": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTE4Ng==", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r459209186", "bodyText": "@victornoel No problem. Just to let you know, ForEachTest is not final.", "author": "StuporHero", "createdAt": "2020-07-23T04:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b600c21ed71ad0cdbe1489602efb74d21bca31f7", "chunk": "diff --git a/src/test/java/org/cactoos/func/ForEachWithIndexTest.java b/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\nindex 4f12ec65..a580e066 100644\n--- a/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\n+++ b/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\n\n@@ -34,7 +34,7 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @since 1.0\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-public class ForEachWithIndexTest {\n+public final class ForEachWithIndexTest {\n \n     @Test\n     public void testBiProcIterable() throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUwMg==", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r458587502", "bodyText": "@StuporHero please reword that \"Must...\"", "author": "victornoel", "createdAt": "2020-07-22T07:23:33Z", "path": "src/test/java/org/cactoos/func/ForEachWithIndexTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.func;\n+\n+import org.cactoos.iterable.IterableOf;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+\n+/**\n+ * Test case for {@link ForEachWithIndex}.\n+ *\n+ * @since 1.0\n+ * @checkstyle JavadocMethodCheck (500 lines)\n+ */\n+public class ForEachWithIndexTest {\n+\n+    @Test\n+    public void testBiProcIterable() throws Exception {\n+        final StringBuilder builder = new StringBuilder();\n+        new ForEachWithIndex<>(\n+            (input, index) -> builder.append(String.format(\"%d: '%s' \", index + 1, input))\n+        ).exec(\n+            new IterableOf<>(\n+                \"Mary\", \"John\", \"William\", \"Napkin\"\n+            )\n+        );\n+        new Assertion<>(\n+            \"String does not contain mapped Iterable elements\",", "originalCommit": "d1aa7ccc19b9c508c5f17b6e54122910a09e1976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTQ4NQ==", "url": "https://github.com/yegor256/cactoos/pull/1419#discussion_r459209485", "bodyText": "@victornoel Done.", "author": "StuporHero", "createdAt": "2020-07-23T04:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "b600c21ed71ad0cdbe1489602efb74d21bca31f7", "chunk": "diff --git a/src/test/java/org/cactoos/func/ForEachWithIndexTest.java b/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\nindex 4f12ec65..a580e066 100644\n--- a/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\n+++ b/src/test/java/org/cactoos/func/ForEachWithIndexTest.java\n\n@@ -34,7 +34,7 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @since 1.0\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-public class ForEachWithIndexTest {\n+public final class ForEachWithIndexTest {\n \n     @Test\n     public void testBiProcIterable() throws Exception {\n"}}, {"oid": "b600c21ed71ad0cdbe1489602efb74d21bca31f7", "url": "https://github.com/yegor256/cactoos/commit/b600c21ed71ad0cdbe1489602efb74d21bca31f7", "message": "Review updates. #1419", "committedDate": "2020-07-23T04:33:16Z", "type": "commit"}]}