{"pr_number": 1522, "pr_title": "(#1445) Cleanup around Scalar and Callable", "pr_createdAt": "2020-12-30T16:19:01Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1522", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4NzE4OQ==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r550287189", "bodyText": "@victornoel  Why is it a Scalar and not a Runnable?", "author": "andreoss", "createdAt": "2020-12-30T18:30:23Z", "path": "src/main/java/org/cactoos/func/RunnableOf.java", "diffHunk": "@@ -23,79 +23,61 @@\n  */\n package org.cactoos.func;\n \n-import java.util.concurrent.Callable;\n import org.cactoos.Func;\n import org.cactoos.Proc;\n+import org.cactoos.Scalar;\n import org.cactoos.proc.ProcOf;\n-import org.cactoos.proc.UncheckedProc;\n+import org.cactoos.scalar.Unchecked;\n \n /**\n  * Func as Runnable.\n  *\n  * <p>There is no thread-safety guarantee.\n  *\n- * @param <X> Type of input\n  * @since 0.12\n  */\n-public final class RunnableOf<X> implements Runnable {\n+public final class RunnableOf implements Runnable {\n \n     /**\n-     * Original proc.\n+     * Runnable.\n      */\n-    private final Proc<X> proc;\n-\n-    /**\n-     * The input.\n-     */\n-    private final X input;\n-\n-    /**\n-     * Ctor.\n-     * @param proc Encapsulated proc\n-     * @since 0.11\n-     */\n-    public RunnableOf(final Callable<X> proc) {\n-        this(new FuncOf<>(proc));\n-    }\n-\n-    /**\n-     * Ctor.\n-     * @param proc Encapsulated proc\n-     */\n-    public RunnableOf(final Proc<X> proc) {\n-        this(proc, null);\n-    }\n+    private final Scalar<?> scalar;", "originalCommit": "026638e2291ed51498d57b3a46fae9786a3e8dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNTE1Mw==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r551005153", "bodyText": "@andreoss Runnable.run does not throw an exception so it makes it awkward to assign a scalar (from the constructor) into a  runnable (while the opposite is acceptable). Now that I think about it, I could have wrapped the scalar into unchecked at the constructor level. I will do that for consistency sake with other similar classes.", "author": "victornoel", "createdAt": "2021-01-03T13:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4NzE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1a1dfdcbb9479a4b4eb3092163d108c8383e8b40", "chunk": "diff --git a/src/main/java/org/cactoos/func/RunnableOf.java b/src/main/java/org/cactoos/proc/RunnableOf.java\nsimilarity index 75%\nrename from src/main/java/org/cactoos/func/RunnableOf.java\nrename to src/main/java/org/cactoos/proc/RunnableOf.java\nindex fe9e2d20..7cbbc158 100644\n--- a/src/main/java/org/cactoos/func/RunnableOf.java\n+++ b/src/main/java/org/cactoos/proc/RunnableOf.java\n\n@@ -21,12 +21,10 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  * SOFTWARE.\n  */\n-package org.cactoos.func;\n+package org.cactoos.proc;\n \n-import org.cactoos.Func;\n import org.cactoos.Proc;\n import org.cactoos.Scalar;\n-import org.cactoos.proc.ProcOf;\n import org.cactoos.scalar.Unchecked;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4NzQyOQ==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r550287429", "bodyText": "@victornoel This type of ctor doesn't make much sense, why would one want to wrap pre-existing Proc with ProcOf?", "author": "andreoss", "createdAt": "2020-12-30T18:31:19Z", "path": "src/main/java/org/cactoos/proc/ProcOf.java", "diffHunk": "@@ -70,7 +53,7 @@ public ProcOf(final Func<X, ?> fnc) {\n      * Ctor.\n      * @param prc The proc\n      */\n-    private ProcOf(final Proc<X> prc) {\n+    public ProcOf(final Proc<X> prc) {", "originalCommit": "026638e2291ed51498d57b3a46fae9786a3e8dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNTI2Mg==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r551005262", "bodyText": "@andreoss it's mainly useful to force type a lambda: new ProcOf(x -> { /* do something with x */ ; })", "author": "victornoel", "createdAt": "2021-01-03T13:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4NzQyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4ODA4Ng==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r550288086", "bodyText": "@victornoel Can this type of test be migrated to @RepeatedTest annotation?", "author": "andreoss", "createdAt": "2020-12-30T18:33:44Z", "path": "src/test/java/org/cactoos/experimental/TimedTest.java", "diffHunk": "@@ -84,7 +84,7 @@\n         \"PMD.AvoidThrowingRawExceptionTypes\", \"PMD.DoNotThrowExceptionInFinally\"\n     })\n     void containsResults() throws Exception {\n-        new RepeatedCallable<>(\n+        new Repeated<>(", "originalCommit": "026638e2291ed51498d57b3a46fae9786a3e8dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNzU0MQ==", "url": "https://github.com/yegor256/cactoos/pull/1522#discussion_r551007541", "bodyText": "@andreoss I've added a todo, thx for the idea", "author": "victornoel", "createdAt": "2021-01-03T13:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4ODA4Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1a1dfdcbb9479a4b4eb3092163d108c8383e8b40", "url": "https://github.com/yegor256/cactoos/commit/1a1dfdcbb9479a4b4eb3092163d108c8383e8b40", "message": "(#1445) Some todos to continue the work", "committedDate": "2021-01-03T13:38:38Z", "type": "forcePushed"}, {"oid": "de9d5531324e7ba3ed7f0fef09edf04b430ede76", "url": "https://github.com/yegor256/cactoos/commit/de9d5531324e7ba3ed7f0fef09edf04b430ede76", "message": "(#1445) Some todos to continue the work", "committedDate": "2021-01-03T13:46:09Z", "type": "forcePushed"}, {"oid": "8e882a2d27e05bb06e022beb30d1054968f44a1c", "url": "https://github.com/yegor256/cactoos/commit/8e882a2d27e05bb06e022beb30d1054968f44a1c", "message": "(#1445) Cleanup around Scalar and Callable", "committedDate": "2021-01-10T13:43:43Z", "type": "commit"}, {"oid": "8f3e71c23748db775dd6f5f25f20fa77e6d5e5b0", "url": "https://github.com/yegor256/cactoos/commit/8f3e71c23748db775dd6f5f25f20fa77e6d5e5b0", "message": "(#1445) Some todos to continue the work", "committedDate": "2021-01-10T13:43:43Z", "type": "commit"}, {"oid": "8f3e71c23748db775dd6f5f25f20fa77e6d5e5b0", "url": "https://github.com/yegor256/cactoos/commit/8f3e71c23748db775dd6f5f25f20fa77e6d5e5b0", "message": "(#1445) Some todos to continue the work", "committedDate": "2021-01-10T13:43:43Z", "type": "forcePushed"}]}