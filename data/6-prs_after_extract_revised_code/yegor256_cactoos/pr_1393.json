{"pr_number": 1393, "pr_title": "Remove some more MatcherAssert", "pr_createdAt": "2020-05-19T18:48:44Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1393", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODA4Ng==", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718086", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "author": "marceloamadeu", "createdAt": "2020-05-20T03:15:24Z", "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),", "originalCommit": "39e26354d100dc6d8125f0084641d4a09a51a825", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b55231787a22955e1f9fc41c875f223806e1119", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/FallbackFromTest.java b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\nindex bfc3142d..8bca1560 100644\n--- a/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n+++ b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n\n@@ -36,12 +36,13 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n+@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n         new Assertion<>(\n-            \"Must support IOException class\",\n+            \"Must support exactly exception class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODE5OQ==", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718199", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "author": "marceloamadeu", "createdAt": "2020-05-20T03:15:52Z", "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n             ).support(IOException.class),\n             new IsEqual<>(0)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void supportsInheritedException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),", "originalCommit": "39e26354d100dc6d8125f0084641d4a09a51a825", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b55231787a22955e1f9fc41c875f223806e1119", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/FallbackFromTest.java b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\nindex bfc3142d..8bca1560 100644\n--- a/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n+++ b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n\n@@ -36,12 +36,13 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n+@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n         new Assertion<>(\n-            \"Must support IOException class\",\n+            \"Must support exactly exception class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxODI0MQ==", "url": "https://github.com/yegor256/cactoos/pull/1393#discussion_r427718241", "bodyText": "@victornoel error log: unchecked generic array creation for varargs parameter of type java.lang.Class<? extends java.lang.Throwable>[]", "author": "marceloamadeu", "createdAt": "2020-05-20T03:16:00Z", "path": "src/test/java/org/cactoos/scalar/FallbackFromTest.java", "diffHunk": "@@ -26,52 +26,51 @@\n import java.io.IOException;\n import java.util.IllegalFormatException;\n import org.cactoos.iterable.IterableOf;\n-import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n import org.junit.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n \n /**\n  * Test case for {@link FallbackFrom}.\n  *\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n-@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n-        MatcherAssert.assertThat(\n-            \"IOException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support IOException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n             ).support(IOException.class),\n             new IsEqual<>(0)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void supportsInheritedException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is not supported, but should be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),\n                 exp -> \"RuntimeException fallback #1\"\n             ).support(IllegalFormatException.class),\n             new IsEqual<>(2)\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void doesNotSupportException() {\n-        MatcherAssert.assertThat(\n-            \"RuntimeException class is supported, but should not be\",\n+        new Assertion<>(\n+            \"Must support RuntimeException class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(RuntimeException.class),", "originalCommit": "39e26354d100dc6d8125f0084641d4a09a51a825", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b55231787a22955e1f9fc41c875f223806e1119", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/FallbackFromTest.java b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\nindex bfc3142d..8bca1560 100644\n--- a/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n+++ b/src/test/java/org/cactoos/scalar/FallbackFromTest.java\n\n@@ -36,12 +36,13 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @since 0.31\n  * @checkstyle JavadocMethodCheck (500 lines)\n  */\n+@SuppressWarnings(\"unchecked\")\n public final class FallbackFromTest {\n \n     @Test\n     public void supportsException() {\n         new Assertion<>(\n-            \"Must support IOException class\",\n+            \"Must support exactly exception class\",\n             new FallbackFrom<>(\n                 new IterableOf<>(IOException.class),\n                 exp -> \"IOException fallback\"\n"}}, {"oid": "0b55231787a22955e1f9fc41c875f223806e1119", "url": "https://github.com/yegor256/cactoos/commit/0b55231787a22955e1f9fc41c875f223806e1119", "message": "(#1391) - Remove some more MatcherAssert", "committedDate": "2020-05-21T11:11:36Z", "type": "forcePushed"}, {"oid": "787d25848956d3e01448d49d18a6f2e1a14d0b37", "url": "https://github.com/yegor256/cactoos/commit/787d25848956d3e01448d49d18a6f2e1a14d0b37", "message": "(#1391) - Remove some more MatcherAssert", "committedDate": "2020-05-21T17:20:15Z", "type": "commit"}, {"oid": "787d25848956d3e01448d49d18a6f2e1a14d0b37", "url": "https://github.com/yegor256/cactoos/commit/787d25848956d3e01448d49d18a6f2e1a14d0b37", "message": "(#1391) - Remove some more MatcherAssert", "committedDate": "2020-05-21T17:20:15Z", "type": "forcePushed"}]}