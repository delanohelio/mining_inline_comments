{"pr_number": 1493, "pr_title": "#1489: Make LengthOf accept Text in ctor", "pr_createdAt": "2020-11-01T02:06:23Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1493", "timeline": [{"oid": "eb160bf7a32160897ec3851e196598b68e57081b", "url": "https://github.com/yegor256/cactoos/commit/eb160bf7a32160897ec3851e196598b68e57081b", "message": "(#1488) Add ctor for `Text'", "committedDate": "2020-11-01T02:04:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTMwNA==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515569304", "bodyText": "@andreoss Please, add a test when the string is empty.", "author": "fabriciofx", "createdAt": "2020-11-01T03:18:30Z", "path": "src/test/java/org/cactoos/scalar/LengthOfTest.java", "diffHunk": "@@ -185,4 +186,15 @@ public void lengthOfEmptyIterator() {\n             new IsEqual<>(0)\n         ).affirm();\n     }\n+", "originalCommit": "eb160bf7a32160897ec3851e196598b68e57081b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTcxMQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515649711", "bodyText": "@fabriciofx Added a test", "author": "andreoss", "createdAt": "2020-11-01T17:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "d788d88cd167321444874724cffe9a6cf5afc882", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/LengthOfTest.java b/src/test/java/org/cactoos/scalar/LengthOfTest.java\nindex d7994ba3..e63abba2 100644\n--- a/src/test/java/org/cactoos/scalar/LengthOfTest.java\n+++ b/src/test/java/org/cactoos/scalar/LengthOfTest.java\n\n@@ -187,14 +188,27 @@ public final class LengthOfTest {\n         ).affirm();\n     }\n \n+    @Test\n+    public void lengthOfEmptyText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty string\",\n+            new LengthOf(new TextOf(\"\")).intValue(),\n+            new IsEqual<>(0)\n+        ).affirm();\n+    }\n+\n     @Test\n     public void lengthOfText() {\n+        final Number num = new LengthOf(new TextOf(\"abcd\"));\n         new Assertion<>(\n-            \"Must calculate length of empty iterator\",\n-            new LengthOf(\n-                new TextOf(\"abcd\")\n-            ).intValue(),\n-            new IsEqual<>(4)\n+            \"Must calculate length of non-empty string\",\n+            new IterableOf<Number>(\n+                num.intValue(),\n+                num.floatValue(),\n+                num.longValue(),\n+                num.doubleValue()\n+            ),\n+            new HasValues<>(4, 4f, 4L, 4d)\n         ).affirm();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTM1NQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515569355", "bodyText": "@andreoss please, fix this message, because the string isn't empty.", "author": "fabriciofx", "createdAt": "2020-11-01T03:19:15Z", "path": "src/test/java/org/cactoos/scalar/LengthOfTest.java", "diffHunk": "@@ -185,4 +186,15 @@ public void lengthOfEmptyIterator() {\n             new IsEqual<>(0)\n         ).affirm();\n     }\n+\n+    @Test\n+    public void lengthOfText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty iterator\",", "originalCommit": "eb160bf7a32160897ec3851e196598b68e57081b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTY4OQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515649689", "bodyText": "@fabriciofx Fixed", "author": "andreoss", "createdAt": "2020-11-01T17:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d788d88cd167321444874724cffe9a6cf5afc882", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/LengthOfTest.java b/src/test/java/org/cactoos/scalar/LengthOfTest.java\nindex d7994ba3..e63abba2 100644\n--- a/src/test/java/org/cactoos/scalar/LengthOfTest.java\n+++ b/src/test/java/org/cactoos/scalar/LengthOfTest.java\n\n@@ -187,14 +188,27 @@ public final class LengthOfTest {\n         ).affirm();\n     }\n \n+    @Test\n+    public void lengthOfEmptyText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty string\",\n+            new LengthOf(new TextOf(\"\")).intValue(),\n+            new IsEqual<>(0)\n+        ).affirm();\n+    }\n+\n     @Test\n     public void lengthOfText() {\n+        final Number num = new LengthOf(new TextOf(\"abcd\"));\n         new Assertion<>(\n-            \"Must calculate length of empty iterator\",\n-            new LengthOf(\n-                new TextOf(\"abcd\")\n-            ).intValue(),\n-            new IsEqual<>(4)\n+            \"Must calculate length of non-empty string\",\n+            new IterableOf<Number>(\n+                num.intValue(),\n+                num.floatValue(),\n+                num.longValue(),\n+                num.doubleValue()\n+            ),\n+            new HasValues<>(4, 4f, 4L, 4d)\n         ).affirm();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTUyNw==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515569527", "bodyText": "@andreoss please, add a test to LengthOf(...).longValue(), LengthOf(...).floatValue()and LengthOf(...).doubleValue()", "author": "fabriciofx", "createdAt": "2020-11-01T03:21:30Z", "path": "src/test/java/org/cactoos/scalar/LengthOfTest.java", "diffHunk": "@@ -185,4 +186,15 @@ public void lengthOfEmptyIterator() {\n             new IsEqual<>(0)\n         ).affirm();\n     }\n+\n+    @Test\n+    public void lengthOfText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty iterator\",\n+            new LengthOf(\n+                new TextOf(\"abcd\")\n+            ).intValue(),", "originalCommit": "eb160bf7a32160897ec3851e196598b68e57081b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTY3MQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515649671", "bodyText": "@fabriciofx I did so, but kept it in a single test. Perhaps there could be IsNumber matcher for that.", "author": "andreoss", "createdAt": "2020-11-01T17:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2ODA4Mw==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r515668083", "bodyText": "@andreoss Please, can you open an issue in cactoos-matchers suggesting something like this isNumber?", "author": "fabriciofx", "createdAt": "2020-11-01T20:29:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MzQwOA==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r517883408", "bodyText": "@fabriciofx Filed. llorllale/cactoos-matchers#207", "author": "andreoss", "createdAt": "2020-11-05T08:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MDA2MA==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r518950060", "bodyText": "@andreoss thanks!", "author": "fabriciofx", "createdAt": "2020-11-06T19:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2OTUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "d788d88cd167321444874724cffe9a6cf5afc882", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/LengthOfTest.java b/src/test/java/org/cactoos/scalar/LengthOfTest.java\nindex d7994ba3..e63abba2 100644\n--- a/src/test/java/org/cactoos/scalar/LengthOfTest.java\n+++ b/src/test/java/org/cactoos/scalar/LengthOfTest.java\n\n@@ -187,14 +188,27 @@ public final class LengthOfTest {\n         ).affirm();\n     }\n \n+    @Test\n+    public void lengthOfEmptyText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty string\",\n+            new LengthOf(new TextOf(\"\")).intValue(),\n+            new IsEqual<>(0)\n+        ).affirm();\n+    }\n+\n     @Test\n     public void lengthOfText() {\n+        final Number num = new LengthOf(new TextOf(\"abcd\"));\n         new Assertion<>(\n-            \"Must calculate length of empty iterator\",\n-            new LengthOf(\n-                new TextOf(\"abcd\")\n-            ).intValue(),\n-            new IsEqual<>(4)\n+            \"Must calculate length of non-empty string\",\n+            new IterableOf<Number>(\n+                num.intValue(),\n+                num.floatValue(),\n+                num.longValue(),\n+                num.doubleValue()\n+            ),\n+            new HasValues<>(4, 4f, 4L, 4d)\n         ).affirm();\n     }\n }\n"}}, {"oid": "d788d88cd167321444874724cffe9a6cf5afc882", "url": "https://github.com/yegor256/cactoos/commit/d788d88cd167321444874724cffe9a6cf5afc882", "message": "(#1489) Add test", "committedDate": "2020-11-01T05:31:16Z", "type": "commit"}, {"oid": "ac207da31615b92c51892852fb7ed2a332394625", "url": "https://github.com/yegor256/cactoos/commit/ac207da31615b92c51892852fb7ed2a332394625", "message": "(#1489) Suppress Qulice complain", "committedDate": "2020-11-01T06:29:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2OTUyMg==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r516569522", "bodyText": "@andreoss can we add a test with some utf8 characters that does not translate directly to one byte? :)", "author": "victornoel", "createdAt": "2020-11-03T10:37:26Z", "path": "src/test/java/org/cactoos/scalar/LengthOfTest.java", "diffHunk": "@@ -185,4 +188,28 @@ public void lengthOfEmptyIterator() {\n             new IsEqual<>(0)\n         ).affirm();\n     }\n+\n+    @Test\n+    public void lengthOfEmptyText() {\n+        new Assertion<>(\n+            \"Must calculate length of empty string\",\n+            new LengthOf(new TextOf(\"\")).intValue(),\n+            new IsEqual<>(0)\n+        ).affirm();\n+    }\n+\n+    @Test\n+    public void lengthOfText() {\n+        final Number num = new LengthOf(new TextOf(\"abcd\"));", "originalCommit": "ac207da31615b92c51892852fb7ed2a332394625", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4Mjk3NA==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r517882974", "bodyText": "@victornoel You're suggestging that LengthOf should return a character-length for Text, not a byte-length? It seems inconsistent with how Input is handled.", "author": "andreoss", "createdAt": "2020-11-05T08:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NzQ1MQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r517887451", "bodyText": "@andreoss exactly, that was a sneaky way of raising this problem in your solution, sorry about that ^^ We need to thus change the design to support both cases.\nOne possible solution is to have two classes (maybe as private inner class for now) for Input and Text and then have LengthOf delegate to them.", "author": "victornoel", "createdAt": "2020-11-05T08:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyODExOQ==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r517928119", "bodyText": "@victornoel Done. It calls asString().length() for Text now (as the issue proposes).", "author": "andreoss", "createdAt": "2020-11-05T10:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTM3Ng==", "url": "https://github.com/yegor256/cactoos/pull/1493#discussion_r519189376", "bodyText": "@andreoss hehe this was much simpler than what I had in mind :) thx", "author": "victornoel", "createdAt": "2020-11-07T15:38:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2OTUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "293b2ce860e33573ee35fa2a8b06e89a6a4e7337", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/LengthOfTest.java b/src/test/java/org/cactoos/scalar/LengthOfTest.java\nindex d14da28d..96c7b6f2 100644\n--- a/src/test/java/org/cactoos/scalar/LengthOfTest.java\n+++ b/src/test/java/org/cactoos/scalar/LengthOfTest.java\n\n@@ -198,6 +198,15 @@ public final class LengthOfTest {\n         ).affirm();\n     }\n \n+    @Test\n+    public void lengthOfUnicode() {\n+        new Assertion<>(\n+            \"Must calculate length of empty string\",\n+            new LengthOf(new TextOf(\"\u043f\u0440\u0438\u0432\u0435\u0442\")).intValue(),\n+            new IsEqual<>(12)\n+        ).affirm();\n+    }\n+\n     @Test\n     public void lengthOfText() {\n         final Number num = new LengthOf(new TextOf(\"abcd\"));\n"}}, {"oid": "293b2ce860e33573ee35fa2a8b06e89a6a4e7337", "url": "https://github.com/yegor256/cactoos/commit/293b2ce860e33573ee35fa2a8b06e89a6a4e7337", "message": "(#1489) Add test for unicode", "committedDate": "2020-11-05T09:09:13Z", "type": "commit"}, {"oid": "9f3fa117796893a53ab051fd583c78d85a3b39f2", "url": "https://github.com/yegor256/cactoos/commit/9f3fa117796893a53ab051fd583c78d85a3b39f2", "message": "(#1489) Add javadoc", "committedDate": "2020-11-05T09:09:37Z", "type": "commit"}, {"oid": "9f3fa117796893a53ab051fd583c78d85a3b39f2", "url": "https://github.com/yegor256/cactoos/commit/9f3fa117796893a53ab051fd583c78d85a3b39f2", "message": "(#1489) Add javadoc", "committedDate": "2020-11-05T09:09:37Z", "type": "forcePushed"}, {"oid": "e55c21731e7069874a54e16d5fc38a3400cef090", "url": "https://github.com/yegor256/cactoos/commit/e55c21731e7069874a54e16d5fc38a3400cef090", "message": "(#1489) Return character-length instead of byte-length", "committedDate": "2020-11-05T09:25:55Z", "type": "commit"}, {"oid": "e55c21731e7069874a54e16d5fc38a3400cef090", "url": "https://github.com/yegor256/cactoos/commit/e55c21731e7069874a54e16d5fc38a3400cef090", "message": "(#1489) Return character-length instead of byte-length", "committedDate": "2020-11-05T09:25:55Z", "type": "forcePushed"}]}