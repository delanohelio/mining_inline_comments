{"pr_number": 1332, "pr_title": "(#1300) Replace collection's Reversed by Iterator's Reversed", "pr_createdAt": "2020-03-22T10:29:48Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1332", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTY4MQ==", "url": "https://github.com/yegor256/cactoos/pull/1332#discussion_r399811681", "bodyText": "@victornoel I didn't understood this test, seems that nothing is being done... Also, could you try to put it in just one assertion?", "author": "paulodamaso", "createdAt": "2020-03-29T15:17:37Z", "path": "src/test/java/org/cactoos/iterable/ReversedTest.java", "diffHunk": "@@ -23,32 +23,102 @@\n  */\n package org.cactoos.iterable;\n \n-import org.cactoos.text.Joined;\n-import org.hamcrest.MatcherAssert;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.collection.IsEmptyIterable;\n+import org.hamcrest.core.IsEqual;\n+import org.hamcrest.core.IsNot;\n import org.junit.Test;\n-import org.llorllale.cactoos.matchers.TextHasString;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.HasSize;\n \n /**\n  * Test case for {@link Reversed}.\n  * @since 0.9\n  * @checkstyle JavadocMethodCheck (500 lines)\n+ * @checkstyle MagicNumberCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n public final class ReversedTest {\n \n     @Test\n     public void reversesIterable() {\n-        MatcherAssert.assertThat(\n-            \"Can't reverse an iterable\",\n-            new Joined(\n-                \" \",\n-                new Reversed<>(\n-                    new IterableOf<>(\n-                        \"hello\", \"world\", \"dude\"\n-                    )\n+        new Assertion<>(\n+            \"Must reverse an iterable\",\n+            new Reversed<>(\n+                new IterableOf<>(\n+                    \"h\", \"w\", \"d\"\n                 )\n             ),\n-            new TextHasString(\"dude world hello\")\n+            new IsEqual<>(new IterableOf<>(\"d\", \"w\", \"h\"))\n+        ).affirm();\n+    }\n+\n+    @Test\n+    public void iteratesMultipleTimes() {", "originalCommit": "2331e19bafe942e44212b6fb986120b1c6b49850", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMzY4Mw==", "url": "https://github.com/yegor256/cactoos/pull/1332#discussion_r399813683", "bodyText": "@paulodamaso I wanted to verify that that the iterable could be iterated multiple times, I will transform it so that it's clearer and also with only one assertion", "author": "victornoel", "createdAt": "2020-03-29T15:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyNDM4Ng==", "url": "https://github.com/yegor256/cactoos/pull/1332#discussion_r399824386", "bodyText": "@victornoel Well, I think that it was better the other way, could you please change it back?", "author": "paulodamaso", "createdAt": "2020-03-29T16:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyODM3OA==", "url": "https://github.com/yegor256/cactoos/pull/1332#discussion_r399828378", "bodyText": "@paulodamaso hehe, no problem, it's done :)", "author": "victornoel", "createdAt": "2020-03-29T17:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8cd8c86ac111dcafb7f0b77fd5077416ecae82c8", "chunk": "diff --git a/src/test/java/org/cactoos/iterable/ReversedTest.java b/src/test/java/org/cactoos/iterable/ReversedTest.java\nindex 43cdcd67..8b0b4417 100644\n--- a/src/test/java/org/cactoos/iterable/ReversedTest.java\n+++ b/src/test/java/org/cactoos/iterable/ReversedTest.java\n\n@@ -24,6 +24,8 @@\n package org.cactoos.iterable;\n \n import org.cactoos.list.ListOf;\n+import org.cactoos.scalar.LengthOf;\n+import org.cactoos.scalar.SumOf;\n import org.hamcrest.collection.IsEmptyIterable;\n import org.hamcrest.core.IsEqual;\n import org.hamcrest.core.IsNot;\n"}}, {"oid": "8cd8c86ac111dcafb7f0b77fd5077416ecae82c8", "url": "https://github.com/yegor256/cactoos/commit/8cd8c86ac111dcafb7f0b77fd5077416ecae82c8", "message": "(#1300) Replace collection's Reversed by Iterator's Reversed", "committedDate": "2020-03-29T15:48:14Z", "type": "forcePushed"}, {"oid": "4d84e8c50a9f6954ad417d10f28845df09021685", "url": "https://github.com/yegor256/cactoos/commit/4d84e8c50a9f6954ad417d10f28845df09021685", "message": "(#1300) Replace collection's Reversed by Iterator's Reversed", "committedDate": "2020-03-29T17:32:06Z", "type": "forcePushed"}, {"oid": "d49763dd98e39e874dd3e4b275c93fe27a206d0f", "url": "https://github.com/yegor256/cactoos/commit/d49763dd98e39e874dd3e4b275c93fe27a206d0f", "message": "(#1300) Replace collection's Reversed by Iterator's Reversed", "committedDate": "2020-03-30T14:22:25Z", "type": "commit"}, {"oid": "d49763dd98e39e874dd3e4b275c93fe27a206d0f", "url": "https://github.com/yegor256/cactoos/commit/d49763dd98e39e874dd3e4b275c93fe27a206d0f", "message": "(#1300) Replace collection's Reversed by Iterator's Reversed", "committedDate": "2020-03-30T14:22:25Z", "type": "forcePushed"}]}