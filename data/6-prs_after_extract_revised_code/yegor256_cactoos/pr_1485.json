{"pr_number": 1485, "pr_title": "For #1462: Introduce text.Mapped", "pr_createdAt": "2020-10-16T14:36:44Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1485", "timeline": [{"oid": "57f058b4d98d7a355703ab43b7d3954257d40d4e", "url": "https://github.com/yegor256/cactoos/commit/57f058b4d98d7a355703ab43b7d3954257d40d4e", "message": "(#1462) Add `text.Mapped`", "committedDate": "2020-10-16T14:32:56Z", "type": "commit"}, {"oid": "9e931a24890bb813ef185dcee42b5a48ba18e13a", "url": "https://github.com/yegor256/cactoos/commit/9e931a24890bb813ef185dcee42b5a48ba18e13a", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:33:30Z", "type": "commit"}, {"oid": "6615a281db0a10750fe56b974a2a4b4f9ed4cb06", "url": "https://github.com/yegor256/cactoos/commit/6615a281db0a10750fe56b974a2a4b4f9ed4cb06", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:33:38Z", "type": "commit"}, {"oid": "8996680339b6b0c6161eb60d0b05605d679ba2b3", "url": "https://github.com/yegor256/cactoos/commit/8996680339b6b0c6161eb60d0b05605d679ba2b3", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:33:47Z", "type": "commit"}, {"oid": "d6513dd19530859770b1b377e58aa25b840887dc", "url": "https://github.com/yegor256/cactoos/commit/d6513dd19530859770b1b377e58aa25b840887dc", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:33:51Z", "type": "commit"}, {"oid": "3b6ddce4976037cbbdf0bad2f5cf8ed228783982", "url": "https://github.com/yegor256/cactoos/commit/3b6ddce4976037cbbdf0bad2f5cf8ed228783982", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:33:56Z", "type": "commit"}, {"oid": "a0e1eb9c727d164db97b49a66bac6739bc377aef", "url": "https://github.com/yegor256/cactoos/commit/a0e1eb9c727d164db97b49a66bac6739bc377aef", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:34:01Z", "type": "commit"}, {"oid": "f7cbbd609636ac1e40ee3c7f461471aab2e472fe", "url": "https://github.com/yegor256/cactoos/commit/f7cbbd609636ac1e40ee3c7f461471aab2e472fe", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:34:06Z", "type": "commit"}, {"oid": "637ecf4da0e0af4360854b9302fa5889afa5e260", "url": "https://github.com/yegor256/cactoos/commit/637ecf4da0e0af4360854b9302fa5889afa5e260", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:34:11Z", "type": "commit"}, {"oid": "a5ebafd7776978a85602d1a808ad85700904e785", "url": "https://github.com/yegor256/cactoos/commit/a5ebafd7776978a85602d1a808ad85700904e785", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:34:33Z", "type": "commit"}, {"oid": "37075532097cc5dd6d3bf3a35c350674778421b5", "url": "https://github.com/yegor256/cactoos/commit/37075532097cc5dd6d3bf3a35c350674778421b5", "message": "(#1462) Use `text.Mapped`", "committedDate": "2020-10-16T14:34:39Z", "type": "commit"}, {"oid": "9b69568a3a1328b0dc3344837a322c984dd305e1", "url": "https://github.com/yegor256/cactoos/commit/9b69568a3a1328b0dc3344837a322c984dd305e1", "message": "(#1462) Remove todo", "committedDate": "2020-10-16T14:36:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDYyMg==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515244622", "bodyText": "@andreoss Fix method string.", "author": "fabriciofx", "createdAt": "2020-10-30T17:03:12Z", "path": "src/test/java/org/cactoos/text/MappedTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.text;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.TextHasString;\n+\n+/**\n+ * Tests for @{link Mapped}.\n+ *\n+ * @since 0.47\n+ */\n+final class MappedTest {\n+\n+    @Test\n+    void mapsWithFormat() {\n+        new Assertion<>(\n+            \"must apply lambda to a string\",\n+            new Mapped(\n+                s -> String.format(\"<%s>\", s),\n+                new TextOf(\"hi\")\n+            ),\n+            new TextHasString(\"<hi>\")\n+        ).affirm();\n+    }\n+\n+    @Test\n+    void maps() {\n+        new Assertion<>(\n+            \"must apply mehtod reference to a string\",", "originalCommit": "9b69568a3a1328b0dc3344837a322c984dd305e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MDgyMQ==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515360821", "bodyText": "@fabriciofx Done.", "author": "andreoss", "createdAt": "2020-10-30T20:31:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "7da56b03b5a70743fe4af05dc84eb3878bc0f948", "chunk": "diff --git a/src/test/java/org/cactoos/text/MappedTest.java b/src/test/java/org/cactoos/text/MappedTest.java\nindex 4be4e98f..054c2efc 100644\n--- a/src/test/java/org/cactoos/text/MappedTest.java\n+++ b/src/test/java/org/cactoos/text/MappedTest.java\n\n@@ -49,7 +49,7 @@ final class MappedTest {\n     @Test\n     void maps() {\n         new Assertion<>(\n-            \"must apply mehtod reference to a string\",\n+            \"must apply method reference to a string\",\n             new Mapped(\n                 String::toLowerCase,\n                 new TextOf(\"ABC\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515244899", "bodyText": "@andreoss please, add a #equals() test.", "author": "fabriciofx", "createdAt": "2020-10-30T17:03:42Z", "path": "src/test/java/org/cactoos/text/MappedTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.text;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.TextHasString;\n+\n+/**\n+ * Tests for @{link Mapped}.\n+ *\n+ * @since 0.47\n+ */\n+final class MappedTest {", "originalCommit": "9b69568a3a1328b0dc3344837a322c984dd305e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MTUyOA==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515361528", "bodyText": "@fabriciofx Why do you think Mapped should preserve equality?", "author": "andreoss", "createdAt": "2020-10-30T20:33:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0OTQ4Mw==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515449483", "bodyText": "@andreoss Some code like it new Mapped(String::toLowercase, new TextOf(\"ABC\").equals(\"abc\") is valid? If yes, then Mapped should preserve equality, right?", "author": "fabriciofx", "createdAt": "2020-10-31T03:25:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MjA1NQ==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r518582055", "bodyText": "@fabriciofx In order to do that, it has to extend TextEnvelope and use TextOf. Both seem to be unnecessary for this task.", "author": "andreoss", "createdAt": "2020-11-06T08:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MjY5Nw==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r518952697", "bodyText": "@andreoss Ok, thanks for this information!", "author": "fabriciofx", "createdAt": "2020-11-06T19:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTg2Ng==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r519189866", "bodyText": "@andreoss @fabriciofx actually all texts implementation should either implement equals themselves or indeed delegate to an implementation of text that does. So I think we need to do it either way here yes. Same with tostring and hashcode. You can add a todo if you want.", "author": "victornoel", "createdAt": "2020-11-07T15:44:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ4NjgwOQ==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r519486809", "bodyText": "@victornoel Done. It uses TextOf now.", "author": "andreoss", "createdAt": "2020-11-08T22:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDg5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7da56b03b5a70743fe4af05dc84eb3878bc0f948", "chunk": "diff --git a/src/test/java/org/cactoos/text/MappedTest.java b/src/test/java/org/cactoos/text/MappedTest.java\nindex 4be4e98f..054c2efc 100644\n--- a/src/test/java/org/cactoos/text/MappedTest.java\n+++ b/src/test/java/org/cactoos/text/MappedTest.java\n\n@@ -49,7 +49,7 @@ final class MappedTest {\n     @Test\n     void maps() {\n         new Assertion<>(\n-            \"must apply mehtod reference to a string\",\n+            \"must apply method reference to a string\",\n             new Mapped(\n                 String::toLowerCase,\n                 new TextOf(\"ABC\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NTQ3MA==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515245470", "bodyText": "@andreoss Change it to TextIs", "author": "fabriciofx", "createdAt": "2020-10-30T17:04:33Z", "path": "src/test/java/org/cactoos/text/MappedTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.text;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.TextHasString;\n+\n+/**\n+ * Tests for @{link Mapped}.\n+ *\n+ * @since 0.47\n+ */\n+final class MappedTest {\n+\n+    @Test\n+    void mapsWithFormat() {\n+        new Assertion<>(\n+            \"must apply lambda to a string\",\n+            new Mapped(\n+                s -> String.format(\"<%s>\", s),\n+                new TextOf(\"hi\")\n+            ),\n+            new TextHasString(\"<hi>\")", "originalCommit": "9b69568a3a1328b0dc3344837a322c984dd305e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MDMxOQ==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515360319", "bodyText": "@fabriciofx Done. Why do we have TextHasString?", "author": "andreoss", "createdAt": "2020-10-30T20:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NTQ3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7da56b03b5a70743fe4af05dc84eb3878bc0f948", "chunk": "diff --git a/src/test/java/org/cactoos/text/MappedTest.java b/src/test/java/org/cactoos/text/MappedTest.java\nindex 4be4e98f..054c2efc 100644\n--- a/src/test/java/org/cactoos/text/MappedTest.java\n+++ b/src/test/java/org/cactoos/text/MappedTest.java\n\n@@ -49,7 +49,7 @@ final class MappedTest {\n     @Test\n     void maps() {\n         new Assertion<>(\n-            \"must apply mehtod reference to a string\",\n+            \"must apply method reference to a string\",\n             new Mapped(\n                 String::toLowerCase,\n                 new TextOf(\"ABC\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NTY3MA==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515245670", "bodyText": "@andreoss Change here to TextIs", "author": "fabriciofx", "createdAt": "2020-10-30T17:04:47Z", "path": "src/test/java/org/cactoos/text/MappedTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.text;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.TextHasString;\n+\n+/**\n+ * Tests for @{link Mapped}.\n+ *\n+ * @since 0.47\n+ */\n+final class MappedTest {\n+\n+    @Test\n+    void mapsWithFormat() {\n+        new Assertion<>(\n+            \"must apply lambda to a string\",\n+            new Mapped(\n+                s -> String.format(\"<%s>\", s),\n+                new TextOf(\"hi\")\n+            ),\n+            new TextHasString(\"<hi>\")\n+        ).affirm();\n+    }\n+\n+    @Test\n+    void maps() {\n+        new Assertion<>(\n+            \"must apply mehtod reference to a string\",\n+            new Mapped(\n+                String::toLowerCase,\n+                new TextOf(\"ABC\")\n+            ),\n+            new TextHasString(\"abc\")", "originalCommit": "9b69568a3a1328b0dc3344837a322c984dd305e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MDM1OA==", "url": "https://github.com/yegor256/cactoos/pull/1485#discussion_r515360358", "bodyText": "@fabriciofx Done.", "author": "andreoss", "createdAt": "2020-10-30T20:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NTY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7da56b03b5a70743fe4af05dc84eb3878bc0f948", "chunk": "diff --git a/src/test/java/org/cactoos/text/MappedTest.java b/src/test/java/org/cactoos/text/MappedTest.java\nindex 4be4e98f..054c2efc 100644\n--- a/src/test/java/org/cactoos/text/MappedTest.java\n+++ b/src/test/java/org/cactoos/text/MappedTest.java\n\n@@ -49,7 +49,7 @@ final class MappedTest {\n     @Test\n     void maps() {\n         new Assertion<>(\n-            \"must apply mehtod reference to a string\",\n+            \"must apply method reference to a string\",\n             new Mapped(\n                 String::toLowerCase,\n                 new TextOf(\"ABC\")\n"}}, {"oid": "7da56b03b5a70743fe4af05dc84eb3878bc0f948", "url": "https://github.com/yegor256/cactoos/commit/7da56b03b5a70743fe4af05dc84eb3878bc0f948", "message": "(#1462) Fix typo", "committedDate": "2020-10-30T20:23:59Z", "type": "commit"}, {"oid": "62669b5b451397399b2e3de7e4124c6e1a41ab1d", "url": "https://github.com/yegor256/cactoos/commit/62669b5b451397399b2e3de7e4124c6e1a41ab1d", "message": "(#1462) Use `TextIs' over `TextHasString'", "committedDate": "2020-10-30T20:27:02Z", "type": "commit"}, {"oid": "397ac514d7b5fedd7e7fbfe32f2d1d316c7e0ab0", "url": "https://github.com/yegor256/cactoos/commit/397ac514d7b5fedd7e7fbfe32f2d1d316c7e0ab0", "message": "(#1462) Remove unused import", "committedDate": "2020-10-30T20:35:17Z", "type": "commit"}, {"oid": "92ce712df4d820bf0cf3a955bf0fb7a05ae31f30", "url": "https://github.com/yegor256/cactoos/commit/92ce712df4d820bf0cf3a955bf0fb7a05ae31f30", "message": "(#1462) Use `TextOf' in order to provide `equals' & `hashCode'", "committedDate": "2020-11-08T22:37:20Z", "type": "commit"}, {"oid": "92ce712df4d820bf0cf3a955bf0fb7a05ae31f30", "url": "https://github.com/yegor256/cactoos/commit/92ce712df4d820bf0cf3a955bf0fb7a05ae31f30", "message": "(#1462) Use `TextOf' in order to provide `equals' & `hashCode'", "committedDate": "2020-11-08T22:37:20Z", "type": "forcePushed"}]}