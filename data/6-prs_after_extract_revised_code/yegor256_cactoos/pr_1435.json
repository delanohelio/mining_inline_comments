{"pr_number": 1435, "pr_title": "#1349: Continue of refactoring of `ScalarOf`", "pr_createdAt": "2020-09-04T19:58:41Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1435", "timeline": [{"oid": "afa22c0a6c47c70aa15cd1de55c628e0c5642a60", "url": "https://github.com/yegor256/cactoos/commit/afa22c0a6c47c70aa15cd1de55c628e0c5642a60", "message": "(#1349) Add ScalarOfCallable", "committedDate": "2020-09-04T14:01:52Z", "type": "commit"}, {"oid": "84467b17c23f68d66938cdb0adbf4bf1426f5d50", "url": "https://github.com/yegor256/cactoos/commit/84467b17c23f68d66938cdb0adbf4bf1426f5d50", "message": "(#1349) Add ScalarOfSupplier", "committedDate": "2020-09-04T14:02:17Z", "type": "commit"}, {"oid": "1cc63f0658668e14e1d8d829482f5b0ef249506b", "url": "https://github.com/yegor256/cactoos/commit/1cc63f0658668e14e1d8d829482f5b0ef249506b", "message": "(#1349) Use ScalarOfCallable instead of ScalarOf", "committedDate": "2020-09-04T14:02:38Z", "type": "commit"}, {"oid": "8dd51c05dc59f06680545e052a9f17a3f3fc5272", "url": "https://github.com/yegor256/cactoos/commit/8dd51c05dc59f06680545e052a9f17a3f3fc5272", "message": "(#1349) Remove ScalarOf", "committedDate": "2020-09-04T14:38:39Z", "type": "commit"}, {"oid": "c084727e0e31cfbe09cdbb8599f0e77ae077de5c", "url": "https://github.com/yegor256/cactoos/commit/c084727e0e31cfbe09cdbb8599f0e77ae077de5c", "message": "(#1349) Qulice complience", "committedDate": "2020-09-04T19:41:08Z", "type": "commit"}, {"oid": "bf417738cce57e7f2f55a14c4f4b495b89b848f6", "url": "https://github.com/yegor256/cactoos/commit/bf417738cce57e7f2f55a14c4f4b495b89b848f6", "message": "Merge remote-tracking branch 'yegor256/master' into issue-1349", "committedDate": "2020-09-04T19:49:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxNDA4NQ==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484014085", "bodyText": "@andreoss please, add more detailed description here.", "author": "fabriciofx", "createdAt": "2020-09-06T03:03:26Z", "path": "src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.scalar;\n+\n+import org.cactoos.func.CallableOf;\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.ScalarHasValue;\n+\n+/**\n+ * Test case for {@link ScalarOfCallable}.\n+ *\n+ * @since 0.47\n+ */\n+final class ScalarOfCallableTest {\n+    @Test\n+    void worksWithCallable() {\n+        final Object obj = new Object();\n+        new Assertion<>(\n+            \"must hold the same value\",", "originalCommit": "bf417738cce57e7f2f55a14c4f4b495b89b848f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MjAwMQ==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484072001", "bodyText": "@fabriciofx Done.", "author": "andreoss", "createdAt": "2020-09-06T13:44:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxNDA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java b/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\nindex 154a2266..277e6be5 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\n\n@@ -38,7 +38,7 @@ final class ScalarOfCallableTest {\n     void worksWithCallable() {\n         final Object obj = new Object();\n         new Assertion<>(\n-            \"must hold the same value\",\n+            \"must hold the same value as given by callable\",\n             new ScalarOfCallable<>(new CallableOf<>(new Constant<>(obj))),\n             new ScalarHasValue<>(obj)\n         ).affirm();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxNDA5Nw==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484014097", "bodyText": "@andreoss please, add more detailed description here.", "author": "fabriciofx", "createdAt": "2020-09-06T03:03:37Z", "path": "src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.scalar;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.ScalarHasValue;\n+\n+/**\n+ * Test case for {@link ScalarOfSupplier}.\n+ * @since 0.47\n+ */\n+final class ScalarOfSupplierTest {\n+\n+    @Test\n+    void createsScalarFromSupplier() {\n+        final Object obj = new Object();\n+        new Assertion<>(\n+            \"must hold the same value\",", "originalCommit": "bf417738cce57e7f2f55a14c4f4b495b89b848f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MTk4Mg==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484071982", "bodyText": "@fabriciofx Done.", "author": "andreoss", "createdAt": "2020-09-06T13:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxNDA5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java b/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\nindex ffa80ddb..9e956cb1 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\n\n@@ -37,7 +37,7 @@ final class ScalarOfSupplierTest {\n     void createsScalarFromSupplier() {\n         final Object obj = new Object();\n         new Assertion<>(\n-            \"must hold the same value\",\n+            \"must hold the same value as given by supplier\",\n             new ScalarOfSupplier<>(() -> obj),\n             new ScalarHasValue<>(obj)\n         ).affirm();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyMDU3Mg==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484020572", "bodyText": "@andreoss makes sense add test for exception?", "author": "fabriciofx", "createdAt": "2020-09-06T04:41:37Z", "path": "src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.scalar;\n+\n+import org.cactoos.func.CallableOf;\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.ScalarHasValue;\n+\n+/**\n+ * Test case for {@link ScalarOfCallable}.\n+ *\n+ * @since 0.47\n+ */\n+final class ScalarOfCallableTest {", "originalCommit": "bf417738cce57e7f2f55a14c4f4b495b89b848f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MTg1MQ==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484071851", "bodyText": "@fabriciofx I would add such test to ScalarEnvelopeTest rather, and avoid having two very similar tests", "author": "andreoss", "createdAt": "2020-09-06T13:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyMDU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java b/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\nindex 154a2266..277e6be5 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarOfCallableTest.java\n\n@@ -38,7 +38,7 @@ final class ScalarOfCallableTest {\n     void worksWithCallable() {\n         final Object obj = new Object();\n         new Assertion<>(\n-            \"must hold the same value\",\n+            \"must hold the same value as given by callable\",\n             new ScalarOfCallable<>(new CallableOf<>(new Constant<>(obj))),\n             new ScalarHasValue<>(obj)\n         ).affirm();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyMDU4NA==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484020584", "bodyText": "@andreoss makes sense add test for exception?", "author": "fabriciofx", "createdAt": "2020-09-06T04:41:44Z", "path": "src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2017-2020 Yegor Bugayenko\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.cactoos.scalar;\n+\n+import org.junit.jupiter.api.Test;\n+import org.llorllale.cactoos.matchers.Assertion;\n+import org.llorllale.cactoos.matchers.ScalarHasValue;\n+\n+/**\n+ * Test case for {@link ScalarOfSupplier}.\n+ * @since 0.47\n+ */\n+final class ScalarOfSupplierTest {", "originalCommit": "bf417738cce57e7f2f55a14c4f4b495b89b848f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MjMwNA==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484072304", "bodyText": "@fabriciofx Added a test in ScalarEnvelopeTest", "author": "andreoss", "createdAt": "2020-09-06T13:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyMDU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java b/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\nindex ffa80ddb..9e956cb1 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarOfSupplierTest.java\n\n@@ -37,7 +37,7 @@ final class ScalarOfSupplierTest {\n     void createsScalarFromSupplier() {\n         final Object obj = new Object();\n         new Assertion<>(\n-            \"must hold the same value\",\n+            \"must hold the same value as given by supplier\",\n             new ScalarOfSupplier<>(() -> obj),\n             new ScalarHasValue<>(obj)\n         ).affirm();\n"}}, {"oid": "23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "url": "https://github.com/yegor256/cactoos/commit/23b3985b92d7eb4b0f742b5aa1cc0d9e8b298287", "message": "(#1349) More descriptive messages", "committedDate": "2020-09-06T13:46:05Z", "type": "commit"}, {"oid": "c601acb3e30e524a9ae01734998ceb47e62badb8", "url": "https://github.com/yegor256/cactoos/commit/c601acb3e30e524a9ae01734998ceb47e62badb8", "message": "(#1349) Add extra test for Exception", "committedDate": "2020-09-06T13:49:08Z", "type": "commit"}, {"oid": "50718e6270010fd343c6577802a448ab2b67d5c6", "url": "https://github.com/yegor256/cactoos/commit/50718e6270010fd343c6577802a448ab2b67d5c6", "message": "Merge remote-tracking branch 'yegor256/master' into issue-1349", "committedDate": "2020-09-06T19:36:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwOTM1Ng==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484109356", "bodyText": "@andreoss I'm sorry, but I haven't see this \"ok\" twice. Can you move them to a single local variable?", "author": "fabriciofx", "createdAt": "2020-09-06T20:13:18Z", "path": "src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java", "diffHunk": "@@ -45,6 +47,22 @@ public void envelopeDelegatesCalls() {\n         ).affirm();\n     }\n \n+    @Test\n+    public void propagatesException() {\n+        new Assertion<>(\n+            \"must not alter the exception thrown by original Scalar\",\n+            new ScalarEnvelope<Integer>(\n+                () -> {\n+                    throw new UnsupportedOperationException(\"ok\");", "originalCommit": "50718e6270010fd343c6577802a448ab2b67d5c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMjk1Nw==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484112957", "bodyText": "@fabriciofx Done.", "author": "andreoss", "createdAt": "2020-09-06T20:54:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwOTM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "308ea2e88fcd19788afa09eb7b24318017e9de29", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java b/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\nindex 833ff7b8..cff63f13 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\n\n@@ -49,15 +50,16 @@ public final class ScalarEnvelopeTest {\n \n     @Test\n     public void propagatesException() {\n+        final String message = \"ok\";\n+        final Scalar<Integer> scalar = () -> {\n+            throw new UnsupportedOperationException(message);\n+        };\n         new Assertion<>(\n             \"must not alter the exception thrown by original Scalar\",\n-            new ScalarEnvelope<Integer>(\n-                () -> {\n-                    throw new UnsupportedOperationException(\"ok\");\n-                }) {\n+            new ScalarEnvelope<Integer>(scalar) {\n             },\n             new Throws<>(\n-                new IsEqual<>(\"ok\"),\n+                new IsEqual<>(message),\n                 UnsupportedOperationException.class\n             )\n         ).affirm();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwOTQxNQ==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484109415", "bodyText": "@andreoss Is there many { here, isn't it? Can you check it and correct the ident?", "author": "fabriciofx", "createdAt": "2020-09-06T20:14:12Z", "path": "src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java", "diffHunk": "@@ -45,6 +47,22 @@ public void envelopeDelegatesCalls() {\n         ).affirm();\n     }\n \n+    @Test\n+    public void propagatesException() {\n+        new Assertion<>(\n+            \"must not alter the exception thrown by original Scalar\",\n+            new ScalarEnvelope<Integer>(\n+                () -> {\n+                    throw new UnsupportedOperationException(\"ok\");\n+                }) {", "originalCommit": "50718e6270010fd343c6577802a448ab2b67d5c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMjk1MQ==", "url": "https://github.com/yegor256/cactoos/pull/1435#discussion_r484112951", "bodyText": "@fabriciofx Extracted parameter to variable", "author": "andreoss", "createdAt": "2020-09-06T20:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwOTQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "308ea2e88fcd19788afa09eb7b24318017e9de29", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java b/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\nindex 833ff7b8..cff63f13 100644\n--- a/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\n+++ b/src/test/java/org/cactoos/scalar/ScalarEnvelopeTest.java\n\n@@ -49,15 +50,16 @@ public final class ScalarEnvelopeTest {\n \n     @Test\n     public void propagatesException() {\n+        final String message = \"ok\";\n+        final Scalar<Integer> scalar = () -> {\n+            throw new UnsupportedOperationException(message);\n+        };\n         new Assertion<>(\n             \"must not alter the exception thrown by original Scalar\",\n-            new ScalarEnvelope<Integer>(\n-                () -> {\n-                    throw new UnsupportedOperationException(\"ok\");\n-                }) {\n+            new ScalarEnvelope<Integer>(scalar) {\n             },\n             new Throws<>(\n-                new IsEqual<>(\"ok\"),\n+                new IsEqual<>(message),\n                 UnsupportedOperationException.class\n             )\n         ).affirm();\n"}}, {"oid": "308ea2e88fcd19788afa09eb7b24318017e9de29", "url": "https://github.com/yegor256/cactoos/commit/308ea2e88fcd19788afa09eb7b24318017e9de29", "message": "(#1349) Extract variables", "committedDate": "2020-09-06T20:49:02Z", "type": "commit"}, {"oid": "879e3bece94174b40794f70c56c2e75570155855", "url": "https://github.com/yegor256/cactoos/commit/879e3bece94174b40794f70c56c2e75570155855", "message": "Revert \"(#1349) Remove ScalarOf\"\n\nThis reverts commit 8dd51c05dc59f06680545e052a9f17a3f3fc5272.", "committedDate": "2020-09-07T11:34:47Z", "type": "commit"}, {"oid": "3ac12191ef362c6d15044f02a8a0cc4cd05a9e9f", "url": "https://github.com/yegor256/cactoos/commit/3ac12191ef362c6d15044f02a8a0cc4cd05a9e9f", "message": "(#1349) Use lambda directly", "committedDate": "2020-09-07T11:46:03Z", "type": "commit"}, {"oid": "465f3704367df56b1536fccf392845f77db375bc", "url": "https://github.com/yegor256/cactoos/commit/465f3704367df56b1536fccf392845f77db375bc", "message": "(#1349) Remove CallableOf. Use plain lambda instead", "committedDate": "2020-09-07T14:58:08Z", "type": "commit"}, {"oid": "5870d73c22e09fb8425c49d5089433fe7537f561", "url": "https://github.com/yegor256/cactoos/commit/5870d73c22e09fb8425c49d5089433fe7537f561", "message": "(#1349) Fix test", "committedDate": "2020-09-07T15:24:47Z", "type": "commit"}]}