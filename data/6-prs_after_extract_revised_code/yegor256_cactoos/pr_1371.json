{"pr_number": 1371, "pr_title": "#1367: Scalar - Replacing usage of MatcherAssert.assertThat", "pr_createdAt": "2020-05-03T02:26:19Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1371", "timeline": [{"oid": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "url": "https://github.com/yegor256/cactoos/commit/ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "message": "Replacing usage of MatcherAssert.assertThat", "committedDate": "2020-05-03T02:23:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Njc4Mw==", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419076783", "bodyText": "@marceloamadeu can you replace all those new BoofOf(xxx).value() with new BoofOf(xxx) and use ScalarHasValue as the matcher?", "author": "victornoel", "createdAt": "2020-05-03T09:39:36Z", "path": "src/test/java/org/cactoos/scalar/BoolOfTest.java", "diffHunk": "@@ -37,28 +37,28 @@\n \n     @Test\n     public void trueTest() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't parse 'true' string\",\n+        new Assertion<>(\n+            \"Must be parsed string 'true'\",\n             new BoolOf(\"true\").value(),\n-            Matchers.equalTo(true)\n-        );\n+            new IsEqual<>(true)", "originalCommit": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7016e724867abd9d391bfa568d7f040eb36b7404", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/BoolOfTest.java b/src/test/java/org/cactoos/scalar/BoolOfTest.java\nindex e9cf9fdc..c6e08f1a 100644\n--- a/src/test/java/org/cactoos/scalar/BoolOfTest.java\n+++ b/src/test/java/org/cactoos/scalar/BoolOfTest.java\n\n@@ -39,8 +39,8 @@ public final class BoolOfTest {\n     public void trueTest() throws Exception {\n         new Assertion<>(\n             \"Must be parsed string 'true'\",\n-            new BoolOf(\"true\").value(),\n-            new IsEqual<>(true)\n+            new BoolOf(\"true\"),\n+            new ScalarHasValue<>(true)\n         ).affirm();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3NzE0OA==", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077148", "bodyText": "@marceloamadeu same here with ScalarHasValue", "author": "victornoel", "createdAt": "2020-05-03T09:42:21Z", "path": "src/test/java/org/cactoos/scalar/ConstantTest.java", "diffHunk": "@@ -37,20 +38,20 @@\n     @Test\n     public void returnsGivenValue() throws Exception {\n         final String value = \"Hello World\";\n-        MatcherAssert.assertThat(\n-            \"Can't return given value\",\n+        new Assertion<>(\n+            \"Must return given value\",\n             new Constant<>(value).value(),\n-            Matchers.equalTo(value)\n-        );\n+            new IsEqual<>(value)", "originalCommit": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7016e724867abd9d391bfa568d7f040eb36b7404", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/ConstantTest.java b/src/test/java/org/cactoos/scalar/ConstantTest.java\nindex 47440d93..b98103d2 100644\n--- a/src/test/java/org/cactoos/scalar/ConstantTest.java\n+++ b/src/test/java/org/cactoos/scalar/ConstantTest.java\n\n@@ -40,8 +39,8 @@ public final class ConstantTest {\n         final String value = \"Hello World\";\n         new Assertion<>(\n             \"Must return given value\",\n-            new Constant<>(value).value(),\n-            new IsEqual<>(value)\n+            new Constant<>(value),\n+            new ScalarHasValue<>(value)\n         ).affirm();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Nzc0Ng==", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077746", "bodyText": "@marceloamadeu here too", "author": "victornoel", "createdAt": "2020-05-03T09:47:39Z", "path": "src/test/java/org/cactoos/scalar/EqualsTest.java", "diffHunk": "@@ -37,50 +37,50 @@\n \n     @Test\n     public void compareEquals() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't compare if two integers are equals\",\n+        new Assertion<>(\n+            \"Must compare if two integers are equals\",\n             new Equals<>(\n                 () -> Integer.valueOf(1),\n                 () -> Integer.valueOf(1)\n             ).value(),\n-            Matchers.equalTo(true)\n-        );\n+            new IsEqual<>(true)", "originalCommit": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7016e724867abd9d391bfa568d7f040eb36b7404", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/EqualsTest.java b/src/test/java/org/cactoos/scalar/EqualsTest.java\nindex d368a2b1..b97b2782 100644\n--- a/src/test/java/org/cactoos/scalar/EqualsTest.java\n+++ b/src/test/java/org/cactoos/scalar/EqualsTest.java\n\n@@ -42,8 +42,8 @@ public final class EqualsTest {\n             new Equals<>(\n                 () -> Integer.valueOf(1),\n                 () -> Integer.valueOf(1)\n-            ).value(),\n-            new IsEqual<>(true)\n+            ),\n+            new ScalarHasValue<>(true)\n         ).affirm();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA3Nzg0OQ==", "url": "https://github.com/yegor256/cactoos/pull/1371#discussion_r419077849", "bodyText": "@marceloamadeu here too", "author": "victornoel", "createdAt": "2020-05-03T09:48:42Z", "path": "src/test/java/org/cactoos/scalar/FoldedTest.java", "diffHunk": "@@ -39,29 +39,29 @@\n \n     @Test\n     public void skipIterable() throws Exception {\n-        MatcherAssert.assertThat(\n-            \"Can't fold elements in iterable\",\n+        new Assertion<>(\n+            \"Must fold elements in iterable\",\n             new Folded<>(\n                 0L, (first, second) -> first + second,\n                 new HeadOf<>(\n                     10,\n                     new RangeOf<>(0L, Long.MAX_VALUE, value -> ++value)\n                 )\n             ).value(),\n-            Matchers.equalTo(45L)\n-        );\n+            new IsEqual<>(45L)", "originalCommit": "ff77a3ace39ef3fc28a4c2515d58e1779ae891ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7016e724867abd9d391bfa568d7f040eb36b7404", "chunk": "diff --git a/src/test/java/org/cactoos/scalar/FoldedTest.java b/src/test/java/org/cactoos/scalar/FoldedTest.java\nindex 39287cdc..d5dd232e 100644\n--- a/src/test/java/org/cactoos/scalar/FoldedTest.java\n+++ b/src/test/java/org/cactoos/scalar/FoldedTest.java\n\n@@ -47,8 +48,8 @@ public final class FoldedTest {\n                     10,\n                     new RangeOf<>(0L, Long.MAX_VALUE, value -> ++value)\n                 )\n-            ).value(),\n-            new IsEqual<>(45L)\n+            ),\n+            new ScalarHasValue<>(45L)\n         ).affirm();\n     }\n \n"}}, {"oid": "3f0a01df9f28e3891830967583363ac02aa224d4", "url": "https://github.com/yegor256/cactoos/commit/3f0a01df9f28e3891830967583363ac02aa224d4", "message": "Merge remote-tracking branch 'upstream/master' into 1367", "committedDate": "2020-05-05T00:42:12Z", "type": "commit"}, {"oid": "7016e724867abd9d391bfa568d7f040eb36b7404", "url": "https://github.com/yegor256/cactoos/commit/7016e724867abd9d391bfa568d7f040eb36b7404", "message": "Replaced IsEqual with ScalarHasValue and add todo", "committedDate": "2020-05-05T01:34:25Z", "type": "commit"}, {"oid": "408b6b5eda44749d6177907b2339a8b7b51054ee", "url": "https://github.com/yegor256/cactoos/commit/408b6b5eda44749d6177907b2339a8b7b51054ee", "message": "Todo corrections", "committedDate": "2020-05-05T01:56:59Z", "type": "commit"}, {"oid": "a5b3326acd43b6982ecfc58fd29fae625e6b9c04", "url": "https://github.com/yegor256/cactoos/commit/a5b3326acd43b6982ecfc58fd29fae625e6b9c04", "message": "Todo corrections", "committedDate": "2020-05-05T02:40:17Z", "type": "commit"}]}