{"pr_number": 2957, "pr_title": "Rewrite ttml conversion", "pr_createdAt": "2020-01-14T03:28:31Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/2957", "timeline": [{"oid": "42ec6f0810332904fbb22d1d3dd87a8ce442c655", "url": "https://github.com/TeamNewPipe/NewPipe/commit/42ec6f0810332904fbb22d1d3dd87a8ce442c655", "message": "ttml to srt conversion\nrewrite SubtitleConverter (use JSoup library instead, remove unused methods)", "committedDate": "2020-01-14T03:04:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI1MTUxOA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/2957#discussion_r366251518", "bodyText": "I guess this one is faster.\n    private final Charset charset = StandardCharsets.UTF_8;", "author": "TobiGr", "createdAt": "2020-01-14T10:12:01Z", "path": "app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.schabi.newpipe.streams;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+import org.jsoup.nodes.TextNode;\n+import org.jsoup.parser.Parser;\n+import org.jsoup.select.Elements;\n+import org.schabi.newpipe.streams.io.SharpStream;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.text.ParseException;\n+\n+/**\n+ * @author kapodamy\n+ */\n+public class SrtFromTtmlWriter {\n+    private static final String NEW_LINE = \"\\r\\n\";\n+\n+    private SharpStream out;\n+    private boolean ignoreEmptyFrames;\n+    private final Charset charset = Charset.forName(\"utf-8\");", "originalCommit": "42ec6f0810332904fbb22d1d3dd87a8ce442c655", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "845767e2f8f62dc34452e54723a2dd3670c93ff7", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\nindex 75e16edad..696f24d05 100644\n--- a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n+++ b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n\n@@ -22,7 +22,7 @@ public class SrtFromTtmlWriter {\n \n     private SharpStream out;\n     private boolean ignoreEmptyFrames;\n-    private final Charset charset = Charset.forName(\"utf-8\");\n+    private final Charset charset = StandardCharsets.UTF_8;\n \n     private int frameIndex = 0;\n \n"}}, {"oid": "845767e2f8f62dc34452e54723a2dd3670c93ff7", "url": "https://github.com/TeamNewPipe/NewPipe/commit/845767e2f8f62dc34452e54723a2dd3670c93ff7", "message": "StandardCharsets.UTF_8 instead of Charset.forName(\"utf-8\")", "committedDate": "2020-01-18T03:43:38Z", "type": "commit"}, {"oid": "ed18466c3b45817bf93fef738f1e870e2ede5b9d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/ed18466c3b45817bf93fef738f1e870e2ede5b9d", "message": "Merge branch 'dev' into subtitles", "committedDate": "2020-01-18T03:35:48Z", "type": "commit"}, {"oid": "a2d3e2c7e0799fbc9fba717d7cc586dbf63ac241", "url": "https://github.com/TeamNewPipe/NewPipe/commit/a2d3e2c7e0799fbc9fba717d7cc586dbf63ac241", "message": "2 typo fixup\n* add missing namespace of StandardCharsets\n* use an unused constructor argument", "committedDate": "2020-01-18T04:10:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzNjcwNQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/2957#discussion_r368436705", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .replace('.', ',');// Str uses comma as decimal separator\n          \n          \n            \n                            .replace('.', ',');// Srt uses comma as decimal separator", "author": "TobiGr", "createdAt": "2020-01-20T09:15:01Z", "path": "app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.schabi.newpipe.streams;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+import org.jsoup.nodes.TextNode;\n+import org.jsoup.parser.Parser;\n+import org.jsoup.select.Elements;\n+import org.schabi.newpipe.streams.io.SharpStream;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * @author kapodamy\n+ */\n+public class SrtFromTtmlWriter {\n+    private static final String NEW_LINE = \"\\r\\n\";\n+\n+    private SharpStream out;\n+    private boolean ignoreEmptyFrames;\n+    private final Charset charset = StandardCharsets.UTF_8;\n+\n+    private int frameIndex = 0;\n+\n+    public SrtFromTtmlWriter(SharpStream out, boolean ignoreEmptyFrames) {\n+        this.out = out;\n+        this.ignoreEmptyFrames = ignoreEmptyFrames;\n+    }\n+\n+    private static String getTimestamp(Element frame, String attr) {\n+        return frame\n+                .attr(attr)\n+                .replace('.', ',');// Str uses comma as decimal separator", "originalCommit": "a2d3e2c7e0799fbc9fba717d7cc586dbf63ac241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afc362d2b613773df1896dbb1a3f6179f2d7beb6", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\nindex e20b06352..6f1cceeed 100644\n--- a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n+++ b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n\n@@ -34,7 +34,7 @@ public class SrtFromTtmlWriter {\n     private static String getTimestamp(Element frame, String attr) {\n         return frame\n                 .attr(attr)\n-                .replace('.', ',');// Str uses comma as decimal separator\n+                .replace('.', ',');// SRT subtitles uses comma as decimal separator\n     }\n \n     private void writeFrame(String begin, String end, StringBuilder text) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzNzYzMg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/2957#discussion_r368437632", "bodyText": "Just to increase readability.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Elements paragraph_list = doc.select(\"body>div>p\");\n          \n          \n            \n                    Elements paragraph_list = doc.select(\"body > div > p\");", "author": "TobiGr", "createdAt": "2020-01-20T09:16:58Z", "path": "app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.schabi.newpipe.streams;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+import org.jsoup.nodes.TextNode;\n+import org.jsoup.parser.Parser;\n+import org.jsoup.select.Elements;\n+import org.schabi.newpipe.streams.io.SharpStream;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * @author kapodamy\n+ */\n+public class SrtFromTtmlWriter {\n+    private static final String NEW_LINE = \"\\r\\n\";\n+\n+    private SharpStream out;\n+    private boolean ignoreEmptyFrames;\n+    private final Charset charset = StandardCharsets.UTF_8;\n+\n+    private int frameIndex = 0;\n+\n+    public SrtFromTtmlWriter(SharpStream out, boolean ignoreEmptyFrames) {\n+        this.out = out;\n+        this.ignoreEmptyFrames = ignoreEmptyFrames;\n+    }\n+\n+    private static String getTimestamp(Element frame, String attr) {\n+        return frame\n+                .attr(attr)\n+                .replace('.', ',');// Str uses comma as decimal separator\n+    }\n+\n+    private void writeFrame(String begin, String end, StringBuilder text) throws IOException {\n+        writeString(String.valueOf(frameIndex++));\n+        writeString(NEW_LINE);\n+        writeString(begin);\n+        writeString(\" --> \");\n+        writeString(end);\n+        writeString(NEW_LINE);\n+        writeString(text.toString());\n+        writeString(NEW_LINE);\n+        writeString(NEW_LINE);\n+    }\n+\n+    private void writeString(String text) throws IOException {\n+        out.write(text.getBytes(charset));\n+    }\n+\n+    public void build(SharpStream ttml) throws IOException {\n+        /*\n+         * TTML parser with BASIC support\n+         * multiple CUE is not supported\n+         * styling is not supported\n+         * tag timestamps (in auto-generated subtitles) are not supported, maybe in the future\n+         * also TimestampTagOption enum is not applicable\n+         * Language parsing is not supported\n+         */\n+\n+        // parse XML\n+        byte[] buffer = new byte[(int) ttml.available()];\n+        ttml.read(buffer);\n+        Document doc = Jsoup.parse(new ByteArrayInputStream(buffer), \"UTF-8\", \"\", Parser.xmlParser());\n+\n+        StringBuilder text = new StringBuilder(128);\n+        Elements paragraph_list = doc.select(\"body>div>p\");", "originalCommit": "a2d3e2c7e0799fbc9fba717d7cc586dbf63ac241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afc362d2b613773df1896dbb1a3f6179f2d7beb6", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\nindex e20b06352..6f1cceeed 100644\n--- a/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n+++ b/app/src/main/java/org/schabi/newpipe/streams/SrtFromTtmlWriter.java\n\n@@ -34,7 +34,7 @@ public class SrtFromTtmlWriter {\n     private static String getTimestamp(Element frame, String attr) {\n         return frame\n                 .attr(attr)\n-                .replace('.', ',');// Str uses comma as decimal separator\n+                .replace('.', ',');// SRT subtitles uses comma as decimal separator\n     }\n \n     private void writeFrame(String begin, String end, StringBuilder text) throws IOException {\n"}}, {"oid": "afc362d2b613773df1896dbb1a3f6179f2d7beb6", "url": "https://github.com/TeamNewPipe/NewPipe/commit/afc362d2b613773df1896dbb1a3f6179f2d7beb6", "message": "readability changes", "committedDate": "2020-01-21T02:33:30Z", "type": "commit"}, {"oid": "b8f726153f2e5b71c1d2bd1ecec23ca749bbd4fb", "url": "https://github.com/TeamNewPipe/NewPipe/commit/b8f726153f2e5b71c1d2bd1ecec23ca749bbd4fb", "message": "Merge branch 'dev' into subtitles", "committedDate": "2020-01-21T02:23:51Z", "type": "commit"}]}